/* Generated code for Python module 'youtube_dl.extractor.extractors'
 * created by Nuitka version 0.6.8.4
 *
 * This code is in part copyright 2020 Kay Hayen.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "nuitka/prelude.h"

#include "__helpers.h"

/* The "_module_youtube_dl$extractor$extractors" is a Python object pointer of module type.
 *
 * Note: For full compatibility with CPython, every module variable access
 * needs to go through it except for cases where the module cannot possibly
 * have changed in the mean time.
 */

PyObject *module_youtube_dl$extractor$extractors;
PyDictObject *moduledict_youtube_dl$extractor$extractors;

/* The declarations of module constants used, if any. */
extern PyObject *const_str_plain_AWAANVideoIE;
static PyObject *const_tuple_str_plain_CinchcastIE_tuple;
static PyObject *const_tuple_str_plain_BeegIE_tuple;
extern PyObject *const_str_plain_RUTVIE;
extern PyObject *const_str_plain_VestiIE;
extern PyObject *const_str_plain_XHamsterEmbedIE;
extern PyObject *const_str_plain_linuxacademy;
extern PyObject *const_str_plain_SVTIE;
static PyObject *const_tuple_str_plain_SevenPlusIE_tuple;
static PyObject *const_tuple_str_plain_MoviezineIE_tuple;
extern PyObject *const_str_plain_threeqsdn;
static PyObject *const_str_plain_weiqitv;
static PyObject *const_str_plain_allocine;
extern PyObject *const_tuple_str_plain_ViqeoIE_tuple;
extern PyObject *const_str_plain_TwentyMinutenIE;
extern PyObject *const_str_plain_NationalGeographicTVIE;
extern PyObject *const_str_plain_BitChuteChannelIE;
static PyObject *const_tuple_str_plain_BIQLEIE_tuple;
extern PyObject *const_str_plain_HungamaIE;
extern PyObject *const_str_plain_drtuber;
static PyObject *const_tuple_str_plain_PacktPubIE_str_plain_PacktPubCourseIE_tuple;
static PyObject *const_str_plain_nintendo;
static PyObject *const_str_plain_discoveryvr;
static PyObject *const_tuple_str_plain_CJSWIE_tuple;
static PyObject *const_tuple_str_plain_EuropaIE_tuple;
static PyObject *const_tuple_str_plain_XTubeUserIE_str_plain_XTubeIE_tuple;
extern PyObject *const_str_plain_NYTimesIE;
static PyObject *const_tuple_str_plain_GiantBombIE_tuple;
extern PyObject *const_str_plain_CNBCVideoIE;
extern PyObject *const_tuple_str_plain_DreiSatIE_tuple;
static PyObject *const_tuple_str_plain_UplynkIE_str_plain_UplynkPreplayIE_tuple;
static PyObject *const_tuple_str_plain_MyviIE_str_plain_MyviEmbedIE_tuple;
static PyObject *const_tuple_str_plain_KrasViewIE_tuple;
extern PyObject *const_str_plain_CloudyIE;
extern PyObject *const_str_plain_KhanAcademyIE;
extern PyObject *const_str_plain_rutube;
static PyObject *const_str_plain_yesjapan;
static PyObject *const_tuple_str_plain_TV5MondePlusIE_tuple;
extern PyObject *const_str_plain_jwplatform;
extern PyObject *const_str_plain_anvato;
extern PyObject *const_str_plain_RoosterTeethIE;
static PyObject *const_tuple_bbc44f72fa920d1d178cc9eff9bce190_tuple;
static PyObject *const_str_plain_cwtv;
extern PyObject *const_str_plain_TvigleIE;
static PyObject *const_str_plain_cctv;
extern PyObject *const_str_plain_TVCArticleIE;
static PyObject *const_tuple_str_plain_GPUTechConfIE_tuple;
static PyObject *const_tuple_str_plain_KinoPoiskIE_tuple;
extern PyObject *const_str_plain_TFOIE;
static PyObject *const_tuple_str_plain_Canalc2IE_tuple;
extern PyObject *const_str_plain_VH1IE;
extern PyObject *const_str_plain_CSNNEIE;
extern PyObject *const_str_plain_RteIE;
extern PyObject *const_str_plain_HotStarPlaylistIE;
extern PyObject *const_str_plain_CTVNewsIE;
static PyObject *const_tuple_str_plain_SyfyIE_tuple;
extern PyObject *const_str_plain_ThisOldHouseIE;
extern PyObject *const_str_plain_LyndaIE;
static PyObject *const_tuple_str_plain_NTVRuIE_tuple;
extern PyObject *const_str_plain_RaiPlayPlaylistIE;
static PyObject *const_tuple_str_plain_ZingMp3IE_tuple;
extern PyObject *const_str_plain_SafariCourseIE;
extern PyObject *const_str_plain_AWAANIE;
static PyObject *const_str_plain_la7;
extern PyObject *const_str_plain_APAIE;
extern PyObject *const_str_plain_ViuOTTIE;
extern PyObject *const_str_plain_ViceIE;
extern PyObject *const_str_plain_CWTVIE;
extern PyObject *const_str_plain_ARDMediathekIE;
extern PyObject *const_str_plain_twitter;
extern PyObject *const_str_plain_WallaIE;
static PyObject *const_str_plain_lnkgo;
static PyObject *const_str_plain_sbs;
extern PyObject *const_str_plain_GiantBombIE;
extern PyObject *const_str_plain_CrooksAndLiarsIE;
extern PyObject *const_str_plain_VimeoAlbumIE;
static PyObject *const_tuple_str_plain_HBOIE_tuple;
static PyObject *const_str_plain_ir90tv;
static PyObject *const_tuple_str_plain_FusionIE_tuple;
static PyObject *const_tuple_str_plain_DiscoveryGoIE_str_plain_DiscoveryGoPlaylistIE_tuple;
extern PyObject *const_int_0;
extern PyObject *const_tuple_str_plain_MediasetIE_tuple;
extern PyObject *const_str_plain_EmbedlyIE;
extern PyObject *const_str_plain_LinkedInLearningIE;
static PyObject *const_tuple_str_plain_RedBullTVIE_str_plain_RedBullTVRrnContentIE_tuple;
extern PyObject *const_str_plain_KuwoAlbumIE;
extern PyObject *const_str_plain_MinotoIE;
static PyObject *const_str_plain_r7;
extern PyObject *const_str_plain_LimelightChannelListIE;
static PyObject *const_tuple_str_plain_GoIE_tuple;
static PyObject *const_str_plain_helsinki;
extern PyObject *const_str_plain_InfoQIE;
static PyObject *const_tuple_str_plain_NetzkinoIE_tuple;
extern PyObject *const_str_plain_AWAANLiveIE;
static PyObject *const_tuple_str_plain_TastyTradeIE_tuple;
extern PyObject *const_str_plain_LePlaylistIE;
static PyObject *const_tuple_str_plain_EightTracksIE_tuple;
extern PyObject *const_str_plain_m6;
extern PyObject *const_str_plain_UrortIE;
static PyObject *const_tuple_str_plain_StanfordOpenClassroomIE_tuple;
extern PyObject *const_str_plain_CNNBlogsIE;
extern PyObject *const_str_plain_TVAIE;
static PyObject *const_tuple_str_plain_TelegraafIE_tuple;
static PyObject *const_tuple_str_plain_TvigleIE_tuple;
static PyObject *const_tuple_str_plain_XXXYMoviesIE_tuple;
static PyObject *const_tuple_str_plain_PlatziIE_str_plain_PlatziCourseIE_tuple;
extern PyObject *const_str_plain_TeleQuebecEmissionIE;
static PyObject *const_tuple_str_plain_CinemaxIE_tuple;
static PyObject *const_str_plain_pearvideo;
static PyObject *const_tuple_2ce5e23656e238217c2a6af3020c4756_tuple;
static PyObject *const_str_plain_trutv;
extern PyObject *const_str_plain_RTL2IE;
extern PyObject *const_str_plain_CoubIE;
static PyObject *const_tuple_7915279a1879c2289e09d7377626f0bd_tuple;
extern PyObject *const_str_plain_AbcNewsVideoIE;
static PyObject *const_tuple_str_plain_ToypicsUserIE_str_plain_ToypicsIE_tuple;
extern PyObject *const_str_plain_NTVRuIE;
static PyObject *const_tuple_str_plain_IviIE_str_plain_IviCompilationIE_tuple;
static PyObject *const_tuple_e660837d525e34e73ebb03c4633816bc_tuple;
static PyObject *const_tuple_str_plain_RoxwelIE_tuple;
static PyObject *const_tuple_str_plain_SkyNewsIE_str_plain_SkySportsIE_tuple;
extern PyObject *const_str_plain_CinchcastIE;
static PyObject *const_str_plain_streamcz;
extern PyObject *const_str_plain_R7ArticleIE;
static PyObject *const_str_plain_voxmedia;
static PyObject *const_tuple_str_plain_TFOIE_tuple;
static PyObject *const_tuple_str_plain_XVideosIE_tuple;
extern PyObject *const_str_plain_HRTiPlaylistIE;
static PyObject *const_str_plain_people;
extern PyObject *const_str_plain_CiscoLiveSearchIE;
static PyObject *const_str_plain_motorsport;
static PyObject *const_str_plain_cracked;
extern PyObject *const_tuple_str_plain_InternetVideoArchiveIE_tuple;
static PyObject *const_tuple_str_plain_CONtvIE_tuple;
extern PyObject *const_str_plain_ORFFM4StoryIE;
extern PyObject *const_str_plain_HitboxIE;
static PyObject *const_tuple_0ea1f8be190213cfeea8b1023b02021d_tuple;
static PyObject *const_tuple_64d29dcb9f2bf3fc7644f2097fa5706c_tuple;
static PyObject *const_str_plain_videodetective;
static PyObject *const_tuple_str_plain_WallaIE_tuple;
extern PyObject *const_str_plain_VoxMediaIE;
extern PyObject *const_str_plain_RockstarGamesIE;
extern PyObject *const_str_plain_FranceTVSiteIE;
static PyObject *const_tuple_0f7a6fd502b2234391fd40a34f47586e_tuple;
extern PyObject *const_str_plain_VKUserVideosIE;
static PyObject *const_tuple_str_plain_CCCIE_str_plain_CCCPlaylistIE_tuple;
extern PyObject *const_str_plain_SoundcloudIE;
extern PyObject *const_str_plain_CharlieRoseIE;
extern PyObject *const_str_plain_instagram;
extern PyObject *const_str_plain_PerformGroupIE;
static PyObject *const_tuple_str_plain_RegioTVIE_tuple;
extern PyObject *const_tuple_str_plain_PikselIE_tuple;
extern PyObject *const_str_plain___file__;
extern PyObject *const_str_plain_BandcampAlbumIE;
static PyObject *const_tuple_str_plain_DctpTvIE_tuple;
static PyObject *const_str_plain_escapist;
static PyObject *const_tuple_str_plain_NZZIE_tuple;
static PyObject *const_tuple_str_plain_PornotubeIE_tuple;
static PyObject *const_str_plain_livejournal;
extern PyObject *const_str_plain_EpornerIE;
extern PyObject *const_str_plain_vine;
static PyObject *const_str_plain_tv5mondeplus;
static PyObject *const_str_plain_einthusan;
extern PyObject *const_str_plain_RaiPlayIE;
static PyObject *const_tuple_str_plain_BildIE_tuple;
static PyObject *const_str_plain_sevenplus;
extern PyObject *const_str_plain_redtube;
static PyObject *const_tuple_str_plain_TVANouvellesIE_str_plain_TVANouvellesArticleIE_tuple;
static PyObject *const_str_plain_testurl;
extern PyObject *const_str_plain_MTVVideoIE;
extern PyObject *const_str_plain_FreespeechIE;
static PyObject *const_str_plain_southpark;
extern PyObject *const_str_plain_SteamIE;
static PyObject *const_tuple_str_plain_BigflixIE_tuple;
static PyObject *const_str_plain_americastestkitchen;
extern PyObject *const_str_plain_RTL2YouIE;
extern PyObject *const_str_plain_tv4;
extern PyObject *const_str_plain_ImdbIE;
extern PyObject *const_str_plain_NexxEmbedIE;
static PyObject *const_tuple_str_plain_HuajiaoIE_tuple;
static PyObject *const_str_plain_kanalplay;
extern PyObject *const_str_plain_MuenchenTVIE;
extern PyObject *const_str_plain_AdobeTVVideoIE;
static PyObject *const_tuple_str_plain_MinistryGridIE_tuple;
extern PyObject *const_str_plain_SpiegelIE;
extern PyObject *const_str_plain_YoutubeHistoryIE;
extern PyObject *const_str_plain_ORFKTNIE;
static PyObject *const_str_plain_vidbit;
extern PyObject *const_str_plain_sendtonews;
extern PyObject *const_str_plain_NownessPlaylistIE;
extern PyObject *const_str_plain_CSpanIE;
static PyObject *const_tuple_str_plain_MedialaanIE_tuple;
static PyObject *const_str_plain_ccc;
extern PyObject *const_str_plain_TrailerAddictIE;
extern PyObject *const_str_plain_PornTubeIE;
static PyObject *const_str_plain_infoq;
extern PyObject *const_str_plain_FirstTVIE;
extern PyObject *const_str_plain_OoyalaExternalIE;
static PyObject *const_str_plain_patreon;
static PyObject *const_str_plain_extremetube;
static PyObject *const_tuple_str_plain_SnotrIE_tuple;
extern PyObject *const_str_plain_CBCPlayerIE;
static PyObject *const_str_plain_sonyliv;
extern PyObject *const_str_plain_VeeHDIE;
static PyObject *const_tuple_str_plain_TEDIE_tuple;
extern PyObject *const_str_plain_ViuIE;
extern PyObject *const_str_plain_DailymotionUserIE;
static PyObject *const_tuple_str_plain_OktoberfestTVIE_tuple;
extern PyObject *const_str_plain_DWArticleIE;
static PyObject *const_str_plain_clipsyndicate;
extern PyObject *const_str_plain_democracynow;
extern PyObject *const_str_plain_LocalNews8IE;
extern PyObject *const_str_plain_SonyLIVIE;
static PyObject *const_tuple_str_plain_TV2IE_str_plain_TV2ArticleIE_str_plain_KatsomoIE_tuple;
static PyObject *const_tuple_str_plain_BehindKinkIE_tuple;
extern PyObject *const_str_plain_BetIE;
extern PyObject *const_str_plain_YoutubeSearchDateIE;
extern PyObject *const_str_plain_WSJIE;
extern PyObject *const_str_plain_NineGagIE;
static PyObject *const_tuple_str_plain_ABCIE_str_plain_ABCIViewIE_tuple;
extern PyObject *const_str_plain_ndr;
static PyObject *const_str_plain_dotsub;
extern PyObject *const_str_plain_VidmeIE;
static PyObject *const_tuple_str_plain_RestudyIE_tuple;
static PyObject *const_tuple_str_plain_UdemyIE_str_plain_UdemyCourseIE_tuple;
extern PyObject *const_str_plain_ExpressenIE;
extern PyObject *const_str_plain_LiveLeakEmbedIE;
extern PyObject *const_str_plain_KrasViewIE;
extern PyObject *const_str_plain_PhotobucketIE;
static PyObject *const_str_plain_aol;
static PyObject *const_str_plain_ninegag;
static PyObject *const_tuple_str_plain_NFLIE_tuple;
extern PyObject *const_str_plain_NexxIE;
extern PyObject *const_str_plain_mtv;
static PyObject *const_str_plain_telemb;
static PyObject *const_tuple_6f50e65f74ca8c14b4adc7bb16ad3b46_tuple;
static PyObject *const_str_plain_audimedia;
static PyObject *const_str_plain_rtve;
static PyObject *const_str_plain_teachingchannel;
extern PyObject *const_str_plain_ZDFIE;
extern PyObject *const_str_plain_BeatportIE;
extern PyObject *const_str_plain_KalturaIE;
extern PyObject *const_str_plain_XBefIE;
extern PyObject *const_str_plain_ScrippsNetworksIE;
extern PyObject *const_str_plain_rte;
static PyObject *const_str_plain_elpais;
extern PyObject *const_str_plain_ElPaisIE;
static PyObject *const_tuple_str_plain_TOnlineIE_tuple;
extern PyObject *const_str_plain_niconico;
extern PyObject *const_str_plain_origin;
static PyObject *const_str_plain_fox9;
static PyObject *const_str_plain_camtube;
extern PyObject *const_str_plain_PornHubUserIE;
static PyObject *const_str_plain_vidlii;
static PyObject *const_str_plain_skynewsarabia;
static PyObject *const_str_plain_photobucket;
static PyObject *const_tuple_str_plain_RoosterTeethIE_tuple;
extern PyObject *const_tuple_str_plain_ArkenaIE_tuple;
extern PyObject *const_str_plain_XiamiAlbumIE;
extern PyObject *const_str_plain_wistia;
extern PyObject *const_str_plain_TassIE;
static PyObject *const_str_plain_seeker;
extern PyObject *const_str_plain_VideomoreIE;
extern PyObject *const_str_plain_LcpPlayIE;
extern PyObject *const_str_plain_PlaytvakIE;
static PyObject *const_str_plain_telegraaf;
static PyObject *const_str_plain_freespeech;
extern PyObject *const_str_plain_RTVETelevisionIE;
extern PyObject *const_str_plain_ivi;
extern PyObject *const_str_plain_ViafreeIE;
static PyObject *const_str_plain_traileraddict;
static PyObject *const_tuple_str_plain_LibraryOfCongressIE_tuple;
extern PyObject *const_str_plain_VGTVIE;
extern PyObject *const_str_plain_MofosexIE;
extern PyObject *const_str_plain_YandexMusicAlbumIE;
static PyObject *const_tuple_str_plain_SeznamZpravyIE_str_plain_SeznamZpravyArticleIE_tuple;
static PyObject *const_tuple_str_plain_SixPlayIE_tuple;
static PyObject *const_str_plain_kickstarter;
extern PyObject *const_str_plain_YoutubeShowIE;
extern PyObject *const_str_plain_BaiduVideoIE;
extern PyObject *const_str_plain_njpwworld;
extern PyObject *const_str_plain_BeamProLiveIE;
static PyObject *const_tuple_str_plain_PicartoIE_str_plain_PicartoVodIE_tuple;
static PyObject *const_str_plain_nova;
extern PyObject *const_str_plain_TelegraafIE;
static PyObject *const_str_plain_atvat;
static PyObject *const_tuple_str_plain_SBSIE_tuple;
static PyObject *const_tuple_str_plain_ScreencastOMaticIE_tuple;
extern PyObject *const_str_plain_MTVJapanIE;
static PyObject *const_str_plain_gamespot;
extern PyObject *const_str_plain_CDAIE;
extern PyObject *const_str_plain_NJoyEmbedIE;
static PyObject *const_str_plain_giga;
static PyObject *const_tuple_str_plain_TouTvIE_tuple;
extern PyObject *const_str_plain_TheWeatherChannelIE;
static PyObject *const_tuple_str_plain_TV2DKIE_str_plain_TV2DKBornholmPlayIE_tuple;
static PyObject *const_str_plain_closertotruth;
static PyObject *const_tuple_str_plain_MiTeleIE_tuple;
static PyObject *const_tuple_str_plain_ThisAVIE_tuple;
extern PyObject *const_tuple_str_plain_RedTubeIE_tuple;
extern PyObject *const_str_plain_ClypIE;
extern PyObject *const_str_plain_MotherlessIE;
extern PyObject *const_str_plain_LineTVIE;
extern PyObject *const_str_plain_linkedin;
extern PyObject *const_str_plain_SVTPlayIE;
extern PyObject *const_str_plain_YoutubePlaylistsIE;
static PyObject *const_tuple_629cba9d03bdd4023108c80486397be6_tuple;
extern PyObject *const_str_plain_BYUtvIE;
static PyObject *const_tuple_str_plain_VoxMediaVolumeIE_str_plain_VoxMediaIE_tuple;
static PyObject *const_tuple_str_plain_AtresPlayerIE_tuple;
static PyObject *const_str_plain_drbonanza;
extern PyObject *const_str_plain_ViewLiftEmbedIE;
extern PyObject *const_str_plain_stanfordoc;
static PyObject *const_tuple_str_plain_TenPlayIE_tuple;
static PyObject *const_tuple_str_plain_LCIIE_tuple;
extern PyObject *const_str_plain_DFBIE;
static PyObject *const_tuple_str_plain_ATVAtIE_tuple;
extern PyObject *const_str_plain_NetzkinoIE;
extern PyObject *const_str_plain_CultureUnpluggedIE;
extern PyObject *const_str_plain_EggheadLessonIE;
extern PyObject *const_str_plain_EveryonesMixtapeIE;
static PyObject *const_tuple_str_plain_EHowIE_tuple;
extern PyObject *const_str_plain_ORFWIEIE;
extern PyObject *const_tuple_str_plain_CloudflareStreamIE_tuple;
extern PyObject *const_str_plain_TeachableIE;
static PyObject *const_tuple_str_plain_AcademicEarthCourseIE_tuple;
static PyObject *const_tuple_str_plain_PluralsightIE_str_plain_PluralsightCourseIE_tuple;
extern PyObject *const_str_plain_TuneInStationIE;
static PyObject *const_tuple_str_plain_ABCOTVSIE_str_plain_ABCOTVSClipsIE_tuple;
static PyObject *const_tuple_str_plain_AparatIE_tuple;
static PyObject *const_str_plain_footyroom;
extern PyObject *const_str_plain_FC2IE;
extern PyObject *const_str_plain_FOX9IE;
extern PyObject *const_str_plain_SohuIE;
extern PyObject *const_str_plain_DailymotionPlaylistIE;
static PyObject *const_tuple_str_plain_SkyNewsArabiaIE_str_plain_SkyNewsArabiaArticleIE_tuple;
extern PyObject *const_str_plain_CBCWatchIE;
extern PyObject *const_str_plain_SportDeutschlandIE;
extern PyObject *const_str_plain_PressTVIE;
extern PyObject *const_str_plain_RedBullTVRrnContentIE;
extern PyObject *const_tuple_str_plain_DigitekaIE_tuple;
static PyObject *const_str_plain_cliprs;
static PyObject *const_str_plain_defense;
extern PyObject *const_str_plain_FranceTVInfoSportIE;
extern PyObject *const_str_plain_LoveHomePornIE;
extern PyObject *const_str_plain_NBCSportsIE;
static PyObject *const_tuple_str_plain_TheSunIE_tuple;
extern PyObject *const_str_plain_LecturioDeCourseIE;
static PyObject *const_str_plain_baidu;
static PyObject *const_str_plain_wsj;
extern PyObject *const_str_plain_FolketingetIE;
extern PyObject *const_str_plain_canvas;
static PyObject *const_str_plain_vesti;
extern PyObject *const_str_plain_NickRuIE;
static PyObject *const_tuple_facdf595351a0246e6ea09466c3b35a5_tuple;
extern PyObject *const_str_plain_LivestreamShortenerIE;
static PyObject *const_tuple_str_plain_ProSiebenSat1IE_tuple;
extern PyObject *const_str_plain_NHLIE;
static PyObject *const_str_plain_msn;
static PyObject *const_str_plain_mnet;
extern PyObject *const_str_plain_NBAIE;
static PyObject *const_str_plain_vrak;
extern PyObject *const_str_plain_TinyPicIE;
extern PyObject *const_str_plain_RedditIE;
extern PyObject *const_str_plain_TeamcocoIE;
extern PyObject *const_str_plain_HellPornoIE;
extern PyObject *const_str_plain_TF1IE;
extern PyObject *const_str_plain_SpiegeltvIE;
static PyObject *const_str_plain_markiza;
static PyObject *const_str_plain_theintercept;
extern PyObject *const_str_plain_ToshIE;
extern PyObject *const_str_plain_TuneInTopicIE;
extern PyObject *const_str_plain_VineUserIE;
extern PyObject *const_str_plain_ZypeIE;
extern PyObject *const_str_plain_TV2HuIE;
static PyObject *const_tuple_str_plain_DouyuShowIE_str_plain_DouyuTVIE_tuple;
static PyObject *const_str_plain_lrt;
extern PyObject *const_str_plain_RadioCanadaAudioVideoIE;
static PyObject *const_str_plain_mojvideo;
static PyObject *const_tuple_str_plain_TV4IE_tuple;
static PyObject *const_tuple_str_plain_NintendoIE_tuple;
static PyObject *const_tuple_95536fd190d17c4316e164a07c53ca3c_tuple;
extern PyObject *const_str_plain_MoviezineIE;
extern PyObject *const_str_plain_FranceTVJeunesseIE;
extern PyObject *const_str_plain_bbc;
extern PyObject *const_str_plain_TMZIE;
extern PyObject *const_str_plain_UFCTVIE;
extern PyObject *const_str_plain_LemondeIE;
extern PyObject *const_str_plain_CMTIE;
static PyObject *const_tuple_str_plain_M6IE_tuple;
extern PyObject *const_str_plain_PeriscopeUserIE;
extern PyObject *const_str_plain_OnetIE;
extern PyObject *const_str_plain_spankwire;
extern PyObject *const_str_plain_TweakersIE;
extern PyObject *const_str_plain_YnetIE;
static PyObject *const_str_plain_thisamericanlife;
extern PyObject *const_str_plain_YahooGyaOIE;
static PyObject *const_str_plain_motherless;
static PyObject *const_tuple_str_plain_RDSIE_tuple;
extern PyObject *const_str_plain_TagesschauIE;
static PyObject *const_tuple_str_plain_MotorsportIE_tuple;
static PyObject *const_tuple_str_plain_ThisOldHouseIE_tuple;
static PyObject *const_tuple_str_plain_SztvHuIE_tuple;
static PyObject *const_tuple_str_plain_BusinessInsiderIE_tuple;
extern PyObject *const_str_plain_NBCOlympicsIE;
static PyObject *const_tuple_str_plain_XNXXIE_tuple;
static PyObject *const_tuple_str_plain_KUSIIE_tuple;
extern PyObject *const_str_plain_GaskrankIE;
extern PyObject *const_str_plain_KanalPlayIE;
static PyObject *const_str_plain_expotv;
extern PyObject *const_str_plain_SevenPlusIE;
extern PyObject *const_str_plain_SoundcloudUserIE;
extern PyObject *const_str_plain_SCTECourseIE;
extern PyObject *const_str_plain_YoutubeLiveIE;
extern PyObject *const_str_plain_OutsideTVIE;
extern PyObject *const_str_plain_CNBCIE;
extern PyObject *const_str_plain_livestream;
extern PyObject *const_str_plain_CrackleIE;
static PyObject *const_tuple_8b5f4bfee9d57ef8b702418362449376_tuple;
static PyObject *const_tuple_str_plain_PatreonIE_tuple;
extern PyObject *const_str_plain_RMCDecouverteIE;
extern PyObject *const_str_plain_ThreeQSDNIE;
extern PyObject *const_str_plain_CultureboxIE;
extern PyObject *const_str_plain_dw;
extern PyObject *const_str_plain_BuzzFeedIE;
extern PyObject *const_str_plain_EHFTVIE;
extern PyObject *const_str_plain_SverigesRadioPublicationIE;
extern PyObject *const_str_plain_SBSIE;
extern PyObject *const_str_plain_BellatorIE;
extern PyObject *const_str_plain_NDRIE;
extern PyObject *const_str_plain_RadioBremenIE;
extern PyObject *const_str_plain_ViideaIE;
extern PyObject *const_str_plain_PCMagIE;
static PyObject *const_tuple_str_plain_ZapiksIE_tuple;
extern PyObject *const_str_plain_ZingMp3IE;
extern PyObject *const_str_plain_channel9;
extern PyObject *const_str_plain_NiconicoIE;
extern PyObject *const_str_plain_TheSceneIE;
static PyObject *const_tuple_str_plain_CDAIE_tuple;
extern PyObject *const_str_plain_IviIE;
static PyObject *const_tuple_str_plain_FoxSportsIE_tuple;
static PyObject *const_str_plain_chilloutzone;
extern PyObject *const_str_plain_BravoTVIE;
extern PyObject *const_str_plain_TheInterceptIE;
static PyObject *const_tuple_str_plain_RozhlasIE_tuple;
extern PyObject *const_str_plain_StitcherIE;
extern PyObject *const_str_plain_GigaIE;
static PyObject *const_str_plain_orf;
extern PyObject *const_str_plain_RUHDIE;
extern PyObject *const_str_plain_XTubeIE;
extern PyObject *const_str_plain_atresplayer;
static PyObject *const_str_plain_yandexmusic;
static PyObject *const_str_plain_karaoketv;
static PyObject *const_tuple_str_plain_TMZIE_str_plain_TMZArticleIE_tuple;
static PyObject *const_str_plain_gputechconf;
extern PyObject *const_str_plain_RuvIE;
extern PyObject *const_str_plain_CCCIE;
static PyObject *const_tuple_str_plain_FreespeechIE_tuple;
static PyObject *const_tuple_str_plain_PeriscopeIE_str_plain_PeriscopeUserIE_tuple;
extern PyObject *const_str_plain_TwitchUploadsIE;
extern PyObject *const_str_plain_GazetaIE;
static PyObject *const_tuple_str_plain_NerdCubedFeedIE_tuple;
extern PyObject *const_str_plain_XHamsterUserIE;
static PyObject *const_tuple_str_plain_MojvideoIE_tuple;
extern PyObject *const_str_plain_CarambaTVPageIE;
static PyObject *const_str_plain_gameinformer;
extern PyObject *const_str_plain_MassengeschmackTVIE;
extern PyObject *const_str_plain_PlayvidIE;
extern PyObject *const_str_plain_SlidesLiveIE;
static PyObject *const_str_plain_hypem;
static PyObject *const_str_plain_alphaporno;
static PyObject *const_tuple_str_plain_PlaywireIE_tuple;
extern PyObject *const_str_plain_OdnoklassnikiIE;
extern PyObject *const_str_plain_ted;
extern PyObject *const_str_plain_BBCCoUkIPlayerPlaylistIE;
extern PyObject *const_str_plain_SoundcloudSetIE;
extern PyObject *const_str_plain_RENTVIE;
static PyObject *const_str_plain_dropbox;
extern PyObject *const_str_plain_TeacherTubeUserIE;
extern PyObject *const_str_plain_MetacriticIE;
extern PyObject *const_str_plain_EMPFlixIE;
extern PyObject *const_str_plain_InstagramUserIE;
static PyObject *const_tuple_str_plain_MovieClipsIE_tuple;
extern PyObject *const_str_plain_FranceInterIE;
extern PyObject *const_str_plain_YoutubeTruncatedIDIE;
static PyObject *const_tuple_str_plain_AnimeOnDemandIE_tuple;
static PyObject *const_str_plain_lego;
extern PyObject *const_str_plain_PodomaticIE;
extern PyObject *const_str_plain_ChilloutzoneIE;
extern PyObject *const_str_plain_NRKTVDirekteIE;
static PyObject *const_str_plain_unistra;
extern PyObject *const_str_plain_KuwoChartIE;
extern PyObject *const_str_plain_br;
static PyObject *const_str_plain_clyp;
extern PyObject *const_str_plain_VierVideosIE;
static PyObject *const_str_plain_vvvvid;
extern PyObject *const_str_plain_yapfiles;
extern PyObject *const_str_plain_NextTVIE;
extern PyObject *const_str_plain_MotorsportIE;
extern PyObject *const_str_plain_VoiceRepublicIE;
extern PyObject *const_str_plain_imgur;
extern PyObject *const_str_plain_PlaysTVIE;
static PyObject *const_tuple_str_plain_C56IE_tuple;
static PyObject *const_tuple_str_plain_MioMioIE_tuple;
extern PyObject *const_str_plain_VierIE;
static PyObject *const_tuple_str_plain_ParliamentLiveUKIE_tuple;
static PyObject *const_tuple_str_plain_BuzzFeedIE_tuple;
extern PyObject *const_str_plain_HelsinkiIE;
extern PyObject *const_str_plain_AparatIE;
extern PyObject *const_str_plain_MovieFapIE;
extern PyObject *const_str_plain_VyboryMosIE;
static PyObject *const_str_plain_nobelprize;
static PyObject *const_str_plain_asiancrush;
static PyObject *const_str_plain_ninecninemedia;
extern PyObject *const_str_plain_CuriosityStreamCollectionIE;
extern PyObject *const_str_plain_BrightcoveNewIE;
static PyObject *const_tuple_str_plain_AppleConnectIE_tuple;
static PyObject *const_tuple_str_plain_GameInformerIE_tuple;
extern PyObject *const_str_plain_NormalbootsIE;
extern PyObject *const_str_plain_SafariIE;
extern PyObject *const_str_plain_videomore;
extern PyObject *const_str_plain_VidmeUserIE;
extern PyObject *const_str_plain_TwitCastingIE;
static PyObject *const_tuple_str_plain_TeleMBIE_tuple;
static PyObject *const_tuple_str_plain_DigitallySpeakingIE_tuple;
extern PyObject *const_str_plain_TennisTVIE;
static PyObject *const_tuple_str_plain_PornHdIE_tuple;
extern PyObject *const_str_plain_CBSNewsIE;
static PyObject *const_tuple_str_plain_LcpPlayIE_str_plain_LcpIE_tuple;
extern PyObject *const_str_plain_NDREmbedBaseIE;
extern PyObject *const_str_plain_AlJazeeraIE;
static PyObject *const_tuple_str_plain_TwentyThreeVideoIE_tuple;
extern PyObject *const_str_plain_ScreencastOMaticIE;
static PyObject *const_str_plain_canalplus;
static PyObject *const_str_plain_breakcom;
extern PyObject *const_str_plain_radiofrance;
static PyObject *const_tuple_str_plain_KhanAcademyIE_tuple;
static PyObject *const_tuple_str_plain_SaveFromIE_tuple;
extern PyObject *const_str_plain_ServusIE;
extern PyObject *const_str_plain_line;
static PyObject *const_str_plain_dlive;
static PyObject *const_tuple_str_plain_CloudyIE_tuple;
extern PyObject *const_str_plain_ITVIE;
static PyObject *const_tuple_str_plain_MoeVideoIE_tuple;
extern PyObject *const_str_plain_xstream;
extern PyObject *const_str_plain_dbtv;
static PyObject *const_str_plain_go;
static PyObject *const_str_plain_muenchentv;
extern PyObject *const_tuple_str_plain_PladformIE_tuple;
extern PyObject *const_str_plain_RottenTomatoesIE;
static PyObject *const_tuple_str_plain_TelecincoIE_tuple;
static PyObject *const_str_plain_movieclips;
extern PyObject *const_str_plain_ViceArticleIE;
static PyObject *const_str_plain_bpb;
static PyObject *const_tuple_fad45eff24f2333f63e9bfaed53c32e6_tuple;
extern PyObject *const_str_plain_LifeEmbedIE;
extern PyObject *const_str_plain_ThePlatformFeedIE;
extern PyObject *const_str_plain_DRBonanzaIE;
extern PyObject *const_str_plain_CrunchyrollShowPlaylistIE;
static PyObject *const_tuple_str_plain_NDTVIE_tuple;
static PyObject *const_tuple_str_plain_Ro220IE_tuple;
static PyObject *const_str_plain_konserthusetplay;
extern PyObject *const_str_plain_ImdbListIE;
extern PyObject *const_str_plain_mailru;
static PyObject *const_str_plain_rottentomatoes;
extern PyObject *const_str_plain_SztvHuIE;
static PyObject *const_str_plain_awaan;
extern PyObject *const_str_plain_filmon;
static PyObject *const_str_plain_techtalks;
extern PyObject *const_str_plain_TwitchHighlightsIE;
extern PyObject *const_str_plain_VidioIE;
static PyObject *const_tuple_d0aaed6f46afa928c8454a2c81f59a0a_tuple;
extern PyObject *const_str_plain_TwitterCardIE;
extern PyObject *const_str_plain_USATodayIE;
extern PyObject *const_str_plain_ChirbitIE;
static PyObject *const_str_plain_engadget;
static PyObject *const_tuple_str_plain_VidbitIE_tuple;
static PyObject *const_str_plain_manyvids;
static PyObject *const_tuple_str_plain_ReutersIE_tuple;
static PyObject *const_str_plain_cda;
extern PyObject *const_str_plain_BBCIE;
static PyObject *const_str_plain_kinopoisk;
extern PyObject *const_str_plain_UDNEmbedIE;
extern PyObject *const_str_plain_YoukuShowIE;
extern PyObject *const_str_plain_smotri;
extern PyObject *const_str_plain_DigitallySpeakingIE;
extern PyObject *const_str_plain_SafariApiIE;
extern PyObject *const_tuple_str_plain_ExpressenIE_tuple;
extern PyObject *const_str_plain_viki;
extern PyObject *const_str_plain_ARDBetaMediathekIE;
static PyObject *const_tuple_str_plain_StretchInternetIE_tuple;
static PyObject *const_tuple_a01b8cd5da332ea6788ffb1d2d2da8cc_tuple;
static PyObject *const_str_plain_adultswim;
extern PyObject *const_str_plain_NewstubeIE;
static PyObject *const_tuple_str_plain_HelsinkiIE_tuple;
static PyObject *const_tuple_str_plain_NhkVodIE_tuple;
static PyObject *const_str_plain_myspace;
extern PyObject *const_str_plain_XiamiSongIE;
extern PyObject *const_str_plain_XimalayaAlbumIE;
extern PyObject *const_tuple_str_plain_JWPlatformIE_tuple;
extern PyObject *const_str_plain_CeskaTelevizePoradyIE;
static PyObject *const_tuple_str_plain_KonserthusetPlayIE_tuple;
extern PyObject *const_str_plain_PornoVoisinesIE;
extern PyObject *const_str_plain_ABCIViewIE;
extern PyObject *const_str_plain_SoundgasmIE;
extern PyObject *const_str_plain_ORFVBGIE;
extern PyObject *const_str_plain_NRKTVIE;
static PyObject *const_tuple_str_plain_WakanimIE_tuple;
extern PyObject *const_str_plain_MySpassIE;
static PyObject *const_str_plain_vrt;
static PyObject *const_tuple_str_plain_SunPornoIE_tuple;
static PyObject *const_tuple_str_plain_BravoTVIE_tuple;
static PyObject *const_tuple_str_plain_FiveMinIE_tuple;
extern PyObject *const_str_plain_AliExpressLiveIE;
static PyObject *const_str_plain_cspan;
static PyObject *const_str_plain_noz;
static PyObject *const_tuple_str_plain_NRLTVIE_tuple;
extern PyObject *const_str_plain_tumblr;
static PyObject *const_tuple_d49c3f2bd83b0e8de58fd555c54a964d_tuple;
extern PyObject *const_str_plain_JamendoIE;
extern PyObject *const_str_plain_unicode_literals;
extern PyObject *const_str_plain_GlideIE;
static PyObject *const_tuple_str_plain_MGTVIE_tuple;
static PyObject *const_tuple_str_plain_VubeIE_tuple;
extern PyObject *const_str_plain_ViddlerIE;
extern PyObject *const_str_plain_RTVNHIE;
extern PyObject *const_str_plain_PopcorntimesIE;
extern PyObject *const_str_plain_PopcornTVIE;
extern PyObject *const_str_plain_SyfyIE;
static PyObject *const_str_plain_srmediathek;
extern PyObject *const_str_plain_YoutubeTruncatedURLIE;
extern PyObject *const_str_plain_ADNIE;
extern PyObject *const_str_plain_ard;
extern PyObject *const_str_plain_SchoolTVIE;
extern PyObject *const_str_plain_springboardplatform;
static PyObject *const_str_plain_nrk;
static PyObject *const_tuple_str_plain_TweakersIE_tuple;
extern PyObject *const_tuple_str_plain_Vbox7IE_tuple;
static PyObject *const_str_plain_pandoratv;
static PyObject *const_tuple_str_plain_ThePlatformIE_str_plain_ThePlatformFeedIE_tuple;
extern PyObject *const_str_plain_NewgroundsIE;
static PyObject *const_tuple_str_plain_HeiseIE_tuple;
extern PyObject *const_str_plain_DropboxIE;
static PyObject *const_tuple_e12de173e3791daa286ee11c5ce2f7e3_tuple;
extern PyObject *const_str_plain_YahooJapanNewsIE;
extern PyObject *const_str_plain_ThisAVIE;
static PyObject *const_tuple_864b2d6549b75a181d06495da4250c25_tuple;
extern PyObject *const_str_plain_ShahidIE;
static PyObject *const_str_plain_playfm;
extern PyObject *const_str_plain_nbc;
extern PyObject *const_tuple_str_plain_GenericIE_tuple;
extern PyObject *const_str_plain_WDRIE;
static PyObject *const_str_plain_noovo;
extern PyObject *const_str_plain_SkyNewsIE;
extern PyObject *const_str_plain_CanvasIE;
static PyObject *const_str_plain_minoto;
extern PyObject *const_str_plain_IzleseneIE;
extern PyObject *const_str_plain_TVNowSeasonIE;
static PyObject *const_tuple_str_plain_DHMIE_tuple;
extern PyObject *const_str_plain_BRMediathekIE;
extern PyObject *const_tuple_str_plain_WistiaIE_tuple;
static PyObject *const_str_plain_huffpost;
static PyObject *const_str_plain_oktoberfesttv;
static PyObject *const_tuple_str_plain_DRBonanzaIE_tuple;
extern PyObject *const_str_plain_RtlNlIE;
static PyObject *const_str_plain_melonvod;
extern PyObject *const_str_plain_TechTalksIE;
static PyObject *const_str_plain_vidzi;
static PyObject *const_tuple_str_plain_GameStarIE_tuple;
extern PyObject *const_str_plain_TwentyThreeVideoIE;
extern PyObject *const_str_plain___spec__;
extern PyObject *const_str_plain_peertube;
extern PyObject *const_str_plain_BBCCoUkPlaylistIE;
extern PyObject *const_str_plain_BitChuteIE;
extern PyObject *const_str_plain_vimeo;
extern PyObject *const_str_plain_LentaIE;
static PyObject *const_tuple_str_plain_ToggleIE_tuple;
extern PyObject *const_str_plain_ORFOOEIE;
extern PyObject *const_str_plain_weibo;
static PyObject *const_tuple_str_plain_FootyRoomIE_tuple;
static PyObject *const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple;
extern PyObject *const_str_plain_FOXIE;
extern PyObject *const_str_plain_SverigesRadioEpisodeIE;
extern PyObject *const_str_plain_OsnatelTVIE;
extern PyObject *const_str_plain_ITVBTCCIE;
extern PyObject *const_str_plain_onet;
static PyObject *const_tuple_str_plain_CliphunterIE_tuple;
extern PyObject *const_str_plain_LyndaCourseIE;
static PyObject *const_tuple_str_plain_PlaysTVIE_tuple;
static PyObject *const_str_plain_radiode;
static PyObject *const_tuple_str_plain_ChilloutzoneIE_tuple;
extern PyObject *const_str_plain_EinsUndEinsTVIE;
static PyObject *const_str_plain_europa;
extern PyObject *const_str_plain_SlutloadIE;
static PyObject *const_str_plain_ndtv;
extern PyObject *const_str_plain_TheSunIE;
extern PyObject *const_tuple_str_plain_DBTVIE_tuple;
extern PyObject *const_str_plain_SoundcloudSearchIE;
extern PyObject *const_str_plain_GenerationWhatIE;
extern PyObject *const_str_plain_sprout;
extern PyObject *const_str_plain_TVLandIE;
extern PyObject *const_str_plain_HotNewHipHopIE;
static PyObject *const_tuple_str_plain_ClipsyndicateIE_tuple;
static PyObject *const_tuple_str_plain_WWEIE_tuple;
extern PyObject *const_str_plain_tvplayer;
extern PyObject *const_str_plain_ChaturbateIE;
extern PyObject *const_str_plain_PornHubUserVideosUploadIE;
extern PyObject *const_str_plain_VoxMediaVolumeIE;
static PyObject *const_tuple_str_plain_HRTiIE_str_plain_HRTiPlaylistIE_tuple;
extern PyObject *const_str_plain_CONtvIE;
extern PyObject *const_str_plain_Laola1TvIE;
extern PyObject *const_str_plain_ImgurAlbumIE;
static PyObject *const_str_plain_telequebec;
extern PyObject *const_str_plain_ESPNArticleIE;
static PyObject *const_tuple_d1815f20ac58d678c003008be903b1ca_tuple;
static PyObject *const_tuple_str_plain_USANetworkIE_tuple;
extern PyObject *const_str_plain_AudiomackIE;
extern PyObject *const_str_plain_VimeoOndemandIE;
extern PyObject *const_str_plain_VRVSeriesIE;
extern PyObject *const_str_plain_FlickrIE;
static PyObject *const_tuple_str_plain_KakaoIE_tuple;
static PyObject *const_tuple_str_plain_UstreamIE_str_plain_UstreamChannelIE_tuple;
static PyObject *const_str_plain_nosvideo;
static PyObject *const_tuple_b5af4c6df96be599322dfab29003f618_tuple;
extern PyObject *const_str_plain_MLBIE;
static PyObject *const_str_plain_esri;
static PyObject *const_str_plain_xtube;
extern PyObject *const_str_plain_ViewLiftIE;
static PyObject *const_str_plain_khanacademy;
static PyObject *const_tuple_str_plain_MetacriticIE_tuple;
extern PyObject *const_str_plain_NetEaseMusicProgramIE;
extern PyObject *const_str_plain_generic;
static PyObject *const_str_plain_fivemin;
extern PyObject *const_str_plain_GoIE;
extern PyObject *const_str_plain_mixcloud;
extern PyObject *const_str_plain_NetEaseMusicSingerIE;
extern PyObject *const_str_plain_TV2ArticleIE;
static PyObject *const_str_plain_dctp;
static PyObject *const_str_plain_freesound;
extern PyObject *const_str_plain_TOnlineIE;
static PyObject *const_tuple_str_plain_VRVIE_str_plain_VRVSeriesIE_tuple;
extern PyObject *const_str_plain_tennistv;
static PyObject *const_tuple_str_plain_BetIE_tuple;
extern PyObject *const_str_plain_PacktPubIE;
static PyObject *const_str_plain_tfo;
static PyObject *const_str_plain_bfi;
static PyObject *const_tuple_8cfda770f0cfc21081f22c8904caa313_tuple;
static PyObject *const_tuple_str_plain_PhotobucketIE_tuple;
extern PyObject *const_str_plain_GloboArticleIE;
static PyObject *const_str_plain_franceculture;
static PyObject *const_tuple_str_plain_MSNIE_tuple;
static PyObject *const_tuple_str_plain_MwaveIE_str_plain_MwaveMeetGreetIE_tuple;
static PyObject *const_str_plain_swrmediathek;
extern PyObject *const_str_plain_DisneyIE;
extern PyObject *const_str_plain_RDSIE;
extern PyObject *const_str_plain_FrontendMastersIE;
static PyObject *const_tuple_str_plain_GrouponIE_tuple;
extern PyObject *const_str_plain_SouthParkIE;
static PyObject *const_str_plain_cbslocal;
static PyObject *const_tuple_0cdf24cf561da711898f7c6ac47ad286_tuple;
extern PyObject *const_str_plain_youku;
extern PyObject *const_str_plain_TVCIE;
extern PyObject *const_str_plain_keezmovies;
extern PyObject *const_str_plain_FilmwebIE;
static PyObject *const_tuple_96ffb49cf6b140cfca4cdde1e01282ac_tuple;
static PyObject *const_tuple_str_plain_TriluliluIE_tuple;
extern PyObject *const_str_plain_NBCIE;
extern PyObject *const_str_plain_AtresPlayerIE;
extern PyObject *const_str_plain_FrontendMastersCourseIE;
static PyObject *const_str_plain_uol;
static PyObject *const_tuple_str_plain_CBSLocalIE_tuple;
extern PyObject *const_str_plain_QQMusicAlbumIE;
static PyObject *const_tuple_str_plain_PinkbikeIE_tuple;
extern PyObject *const_str_plain_AMCNetworksIE;
extern PyObject *const_str_plain_VimeoReviewIE;
static PyObject *const_tuple_str_plain_TeachableIE_str_plain_TeachableCourseIE_tuple;
static PyObject *const_tuple_str_plain_LeIE_str_plain_LePlaylistIE_str_plain_LetvCloudIE_tuple;
extern PyObject *const_str_plain_VODPlatformIE;
static PyObject *const_str_plain_stretchinternet;
static PyObject *const_tuple_str_plain_RadioCanadaIE_str_plain_RadioCanadaAudioVideoIE_tuple;
static PyObject *const_tuple_str_plain_YoukuIE_str_plain_YoukuShowIE_tuple;
static PyObject *const_tuple_str_plain_EmbedlyIE_tuple;
static PyObject *const_tuple_str_plain_MelonVODIE_tuple;
extern PyObject *const_str_plain_TastyTradeIE;
extern PyObject *const_str_plain_BostonGlobeIE;
extern PyObject *const_str_plain_RoxwelIE;
static PyObject *const_tuple_str_plain_RteIE_str_plain_RteRadioIE_tuple;
extern PyObject *const_str_plain_streamable;
extern PyObject *const_str_plain_DHMIE;
extern PyObject *const_str_plain_PladformIE;
static PyObject *const_str_plain_c56;
extern PyObject *const_str_plain_MTVDEIE;
extern PyObject *const_str_plain_rtl2;
extern PyObject *const_tuple_str_plain_SpringboardPlatformIE_tuple;
static PyObject *const_tuple_str_plain_FilmwebIE_tuple;
static PyObject *const_tuple_str_plain_HentaiStigmaIE_tuple;
extern PyObject *const_str_plain_VKWallPostIE;
extern PyObject *const_str_plain_StreamableIE;
static PyObject *const_tuple_str_plain_PerformGroupIE_tuple;
extern PyObject *const_str_plain_viddler;
extern PyObject *const_str_plain_BellMediaIE;
static PyObject *const_tuple_str_plain_FunimationIE_tuple;
extern PyObject *const_str_plain_Ro220IE;
extern PyObject *const_str_plain_VevoIE;
extern PyObject *const_str_plain_Ku6IE;
static PyObject *const_tuple_str_plain_AZMedienIE_tuple;
extern PyObject *const_str_plain_MicrosoftVirtualAcademyCourseIE;
static PyObject *const_str_plain_douyutv;
extern PyObject *const_str_plain_ViqeoIE;
static PyObject *const_str_plain_medici;
static PyObject *const_tuple_str_plain_TeleBruxellesIE_tuple;
extern PyObject *const_str_plain_PokemonIE;
extern PyObject *const_tuple_str_plain_KeezMoviesIE_tuple;
extern PyObject *const_str_plain_CorusIE;
static PyObject *const_tuple_str_plain_WeiqiTVIE_tuple;
extern PyObject *const_str_plain_BiliBiliIE;
static PyObject *const_tuple_315acfe0dc00e4686a7cf9335df409eb_tuple;
extern PyObject *const_str_plain_ScrippsNetworksWatchIE;
static PyObject *const_tuple_str_plain_TwitCastingIE_tuple;
static PyObject *const_tuple_str_plain_BpbIE_tuple;
extern PyObject *const_str_plain_FXNetworksIE;
static PyObject *const_str_plain_thesun;
static PyObject *const_str_plain_hotnewhiphop;
extern PyObject *const_str_plain_LinuxAcademyIE;
extern PyObject *const_str_plain_PBSIE;
static PyObject *const_str_plain_tva;
static PyObject *const_tuple_str_plain_NuvidIE_tuple;
extern PyObject *const_str_plain_ReverbNationIE;
extern PyObject *const_str_plain_MTVServicesEmbeddedIE;
static PyObject *const_tuple_str_plain_MinotoIE_tuple;
static PyObject *const_str_plain_playtvak;
extern PyObject *const_str_plain_RaiIE;
extern PyObject *const_tuple_str_plain_FOXIE_tuple;
extern PyObject *const_str_plain_OdaTVIE;
static PyObject *const_tuple_str_plain_InternazionaleIE_tuple;
extern PyObject *const_str_plain_hitbox;
static PyObject *const_tuple_str_plain_TumblrIE_tuple;
extern PyObject *const_str_plain_DWIE;
static PyObject *const_str_plain_foxgay;
extern PyObject *const_str_plain_BandcampWeeklyIE;
static PyObject *const_str_plain_airmozilla;
static PyObject *const_tuple_45a8696be5d934ac8f3d30d168d61a77_tuple;
extern PyObject *const_tuple_str_plain_VideaIE_tuple;
extern PyObject *const_str_plain_expressen;
static PyObject *const_str_plain_tmz;
extern PyObject *const_str_plain_WSJArticleIE;
extern PyObject *const_str_plain_AdobeTVEmbedIE;
extern PyObject *const_str_plain_EHowIE;
extern PyObject *const_str_plain_FC2EmbedIE;
static PyObject *const_str_plain_newgrounds;
static PyObject *const_tuple_str_plain_SteamIE_tuple;
static PyObject *const_str_plain_tiktok;
static PyObject *const_str_plain_trunews;
static PyObject *const_tuple_str_plain_VuClipIE_tuple;
static PyObject *const_tuple_str_plain_ArchiveOrgIE_tuple;
static PyObject *const_str_plain_tunepk;
static PyObject *const_tuple_d3bc9f00cff9a92b7716259cb3fefdd2_tuple;
static PyObject *const_str_plain_dtube;
extern PyObject *const_str_plain_HBOIE;
extern PyObject *const_str_plain_foxnews;
extern PyObject *const_str_plain_VimpleIE;
extern PyObject *const_str_plain_NextMediaIE;
static PyObject *const_str_plain_tagesschau;
extern PyObject *const_str_plain_PeopleIE;
extern PyObject *const_str_plain_PornotubeIE;
static PyObject *const_tuple_str_plain_WeiboIE_str_plain_WeiboMobileIE_tuple;
extern PyObject *const_str_plain_VubeIE;
extern PyObject *const_str_plain_FOX9NewsIE;
extern PyObject *const_str_plain_TBSIE;
static PyObject *const_tuple_str_plain_TurboIE_tuple;
static PyObject *const_tuple_str_plain_IzleseneIE_tuple;
static PyObject *const_tuple_str_plain_SharedIE_str_plain_VivoIE_tuple;
static PyObject *const_str_plain_yahoo;
extern PyObject *const_str_plain_JamendoAlbumIE;
extern PyObject *const_tuple_str_plain_ThreeQSDNIE_tuple;
extern PyObject *const_str_plain_ORFSTMIE;
static PyObject *const_str_digest_59949d645e844a19b7723f8cf4213fb1;
extern PyObject *const_str_plain_IqiyiIE;
extern PyObject *const_str_plain_CBCWatchVideoIE;
extern PyObject *const_str_plain_AdultSwimIE;
static PyObject *const_str_plain_sky;
extern PyObject *const_str_plain_vgtv;
extern PyObject *const_str_plain_puhutv;
static PyObject *const_tuple_str_plain_BeatportIE_tuple;
static PyObject *const_str_plain_filmweb;
extern PyObject *const_str_plain_NRKTVSeasonIE;
static PyObject *const_str_plain_vodlocker;
extern PyObject *const_str_plain_NRLTVIE;
extern PyObject *const_str_plain_MySpaceIE;
extern PyObject *const_str_plain_AENetworksIE;
static PyObject *const_tuple_str_plain_TVNetIE_tuple;
extern PyObject *const_str_plain_bokecc;
static PyObject *const_tuple_str_plain_NHLIE_tuple;
static PyObject *const_str_plain_archiveorg;
static PyObject *const_str_plain_howstuffworks;
extern PyObject *const_str_plain_MyVisionTVIE;
static PyObject *const_tuple_str_plain_YnetIE_tuple;
extern PyObject *const_str_plain_VimeoUserIE;
extern PyObject *const_str_plain_googledrive;
static PyObject *const_tuple_str_plain_RuvIE_tuple;
static PyObject *const_tuple_str_plain_RMCDecouverteIE_tuple;
extern PyObject *const_str_plain_UdemyCourseIE;
extern PyObject *const_str_plain_LecturioIE;
extern PyObject *const_str_plain_AudioBoomIE;
extern PyObject *const_str_plain_viewlift;
static PyObject *const_str_plain_yandexdisk;
extern PyObject *const_str_plain_VRVIE;
extern PyObject *const_str_plain_CommonMistakesIE;
static PyObject *const_tuple_str_plain_GfycatIE_tuple;
extern PyObject *const_str_plain_HistoricFilmsIE;
static PyObject *const_tuple_str_plain_AbcNewsIE_str_plain_AbcNewsVideoIE_tuple;
static PyObject *const_tuple_str_plain_FlickrIE_tuple;
extern PyObject *const_str_plain_AbcNewsIE;
static PyObject *const_tuple_str_plain_RICEIE_tuple;
static PyObject *const_tuple_str_plain_SWRMediathekIE_tuple;
static PyObject *const_str_plain_embedly;
static PyObject *const_str_plain_wakanim;
static PyObject *const_tuple_str_plain_AllocineIE_tuple;
extern PyObject *const_str_plain_Sport5IE;
extern PyObject *const_str_plain_TDSLifewayIE;
extern PyObject *const_str_plain_KuwoSingerIE;
static PyObject *const_str_plain_spiegel;
static PyObject *const_tuple_str_plain_PlayPlusTVIE_tuple;
extern PyObject *const_tuple_str_plain_StreamableIE_tuple;
static PyObject *const_tuple_str_plain_OutsideTVIE_tuple;
static PyObject *const_str_plain_googlesearch;
static PyObject *const_str_plain_zaq1;
static PyObject *const_tuple_str_plain_NJPWWorldIE_tuple;
static PyObject *const_str_plain_aliexpress;
static PyObject *const_tuple_8ba425396d0796abd5fa0f9f6bc8fb1b_tuple;
extern PyObject *const_str_plain_METAIE;
extern PyObject *const_str_plain_DeezerPlaylistIE;
extern PyObject *const_str_plain_YandexMusicPlaylistIE;
static PyObject *const_tuple_b63791b7cbec42bc00debfbfa72fc466_tuple;
extern PyObject *const_str_plain_WDRPageIE;
static PyObject *const_tuple_str_plain_NineGagIE_tuple;
extern PyObject *const_str_plain_CamdemyFolderIE;
extern PyObject *const_str_plain_PacktPubCourseIE;
extern PyObject *const_str_plain_AmericasTestKitchenIE;
static PyObject *const_tuple_str_plain_UMGDeIE_tuple;
static PyObject *const_str_plain_hentaistigma;
extern PyObject *const_str_plain_Zaq1IE;
extern PyObject *const_str_plain_ArkenaIE;
static PyObject *const_str_plain_lecture2go;
static PyObject *const_tuple_041a1162a5d0a8642281dec2c46c1c28_tuple;
extern PyObject *const_str_plain_hgtv;
static PyObject *const_str_plain_faz;
extern PyObject *const_str_plain_NetEaseMusicAlbumIE;
extern PyObject *const_str_plain_NiconicoPlaylistIE;
static PyObject *const_tuple_str_plain_MLBIE_tuple;
extern PyObject *const_str_plain_SexuIE;
static PyObject *const_tuple_str_plain_ScreencastIE_tuple;
extern PyObject *const_str_plain_CCCPlaylistIE;
extern PyObject *const_str_plain_NRKSkoleIE;
extern PyObject *const_str_plain_spiegeltv;
extern PyObject *const_str_plain_HKETVIE;
extern PyObject *const_str_plain_MallTVIE;
static PyObject *const_tuple_str_plain_GooglePlusIE_tuple;
extern PyObject *const_str_plain_ORFOE3IE;
static PyObject *const_tuple_str_plain_PyvideoIE_tuple;
static PyObject *const_tuple_str_plain_STVPlayerIE_tuple;
static PyObject *const_str_plain_stv;
extern PyObject *const_str_plain_NickBrIE;
static PyObject *const_tuple_str_plain_MotherlessIE_str_plain_MotherlessGroupIE_tuple;
extern PyObject *const_str_plain_SpringboardPlatformIE;
extern PyObject *const_str_plain_gaia;
extern PyObject *const_str_plain_limelight;
extern PyObject *const_str_plain_washingtonpost;
extern PyObject *const_str_plain_RadioFranceIE;
extern PyObject *const_str_plain_theplatform;
extern PyObject *const_str_plain_GoogleDriveIE;
extern PyObject *const_str_plain_HowStuffWorksIE;
static PyObject *const_tuple_str_plain_GazetaIE_tuple;
static PyObject *const_tuple_str_plain_Varzesh3IE_tuple;
extern PyObject *const_str_plain_NBCSportsStreamIE;
static PyObject *const_str_plain_cbssports;
extern PyObject *const_str_plain_tunein;
static PyObject *const_str_plain_malltv;
static PyObject *const_tuple_str_plain_PlayFMIE_tuple;
static PyObject *const_str_plain_yandexvideo;
extern PyObject *const_str_plain_iqiyi;
extern PyObject *const_str_plain_SRMediathekIE;
extern PyObject *const_str_plain_CliphunterIE;
extern PyObject *const_str_plain_ThePlatformIE;
extern PyObject *const_str_plain_TVNowAnnualIE;
extern PyObject *const_str_plain_NBCOlympicsStreamIE;
extern PyObject *const_str_plain_WeiboIE;
extern PyObject *const_str_plain_XboxClipsIE;
static PyObject *const_tuple_str_plain_DropboxIE_tuple;
static PyObject *const_tuple_str_plain_UrortIE_tuple;
extern PyObject *const_str_plain_PornHdIE;
static PyObject *const_tuple_str_plain_CamWithHerIE_tuple;
extern PyObject *const_str_plain_EyedoTVIE;
static PyObject *const_str_plain_folketinget;
static PyObject *const_str_plain_metacritic;
extern PyObject *const_str_plain_PornerBrosIE;
static PyObject *const_str_plain_pornoxo;
static PyObject *const_tuple_str_plain_BYUtvIE_tuple;
static PyObject *const_str_plain_litv;
static PyObject *const_str_plain_jove;
extern PyObject *const_str_plain_BTArticleIE;
extern PyObject *const_str_plain_acast;
extern PyObject *const_str_plain_vice;
static PyObject *const_tuple_0f4d5730c34d828ed4052fbe8bd040b8_tuple;
extern PyObject *const_str_plain_AdobeTVShowIE;
extern PyObject *const_str_plain_PuhuTVIE;
extern PyObject *const_str_plain_FunkIE;
extern PyObject *const_str_plain_YoutubeSearchURLIE;
extern PyObject *const_str_plain_FacebookIE;
static PyObject *const_tuple_str_plain_GameSpotIE_tuple;
extern PyObject *const_str_plain_ViceShowIE;
extern PyObject *const_str_plain_SendtoNewsIE;
static PyObject *const_tuple_str_plain_LiveLeakIE_str_plain_LiveLeakEmbedIE_tuple;
static PyObject *const_str_plain_ruhd;
extern PyObject *const_str_plain_ORFBGLIE;
static PyObject *const_str_plain_normalboots;
extern PyObject *const_str_plain_ustream;
extern PyObject *const_str_plain_WeiqiTVIE;
extern PyObject *const_str_plain_tvp;
extern PyObject *const_str_plain_Varzesh3IE;
static PyObject *const_tuple_str_plain_LinuxAcademyIE_tuple;
extern PyObject *const_str_plain_PornHubPagedVideoListIE;
static PyObject *const_str_plain_rice;
extern PyObject *const_str_plain_SpiegelArticleIE;
static PyObject *const_tuple_str_plain_YesJapanIE_tuple;
extern PyObject *const_str_plain_MarkizaPageIE;
extern PyObject *const_str_plain_appletrailers;
static PyObject *const_str_plain_kuwo;
static PyObject *const_str_plain_savefrom;
static PyObject *const_tuple_str_plain_CarambaTVIE_str_plain_CarambaTVPageIE_tuple;
extern PyObject *const_str_plain_discovery;
static PyObject *const_tuple_str_plain_LemondeIE_tuple;
extern PyObject *const_str_plain_srgssr;
static PyObject *const_str_plain_wdr;
static PyObject *const_tuple_str_plain_TDSLifewayIE_tuple;
static PyObject *const_tuple_str_plain_JamendoIE_str_plain_JamendoAlbumIE_tuple;
extern PyObject *const_str_plain_TeamTreeHouseIE;
extern PyObject *const_str_plain_pbs;
static PyObject *const_str_plain_vuclip;
static PyObject *const_str_plain_dfb;
static PyObject *const_tuple_str_plain_Zaq1IE_tuple;
extern PyObject *const_str_plain_HotStarIE;
static PyObject *const_str_plain_tv2;
extern PyObject *const_str_plain_VKIE;
extern PyObject *const_str_plain_SouthParkNlIE;
extern PyObject *const_str_plain_UstudioIE;
extern PyObject *const_str_plain_MediasiteIE;
extern PyObject *const_str_plain_internetvideoarchive;
extern PyObject *const_str_plain_VRTIE;
static PyObject *const_tuple_str_plain_XuiteIE_tuple;
extern PyObject *const_str_plain_NetEaseMusicDjRadioIE;
static PyObject *const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple;
extern PyObject *const_str_plain_vube;
extern PyObject *const_str_plain_itv;
static PyObject *const_str_plain_bandcamp;
extern PyObject *const_str_plain_YouNowLiveIE;
extern PyObject *const_str_plain_ZDFChannelIE;
extern PyObject *const_str_plain_IPrimaIE;
extern PyObject *const_str_plain_LEGOIE;
extern PyObject *const_str_plain_SkySportsIE;
static PyObject *const_tuple_str_plain_SCTEIE_str_plain_SCTECourseIE_tuple;
static PyObject *const_tuple_str_plain_HitboxIE_str_plain_HitboxLiveIE_tuple;
static PyObject *const_tuple_str_plain_BFIPlayerIE_tuple;
extern PyObject *const_str_plain_FacebookPluginsVideoIE;
static PyObject *const_tuple_str_plain_MDRIE_tuple;
static PyObject *const_tuple_str_plain_OdaTVIE_tuple;
static PyObject *const_str_plain_eporner;
static PyObject *const_str_plain_moviezine;
static PyObject *const_tuple_str_plain_FXNetworksIE_tuple;
extern PyObject *const_str_plain_IviCompilationIE;
extern PyObject *const_str_plain_RENTVArticleIE;
extern PyObject *const_str_plain_PicartoIE;
static PyObject *const_tuple_str_plain_URPlayIE_tuple;
extern PyObject *const_str_plain_podomatic;
extern PyObject *const_str_plain_NTVDeIE;
static PyObject *const_tuple_str_plain_GigaIE_tuple;
static PyObject *const_tuple_str_plain_EngadgetIE_tuple;
static PyObject *const_str_plain_amcnetworks;
extern PyObject *const_str_plain_MeipaiIE;
extern PyObject *const_str_plain_SeznamZpravyArticleIE;
extern PyObject *const_str_plain_DctpTvIE;
extern PyObject *const_str_plain_EWETVIE;
static PyObject *const_tuple_str_plain_NiconicoIE_str_plain_NiconicoPlaylistIE_tuple;
extern PyObject *const_str_plain_YoutubeIE;
extern PyObject *const_str_plain_TwitchAllVideosIE;
static PyObject *const_str_plain_freshlive;
extern PyObject *const_str_plain_udn;
static PyObject *const_str_plain_xuite;
static PyObject *const_tuple_str_plain_TheInterceptIE_tuple;
extern PyObject *const_str_plain_InstagramIE;
extern PyObject *const_str_plain_NRKTVEpisodeIE;
extern PyObject *const_str_plain_OnetMVPIE;
extern PyObject *const_tuple_str_plain_DailyMailIE_tuple;
extern PyObject *const_str_plain_VShareIE;
static PyObject *const_str_plain_slutload;
extern PyObject *const_str_plain_SoundcloudPlaylistIE;
extern PyObject *const_str_plain_cliphunter;
extern PyObject *const_str_plain_NetEaseMusicListIE;
extern PyObject *const_str_plain_KankanIE;
extern PyObject *const_str_plain_GodTubeIE;
static PyObject *const_tuple_str_plain_VidziIE_tuple;
static PyObject *const_tuple_str_plain_TikTokIE_str_plain_TikTokUserIE_tuple;
extern PyObject *const_str_plain_AppleConnectIE;
extern PyObject *const_tuple_str_plain_JojIE_tuple;
static PyObject *const_str_plain_libraryofcongress;
extern PyObject *const_str_plain_NationalGeographicVideoIE;
static PyObject *const_str_plain_pokemon;
static PyObject *const_str_plain_sohu;
static PyObject *const_tuple_str_plain_ViuIE_str_plain_ViuPlaylistIE_str_plain_ViuOTTIE_tuple;
static PyObject *const_tuple_str_plain_RadioDeIE_tuple;
static PyObject *const_tuple_str_plain_WashingtonPostIE_str_plain_WashingtonPostArticleIE_tuple;
extern PyObject *const_str_plain_EllenTubeIE;
extern PyObject *const_str_plain_ParamountNetworkIE;
static PyObject *const_tuple_str_plain_CamTubeIE_tuple;
extern PyObject *const_tuple_str_plain_APAIE_tuple;
static PyObject *const_str_plain_nzz;
static PyObject *const_tuple_str_plain_TeamcocoIE_tuple;
static PyObject *const_tuple_eeb198c74e1e97891e594a95e7a2f944_tuple;
extern PyObject *const_str_plain_MatchTVIE;
extern PyObject *const_str_plain_SenateISVPIE;
extern PyObject *const_str_plain_NickDeIE;
static PyObject *const_str_plain_pornhd;
static PyObject *const_tuple_str_plain_TrailerAddictIE_tuple;
static PyObject *const_str_plain_eitb;
extern PyObject *const_str_plain_ToonGogglesIE;
static PyObject *const_tuple_str_plain_GDCVaultIE_tuple;
static PyObject *const_tuple_str_plain_BitChuteIE_str_plain_BitChuteChannelIE_tuple;
static PyObject *const_tuple_str_plain_DTubeIE_tuple;
extern PyObject *const_str_plain_RedTubeIE;
extern PyObject *const_str_plain_ShahidShowIE;
extern PyObject *const_str_plain_BiliBiliPlayerIE;
extern PyObject *const_str_plain_MetacafeIE;
extern PyObject *const_str_plain_TagesschauPlayerIE;
static PyObject *const_str_plain_ehow;
static PyObject *const_tuple_96868e867f6d3cc8b1d3f48f3d2d2de8_tuple;
extern PyObject *const_str_plain_NprIE;
static PyObject *const_str_plain_telewebion;
static PyObject *const_str_plain_cbc;
static PyObject *const_tuple_str_plain_RTVSIE_tuple;
extern PyObject *const_str_plain_VTXTVIE;
extern PyObject *const_str_plain_YoukuIE;
static PyObject *const_str_plain_dhm;
static PyObject *const_str_plain_bet;
extern PyObject *const_str_plain_senateisvp;
static PyObject *const_str_plain_streamcloud;
static PyObject *const_str_plain_thisoldhouse;
static PyObject *const_str_plain_cmt;
extern PyObject *const_str_plain_CNNIE;
extern PyObject *const_str_plain_LimelightChannelIE;
extern PyObject *const_str_plain_DaumUserIE;
extern PyObject *const_str_plain_TumblrIE;
extern PyObject *const_str_plain_plays;
static PyObject *const_tuple_str_plain_JoveIE_tuple;
extern PyObject *const_str_plain_FoxSportsIE;
static PyObject *const_str_plain_bravotv;
extern PyObject *const_str_plain_LiTVIE;
extern PyObject *const_str_plain_GlattvisionTVIE;
static PyObject *const_tuple_str_plain_VodlockerIE_tuple;
extern PyObject *const_str_plain_LecturioCourseIE;
extern PyObject *const_str_plain_XuiteIE;
extern PyObject *const_str_plain_tvigle;
static PyObject *const_str_plain_ntvru;
static PyObject *const_tuple_970b04f3ba2eadcab4c0f0973ef1b8ef_tuple;
static PyObject *const_str_plain_netzkino;
extern PyObject *const_str_plain_RtmpIE;
static PyObject *const_str_plain_ctvnews;
extern PyObject *const_str_plain_FoxNewsIE;
extern PyObject *const_str_plain_FiveMinIE;
extern PyObject *const_str_plain_TikTokIE;
static PyObject *const_tuple_str_plain_VODPlIE_tuple;
extern PyObject *const_str_plain_M6IE;
static PyObject *const_tuple_str_plain_SohuIE_tuple;
extern PyObject *const_str_plain_TwitterAmplifyIE;
static PyObject *const_tuple_str_plain_CrackedIE_tuple;
static PyObject *const_str_plain_eighttracks;
extern PyObject *const_tuple_str_plain_ZypeIE_tuple;
static PyObject *const_str_plain_toongoggles;
extern PyObject *const_str_plain_HentaiStigmaIE;
static PyObject *const_tuple_str_plain_ClypIE_tuple;
extern PyObject *const_str_plain_FourTubeIE;
extern PyObject *const_str_plain_MinistryGridIE;
static PyObject *const_tuple_str_plain_AfreecaTVIE_tuple;
extern PyObject *const_str_plain_adobetv;
static PyObject *const_tuple_str_plain_GaskrankIE_tuple;
static PyObject *const_str_plain_godtube;
extern PyObject *const_str_plain_cartoonnetwork;
static PyObject *const_tuple_str_plain_MetacafeIE_tuple;
extern PyObject *const_str_plain_MangomoloVideoIE;
extern PyObject *const_str_plain_pornhub;
static PyObject *const_str_plain_thisav;
extern PyObject *const_str_plain_PluralsightIE;
static PyObject *const_tuple_str_plain_CiscoLiveSessionIE_str_plain_CiscoLiveSearchIE_tuple;
static PyObject *const_tuple_str_plain_AlphaPornoIE_tuple;
static PyObject *const_tuple_str_plain_MovingImageIE_tuple;
static PyObject *const_tuple_str_plain_BlinkxIE_tuple;
static PyObject *const_tuple_str_plain_RBMARadioIE_tuple;
extern PyObject *const_str_plain_CCMAIE;
static PyObject *const_tuple_str_plain_MarkizaIE_str_plain_MarkizaPageIE_tuple;
static PyObject *const_tuple_str_plain_ManyVidsIE_tuple;
extern PyObject *const_str_plain_AllocineIE;
extern PyObject *const_str_plain_DemocracynowIE;
static PyObject *const_tuple_str_plain_NozIE_tuple;
extern PyObject *const_str_plain_MSNIE;
static PyObject *const_tuple_str_plain_TheStarIE_tuple;
static PyObject *const_str_plain_twentythreevideo;
extern PyObject *const_str_plain_VVVVIDIE;
extern PyObject *const_str_plain_TeleBruxellesIE;
extern PyObject *const_str_plain_ReutersIE;
static PyObject *const_str_plain_myspass;
extern PyObject *const_str_plain_NPORadioFragmentIE;
extern PyObject *const_str_plain_CrunchyrollIE;
static PyObject *const_tuple_str_plain_WatchIndianPornIE_tuple;
extern PyObject *const_str_plain_NerdCubedFeedIE;
static PyObject *const_tuple_str_plain_VeohIE_tuple;
extern PyObject *const_str_plain_SouthParkDkIE;
static PyObject *const_tuple_str_plain_METAIE_tuple;
static PyObject *const_tuple_str_plain_AolIE_tuple;
static PyObject *const_tuple_str_plain_GlideIE_tuple;
extern PyObject *const_str_plain_FczenitIE;
extern PyObject *const_str_plain_LimelightMediaIE;
extern PyObject *const_str_plain_UOLIE;
static PyObject *const_str_plain_aparat;
static PyObject *const_str_plain_movingimage;
extern PyObject *const_str_plain_GloboIE;
extern PyObject *const_str_plain_ORFTVthekIE;
extern PyObject *const_str_plain_SpankwireIE;
static PyObject *const_tuple_str_plain_NewgroundsIE_str_plain_NewgroundsPlaylistIE_tuple;
static PyObject *const_tuple_str_plain_LibsynIE_tuple;
extern PyObject *const_str_plain_AfreecaTVIE;
static PyObject *const_tuple_67ce4cf8cba92da85b69ae5c016c53f8_tuple;
static PyObject *const_tuple_str_plain_CTVNewsIE_tuple;
static PyObject *const_tuple_str_plain_Puls4IE_tuple;
static PyObject *const_tuple_str_plain_RUHDIE_tuple;
static PyObject *const_tuple_str_plain_MyChannelsIE_tuple;
static PyObject *const_str_plain_viidea;
static PyObject *const_tuple_str_plain_IGNIE_str_plain_OneUPIE_str_plain_PCMagIE_tuple;
extern PyObject *const_str_plain_CBCOlympicsIE;
extern PyObject *const_str_plain_rutv;
static PyObject *const_tuple_str_plain_TVN24IE_tuple;
extern PyObject *const_str_plain_AudiomackAlbumIE;
extern PyObject *const_str_plain_AolIE;
extern PyObject *const_str_plain_BBCCoUkIE;
static PyObject *const_str_plain_sixplay;
extern PyObject *const_str_plain_CamTubeIE;
static PyObject *const_str_plain_roxwel;
static PyObject *const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple;
extern PyObject *const_str_plain_ComedyCentralShortnameIE;
static PyObject *const_tuple_str_plain_ViddlerIE_tuple;
static PyObject *const_tuple_str_plain_ThisAmericanLifeIE_tuple;
static PyObject *const_str_plain_gaskrank;
static PyObject *const_tuple_str_plain_Porn91IE_tuple;
extern PyObject *const_str_plain_ACastIE;
static PyObject *const_tuple_str_plain_HungamaIE_str_plain_HungamaSongIE_tuple;
static PyObject *const_tuple_str_plain_KickStarterIE_tuple;
extern PyObject *const_str_plain_ATVAtIE;
static PyObject *const_str_plain_shared;
static PyObject *const_str_plain_parliamentliveuk;
static PyObject *const_tuple_str_plain_CtsNewsIE_tuple;
extern PyObject *const_str_plain_disney;
extern PyObject *const_str_plain_OoyalaIE;
extern PyObject *const_tuple_str_plain_XFileShareIE_tuple;
static PyObject *const_tuple_e25b2eeb438de32f8007ad08ab7fc997_tuple;
static PyObject *const_str_plain_hornbunny;
extern PyObject *const_str_plain_Puls4IE;
extern PyObject *const_str_plain_eroprofile;
extern PyObject *const_str_plain_SproutIE;
static PyObject *const_tuple_889e8c67d1452e1e71de7c1727e8ed51_tuple;
extern PyObject *const_str_plain_vbox7;
extern PyObject *const_str_plain_WashingtonPostIE;
extern PyObject *const_str_plain_radiobremen;
extern PyObject *const_str_plain_IndavideoEmbedIE;
static PyObject *const_str_plain_sverigesradio;
extern PyObject *const_str_plain_udemy;
extern PyObject *const_str_plain_vier;
static PyObject *const_str_plain_viu;
extern PyObject *const_str_plain_DiscoveryGoIE;
extern PyObject *const_str_plain_ClubicIE;
extern PyObject *const_str_plain_TV2IE;
static PyObject *const_str_plain_vh1;
static PyObject *const_tuple_7282d20c3aa5368967332b03202bda9d_tuple;
static PyObject *const_str_plain_turbo;
extern PyObject *const_str_plain_RBMARadioIE;
extern PyObject *const_str_plain_xfileshare;
extern PyObject *const_str_plain_YesJapanIE;
static PyObject *const_tuple_str_plain_TwentyFourVideoIE_tuple;
extern PyObject *const_str_plain_GfycatIE;
static PyObject *const_tuple_str_plain_VierIE_str_plain_VierVideosIE_tuple;
static PyObject *const_str_plain_clippit;
static PyObject *const_str_plain_lovehomeporn;
static PyObject *const_str_plain_beampro;
extern PyObject *const_str_plain_GameInformerIE;
static PyObject *const_tuple_str_plain_WSJIE_str_plain_WSJArticleIE_tuple;
static PyObject *const_str_plain_popcorntv;
static PyObject *const_tuple_str_plain_CrackleIE_tuple;
static PyObject *const_str_plain_restudy;
extern PyObject *const_str_plain_MmsIE;
extern PyObject *const_str_plain_STVPlayerIE;
extern PyObject *const_str_plain_SlideshareIE;
extern PyObject *const_str_plain_VLiveChannelIE;
extern PyObject *const_str_plain_BleacherReportIE;
static PyObject *const_str_plain_azmedien;
extern PyObject *const_tuple_str_plain_BrightcoveLegacyIE_str_plain_BrightcoveNewIE_tuple;
extern PyObject *const_str_plain_OnetPlIE;
static PyObject *const_str_plain_neteasemusic;
static PyObject *const_tuple_str_plain_NineNowIE_tuple;
static PyObject *const_str_plain_xminus;
static PyObject *const_str_plain_vidio;
static PyObject *const_tuple_str_plain_FolketingetIE_tuple;
static PyObject *const_tuple_str_plain_IPrimaIE_tuple;
extern PyObject *const_str_plain_ORFSBGIE;
extern PyObject *const_str_plain_teachable;
static PyObject *const_str_plain_bloomberg;
static PyObject *const_tuple_str_plain_SpankBangIE_str_plain_SpankBangPlaylistIE_tuple;
static PyObject *const_str_plain_theweatherchannel;
extern PyObject *const_str_plain_YouPornIE;
extern PyObject *const_str_plain_dailymail;
static PyObject *const_tuple_str_plain_FilmOnIE_str_plain_FilmOnChannelIE_tuple;
extern PyObject *const_str_plain_apa;
extern PyObject *const_str_plain_noco;
extern PyObject *const_str_plain_TruTVIE;
static PyObject *const_str_plain_newstube;
static PyObject *const_str_plain_cnbc;
extern PyObject *const_str_plain_ArteTVPlaylistIE;
extern PyObject *const_str_plain_NJPWWorldIE;
extern PyObject *const_str_plain_NineCNineMediaIE;
extern PyObject *const_str_plain_WDRElefantIE;
extern PyObject *const_str_plain_lynda;
extern PyObject *const_str_plain_TeleTaskIE;
extern PyObject *const_str_plain_QuantumTVIE;
extern PyObject *const_str_plain_EggheadCourseIE;
static PyObject *const_str_plain_thescene;
extern PyObject *const_str_plain_YahooIE;
extern PyObject *const_str_plain_MedialaanIE;
extern PyObject *const_str_plain_URPlayIE;
extern PyObject *const_str_plain_AudiMediaIE;
extern PyObject *const_str_plain_NaverIE;
extern PyObject *const_str_plain_CarambaTVIE;
static PyObject *const_tuple_str_plain_BaiduVideoIE_tuple;
static PyObject *const_tuple_str_plain_BokeCCIE_tuple;
static PyObject *const_str_plain_ctsnews;
extern PyObject *const_str_plain_GaiaIE;
extern PyObject *const_str_plain_toggle;
extern PyObject *const_str_plain_AnimeOnDemandIE;
static PyObject *const_str_plain_hearthisat;
extern PyObject *const_tuple_str_plain_MegaphoneIE_tuple;
extern PyObject *const_str_plain_TeleQuebecSquatIE;
static PyObject *const_str_plain_fivetv;
extern PyObject *const_str_plain_TV2DKIE;
static PyObject *const_tuple_str_plain_SapoIE_tuple;
extern PyObject *const_str_plain_AsianCrushPlaylistIE;
extern PyObject *const_str_plain_SRGSSRPlayIE;
static PyObject *const_str_plain_tv2hu;
extern PyObject *const_str_plain_AZMedienIE;
extern PyObject *const_str_plain_IGNIE;
static PyObject *const_str_plain_mychannels;
extern PyObject *const_str_plain_UstudioEmbedIE;
extern PyObject *const_str_plain_ToggleIE;
extern PyObject *const_str_plain_syfy;
extern PyObject *const_str_plain_GameSpotIE;
static PyObject *const_tuple_str_plain_VikiIE_str_plain_VikiChannelIE_tuple;
static PyObject *const_tuple_str_plain_ChaturbateIE_tuple;
extern PyObject *const_str_plain_BehindKinkIE;
extern PyObject *const_str_plain_NRKTVEpisodesIE;
extern PyObject *const_str_plain_MangomoloLiveIE;
static PyObject *const_str_plain_contv;
static PyObject *const_str_plain_canalc2;
static PyObject *const_str_plain_cultureunplugged;
static PyObject *const_tuple_str_plain_Tele5IE_tuple;
extern PyObject *const_str_plain_WatchIndianPornIE;
extern PyObject *const_str_plain_PolskieRadioCategoryIE;
extern PyObject *const_str_plain_EightTracksIE;
extern PyObject *const_str_plain_safari;
static PyObject *const_str_plain_everyonesmixtape;
static PyObject *const_tuple_9c9ca18509f4854e444165cc528c720f_tuple;
extern PyObject *const_str_plain_BpbIE;
static PyObject *const_tuple_str_plain_EbaumsWorldIE_tuple;
extern PyObject *const_str_plain_NBCNewsIE;
static PyObject *const_str_plain_performgroup;
extern PyObject *const_str_plain_ZapiksIE;
static PyObject *const_tuple_str_plain_ShowRoomLiveIE_tuple;
static PyObject *const_str_plain_kakao;
extern PyObject *const_str_plain_LivestreamIE;
extern PyObject *const_tuple_str_plain_SportBoxIE_tuple;
static PyObject *const_str_plain_bilibili;
static PyObject *const_tuple_str_plain_R7IE_str_plain_R7ArticleIE_tuple;
extern PyObject *const_str_plain_SportBoxIE;
extern PyObject *const_str_plain_DouyuTVIE;
static PyObject *const_str_plain_aljazeera;
extern PyObject *const_str_plain_FranceTVIE;
extern PyObject *const_str_plain_YourPornIE;
extern PyObject *const_str_plain_BioBioChileTVIE;
extern PyObject *const_str_plain_VideoPressIE;
static PyObject *const_str_plain_ora;
static PyObject *const_tuple_str_plain_TubiTvIE_tuple;
extern PyObject *const_str_plain_MojvideoIE;
static PyObject *const_str_plain_cnn;
extern PyObject *const_str_plain_EscapistIE;
static PyObject *const_str_plain_discoverynetworks;
static PyObject *const_tuple_str_plain_FOX9IE_str_plain_FOX9NewsIE_tuple;
static PyObject *const_str_plain_francetv;
extern PyObject *const_str_plain_webcaster;
static PyObject *const_str_plain_bitchute;
static PyObject *const_str_plain_biqle;
static PyObject *const_str_plain_snotr;
static PyObject *const_str_plain_hellporno;
extern PyObject *const_str_plain_DaumPlaylistIE;
static PyObject *const_tuple_str_plain_PopcorntimesIE_tuple;
extern PyObject *const_str_plain_medialaan;
extern PyObject *const_str_plain_NewgroundsPlaylistIE;
static PyObject *const_str_plain_digg;
static PyObject *const_str_plain_lcp;
extern PyObject *const_str_plain_VivoIE;
extern PyObject *const_str_plain_VLiveIE;
extern PyObject *const_tuple_str_plain_GoogleDriveIE_tuple;
extern PyObject *const_str_plain_LA7IE;
extern PyObject *const_str_plain_LibraryOfCongressIE;
static PyObject *const_str_plain_bild;
extern PyObject *const_tuple_str_plain_CondeNastIE_tuple;
extern PyObject *const_str_plain_GPUTechConfIE;
extern PyObject *const_str_plain_pladform;
static PyObject *const_tuple_str_plain_TVNoeIE_tuple;
extern PyObject *const_str_plain_NBCSportsVPlayerIE;
extern PyObject *const_str_plain_DailyMailIE;
static PyObject *const_tuple_str_plain_RedditIE_str_plain_RedditRIE_tuple;
extern PyObject *const_str_plain_ImgurIE;
static PyObject *const_str_plain_nationalgeographic;
static PyObject *const_str_plain_tele13;
extern PyObject *const_str_plain_VideomoreSeasonIE;
extern PyObject *const_str_plain_CBSNewsEmbedIE;
extern PyObject *const_str_plain_ufctv;
static PyObject *const_str_plain_vyborymos;
extern PyObject *const_str_plain_HuffPostIE;
static PyObject *const_tuple_str_plain_TVPlayerIE_tuple;
static PyObject *const_tuple_8d61ccd01ac70c4ab30026ba7a5bc7a2_tuple;
extern PyObject *const_str_plain_RutubePlaylistIE;
static PyObject *const_tuple_str_plain_ScrippsNetworksWatchIE_str_plain_ScrippsNetworksIE_tuple;
extern PyObject *const_str_plain_FuxIE;
extern PyObject *const_str_plain_LcpIE;
extern PyObject *const_str_plain_VineIE;
static PyObject *const_tuple_str_plain_TeamTreeHouseIE_tuple;
static PyObject *const_tuple_str_plain_CorusIE_tuple;
static PyObject *const_tuple_str_plain_SexuIE_tuple;
extern PyObject *const_str_plain_MicrosoftVirtualAcademyIE;
static PyObject *const_str_plain_nerdcubed;
static PyObject *const_str_plain_mangomolo;
extern PyObject *const_str_plain_NoovoIE;
static PyObject *const_str_plain_veehd;
extern PyObject *const_str_plain_nexx;
extern PyObject *const_str_plain_ATTTechChannelIE;
static PyObject *const_str_plain_beatport;
static PyObject *const_tuple_str_plain_TV2HuIE_tuple;
extern PyObject *const_str_plain_mofosex;
static PyObject *const_str_plain_charlierose;
static PyObject *const_str_plain_localnews8;
static PyObject *const_tuple_str_plain_StreamCZIE_tuple;
static PyObject *const_str_plain_thestar;
extern PyObject *const_str_plain_FoxNewsArticleIE;
extern PyObject *const_str_plain_youtube;
extern PyObject *const_str_plain_MorningstarIE;
extern PyObject *const_str_plain_NPORadioIE;
static PyObject *const_tuple_str_plain_HotStarIE_str_plain_HotStarPlaylistIE_tuple;
static PyObject *const_tuple_str_plain_TunePkIE_tuple;
static PyObject *const_tuple_str_plain_TeleTaskIE_tuple;
static PyObject *const_tuple_str_plain_MeipaiIE_tuple;
static PyObject *const_str_plain_crackle;
extern PyObject *const_tuple_str_plain_EaglePlatformIE_tuple;
static PyObject *const_tuple_str_plain_HotNewHipHopIE_tuple;
static PyObject *const_str_plain_buzzfeed;
static PyObject *const_tuple_str_plain_NoovoIE_tuple;
static PyObject *const_tuple_str_plain_Formula1IE_tuple;
extern PyObject *const_tuple_str_plain_AnvatoIE_tuple;
static PyObject *const_tuple_str_plain_FoxNewsIE_str_plain_FoxNewsArticleIE_tuple;
static PyObject *const_str_plain_playvid;
static PyObject *const_tuple_363b9edf103ddd05ee232683aa4cd757_tuple;
static PyObject *const_tuple_str_plain_ITVIE_str_plain_ITVBTCCIE_tuple;
extern PyObject *const_str_plain_MailRuMusicSearchIE;
static PyObject *const_str_plain_ynet;
extern PyObject *const_str_plain_MailRuIE;
extern PyObject *const_str_plain_metacafe;
static PyObject *const_tuple_str_plain_SRMediathekIE_tuple;
static PyObject *const_str_plain_ministrygrid;
static PyObject *const_tuple_str_plain_FranceCultureIE_tuple;
extern PyObject *const_str_plain_kaltura;
static PyObject *const_tuple_str_plain_AmericasTestKitchenIE_tuple;
extern PyObject *const_str_plain_TVPlayIE;
extern PyObject *const_str_plain_LeIE;
extern PyObject *const_str_plain_ivideon;
extern PyObject *const_str_plain_TV2DKBornholmPlayIE;
extern PyObject *const_str_plain_NhkVodIE;
static PyObject *const_tuple_str_plain_UstudioIE_str_plain_UstudioEmbedIE_tuple;
static PyObject *const_tuple_str_plain_HearThisAtIE_tuple;
static PyObject *const_str_plain_funk;
static PyObject *const_str_plain_rockstargames;
static PyObject *const_tuple_str_plain_PlaytvakIE_tuple;
extern PyObject *const_str_plain_playplustv;
extern PyObject *const_str_plain_RICEIE;
static PyObject *const_tuple_str_plain_SlideshareIE_tuple;
extern PyObject *const_str_plain_NineNowIE;
static PyObject *const_str_plain_polskieradio;
extern PyObject *const_str_plain_Tube8IE;
extern PyObject *const_str_plain_nhl;
extern PyObject *const_str_plain_KUSIIE;
static PyObject *const_tuple_71c9c30cc8ebd744889f26c615b0618c_tuple;
static PyObject *const_tuple_str_plain_CrunchyrollIE_str_plain_CrunchyrollShowPlaylistIE_tuple;
static PyObject *const_str_plain_ign;
static PyObject *const_tuple_str_plain_OoyalaIE_str_plain_OoyalaExternalIE_tuple;
extern PyObject *const_str_plain_piksel;
static PyObject *const_tuple_str_plain_ShahidIE_str_plain_ShahidShowIE_tuple;
extern PyObject *const_str_plain_XVideosIE;
static PyObject *const_str_plain_tvn24;
static PyObject *const_str_plain_jeuxvideo;
static PyObject *const_str_plain_xnxx;
extern PyObject *const_str_plain_PornComIE;
extern PyObject *const_str_plain_TVNowShowIE;
static PyObject *const_str_plain_tass;
extern PyObject *const_str_plain_RteRadioIE;
static PyObject *const_tuple_str_plain_UnityIE_tuple;
static PyObject *const_str_plain_ntvde;
static PyObject *const_str_plain_slideshare;
extern PyObject *const_str_plain_scte;
static PyObject *const_tuple_str_plain_CBSSportsIE_tuple;
extern PyObject *const_str_plain_TVPWebsiteIE;
extern PyObject *const_str_plain_Porn91IE;
static PyObject *const_tuple_str_plain_VootIE_tuple;
extern PyObject *const_str_plain_arkena;
extern PyObject *const_str_plain_IwaraIE;
extern PyObject *const_str_plain_KuwoIE;
static PyObject *const_str_plain_mdr;
static PyObject *const_tuple_str_plain_ExpoTVIE_tuple;
extern PyObject *const_str_plain_TwitchStreamIE;
static PyObject *const_str_plain_xbef;
static PyObject *const_tuple_str_plain_IqiyiIE_tuple;
extern PyObject *const_str_plain_XstreamIE;
extern PyObject *const_str_plain_hketv;
extern PyObject *const_str_plain_Tele13IE;
extern PyObject *const_str_plain_NonkTubeIE;
extern PyObject *const_tuple_str_plain_VzaarIE_tuple;
extern PyObject *const_str_plain_aenetworks;
extern PyObject *const_str_plain_CBSSportsIE;
static PyObject *const_tuple_str_plain_SonyLIVIE_tuple;
static PyObject *const_str_plain_steam;
static PyObject *const_tuple_str_plain_VrakIE_tuple;
static PyObject *const_str_plain_formula1;
extern PyObject *const_str_plain_FootyRoomIE;
static PyObject *const_tuple_str_plain_NYTimesIE_str_plain_NYTimesArticleIE_tuple;
static PyObject *const_str_plain_wat;
extern PyObject *const_str_plain_TwitchChapterIE;
static PyObject *const_tuple_6457496b50b4906b3896cf75be2cfdb3_tuple;
static PyObject *const_str_plain_gfycat;
extern PyObject *const_str_plain_ARDIE;
extern PyObject *const_str_plain_MyviIE;
static PyObject *const_str_plain_hitrecord;
extern PyObject *const_str_plain_YinYueTaiIE;
extern PyObject *const_str_plain_LRTIE;
extern PyObject *const_str_plain_teamtreehouse;
static PyObject *const_tuple_str_plain_PlayvidIE_tuple;
extern PyObject *const_str_plain_BilibiliAudioAlbumIE;
static PyObject *const_str_plain_lifenews;
static PyObject *const_tuple_str_plain_StreetVoiceIE_tuple;
static PyObject *const_tuple_str_plain_TechTVMITIE_str_plain_OCWMITIE_tuple;
extern PyObject *const_str_plain_abcnews;
extern PyObject *const_str_plain_ComedyCentralIE;
static PyObject *const_tuple_str_plain_InaIE_tuple;
extern PyObject *const_str_plain_KaraoketvIE;
extern PyObject *const_str_plain_MixcloudPlaylistIE;
extern PyObject *const_str_plain_XNXXIE;
extern PyObject *const_str_plain_UnistraIE;
extern PyObject *const_str_plain_BloombergIE;
static PyObject *const_str_plain_leeco;
static PyObject *const_str_plain_toypics;
static PyObject *const_str_plain_mwave;
extern PyObject *const_str_plain_TeachingChannelIE;
static PyObject *const_str_plain_tf1;
static PyObject *const_tuple_str_plain_YandexVideoIE_tuple;
extern PyObject *const_str_plain_MyChannelsIE;
static PyObject *const_tuple_str_plain_AENetworksIE_str_plain_HistoryTopicIE_tuple;
extern PyObject *const_str_plain_tube8;
extern PyObject *const_str_plain_VikiIE;
static PyObject *const_str_plain_flickr;
static PyObject *const_tuple_7c62a71a8376c40e16cc33d47a8df7ad_tuple;
extern PyObject *const_str_plain_lecturio;
static PyObject *const_tuple_str_plain_DiscoveryIE_tuple;
extern PyObject *const_str_plain_GrouponIE;
static PyObject *const_tuple_str_plain_TVCIE_str_plain_TVCArticleIE_tuple;
extern PyObject *const_str_plain_sportbox;
static PyObject *const_tuple_14014ae1493ed31d2938fcbe1505aee6_tuple;
extern PyObject *const_str_plain_CartoonNetworkIE;
static PyObject *const_tuple_str_plain_PressTVIE_tuple;
static PyObject *const_tuple_str_plain_HGTVComShowIE_tuple;
extern PyObject *const_str_plain_OneUPIE;
extern PyObject *const_str_plain_VimeoWatchLaterIE;
extern PyObject *const_str_plain_PeriscopeIE;
extern PyObject *const_str_plain_TNAFlixIE;
static PyObject *const_tuple_str_plain_DWIE_str_plain_DWArticleIE_tuple;
extern PyObject *const_str_plain_RuutuIE;
extern PyObject *const_str_plain_StretchInternetIE;
static PyObject *const_tuple_92f0885fc87047f30ecf07e5840fbf73_tuple;
extern PyObject *const_str_plain_SkylineWebcamsIE;
extern PyObject *const_str_plain_Vbox7IE;
static PyObject *const_tuple_str_plain_XimalayaIE_str_plain_XimalayaAlbumIE_tuple;
extern PyObject *const_str_plain_MiaoPaiIE;
extern PyObject *const_str_plain_MofosexEmbedIE;
static PyObject *const_tuple_str_plain_MiaoPaiIE_tuple;
static PyObject *const_str_plain_spankbang;
extern PyObject *const_str_plain_InstagramTagIE;
extern PyObject *const_str_plain_RadioDeIE;
extern PyObject *const_str_plain_FazIE;
extern PyObject *const_str_plain_ORFFM4IE;
extern PyObject *const_str_plain_YourUploadIE;
static PyObject *const_tuple_str_plain_CloserToTruthIE_tuple;
static PyObject *const_str_plain_gamestar;
static PyObject *const_tuple_str_plain_VoiceRepublicIE_tuple;
extern PyObject *const_str_plain_BlinkxIE;
extern PyObject *const_str_plain_CBSNewsLiveVideoIE;
static PyObject *const_tuple_str_plain_RTSIE_tuple;
static PyObject *const_tuple_str_plain_HornBunnyIE_tuple;
extern PyObject *const_str_plain_NetEaseMusicMvIE;
extern PyObject *const_str_plain_TelecincoIE;
extern PyObject *const_str_plain_VidbitIE;
static PyObject *const_str_plain_seznamzpravy;
extern PyObject *const_str_plain_TriluliluIE;
static PyObject *const_str_plain_pornovoisines;
extern PyObject *const_str_plain_soundgasm;
extern PyObject *const_str_plain_SouthParkDeIE;
extern PyObject *const_str_plain_ZattooLiveIE;
static PyObject *const_tuple_str_plain_HKETVIE_tuple;
extern PyObject *const_str_plain_CamdemyIE;
static PyObject *const_str_plain_regiotv;
extern PyObject *const_str_plain_SmotriUserIE;
extern PyObject *const_str_plain_EitbIE;
static PyObject *const_tuple_str_plain_AdultSwimIE_tuple;
static PyObject *const_tuple_str_plain_LentaIE_tuple;
extern PyObject *const_str_plain_npo;
static PyObject *const_tuple_str_plain_MassengeschmackTVIE_tuple;
static PyObject *const_tuple_str_plain_TennisTVIE_tuple;
extern PyObject *const_str_plain_cloudflarestream;
extern PyObject *const_str_plain_shahid;
static PyObject *const_str_plain_younow;
extern PyObject *const_str_plain_BigflixIE;
static PyObject *const_tuple_str_plain_IncIE_tuple;
extern PyObject *const_tuple_str_plain_SendtoNewsIE_tuple;
static PyObject *const_tuple_str_plain_RTPIE_tuple;
static PyObject *const_str_plain_daum;
extern PyObject *const_str_plain_TVPIE;
extern PyObject *const_str_plain_AdobeTVChannelIE;
extern PyObject *const_str_plain_Tele5IE;
static PyObject *const_str_plain_tastytrade;
extern PyObject *const_str_plain_chirbit;
extern PyObject *const_str_plain_has_location;
static PyObject *const_str_plain_rmcdecouverte;
extern PyObject *const_str_plain_TVNowNewIE;
static PyObject *const_tuple_str_plain_BellMediaIE_tuple;
extern PyObject *const_str_plain_WebcasterIE;
extern PyObject *const_str_plain_NZZIE;
static PyObject *const_tuple_str_plain_RuutuIE_tuple;
extern PyObject *const_str_plain_EsriVideoIE;
static PyObject *const_tuple_2e3741b1e123c8f08abadbbcf9e24e8b_tuple;
extern PyObject *const_str_plain_RTVEALaCartaIE;
extern PyObject *const_str_plain_vevo;
extern PyObject *const_tuple_str_plain_KalturaIE_tuple;
extern PyObject *const_str_plain_dplay;
static PyObject *const_tuple_672937f689dfcbfc1004d06d90565167_tuple;
extern PyObject *const_str_plain_WebcasterFeedIE;
extern PyObject *const_str_plain_teachertube;
extern PyObject *const_str_plain_BBCCoUkArticleIE;
extern PyObject *const_str_plain_laola1tv;
static PyObject *const_tuple_str_plain_TagesschauPlayerIE_str_plain_TagesschauIE_tuple;
extern PyObject *const_str_plain_SWRMediathekIE;
static PyObject *const_str_plain_cjsw;
extern PyObject *const_str_plain_youporn;
static PyObject *const_tuple_str_plain_MgoonIE_tuple;
static PyObject *const_tuple_str_plain_MatchTVIE_tuple;
extern PyObject *const_str_plain_TVPlayerIE;
extern PyObject *const_str_plain_DLiveStreamIE;
static PyObject *const_tuple_str_plain_FazIE_tuple;
extern PyObject *const_str_plain_HGTVComShowIE;
static PyObject *const_tuple_2c1c8e525365445aa920c0d021f8f564_tuple;
static PyObject *const_str_plain_ntvcojp;
extern PyObject *const_str_plain_Channel9IE;
extern PyObject *const_str_plain_PlayFMIE;
extern PyObject *const_str_plain_PikselIE;
extern PyObject *const_str_plain_QQMusicSingerIE;
extern PyObject *const_str_plain_MGTVIE;
static PyObject *const_tuple_str_plain_PuhuTVIE_str_plain_PuhuTVSerieIE_tuple;
extern PyObject *const_str_plain_YapFilesIE;
extern PyObject *const_str_plain_EllenTubePlaylistIE;
static PyObject *const_str_plain_videofyme;
extern PyObject *const_str_plain_SpankBangPlaylistIE;
extern PyObject *const_str_plain_YoutubeUserIE;
extern PyObject *const_str_plain_ITTFIE;
extern PyObject *const_str_plain_vshare;
extern PyObject *const_str_plain_FiveTVIE;
extern PyObject *const_str_plain_AnvatoIE;
extern PyObject *const_str_plain_AWAANSeasonIE;
extern PyObject *const_str_plain_DBTVIE;
extern PyObject *const_str_plain_DotsubIE;
extern PyObject *const_str_plain_facebook;
extern PyObject *const_str_plain_MNetTVIE;
extern PyObject *const_str_plain_nick;
extern PyObject *const_str_plain_VODPlIE;
static PyObject *const_str_plain_playwire;
static PyObject *const_str_plain_clubic;
extern PyObject *const_tuple_str_plain_Tube8IE_tuple;
extern PyObject *const_str_plain_UFCArabiaIE;
static PyObject *const_tuple_str_plain_RENTVIE_str_plain_RENTVArticleIE_tuple;
static PyObject *const_tuple_str_plain_VVVVIDIE_tuple;
extern PyObject *const_str_plain_DigitekaIE;
static PyObject *const_str_plain_varzesh3;
static PyObject *const_tuple_str_plain_KarriereVideosIE_tuple;
static PyObject *const_tuple_str_plain_CNNIE_str_plain_CNNBlogsIE_str_plain_CNNArticleIE_tuple;
extern PyObject *const_str_plain_OCWMITIE;
static PyObject *const_str_plain_jamendo;
static PyObject *const_str_plain_porncom;
static PyObject *const_str_plain_nextmedia;
static PyObject *const_tuple_str_plain_DRTVIE_str_plain_DRTVLiveIE_tuple;
extern PyObject *const_str_plain_HistoryTopicIE;
extern PyObject *const_str_plain_TelewebionIE;
extern PyObject *const_str_plain_vimple;
static PyObject *const_tuple_str_plain_HowStuffWorksIE_tuple;
extern PyObject *const_str_plain_NPOLiveIE;
extern PyObject *const_str_plain_BreakIE;
static PyObject *const_str_plain_showroomlive;
extern PyObject *const_str_plain_MDRIE;
static PyObject *const_tuple_str_plain_DefenseGouvFrIE_tuple;
extern PyObject *const_str_plain_FrontendMastersLessonIE;
extern PyObject *const_str_plain_MediasiteNamedCatalogIE;
extern PyObject *const_str_plain_TVNoeIE;
static PyObject *const_tuple_str_plain_ZDFIE_str_plain_ZDFChannelIE_tuple;
extern PyObject *const_str_plain_MediasetIE;
static PyObject *const_tuple_str_plain_DiggIE_tuple;
static PyObject *const_tuple_str_plain_MediciIE_tuple;
static PyObject *const_tuple_str_plain_NTVCoJpCUIE_tuple;
static PyObject *const_str_plain_rtp;
static PyObject *const_tuple_str_plain_VidioIE_tuple;
static PyObject *const_str_plain_foxsports;
extern PyObject *const_str_plain_InternetVideoArchiveIE;
extern PyObject *const_str_plain_NetPlusIE;
static PyObject *const_tuple_str_plain_DVTVIE_tuple;
static PyObject *const_tuple_str_plain_SproutIE_tuple;
extern PyObject *const_str_plain_YahooGyaOPlayerIE;
extern PyObject *const_str_plain_HuajiaoIE;
extern PyObject *const_str_plain_TikTokUserIE;
extern PyObject *const_str_plain_hidive;
static PyObject *const_str_plain_rai;
extern PyObject *const_str_plain_EbaumsWorldIE;
extern PyObject *const_str_plain_Formula1IE;
static PyObject *const_tuple_str_plain_ServusIE_tuple;
static PyObject *const_tuple_str_plain_BleacherReportIE_str_plain_BleacherReportCMSIE_tuple;
extern PyObject *const_str_plain_TeachableCourseIE;
static PyObject *const_tuple_d31216b8ee642c4f07770d393768d662_tuple;
extern PyObject *const_str_plain_imdb;
static PyObject *const_tuple_str_plain_TVAIE_tuple;
static PyObject *const_str_plain_sexu;
extern PyObject *const_str_plain_odnoklassniki;
extern PyObject *const_str_plain_TestURLIE;
static PyObject *const_tuple_str_plain_OraTVIE_tuple;
extern PyObject *const_str_plain_DouyuShowIE;
static PyObject *const_str_plain_youjizz;
static PyObject *const_tuple_str_plain_XBefIE_tuple;
extern PyObject *const_str_plain_KonserthusetPlayIE;
extern PyObject *const_str_plain_xhamster;
extern PyObject *const_str_plain_TheStarIE;
static PyObject *const_str_plain_telebruxelles;
extern PyObject *const_str_plain_uplynk;
extern PyObject *const_str_plain_ORFOE1IE;
extern PyObject *const_str_plain_FranceCultureIE;
static PyObject *const_str_plain_zdf;
extern PyObject *const_str_plain_CondeNastIE;
extern PyObject *const_str_plain_QQMusicPlaylistIE;
extern PyObject *const_str_plain_C56IE;
extern PyObject *const_str_plain_SkyNewsArabiaIE;
extern PyObject *const_str_plain_UplynkPreplayIE;
extern PyObject *const_str_plain_VideoDetectiveIE;
extern PyObject *const_str_plain_WeiboMobileIE;
static PyObject *const_tuple_str_plain_CamdemyIE_str_plain_CamdemyFolderIE_tuple;
extern PyObject *const_str_plain_radiocanada;
static PyObject *const_tuple_str_plain_IwaraIE_tuple;
static PyObject *const_str_plain_raywenderlich;
extern PyObject *const_str_plain_KinoPoiskIE;
extern PyObject *const_str_plain_MnetIE;
extern PyObject *const_str_plain_QuicklineLiveIE;
static PyObject *const_tuple_str_plain_EscapistIE_tuple;
extern PyObject *const_str_plain_InaIE;
static PyObject *const_tuple_str_plain_BeamProLiveIE_str_plain_BeamProVodIE_tuple;
extern PyObject *const_str_plain_indavideo;
static PyObject *const_tuple_str_plain_MuenchenTVIE_tuple;
extern PyObject *const_str_plain_toutv;
static PyObject *const_tuple_str_plain_FoxgayIE_tuple;
extern PyObject *const_str_plain_RutubeEmbedIE;
extern PyObject *const_str_plain_hotstar;
static PyObject *const_tuple_str_plain_PornoXOIE_tuple;
extern PyObject *const_str_plain_cbsnews;
static PyObject *const_str_plain_meipai;
extern PyObject *const_str_plain_PhoenixIE;
static PyObject *const_tuple_str_plain_DumpertIE_tuple;
extern PyObject *const_str_plain_OnDemandKoreaIE;
extern PyObject *const_str_plain_WebOfStoriesIE;
static PyObject *const_tuple_f5fe873df175fa3a244b569f03c05a7c_tuple;
extern PyObject *const_str_plain_SkyNewsArabiaArticleIE;
static PyObject *const_tuple_str_plain_PeopleIE_tuple;
extern PyObject *const_str_plain_StanfordOpenClassroomIE;
static PyObject *const_tuple_str_plain_TVPEmbedIE_str_plain_TVPIE_str_plain_TVPWebsiteIE_tuple;
extern PyObject *const_str_plain_ximalaya;
static PyObject *const_tuple_str_plain_SinaIE_tuple;
static PyObject *const_tuple_str_plain_CMTIE_tuple;
static PyObject *const_tuple_str_plain_AdobeConnectIE_tuple;
extern PyObject *const_str_plain_QQMusicIE;
extern PyObject *const_str_plain_NFLIE;
extern PyObject *const_str_plain_EinthusanIE;
static PyObject *const_tuple_str_plain_KankanIE_tuple;
extern PyObject *const_str_plain_InternazionaleIE;
extern PyObject *const_str_plain_naver;
static PyObject *const_str_plain_streetvoice;
static PyObject *const_tuple_str_plain_BloombergIE_tuple;
static PyObject *const_tuple_str_plain_SRGSSRIE_str_plain_SRGSSRPlayIE_tuple;
static PyObject *const_str_plain_mitele;
extern PyObject *const_str_plain_WebOfStoriesPlaylistIE;
extern PyObject *const_str_plain_EuropaIE;
extern PyObject *const_str_plain_twitch;
extern PyObject *const_str_plain_FranceTVInfoIE;
static PyObject *const_tuple_str_plain_ATTTechChannelIE_tuple;
extern PyObject *const_str_plain_UstreamIE;
extern PyObject *const_str_plain_SAKTVIE;
static PyObject *const_str_plain_sina;
extern PyObject *const_str_plain_AndereTijdenIE;
extern PyObject *const_str_plain_VideomoreVideoIE;
extern PyObject *const_str_plain_WWEIE;
extern PyObject *const_str_plain_YouNowChannelIE;
extern PyObject *const_str_plain_pluralsight;
extern PyObject *const_str_plain_RayWenderlichCourseIE;
static PyObject *const_str_plain_rozhlas;
extern PyObject *const_str_plain_JojIE;
extern PyObject *const_str_plain_ORFNOEIE;
extern PyObject *const_str_plain_ABCOTVSClipsIE;
static PyObject *const_str_plain_skylinewebcams;
extern PyObject *const_str_plain_PicartoVodIE;
extern PyObject *const_str_plain_XimalayaIE;
extern PyObject *const_str_plain_ComedyCentralFullEpisodesIE;
extern PyObject *const_str_plain_TVANouvellesIE;
static PyObject *const_tuple_str_plain_ImdbIE_str_plain_ImdbListIE_tuple;
extern PyObject *const_str_plain_joj;
extern PyObject *const_str_plain_YouNowMomentIE;
static PyObject *const_str_plain_teletask;
static PyObject *const_tuple_str_plain_EyedoTVIE_tuple;
extern PyObject *const_str_plain_CtsNewsIE;
static PyObject *const_tuple_str_plain_RTVNHIE_tuple;
extern PyObject *const_str_plain_SaltTVIE;
extern PyObject *const_str_plain_audiomack;
extern PyObject *const_str_plain_NPOIE;
extern PyObject *const_str_plain_byutv;
static PyObject *const_str_plain_camwithher;
static PyObject *const_str_plain_tvnet;
static PyObject *const_tuple_str_plain_TheWeatherChannelIE_tuple;
extern PyObject *const_str_plain_BrightcoveLegacyIE;
static PyObject *const_str_plain_xvideos;
extern PyObject *const_str_plain_GolemIE;
static PyObject *const_str_plain_huajiao;
extern PyObject *const_str_plain_KickStarterIE;
extern PyObject *const_str_plain_NRKPlaylistIE;
extern PyObject *const_str_plain_videopress;
static PyObject *const_str_plain_karrierevideos;
extern PyObject *const_str_plain_mediasite;
static PyObject *const_tuple_str_plain_StitcherIE_tuple;
static PyObject *const_tuple_str_plain_PBSIE_tuple;
extern PyObject *const_str_plain_CBSLocalIE;
extern PyObject *const_str_plain_AcademicEarthCourseIE;
static PyObject *const_str_plain_nonktube;
extern PyObject *const_str_plain_NRKTVSeriesIE;
extern PyObject *const_str_plain_TwitchVodIE;
static PyObject *const_str_plain_tvnow;
extern PyObject *const_str_plain_CeskaTelevizeIE;
extern PyObject *const_str_plain_ViuPlaylistIE;
static PyObject *const_str_plain_teamcoco;
extern PyObject *const_str_plain_VrakIE;
static PyObject *const_tuple_str_plain_LineTVIE_tuple;
extern PyObject *const_str_plain_HungamaSongIE;
extern PyObject *const_str_plain_RTSIE;
extern PyObject *const_str_plain_FreesoundIE;
extern PyObject *const_str_plain_TwitchProfileIE;
static PyObject *const_str_plain_microsoftvirtualacademy;
static PyObject *const_str_plain_redbulltv;
static PyObject *const_tuple_str_plain_FunkIE_tuple;
extern PyObject *const_str_plain_KuwoMvIE;
static PyObject *const_str_plain_egghead;
extern PyObject *const_str_plain_TurboIE;
extern PyObject *const_str_plain_libsyn;
static PyObject *const_tuple_str_plain_UOLIE_tuple;
static PyObject *const_str_plain_googleplus;
static PyObject *const_str_plain_rtbf;
extern PyObject *const_str_plain_UnityIE;
static PyObject *const_str_plain_glide;
extern PyObject *const_str_plain_KakaoIE;
extern PyObject *const_str_plain_SeekerIE;
extern PyObject *const_str_plain_NownessIE;
extern PyObject *const_str_plain_SRGSSRIE;
static PyObject *const_tuple_str_plain_CanalplusIE_tuple;
extern PyObject *const_tuple_str_plain_KinjaEmbedIE_tuple;
static PyObject *const_str_plain_wwe;
static PyObject *const_str_plain_commonmistakes;
extern PyObject *const_str_plain_NintendoIE;
static PyObject *const_tuple_str_plain_DiscoveryNetworksDeIE_tuple;
static PyObject *const_tuple_str_plain_KaraoketvIE_tuple;
extern PyObject *const_str_plain_BeegIE;
extern PyObject *const_str_plain_LnkGoIE;
extern PyObject *const_str_plain_MwaveIE;
extern PyObject *const_str_plain_vidme;
static PyObject *const_tuple_str_plain_YouJizzIE_tuple;
extern PyObject *const_str_plain_OraTVIE;
static PyObject *const_tuple_str_plain_BRIE_str_plain_BRMediathekIE_tuple;
static PyObject *const_str_plain_odatv;
static PyObject *const_tuple_str_plain_NonkTubeIE_tuple;
extern PyObject *const_str_plain_NextMediaActionNewsIE;
extern PyObject *const_str_plain_TeleQuebecLiveIE;
static PyObject *const_str_plain_cbsinteractive;
static PyObject *const_str_plain_usanetwork;
extern PyObject *const_str_plain_golem;
static PyObject *const_str_plain_ebaumsworld;
static PyObject *const_tuple_d9dbadd0367cc19cceb8eea6f8a38581_tuple;
extern PyObject *const_str_plain_UdemyIE;
static PyObject *const_str_plain_businessinsider;
static PyObject *const_tuple_str_plain_AsianCrushIE_str_plain_AsianCrushPlaylistIE_tuple;
extern PyObject *const_str_plain_HearThisAtIE;
extern PyObject *const_str_plain_frontendmasters;
static PyObject *const_tuple_str_plain_ChirbitIE_str_plain_ChirbitProfileIE_tuple;
static PyObject *const_tuple_str_plain_EchoMskIE_tuple;
extern PyObject *const_str_plain_CanvasEenIE;
extern PyObject *const_str_plain_DiggIE;
static PyObject *const_str_plain_sunporno;
extern PyObject *const_str_plain_fox;
static PyObject *const_str_plain_historicfilms;
static PyObject *const_tuple_str_plain_HypemIE_tuple;
static PyObject *const_tuple_str_plain_NosVideoIE_tuple;
static PyObject *const_tuple_str_plain_NobelPrizeIE_tuple;
extern PyObject *const_str_plain_PlayPlusTVIE;
static PyObject *const_tuple_str_plain_InfoQIE_tuple;
extern PyObject *const_str_plain_CloudflareStreamIE;
static PyObject *const_tuple_73a47d98e51d68658afc43c3e5f3130f_tuple;
static PyObject *const_tuple_str_plain_GloboIE_str_plain_GloboArticleIE_tuple;
extern PyObject *const_str_plain_KinjaEmbedIE;
static PyObject *const_str_plain_nuvid;
extern PyObject *const_tuple_str_plain_VideoPressIE_tuple;
static PyObject *const_str_plain_voicerepublic;
extern PyObject *const_str_plain_gdcvault;
static PyObject *const_tuple_str_plain_HitRecordIE_tuple;
extern PyObject *const_str_plain_RaiPlayLiveIE;
extern PyObject *const_str_plain_RutubeIE;
static PyObject *const_tuple_str_plain_WatchBoxIE_tuple;
extern PyObject *const_str_plain_ShowRoomLiveIE;
static PyObject *const_tuple_str_plain_FiveTVIE_tuple;
static PyObject *const_tuple_str_plain_RTBFIE_tuple;
extern PyObject *const_str_plain_ArteTVPlus7IE;
extern PyObject *const_str_plain_StreamCZIE;
extern PyObject *const_str_plain_FoxgayIE;
extern PyObject *const_str_plain_WistiaIE;
static PyObject *const_str_plain_reddit;
extern PyObject *const_str_plain_viqeo;
static PyObject *const_tuple_str_plain_TVLandIE_tuple;
extern PyObject *const_str_plain_YoutubeSubscriptionsIE;
extern PyObject *const_str_plain_BildIE;
extern PyObject *const_str_plain_PandoraTVIE;
extern PyObject *const_str_plain_LinkedInLearningCourseIE;
extern PyObject *const_str_plain_LCIIE;
extern PyObject *const_str_plain_TwitterBroadcastIE;
static PyObject *const_tuple_str_plain_CCTVIE_tuple;
extern PyObject *const_str_plain_abcotvs;
extern PyObject *const_str_plain_TechTVMITIE;
static PyObject *const_tuple_str_plain_MySpaceIE_str_plain_MySpaceAlbumIE_tuple;
extern PyObject *const_str_plain_MotherlessGroupIE;
static PyObject *const_str_plain_veoh;
static PyObject *const_tuple_str_plain_RadioJavanIE_tuple;
static PyObject *const_tuple_str_plain_PandoraTVIE_tuple;
static PyObject *const_tuple_str_plain_AliExpressLiveIE_tuple;
static PyObject *const_str_plain_webofstories;
extern PyObject *const_str_plain_YandexVideoIE;
static PyObject *const_tuple_9f56c3829eefc56f82d5c115157a02ff_tuple;
static PyObject *const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple;
extern PyObject *const_str_plain_ProSiebenSat1IE;
extern PyObject *const_str_plain_soundcloud;
extern PyObject *const_str_plain_LifeNewsIE;
static PyObject *const_str_plain_tdslifeway;
extern PyObject *const_str_plain_RedBullTVIE;
extern PyObject *const_str_plain_drtv;
static PyObject *const_tuple_str_plain_PokemonIE_tuple;
extern PyObject *const_str_plain_XXXYMoviesIE;
extern PyObject *const_str_plain_PluralsightCourseIE;
static PyObject *const_tuple_str_plain_XMinusIE_tuple;
static PyObject *const_str_plain_stitcher;
extern PyObject *const_str_plain_ClipRsIE;
extern PyObject *const_str_plain_KuwoCategoryIE;
static PyObject *const_tuple_str_plain_ADNIE_tuple;
static PyObject *const_str_plain_izlesene;
extern PyObject *const_str_plain_JoveIE;
extern PyObject *const_str_plain_TuneInClipIE;
extern PyObject *const_str_plain_nowness;
static PyObject *const_str_plain_pyvideo;
extern PyObject *const_str_plain_BeamProVodIE;
extern PyObject *const_str_plain_PlatziIE;
static PyObject *const_str_plain_slideslive;
extern PyObject *const_str_plain_LetvCloudIE;
extern PyObject *const_str_plain_ustudio;
extern PyObject *const_str_plain_YandexMusicTrackIE;
static PyObject *const_tuple_str_plain_YinYueTaiIE_tuple;
static PyObject *const_tuple_str_plain_Lecture2GoIE_tuple;
static PyObject *const_str_plain_rtvs;
extern PyObject *const_str_plain_MiTeleIE;
static PyObject *const_str_plain_ninenow;
static PyObject *const_str_plain_franceinter;
static PyObject *const_str_plain_internazionale;
static PyObject *const_tuple_str_plain_CeskaTelevizeIE_str_plain_CeskaTelevizePoradyIE_tuple;
extern PyObject *const_str_plain_globo;
static PyObject *const_str_plain_vodpl;
static PyObject *const_str_plain_yinyuetai;
extern PyObject *const_str_plain_MTVIE;
extern PyObject *const_str_plain_ImgurGalleryIE;
extern PyObject *const_str_plain_NickIE;
extern PyObject *const_str_plain_PatreonIE;
extern PyObject *const_str_plain_SapoIE;
extern PyObject *const_str_plain_BBVTVIE;
static PyObject *const_str_plain_mgtv;
static PyObject *const_tuple_str_plain_UKTVPlayIE_tuple;
extern PyObject *const_str_plain_ACastChannelIE;
extern PyObject *const_str_plain_VeohIE;
extern PyObject *const_str_plain_PlaywireIE;
extern PyObject *const_str_plain_eagleplatform;
extern PyObject *const_str_plain_tinypic;
static PyObject *const_tuple_str_plain_WorldStarHipHopIE_tuple;
static PyObject *const_tuple_str_plain_CultureUnpluggedIE_tuple;
extern PyObject *const_tuple_str_plain_XstreamIE_tuple;
static PyObject *const_tuple_str_plain_PolskieRadioIE_str_plain_PolskieRadioCategoryIE_tuple;
extern PyObject *const_str_plain_liveleak;
static PyObject *const_tuple_8acfa8ff02cc89cec07cbc6382f4ed35_tuple;
static PyObject *const_str_plain_urplay;
static PyObject *const_tuple_str_plain_YourUploadIE_tuple;
extern PyObject *const_str_plain_zingmp3;
static PyObject *const_str_plain_behindkink;
static PyObject *const_tuple_str_plain_HellPornoIE_tuple;
static PyObject *const_tuple_str_plain_EinthusanIE_tuple;
static PyObject *const_str_plain_carambatv;
extern PyObject *const_str_plain_ParliamentLiveUKIE;
static PyObject *const_str_plain_rtlnl;
extern PyObject *const_str_plain_DiscoveryVRIE;
static PyObject *const_str_plain_mit;
static PyObject *const_tuple_933597edc4f57e04a7617717b06e4514_tuple;
static PyObject *const_tuple_str_plain_FC2IE_str_plain_FC2EmbedIE_tuple;
extern PyObject *const_str_plain_MediciIE;
extern PyObject *const_str_plain_ToypicsUserIE;
extern PyObject *const_str_plain_EngadgetIE;
extern PyObject *const_str_plain_VideaIE;
extern PyObject *const_str_plain_curiositystream;
extern PyObject *const_str_plain_XTubeUserIE;
extern PyObject *const_str_plain_PolskieRadioIE;
static PyObject *const_str_plain_tenplay;
extern PyObject *const_str_plain_GDCVaultIE;
extern PyObject *const_str_plain_NobelPrizeIE;
extern PyObject *const_str_plain_AppleTrailersIE;
extern PyObject *const_str_plain_DrTuberIE;
extern PyObject *const_str_plain_SVTPageIE;
static PyObject *const_str_plain_unity;
extern PyObject *const_str_plain_Ir90TvIE;
extern PyObject *const_str_plain_PornoXOIE;
static PyObject *const_str_plain_hungama;
extern PyObject *const_str_plain_TwitchVideoIE;
extern PyObject *const_str_plain_ExtremeTubeIE;
static PyObject *const_str_plain_trilulilu;
extern PyObject *const_str_plain_MoeVideoIE;
static PyObject *const_tuple_str_plain_ElPaisIE_tuple;
static PyObject *const_tuple_str_plain_YourPornIE_tuple;
static PyObject *const_tuple_str_plain_CWTVIE_tuple;
extern PyObject *const_str_plain_ABCOTVSIE;
static PyObject *const_str_plain_crooksandliars;
extern PyObject *const_str_plain_BandcampIE;
extern PyObject *const_str_plain_TV5MondePlusIE;
static PyObject *const_tuple_str_plain_Tele13IE_tuple;
static PyObject *const_str_plain_fourtube;
extern PyObject *const_str_plain_CamWithHerIE;
static PyObject *const_tuple_str_plain_VideoDetectiveIE_tuple;
extern PyObject *const_str_plain_vrv;
extern PyObject *const_str_plain_TeleQuebecIE;
static PyObject *const_str_plain_biobiochiletv;
static PyObject *const_str_plain_krasview;
extern PyObject *const_str_plain_myvi;
static PyObject *const_str_plain_tweakers;
extern PyObject *const_str_plain_WakanimIE;
static PyObject *const_tuple_str_plain_HuffPostIE_tuple;
extern PyObject *const_str_plain_EchoMskIE;
static PyObject *const_tuple_2081a921fb965b7ed0955c1edb72f220_tuple;
extern PyObject *const_str_plain_NTVCoJpCUIE;
extern PyObject *const_str_plain_BleacherReportCMSIE;
extern PyObject *const_str_plain_RutubePersonIE;
extern PyObject *const_str_plain_FilmOnIE;
static PyObject *const_str_plain_phoenix;
extern PyObject *const_str_plain_ToypicsIE;
extern PyObject *const_str_plain_platzi;
extern PyObject *const_str_plain_DPlayIE;
static PyObject *const_str_plain_cinchcast;
static PyObject *const_tuple_str_plain_TeacherTubeIE_str_plain_TeacherTubeUserIE_tuple;
extern PyObject *const_str_plain_FiveThirtyEightIE;
extern PyObject *const_str_plain_FilmOnChannelIE;
extern PyObject *const_str_plain_SpankBangIE;
static PyObject *const_tuple_str_plain_CrooksAndLiarsIE_tuple;
extern PyObject *const_str_plain_CNNArticleIE;
extern PyObject *const_str_plain_MovieClipsIE;
extern PyObject *const_str_plain_hbo;
extern PyObject *const_str_plain___cached__;
static PyObject *const_str_plain_nrl;
extern PyObject *const_str_plain_qqmusic;
static PyObject *const_str_plain_sportdeutschland;
extern PyObject *const_str_plain_ManyVidsIE;
extern PyObject *const_str_plain_WNLIE;
static PyObject *const_tuple_str_plain_NewstubeIE_tuple;
static PyObject *const_tuple_str_plain_DFBIE_tuple;
static PyObject *const_str_plain_mgoon;
extern PyObject *const_str_plain_zype;
static PyObject *const_str_plain_rbmaradio;
static PyObject *const_str_plain_myvidster;
extern PyObject *const_str_plain_VidziIE;
static PyObject *const_tuple_str_plain_LifeNewsIE_str_plain_LifeEmbedIE_tuple;
extern PyObject *const_str_plain_ClippitIE;
extern PyObject *const_str_plain_YoutubeFavouritesIE;
extern PyObject *const_str_plain_inc;
static PyObject *const_tuple_str_plain_WatIE_tuple;
static PyObject *const_tuple_str_plain_VevoIE_str_plain_VevoPlaylistIE_tuple;
extern PyObject *const_str_plain_EllenTubeVideoIE;
extern PyObject *const_int_pos_1;
static PyObject *const_tuple_str_plain_FirstTVIE_tuple;
static PyObject *const_str_plain_rtvnh;
extern PyObject *const_str_plain_tubitv;
extern PyObject *const_str_plain_FranceTVEmbedIE;
extern PyObject *const_str_plain_MgoonIE;
static PyObject *const_tuple_str_plain_KetnetIE_tuple;
extern PyObject *const_tuple_str_plain_TwentyMinutenIE_tuple;
static PyObject *const_tuple_30bfc9dcdb5163dc197d85002aa8178a_tuple;
static PyObject *const_tuple_str_plain_MallTVIE_tuple;
static PyObject *const_tuple_str_plain_VH1IE_tuple;
extern PyObject *const_str_plain_MovingImageIE;
static PyObject *const_tuple_str_plain_FreesoundIE_tuple;
static PyObject *const_str_plain_rds;
extern PyObject *const_str_plain_NownessSeriesIE;
static PyObject *const_str_plain_zapiks;
static PyObject *const_tuple_str_plain_TechTalksIE_tuple;
static PyObject *const_str_plain_iprima;
extern PyObject *const_str_plain_VimeoGroupsIE;
extern PyObject *const_str_plain_NetEaseMusicIE;
extern PyObject *const_str_plain_YoutubePlaylistIE;
extern PyObject *const_str_plain_funimation;
static PyObject *const_tuple_str_plain_HiDiveIE_tuple;
static PyObject *const_str_plain_worldstarhiphop;
static PyObject *const_str_plain_xxxymovies;
extern PyObject *const_str_plain_DaumIE;
extern PyObject *const_str_plain_DTubeIE;
static PyObject *const_str_plain_kusi;
static PyObject *const_str_plain_tvanouvelles;
static PyObject *const_str_plain_cammodels;
extern PyObject *const_str_plain_YoutubeChannelIE;
extern PyObject *const_str_plain_puls4;
extern PyObject *const_str_plain_KatsomoIE;
static PyObject *const_str_plain_tvnoe;
static PyObject *const_tuple_str_plain_ViewLiftIE_str_plain_ViewLiftEmbedIE_tuple;
extern PyObject *const_str_plain_AppleDailyIE;
static PyObject *const_tuple_str_plain_ViideaIE_tuple;
extern PyObject *const_str_plain_HetKlokhuisIE;
static PyObject *const_str_plain_reuters;
static PyObject *const_tuple_str_plain_CBSInteractiveIE_tuple;
extern PyObject *const_str_plain_ORFTIRIE;
extern PyObject *const_str_plain_RTL2YouSeriesIE;
extern PyObject *const_tuple_str_plain_SpiegeltvIE_tuple;
static PyObject *const_tuple_str_plain_PornoVoisinesIE_tuple;
static PyObject *const_tuple_str_plain_LoveHomePornIE_tuple;
static PyObject *const_tuple_str_plain_CommonMistakesIE_str_plain_UnicodeBOMIE_tuple;
extern PyObject *const_str_plain_dvtv;
extern PyObject *const_str_plain_ComedyCentralTVIE;
static PyObject *const_str_plain_massengeschmacktv;
extern PyObject *const_str_plain_QQMusicToplistIE;
static PyObject *const_tuple_str_plain_TestURLIE_tuple;
static PyObject *const_str_plain_deezer;
static PyObject *const_str_plain_nytimes;
static PyObject *const_tuple_str_plain_TruNewsIE_tuple;
static PyObject *const_tuple_str_plain_SlidesLiveIE_tuple;
static PyObject *const_tuple_7fa36dd7b95e542658f01f53afe93a33_tuple;
static PyObject *const_str_plain_giantbomb;
static PyObject *const_tuple_str_plain_SpiegelIE_str_plain_SpiegelArticleIE_tuple;
static PyObject *const_tuple_str_plain_NTVDeIE_tuple;
static PyObject *const_tuple_str_plain_ClippitIE_tuple;
extern PyObject *const_str_plain_TeleMBIE;
extern PyObject *const_tuple_str_plain_CBSIE_tuple;
extern PyObject *const_str_plain_VidLiiIE;
extern PyObject *const_str_plain_cbs;
static PyObject *const_tuple_str_plain_StreamcloudIE_tuple;
extern PyObject *const_str_plain_VimeoIE;
extern PyObject *const_str_plain_AdobeTVIE;
extern PyObject *const_str_plain_SmotriIE;
static PyObject *const_str_plain_twitcasting;
extern PyObject *const_str_plain_PearVideoIE;
extern PyObject *const_str_plain_HornBunnyIE;
extern PyObject *const_str_plain_NovaIE;
static PyObject *const_str_digest_47f8976ec65784db88447db04386ca84;
static PyObject *const_tuple_str_plain_AudiMediaIE_tuple;
extern PyObject *const_str_plain_UnicodeBOMIE;
extern PyObject *const_str_plain_BusinessInsiderIE;
extern PyObject *const_str_plain_TMZArticleIE;
static PyObject *const_str_plain_npr;
extern PyObject *const_str_plain_NuvidIE;
static PyObject *const_tuple_str_plain_NocoIE_tuple;
extern PyObject *const_str_plain_RedditRIE;
static PyObject *const_str_plain_cinemax;
static PyObject *const_str_plain_comedycentral;
extern PyObject *const_tuple_str_plain_RUTVIE_tuple;
extern PyObject *const_str_plain_SixPlayIE;
extern PyObject *const_str_plain_mlb;
static PyObject *const_str_plain_morningstar;
static PyObject *const_tuple_str_plain_BioBioChileTVIE_tuple;
extern PyObject *const_str_plain_MelonVODIE;
static PyObject *const_str_plain_philharmoniedeparis;
extern PyObject *const_str_plain_PyvideoIE;
static PyObject *const_str_plain_ketnet;
static PyObject *const_tuple_str_plain_EpornerIE_tuple;
extern PyObject *const_str_plain_CBSIE;
extern PyObject *const_str_plain_blinkx;
static PyObject *const_str_plain_watchbox;
extern PyObject *const_tuple_str_plain_PeerTubeIE_tuple;
static PyObject *const_str_plain_bigflix;
extern PyObject *const_str_plain_RutubeChannelIE;
static PyObject *const_tuple_str_plain_VestiIE_tuple;
extern PyObject *const_str_plain_TuneInProgramIE;
extern PyObject *const_str_plain_SVTSeriesIE;
static PyObject *const_tuple_str_plain_VODPlatformIE_tuple;
extern PyObject *const_str_plain_BIQLEIE;
static PyObject *const_tuple_str_plain_XboxClipsIE_tuple;
static PyObject *const_tuple_str_plain_CharlieRoseIE_tuple;
static PyObject *const_str_plain_yourupload;
static PyObject *const_str_plain_screencastomatic;
static PyObject *const_tuple_str_plain_WebcasterIE_str_plain_WebcasterFeedIE_tuple;
static PyObject *const_tuple_str_plain_HistoricFilmsIE_tuple;
extern PyObject *const_str_plain_TVPEmbedIE;
static PyObject *const_tuple_str_plain_TF1IE_tuple;
extern PyObject *const_str_plain_afreecatv;
extern PyObject *const_str_plain_SoundcloudTrackStationIE;
extern PyObject *const_str_plain_SaveFromIE;
static PyObject *const_tuple_str_plain_SoundgasmIE_str_plain_SoundgasmProfileIE_tuple;
static PyObject *const_tuple_str_plain_CanvasIE_str_plain_CanvasEenIE_str_plain_VrtNUIE_tuple;
static PyObject *const_str_plain_ellentube;
static PyObject *const_tuple_ef58271ad2456395f805d453d2e56d92_tuple;
extern PyObject *const_str_plain_WatIE;
extern PyObject *const_str_plain_UplynkIE;
static PyObject *const_str_plain_camdemy;
static PyObject *const_tuple_str_plain_CCMAIE_tuple;
static PyObject *const_tuple_str_plain_NormalbootsIE_tuple;
static PyObject *const_str_plain_presstv;
static PyObject *const_tuple_str_plain_MySpassIE_tuple;
static PyObject *const_tuple_str_plain_ClubicIE_tuple;
extern PyObject *const_str_plain_TVNowIE;
extern PyObject *const_str_plain_RTVEInfantilIE;
extern PyObject *const_str_plain_TEDIE;
extern PyObject *const_str_plain_OnetChannelIE;
extern PyObject *const_str_plain_AsianCrushIE;
static PyObject *const_tuple_str_plain_Sport5IE_tuple;
extern PyObject *const_str_plain_vk;
static PyObject *const_tuple_str_plain_RadioBremenIE_tuple;
static PyObject *const_tuple_str_plain_AppleTrailersIE_str_plain_AppleTrailersSectionIE_tuple;
extern PyObject *const_str_plain_TenPlayIE;
static PyObject *const_str_plain_firsttv;
extern PyObject *const_str_plain_TwitchPastBroadcastsIE;
extern PyObject *const_tuple_str_plain_YapFilesIE_tuple;
extern PyObject *const_str_plain_CCTVIE;
static PyObject *const_tuple_str_plain_MorningstarIE_tuple;
static PyObject *const_tuple_str_plain_HowcastIE_tuple;
static PyObject *const_str_plain_lenta;
extern PyObject *const_str_plain_CuriosityStreamIE;
static PyObject *const_tuple_str_plain_LiveJournalIE_tuple;
extern PyObject *const_str_plain_FreshLiveIE;
static PyObject *const_tuple_str_plain_GaiaIE_tuple;
extern PyObject *const_str_plain_MyVidsterIE;
static PyObject *const_tuple_str_plain_DLiveVODIE_str_plain_DLiveStreamIE_tuple;
static PyObject *const_str_plain_pinkbike;
extern PyObject *const_str_plain_YoutubeSearchIE;
extern PyObject *const_str_plain_tvplay;
extern PyObject *const_str_plain_CinemaxIE;
static PyObject *const_tuple_str_plain_WebOfStoriesIE_str_plain_WebOfStoriesPlaylistIE_tuple;
extern PyObject *const_str_plain_ooyala;
static PyObject *const_tuple_68575a65b37001279b95f523a7db12ca_tuple;
extern PyObject *const_str_plain_HiDiveIE;
static PyObject *const_str_plain_telecinco;
extern PyObject *const_str_plain_USANetworkIE;
static PyObject *const_str_plain_ruutu;
extern PyObject *const_str_plain_PeerTubeIE;
static PyObject *const_str_plain_tele5;
static PyObject *const_str_plain_coub;
extern PyObject *const_str_plain_BFIPlayerIE;
extern PyObject *const_str_plain_PuhuTVSerieIE;
static PyObject *const_tuple_dfb2abcf7044378b82c50c23596fc9c3_tuple;
extern PyObject *const_str_plain_KeezMoviesIE;
static PyObject *const_tuple_str_plain_YandexDiskIE_tuple;
extern PyObject *const_str_plain_YouJizzIE;
static PyObject *const_tuple_str_plain_CNBCIE_str_plain_CNBCVideoIE_tuple;
extern PyObject *const_str_plain_WalyTVIE;
static PyObject *const_str_plain_servus;
static PyObject *const_tuple_str_plain_TBSIE_tuple;
static PyObject *const_str_plain_heise;
extern PyObject *const_str_plain_VidmeUserLikesIE;
static PyObject *const_tuple_str_plain_TinyPicIE_tuple;
extern PyObject *const_str_plain_onionstudios;
extern PyObject *const_tuple_str_plain_SpankwireIE_tuple;
extern PyObject *const_str_plain_RegioTVIE;
static PyObject *const_str_plain_espn;
static PyObject *const_tuple_str_plain_MyVidsterIE_tuple;
static PyObject *const_tuple_str_plain_CoubIE_tuple;
static PyObject *const_tuple_str_plain_USATodayIE_tuple;
extern PyObject *const_str_plain_ABCIE;
static PyObject *const_tuple_str_plain_SkylineWebcamsIE_tuple;
static PyObject *const_str_plain_tvland;
extern PyObject *const_tuple_str_plain_IndavideoEmbedIE_tuple;
static PyObject *const_tuple_str_plain_ToonGogglesIE_tuple;
extern PyObject *const_str_plain_VodlockerIE;
extern PyObject *const_str_plain_fc2;
extern PyObject *const_str_plain_XiamiCollectionIE;
extern PyObject *const_str_plain_AlphaPornoIE;
extern PyObject *const_str_plain_WorldStarHipHopIE;
extern PyObject *const_str_plain_VPROIE;
extern PyObject *const_str_plain_commonprotocols;
extern PyObject *const_str_plain_twentymin;
static PyObject *const_str_plain_beeg;
extern PyObject *const_str_plain_ClipsyndicateIE;
static PyObject *const_tuple_str_plain_DotsubIE_tuple;
extern PyObject *const_str_plain_YandexDiskIE;
static PyObject *const_tuple_str_plain_ExtremeTubeIE_tuple;
static PyObject *const_tuple_08d3cedaa7b24ca90f7ee93cc9388d48_tuple;
static PyObject *const_tuple_str_plain_MmsIE_str_plain_RtmpIE_tuple;
extern PyObject *const_str_plain_LiveJournalIE;
extern PyObject *const_str_plain_ZattooIE;
extern PyObject *const_str_plain_SnotrIE;
extern PyObject *const_str_plain_PinkbikeIE;
extern PyObject *const_str_plain_DreiSatIE;
static PyObject *const_tuple_str_plain_VeeHDIE_tuple;
extern PyObject *const_str_plain_JeuxVideoIE;
static PyObject *const_str_plain_tonline;
static PyObject *const_str_plain_reverbnation;
extern PyObject *const_str_plain_RTVELiveIE;
extern PyObject *const_str_plain_HeiseIE;
extern PyObject *const_str_plain_SoundcloudEmbedIE;
static PyObject *const_str_plain_iwara;
static PyObject *const_str_plain_popcorntimes;
static PyObject *const_tuple_9fcf83477f6d1e9d332fec5ed8f42fa0_tuple;
extern PyObject *const_str_plain_VevoPlaylistIE;
extern PyObject *const_str_plain_PlatziCourseIE;
extern PyObject *const_str_plain_Laola1TvEmbedIE;
static PyObject *const_tuple_fe77aa66350a8be87a6c8fcf71ccaa21_tuple;
static PyObject *const_str_plain_bellmedia;
extern PyObject *const_str_plain_NJoyIE;
static PyObject *const_tuple_str_plain_TassIE_tuple;
static PyObject *const_str_plain_abc;
static PyObject *const_tuple_str_plain_AlJazeeraIE_tuple;
extern PyObject *const_str_plain_MySpaceAlbumIE;
static PyObject *const_str_plain_lemonde;
static PyObject *const_tuple_str_plain_VideofyMeIE_tuple;
extern PyObject *const_str_plain_VikiChannelIE;
static PyObject *const_str_plain_ceskatelevize;
static PyObject *const_tuple_str_plain_VyboryMosIE_tuple;
static PyObject *const_str_plain_matchtv;
static PyObject *const_str_plain_tbs;
extern PyObject *const_str_plain_ArchiveOrgIE;
extern PyObject *const_str_plain_TV4IE;
static PyObject *const_str_plain_sztvhu;
extern PyObject *const_str_plain_EroProfileIE;
extern PyObject *const_str_plain_GenericIE;
static PyObject *const_tuple_str_plain_MofosexIE_str_plain_MofosexEmbedIE_tuple;
static PyObject *const_tuple_str_plain_BostonGlobeIE_tuple;
static PyObject *const_tuple_str_plain_PodomaticIE_tuple;
static PyObject *const_str_plain_ciscolive;
extern PyObject *const_str_plain_XMinusIE;
extern PyObject *const_str_plain_CanalplusIE;
static PyObject *const_str_plain_xiami;
static PyObject *const_tuple_str_plain_NaverIE_tuple;
extern PyObject *const_str_plain_NocoIE;
extern PyObject *const_str_plain_NYTimesArticleIE;
extern PyObject *const_str_plain_CamModelsIE;
static PyObject *const_tuple_str_plain_CamModelsIE_tuple;
static PyObject *const_str_plain_pornotube;
extern PyObject *const_str_plain_NosVideoIE;
static PyObject *const_tuple_str_plain_AudioBoomIE_tuple;
extern PyObject *const_str_plain_IvideonIE;
extern PyObject *const_tuple_str_plain_SenateISVPIE_tuple;
extern PyObject *const_str_plain___doc__;
static PyObject *const_tuple_str_plain_SportDeutschlandIE_tuple;
extern PyObject *const_str_plain_rts;
extern PyObject *const_str_plain_meta;
static PyObject *const_str_plain_voot;
static PyObject *const_str_plain_atttechchannel;
static PyObject *const_str_plain_ruv;
extern PyObject *const_str_plain_TeacherTubeIE;
extern PyObject *const_str_plain_WDRMobileIE;
static PyObject *const_tuple_cc6c8f0817962c99f8c6ba99274798d3_tuple;
static PyObject *const_tuple_str_plain_TeachingChannelIE_tuple;
static PyObject *const_tuple_str_plain_LiTVIE_tuple;
extern PyObject *const_str_plain_RutubeMovieIE;
extern PyObject *const_str_plain_TunePkIE;
extern PyObject *const_tuple_str_plain_OnionStudiosIE_tuple;
static PyObject *const_str_plain_adn;
extern PyObject *const_str_plain_VrtNUIE;
static PyObject *const_tuple_str_plain_GoshgayIE_tuple;
static PyObject *const_str_plain_umg;
static PyObject *const_tuple_str_plain_AirMozillaIE_tuple;
static PyObject *const_tuple_str_plain_AudiomackIE_str_plain_AudiomackAlbumIE_tuple;
extern PyObject *const_str_plain_NDREmbedIE;
extern PyObject *const_str_plain_SmotriBroadcastIE;
static PyObject *const_str_plain_ondemandkorea;
extern PyObject *const_str_plain_VHXEmbedIE;
extern PyObject *const_str_plain_DefenseGouvFrIE;
extern PyObject *const_str_plain_SinaIE;
extern PyObject *const_str_plain_CBSInteractiveIE;
static PyObject *const_tuple_str_plain_DemocracynowIE_tuple;
extern PyObject *const_str_plain_SouthParkEsIE;
static PyObject *const_str_plain_nfl;
extern PyObject *const_str_plain_VootIE;
static PyObject *const_tuple_str_plain_RockstarGamesIE_tuple;
extern PyObject *const_tuple_str_plain_NexxIE_str_plain_NexxEmbedIE_tuple;
static PyObject *const_str_plain_fxnetworks;
static PyObject *const_tuple_str_plain_EroProfileIE_tuple;
static PyObject *const_str_plain_usatoday;
extern PyObject *const_str_plain_kinja;
static PyObject *const_str_plain_yourporn;
extern PyObject *const_str_plain_animeondemand;
extern PyObject *const_str_plain_MyviEmbedIE;
extern PyObject *const_tuple_empty;
extern PyObject *const_str_plain_SmotriCommunityIE;
extern PyObject *const_str_plain_ExpoTVIE;
static PyObject *const_str_plain_radiojavan;
extern PyObject *const_str_plain_YoutubeWatchLaterIE;
static PyObject *const_tuple_ece414e04b68e727a8bdc98c860e1642_tuple;
extern PyObject *const_tuple_str_plain_Channel9IE_tuple;
extern PyObject *const_str_plain_ScreencastIE;
static PyObject *const_tuple_str_plain_SeekerIE_tuple;
extern PyObject *const_str_plain_TVNetIE;
extern PyObject *const_str_plain_BTVestlendingenIE;
static PyObject *const_tuple_b905a6975b5cf811cdb9f48650b5e3e3_tuple;
static PyObject *const_str_plain_echomsk;
static PyObject *const_str_plain_urort;
static PyObject *const_tuple_str_plain_ReverbNationIE_tuple;
extern PyObject *const_str_plain_VzaarIE;
static PyObject *const_str_plain_kankan;
static PyObject *const_tuple_str_plain_LyndaIE_str_plain_LyndaCourseIE_tuple;
extern PyObject *const_str_plain_dreisat;
static PyObject *const_tuple_str_plain_DiscoveryVRIE_tuple;
static PyObject *const_tuple_str_plain_SlutloadIE_tuple;
extern PyObject *const_str_plain_KetnetIE;
static PyObject *const_tuple_str_plain_PopcornTVIE_tuple;
extern PyObject *const_str_plain_RadioJavanIE;
static PyObject *const_tuple_str_plain_FczenitIE_tuple;
static PyObject *const_tuple_str_plain_Ku6IE_tuple;
static PyObject *const_tuple_str_plain_FreshLiveIE_tuple;
extern PyObject *const_str_plain_FunimationIE;
extern PyObject *const_str_plain_BiliBiliBangumiIE;
static PyObject *const_tuple_str_plain_TheSceneIE_tuple;
static PyObject *const_tuple_str_plain_VineIE_str_plain_VineUserIE_tuple;
static PyObject *const_tuple_str_plain_FranceInterIE_tuple;
extern PyObject *const_str_plain_AppleTrailersSectionIE;
extern PyObject *const_str_plain_HRTiIE;
extern PyObject *const_str_plain_TwentyFourVideoIE;
static PyObject *const_tuple_str_plain_PhoenixIE_tuple;
extern PyObject *const_str_plain_zattoo;
extern PyObject *const_str_plain_TNAFlixNetworkEmbedIE;
extern PyObject *const_str_plain_brightcove;
static PyObject *const_tuple_str_plain_NovaEmbedIE_str_plain_NovaIE_tuple;
extern PyObject *const_str_plain_spike;
extern PyObject *const_str_plain_NDTVIE;
extern PyObject *const_str_plain_NozIE;
extern PyObject *const_str_plain_CrackedIE;
extern PyObject *const_str_plain_discoverygo;
static PyObject *const_str_plain_screencast;
extern PyObject *const_str_plain_MailRuMusicIE;
static PyObject *const_str_plain_tv2dk;
static PyObject *const_str_plain_miomio;
extern PyObject *const_str_plain_OktoberfestTVIE;
static PyObject *const_tuple_str_plain_NprIE_tuple;
extern PyObject *const_str_plain_FusionIE;
static PyObject *const_str_plain_academicearth;
static PyObject *const_str_plain_lci;
extern PyObject *const_str_plain_SCTEIE;
extern PyObject *const_str_plain_MwaveMeetGreetIE;
extern PyObject *const_str_plain_XFileShareIE;
static PyObject *const_tuple_9a7b0581322b4a064144df9fbe2bd89a_tuple;
extern PyObject *const_str_plain_vzaar;
extern PyObject *const_tuple_str_plain_YouPornIE_tuple;
extern PyObject *const_str_plain_TwitchClipsIE;
extern PyObject *const_str_plain_JWPlatformIE;
extern PyObject *const_str_plain_CJSWIE;
extern PyObject *const_str_plain_TVN24IE;
extern PyObject *const_str_plain_BilibiliAudioIE;
static PyObject *const_tuple_f480a63d8cd64d6438a62f2432c0cf37_tuple;
static PyObject *const_tuple_str_plain_PornComIE_tuple;
static PyObject *const_tuple_str_plain_VidLiiIE_tuple;
static PyObject *const_tuple_str_plain_EggheadCourseIE_str_plain_EggheadLessonIE_tuple;
extern PyObject *const_str_plain_periscope;
extern PyObject *const_str_plain_SeznamZpravyIE;
extern PyObject *const_str_plain_TwitterIE;
extern PyObject *const_str_plain_prosiebensat1;
static PyObject *const_str_plain_corus;
extern PyObject *const_str_plain_DRTVLiveIE;
extern PyObject *const_tuple_str_plain_VShareIE_tuple;
static PyObject *const_tuple_str_plain_AMCNetworksIE_tuple;
extern PyObject *const_tuple_str_plain_DrTuberIE_tuple;
static PyObject *const_tuple_str_plain_LEGOIE_tuple;
extern PyObject *const_str_plain_PornHubIE;
static PyObject *const_tuple_str_plain_Ir90TvIE_tuple;
static PyObject *const_str_plain_moevideo;
extern PyObject *const_str_plain_MediasiteCatalogIE;
extern PyObject *const_str_plain_GoshgayIE;
extern PyObject *const_str_plain_DaumClipIE;
static PyObject *const_tuple_str_plain_LA7IE_tuple;
extern PyObject *const_str_plain_LibsynIE;
static PyObject *const_tuple_str_plain_GoogleSearchIE_tuple;
static PyObject *const_str_plain_chaturbate;
extern PyObject *const_str_plain_TruNewsIE;
static PyObject *const_str_plain_appleconnect;
static PyObject *const_str_plain_walla;
extern PyObject *const_str_plain_ThisAmericanLifeIE;
extern PyObject *const_str_plain_RozhlasIE;
static PyObject *const_tuple_str_plain_IvideonIE_tuple;
static PyObject *const_tuple_str_plain_NineCNineMediaIE_tuple;
static PyObject *const_tuple_cca3ac0c452e6fbebbbd8ee06112ebf1_tuple;
extern PyObject *const_str_plain_hrti;
static PyObject *const_tuple_str_plain_VRTIE_tuple;
extern PyObject *const_str_plain_HitRecordIE;
extern PyObject *const_str_plain_DiscoveryNetworksDeIE;
extern PyObject *const_str_plain_SunPornoIE;
static PyObject *const_str_plain_ina;
static PyObject *const_tuple_str_plain_KanalPlayIE_tuple;
static PyObject *const_str_plain_ku6;
static PyObject *const_tuple_str_plain_BreakIE_tuple;
extern PyObject *const_tuple_str_plain_DPlayIE_tuple;
extern PyObject *const_str_plain_VideofyMeIE;
static PyObject *const_tuple_str_plain_UFCTVIE_str_plain_UFCArabiaIE_tuple;
static PyObject *const_tuple_str_plain_TruTVIE_tuple;
static PyObject *const_str_plain_ro220;
static PyObject *const_tuple_str_plain_LnkGoIE_tuple;
extern PyObject *const_str_plain_CiscoLiveSessionIE;
static PyObject *const_tuple_str_plain_ClipRsIE_tuple;
extern PyObject *const_str_plain_TubiTvIE;
extern PyObject *const_str_plain_GoogleSearchIE;
extern PyObject *const_str_plain_MixcloudIE;
static PyObject *const_str_plain_vodplatform;
static PyObject *const_str_plain_goshgay;
static PyObject *const_str_plain_fczenit;
static PyObject *const_str_plain_scrippsnetworks;
static PyObject *const_tuple_str_plain_RadioFranceIE_tuple;
extern PyObject *const_str_plain_ChirbitProfileIE;
extern PyObject *const_str_plain_HypemIE;
extern PyObject *const_str_plain_svt;
extern PyObject *const_str_plain_ORFIPTVIE;
static PyObject *const_tuple_str_plain_BellatorIE_str_plain_ParamountNetworkIE_tuple;
extern PyObject *const_str_plain_mediaset;
static PyObject *const_str_plain_nhk;
static PyObject *const_tuple_str_plain_RottenTomatoesIE_tuple;
extern PyObject *const_str_plain_digiteka;
extern PyObject *const_str_plain_dailymotion;
extern PyObject *const_str_plain_RTPIE;
extern PyObject *const_str_plain_UMGDeIE;
static PyObject *const_tuple_str_plain_PearVideoIE_tuple;
static PyObject *const_str_plain_xboxclips;
static PyObject *const_str_plain_uktvplay;
static PyObject *const_str_plain_fusion;
extern PyObject *const_str_plain_BRIE;
static PyObject *const_tuple_str_plain_CSpanIE_tuple;
extern PyObject *const_str_plain_UstreamChannelIE;
extern PyObject *const_str_plain_RTVSIE;
extern PyObject *const_str_plain_DRTVIE;
extern PyObject *const_str_plain_RestudyIE;
extern PyObject *const_str_plain_RadioCanadaIE;
extern PyObject *const_str_plain_BokeCCIE;
extern PyObject *const_str_plain_AirMozillaIE;
extern PyObject *const_str_plain_TuneInShortenerIE;
extern PyObject *const_str_plain_StreetVoiceIE;
extern PyObject *const_str_plain_YoutubeRecommendedIE;
extern PyObject *const_str_plain_tvc;
static PyObject *const_str_plain_howcast;
extern PyObject *const_str_plain_XHamsterIE;
extern PyObject *const_str_plain_CloserToTruthIE;
extern PyObject *const_str_plain_MarkizaIE;
extern PyObject *const_str_plain_PhilharmonieDeParisIE;
extern PyObject *const_str_plain_NickNightIE;
extern PyObject *const_str_plain_DLiveVODIE;
static PyObject *const_tuple_str_plain_UnistraIE_tuple;
static PyObject *const_tuple_str_plain_RayWenderlichIE_str_plain_RayWenderlichCourseIE_tuple;
extern PyObject *const_str_plain_condenast;
static PyObject *const_str_plain_bleacherreport;
extern PyObject *const_str_plain_packtpub;
extern PyObject *const_str_plain_crunchyroll;
static PyObject *const_str_plain_dispeak;
extern PyObject *const_str_plain_HowcastIE;
extern PyObject *const_str_plain_NovaEmbedIE;
static PyObject *const_tuple_str_plain_EveryonesMixtapeIE_tuple;
extern PyObject *const_str_plain_CBCIE;
static PyObject *const_str_plain_adobeconnect;
static PyObject *const_str_plain_arte;
static PyObject *const_str_plain_sport5;
extern PyObject *const_str_plain_ArteTVEmbedIE;
static PyObject *const_tuple_str_plain_RtlNlIE_tuple;
static PyObject *const_str_plain_sapo;
extern PyObject *const_str_plain_videa;
static PyObject *const_str_plain_dumpert;
static PyObject *const_tuple_str_plain_EitbIE_tuple;
extern PyObject *const_str_plain_roosterteeth;
static PyObject *const_tuple_str_plain_FacebookIE_str_plain_FacebookPluginsVideoIE_tuple;
extern PyObject *const_str_plain_LivestreamOriginalIE;
extern PyObject *const_str_plain_VuClipIE;
static PyObject *const_tuple_d1cde9fdc4221cd03beddd558fb84a02_tuple;
extern PyObject *const_str_plain_MixcloudUserIE;
static PyObject *const_str_plain_groupon;
static PyObject *const_tuple_str_plain_OnDemandKoreaIE_tuple;
static PyObject *const_tuple_str_plain_TelewebionIE_tuple;
extern PyObject *const_tuple_str_plain_UDNEmbedIE_tuple;
extern PyObject *const_str_plain_UKTVPlayIE;
extern PyObject *const_str_plain_LiveLeakIE;
static PyObject *const_tuple_str_plain_CartoonNetworkIE_tuple;
extern PyObject *const_str_plain_MegaphoneIE;
static PyObject *const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple;
static PyObject *const_str_plain_gazeta;
static PyObject *const_str_plain_outsidetv;
extern PyObject *const_str_plain_WashingtonPostArticleIE;
static PyObject *const_str_plain_porn91;
static PyObject *const_str_plain_picarto;
static PyObject *const_tuple_str_plain_ACastIE_str_plain_ACastChannelIE_tuple;
extern PyObject *const_str_plain_WatchBoxIE;
extern PyObject *const_str_plain_QuicklineIE;
static PyObject *const_tuple_str_plain_MangomoloVideoIE_str_plain_MangomoloLiveIE_tuple;
extern PyObject *const_str_plain_DVTVIE;
static PyObject *const_str_plain_watchindianporn;
static PyObject *const_str_plain_bostonglobe;
extern PyObject *const_str_plain_SoundgasmProfileIE;
extern PyObject *const_str_plain_GooglePlusIE;
extern PyObject *const_str_plain_GameStarIE;
static PyObject *const_str_plain_audioboom;
static PyObject *const_tuple_str_plain_LocalNews8IE_tuple;
extern PyObject *const_str_plain_EaglePlatformIE;
extern PyObject *const_str_plain_DailymotionIE;
static PyObject *const_tuple_str_plain_VimpleIE_tuple;
extern PyObject *const_str_plain_NRKIE;
extern PyObject *const_str_plain_VLivePlaylistIE;
extern PyObject *const_str_plain_vlive;
static PyObject *const_str_plain_rentv;
extern PyObject *const_str_plain_OnionStudiosIE;
static PyObject *const_tuple_str_plain_GolemIE_tuple;
extern PyObject *const_str_plain_TVPlayHomeIE;
extern PyObject *const_str_plain_VimeoChannelIE;
extern PyObject *const_str_plain_DiscoveryIE;
extern PyObject *const_str_plain_DiscoveryGoPlaylistIE;
extern PyObject *const_str_plain_Canalc2IE;
extern PyObject *const_str_plain_DumpertIE;
static PyObject *const_tuple_str_plain_NBAIE_tuple;
extern PyObject *const_str_plain_megaphone;
extern PyObject *const_str_plain_tnaflix;
extern PyObject *const_str_plain_RayWenderlichIE;
static PyObject *const_tuple_str_plain_GodTubeIE_tuple;
extern PyObject *const_str_plain_TouTvIE;
extern PyObject *const_str_plain_MioMioIE;
extern PyObject *const_str_plain_ESPNIE;
static PyObject *const_tuple_str_plain_DisneyIE_tuple;
static PyObject *const_str_plain_nba;
static PyObject *const_tuple_str_plain_DeezerPlaylistIE_tuple;
static PyObject *const_tuple_str_plain_MnetIE_tuple;
extern PyObject *const_str_plain_HitboxLiveIE;
static PyObject *const_tuple_str_plain_LRTIE_tuple;
extern PyObject *const_str_plain_StreamcloudIE;
extern PyObject *const_str_plain_RTBFIE;
extern PyObject *const_str_plain_XiamiArtistIE;
extern PyObject *const_tuple_str_plain_OdnoklassnikiIE_tuple;
extern PyObject *const_str_plain_SharedIE;
extern PyObject *const_str_plain_KarriereVideosIE;
extern PyObject *const_str_plain_IncIE;
extern PyObject *const_str_plain_TVANouvellesArticleIE;
extern PyObject *const_str_plain_AdobeConnectIE;
extern PyObject *const_str_plain_R7IE;
static PyObject *const_str_plain_miaopai;
static PyObject *const_tuple_str_plain_EsriVideoIE_tuple;
static PyObject *const_str_plain_ccma;
static PyObject *const_str_plain_twentyfourvideo;
extern PyObject *const_str_plain_YahooSearchIE;
static PyObject *const_tuple_str_plain_JeuxVideoIE_tuple;
extern PyObject *const_str_plain_VimeoLikesIE;
static PyObject *const_tuple_str_plain_PhilharmonieDeParisIE_tuple;
extern PyObject *const_str_plain_Lecture2GoIE;
static PyObject *const_str_plain_eyedotv;
static PyObject *const_str_plain_cloudy;
static PyObject *module_filename_obj;

/* Indicator if this modules private constants were created yet. */
static bool constants_created = false;

/* Function to create module private constants. */
static void createModuleConstants(void) {
    const_tuple_str_plain_CinchcastIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CinchcastIE_tuple, 0, const_str_plain_CinchcastIE); Py_INCREF(const_str_plain_CinchcastIE);
    const_tuple_str_plain_BeegIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BeegIE_tuple, 0, const_str_plain_BeegIE); Py_INCREF(const_str_plain_BeegIE);
    const_tuple_str_plain_SevenPlusIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SevenPlusIE_tuple, 0, const_str_plain_SevenPlusIE); Py_INCREF(const_str_plain_SevenPlusIE);
    const_tuple_str_plain_MoviezineIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MoviezineIE_tuple, 0, const_str_plain_MoviezineIE); Py_INCREF(const_str_plain_MoviezineIE);
    const_str_plain_weiqitv = UNSTREAM_STRING_ASCII(&constant_bin[ 1201801 ], 7, 1);
    const_str_plain_allocine = UNSTREAM_STRING_ASCII(&constant_bin[ 873320 ], 8, 1);
    const_tuple_str_plain_BIQLEIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BIQLEIE_tuple, 0, const_str_plain_BIQLEIE); Py_INCREF(const_str_plain_BIQLEIE);
    const_tuple_str_plain_PacktPubIE_str_plain_PacktPubCourseIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_PacktPubIE_str_plain_PacktPubCourseIE_tuple, 0, const_str_plain_PacktPubIE); Py_INCREF(const_str_plain_PacktPubIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_PacktPubIE_str_plain_PacktPubCourseIE_tuple, 1, const_str_plain_PacktPubCourseIE); Py_INCREF(const_str_plain_PacktPubCourseIE);
    const_str_plain_nintendo = UNSTREAM_STRING_ASCII(&constant_bin[ 1201808 ], 8, 1);
    const_str_plain_discoveryvr = UNSTREAM_STRING_ASCII(&constant_bin[ 1148646 ], 11, 1);
    const_tuple_str_plain_CJSWIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CJSWIE_tuple, 0, const_str_plain_CJSWIE); Py_INCREF(const_str_plain_CJSWIE);
    const_tuple_str_plain_EuropaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EuropaIE_tuple, 0, const_str_plain_EuropaIE); Py_INCREF(const_str_plain_EuropaIE);
    const_tuple_str_plain_XTubeUserIE_str_plain_XTubeIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_XTubeUserIE_str_plain_XTubeIE_tuple, 0, const_str_plain_XTubeUserIE); Py_INCREF(const_str_plain_XTubeUserIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_XTubeUserIE_str_plain_XTubeIE_tuple, 1, const_str_plain_XTubeIE); Py_INCREF(const_str_plain_XTubeIE);
    const_tuple_str_plain_GiantBombIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GiantBombIE_tuple, 0, const_str_plain_GiantBombIE); Py_INCREF(const_str_plain_GiantBombIE);
    const_tuple_str_plain_UplynkIE_str_plain_UplynkPreplayIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_UplynkIE_str_plain_UplynkPreplayIE_tuple, 0, const_str_plain_UplynkIE); Py_INCREF(const_str_plain_UplynkIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_UplynkIE_str_plain_UplynkPreplayIE_tuple, 1, const_str_plain_UplynkPreplayIE); Py_INCREF(const_str_plain_UplynkPreplayIE);
    const_tuple_str_plain_MyviIE_str_plain_MyviEmbedIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_MyviIE_str_plain_MyviEmbedIE_tuple, 0, const_str_plain_MyviIE); Py_INCREF(const_str_plain_MyviIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_MyviIE_str_plain_MyviEmbedIE_tuple, 1, const_str_plain_MyviEmbedIE); Py_INCREF(const_str_plain_MyviEmbedIE);
    const_tuple_str_plain_KrasViewIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_KrasViewIE_tuple, 0, const_str_plain_KrasViewIE); Py_INCREF(const_str_plain_KrasViewIE);
    const_str_plain_yesjapan = UNSTREAM_STRING_ASCII(&constant_bin[ 1201816 ], 8, 1);
    const_tuple_str_plain_TV5MondePlusIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TV5MondePlusIE_tuple, 0, const_str_plain_TV5MondePlusIE); Py_INCREF(const_str_plain_TV5MondePlusIE);
    const_tuple_bbc44f72fa920d1d178cc9eff9bce190_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_bbc44f72fa920d1d178cc9eff9bce190_tuple, 0, const_str_plain_SverigesRadioEpisodeIE); Py_INCREF(const_str_plain_SverigesRadioEpisodeIE);
    PyTuple_SET_ITEM(const_tuple_bbc44f72fa920d1d178cc9eff9bce190_tuple, 1, const_str_plain_SverigesRadioPublicationIE); Py_INCREF(const_str_plain_SverigesRadioPublicationIE);
    const_str_plain_cwtv = UNSTREAM_STRING_ASCII(&constant_bin[ 1124987 ], 4, 1);
    const_str_plain_cctv = UNSTREAM_STRING_ASCII(&constant_bin[ 1023081 ], 4, 1);
    const_tuple_str_plain_GPUTechConfIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GPUTechConfIE_tuple, 0, const_str_plain_GPUTechConfIE); Py_INCREF(const_str_plain_GPUTechConfIE);
    const_tuple_str_plain_KinoPoiskIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_KinoPoiskIE_tuple, 0, const_str_plain_KinoPoiskIE); Py_INCREF(const_str_plain_KinoPoiskIE);
    const_tuple_str_plain_Canalc2IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Canalc2IE_tuple, 0, const_str_plain_Canalc2IE); Py_INCREF(const_str_plain_Canalc2IE);
    const_tuple_str_plain_SyfyIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SyfyIE_tuple, 0, const_str_plain_SyfyIE); Py_INCREF(const_str_plain_SyfyIE);
    const_tuple_str_plain_NTVRuIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NTVRuIE_tuple, 0, const_str_plain_NTVRuIE); Py_INCREF(const_str_plain_NTVRuIE);
    const_tuple_str_plain_ZingMp3IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ZingMp3IE_tuple, 0, const_str_plain_ZingMp3IE); Py_INCREF(const_str_plain_ZingMp3IE);
    const_str_plain_la7 = UNSTREAM_STRING_ASCII(&constant_bin[ 1201824 ], 3, 1);
    const_str_plain_lnkgo = UNSTREAM_STRING_ASCII(&constant_bin[ 1201827 ], 5, 1);
    const_str_plain_sbs = UNSTREAM_STRING_ASCII(&constant_bin[ 1201832 ], 3, 1);
    const_tuple_str_plain_HBOIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HBOIE_tuple, 0, const_str_plain_HBOIE); Py_INCREF(const_str_plain_HBOIE);
    const_str_plain_ir90tv = UNSTREAM_STRING_ASCII(&constant_bin[ 1201835 ], 6, 1);
    const_tuple_str_plain_FusionIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FusionIE_tuple, 0, const_str_plain_FusionIE); Py_INCREF(const_str_plain_FusionIE);
    const_tuple_str_plain_DiscoveryGoIE_str_plain_DiscoveryGoPlaylistIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_DiscoveryGoIE_str_plain_DiscoveryGoPlaylistIE_tuple, 0, const_str_plain_DiscoveryGoIE); Py_INCREF(const_str_plain_DiscoveryGoIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_DiscoveryGoIE_str_plain_DiscoveryGoPlaylistIE_tuple, 1, const_str_plain_DiscoveryGoPlaylistIE); Py_INCREF(const_str_plain_DiscoveryGoPlaylistIE);
    const_tuple_str_plain_RedBullTVIE_str_plain_RedBullTVRrnContentIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_RedBullTVIE_str_plain_RedBullTVRrnContentIE_tuple, 0, const_str_plain_RedBullTVIE); Py_INCREF(const_str_plain_RedBullTVIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_RedBullTVIE_str_plain_RedBullTVRrnContentIE_tuple, 1, const_str_plain_RedBullTVRrnContentIE); Py_INCREF(const_str_plain_RedBullTVRrnContentIE);
    const_str_plain_r7 = UNSTREAM_STRING_ASCII(&constant_bin[ 240015 ], 2, 1);
    const_tuple_str_plain_GoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GoIE_tuple, 0, const_str_plain_GoIE); Py_INCREF(const_str_plain_GoIE);
    const_str_plain_helsinki = UNSTREAM_STRING_ASCII(&constant_bin[ 1201841 ], 8, 1);
    const_tuple_str_plain_NetzkinoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NetzkinoIE_tuple, 0, const_str_plain_NetzkinoIE); Py_INCREF(const_str_plain_NetzkinoIE);
    const_tuple_str_plain_TastyTradeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TastyTradeIE_tuple, 0, const_str_plain_TastyTradeIE); Py_INCREF(const_str_plain_TastyTradeIE);
    const_tuple_str_plain_EightTracksIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EightTracksIE_tuple, 0, const_str_plain_EightTracksIE); Py_INCREF(const_str_plain_EightTracksIE);
    const_tuple_str_plain_StanfordOpenClassroomIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_StanfordOpenClassroomIE_tuple, 0, const_str_plain_StanfordOpenClassroomIE); Py_INCREF(const_str_plain_StanfordOpenClassroomIE);
    const_tuple_str_plain_TelegraafIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TelegraafIE_tuple, 0, const_str_plain_TelegraafIE); Py_INCREF(const_str_plain_TelegraafIE);
    const_tuple_str_plain_TvigleIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TvigleIE_tuple, 0, const_str_plain_TvigleIE); Py_INCREF(const_str_plain_TvigleIE);
    const_tuple_str_plain_XXXYMoviesIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_XXXYMoviesIE_tuple, 0, const_str_plain_XXXYMoviesIE); Py_INCREF(const_str_plain_XXXYMoviesIE);
    const_tuple_str_plain_PlatziIE_str_plain_PlatziCourseIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_PlatziIE_str_plain_PlatziCourseIE_tuple, 0, const_str_plain_PlatziIE); Py_INCREF(const_str_plain_PlatziIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_PlatziIE_str_plain_PlatziCourseIE_tuple, 1, const_str_plain_PlatziCourseIE); Py_INCREF(const_str_plain_PlatziCourseIE);
    const_tuple_str_plain_CinemaxIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CinemaxIE_tuple, 0, const_str_plain_CinemaxIE); Py_INCREF(const_str_plain_CinemaxIE);
    const_str_plain_pearvideo = UNSTREAM_STRING_ASCII(&constant_bin[ 1201849 ], 9, 1);
    const_tuple_2ce5e23656e238217c2a6af3020c4756_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_2ce5e23656e238217c2a6af3020c4756_tuple, 0, const_str_plain_NickIE); Py_INCREF(const_str_plain_NickIE);
    PyTuple_SET_ITEM(const_tuple_2ce5e23656e238217c2a6af3020c4756_tuple, 1, const_str_plain_NickBrIE); Py_INCREF(const_str_plain_NickBrIE);
    PyTuple_SET_ITEM(const_tuple_2ce5e23656e238217c2a6af3020c4756_tuple, 2, const_str_plain_NickDeIE); Py_INCREF(const_str_plain_NickDeIE);
    PyTuple_SET_ITEM(const_tuple_2ce5e23656e238217c2a6af3020c4756_tuple, 3, const_str_plain_NickNightIE); Py_INCREF(const_str_plain_NickNightIE);
    PyTuple_SET_ITEM(const_tuple_2ce5e23656e238217c2a6af3020c4756_tuple, 4, const_str_plain_NickRuIE); Py_INCREF(const_str_plain_NickRuIE);
    const_str_plain_trutv = UNSTREAM_STRING_ASCII(&constant_bin[ 1201858 ], 5, 1);
    const_tuple_7915279a1879c2289e09d7377626f0bd_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_7915279a1879c2289e09d7377626f0bd_tuple, 0, const_str_plain_AdobeTVEmbedIE); Py_INCREF(const_str_plain_AdobeTVEmbedIE);
    PyTuple_SET_ITEM(const_tuple_7915279a1879c2289e09d7377626f0bd_tuple, 1, const_str_plain_AdobeTVIE); Py_INCREF(const_str_plain_AdobeTVIE);
    PyTuple_SET_ITEM(const_tuple_7915279a1879c2289e09d7377626f0bd_tuple, 2, const_str_plain_AdobeTVShowIE); Py_INCREF(const_str_plain_AdobeTVShowIE);
    PyTuple_SET_ITEM(const_tuple_7915279a1879c2289e09d7377626f0bd_tuple, 3, const_str_plain_AdobeTVChannelIE); Py_INCREF(const_str_plain_AdobeTVChannelIE);
    PyTuple_SET_ITEM(const_tuple_7915279a1879c2289e09d7377626f0bd_tuple, 4, const_str_plain_AdobeTVVideoIE); Py_INCREF(const_str_plain_AdobeTVVideoIE);
    const_tuple_str_plain_ToypicsUserIE_str_plain_ToypicsIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_ToypicsUserIE_str_plain_ToypicsIE_tuple, 0, const_str_plain_ToypicsUserIE); Py_INCREF(const_str_plain_ToypicsUserIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ToypicsUserIE_str_plain_ToypicsIE_tuple, 1, const_str_plain_ToypicsIE); Py_INCREF(const_str_plain_ToypicsIE);
    const_tuple_str_plain_IviIE_str_plain_IviCompilationIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_IviIE_str_plain_IviCompilationIE_tuple, 0, const_str_plain_IviIE); Py_INCREF(const_str_plain_IviIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_IviIE_str_plain_IviCompilationIE_tuple, 1, const_str_plain_IviCompilationIE); Py_INCREF(const_str_plain_IviCompilationIE);
    const_tuple_e660837d525e34e73ebb03c4633816bc_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_e660837d525e34e73ebb03c4633816bc_tuple, 0, const_str_plain_DaumIE); Py_INCREF(const_str_plain_DaumIE);
    PyTuple_SET_ITEM(const_tuple_e660837d525e34e73ebb03c4633816bc_tuple, 1, const_str_plain_DaumClipIE); Py_INCREF(const_str_plain_DaumClipIE);
    PyTuple_SET_ITEM(const_tuple_e660837d525e34e73ebb03c4633816bc_tuple, 2, const_str_plain_DaumPlaylistIE); Py_INCREF(const_str_plain_DaumPlaylistIE);
    PyTuple_SET_ITEM(const_tuple_e660837d525e34e73ebb03c4633816bc_tuple, 3, const_str_plain_DaumUserIE); Py_INCREF(const_str_plain_DaumUserIE);
    const_tuple_str_plain_RoxwelIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RoxwelIE_tuple, 0, const_str_plain_RoxwelIE); Py_INCREF(const_str_plain_RoxwelIE);
    const_tuple_str_plain_SkyNewsIE_str_plain_SkySportsIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_SkyNewsIE_str_plain_SkySportsIE_tuple, 0, const_str_plain_SkyNewsIE); Py_INCREF(const_str_plain_SkyNewsIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_SkyNewsIE_str_plain_SkySportsIE_tuple, 1, const_str_plain_SkySportsIE); Py_INCREF(const_str_plain_SkySportsIE);
    const_str_plain_streamcz = UNSTREAM_STRING_ASCII(&constant_bin[ 1201863 ], 8, 1);
    const_str_plain_voxmedia = UNSTREAM_STRING_ASCII(&constant_bin[ 1201871 ], 8, 1);
    const_tuple_str_plain_TFOIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TFOIE_tuple, 0, const_str_plain_TFOIE); Py_INCREF(const_str_plain_TFOIE);
    const_tuple_str_plain_XVideosIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_XVideosIE_tuple, 0, const_str_plain_XVideosIE); Py_INCREF(const_str_plain_XVideosIE);
    const_str_plain_people = UNSTREAM_STRING_ASCII(&constant_bin[ 871433 ], 6, 1);
    const_str_plain_motorsport = UNSTREAM_STRING_ASCII(&constant_bin[ 1201879 ], 10, 1);
    const_str_plain_cracked = UNSTREAM_STRING_ASCII(&constant_bin[ 1107736 ], 7, 1);
    const_tuple_str_plain_CONtvIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CONtvIE_tuple, 0, const_str_plain_CONtvIE); Py_INCREF(const_str_plain_CONtvIE);
    const_tuple_0ea1f8be190213cfeea8b1023b02021d_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_0ea1f8be190213cfeea8b1023b02021d_tuple, 0, const_str_plain_CBCIE); Py_INCREF(const_str_plain_CBCIE);
    PyTuple_SET_ITEM(const_tuple_0ea1f8be190213cfeea8b1023b02021d_tuple, 1, const_str_plain_CBCPlayerIE); Py_INCREF(const_str_plain_CBCPlayerIE);
    PyTuple_SET_ITEM(const_tuple_0ea1f8be190213cfeea8b1023b02021d_tuple, 2, const_str_plain_CBCWatchVideoIE); Py_INCREF(const_str_plain_CBCWatchVideoIE);
    PyTuple_SET_ITEM(const_tuple_0ea1f8be190213cfeea8b1023b02021d_tuple, 3, const_str_plain_CBCWatchIE); Py_INCREF(const_str_plain_CBCWatchIE);
    PyTuple_SET_ITEM(const_tuple_0ea1f8be190213cfeea8b1023b02021d_tuple, 4, const_str_plain_CBCOlympicsIE); Py_INCREF(const_str_plain_CBCOlympicsIE);
    const_tuple_64d29dcb9f2bf3fc7644f2097fa5706c_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_64d29dcb9f2bf3fc7644f2097fa5706c_tuple, 0, const_str_plain_BiliBiliIE); Py_INCREF(const_str_plain_BiliBiliIE);
    PyTuple_SET_ITEM(const_tuple_64d29dcb9f2bf3fc7644f2097fa5706c_tuple, 1, const_str_plain_BiliBiliBangumiIE); Py_INCREF(const_str_plain_BiliBiliBangumiIE);
    PyTuple_SET_ITEM(const_tuple_64d29dcb9f2bf3fc7644f2097fa5706c_tuple, 2, const_str_plain_BilibiliAudioIE); Py_INCREF(const_str_plain_BilibiliAudioIE);
    PyTuple_SET_ITEM(const_tuple_64d29dcb9f2bf3fc7644f2097fa5706c_tuple, 3, const_str_plain_BilibiliAudioAlbumIE); Py_INCREF(const_str_plain_BilibiliAudioAlbumIE);
    PyTuple_SET_ITEM(const_tuple_64d29dcb9f2bf3fc7644f2097fa5706c_tuple, 4, const_str_plain_BiliBiliPlayerIE); Py_INCREF(const_str_plain_BiliBiliPlayerIE);
    const_str_plain_videodetective = UNSTREAM_STRING_ASCII(&constant_bin[ 1201889 ], 14, 1);
    const_tuple_str_plain_WallaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_WallaIE_tuple, 0, const_str_plain_WallaIE); Py_INCREF(const_str_plain_WallaIE);
    const_tuple_0f7a6fd502b2234391fd40a34f47586e_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_0f7a6fd502b2234391fd40a34f47586e_tuple, 0, const_str_plain_ARDBetaMediathekIE); Py_INCREF(const_str_plain_ARDBetaMediathekIE);
    PyTuple_SET_ITEM(const_tuple_0f7a6fd502b2234391fd40a34f47586e_tuple, 1, const_str_plain_ARDIE); Py_INCREF(const_str_plain_ARDIE);
    PyTuple_SET_ITEM(const_tuple_0f7a6fd502b2234391fd40a34f47586e_tuple, 2, const_str_plain_ARDMediathekIE); Py_INCREF(const_str_plain_ARDMediathekIE);
    const_tuple_str_plain_CCCIE_str_plain_CCCPlaylistIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_CCCIE_str_plain_CCCPlaylistIE_tuple, 0, const_str_plain_CCCIE); Py_INCREF(const_str_plain_CCCIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_CCCIE_str_plain_CCCPlaylistIE_tuple, 1, const_str_plain_CCCPlaylistIE); Py_INCREF(const_str_plain_CCCPlaylistIE);
    const_tuple_str_plain_RegioTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RegioTVIE_tuple, 0, const_str_plain_RegioTVIE); Py_INCREF(const_str_plain_RegioTVIE);
    const_tuple_str_plain_DctpTvIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DctpTvIE_tuple, 0, const_str_plain_DctpTvIE); Py_INCREF(const_str_plain_DctpTvIE);
    const_str_plain_escapist = UNSTREAM_STRING_ASCII(&constant_bin[ 1191487 ], 8, 1);
    const_tuple_str_plain_NZZIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NZZIE_tuple, 0, const_str_plain_NZZIE); Py_INCREF(const_str_plain_NZZIE);
    const_tuple_str_plain_PornotubeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PornotubeIE_tuple, 0, const_str_plain_PornotubeIE); Py_INCREF(const_str_plain_PornotubeIE);
    const_str_plain_livejournal = UNSTREAM_STRING_ASCII(&constant_bin[ 1201903 ], 11, 1);
    const_str_plain_tv5mondeplus = UNSTREAM_STRING_ASCII(&constant_bin[ 1201914 ], 12, 1);
    const_str_plain_einthusan = UNSTREAM_STRING_ASCII(&constant_bin[ 1182256 ], 9, 1);
    const_tuple_str_plain_BildIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BildIE_tuple, 0, const_str_plain_BildIE); Py_INCREF(const_str_plain_BildIE);
    const_str_plain_sevenplus = UNSTREAM_STRING_ASCII(&constant_bin[ 1201926 ], 9, 1);
    const_tuple_str_plain_TVANouvellesIE_str_plain_TVANouvellesArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVANouvellesIE_str_plain_TVANouvellesArticleIE_tuple, 0, const_str_plain_TVANouvellesIE); Py_INCREF(const_str_plain_TVANouvellesIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVANouvellesIE_str_plain_TVANouvellesArticleIE_tuple, 1, const_str_plain_TVANouvellesArticleIE); Py_INCREF(const_str_plain_TVANouvellesArticleIE);
    const_str_plain_testurl = UNSTREAM_STRING_ASCII(&constant_bin[ 1201935 ], 7, 1);
    const_str_plain_southpark = UNSTREAM_STRING_ASCII(&constant_bin[ 1201942 ], 9, 1);
    const_tuple_str_plain_BigflixIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BigflixIE_tuple, 0, const_str_plain_BigflixIE); Py_INCREF(const_str_plain_BigflixIE);
    const_str_plain_americastestkitchen = UNSTREAM_STRING_ASCII(&constant_bin[ 877347 ], 19, 1);
    const_tuple_str_plain_HuajiaoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HuajiaoIE_tuple, 0, const_str_plain_HuajiaoIE); Py_INCREF(const_str_plain_HuajiaoIE);
    const_str_plain_kanalplay = UNSTREAM_STRING_ASCII(&constant_bin[ 1201951 ], 9, 1);
    const_tuple_str_plain_MinistryGridIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MinistryGridIE_tuple, 0, const_str_plain_MinistryGridIE); Py_INCREF(const_str_plain_MinistryGridIE);
    const_str_plain_vidbit = UNSTREAM_STRING_ASCII(&constant_bin[ 1201960 ], 6, 1);
    const_tuple_str_plain_MedialaanIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MedialaanIE_tuple, 0, const_str_plain_MedialaanIE); Py_INCREF(const_str_plain_MedialaanIE);
    const_str_plain_ccc = UNSTREAM_STRING_ASCII(&constant_bin[ 797219 ], 3, 1);
    const_str_plain_infoq = UNSTREAM_STRING_ASCII(&constant_bin[ 630178 ], 5, 1);
    const_str_plain_patreon = UNSTREAM_STRING_ASCII(&constant_bin[ 1201966 ], 7, 1);
    const_str_plain_extremetube = UNSTREAM_STRING_ASCII(&constant_bin[ 1201973 ], 11, 1);
    const_tuple_str_plain_SnotrIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SnotrIE_tuple, 0, const_str_plain_SnotrIE); Py_INCREF(const_str_plain_SnotrIE);
    const_str_plain_sonyliv = UNSTREAM_STRING_ASCII(&constant_bin[ 1201984 ], 7, 1);
    const_tuple_str_plain_TEDIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TEDIE_tuple, 0, const_str_plain_TEDIE); Py_INCREF(const_str_plain_TEDIE);
    const_tuple_str_plain_OktoberfestTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_OktoberfestTVIE_tuple, 0, const_str_plain_OktoberfestTVIE); Py_INCREF(const_str_plain_OktoberfestTVIE);
    const_str_plain_clipsyndicate = UNSTREAM_STRING_ASCII(&constant_bin[ 1045326 ], 13, 1);
    const_tuple_str_plain_TV2IE_str_plain_TV2ArticleIE_str_plain_KatsomoIE_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_TV2IE_str_plain_TV2ArticleIE_str_plain_KatsomoIE_tuple, 0, const_str_plain_TV2IE); Py_INCREF(const_str_plain_TV2IE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TV2IE_str_plain_TV2ArticleIE_str_plain_KatsomoIE_tuple, 1, const_str_plain_TV2ArticleIE); Py_INCREF(const_str_plain_TV2ArticleIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TV2IE_str_plain_TV2ArticleIE_str_plain_KatsomoIE_tuple, 2, const_str_plain_KatsomoIE); Py_INCREF(const_str_plain_KatsomoIE);
    const_tuple_str_plain_BehindKinkIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BehindKinkIE_tuple, 0, const_str_plain_BehindKinkIE); Py_INCREF(const_str_plain_BehindKinkIE);
    const_tuple_str_plain_ABCIE_str_plain_ABCIViewIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_ABCIE_str_plain_ABCIViewIE_tuple, 0, const_str_plain_ABCIE); Py_INCREF(const_str_plain_ABCIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ABCIE_str_plain_ABCIViewIE_tuple, 1, const_str_plain_ABCIViewIE); Py_INCREF(const_str_plain_ABCIViewIE);
    const_str_plain_dotsub = UNSTREAM_STRING_ASCII(&constant_bin[ 1153763 ], 6, 1);
    const_tuple_str_plain_RestudyIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RestudyIE_tuple, 0, const_str_plain_RestudyIE); Py_INCREF(const_str_plain_RestudyIE);
    const_tuple_str_plain_UdemyIE_str_plain_UdemyCourseIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_UdemyIE_str_plain_UdemyCourseIE_tuple, 0, const_str_plain_UdemyIE); Py_INCREF(const_str_plain_UdemyIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_UdemyIE_str_plain_UdemyCourseIE_tuple, 1, const_str_plain_UdemyCourseIE); Py_INCREF(const_str_plain_UdemyCourseIE);
    const_str_plain_aol = UNSTREAM_STRING_ASCII(&constant_bin[ 43611 ], 3, 1);
    const_str_plain_ninegag = UNSTREAM_STRING_ASCII(&constant_bin[ 1201991 ], 7, 1);
    const_tuple_str_plain_NFLIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NFLIE_tuple, 0, const_str_plain_NFLIE); Py_INCREF(const_str_plain_NFLIE);
    const_str_plain_telemb = UNSTREAM_STRING_ASCII(&constant_bin[ 1201998 ], 6, 1);
    const_tuple_6f50e65f74ca8c14b4adc7bb16ad3b46_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_6f50e65f74ca8c14b4adc7bb16ad3b46_tuple, 0, const_str_plain_BandcampIE); Py_INCREF(const_str_plain_BandcampIE);
    PyTuple_SET_ITEM(const_tuple_6f50e65f74ca8c14b4adc7bb16ad3b46_tuple, 1, const_str_plain_BandcampAlbumIE); Py_INCREF(const_str_plain_BandcampAlbumIE);
    PyTuple_SET_ITEM(const_tuple_6f50e65f74ca8c14b4adc7bb16ad3b46_tuple, 2, const_str_plain_BandcampWeeklyIE); Py_INCREF(const_str_plain_BandcampWeeklyIE);
    const_str_plain_audimedia = UNSTREAM_STRING_ASCII(&constant_bin[ 916296 ], 9, 1);
    const_str_plain_rtve = UNSTREAM_STRING_ASCII(&constant_bin[ 1202004 ], 4, 1);
    const_str_plain_teachingchannel = UNSTREAM_STRING_ASCII(&constant_bin[ 1202008 ], 15, 1);
    const_str_plain_elpais = UNSTREAM_STRING_ASCII(&constant_bin[ 1185891 ], 6, 1);
    const_tuple_str_plain_TOnlineIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TOnlineIE_tuple, 0, const_str_plain_TOnlineIE); Py_INCREF(const_str_plain_TOnlineIE);
    const_str_plain_fox9 = UNSTREAM_STRING_ASCII(&constant_bin[ 1202023 ], 4, 1);
    const_str_plain_camtube = UNSTREAM_STRING_ASCII(&constant_bin[ 993885 ], 7, 1);
    const_str_plain_vidlii = UNSTREAM_STRING_ASCII(&constant_bin[ 1202027 ], 6, 1);
    const_str_plain_skynewsarabia = UNSTREAM_STRING_ASCII(&constant_bin[ 1202033 ], 13, 1);
    const_str_plain_photobucket = UNSTREAM_STRING_ASCII(&constant_bin[ 1202046 ], 11, 1);
    const_tuple_str_plain_RoosterTeethIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RoosterTeethIE_tuple, 0, const_str_plain_RoosterTeethIE); Py_INCREF(const_str_plain_RoosterTeethIE);
    const_str_plain_seeker = UNSTREAM_STRING_ASCII(&constant_bin[ 1202057 ], 6, 1);
    const_str_plain_telegraaf = UNSTREAM_STRING_ASCII(&constant_bin[ 1202063 ], 9, 1);
    const_str_plain_freespeech = UNSTREAM_STRING_ASCII(&constant_bin[ 1202072 ], 10, 1);
    const_str_plain_traileraddict = UNSTREAM_STRING_ASCII(&constant_bin[ 1202082 ], 13, 1);
    const_tuple_str_plain_LibraryOfCongressIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LibraryOfCongressIE_tuple, 0, const_str_plain_LibraryOfCongressIE); Py_INCREF(const_str_plain_LibraryOfCongressIE);
    const_tuple_str_plain_SeznamZpravyIE_str_plain_SeznamZpravyArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_SeznamZpravyIE_str_plain_SeznamZpravyArticleIE_tuple, 0, const_str_plain_SeznamZpravyIE); Py_INCREF(const_str_plain_SeznamZpravyIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_SeznamZpravyIE_str_plain_SeznamZpravyArticleIE_tuple, 1, const_str_plain_SeznamZpravyArticleIE); Py_INCREF(const_str_plain_SeznamZpravyArticleIE);
    const_tuple_str_plain_SixPlayIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SixPlayIE_tuple, 0, const_str_plain_SixPlayIE); Py_INCREF(const_str_plain_SixPlayIE);
    const_str_plain_kickstarter = UNSTREAM_STRING_ASCII(&constant_bin[ 1202095 ], 11, 1);
    const_tuple_str_plain_PicartoIE_str_plain_PicartoVodIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_PicartoIE_str_plain_PicartoVodIE_tuple, 0, const_str_plain_PicartoIE); Py_INCREF(const_str_plain_PicartoIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_PicartoIE_str_plain_PicartoVodIE_tuple, 1, const_str_plain_PicartoVodIE); Py_INCREF(const_str_plain_PicartoVodIE);
    const_str_plain_nova = UNSTREAM_STRING_ASCII(&constant_bin[ 846659 ], 4, 1);
    const_str_plain_atvat = UNSTREAM_STRING_ASCII(&constant_bin[ 915738 ], 5, 1);
    const_tuple_str_plain_SBSIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SBSIE_tuple, 0, const_str_plain_SBSIE); Py_INCREF(const_str_plain_SBSIE);
    const_tuple_str_plain_ScreencastOMaticIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ScreencastOMaticIE_tuple, 0, const_str_plain_ScreencastOMaticIE); Py_INCREF(const_str_plain_ScreencastOMaticIE);
    const_str_plain_gamespot = UNSTREAM_STRING_ASCII(&constant_bin[ 1202106 ], 8, 1);
    const_str_plain_giga = UNSTREAM_STRING_ASCII(&constant_bin[ 1202114 ], 4, 1);
    const_tuple_str_plain_TouTvIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TouTvIE_tuple, 0, const_str_plain_TouTvIE); Py_INCREF(const_str_plain_TouTvIE);
    const_tuple_str_plain_TV2DKIE_str_plain_TV2DKBornholmPlayIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_TV2DKIE_str_plain_TV2DKBornholmPlayIE_tuple, 0, const_str_plain_TV2DKIE); Py_INCREF(const_str_plain_TV2DKIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TV2DKIE_str_plain_TV2DKBornholmPlayIE_tuple, 1, const_str_plain_TV2DKBornholmPlayIE); Py_INCREF(const_str_plain_TV2DKBornholmPlayIE);
    const_str_plain_closertotruth = UNSTREAM_STRING_ASCII(&constant_bin[ 1046009 ], 13, 1);
    const_tuple_str_plain_MiTeleIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MiTeleIE_tuple, 0, const_str_plain_MiTeleIE); Py_INCREF(const_str_plain_MiTeleIE);
    const_tuple_str_plain_ThisAVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ThisAVIE_tuple, 0, const_str_plain_ThisAVIE); Py_INCREF(const_str_plain_ThisAVIE);
    const_tuple_629cba9d03bdd4023108c80486397be6_tuple = PyTuple_New(9);
    PyTuple_SET_ITEM(const_tuple_629cba9d03bdd4023108c80486397be6_tuple, 0, const_str_plain_NRKIE); Py_INCREF(const_str_plain_NRKIE);
    PyTuple_SET_ITEM(const_tuple_629cba9d03bdd4023108c80486397be6_tuple, 1, const_str_plain_NRKPlaylistIE); Py_INCREF(const_str_plain_NRKPlaylistIE);
    PyTuple_SET_ITEM(const_tuple_629cba9d03bdd4023108c80486397be6_tuple, 2, const_str_plain_NRKSkoleIE); Py_INCREF(const_str_plain_NRKSkoleIE);
    PyTuple_SET_ITEM(const_tuple_629cba9d03bdd4023108c80486397be6_tuple, 3, const_str_plain_NRKTVIE); Py_INCREF(const_str_plain_NRKTVIE);
    PyTuple_SET_ITEM(const_tuple_629cba9d03bdd4023108c80486397be6_tuple, 4, const_str_plain_NRKTVDirekteIE); Py_INCREF(const_str_plain_NRKTVDirekteIE);
    PyTuple_SET_ITEM(const_tuple_629cba9d03bdd4023108c80486397be6_tuple, 5, const_str_plain_NRKTVEpisodeIE); Py_INCREF(const_str_plain_NRKTVEpisodeIE);
    PyTuple_SET_ITEM(const_tuple_629cba9d03bdd4023108c80486397be6_tuple, 6, const_str_plain_NRKTVEpisodesIE); Py_INCREF(const_str_plain_NRKTVEpisodesIE);
    PyTuple_SET_ITEM(const_tuple_629cba9d03bdd4023108c80486397be6_tuple, 7, const_str_plain_NRKTVSeasonIE); Py_INCREF(const_str_plain_NRKTVSeasonIE);
    PyTuple_SET_ITEM(const_tuple_629cba9d03bdd4023108c80486397be6_tuple, 8, const_str_plain_NRKTVSeriesIE); Py_INCREF(const_str_plain_NRKTVSeriesIE);
    const_tuple_str_plain_VoxMediaVolumeIE_str_plain_VoxMediaIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_VoxMediaVolumeIE_str_plain_VoxMediaIE_tuple, 0, const_str_plain_VoxMediaVolumeIE); Py_INCREF(const_str_plain_VoxMediaVolumeIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_VoxMediaVolumeIE_str_plain_VoxMediaIE_tuple, 1, const_str_plain_VoxMediaIE); Py_INCREF(const_str_plain_VoxMediaIE);
    const_tuple_str_plain_AtresPlayerIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AtresPlayerIE_tuple, 0, const_str_plain_AtresPlayerIE); Py_INCREF(const_str_plain_AtresPlayerIE);
    const_str_plain_drbonanza = UNSTREAM_STRING_ASCII(&constant_bin[ 1160633 ], 9, 1);
    const_tuple_str_plain_TenPlayIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TenPlayIE_tuple, 0, const_str_plain_TenPlayIE); Py_INCREF(const_str_plain_TenPlayIE);
    const_tuple_str_plain_LCIIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LCIIE_tuple, 0, const_str_plain_LCIIE); Py_INCREF(const_str_plain_LCIIE);
    const_tuple_str_plain_ATVAtIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ATVAtIE_tuple, 0, const_str_plain_ATVAtIE); Py_INCREF(const_str_plain_ATVAtIE);
    const_tuple_str_plain_EHowIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EHowIE_tuple, 0, const_str_plain_EHowIE); Py_INCREF(const_str_plain_EHowIE);
    const_tuple_str_plain_AcademicEarthCourseIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AcademicEarthCourseIE_tuple, 0, const_str_plain_AcademicEarthCourseIE); Py_INCREF(const_str_plain_AcademicEarthCourseIE);
    const_tuple_str_plain_PluralsightIE_str_plain_PluralsightCourseIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_PluralsightIE_str_plain_PluralsightCourseIE_tuple, 0, const_str_plain_PluralsightIE); Py_INCREF(const_str_plain_PluralsightIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_PluralsightIE_str_plain_PluralsightCourseIE_tuple, 1, const_str_plain_PluralsightCourseIE); Py_INCREF(const_str_plain_PluralsightCourseIE);
    const_tuple_str_plain_ABCOTVSIE_str_plain_ABCOTVSClipsIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_ABCOTVSIE_str_plain_ABCOTVSClipsIE_tuple, 0, const_str_plain_ABCOTVSIE); Py_INCREF(const_str_plain_ABCOTVSIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ABCOTVSIE_str_plain_ABCOTVSClipsIE_tuple, 1, const_str_plain_ABCOTVSClipsIE); Py_INCREF(const_str_plain_ABCOTVSClipsIE);
    const_tuple_str_plain_AparatIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AparatIE_tuple, 0, const_str_plain_AparatIE); Py_INCREF(const_str_plain_AparatIE);
    const_str_plain_footyroom = UNSTREAM_STRING_ASCII(&constant_bin[ 1202118 ], 9, 1);
    const_tuple_str_plain_SkyNewsArabiaIE_str_plain_SkyNewsArabiaArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_SkyNewsArabiaIE_str_plain_SkyNewsArabiaArticleIE_tuple, 0, const_str_plain_SkyNewsArabiaIE); Py_INCREF(const_str_plain_SkyNewsArabiaIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_SkyNewsArabiaIE_str_plain_SkyNewsArabiaArticleIE_tuple, 1, const_str_plain_SkyNewsArabiaArticleIE); Py_INCREF(const_str_plain_SkyNewsArabiaArticleIE);
    const_str_plain_cliprs = UNSTREAM_STRING_ASCII(&constant_bin[ 1045136 ], 6, 1);
    const_str_plain_defense = UNSTREAM_STRING_ASCII(&constant_bin[ 1139121 ], 7, 1);
    const_tuple_str_plain_TheSunIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TheSunIE_tuple, 0, const_str_plain_TheSunIE); Py_INCREF(const_str_plain_TheSunIE);
    const_str_plain_baidu = UNSTREAM_STRING_ASCII(&constant_bin[ 924168 ], 5, 1);
    const_str_plain_wsj = UNSTREAM_STRING_ASCII(&constant_bin[ 884286 ], 3, 1);
    const_str_plain_vesti = UNSTREAM_STRING_ASCII(&constant_bin[ 827800 ], 5, 1);
    const_tuple_facdf595351a0246e6ea09466c3b35a5_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_facdf595351a0246e6ea09466c3b35a5_tuple, 0, const_str_plain_OnetIE); Py_INCREF(const_str_plain_OnetIE);
    PyTuple_SET_ITEM(const_tuple_facdf595351a0246e6ea09466c3b35a5_tuple, 1, const_str_plain_OnetChannelIE); Py_INCREF(const_str_plain_OnetChannelIE);
    PyTuple_SET_ITEM(const_tuple_facdf595351a0246e6ea09466c3b35a5_tuple, 2, const_str_plain_OnetMVPIE); Py_INCREF(const_str_plain_OnetMVPIE);
    PyTuple_SET_ITEM(const_tuple_facdf595351a0246e6ea09466c3b35a5_tuple, 3, const_str_plain_OnetPlIE); Py_INCREF(const_str_plain_OnetPlIE);
    const_tuple_str_plain_ProSiebenSat1IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ProSiebenSat1IE_tuple, 0, const_str_plain_ProSiebenSat1IE); Py_INCREF(const_str_plain_ProSiebenSat1IE);
    const_str_plain_msn = UNSTREAM_STRING_ASCII(&constant_bin[ 1202127 ], 3, 1);
    const_str_plain_mnet = UNSTREAM_STRING_ASCII(&constant_bin[ 854828 ], 4, 1);
    const_str_plain_vrak = UNSTREAM_STRING_ASCII(&constant_bin[ 1202130 ], 4, 1);
    const_str_plain_markiza = UNSTREAM_STRING_ASCII(&constant_bin[ 1202134 ], 7, 1);
    const_str_plain_theintercept = UNSTREAM_STRING_ASCII(&constant_bin[ 1202141 ], 12, 1);
    const_tuple_str_plain_DouyuShowIE_str_plain_DouyuTVIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_DouyuShowIE_str_plain_DouyuTVIE_tuple, 0, const_str_plain_DouyuShowIE); Py_INCREF(const_str_plain_DouyuShowIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_DouyuShowIE_str_plain_DouyuTVIE_tuple, 1, const_str_plain_DouyuTVIE); Py_INCREF(const_str_plain_DouyuTVIE);
    const_str_plain_lrt = UNSTREAM_STRING_ASCII(&constant_bin[ 782975 ], 3, 1);
    const_str_plain_mojvideo = UNSTREAM_STRING_ASCII(&constant_bin[ 1202153 ], 8, 1);
    const_tuple_str_plain_TV4IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TV4IE_tuple, 0, const_str_plain_TV4IE); Py_INCREF(const_str_plain_TV4IE);
    const_tuple_str_plain_NintendoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NintendoIE_tuple, 0, const_str_plain_NintendoIE); Py_INCREF(const_str_plain_NintendoIE);
    const_tuple_95536fd190d17c4316e164a07c53ca3c_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_95536fd190d17c4316e164a07c53ca3c_tuple, 0, const_str_plain_ImgurIE); Py_INCREF(const_str_plain_ImgurIE);
    PyTuple_SET_ITEM(const_tuple_95536fd190d17c4316e164a07c53ca3c_tuple, 1, const_str_plain_ImgurAlbumIE); Py_INCREF(const_str_plain_ImgurAlbumIE);
    PyTuple_SET_ITEM(const_tuple_95536fd190d17c4316e164a07c53ca3c_tuple, 2, const_str_plain_ImgurGalleryIE); Py_INCREF(const_str_plain_ImgurGalleryIE);
    const_tuple_str_plain_M6IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_M6IE_tuple, 0, const_str_plain_M6IE); Py_INCREF(const_str_plain_M6IE);
    const_str_plain_thisamericanlife = UNSTREAM_STRING_ASCII(&constant_bin[ 1202161 ], 16, 1);
    const_str_plain_motherless = UNSTREAM_STRING_ASCII(&constant_bin[ 1202177 ], 10, 1);
    const_tuple_str_plain_RDSIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RDSIE_tuple, 0, const_str_plain_RDSIE); Py_INCREF(const_str_plain_RDSIE);
    const_tuple_str_plain_MotorsportIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MotorsportIE_tuple, 0, const_str_plain_MotorsportIE); Py_INCREF(const_str_plain_MotorsportIE);
    const_tuple_str_plain_ThisOldHouseIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ThisOldHouseIE_tuple, 0, const_str_plain_ThisOldHouseIE); Py_INCREF(const_str_plain_ThisOldHouseIE);
    const_tuple_str_plain_SztvHuIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SztvHuIE_tuple, 0, const_str_plain_SztvHuIE); Py_INCREF(const_str_plain_SztvHuIE);
    const_tuple_str_plain_BusinessInsiderIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BusinessInsiderIE_tuple, 0, const_str_plain_BusinessInsiderIE); Py_INCREF(const_str_plain_BusinessInsiderIE);
    const_tuple_str_plain_XNXXIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_XNXXIE_tuple, 0, const_str_plain_XNXXIE); Py_INCREF(const_str_plain_XNXXIE);
    const_tuple_str_plain_KUSIIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_KUSIIE_tuple, 0, const_str_plain_KUSIIE); Py_INCREF(const_str_plain_KUSIIE);
    const_str_plain_expotv = UNSTREAM_STRING_ASCII(&constant_bin[ 1199510 ], 6, 1);
    const_tuple_8b5f4bfee9d57ef8b702418362449376_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_8b5f4bfee9d57ef8b702418362449376_tuple, 0, const_str_plain_NDRIE); Py_INCREF(const_str_plain_NDRIE);
    PyTuple_SET_ITEM(const_tuple_8b5f4bfee9d57ef8b702418362449376_tuple, 1, const_str_plain_NJoyIE); Py_INCREF(const_str_plain_NJoyIE);
    PyTuple_SET_ITEM(const_tuple_8b5f4bfee9d57ef8b702418362449376_tuple, 2, const_str_plain_NDREmbedBaseIE); Py_INCREF(const_str_plain_NDREmbedBaseIE);
    PyTuple_SET_ITEM(const_tuple_8b5f4bfee9d57ef8b702418362449376_tuple, 3, const_str_plain_NDREmbedIE); Py_INCREF(const_str_plain_NDREmbedIE);
    PyTuple_SET_ITEM(const_tuple_8b5f4bfee9d57ef8b702418362449376_tuple, 4, const_str_plain_NJoyEmbedIE); Py_INCREF(const_str_plain_NJoyEmbedIE);
    const_tuple_str_plain_PatreonIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PatreonIE_tuple, 0, const_str_plain_PatreonIE); Py_INCREF(const_str_plain_PatreonIE);
    const_tuple_str_plain_ZapiksIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ZapiksIE_tuple, 0, const_str_plain_ZapiksIE); Py_INCREF(const_str_plain_ZapiksIE);
    const_tuple_str_plain_CDAIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CDAIE_tuple, 0, const_str_plain_CDAIE); Py_INCREF(const_str_plain_CDAIE);
    const_tuple_str_plain_FoxSportsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FoxSportsIE_tuple, 0, const_str_plain_FoxSportsIE); Py_INCREF(const_str_plain_FoxSportsIE);
    const_str_plain_chilloutzone = UNSTREAM_STRING_ASCII(&constant_bin[ 1036551 ], 12, 1);
    const_tuple_str_plain_RozhlasIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RozhlasIE_tuple, 0, const_str_plain_RozhlasIE); Py_INCREF(const_str_plain_RozhlasIE);
    const_str_plain_orf = UNSTREAM_STRING_ASCII(&constant_bin[ 832160 ], 3, 1);
    const_str_plain_yandexmusic = UNSTREAM_STRING_ASCII(&constant_bin[ 1202187 ], 11, 1);
    const_str_plain_karaoketv = UNSTREAM_STRING_ASCII(&constant_bin[ 1202198 ], 9, 1);
    const_tuple_str_plain_TMZIE_str_plain_TMZArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_TMZIE_str_plain_TMZArticleIE_tuple, 0, const_str_plain_TMZIE); Py_INCREF(const_str_plain_TMZIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TMZIE_str_plain_TMZArticleIE_tuple, 1, const_str_plain_TMZArticleIE); Py_INCREF(const_str_plain_TMZArticleIE);
    const_str_plain_gputechconf = UNSTREAM_STRING_ASCII(&constant_bin[ 1202207 ], 11, 1);
    const_tuple_str_plain_FreespeechIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FreespeechIE_tuple, 0, const_str_plain_FreespeechIE); Py_INCREF(const_str_plain_FreespeechIE);
    const_tuple_str_plain_PeriscopeIE_str_plain_PeriscopeUserIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_PeriscopeIE_str_plain_PeriscopeUserIE_tuple, 0, const_str_plain_PeriscopeIE); Py_INCREF(const_str_plain_PeriscopeIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_PeriscopeIE_str_plain_PeriscopeUserIE_tuple, 1, const_str_plain_PeriscopeUserIE); Py_INCREF(const_str_plain_PeriscopeUserIE);
    const_tuple_str_plain_NerdCubedFeedIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NerdCubedFeedIE_tuple, 0, const_str_plain_NerdCubedFeedIE); Py_INCREF(const_str_plain_NerdCubedFeedIE);
    const_tuple_str_plain_MojvideoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MojvideoIE_tuple, 0, const_str_plain_MojvideoIE); Py_INCREF(const_str_plain_MojvideoIE);
    const_str_plain_gameinformer = UNSTREAM_STRING_ASCII(&constant_bin[ 1202218 ], 12, 1);
    const_str_plain_hypem = UNSTREAM_STRING_ASCII(&constant_bin[ 1202230 ], 5, 1);
    const_str_plain_alphaporno = UNSTREAM_STRING_ASCII(&constant_bin[ 874568 ], 10, 1);
    const_tuple_str_plain_PlaywireIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PlaywireIE_tuple, 0, const_str_plain_PlaywireIE); Py_INCREF(const_str_plain_PlaywireIE);
    const_str_plain_dropbox = UNSTREAM_STRING_ASCII(&constant_bin[ 1162954 ], 7, 1);
    const_tuple_str_plain_MovieClipsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MovieClipsIE_tuple, 0, const_str_plain_MovieClipsIE); Py_INCREF(const_str_plain_MovieClipsIE);
    const_tuple_str_plain_AnimeOnDemandIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AnimeOnDemandIE_tuple, 0, const_str_plain_AnimeOnDemandIE); Py_INCREF(const_str_plain_AnimeOnDemandIE);
    const_str_plain_lego = UNSTREAM_STRING_ASCII(&constant_bin[ 1202235 ], 4, 1);
    const_str_plain_unistra = UNSTREAM_STRING_ASCII(&constant_bin[ 1202239 ], 7, 1);
    const_str_plain_clyp = UNSTREAM_STRING_ASCII(&constant_bin[ 1050012 ], 4, 1);
    const_str_plain_vvvvid = UNSTREAM_STRING_ASCII(&constant_bin[ 1202246 ], 6, 1);
    const_tuple_str_plain_C56IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_C56IE_tuple, 0, const_str_plain_C56IE); Py_INCREF(const_str_plain_C56IE);
    const_tuple_str_plain_MioMioIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MioMioIE_tuple, 0, const_str_plain_MioMioIE); Py_INCREF(const_str_plain_MioMioIE);
    const_tuple_str_plain_ParliamentLiveUKIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ParliamentLiveUKIE_tuple, 0, const_str_plain_ParliamentLiveUKIE); Py_INCREF(const_str_plain_ParliamentLiveUKIE);
    const_tuple_str_plain_BuzzFeedIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BuzzFeedIE_tuple, 0, const_str_plain_BuzzFeedIE); Py_INCREF(const_str_plain_BuzzFeedIE);
    const_str_plain_nobelprize = UNSTREAM_STRING_ASCII(&constant_bin[ 1202252 ], 10, 1);
    const_str_plain_asiancrush = UNSTREAM_STRING_ASCII(&constant_bin[ 911426 ], 10, 1);
    const_str_plain_ninecninemedia = UNSTREAM_STRING_ASCII(&constant_bin[ 1122801 ], 14, 1);
    const_tuple_str_plain_AppleConnectIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AppleConnectIE_tuple, 0, const_str_plain_AppleConnectIE); Py_INCREF(const_str_plain_AppleConnectIE);
    const_tuple_str_plain_GameInformerIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GameInformerIE_tuple, 0, const_str_plain_GameInformerIE); Py_INCREF(const_str_plain_GameInformerIE);
    const_tuple_str_plain_TeleMBIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TeleMBIE_tuple, 0, const_str_plain_TeleMBIE); Py_INCREF(const_str_plain_TeleMBIE);
    const_tuple_str_plain_DigitallySpeakingIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DigitallySpeakingIE_tuple, 0, const_str_plain_DigitallySpeakingIE); Py_INCREF(const_str_plain_DigitallySpeakingIE);
    const_tuple_str_plain_PornHdIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PornHdIE_tuple, 0, const_str_plain_PornHdIE); Py_INCREF(const_str_plain_PornHdIE);
    const_tuple_str_plain_LcpPlayIE_str_plain_LcpIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_LcpPlayIE_str_plain_LcpIE_tuple, 0, const_str_plain_LcpPlayIE); Py_INCREF(const_str_plain_LcpPlayIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_LcpPlayIE_str_plain_LcpIE_tuple, 1, const_str_plain_LcpIE); Py_INCREF(const_str_plain_LcpIE);
    const_tuple_str_plain_TwentyThreeVideoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TwentyThreeVideoIE_tuple, 0, const_str_plain_TwentyThreeVideoIE); Py_INCREF(const_str_plain_TwentyThreeVideoIE);
    const_str_plain_canalplus = UNSTREAM_STRING_ASCII(&constant_bin[ 997039 ], 9, 1);
    const_str_plain_breakcom = UNSTREAM_STRING_ASCII(&constant_bin[ 975876 ], 8, 1);
    const_tuple_str_plain_KhanAcademyIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_KhanAcademyIE_tuple, 0, const_str_plain_KhanAcademyIE); Py_INCREF(const_str_plain_KhanAcademyIE);
    const_tuple_str_plain_SaveFromIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SaveFromIE_tuple, 0, const_str_plain_SaveFromIE); Py_INCREF(const_str_plain_SaveFromIE);
    const_str_plain_dlive = UNSTREAM_STRING_ASCII(&constant_bin[ 1153104 ], 5, 1);
    const_tuple_str_plain_CloudyIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CloudyIE_tuple, 0, const_str_plain_CloudyIE); Py_INCREF(const_str_plain_CloudyIE);
    const_tuple_str_plain_MoeVideoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MoeVideoIE_tuple, 0, const_str_plain_MoeVideoIE); Py_INCREF(const_str_plain_MoeVideoIE);
    const_str_plain_go = UNSTREAM_STRING_ASCII(&constant_bin[ 4093 ], 2, 1);
    const_str_plain_muenchentv = UNSTREAM_STRING_ASCII(&constant_bin[ 1202262 ], 10, 1);
    const_tuple_str_plain_TelecincoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TelecincoIE_tuple, 0, const_str_plain_TelecincoIE); Py_INCREF(const_str_plain_TelecincoIE);
    const_str_plain_movieclips = UNSTREAM_STRING_ASCII(&constant_bin[ 1202272 ], 10, 1);
    const_str_plain_bpb = UNSTREAM_STRING_ASCII(&constant_bin[ 970429 ], 3, 1);
    const_tuple_fad45eff24f2333f63e9bfaed53c32e6_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_fad45eff24f2333f63e9bfaed53c32e6_tuple, 0, const_str_plain_ViceIE); Py_INCREF(const_str_plain_ViceIE);
    PyTuple_SET_ITEM(const_tuple_fad45eff24f2333f63e9bfaed53c32e6_tuple, 1, const_str_plain_ViceArticleIE); Py_INCREF(const_str_plain_ViceArticleIE);
    PyTuple_SET_ITEM(const_tuple_fad45eff24f2333f63e9bfaed53c32e6_tuple, 2, const_str_plain_ViceShowIE); Py_INCREF(const_str_plain_ViceShowIE);
    const_tuple_str_plain_NDTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NDTVIE_tuple, 0, const_str_plain_NDTVIE); Py_INCREF(const_str_plain_NDTVIE);
    const_tuple_str_plain_Ro220IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Ro220IE_tuple, 0, const_str_plain_Ro220IE); Py_INCREF(const_str_plain_Ro220IE);
    const_str_plain_konserthusetplay = UNSTREAM_STRING_ASCII(&constant_bin[ 1202282 ], 16, 1);
    const_str_plain_rottentomatoes = UNSTREAM_STRING_ASCII(&constant_bin[ 1202298 ], 14, 1);
    const_str_plain_awaan = UNSTREAM_STRING_ASCII(&constant_bin[ 919725 ], 5, 1);
    const_str_plain_techtalks = UNSTREAM_STRING_ASCII(&constant_bin[ 1202312 ], 9, 1);
    const_tuple_d0aaed6f46afa928c8454a2c81f59a0a_tuple = PyTuple_New(8);
    PyTuple_SET_ITEM(const_tuple_d0aaed6f46afa928c8454a2c81f59a0a_tuple, 0, const_str_plain_CSNNEIE); Py_INCREF(const_str_plain_CSNNEIE);
    PyTuple_SET_ITEM(const_tuple_d0aaed6f46afa928c8454a2c81f59a0a_tuple, 1, const_str_plain_NBCIE); Py_INCREF(const_str_plain_NBCIE);
    PyTuple_SET_ITEM(const_tuple_d0aaed6f46afa928c8454a2c81f59a0a_tuple, 2, const_str_plain_NBCNewsIE); Py_INCREF(const_str_plain_NBCNewsIE);
    PyTuple_SET_ITEM(const_tuple_d0aaed6f46afa928c8454a2c81f59a0a_tuple, 3, const_str_plain_NBCOlympicsIE); Py_INCREF(const_str_plain_NBCOlympicsIE);
    PyTuple_SET_ITEM(const_tuple_d0aaed6f46afa928c8454a2c81f59a0a_tuple, 4, const_str_plain_NBCOlympicsStreamIE); Py_INCREF(const_str_plain_NBCOlympicsStreamIE);
    PyTuple_SET_ITEM(const_tuple_d0aaed6f46afa928c8454a2c81f59a0a_tuple, 5, const_str_plain_NBCSportsIE); Py_INCREF(const_str_plain_NBCSportsIE);
    PyTuple_SET_ITEM(const_tuple_d0aaed6f46afa928c8454a2c81f59a0a_tuple, 6, const_str_plain_NBCSportsStreamIE); Py_INCREF(const_str_plain_NBCSportsStreamIE);
    PyTuple_SET_ITEM(const_tuple_d0aaed6f46afa928c8454a2c81f59a0a_tuple, 7, const_str_plain_NBCSportsVPlayerIE); Py_INCREF(const_str_plain_NBCSportsVPlayerIE);
    const_str_plain_engadget = UNSTREAM_STRING_ASCII(&constant_bin[ 1188835 ], 8, 1);
    const_tuple_str_plain_VidbitIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VidbitIE_tuple, 0, const_str_plain_VidbitIE); Py_INCREF(const_str_plain_VidbitIE);
    const_str_plain_manyvids = UNSTREAM_STRING_ASCII(&constant_bin[ 1202321 ], 8, 1);
    const_tuple_str_plain_ReutersIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ReutersIE_tuple, 0, const_str_plain_ReutersIE); Py_INCREF(const_str_plain_ReutersIE);
    const_str_plain_cda = UNSTREAM_STRING_ASCII(&constant_bin[ 834793 ], 3, 1);
    const_str_plain_kinopoisk = UNSTREAM_STRING_ASCII(&constant_bin[ 1202329 ], 9, 1);
    const_tuple_str_plain_StretchInternetIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_StretchInternetIE_tuple, 0, const_str_plain_StretchInternetIE); Py_INCREF(const_str_plain_StretchInternetIE);
    const_tuple_a01b8cd5da332ea6788ffb1d2d2da8cc_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_a01b8cd5da332ea6788ffb1d2d2da8cc_tuple, 0, const_str_plain_TeleQuebecIE); Py_INCREF(const_str_plain_TeleQuebecIE);
    PyTuple_SET_ITEM(const_tuple_a01b8cd5da332ea6788ffb1d2d2da8cc_tuple, 1, const_str_plain_TeleQuebecSquatIE); Py_INCREF(const_str_plain_TeleQuebecSquatIE);
    PyTuple_SET_ITEM(const_tuple_a01b8cd5da332ea6788ffb1d2d2da8cc_tuple, 2, const_str_plain_TeleQuebecEmissionIE); Py_INCREF(const_str_plain_TeleQuebecEmissionIE);
    PyTuple_SET_ITEM(const_tuple_a01b8cd5da332ea6788ffb1d2d2da8cc_tuple, 3, const_str_plain_TeleQuebecLiveIE); Py_INCREF(const_str_plain_TeleQuebecLiveIE);
    const_str_plain_adultswim = UNSTREAM_STRING_ASCII(&constant_bin[ 857625 ], 9, 1);
    const_tuple_str_plain_HelsinkiIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HelsinkiIE_tuple, 0, const_str_plain_HelsinkiIE); Py_INCREF(const_str_plain_HelsinkiIE);
    const_tuple_str_plain_NhkVodIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NhkVodIE_tuple, 0, const_str_plain_NhkVodIE); Py_INCREF(const_str_plain_NhkVodIE);
    const_str_plain_myspace = UNSTREAM_STRING_ASCII(&constant_bin[ 1202338 ], 7, 1);
    const_tuple_str_plain_KonserthusetPlayIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_KonserthusetPlayIE_tuple, 0, const_str_plain_KonserthusetPlayIE); Py_INCREF(const_str_plain_KonserthusetPlayIE);
    const_tuple_str_plain_WakanimIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_WakanimIE_tuple, 0, const_str_plain_WakanimIE); Py_INCREF(const_str_plain_WakanimIE);
    const_str_plain_vrt = UNSTREAM_STRING_ASCII(&constant_bin[ 788812 ], 3, 1);
    const_tuple_str_plain_SunPornoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SunPornoIE_tuple, 0, const_str_plain_SunPornoIE); Py_INCREF(const_str_plain_SunPornoIE);
    const_tuple_str_plain_BravoTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BravoTVIE_tuple, 0, const_str_plain_BravoTVIE); Py_INCREF(const_str_plain_BravoTVIE);
    const_tuple_str_plain_FiveMinIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FiveMinIE_tuple, 0, const_str_plain_FiveMinIE); Py_INCREF(const_str_plain_FiveMinIE);
    const_str_plain_cspan = UNSTREAM_STRING_ASCII(&constant_bin[ 1117900 ], 5, 1);
    const_str_plain_noz = UNSTREAM_STRING_ASCII(&constant_bin[ 1098002 ], 3, 1);
    const_tuple_str_plain_NRLTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NRLTVIE_tuple, 0, const_str_plain_NRLTVIE); Py_INCREF(const_str_plain_NRLTVIE);
    const_tuple_d49c3f2bd83b0e8de58fd555c54a964d_tuple = PyTuple_New(9);
    PyTuple_SET_ITEM(const_tuple_d49c3f2bd83b0e8de58fd555c54a964d_tuple, 0, const_str_plain_AndereTijdenIE); Py_INCREF(const_str_plain_AndereTijdenIE);
    PyTuple_SET_ITEM(const_tuple_d49c3f2bd83b0e8de58fd555c54a964d_tuple, 1, const_str_plain_NPOIE); Py_INCREF(const_str_plain_NPOIE);
    PyTuple_SET_ITEM(const_tuple_d49c3f2bd83b0e8de58fd555c54a964d_tuple, 2, const_str_plain_NPOLiveIE); Py_INCREF(const_str_plain_NPOLiveIE);
    PyTuple_SET_ITEM(const_tuple_d49c3f2bd83b0e8de58fd555c54a964d_tuple, 3, const_str_plain_NPORadioIE); Py_INCREF(const_str_plain_NPORadioIE);
    PyTuple_SET_ITEM(const_tuple_d49c3f2bd83b0e8de58fd555c54a964d_tuple, 4, const_str_plain_NPORadioFragmentIE); Py_INCREF(const_str_plain_NPORadioFragmentIE);
    PyTuple_SET_ITEM(const_tuple_d49c3f2bd83b0e8de58fd555c54a964d_tuple, 5, const_str_plain_SchoolTVIE); Py_INCREF(const_str_plain_SchoolTVIE);
    PyTuple_SET_ITEM(const_tuple_d49c3f2bd83b0e8de58fd555c54a964d_tuple, 6, const_str_plain_HetKlokhuisIE); Py_INCREF(const_str_plain_HetKlokhuisIE);
    PyTuple_SET_ITEM(const_tuple_d49c3f2bd83b0e8de58fd555c54a964d_tuple, 7, const_str_plain_VPROIE); Py_INCREF(const_str_plain_VPROIE);
    PyTuple_SET_ITEM(const_tuple_d49c3f2bd83b0e8de58fd555c54a964d_tuple, 8, const_str_plain_WNLIE); Py_INCREF(const_str_plain_WNLIE);
    const_tuple_str_plain_MGTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MGTVIE_tuple, 0, const_str_plain_MGTVIE); Py_INCREF(const_str_plain_MGTVIE);
    const_tuple_str_plain_VubeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VubeIE_tuple, 0, const_str_plain_VubeIE); Py_INCREF(const_str_plain_VubeIE);
    const_str_plain_srmediathek = UNSTREAM_STRING_ASCII(&constant_bin[ 1202345 ], 11, 1);
    const_str_plain_nrk = UNSTREAM_STRING_ASCII(&constant_bin[ 1202356 ], 3, 1);
    const_tuple_str_plain_TweakersIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TweakersIE_tuple, 0, const_str_plain_TweakersIE); Py_INCREF(const_str_plain_TweakersIE);
    const_str_plain_pandoratv = UNSTREAM_STRING_ASCII(&constant_bin[ 1202359 ], 9, 1);
    const_tuple_str_plain_ThePlatformIE_str_plain_ThePlatformFeedIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_ThePlatformIE_str_plain_ThePlatformFeedIE_tuple, 0, const_str_plain_ThePlatformIE); Py_INCREF(const_str_plain_ThePlatformIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ThePlatformIE_str_plain_ThePlatformFeedIE_tuple, 1, const_str_plain_ThePlatformFeedIE); Py_INCREF(const_str_plain_ThePlatformFeedIE);
    const_tuple_str_plain_HeiseIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HeiseIE_tuple, 0, const_str_plain_HeiseIE); Py_INCREF(const_str_plain_HeiseIE);
    const_tuple_e12de173e3791daa286ee11c5ce2f7e3_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_e12de173e3791daa286ee11c5ce2f7e3_tuple, 0, const_str_plain_YahooIE); Py_INCREF(const_str_plain_YahooIE);
    PyTuple_SET_ITEM(const_tuple_e12de173e3791daa286ee11c5ce2f7e3_tuple, 1, const_str_plain_YahooSearchIE); Py_INCREF(const_str_plain_YahooSearchIE);
    PyTuple_SET_ITEM(const_tuple_e12de173e3791daa286ee11c5ce2f7e3_tuple, 2, const_str_plain_YahooGyaOPlayerIE); Py_INCREF(const_str_plain_YahooGyaOPlayerIE);
    PyTuple_SET_ITEM(const_tuple_e12de173e3791daa286ee11c5ce2f7e3_tuple, 3, const_str_plain_YahooGyaOIE); Py_INCREF(const_str_plain_YahooGyaOIE);
    PyTuple_SET_ITEM(const_tuple_e12de173e3791daa286ee11c5ce2f7e3_tuple, 4, const_str_plain_YahooJapanNewsIE); Py_INCREF(const_str_plain_YahooJapanNewsIE);
    const_tuple_864b2d6549b75a181d06495da4250c25_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_864b2d6549b75a181d06495da4250c25_tuple, 0, const_str_plain_WDRIE); Py_INCREF(const_str_plain_WDRIE);
    PyTuple_SET_ITEM(const_tuple_864b2d6549b75a181d06495da4250c25_tuple, 1, const_str_plain_WDRPageIE); Py_INCREF(const_str_plain_WDRPageIE);
    PyTuple_SET_ITEM(const_tuple_864b2d6549b75a181d06495da4250c25_tuple, 2, const_str_plain_WDRElefantIE); Py_INCREF(const_str_plain_WDRElefantIE);
    PyTuple_SET_ITEM(const_tuple_864b2d6549b75a181d06495da4250c25_tuple, 3, const_str_plain_WDRMobileIE); Py_INCREF(const_str_plain_WDRMobileIE);
    const_str_plain_playfm = UNSTREAM_STRING_ASCII(&constant_bin[ 1202368 ], 6, 1);
    const_str_plain_noovo = UNSTREAM_STRING_ASCII(&constant_bin[ 1202374 ], 5, 1);
    const_str_plain_minoto = UNSTREAM_STRING_ASCII(&constant_bin[ 1202379 ], 6, 1);
    const_tuple_str_plain_DHMIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DHMIE_tuple, 0, const_str_plain_DHMIE); Py_INCREF(const_str_plain_DHMIE);
    const_str_plain_huffpost = UNSTREAM_STRING_ASCII(&constant_bin[ 1202385 ], 8, 1);
    const_str_plain_oktoberfesttv = UNSTREAM_STRING_ASCII(&constant_bin[ 1202393 ], 13, 1);
    const_tuple_str_plain_DRBonanzaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DRBonanzaIE_tuple, 0, const_str_plain_DRBonanzaIE); Py_INCREF(const_str_plain_DRBonanzaIE);
    const_str_plain_melonvod = UNSTREAM_STRING_ASCII(&constant_bin[ 1202406 ], 8, 1);
    const_str_plain_vidzi = UNSTREAM_STRING_ASCII(&constant_bin[ 1202414 ], 5, 1);
    const_tuple_str_plain_GameStarIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GameStarIE_tuple, 0, const_str_plain_GameStarIE); Py_INCREF(const_str_plain_GameStarIE);
    const_tuple_str_plain_ToggleIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ToggleIE_tuple, 0, const_str_plain_ToggleIE); Py_INCREF(const_str_plain_ToggleIE);
    const_tuple_str_plain_FootyRoomIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FootyRoomIE_tuple, 0, const_str_plain_FootyRoomIE); Py_INCREF(const_str_plain_FootyRoomIE);
    const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple = PyTuple_New(15);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 0, const_str_plain_ORFTVthekIE); Py_INCREF(const_str_plain_ORFTVthekIE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 1, const_str_plain_ORFFM4IE); Py_INCREF(const_str_plain_ORFFM4IE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 2, const_str_plain_ORFFM4StoryIE); Py_INCREF(const_str_plain_ORFFM4StoryIE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 3, const_str_plain_ORFOE1IE); Py_INCREF(const_str_plain_ORFOE1IE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 4, const_str_plain_ORFOE3IE); Py_INCREF(const_str_plain_ORFOE3IE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 5, const_str_plain_ORFNOEIE); Py_INCREF(const_str_plain_ORFNOEIE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 6, const_str_plain_ORFWIEIE); Py_INCREF(const_str_plain_ORFWIEIE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 7, const_str_plain_ORFBGLIE); Py_INCREF(const_str_plain_ORFBGLIE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 8, const_str_plain_ORFOOEIE); Py_INCREF(const_str_plain_ORFOOEIE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 9, const_str_plain_ORFSTMIE); Py_INCREF(const_str_plain_ORFSTMIE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 10, const_str_plain_ORFKTNIE); Py_INCREF(const_str_plain_ORFKTNIE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 11, const_str_plain_ORFSBGIE); Py_INCREF(const_str_plain_ORFSBGIE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 12, const_str_plain_ORFTIRIE); Py_INCREF(const_str_plain_ORFTIRIE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 13, const_str_plain_ORFVBGIE); Py_INCREF(const_str_plain_ORFVBGIE);
    PyTuple_SET_ITEM(const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple, 14, const_str_plain_ORFIPTVIE); Py_INCREF(const_str_plain_ORFIPTVIE);
    const_tuple_str_plain_CliphunterIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CliphunterIE_tuple, 0, const_str_plain_CliphunterIE); Py_INCREF(const_str_plain_CliphunterIE);
    const_tuple_str_plain_PlaysTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PlaysTVIE_tuple, 0, const_str_plain_PlaysTVIE); Py_INCREF(const_str_plain_PlaysTVIE);
    const_str_plain_radiode = UNSTREAM_STRING_ASCII(&constant_bin[ 1202419 ], 7, 1);
    const_tuple_str_plain_ChilloutzoneIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ChilloutzoneIE_tuple, 0, const_str_plain_ChilloutzoneIE); Py_INCREF(const_str_plain_ChilloutzoneIE);
    const_str_plain_europa = UNSTREAM_STRING_ASCII(&constant_bin[ 1197391 ], 6, 1);
    const_str_plain_ndtv = UNSTREAM_STRING_ASCII(&constant_bin[ 1202426 ], 4, 1);
    const_tuple_str_plain_ClipsyndicateIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ClipsyndicateIE_tuple, 0, const_str_plain_ClipsyndicateIE); Py_INCREF(const_str_plain_ClipsyndicateIE);
    const_tuple_str_plain_WWEIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_WWEIE_tuple, 0, const_str_plain_WWEIE); Py_INCREF(const_str_plain_WWEIE);
    const_tuple_str_plain_HRTiIE_str_plain_HRTiPlaylistIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_HRTiIE_str_plain_HRTiPlaylistIE_tuple, 0, const_str_plain_HRTiIE); Py_INCREF(const_str_plain_HRTiIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_HRTiIE_str_plain_HRTiPlaylistIE_tuple, 1, const_str_plain_HRTiPlaylistIE); Py_INCREF(const_str_plain_HRTiPlaylistIE);
    const_str_plain_telequebec = UNSTREAM_STRING_ASCII(&constant_bin[ 1202430 ], 10, 1);
    const_tuple_d1815f20ac58d678c003008be903b1ca_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_d1815f20ac58d678c003008be903b1ca_tuple, 0, const_str_plain_NationalGeographicVideoIE); Py_INCREF(const_str_plain_NationalGeographicVideoIE);
    PyTuple_SET_ITEM(const_tuple_d1815f20ac58d678c003008be903b1ca_tuple, 1, const_str_plain_NationalGeographicTVIE); Py_INCREF(const_str_plain_NationalGeographicTVIE);
    const_tuple_str_plain_USANetworkIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_USANetworkIE_tuple, 0, const_str_plain_USANetworkIE); Py_INCREF(const_str_plain_USANetworkIE);
    const_tuple_str_plain_KakaoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_KakaoIE_tuple, 0, const_str_plain_KakaoIE); Py_INCREF(const_str_plain_KakaoIE);
    const_tuple_str_plain_UstreamIE_str_plain_UstreamChannelIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_UstreamIE_str_plain_UstreamChannelIE_tuple, 0, const_str_plain_UstreamIE); Py_INCREF(const_str_plain_UstreamIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_UstreamIE_str_plain_UstreamChannelIE_tuple, 1, const_str_plain_UstreamChannelIE); Py_INCREF(const_str_plain_UstreamChannelIE);
    const_str_plain_nosvideo = UNSTREAM_STRING_ASCII(&constant_bin[ 1202440 ], 8, 1);
    const_tuple_b5af4c6df96be599322dfab29003f618_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_b5af4c6df96be599322dfab29003f618_tuple, 0, const_str_plain_XiamiSongIE); Py_INCREF(const_str_plain_XiamiSongIE);
    PyTuple_SET_ITEM(const_tuple_b5af4c6df96be599322dfab29003f618_tuple, 1, const_str_plain_XiamiAlbumIE); Py_INCREF(const_str_plain_XiamiAlbumIE);
    PyTuple_SET_ITEM(const_tuple_b5af4c6df96be599322dfab29003f618_tuple, 2, const_str_plain_XiamiArtistIE); Py_INCREF(const_str_plain_XiamiArtistIE);
    PyTuple_SET_ITEM(const_tuple_b5af4c6df96be599322dfab29003f618_tuple, 3, const_str_plain_XiamiCollectionIE); Py_INCREF(const_str_plain_XiamiCollectionIE);
    const_str_plain_esri = UNSTREAM_STRING_ASCII(&constant_bin[ 1196888 ], 4, 1);
    const_str_plain_xtube = UNSTREAM_STRING_ASCII(&constant_bin[ 1202448 ], 5, 1);
    const_str_plain_khanacademy = UNSTREAM_STRING_ASCII(&constant_bin[ 1202453 ], 11, 1);
    const_tuple_str_plain_MetacriticIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MetacriticIE_tuple, 0, const_str_plain_MetacriticIE); Py_INCREF(const_str_plain_MetacriticIE);
    const_str_plain_fivemin = UNSTREAM_STRING_ASCII(&constant_bin[ 1202464 ], 7, 1);
    const_str_plain_dctp = UNSTREAM_STRING_ASCII(&constant_bin[ 1137245 ], 4, 1);
    const_str_plain_freesound = UNSTREAM_STRING_ASCII(&constant_bin[ 1202471 ], 9, 1);
    const_tuple_str_plain_VRVIE_str_plain_VRVSeriesIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_VRVIE_str_plain_VRVSeriesIE_tuple, 0, const_str_plain_VRVIE); Py_INCREF(const_str_plain_VRVIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_VRVIE_str_plain_VRVSeriesIE_tuple, 1, const_str_plain_VRVSeriesIE); Py_INCREF(const_str_plain_VRVSeriesIE);
    const_tuple_str_plain_BetIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BetIE_tuple, 0, const_str_plain_BetIE); Py_INCREF(const_str_plain_BetIE);
    const_str_plain_tfo = UNSTREAM_STRING_ASCII(&constant_bin[ 19830 ], 3, 1);
    const_str_plain_bfi = UNSTREAM_STRING_ASCII(&constant_bin[ 734967 ], 3, 1);
    const_tuple_8cfda770f0cfc21081f22c8904caa313_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_8cfda770f0cfc21081f22c8904caa313_tuple, 0, const_str_plain_YandexMusicTrackIE); Py_INCREF(const_str_plain_YandexMusicTrackIE);
    PyTuple_SET_ITEM(const_tuple_8cfda770f0cfc21081f22c8904caa313_tuple, 1, const_str_plain_YandexMusicAlbumIE); Py_INCREF(const_str_plain_YandexMusicAlbumIE);
    PyTuple_SET_ITEM(const_tuple_8cfda770f0cfc21081f22c8904caa313_tuple, 2, const_str_plain_YandexMusicPlaylistIE); Py_INCREF(const_str_plain_YandexMusicPlaylistIE);
    const_tuple_str_plain_PhotobucketIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PhotobucketIE_tuple, 0, const_str_plain_PhotobucketIE); Py_INCREF(const_str_plain_PhotobucketIE);
    const_str_plain_franceculture = UNSTREAM_STRING_ASCII(&constant_bin[ 1202480 ], 13, 1);
    const_tuple_str_plain_MSNIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MSNIE_tuple, 0, const_str_plain_MSNIE); Py_INCREF(const_str_plain_MSNIE);
    const_tuple_str_plain_MwaveIE_str_plain_MwaveMeetGreetIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_MwaveIE_str_plain_MwaveMeetGreetIE_tuple, 0, const_str_plain_MwaveIE); Py_INCREF(const_str_plain_MwaveIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_MwaveIE_str_plain_MwaveMeetGreetIE_tuple, 1, const_str_plain_MwaveMeetGreetIE); Py_INCREF(const_str_plain_MwaveMeetGreetIE);
    const_str_plain_swrmediathek = UNSTREAM_STRING_ASCII(&constant_bin[ 1202493 ], 12, 1);
    const_tuple_str_plain_GrouponIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GrouponIE_tuple, 0, const_str_plain_GrouponIE); Py_INCREF(const_str_plain_GrouponIE);
    const_str_plain_cbslocal = UNSTREAM_STRING_ASCII(&constant_bin[ 885998 ], 8, 1);
    const_tuple_0cdf24cf561da711898f7c6ac47ad286_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_0cdf24cf561da711898f7c6ac47ad286_tuple, 0, const_str_plain_MediasiteIE); Py_INCREF(const_str_plain_MediasiteIE);
    PyTuple_SET_ITEM(const_tuple_0cdf24cf561da711898f7c6ac47ad286_tuple, 1, const_str_plain_MediasiteCatalogIE); Py_INCREF(const_str_plain_MediasiteCatalogIE);
    PyTuple_SET_ITEM(const_tuple_0cdf24cf561da711898f7c6ac47ad286_tuple, 2, const_str_plain_MediasiteNamedCatalogIE); Py_INCREF(const_str_plain_MediasiteNamedCatalogIE);
    const_tuple_96ffb49cf6b140cfca4cdde1e01282ac_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_96ffb49cf6b140cfca4cdde1e01282ac_tuple, 0, const_str_plain_RaiPlayIE); Py_INCREF(const_str_plain_RaiPlayIE);
    PyTuple_SET_ITEM(const_tuple_96ffb49cf6b140cfca4cdde1e01282ac_tuple, 1, const_str_plain_RaiPlayLiveIE); Py_INCREF(const_str_plain_RaiPlayLiveIE);
    PyTuple_SET_ITEM(const_tuple_96ffb49cf6b140cfca4cdde1e01282ac_tuple, 2, const_str_plain_RaiPlayPlaylistIE); Py_INCREF(const_str_plain_RaiPlayPlaylistIE);
    PyTuple_SET_ITEM(const_tuple_96ffb49cf6b140cfca4cdde1e01282ac_tuple, 3, const_str_plain_RaiIE); Py_INCREF(const_str_plain_RaiIE);
    const_tuple_str_plain_TriluliluIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TriluliluIE_tuple, 0, const_str_plain_TriluliluIE); Py_INCREF(const_str_plain_TriluliluIE);
    const_str_plain_uol = UNSTREAM_STRING_ASCII(&constant_bin[ 1202505 ], 3, 1);
    const_tuple_str_plain_CBSLocalIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CBSLocalIE_tuple, 0, const_str_plain_CBSLocalIE); Py_INCREF(const_str_plain_CBSLocalIE);
    const_tuple_str_plain_PinkbikeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PinkbikeIE_tuple, 0, const_str_plain_PinkbikeIE); Py_INCREF(const_str_plain_PinkbikeIE);
    const_tuple_str_plain_TeachableIE_str_plain_TeachableCourseIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_TeachableIE_str_plain_TeachableCourseIE_tuple, 0, const_str_plain_TeachableIE); Py_INCREF(const_str_plain_TeachableIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TeachableIE_str_plain_TeachableCourseIE_tuple, 1, const_str_plain_TeachableCourseIE); Py_INCREF(const_str_plain_TeachableCourseIE);
    const_tuple_str_plain_LeIE_str_plain_LePlaylistIE_str_plain_LetvCloudIE_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_LeIE_str_plain_LePlaylistIE_str_plain_LetvCloudIE_tuple, 0, const_str_plain_LeIE); Py_INCREF(const_str_plain_LeIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_LeIE_str_plain_LePlaylistIE_str_plain_LetvCloudIE_tuple, 1, const_str_plain_LePlaylistIE); Py_INCREF(const_str_plain_LePlaylistIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_LeIE_str_plain_LePlaylistIE_str_plain_LetvCloudIE_tuple, 2, const_str_plain_LetvCloudIE); Py_INCREF(const_str_plain_LetvCloudIE);
    const_str_plain_stretchinternet = UNSTREAM_STRING_ASCII(&constant_bin[ 1202508 ], 15, 1);
    const_tuple_str_plain_RadioCanadaIE_str_plain_RadioCanadaAudioVideoIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_RadioCanadaIE_str_plain_RadioCanadaAudioVideoIE_tuple, 0, const_str_plain_RadioCanadaIE); Py_INCREF(const_str_plain_RadioCanadaIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_RadioCanadaIE_str_plain_RadioCanadaAudioVideoIE_tuple, 1, const_str_plain_RadioCanadaAudioVideoIE); Py_INCREF(const_str_plain_RadioCanadaAudioVideoIE);
    const_tuple_str_plain_YoukuIE_str_plain_YoukuShowIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_YoukuIE_str_plain_YoukuShowIE_tuple, 0, const_str_plain_YoukuIE); Py_INCREF(const_str_plain_YoukuIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_YoukuIE_str_plain_YoukuShowIE_tuple, 1, const_str_plain_YoukuShowIE); Py_INCREF(const_str_plain_YoukuShowIE);
    const_tuple_str_plain_EmbedlyIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EmbedlyIE_tuple, 0, const_str_plain_EmbedlyIE); Py_INCREF(const_str_plain_EmbedlyIE);
    const_tuple_str_plain_MelonVODIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MelonVODIE_tuple, 0, const_str_plain_MelonVODIE); Py_INCREF(const_str_plain_MelonVODIE);
    const_tuple_str_plain_RteIE_str_plain_RteRadioIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_RteIE_str_plain_RteRadioIE_tuple, 0, const_str_plain_RteIE); Py_INCREF(const_str_plain_RteIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_RteIE_str_plain_RteRadioIE_tuple, 1, const_str_plain_RteRadioIE); Py_INCREF(const_str_plain_RteRadioIE);
    const_str_plain_c56 = UNSTREAM_STRING_ASCII(&constant_bin[ 775665 ], 3, 1);
    const_tuple_str_plain_FilmwebIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FilmwebIE_tuple, 0, const_str_plain_FilmwebIE); Py_INCREF(const_str_plain_FilmwebIE);
    const_tuple_str_plain_HentaiStigmaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HentaiStigmaIE_tuple, 0, const_str_plain_HentaiStigmaIE); Py_INCREF(const_str_plain_HentaiStigmaIE);
    const_tuple_str_plain_PerformGroupIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PerformGroupIE_tuple, 0, const_str_plain_PerformGroupIE); Py_INCREF(const_str_plain_PerformGroupIE);
    const_tuple_str_plain_FunimationIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FunimationIE_tuple, 0, const_str_plain_FunimationIE); Py_INCREF(const_str_plain_FunimationIE);
    const_tuple_str_plain_AZMedienIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AZMedienIE_tuple, 0, const_str_plain_AZMedienIE); Py_INCREF(const_str_plain_AZMedienIE);
    const_str_plain_douyutv = UNSTREAM_STRING_ASCII(&constant_bin[ 1155127 ], 7, 1);
    const_str_plain_medici = UNSTREAM_STRING_ASCII(&constant_bin[ 1202523 ], 6, 1);
    const_tuple_str_plain_TeleBruxellesIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TeleBruxellesIE_tuple, 0, const_str_plain_TeleBruxellesIE); Py_INCREF(const_str_plain_TeleBruxellesIE);
    const_tuple_str_plain_WeiqiTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_WeiqiTVIE_tuple, 0, const_str_plain_WeiqiTVIE); Py_INCREF(const_str_plain_WeiqiTVIE);
    const_tuple_315acfe0dc00e4686a7cf9335df409eb_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_315acfe0dc00e4686a7cf9335df409eb_tuple, 0, const_str_plain_LimelightMediaIE); Py_INCREF(const_str_plain_LimelightMediaIE);
    PyTuple_SET_ITEM(const_tuple_315acfe0dc00e4686a7cf9335df409eb_tuple, 1, const_str_plain_LimelightChannelIE); Py_INCREF(const_str_plain_LimelightChannelIE);
    PyTuple_SET_ITEM(const_tuple_315acfe0dc00e4686a7cf9335df409eb_tuple, 2, const_str_plain_LimelightChannelListIE); Py_INCREF(const_str_plain_LimelightChannelListIE);
    const_tuple_str_plain_TwitCastingIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TwitCastingIE_tuple, 0, const_str_plain_TwitCastingIE); Py_INCREF(const_str_plain_TwitCastingIE);
    const_tuple_str_plain_BpbIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BpbIE_tuple, 0, const_str_plain_BpbIE); Py_INCREF(const_str_plain_BpbIE);
    const_str_plain_thesun = UNSTREAM_STRING_ASCII(&constant_bin[ 1202529 ], 6, 1);
    const_str_plain_hotnewhiphop = UNSTREAM_STRING_ASCII(&constant_bin[ 1202535 ], 12, 1);
    const_str_plain_tva = UNSTREAM_STRING_ASCII(&constant_bin[ 58535 ], 3, 1);
    const_tuple_str_plain_NuvidIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NuvidIE_tuple, 0, const_str_plain_NuvidIE); Py_INCREF(const_str_plain_NuvidIE);
    const_tuple_str_plain_MinotoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MinotoIE_tuple, 0, const_str_plain_MinotoIE); Py_INCREF(const_str_plain_MinotoIE);
    const_str_plain_playtvak = UNSTREAM_STRING_ASCII(&constant_bin[ 1202547 ], 8, 1);
    const_tuple_str_plain_InternazionaleIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_InternazionaleIE_tuple, 0, const_str_plain_InternazionaleIE); Py_INCREF(const_str_plain_InternazionaleIE);
    const_tuple_str_plain_TumblrIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TumblrIE_tuple, 0, const_str_plain_TumblrIE); Py_INCREF(const_str_plain_TumblrIE);
    const_str_plain_foxgay = UNSTREAM_STRING_ASCII(&constant_bin[ 1202555 ], 6, 1);
    const_str_plain_airmozilla = UNSTREAM_STRING_ASCII(&constant_bin[ 870990 ], 10, 1);
    const_tuple_45a8696be5d934ac8f3d30d168d61a77_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_45a8696be5d934ac8f3d30d168d61a77_tuple, 0, const_str_plain_MicrosoftVirtualAcademyIE); Py_INCREF(const_str_plain_MicrosoftVirtualAcademyIE);
    PyTuple_SET_ITEM(const_tuple_45a8696be5d934ac8f3d30d168d61a77_tuple, 1, const_str_plain_MicrosoftVirtualAcademyCourseIE); Py_INCREF(const_str_plain_MicrosoftVirtualAcademyCourseIE);
    const_str_plain_tmz = UNSTREAM_STRING_ASCII(&constant_bin[ 1202561 ], 3, 1);
    const_str_plain_newgrounds = UNSTREAM_STRING_ASCII(&constant_bin[ 1202564 ], 10, 1);
    const_tuple_str_plain_SteamIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SteamIE_tuple, 0, const_str_plain_SteamIE); Py_INCREF(const_str_plain_SteamIE);
    const_str_plain_tiktok = UNSTREAM_STRING_ASCII(&constant_bin[ 1202574 ], 6, 1);
    const_str_plain_trunews = UNSTREAM_STRING_ASCII(&constant_bin[ 1202580 ], 7, 1);
    const_tuple_str_plain_VuClipIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VuClipIE_tuple, 0, const_str_plain_VuClipIE); Py_INCREF(const_str_plain_VuClipIE);
    const_tuple_str_plain_ArchiveOrgIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ArchiveOrgIE_tuple, 0, const_str_plain_ArchiveOrgIE); Py_INCREF(const_str_plain_ArchiveOrgIE);
    const_str_plain_tunepk = UNSTREAM_STRING_ASCII(&constant_bin[ 1202587 ], 6, 1);
    const_tuple_d3bc9f00cff9a92b7716259cb3fefdd2_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_d3bc9f00cff9a92b7716259cb3fefdd2_tuple, 0, const_str_plain_TVNowIE); Py_INCREF(const_str_plain_TVNowIE);
    PyTuple_SET_ITEM(const_tuple_d3bc9f00cff9a92b7716259cb3fefdd2_tuple, 1, const_str_plain_TVNowNewIE); Py_INCREF(const_str_plain_TVNowNewIE);
    PyTuple_SET_ITEM(const_tuple_d3bc9f00cff9a92b7716259cb3fefdd2_tuple, 2, const_str_plain_TVNowSeasonIE); Py_INCREF(const_str_plain_TVNowSeasonIE);
    PyTuple_SET_ITEM(const_tuple_d3bc9f00cff9a92b7716259cb3fefdd2_tuple, 3, const_str_plain_TVNowAnnualIE); Py_INCREF(const_str_plain_TVNowAnnualIE);
    PyTuple_SET_ITEM(const_tuple_d3bc9f00cff9a92b7716259cb3fefdd2_tuple, 4, const_str_plain_TVNowShowIE); Py_INCREF(const_str_plain_TVNowShowIE);
    const_str_plain_dtube = UNSTREAM_STRING_ASCII(&constant_bin[ 1168474 ], 5, 1);
    const_str_plain_tagesschau = UNSTREAM_STRING_ASCII(&constant_bin[ 1202593 ], 10, 1);
    const_tuple_str_plain_WeiboIE_str_plain_WeiboMobileIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_WeiboIE_str_plain_WeiboMobileIE_tuple, 0, const_str_plain_WeiboIE); Py_INCREF(const_str_plain_WeiboIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_WeiboIE_str_plain_WeiboMobileIE_tuple, 1, const_str_plain_WeiboMobileIE); Py_INCREF(const_str_plain_WeiboMobileIE);
    const_tuple_str_plain_TurboIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TurboIE_tuple, 0, const_str_plain_TurboIE); Py_INCREF(const_str_plain_TurboIE);
    const_tuple_str_plain_IzleseneIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_IzleseneIE_tuple, 0, const_str_plain_IzleseneIE); Py_INCREF(const_str_plain_IzleseneIE);
    const_tuple_str_plain_SharedIE_str_plain_VivoIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_SharedIE_str_plain_VivoIE_tuple, 0, const_str_plain_SharedIE); Py_INCREF(const_str_plain_SharedIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_SharedIE_str_plain_VivoIE_tuple, 1, const_str_plain_VivoIE); Py_INCREF(const_str_plain_VivoIE);
    const_str_plain_yahoo = UNSTREAM_STRING_ASCII(&constant_bin[ 682378 ], 5, 1);
    const_str_digest_59949d645e844a19b7723f8cf4213fb1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1202603 ], 40, 0);
    const_str_plain_sky = UNSTREAM_STRING_ASCII(&constant_bin[ 851911 ], 3, 1);
    const_tuple_str_plain_BeatportIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BeatportIE_tuple, 0, const_str_plain_BeatportIE); Py_INCREF(const_str_plain_BeatportIE);
    const_str_plain_filmweb = UNSTREAM_STRING_ASCII(&constant_bin[ 1202643 ], 7, 1);
    const_str_plain_vodlocker = UNSTREAM_STRING_ASCII(&constant_bin[ 1202650 ], 9, 1);
    const_tuple_str_plain_TVNetIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVNetIE_tuple, 0, const_str_plain_TVNetIE); Py_INCREF(const_str_plain_TVNetIE);
    const_tuple_str_plain_NHLIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NHLIE_tuple, 0, const_str_plain_NHLIE); Py_INCREF(const_str_plain_NHLIE);
    const_str_plain_archiveorg = UNSTREAM_STRING_ASCII(&constant_bin[ 901475 ], 10, 1);
    const_str_plain_howstuffworks = UNSTREAM_STRING_ASCII(&constant_bin[ 1202659 ], 13, 1);
    const_tuple_str_plain_YnetIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_YnetIE_tuple, 0, const_str_plain_YnetIE); Py_INCREF(const_str_plain_YnetIE);
    const_tuple_str_plain_RuvIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RuvIE_tuple, 0, const_str_plain_RuvIE); Py_INCREF(const_str_plain_RuvIE);
    const_tuple_str_plain_RMCDecouverteIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RMCDecouverteIE_tuple, 0, const_str_plain_RMCDecouverteIE); Py_INCREF(const_str_plain_RMCDecouverteIE);
    const_str_plain_yandexdisk = UNSTREAM_STRING_ASCII(&constant_bin[ 1202672 ], 10, 1);
    const_tuple_str_plain_GfycatIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GfycatIE_tuple, 0, const_str_plain_GfycatIE); Py_INCREF(const_str_plain_GfycatIE);
    const_tuple_str_plain_AbcNewsIE_str_plain_AbcNewsVideoIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_AbcNewsIE_str_plain_AbcNewsVideoIE_tuple, 0, const_str_plain_AbcNewsIE); Py_INCREF(const_str_plain_AbcNewsIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_AbcNewsIE_str_plain_AbcNewsVideoIE_tuple, 1, const_str_plain_AbcNewsVideoIE); Py_INCREF(const_str_plain_AbcNewsVideoIE);
    const_tuple_str_plain_FlickrIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FlickrIE_tuple, 0, const_str_plain_FlickrIE); Py_INCREF(const_str_plain_FlickrIE);
    const_tuple_str_plain_RICEIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RICEIE_tuple, 0, const_str_plain_RICEIE); Py_INCREF(const_str_plain_RICEIE);
    const_tuple_str_plain_SWRMediathekIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SWRMediathekIE_tuple, 0, const_str_plain_SWRMediathekIE); Py_INCREF(const_str_plain_SWRMediathekIE);
    const_str_plain_embedly = UNSTREAM_STRING_ASCII(&constant_bin[ 1188199 ], 7, 1);
    const_str_plain_wakanim = UNSTREAM_STRING_ASCII(&constant_bin[ 1202682 ], 7, 1);
    const_tuple_str_plain_AllocineIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AllocineIE_tuple, 0, const_str_plain_AllocineIE); Py_INCREF(const_str_plain_AllocineIE);
    const_str_plain_spiegel = UNSTREAM_STRING_ASCII(&constant_bin[ 1202689 ], 7, 1);
    const_tuple_str_plain_PlayPlusTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PlayPlusTVIE_tuple, 0, const_str_plain_PlayPlusTVIE); Py_INCREF(const_str_plain_PlayPlusTVIE);
    const_tuple_str_plain_OutsideTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_OutsideTVIE_tuple, 0, const_str_plain_OutsideTVIE); Py_INCREF(const_str_plain_OutsideTVIE);
    const_str_plain_googlesearch = UNSTREAM_STRING_ASCII(&constant_bin[ 1202696 ], 12, 1);
    const_str_plain_zaq1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1202708 ], 4, 1);
    const_tuple_str_plain_NJPWWorldIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NJPWWorldIE_tuple, 0, const_str_plain_NJPWWorldIE); Py_INCREF(const_str_plain_NJPWWorldIE);
    const_str_plain_aliexpress = UNSTREAM_STRING_ASCII(&constant_bin[ 871841 ], 10, 1);
    const_tuple_8ba425396d0796abd5fa0f9f6bc8fb1b_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_8ba425396d0796abd5fa0f9f6bc8fb1b_tuple, 0, const_str_plain_NextMediaIE); Py_INCREF(const_str_plain_NextMediaIE);
    PyTuple_SET_ITEM(const_tuple_8ba425396d0796abd5fa0f9f6bc8fb1b_tuple, 1, const_str_plain_NextMediaActionNewsIE); Py_INCREF(const_str_plain_NextMediaActionNewsIE);
    PyTuple_SET_ITEM(const_tuple_8ba425396d0796abd5fa0f9f6bc8fb1b_tuple, 2, const_str_plain_AppleDailyIE); Py_INCREF(const_str_plain_AppleDailyIE);
    PyTuple_SET_ITEM(const_tuple_8ba425396d0796abd5fa0f9f6bc8fb1b_tuple, 3, const_str_plain_NextTVIE); Py_INCREF(const_str_plain_NextTVIE);
    const_tuple_b63791b7cbec42bc00debfbfa72fc466_tuple = PyTuple_New(7);
    PyTuple_SET_ITEM(const_tuple_b63791b7cbec42bc00debfbfa72fc466_tuple, 0, const_str_plain_NetEaseMusicIE); Py_INCREF(const_str_plain_NetEaseMusicIE);
    PyTuple_SET_ITEM(const_tuple_b63791b7cbec42bc00debfbfa72fc466_tuple, 1, const_str_plain_NetEaseMusicAlbumIE); Py_INCREF(const_str_plain_NetEaseMusicAlbumIE);
    PyTuple_SET_ITEM(const_tuple_b63791b7cbec42bc00debfbfa72fc466_tuple, 2, const_str_plain_NetEaseMusicSingerIE); Py_INCREF(const_str_plain_NetEaseMusicSingerIE);
    PyTuple_SET_ITEM(const_tuple_b63791b7cbec42bc00debfbfa72fc466_tuple, 3, const_str_plain_NetEaseMusicListIE); Py_INCREF(const_str_plain_NetEaseMusicListIE);
    PyTuple_SET_ITEM(const_tuple_b63791b7cbec42bc00debfbfa72fc466_tuple, 4, const_str_plain_NetEaseMusicMvIE); Py_INCREF(const_str_plain_NetEaseMusicMvIE);
    PyTuple_SET_ITEM(const_tuple_b63791b7cbec42bc00debfbfa72fc466_tuple, 5, const_str_plain_NetEaseMusicProgramIE); Py_INCREF(const_str_plain_NetEaseMusicProgramIE);
    PyTuple_SET_ITEM(const_tuple_b63791b7cbec42bc00debfbfa72fc466_tuple, 6, const_str_plain_NetEaseMusicDjRadioIE); Py_INCREF(const_str_plain_NetEaseMusicDjRadioIE);
    const_tuple_str_plain_NineGagIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NineGagIE_tuple, 0, const_str_plain_NineGagIE); Py_INCREF(const_str_plain_NineGagIE);
    const_tuple_str_plain_UMGDeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_UMGDeIE_tuple, 0, const_str_plain_UMGDeIE); Py_INCREF(const_str_plain_UMGDeIE);
    const_str_plain_hentaistigma = UNSTREAM_STRING_ASCII(&constant_bin[ 1202712 ], 12, 1);
    const_str_plain_lecture2go = UNSTREAM_STRING_ASCII(&constant_bin[ 1202724 ], 10, 1);
    const_tuple_041a1162a5d0a8642281dec2c46c1c28_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_041a1162a5d0a8642281dec2c46c1c28_tuple, 0, const_str_plain_QQMusicIE); Py_INCREF(const_str_plain_QQMusicIE);
    PyTuple_SET_ITEM(const_tuple_041a1162a5d0a8642281dec2c46c1c28_tuple, 1, const_str_plain_QQMusicSingerIE); Py_INCREF(const_str_plain_QQMusicSingerIE);
    PyTuple_SET_ITEM(const_tuple_041a1162a5d0a8642281dec2c46c1c28_tuple, 2, const_str_plain_QQMusicAlbumIE); Py_INCREF(const_str_plain_QQMusicAlbumIE);
    PyTuple_SET_ITEM(const_tuple_041a1162a5d0a8642281dec2c46c1c28_tuple, 3, const_str_plain_QQMusicToplistIE); Py_INCREF(const_str_plain_QQMusicToplistIE);
    PyTuple_SET_ITEM(const_tuple_041a1162a5d0a8642281dec2c46c1c28_tuple, 4, const_str_plain_QQMusicPlaylistIE); Py_INCREF(const_str_plain_QQMusicPlaylistIE);
    const_str_plain_faz = UNSTREAM_STRING_ASCII(&constant_bin[ 882286 ], 3, 1);
    const_tuple_str_plain_MLBIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MLBIE_tuple, 0, const_str_plain_MLBIE); Py_INCREF(const_str_plain_MLBIE);
    const_tuple_str_plain_ScreencastIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ScreencastIE_tuple, 0, const_str_plain_ScreencastIE); Py_INCREF(const_str_plain_ScreencastIE);
    const_tuple_str_plain_GooglePlusIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GooglePlusIE_tuple, 0, const_str_plain_GooglePlusIE); Py_INCREF(const_str_plain_GooglePlusIE);
    const_tuple_str_plain_PyvideoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PyvideoIE_tuple, 0, const_str_plain_PyvideoIE); Py_INCREF(const_str_plain_PyvideoIE);
    const_tuple_str_plain_STVPlayerIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_STVPlayerIE_tuple, 0, const_str_plain_STVPlayerIE); Py_INCREF(const_str_plain_STVPlayerIE);
    const_str_plain_stv = UNSTREAM_STRING_ASCII(&constant_bin[ 732671 ], 3, 1);
    const_tuple_str_plain_MotherlessIE_str_plain_MotherlessGroupIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_MotherlessIE_str_plain_MotherlessGroupIE_tuple, 0, const_str_plain_MotherlessIE); Py_INCREF(const_str_plain_MotherlessIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_MotherlessIE_str_plain_MotherlessGroupIE_tuple, 1, const_str_plain_MotherlessGroupIE); Py_INCREF(const_str_plain_MotherlessGroupIE);
    const_tuple_str_plain_GazetaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GazetaIE_tuple, 0, const_str_plain_GazetaIE); Py_INCREF(const_str_plain_GazetaIE);
    const_tuple_str_plain_Varzesh3IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Varzesh3IE_tuple, 0, const_str_plain_Varzesh3IE); Py_INCREF(const_str_plain_Varzesh3IE);
    const_str_plain_cbssports = UNSTREAM_STRING_ASCII(&constant_bin[ 1019915 ], 9, 1);
    const_str_plain_malltv = UNSTREAM_STRING_ASCII(&constant_bin[ 1202734 ], 6, 1);
    const_tuple_str_plain_PlayFMIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PlayFMIE_tuple, 0, const_str_plain_PlayFMIE); Py_INCREF(const_str_plain_PlayFMIE);
    const_str_plain_yandexvideo = UNSTREAM_STRING_ASCII(&constant_bin[ 1202740 ], 11, 1);
    const_tuple_str_plain_DropboxIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DropboxIE_tuple, 0, const_str_plain_DropboxIE); Py_INCREF(const_str_plain_DropboxIE);
    const_tuple_str_plain_UrortIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_UrortIE_tuple, 0, const_str_plain_UrortIE); Py_INCREF(const_str_plain_UrortIE);
    const_tuple_str_plain_CamWithHerIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CamWithHerIE_tuple, 0, const_str_plain_CamWithHerIE); Py_INCREF(const_str_plain_CamWithHerIE);
    const_str_plain_folketinget = UNSTREAM_STRING_ASCII(&constant_bin[ 1202751 ], 11, 1);
    const_str_plain_metacritic = UNSTREAM_STRING_ASCII(&constant_bin[ 1202762 ], 10, 1);
    const_str_plain_pornoxo = UNSTREAM_STRING_ASCII(&constant_bin[ 1202772 ], 7, 1);
    const_tuple_str_plain_BYUtvIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BYUtvIE_tuple, 0, const_str_plain_BYUtvIE); Py_INCREF(const_str_plain_BYUtvIE);
    const_str_plain_litv = UNSTREAM_STRING_ASCII(&constant_bin[ 1202779 ], 4, 1);
    const_str_plain_jove = UNSTREAM_STRING_ASCII(&constant_bin[ 1202783 ], 4, 1);
    const_tuple_0f4d5730c34d828ed4052fbe8bd040b8_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_0f4d5730c34d828ed4052fbe8bd040b8_tuple, 0, const_str_plain_EllenTubeIE); Py_INCREF(const_str_plain_EllenTubeIE);
    PyTuple_SET_ITEM(const_tuple_0f4d5730c34d828ed4052fbe8bd040b8_tuple, 1, const_str_plain_EllenTubeVideoIE); Py_INCREF(const_str_plain_EllenTubeVideoIE);
    PyTuple_SET_ITEM(const_tuple_0f4d5730c34d828ed4052fbe8bd040b8_tuple, 2, const_str_plain_EllenTubePlaylistIE); Py_INCREF(const_str_plain_EllenTubePlaylistIE);
    const_tuple_str_plain_GameSpotIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GameSpotIE_tuple, 0, const_str_plain_GameSpotIE); Py_INCREF(const_str_plain_GameSpotIE);
    const_tuple_str_plain_LiveLeakIE_str_plain_LiveLeakEmbedIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_LiveLeakIE_str_plain_LiveLeakEmbedIE_tuple, 0, const_str_plain_LiveLeakIE); Py_INCREF(const_str_plain_LiveLeakIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_LiveLeakIE_str_plain_LiveLeakEmbedIE_tuple, 1, const_str_plain_LiveLeakEmbedIE); Py_INCREF(const_str_plain_LiveLeakEmbedIE);
    const_str_plain_ruhd = UNSTREAM_STRING_ASCII(&constant_bin[ 1202787 ], 4, 1);
    const_str_plain_normalboots = UNSTREAM_STRING_ASCII(&constant_bin[ 1202791 ], 11, 1);
    const_tuple_str_plain_LinuxAcademyIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LinuxAcademyIE_tuple, 0, const_str_plain_LinuxAcademyIE); Py_INCREF(const_str_plain_LinuxAcademyIE);
    const_str_plain_rice = UNSTREAM_STRING_ASCII(&constant_bin[ 1202802 ], 4, 1);
    const_tuple_str_plain_YesJapanIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_YesJapanIE_tuple, 0, const_str_plain_YesJapanIE); Py_INCREF(const_str_plain_YesJapanIE);
    const_str_plain_kuwo = UNSTREAM_STRING_ASCII(&constant_bin[ 1202806 ], 4, 1);
    const_str_plain_savefrom = UNSTREAM_STRING_ASCII(&constant_bin[ 1202810 ], 8, 1);
    const_tuple_str_plain_CarambaTVIE_str_plain_CarambaTVPageIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_CarambaTVIE_str_plain_CarambaTVPageIE_tuple, 0, const_str_plain_CarambaTVIE); Py_INCREF(const_str_plain_CarambaTVIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_CarambaTVIE_str_plain_CarambaTVPageIE_tuple, 1, const_str_plain_CarambaTVPageIE); Py_INCREF(const_str_plain_CarambaTVPageIE);
    const_tuple_str_plain_LemondeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LemondeIE_tuple, 0, const_str_plain_LemondeIE); Py_INCREF(const_str_plain_LemondeIE);
    const_str_plain_wdr = UNSTREAM_STRING_ASCII(&constant_bin[ 1202818 ], 3, 1);
    const_tuple_str_plain_TDSLifewayIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TDSLifewayIE_tuple, 0, const_str_plain_TDSLifewayIE); Py_INCREF(const_str_plain_TDSLifewayIE);
    const_tuple_str_plain_JamendoIE_str_plain_JamendoAlbumIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_JamendoIE_str_plain_JamendoAlbumIE_tuple, 0, const_str_plain_JamendoIE); Py_INCREF(const_str_plain_JamendoIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_JamendoIE_str_plain_JamendoAlbumIE_tuple, 1, const_str_plain_JamendoAlbumIE); Py_INCREF(const_str_plain_JamendoAlbumIE);
    const_str_plain_vuclip = UNSTREAM_STRING_ASCII(&constant_bin[ 1202821 ], 6, 1);
    const_str_plain_dfb = UNSTREAM_STRING_ASCII(&constant_bin[ 889177 ], 3, 1);
    const_tuple_str_plain_Zaq1IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Zaq1IE_tuple, 0, const_str_plain_Zaq1IE); Py_INCREF(const_str_plain_Zaq1IE);
    const_str_plain_tv2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1202827 ], 3, 1);
    const_tuple_str_plain_XuiteIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_XuiteIE_tuple, 0, const_str_plain_XuiteIE); Py_INCREF(const_str_plain_XuiteIE);
    const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple = PyTuple_New(17);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 0, const_str_plain_BBVTVIE); Py_INCREF(const_str_plain_BBVTVIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 1, const_str_plain_EinsUndEinsTVIE); Py_INCREF(const_str_plain_EinsUndEinsTVIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 2, const_str_plain_EWETVIE); Py_INCREF(const_str_plain_EWETVIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 3, const_str_plain_GlattvisionTVIE); Py_INCREF(const_str_plain_GlattvisionTVIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 4, const_str_plain_MNetTVIE); Py_INCREF(const_str_plain_MNetTVIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 5, const_str_plain_MyVisionTVIE); Py_INCREF(const_str_plain_MyVisionTVIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 6, const_str_plain_NetPlusIE); Py_INCREF(const_str_plain_NetPlusIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 7, const_str_plain_OsnatelTVIE); Py_INCREF(const_str_plain_OsnatelTVIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 8, const_str_plain_QuantumTVIE); Py_INCREF(const_str_plain_QuantumTVIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 9, const_str_plain_QuicklineIE); Py_INCREF(const_str_plain_QuicklineIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 10, const_str_plain_QuicklineLiveIE); Py_INCREF(const_str_plain_QuicklineLiveIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 11, const_str_plain_SaltTVIE); Py_INCREF(const_str_plain_SaltTVIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 12, const_str_plain_SAKTVIE); Py_INCREF(const_str_plain_SAKTVIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 13, const_str_plain_VTXTVIE); Py_INCREF(const_str_plain_VTXTVIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 14, const_str_plain_WalyTVIE); Py_INCREF(const_str_plain_WalyTVIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 15, const_str_plain_ZattooIE); Py_INCREF(const_str_plain_ZattooIE);
    PyTuple_SET_ITEM(const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple, 16, const_str_plain_ZattooLiveIE); Py_INCREF(const_str_plain_ZattooLiveIE);
    const_str_plain_bandcamp = UNSTREAM_STRING_ASCII(&constant_bin[ 925165 ], 8, 1);
    const_tuple_str_plain_SCTEIE_str_plain_SCTECourseIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_SCTEIE_str_plain_SCTECourseIE_tuple, 0, const_str_plain_SCTEIE); Py_INCREF(const_str_plain_SCTEIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_SCTEIE_str_plain_SCTECourseIE_tuple, 1, const_str_plain_SCTECourseIE); Py_INCREF(const_str_plain_SCTECourseIE);
    const_tuple_str_plain_HitboxIE_str_plain_HitboxLiveIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_HitboxIE_str_plain_HitboxLiveIE_tuple, 0, const_str_plain_HitboxIE); Py_INCREF(const_str_plain_HitboxIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_HitboxIE_str_plain_HitboxLiveIE_tuple, 1, const_str_plain_HitboxLiveIE); Py_INCREF(const_str_plain_HitboxLiveIE);
    const_tuple_str_plain_BFIPlayerIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BFIPlayerIE_tuple, 0, const_str_plain_BFIPlayerIE); Py_INCREF(const_str_plain_BFIPlayerIE);
    const_tuple_str_plain_MDRIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MDRIE_tuple, 0, const_str_plain_MDRIE); Py_INCREF(const_str_plain_MDRIE);
    const_tuple_str_plain_OdaTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_OdaTVIE_tuple, 0, const_str_plain_OdaTVIE); Py_INCREF(const_str_plain_OdaTVIE);
    const_str_plain_eporner = UNSTREAM_STRING_ASCII(&constant_bin[ 1189224 ], 7, 1);
    const_str_plain_moviezine = UNSTREAM_STRING_ASCII(&constant_bin[ 1202830 ], 9, 1);
    const_tuple_str_plain_FXNetworksIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FXNetworksIE_tuple, 0, const_str_plain_FXNetworksIE); Py_INCREF(const_str_plain_FXNetworksIE);
    const_tuple_str_plain_URPlayIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_URPlayIE_tuple, 0, const_str_plain_URPlayIE); Py_INCREF(const_str_plain_URPlayIE);
    const_tuple_str_plain_GigaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GigaIE_tuple, 0, const_str_plain_GigaIE); Py_INCREF(const_str_plain_GigaIE);
    const_tuple_str_plain_EngadgetIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EngadgetIE_tuple, 0, const_str_plain_EngadgetIE); Py_INCREF(const_str_plain_EngadgetIE);
    const_str_plain_amcnetworks = UNSTREAM_STRING_ASCII(&constant_bin[ 875441 ], 11, 1);
    const_tuple_str_plain_NiconicoIE_str_plain_NiconicoPlaylistIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_NiconicoIE_str_plain_NiconicoPlaylistIE_tuple, 0, const_str_plain_NiconicoIE); Py_INCREF(const_str_plain_NiconicoIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_NiconicoIE_str_plain_NiconicoPlaylistIE_tuple, 1, const_str_plain_NiconicoPlaylistIE); Py_INCREF(const_str_plain_NiconicoPlaylistIE);
    const_str_plain_freshlive = UNSTREAM_STRING_ASCII(&constant_bin[ 1202839 ], 9, 1);
    const_str_plain_xuite = UNSTREAM_STRING_ASCII(&constant_bin[ 1202848 ], 5, 1);
    const_tuple_str_plain_TheInterceptIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TheInterceptIE_tuple, 0, const_str_plain_TheInterceptIE); Py_INCREF(const_str_plain_TheInterceptIE);
    const_str_plain_slutload = UNSTREAM_STRING_ASCII(&constant_bin[ 1202853 ], 8, 1);
    const_tuple_str_plain_VidziIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VidziIE_tuple, 0, const_str_plain_VidziIE); Py_INCREF(const_str_plain_VidziIE);
    const_tuple_str_plain_TikTokIE_str_plain_TikTokUserIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_TikTokIE_str_plain_TikTokUserIE_tuple, 0, const_str_plain_TikTokIE); Py_INCREF(const_str_plain_TikTokIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TikTokIE_str_plain_TikTokUserIE_tuple, 1, const_str_plain_TikTokUserIE); Py_INCREF(const_str_plain_TikTokUserIE);
    const_str_plain_libraryofcongress = UNSTREAM_STRING_ASCII(&constant_bin[ 1202861 ], 17, 1);
    const_str_plain_pokemon = UNSTREAM_STRING_ASCII(&constant_bin[ 1202878 ], 7, 1);
    const_str_plain_sohu = UNSTREAM_STRING_ASCII(&constant_bin[ 990981 ], 4, 1);
    const_tuple_str_plain_ViuIE_str_plain_ViuPlaylistIE_str_plain_ViuOTTIE_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_ViuIE_str_plain_ViuPlaylistIE_str_plain_ViuOTTIE_tuple, 0, const_str_plain_ViuIE); Py_INCREF(const_str_plain_ViuIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ViuIE_str_plain_ViuPlaylistIE_str_plain_ViuOTTIE_tuple, 1, const_str_plain_ViuPlaylistIE); Py_INCREF(const_str_plain_ViuPlaylistIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ViuIE_str_plain_ViuPlaylistIE_str_plain_ViuOTTIE_tuple, 2, const_str_plain_ViuOTTIE); Py_INCREF(const_str_plain_ViuOTTIE);
    const_tuple_str_plain_RadioDeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RadioDeIE_tuple, 0, const_str_plain_RadioDeIE); Py_INCREF(const_str_plain_RadioDeIE);
    const_tuple_str_plain_WashingtonPostIE_str_plain_WashingtonPostArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_WashingtonPostIE_str_plain_WashingtonPostArticleIE_tuple, 0, const_str_plain_WashingtonPostIE); Py_INCREF(const_str_plain_WashingtonPostIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_WashingtonPostIE_str_plain_WashingtonPostArticleIE_tuple, 1, const_str_plain_WashingtonPostArticleIE); Py_INCREF(const_str_plain_WashingtonPostArticleIE);
    const_tuple_str_plain_CamTubeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CamTubeIE_tuple, 0, const_str_plain_CamTubeIE); Py_INCREF(const_str_plain_CamTubeIE);
    const_str_plain_nzz = UNSTREAM_STRING_ASCII(&constant_bin[ 1202885 ], 3, 1);
    const_tuple_str_plain_TeamcocoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TeamcocoIE_tuple, 0, const_str_plain_TeamcocoIE); Py_INCREF(const_str_plain_TeamcocoIE);
    const_tuple_eeb198c74e1e97891e594a95e7a2f944_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_eeb198c74e1e97891e594a95e7a2f944_tuple, 0, const_str_plain_RTL2IE); Py_INCREF(const_str_plain_RTL2IE);
    PyTuple_SET_ITEM(const_tuple_eeb198c74e1e97891e594a95e7a2f944_tuple, 1, const_str_plain_RTL2YouIE); Py_INCREF(const_str_plain_RTL2YouIE);
    PyTuple_SET_ITEM(const_tuple_eeb198c74e1e97891e594a95e7a2f944_tuple, 2, const_str_plain_RTL2YouSeriesIE); Py_INCREF(const_str_plain_RTL2YouSeriesIE);
    const_str_plain_pornhd = UNSTREAM_STRING_ASCII(&constant_bin[ 1202888 ], 6, 1);
    const_tuple_str_plain_TrailerAddictIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TrailerAddictIE_tuple, 0, const_str_plain_TrailerAddictIE); Py_INCREF(const_str_plain_TrailerAddictIE);
    const_str_plain_eitb = UNSTREAM_STRING_ASCII(&constant_bin[ 1183324 ], 4, 1);
    const_tuple_str_plain_GDCVaultIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GDCVaultIE_tuple, 0, const_str_plain_GDCVaultIE); Py_INCREF(const_str_plain_GDCVaultIE);
    const_tuple_str_plain_BitChuteIE_str_plain_BitChuteChannelIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_BitChuteIE_str_plain_BitChuteChannelIE_tuple, 0, const_str_plain_BitChuteIE); Py_INCREF(const_str_plain_BitChuteIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_BitChuteIE_str_plain_BitChuteChannelIE_tuple, 1, const_str_plain_BitChuteChannelIE); Py_INCREF(const_str_plain_BitChuteChannelIE);
    const_tuple_str_plain_DTubeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DTubeIE_tuple, 0, const_str_plain_DTubeIE); Py_INCREF(const_str_plain_DTubeIE);
    const_str_plain_ehow = UNSTREAM_STRING_ASCII(&constant_bin[ 565448 ], 4, 1);
    const_tuple_96868e867f6d3cc8b1d3f48f3d2d2de8_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_96868e867f6d3cc8b1d3f48f3d2d2de8_tuple, 0, const_str_plain_ESPNIE); Py_INCREF(const_str_plain_ESPNIE);
    PyTuple_SET_ITEM(const_tuple_96868e867f6d3cc8b1d3f48f3d2d2de8_tuple, 1, const_str_plain_ESPNArticleIE); Py_INCREF(const_str_plain_ESPNArticleIE);
    PyTuple_SET_ITEM(const_tuple_96868e867f6d3cc8b1d3f48f3d2d2de8_tuple, 2, const_str_plain_FiveThirtyEightIE); Py_INCREF(const_str_plain_FiveThirtyEightIE);
    const_str_plain_telewebion = UNSTREAM_STRING_ASCII(&constant_bin[ 1202894 ], 10, 1);
    const_str_plain_cbc = UNSTREAM_STRING_ASCII(&constant_bin[ 34030 ], 3, 1);
    const_tuple_str_plain_RTVSIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RTVSIE_tuple, 0, const_str_plain_RTVSIE); Py_INCREF(const_str_plain_RTVSIE);
    const_str_plain_dhm = UNSTREAM_STRING_ASCII(&constant_bin[ 1141185 ], 3, 1);
    const_str_plain_bet = UNSTREAM_STRING_ASCII(&constant_bin[ 90816 ], 3, 1);
    const_str_plain_streamcloud = UNSTREAM_STRING_ASCII(&constant_bin[ 1202904 ], 11, 1);
    const_str_plain_thisoldhouse = UNSTREAM_STRING_ASCII(&constant_bin[ 1202915 ], 12, 1);
    const_str_plain_cmt = UNSTREAM_STRING_ASCII(&constant_bin[ 1050676 ], 3, 1);
    const_tuple_str_plain_JoveIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_JoveIE_tuple, 0, const_str_plain_JoveIE); Py_INCREF(const_str_plain_JoveIE);
    const_str_plain_bravotv = UNSTREAM_STRING_ASCII(&constant_bin[ 974930 ], 7, 1);
    const_tuple_str_plain_VodlockerIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VodlockerIE_tuple, 0, const_str_plain_VodlockerIE); Py_INCREF(const_str_plain_VodlockerIE);
    const_str_plain_ntvru = UNSTREAM_STRING_ASCII(&constant_bin[ 1202927 ], 5, 1);
    const_tuple_970b04f3ba2eadcab4c0f0973ef1b8ef_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_970b04f3ba2eadcab4c0f0973ef1b8ef_tuple, 0, const_str_plain_MTVIE); Py_INCREF(const_str_plain_MTVIE);
    PyTuple_SET_ITEM(const_tuple_970b04f3ba2eadcab4c0f0973ef1b8ef_tuple, 1, const_str_plain_MTVVideoIE); Py_INCREF(const_str_plain_MTVVideoIE);
    PyTuple_SET_ITEM(const_tuple_970b04f3ba2eadcab4c0f0973ef1b8ef_tuple, 2, const_str_plain_MTVServicesEmbeddedIE); Py_INCREF(const_str_plain_MTVServicesEmbeddedIE);
    PyTuple_SET_ITEM(const_tuple_970b04f3ba2eadcab4c0f0973ef1b8ef_tuple, 3, const_str_plain_MTVDEIE); Py_INCREF(const_str_plain_MTVDEIE);
    PyTuple_SET_ITEM(const_tuple_970b04f3ba2eadcab4c0f0973ef1b8ef_tuple, 4, const_str_plain_MTVJapanIE); Py_INCREF(const_str_plain_MTVJapanIE);
    const_str_plain_netzkino = UNSTREAM_STRING_ASCII(&constant_bin[ 1202932 ], 8, 1);
    const_str_plain_ctvnews = UNSTREAM_STRING_ASCII(&constant_bin[ 1122065 ], 7, 1);
    const_tuple_str_plain_VODPlIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VODPlIE_tuple, 0, const_str_plain_VODPlIE); Py_INCREF(const_str_plain_VODPlIE);
    const_tuple_str_plain_SohuIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SohuIE_tuple, 0, const_str_plain_SohuIE); Py_INCREF(const_str_plain_SohuIE);
    const_tuple_str_plain_CrackedIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CrackedIE_tuple, 0, const_str_plain_CrackedIE); Py_INCREF(const_str_plain_CrackedIE);
    const_str_plain_eighttracks = UNSTREAM_STRING_ASCII(&constant_bin[ 1180255 ], 11, 1);
    const_str_plain_toongoggles = UNSTREAM_STRING_ASCII(&constant_bin[ 1202940 ], 11, 1);
    const_tuple_str_plain_ClypIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ClypIE_tuple, 0, const_str_plain_ClypIE); Py_INCREF(const_str_plain_ClypIE);
    const_tuple_str_plain_AfreecaTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AfreecaTVIE_tuple, 0, const_str_plain_AfreecaTVIE); Py_INCREF(const_str_plain_AfreecaTVIE);
    const_tuple_str_plain_GaskrankIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GaskrankIE_tuple, 0, const_str_plain_GaskrankIE); Py_INCREF(const_str_plain_GaskrankIE);
    const_str_plain_godtube = UNSTREAM_STRING_ASCII(&constant_bin[ 1202951 ], 7, 1);
    const_tuple_str_plain_MetacafeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MetacafeIE_tuple, 0, const_str_plain_MetacafeIE); Py_INCREF(const_str_plain_MetacafeIE);
    const_str_plain_thisav = UNSTREAM_STRING_ASCII(&constant_bin[ 1202958 ], 6, 1);
    const_tuple_str_plain_CiscoLiveSessionIE_str_plain_CiscoLiveSearchIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_CiscoLiveSessionIE_str_plain_CiscoLiveSearchIE_tuple, 0, const_str_plain_CiscoLiveSessionIE); Py_INCREF(const_str_plain_CiscoLiveSessionIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_CiscoLiveSessionIE_str_plain_CiscoLiveSearchIE_tuple, 1, const_str_plain_CiscoLiveSearchIE); Py_INCREF(const_str_plain_CiscoLiveSearchIE);
    const_tuple_str_plain_AlphaPornoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AlphaPornoIE_tuple, 0, const_str_plain_AlphaPornoIE); Py_INCREF(const_str_plain_AlphaPornoIE);
    const_tuple_str_plain_MovingImageIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MovingImageIE_tuple, 0, const_str_plain_MovingImageIE); Py_INCREF(const_str_plain_MovingImageIE);
    const_tuple_str_plain_BlinkxIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BlinkxIE_tuple, 0, const_str_plain_BlinkxIE); Py_INCREF(const_str_plain_BlinkxIE);
    const_tuple_str_plain_RBMARadioIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RBMARadioIE_tuple, 0, const_str_plain_RBMARadioIE); Py_INCREF(const_str_plain_RBMARadioIE);
    const_tuple_str_plain_MarkizaIE_str_plain_MarkizaPageIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_MarkizaIE_str_plain_MarkizaPageIE_tuple, 0, const_str_plain_MarkizaIE); Py_INCREF(const_str_plain_MarkizaIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_MarkizaIE_str_plain_MarkizaPageIE_tuple, 1, const_str_plain_MarkizaPageIE); Py_INCREF(const_str_plain_MarkizaPageIE);
    const_tuple_str_plain_ManyVidsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ManyVidsIE_tuple, 0, const_str_plain_ManyVidsIE); Py_INCREF(const_str_plain_ManyVidsIE);
    const_tuple_str_plain_NozIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NozIE_tuple, 0, const_str_plain_NozIE); Py_INCREF(const_str_plain_NozIE);
    const_tuple_str_plain_TheStarIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TheStarIE_tuple, 0, const_str_plain_TheStarIE); Py_INCREF(const_str_plain_TheStarIE);
    const_str_plain_twentythreevideo = UNSTREAM_STRING_ASCII(&constant_bin[ 1202964 ], 16, 1);
    const_str_plain_myspass = UNSTREAM_STRING_ASCII(&constant_bin[ 1202980 ], 7, 1);
    const_tuple_str_plain_WatchIndianPornIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_WatchIndianPornIE_tuple, 0, const_str_plain_WatchIndianPornIE); Py_INCREF(const_str_plain_WatchIndianPornIE);
    const_tuple_str_plain_VeohIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VeohIE_tuple, 0, const_str_plain_VeohIE); Py_INCREF(const_str_plain_VeohIE);
    const_tuple_str_plain_METAIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_METAIE_tuple, 0, const_str_plain_METAIE); Py_INCREF(const_str_plain_METAIE);
    const_tuple_str_plain_AolIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AolIE_tuple, 0, const_str_plain_AolIE); Py_INCREF(const_str_plain_AolIE);
    const_tuple_str_plain_GlideIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GlideIE_tuple, 0, const_str_plain_GlideIE); Py_INCREF(const_str_plain_GlideIE);
    const_str_plain_aparat = UNSTREAM_STRING_ASCII(&constant_bin[ 896606 ], 6, 1);
    const_str_plain_movingimage = UNSTREAM_STRING_ASCII(&constant_bin[ 1202987 ], 11, 1);
    const_tuple_str_plain_NewgroundsIE_str_plain_NewgroundsPlaylistIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_NewgroundsIE_str_plain_NewgroundsPlaylistIE_tuple, 0, const_str_plain_NewgroundsIE); Py_INCREF(const_str_plain_NewgroundsIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_NewgroundsIE_str_plain_NewgroundsPlaylistIE_tuple, 1, const_str_plain_NewgroundsPlaylistIE); Py_INCREF(const_str_plain_NewgroundsPlaylistIE);
    const_tuple_str_plain_LibsynIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LibsynIE_tuple, 0, const_str_plain_LibsynIE); Py_INCREF(const_str_plain_LibsynIE);
    const_tuple_67ce4cf8cba92da85b69ae5c016c53f8_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_67ce4cf8cba92da85b69ae5c016c53f8_tuple, 0, const_str_plain_CuriosityStreamIE); Py_INCREF(const_str_plain_CuriosityStreamIE);
    PyTuple_SET_ITEM(const_tuple_67ce4cf8cba92da85b69ae5c016c53f8_tuple, 1, const_str_plain_CuriosityStreamCollectionIE); Py_INCREF(const_str_plain_CuriosityStreamCollectionIE);
    const_tuple_str_plain_CTVNewsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CTVNewsIE_tuple, 0, const_str_plain_CTVNewsIE); Py_INCREF(const_str_plain_CTVNewsIE);
    const_tuple_str_plain_Puls4IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Puls4IE_tuple, 0, const_str_plain_Puls4IE); Py_INCREF(const_str_plain_Puls4IE);
    const_tuple_str_plain_RUHDIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RUHDIE_tuple, 0, const_str_plain_RUHDIE); Py_INCREF(const_str_plain_RUHDIE);
    const_tuple_str_plain_MyChannelsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MyChannelsIE_tuple, 0, const_str_plain_MyChannelsIE); Py_INCREF(const_str_plain_MyChannelsIE);
    const_str_plain_viidea = UNSTREAM_STRING_ASCII(&constant_bin[ 1202998 ], 6, 1);
    const_tuple_str_plain_IGNIE_str_plain_OneUPIE_str_plain_PCMagIE_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_IGNIE_str_plain_OneUPIE_str_plain_PCMagIE_tuple, 0, const_str_plain_IGNIE); Py_INCREF(const_str_plain_IGNIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_IGNIE_str_plain_OneUPIE_str_plain_PCMagIE_tuple, 1, const_str_plain_OneUPIE); Py_INCREF(const_str_plain_OneUPIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_IGNIE_str_plain_OneUPIE_str_plain_PCMagIE_tuple, 2, const_str_plain_PCMagIE); Py_INCREF(const_str_plain_PCMagIE);
    const_tuple_str_plain_TVN24IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVN24IE_tuple, 0, const_str_plain_TVN24IE); Py_INCREF(const_str_plain_TVN24IE);
    const_str_plain_sixplay = UNSTREAM_STRING_ASCII(&constant_bin[ 1203004 ], 7, 1);
    const_str_plain_roxwel = UNSTREAM_STRING_ASCII(&constant_bin[ 1203011 ], 6, 1);
    const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple = PyTuple_New(10);
    PyTuple_SET_ITEM(const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple, 0, const_str_plain_VimeoIE); Py_INCREF(const_str_plain_VimeoIE);
    PyTuple_SET_ITEM(const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple, 1, const_str_plain_VimeoAlbumIE); Py_INCREF(const_str_plain_VimeoAlbumIE);
    PyTuple_SET_ITEM(const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple, 2, const_str_plain_VimeoChannelIE); Py_INCREF(const_str_plain_VimeoChannelIE);
    PyTuple_SET_ITEM(const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple, 3, const_str_plain_VimeoGroupsIE); Py_INCREF(const_str_plain_VimeoGroupsIE);
    PyTuple_SET_ITEM(const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple, 4, const_str_plain_VimeoLikesIE); Py_INCREF(const_str_plain_VimeoLikesIE);
    PyTuple_SET_ITEM(const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple, 5, const_str_plain_VimeoOndemandIE); Py_INCREF(const_str_plain_VimeoOndemandIE);
    PyTuple_SET_ITEM(const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple, 6, const_str_plain_VimeoReviewIE); Py_INCREF(const_str_plain_VimeoReviewIE);
    PyTuple_SET_ITEM(const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple, 7, const_str_plain_VimeoUserIE); Py_INCREF(const_str_plain_VimeoUserIE);
    PyTuple_SET_ITEM(const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple, 8, const_str_plain_VimeoWatchLaterIE); Py_INCREF(const_str_plain_VimeoWatchLaterIE);
    PyTuple_SET_ITEM(const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple, 9, const_str_plain_VHXEmbedIE); Py_INCREF(const_str_plain_VHXEmbedIE);
    const_tuple_str_plain_ViddlerIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ViddlerIE_tuple, 0, const_str_plain_ViddlerIE); Py_INCREF(const_str_plain_ViddlerIE);
    const_tuple_str_plain_ThisAmericanLifeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ThisAmericanLifeIE_tuple, 0, const_str_plain_ThisAmericanLifeIE); Py_INCREF(const_str_plain_ThisAmericanLifeIE);
    const_str_plain_gaskrank = UNSTREAM_STRING_ASCII(&constant_bin[ 1203017 ], 8, 1);
    const_tuple_str_plain_Porn91IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Porn91IE_tuple, 0, const_str_plain_Porn91IE); Py_INCREF(const_str_plain_Porn91IE);
    const_tuple_str_plain_HungamaIE_str_plain_HungamaSongIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_HungamaIE_str_plain_HungamaSongIE_tuple, 0, const_str_plain_HungamaIE); Py_INCREF(const_str_plain_HungamaIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_HungamaIE_str_plain_HungamaSongIE_tuple, 1, const_str_plain_HungamaSongIE); Py_INCREF(const_str_plain_HungamaSongIE);
    const_tuple_str_plain_KickStarterIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_KickStarterIE_tuple, 0, const_str_plain_KickStarterIE); Py_INCREF(const_str_plain_KickStarterIE);
    const_str_plain_shared = UNSTREAM_STRING_ASCII(&constant_bin[ 975505 ], 6, 1);
    const_str_plain_parliamentliveuk = UNSTREAM_STRING_ASCII(&constant_bin[ 1203025 ], 16, 1);
    const_tuple_str_plain_CtsNewsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CtsNewsIE_tuple, 0, const_str_plain_CtsNewsIE); Py_INCREF(const_str_plain_CtsNewsIE);
    const_tuple_e25b2eeb438de32f8007ad08ab7fc997_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_e25b2eeb438de32f8007ad08ab7fc997_tuple, 0, const_str_plain_LinkedInLearningIE); Py_INCREF(const_str_plain_LinkedInLearningIE);
    PyTuple_SET_ITEM(const_tuple_e25b2eeb438de32f8007ad08ab7fc997_tuple, 1, const_str_plain_LinkedInLearningCourseIE); Py_INCREF(const_str_plain_LinkedInLearningCourseIE);
    const_str_plain_hornbunny = UNSTREAM_STRING_ASCII(&constant_bin[ 1203041 ], 9, 1);
    const_tuple_889e8c67d1452e1e71de7c1727e8ed51_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_889e8c67d1452e1e71de7c1727e8ed51_tuple, 0, const_str_plain_SVTIE); Py_INCREF(const_str_plain_SVTIE);
    PyTuple_SET_ITEM(const_tuple_889e8c67d1452e1e71de7c1727e8ed51_tuple, 1, const_str_plain_SVTPageIE); Py_INCREF(const_str_plain_SVTPageIE);
    PyTuple_SET_ITEM(const_tuple_889e8c67d1452e1e71de7c1727e8ed51_tuple, 2, const_str_plain_SVTPlayIE); Py_INCREF(const_str_plain_SVTPlayIE);
    PyTuple_SET_ITEM(const_tuple_889e8c67d1452e1e71de7c1727e8ed51_tuple, 3, const_str_plain_SVTSeriesIE); Py_INCREF(const_str_plain_SVTSeriesIE);
    const_str_plain_sverigesradio = UNSTREAM_STRING_ASCII(&constant_bin[ 1203050 ], 13, 1);
    const_str_plain_viu = UNSTREAM_STRING_ASCII(&constant_bin[ 1203063 ], 3, 1);
    const_str_plain_vh1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1203066 ], 3, 1);
    const_tuple_7282d20c3aa5368967332b03202bda9d_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_7282d20c3aa5368967332b03202bda9d_tuple, 0, const_str_plain_MailRuIE); Py_INCREF(const_str_plain_MailRuIE);
    PyTuple_SET_ITEM(const_tuple_7282d20c3aa5368967332b03202bda9d_tuple, 1, const_str_plain_MailRuMusicIE); Py_INCREF(const_str_plain_MailRuMusicIE);
    PyTuple_SET_ITEM(const_tuple_7282d20c3aa5368967332b03202bda9d_tuple, 2, const_str_plain_MailRuMusicSearchIE); Py_INCREF(const_str_plain_MailRuMusicSearchIE);
    const_str_plain_turbo = UNSTREAM_STRING_ASCII(&constant_bin[ 1203069 ], 5, 1);
    const_tuple_str_plain_TwentyFourVideoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TwentyFourVideoIE_tuple, 0, const_str_plain_TwentyFourVideoIE); Py_INCREF(const_str_plain_TwentyFourVideoIE);
    const_tuple_str_plain_VierIE_str_plain_VierVideosIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_VierIE_str_plain_VierVideosIE_tuple, 0, const_str_plain_VierIE); Py_INCREF(const_str_plain_VierIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_VierIE_str_plain_VierVideosIE_tuple, 1, const_str_plain_VierVideosIE); Py_INCREF(const_str_plain_VierVideosIE);
    const_str_plain_clippit = UNSTREAM_STRING_ASCII(&constant_bin[ 1044156 ], 7, 1);
    const_str_plain_lovehomeporn = UNSTREAM_STRING_ASCII(&constant_bin[ 1203074 ], 12, 1);
    const_str_plain_beampro = UNSTREAM_STRING_ASCII(&constant_bin[ 945577 ], 7, 1);
    const_tuple_str_plain_WSJIE_str_plain_WSJArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_WSJIE_str_plain_WSJArticleIE_tuple, 0, const_str_plain_WSJIE); Py_INCREF(const_str_plain_WSJIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_WSJIE_str_plain_WSJArticleIE_tuple, 1, const_str_plain_WSJArticleIE); Py_INCREF(const_str_plain_WSJArticleIE);
    const_str_plain_popcorntv = UNSTREAM_STRING_ASCII(&constant_bin[ 1203086 ], 9, 1);
    const_tuple_str_plain_CrackleIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CrackleIE_tuple, 0, const_str_plain_CrackleIE); Py_INCREF(const_str_plain_CrackleIE);
    const_str_plain_restudy = UNSTREAM_STRING_ASCII(&constant_bin[ 1203095 ], 7, 1);
    const_str_plain_azmedien = UNSTREAM_STRING_ASCII(&constant_bin[ 922733 ], 8, 1);
    const_str_plain_neteasemusic = UNSTREAM_STRING_ASCII(&constant_bin[ 1203102 ], 12, 1);
    const_tuple_str_plain_NineNowIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NineNowIE_tuple, 0, const_str_plain_NineNowIE); Py_INCREF(const_str_plain_NineNowIE);
    const_str_plain_xminus = UNSTREAM_STRING_ASCII(&constant_bin[ 768099 ], 6, 1);
    const_str_plain_vidio = UNSTREAM_STRING_ASCII(&constant_bin[ 1203114 ], 5, 1);
    const_tuple_str_plain_FolketingetIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FolketingetIE_tuple, 0, const_str_plain_FolketingetIE); Py_INCREF(const_str_plain_FolketingetIE);
    const_tuple_str_plain_IPrimaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_IPrimaIE_tuple, 0, const_str_plain_IPrimaIE); Py_INCREF(const_str_plain_IPrimaIE);
    const_str_plain_bloomberg = UNSTREAM_STRING_ASCII(&constant_bin[ 949053 ], 9, 1);
    const_tuple_str_plain_SpankBangIE_str_plain_SpankBangPlaylistIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_SpankBangIE_str_plain_SpankBangPlaylistIE_tuple, 0, const_str_plain_SpankBangIE); Py_INCREF(const_str_plain_SpankBangIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_SpankBangIE_str_plain_SpankBangPlaylistIE_tuple, 1, const_str_plain_SpankBangPlaylistIE); Py_INCREF(const_str_plain_SpankBangPlaylistIE);
    const_str_plain_theweatherchannel = UNSTREAM_STRING_ASCII(&constant_bin[ 1203119 ], 17, 1);
    const_tuple_str_plain_FilmOnIE_str_plain_FilmOnChannelIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_FilmOnIE_str_plain_FilmOnChannelIE_tuple, 0, const_str_plain_FilmOnIE); Py_INCREF(const_str_plain_FilmOnIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_FilmOnIE_str_plain_FilmOnChannelIE_tuple, 1, const_str_plain_FilmOnChannelIE); Py_INCREF(const_str_plain_FilmOnChannelIE);
    const_str_plain_newstube = UNSTREAM_STRING_ASCII(&constant_bin[ 1203136 ], 8, 1);
    const_str_plain_cnbc = UNSTREAM_STRING_ASCII(&constant_bin[ 888226 ], 4, 1);
    const_str_plain_thescene = UNSTREAM_STRING_ASCII(&constant_bin[ 1203144 ], 8, 1);
    const_tuple_str_plain_BaiduVideoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BaiduVideoIE_tuple, 0, const_str_plain_BaiduVideoIE); Py_INCREF(const_str_plain_BaiduVideoIE);
    const_tuple_str_plain_BokeCCIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BokeCCIE_tuple, 0, const_str_plain_BokeCCIE); Py_INCREF(const_str_plain_BokeCCIE);
    const_str_plain_ctsnews = UNSTREAM_STRING_ASCII(&constant_bin[ 1120310 ], 7, 1);
    const_str_plain_hearthisat = UNSTREAM_STRING_ASCII(&constant_bin[ 1203152 ], 10, 1);
    const_str_plain_fivetv = UNSTREAM_STRING_ASCII(&constant_bin[ 1203162 ], 6, 1);
    const_tuple_str_plain_SapoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SapoIE_tuple, 0, const_str_plain_SapoIE); Py_INCREF(const_str_plain_SapoIE);
    const_str_plain_tv2hu = UNSTREAM_STRING_ASCII(&constant_bin[ 1203168 ], 5, 1);
    const_str_plain_mychannels = UNSTREAM_STRING_ASCII(&constant_bin[ 1203173 ], 10, 1);
    const_tuple_str_plain_VikiIE_str_plain_VikiChannelIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_VikiIE_str_plain_VikiChannelIE_tuple, 0, const_str_plain_VikiIE); Py_INCREF(const_str_plain_VikiIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_VikiIE_str_plain_VikiChannelIE_tuple, 1, const_str_plain_VikiChannelIE); Py_INCREF(const_str_plain_VikiChannelIE);
    const_tuple_str_plain_ChaturbateIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ChaturbateIE_tuple, 0, const_str_plain_ChaturbateIE); Py_INCREF(const_str_plain_ChaturbateIE);
    const_str_plain_contv = UNSTREAM_STRING_ASCII(&constant_bin[ 1102236 ], 5, 1);
    const_str_plain_canalc2 = UNSTREAM_STRING_ASCII(&constant_bin[ 995710 ], 7, 1);
    const_str_plain_cultureunplugged = UNSTREAM_STRING_ASCII(&constant_bin[ 1123238 ], 16, 1);
    const_tuple_str_plain_Tele5IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Tele5IE_tuple, 0, const_str_plain_Tele5IE); Py_INCREF(const_str_plain_Tele5IE);
    const_str_plain_everyonesmixtape = UNSTREAM_STRING_ASCII(&constant_bin[ 1198231 ], 16, 1);
    const_tuple_9c9ca18509f4854e444165cc528c720f_tuple = PyTuple_New(6);
    PyTuple_SET_ITEM(const_tuple_9c9ca18509f4854e444165cc528c720f_tuple, 0, const_str_plain_RutubeIE); Py_INCREF(const_str_plain_RutubeIE);
    PyTuple_SET_ITEM(const_tuple_9c9ca18509f4854e444165cc528c720f_tuple, 1, const_str_plain_RutubeChannelIE); Py_INCREF(const_str_plain_RutubeChannelIE);
    PyTuple_SET_ITEM(const_tuple_9c9ca18509f4854e444165cc528c720f_tuple, 2, const_str_plain_RutubeEmbedIE); Py_INCREF(const_str_plain_RutubeEmbedIE);
    PyTuple_SET_ITEM(const_tuple_9c9ca18509f4854e444165cc528c720f_tuple, 3, const_str_plain_RutubeMovieIE); Py_INCREF(const_str_plain_RutubeMovieIE);
    PyTuple_SET_ITEM(const_tuple_9c9ca18509f4854e444165cc528c720f_tuple, 4, const_str_plain_RutubePersonIE); Py_INCREF(const_str_plain_RutubePersonIE);
    PyTuple_SET_ITEM(const_tuple_9c9ca18509f4854e444165cc528c720f_tuple, 5, const_str_plain_RutubePlaylistIE); Py_INCREF(const_str_plain_RutubePlaylistIE);
    const_tuple_str_plain_EbaumsWorldIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EbaumsWorldIE_tuple, 0, const_str_plain_EbaumsWorldIE); Py_INCREF(const_str_plain_EbaumsWorldIE);
    const_str_plain_performgroup = UNSTREAM_STRING_ASCII(&constant_bin[ 1203183 ], 12, 1);
    const_tuple_str_plain_ShowRoomLiveIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ShowRoomLiveIE_tuple, 0, const_str_plain_ShowRoomLiveIE); Py_INCREF(const_str_plain_ShowRoomLiveIE);
    const_str_plain_kakao = UNSTREAM_STRING_ASCII(&constant_bin[ 1134162 ], 5, 1);
    const_str_plain_bilibili = UNSTREAM_STRING_ASCII(&constant_bin[ 954280 ], 8, 1);
    const_tuple_str_plain_R7IE_str_plain_R7ArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_R7IE_str_plain_R7ArticleIE_tuple, 0, const_str_plain_R7IE); Py_INCREF(const_str_plain_R7IE);
    PyTuple_SET_ITEM(const_tuple_str_plain_R7IE_str_plain_R7ArticleIE_tuple, 1, const_str_plain_R7ArticleIE); Py_INCREF(const_str_plain_R7ArticleIE);
    const_str_plain_aljazeera = UNSTREAM_STRING_ASCII(&constant_bin[ 872378 ], 9, 1);
    const_str_plain_ora = UNSTREAM_STRING_ASCII(&constant_bin[ 585101 ], 3, 1);
    const_tuple_str_plain_TubiTvIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TubiTvIE_tuple, 0, const_str_plain_TubiTvIE); Py_INCREF(const_str_plain_TubiTvIE);
    const_str_plain_cnn = UNSTREAM_STRING_ASCII(&constant_bin[ 1053113 ], 3, 1);
    const_str_plain_discoverynetworks = UNSTREAM_STRING_ASCII(&constant_bin[ 1147820 ], 17, 1);
    const_tuple_str_plain_FOX9IE_str_plain_FOX9NewsIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_FOX9IE_str_plain_FOX9NewsIE_tuple, 0, const_str_plain_FOX9IE); Py_INCREF(const_str_plain_FOX9IE);
    PyTuple_SET_ITEM(const_tuple_str_plain_FOX9IE_str_plain_FOX9NewsIE_tuple, 1, const_str_plain_FOX9NewsIE); Py_INCREF(const_str_plain_FOX9NewsIE);
    const_str_plain_francetv = UNSTREAM_STRING_ASCII(&constant_bin[ 1203195 ], 8, 1);
    const_str_plain_bitchute = UNSTREAM_STRING_ASCII(&constant_bin[ 962638 ], 8, 1);
    const_str_plain_biqle = UNSTREAM_STRING_ASCII(&constant_bin[ 961594 ], 5, 1);
    const_str_plain_snotr = UNSTREAM_STRING_ASCII(&constant_bin[ 1203203 ], 5, 1);
    const_str_plain_hellporno = UNSTREAM_STRING_ASCII(&constant_bin[ 1203208 ], 9, 1);
    const_tuple_str_plain_PopcorntimesIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PopcorntimesIE_tuple, 0, const_str_plain_PopcorntimesIE); Py_INCREF(const_str_plain_PopcorntimesIE);
    const_str_plain_digg = UNSTREAM_STRING_ASCII(&constant_bin[ 1142052 ], 4, 1);
    const_str_plain_lcp = UNSTREAM_STRING_ASCII(&constant_bin[ 784067 ], 3, 1);
    const_str_plain_bild = UNSTREAM_STRING_ASCII(&constant_bin[ 953488 ], 4, 1);
    const_tuple_str_plain_TVNoeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVNoeIE_tuple, 0, const_str_plain_TVNoeIE); Py_INCREF(const_str_plain_TVNoeIE);
    const_tuple_str_plain_RedditIE_str_plain_RedditRIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_RedditIE_str_plain_RedditRIE_tuple, 0, const_str_plain_RedditIE); Py_INCREF(const_str_plain_RedditIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_RedditIE_str_plain_RedditRIE_tuple, 1, const_str_plain_RedditRIE); Py_INCREF(const_str_plain_RedditRIE);
    const_str_plain_nationalgeographic = UNSTREAM_STRING_ASCII(&constant_bin[ 1203217 ], 18, 1);
    const_str_plain_tele13 = UNSTREAM_STRING_ASCII(&constant_bin[ 1203235 ], 6, 1);
    const_str_plain_vyborymos = UNSTREAM_STRING_ASCII(&constant_bin[ 1203241 ], 9, 1);
    const_tuple_str_plain_TVPlayerIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVPlayerIE_tuple, 0, const_str_plain_TVPlayerIE); Py_INCREF(const_str_plain_TVPlayerIE);
    const_tuple_8d61ccd01ac70c4ab30026ba7a5bc7a2_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_8d61ccd01ac70c4ab30026ba7a5bc7a2_tuple, 0, const_str_plain_MixcloudIE); Py_INCREF(const_str_plain_MixcloudIE);
    PyTuple_SET_ITEM(const_tuple_8d61ccd01ac70c4ab30026ba7a5bc7a2_tuple, 1, const_str_plain_MixcloudUserIE); Py_INCREF(const_str_plain_MixcloudUserIE);
    PyTuple_SET_ITEM(const_tuple_8d61ccd01ac70c4ab30026ba7a5bc7a2_tuple, 2, const_str_plain_MixcloudPlaylistIE); Py_INCREF(const_str_plain_MixcloudPlaylistIE);
    const_tuple_str_plain_ScrippsNetworksWatchIE_str_plain_ScrippsNetworksIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_ScrippsNetworksWatchIE_str_plain_ScrippsNetworksIE_tuple, 0, const_str_plain_ScrippsNetworksWatchIE); Py_INCREF(const_str_plain_ScrippsNetworksWatchIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ScrippsNetworksWatchIE_str_plain_ScrippsNetworksIE_tuple, 1, const_str_plain_ScrippsNetworksIE); Py_INCREF(const_str_plain_ScrippsNetworksIE);
    const_tuple_str_plain_TeamTreeHouseIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TeamTreeHouseIE_tuple, 0, const_str_plain_TeamTreeHouseIE); Py_INCREF(const_str_plain_TeamTreeHouseIE);
    const_tuple_str_plain_CorusIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CorusIE_tuple, 0, const_str_plain_CorusIE); Py_INCREF(const_str_plain_CorusIE);
    const_tuple_str_plain_SexuIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SexuIE_tuple, 0, const_str_plain_SexuIE); Py_INCREF(const_str_plain_SexuIE);
    const_str_plain_nerdcubed = UNSTREAM_STRING_ASCII(&constant_bin[ 1203250 ], 9, 1);
    const_str_plain_mangomolo = UNSTREAM_STRING_ASCII(&constant_bin[ 919771 ], 9, 1);
    const_str_plain_veehd = UNSTREAM_STRING_ASCII(&constant_bin[ 1203259 ], 5, 1);
    const_str_plain_beatport = UNSTREAM_STRING_ASCII(&constant_bin[ 946648 ], 8, 1);
    const_tuple_str_plain_TV2HuIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TV2HuIE_tuple, 0, const_str_plain_TV2HuIE); Py_INCREF(const_str_plain_TV2HuIE);
    const_str_plain_charlierose = UNSTREAM_STRING_ASCII(&constant_bin[ 1034726 ], 11, 1);
    const_str_plain_localnews8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1203264 ], 10, 1);
    const_tuple_str_plain_StreamCZIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_StreamCZIE_tuple, 0, const_str_plain_StreamCZIE); Py_INCREF(const_str_plain_StreamCZIE);
    const_str_plain_thestar = UNSTREAM_STRING_ASCII(&constant_bin[ 1203274 ], 7, 1);
    const_tuple_str_plain_HotStarIE_str_plain_HotStarPlaylistIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_HotStarIE_str_plain_HotStarPlaylistIE_tuple, 0, const_str_plain_HotStarIE); Py_INCREF(const_str_plain_HotStarIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_HotStarIE_str_plain_HotStarPlaylistIE_tuple, 1, const_str_plain_HotStarPlaylistIE); Py_INCREF(const_str_plain_HotStarPlaylistIE);
    const_tuple_str_plain_TunePkIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TunePkIE_tuple, 0, const_str_plain_TunePkIE); Py_INCREF(const_str_plain_TunePkIE);
    const_tuple_str_plain_TeleTaskIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TeleTaskIE_tuple, 0, const_str_plain_TeleTaskIE); Py_INCREF(const_str_plain_TeleTaskIE);
    const_tuple_str_plain_MeipaiIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MeipaiIE_tuple, 0, const_str_plain_MeipaiIE); Py_INCREF(const_str_plain_MeipaiIE);
    const_str_plain_crackle = UNSTREAM_STRING_ASCII(&constant_bin[ 1108774 ], 7, 1);
    const_tuple_str_plain_HotNewHipHopIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HotNewHipHopIE_tuple, 0, const_str_plain_HotNewHipHopIE); Py_INCREF(const_str_plain_HotNewHipHopIE);
    const_str_plain_buzzfeed = UNSTREAM_STRING_ASCII(&constant_bin[ 987274 ], 8, 1);
    const_tuple_str_plain_NoovoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NoovoIE_tuple, 0, const_str_plain_NoovoIE); Py_INCREF(const_str_plain_NoovoIE);
    const_tuple_str_plain_Formula1IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Formula1IE_tuple, 0, const_str_plain_Formula1IE); Py_INCREF(const_str_plain_Formula1IE);
    const_tuple_str_plain_FoxNewsIE_str_plain_FoxNewsArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_FoxNewsIE_str_plain_FoxNewsArticleIE_tuple, 0, const_str_plain_FoxNewsIE); Py_INCREF(const_str_plain_FoxNewsIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_FoxNewsIE_str_plain_FoxNewsArticleIE_tuple, 1, const_str_plain_FoxNewsArticleIE); Py_INCREF(const_str_plain_FoxNewsArticleIE);
    const_str_plain_playvid = UNSTREAM_STRING_ASCII(&constant_bin[ 968653 ], 7, 1);
    const_tuple_363b9edf103ddd05ee232683aa4cd757_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_363b9edf103ddd05ee232683aa4cd757_tuple, 0, const_str_plain_TuneInClipIE); Py_INCREF(const_str_plain_TuneInClipIE);
    PyTuple_SET_ITEM(const_tuple_363b9edf103ddd05ee232683aa4cd757_tuple, 1, const_str_plain_TuneInStationIE); Py_INCREF(const_str_plain_TuneInStationIE);
    PyTuple_SET_ITEM(const_tuple_363b9edf103ddd05ee232683aa4cd757_tuple, 2, const_str_plain_TuneInProgramIE); Py_INCREF(const_str_plain_TuneInProgramIE);
    PyTuple_SET_ITEM(const_tuple_363b9edf103ddd05ee232683aa4cd757_tuple, 3, const_str_plain_TuneInTopicIE); Py_INCREF(const_str_plain_TuneInTopicIE);
    PyTuple_SET_ITEM(const_tuple_363b9edf103ddd05ee232683aa4cd757_tuple, 4, const_str_plain_TuneInShortenerIE); Py_INCREF(const_str_plain_TuneInShortenerIE);
    const_tuple_str_plain_ITVIE_str_plain_ITVBTCCIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_ITVIE_str_plain_ITVBTCCIE_tuple, 0, const_str_plain_ITVIE); Py_INCREF(const_str_plain_ITVIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ITVIE_str_plain_ITVBTCCIE_tuple, 1, const_str_plain_ITVBTCCIE); Py_INCREF(const_str_plain_ITVBTCCIE);
    const_str_plain_ynet = UNSTREAM_STRING_ASCII(&constant_bin[ 948944 ], 4, 1);
    const_tuple_str_plain_SRMediathekIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SRMediathekIE_tuple, 0, const_str_plain_SRMediathekIE); Py_INCREF(const_str_plain_SRMediathekIE);
    const_str_plain_ministrygrid = UNSTREAM_STRING_ASCII(&constant_bin[ 1203281 ], 12, 1);
    const_tuple_str_plain_FranceCultureIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FranceCultureIE_tuple, 0, const_str_plain_FranceCultureIE); Py_INCREF(const_str_plain_FranceCultureIE);
    const_tuple_str_plain_AmericasTestKitchenIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AmericasTestKitchenIE_tuple, 0, const_str_plain_AmericasTestKitchenIE); Py_INCREF(const_str_plain_AmericasTestKitchenIE);
    const_tuple_str_plain_UstudioIE_str_plain_UstudioEmbedIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_UstudioIE_str_plain_UstudioEmbedIE_tuple, 0, const_str_plain_UstudioIE); Py_INCREF(const_str_plain_UstudioIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_UstudioIE_str_plain_UstudioEmbedIE_tuple, 1, const_str_plain_UstudioEmbedIE); Py_INCREF(const_str_plain_UstudioEmbedIE);
    const_tuple_str_plain_HearThisAtIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HearThisAtIE_tuple, 0, const_str_plain_HearThisAtIE); Py_INCREF(const_str_plain_HearThisAtIE);
    const_str_plain_funk = UNSTREAM_STRING_ASCII(&constant_bin[ 973828 ], 4, 1);
    const_str_plain_rockstargames = UNSTREAM_STRING_ASCII(&constant_bin[ 1203293 ], 13, 1);
    const_tuple_str_plain_PlaytvakIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PlaytvakIE_tuple, 0, const_str_plain_PlaytvakIE); Py_INCREF(const_str_plain_PlaytvakIE);
    const_tuple_str_plain_SlideshareIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SlideshareIE_tuple, 0, const_str_plain_SlideshareIE); Py_INCREF(const_str_plain_SlideshareIE);
    const_str_plain_polskieradio = UNSTREAM_STRING_ASCII(&constant_bin[ 1203306 ], 12, 1);
    const_tuple_71c9c30cc8ebd744889f26c615b0618c_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_71c9c30cc8ebd744889f26c615b0618c_tuple, 0, const_str_plain_TwitterCardIE); Py_INCREF(const_str_plain_TwitterCardIE);
    PyTuple_SET_ITEM(const_tuple_71c9c30cc8ebd744889f26c615b0618c_tuple, 1, const_str_plain_TwitterIE); Py_INCREF(const_str_plain_TwitterIE);
    PyTuple_SET_ITEM(const_tuple_71c9c30cc8ebd744889f26c615b0618c_tuple, 2, const_str_plain_TwitterAmplifyIE); Py_INCREF(const_str_plain_TwitterAmplifyIE);
    PyTuple_SET_ITEM(const_tuple_71c9c30cc8ebd744889f26c615b0618c_tuple, 3, const_str_plain_TwitterBroadcastIE); Py_INCREF(const_str_plain_TwitterBroadcastIE);
    const_tuple_str_plain_CrunchyrollIE_str_plain_CrunchyrollShowPlaylistIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_CrunchyrollIE_str_plain_CrunchyrollShowPlaylistIE_tuple, 0, const_str_plain_CrunchyrollIE); Py_INCREF(const_str_plain_CrunchyrollIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_CrunchyrollIE_str_plain_CrunchyrollShowPlaylistIE_tuple, 1, const_str_plain_CrunchyrollShowPlaylistIE); Py_INCREF(const_str_plain_CrunchyrollShowPlaylistIE);
    const_str_plain_ign = UNSTREAM_STRING_ASCII(&constant_bin[ 31850 ], 3, 1);
    const_tuple_str_plain_OoyalaIE_str_plain_OoyalaExternalIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_OoyalaIE_str_plain_OoyalaExternalIE_tuple, 0, const_str_plain_OoyalaIE); Py_INCREF(const_str_plain_OoyalaIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_OoyalaIE_str_plain_OoyalaExternalIE_tuple, 1, const_str_plain_OoyalaExternalIE); Py_INCREF(const_str_plain_OoyalaExternalIE);
    const_tuple_str_plain_ShahidIE_str_plain_ShahidShowIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_ShahidIE_str_plain_ShahidShowIE_tuple, 0, const_str_plain_ShahidIE); Py_INCREF(const_str_plain_ShahidIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ShahidIE_str_plain_ShahidShowIE_tuple, 1, const_str_plain_ShahidShowIE); Py_INCREF(const_str_plain_ShahidShowIE);
    const_str_plain_tvn24 = UNSTREAM_STRING_ASCII(&constant_bin[ 1203318 ], 5, 1);
    const_str_plain_jeuxvideo = UNSTREAM_STRING_ASCII(&constant_bin[ 1203323 ], 9, 1);
    const_str_plain_xnxx = UNSTREAM_STRING_ASCII(&constant_bin[ 1203332 ], 4, 1);
    const_str_plain_tass = UNSTREAM_STRING_ASCII(&constant_bin[ 1110992 ], 4, 1);
    const_tuple_str_plain_UnityIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_UnityIE_tuple, 0, const_str_plain_UnityIE); Py_INCREF(const_str_plain_UnityIE);
    const_str_plain_ntvde = UNSTREAM_STRING_ASCII(&constant_bin[ 1203336 ], 5, 1);
    const_str_plain_slideshare = UNSTREAM_STRING_ASCII(&constant_bin[ 1203341 ], 10, 1);
    const_tuple_str_plain_CBSSportsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CBSSportsIE_tuple, 0, const_str_plain_CBSSportsIE); Py_INCREF(const_str_plain_CBSSportsIE);
    const_tuple_str_plain_VootIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VootIE_tuple, 0, const_str_plain_VootIE); Py_INCREF(const_str_plain_VootIE);
    const_str_plain_mdr = UNSTREAM_STRING_ASCII(&constant_bin[ 1203351 ], 3, 1);
    const_tuple_str_plain_ExpoTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ExpoTVIE_tuple, 0, const_str_plain_ExpoTVIE); Py_INCREF(const_str_plain_ExpoTVIE);
    const_str_plain_xbef = UNSTREAM_STRING_ASCII(&constant_bin[ 1203354 ], 4, 1);
    const_tuple_str_plain_IqiyiIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_IqiyiIE_tuple, 0, const_str_plain_IqiyiIE); Py_INCREF(const_str_plain_IqiyiIE);
    const_tuple_str_plain_SonyLIVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SonyLIVIE_tuple, 0, const_str_plain_SonyLIVIE); Py_INCREF(const_str_plain_SonyLIVIE);
    const_str_plain_steam = UNSTREAM_STRING_ASCII(&constant_bin[ 1130782 ], 5, 1);
    const_tuple_str_plain_VrakIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VrakIE_tuple, 0, const_str_plain_VrakIE); Py_INCREF(const_str_plain_VrakIE);
    const_str_plain_formula1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1203358 ], 8, 1);
    const_tuple_str_plain_NYTimesIE_str_plain_NYTimesArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_NYTimesIE_str_plain_NYTimesArticleIE_tuple, 0, const_str_plain_NYTimesIE); Py_INCREF(const_str_plain_NYTimesIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_NYTimesIE_str_plain_NYTimesArticleIE_tuple, 1, const_str_plain_NYTimesArticleIE); Py_INCREF(const_str_plain_NYTimesArticleIE);
    const_str_plain_wat = UNSTREAM_STRING_ASCII(&constant_bin[ 719638 ], 3, 1);
    const_tuple_6457496b50b4906b3896cf75be2cfdb3_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_6457496b50b4906b3896cf75be2cfdb3_tuple, 0, const_str_plain_VKIE); Py_INCREF(const_str_plain_VKIE);
    PyTuple_SET_ITEM(const_tuple_6457496b50b4906b3896cf75be2cfdb3_tuple, 1, const_str_plain_VKUserVideosIE); Py_INCREF(const_str_plain_VKUserVideosIE);
    PyTuple_SET_ITEM(const_tuple_6457496b50b4906b3896cf75be2cfdb3_tuple, 2, const_str_plain_VKWallPostIE); Py_INCREF(const_str_plain_VKWallPostIE);
    const_str_plain_gfycat = UNSTREAM_STRING_ASCII(&constant_bin[ 1203366 ], 6, 1);
    const_str_plain_hitrecord = UNSTREAM_STRING_ASCII(&constant_bin[ 1203372 ], 9, 1);
    const_tuple_str_plain_PlayvidIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PlayvidIE_tuple, 0, const_str_plain_PlayvidIE); Py_INCREF(const_str_plain_PlayvidIE);
    const_str_plain_lifenews = UNSTREAM_STRING_ASCII(&constant_bin[ 1203381 ], 8, 1);
    const_tuple_str_plain_StreetVoiceIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_StreetVoiceIE_tuple, 0, const_str_plain_StreetVoiceIE); Py_INCREF(const_str_plain_StreetVoiceIE);
    const_tuple_str_plain_TechTVMITIE_str_plain_OCWMITIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_TechTVMITIE_str_plain_OCWMITIE_tuple, 0, const_str_plain_TechTVMITIE); Py_INCREF(const_str_plain_TechTVMITIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TechTVMITIE_str_plain_OCWMITIE_tuple, 1, const_str_plain_OCWMITIE); Py_INCREF(const_str_plain_OCWMITIE);
    const_tuple_str_plain_InaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_InaIE_tuple, 0, const_str_plain_InaIE); Py_INCREF(const_str_plain_InaIE);
    const_str_plain_leeco = UNSTREAM_STRING_ASCII(&constant_bin[ 1203389 ], 5, 1);
    const_str_plain_toypics = UNSTREAM_STRING_ASCII(&constant_bin[ 1203394 ], 7, 1);
    const_str_plain_mwave = UNSTREAM_STRING_ASCII(&constant_bin[ 1203401 ], 5, 1);
    const_str_plain_tf1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1203406 ], 3, 1);
    const_tuple_str_plain_YandexVideoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_YandexVideoIE_tuple, 0, const_str_plain_YandexVideoIE); Py_INCREF(const_str_plain_YandexVideoIE);
    const_tuple_str_plain_AENetworksIE_str_plain_HistoryTopicIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_AENetworksIE_str_plain_HistoryTopicIE_tuple, 0, const_str_plain_AENetworksIE); Py_INCREF(const_str_plain_AENetworksIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_AENetworksIE_str_plain_HistoryTopicIE_tuple, 1, const_str_plain_HistoryTopicIE); Py_INCREF(const_str_plain_HistoryTopicIE);
    const_str_plain_flickr = UNSTREAM_STRING_ASCII(&constant_bin[ 1203409 ], 6, 1);
    const_tuple_7c62a71a8376c40e16cc33d47a8df7ad_tuple = PyTuple_New(6);
    PyTuple_SET_ITEM(const_tuple_7c62a71a8376c40e16cc33d47a8df7ad_tuple, 0, const_str_plain_KuwoIE); Py_INCREF(const_str_plain_KuwoIE);
    PyTuple_SET_ITEM(const_tuple_7c62a71a8376c40e16cc33d47a8df7ad_tuple, 1, const_str_plain_KuwoAlbumIE); Py_INCREF(const_str_plain_KuwoAlbumIE);
    PyTuple_SET_ITEM(const_tuple_7c62a71a8376c40e16cc33d47a8df7ad_tuple, 2, const_str_plain_KuwoChartIE); Py_INCREF(const_str_plain_KuwoChartIE);
    PyTuple_SET_ITEM(const_tuple_7c62a71a8376c40e16cc33d47a8df7ad_tuple, 3, const_str_plain_KuwoSingerIE); Py_INCREF(const_str_plain_KuwoSingerIE);
    PyTuple_SET_ITEM(const_tuple_7c62a71a8376c40e16cc33d47a8df7ad_tuple, 4, const_str_plain_KuwoCategoryIE); Py_INCREF(const_str_plain_KuwoCategoryIE);
    PyTuple_SET_ITEM(const_tuple_7c62a71a8376c40e16cc33d47a8df7ad_tuple, 5, const_str_plain_KuwoMvIE); Py_INCREF(const_str_plain_KuwoMvIE);
    const_tuple_str_plain_DiscoveryIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DiscoveryIE_tuple, 0, const_str_plain_DiscoveryIE); Py_INCREF(const_str_plain_DiscoveryIE);
    const_tuple_str_plain_TVCIE_str_plain_TVCArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVCIE_str_plain_TVCArticleIE_tuple, 0, const_str_plain_TVCIE); Py_INCREF(const_str_plain_TVCIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVCIE_str_plain_TVCArticleIE_tuple, 1, const_str_plain_TVCArticleIE); Py_INCREF(const_str_plain_TVCArticleIE);
    const_tuple_14014ae1493ed31d2938fcbe1505aee6_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_14014ae1493ed31d2938fcbe1505aee6_tuple, 0, const_str_plain_NownessIE); Py_INCREF(const_str_plain_NownessIE);
    PyTuple_SET_ITEM(const_tuple_14014ae1493ed31d2938fcbe1505aee6_tuple, 1, const_str_plain_NownessPlaylistIE); Py_INCREF(const_str_plain_NownessPlaylistIE);
    PyTuple_SET_ITEM(const_tuple_14014ae1493ed31d2938fcbe1505aee6_tuple, 2, const_str_plain_NownessSeriesIE); Py_INCREF(const_str_plain_NownessSeriesIE);
    const_tuple_str_plain_PressTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PressTVIE_tuple, 0, const_str_plain_PressTVIE); Py_INCREF(const_str_plain_PressTVIE);
    const_tuple_str_plain_HGTVComShowIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HGTVComShowIE_tuple, 0, const_str_plain_HGTVComShowIE); Py_INCREF(const_str_plain_HGTVComShowIE);
    const_tuple_str_plain_DWIE_str_plain_DWArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_DWIE_str_plain_DWArticleIE_tuple, 0, const_str_plain_DWIE); Py_INCREF(const_str_plain_DWIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_DWIE_str_plain_DWArticleIE_tuple, 1, const_str_plain_DWArticleIE); Py_INCREF(const_str_plain_DWArticleIE);
    const_tuple_92f0885fc87047f30ecf07e5840fbf73_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_92f0885fc87047f30ecf07e5840fbf73_tuple, 0, const_str_plain_Laola1TvEmbedIE); Py_INCREF(const_str_plain_Laola1TvEmbedIE);
    PyTuple_SET_ITEM(const_tuple_92f0885fc87047f30ecf07e5840fbf73_tuple, 1, const_str_plain_Laola1TvIE); Py_INCREF(const_str_plain_Laola1TvIE);
    PyTuple_SET_ITEM(const_tuple_92f0885fc87047f30ecf07e5840fbf73_tuple, 2, const_str_plain_EHFTVIE); Py_INCREF(const_str_plain_EHFTVIE);
    PyTuple_SET_ITEM(const_tuple_92f0885fc87047f30ecf07e5840fbf73_tuple, 3, const_str_plain_ITTFIE); Py_INCREF(const_str_plain_ITTFIE);
    const_tuple_str_plain_XimalayaIE_str_plain_XimalayaAlbumIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_XimalayaIE_str_plain_XimalayaAlbumIE_tuple, 0, const_str_plain_XimalayaIE); Py_INCREF(const_str_plain_XimalayaIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_XimalayaIE_str_plain_XimalayaAlbumIE_tuple, 1, const_str_plain_XimalayaAlbumIE); Py_INCREF(const_str_plain_XimalayaAlbumIE);
    const_tuple_str_plain_MiaoPaiIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MiaoPaiIE_tuple, 0, const_str_plain_MiaoPaiIE); Py_INCREF(const_str_plain_MiaoPaiIE);
    const_str_plain_spankbang = UNSTREAM_STRING_ASCII(&constant_bin[ 1203415 ], 9, 1);
    const_tuple_str_plain_CloserToTruthIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CloserToTruthIE_tuple, 0, const_str_plain_CloserToTruthIE); Py_INCREF(const_str_plain_CloserToTruthIE);
    const_str_plain_gamestar = UNSTREAM_STRING_ASCII(&constant_bin[ 1203424 ], 8, 1);
    const_tuple_str_plain_VoiceRepublicIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VoiceRepublicIE_tuple, 0, const_str_plain_VoiceRepublicIE); Py_INCREF(const_str_plain_VoiceRepublicIE);
    const_tuple_str_plain_RTSIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RTSIE_tuple, 0, const_str_plain_RTSIE); Py_INCREF(const_str_plain_RTSIE);
    const_tuple_str_plain_HornBunnyIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HornBunnyIE_tuple, 0, const_str_plain_HornBunnyIE); Py_INCREF(const_str_plain_HornBunnyIE);
    const_str_plain_seznamzpravy = UNSTREAM_STRING_ASCII(&constant_bin[ 1203432 ], 12, 1);
    const_str_plain_pornovoisines = UNSTREAM_STRING_ASCII(&constant_bin[ 1203444 ], 13, 1);
    const_tuple_str_plain_HKETVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HKETVIE_tuple, 0, const_str_plain_HKETVIE); Py_INCREF(const_str_plain_HKETVIE);
    const_str_plain_regiotv = UNSTREAM_STRING_ASCII(&constant_bin[ 1203457 ], 7, 1);
    const_tuple_str_plain_AdultSwimIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AdultSwimIE_tuple, 0, const_str_plain_AdultSwimIE); Py_INCREF(const_str_plain_AdultSwimIE);
    const_tuple_str_plain_LentaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LentaIE_tuple, 0, const_str_plain_LentaIE); Py_INCREF(const_str_plain_LentaIE);
    const_tuple_str_plain_MassengeschmackTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MassengeschmackTVIE_tuple, 0, const_str_plain_MassengeschmackTVIE); Py_INCREF(const_str_plain_MassengeschmackTVIE);
    const_tuple_str_plain_TennisTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TennisTVIE_tuple, 0, const_str_plain_TennisTVIE); Py_INCREF(const_str_plain_TennisTVIE);
    const_str_plain_younow = UNSTREAM_STRING_ASCII(&constant_bin[ 1203464 ], 6, 1);
    const_tuple_str_plain_IncIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_IncIE_tuple, 0, const_str_plain_IncIE); Py_INCREF(const_str_plain_IncIE);
    const_tuple_str_plain_RTPIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RTPIE_tuple, 0, const_str_plain_RTPIE); Py_INCREF(const_str_plain_RTPIE);
    const_str_plain_daum = UNSTREAM_STRING_ASCII(&constant_bin[ 1132377 ], 4, 1);
    const_str_plain_tastytrade = UNSTREAM_STRING_ASCII(&constant_bin[ 1203470 ], 10, 1);
    const_str_plain_rmcdecouverte = UNSTREAM_STRING_ASCII(&constant_bin[ 1203480 ], 13, 1);
    const_tuple_str_plain_BellMediaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BellMediaIE_tuple, 0, const_str_plain_BellMediaIE); Py_INCREF(const_str_plain_BellMediaIE);
    const_tuple_str_plain_RuutuIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RuutuIE_tuple, 0, const_str_plain_RuutuIE); Py_INCREF(const_str_plain_RuutuIE);
    const_tuple_2e3741b1e123c8f08abadbbcf9e24e8b_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_2e3741b1e123c8f08abadbbcf9e24e8b_tuple, 0, const_str_plain_VidmeIE); Py_INCREF(const_str_plain_VidmeIE);
    PyTuple_SET_ITEM(const_tuple_2e3741b1e123c8f08abadbbcf9e24e8b_tuple, 1, const_str_plain_VidmeUserIE); Py_INCREF(const_str_plain_VidmeUserIE);
    PyTuple_SET_ITEM(const_tuple_2e3741b1e123c8f08abadbbcf9e24e8b_tuple, 2, const_str_plain_VidmeUserLikesIE); Py_INCREF(const_str_plain_VidmeUserLikesIE);
    const_tuple_672937f689dfcbfc1004d06d90565167_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_672937f689dfcbfc1004d06d90565167_tuple, 0, const_str_plain_AWAANIE); Py_INCREF(const_str_plain_AWAANIE);
    PyTuple_SET_ITEM(const_tuple_672937f689dfcbfc1004d06d90565167_tuple, 1, const_str_plain_AWAANVideoIE); Py_INCREF(const_str_plain_AWAANVideoIE);
    PyTuple_SET_ITEM(const_tuple_672937f689dfcbfc1004d06d90565167_tuple, 2, const_str_plain_AWAANLiveIE); Py_INCREF(const_str_plain_AWAANLiveIE);
    PyTuple_SET_ITEM(const_tuple_672937f689dfcbfc1004d06d90565167_tuple, 3, const_str_plain_AWAANSeasonIE); Py_INCREF(const_str_plain_AWAANSeasonIE);
    const_tuple_str_plain_TagesschauPlayerIE_str_plain_TagesschauIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_TagesschauPlayerIE_str_plain_TagesschauIE_tuple, 0, const_str_plain_TagesschauPlayerIE); Py_INCREF(const_str_plain_TagesschauPlayerIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TagesschauPlayerIE_str_plain_TagesschauIE_tuple, 1, const_str_plain_TagesschauIE); Py_INCREF(const_str_plain_TagesschauIE);
    const_str_plain_cjsw = UNSTREAM_STRING_ASCII(&constant_bin[ 1042206 ], 4, 1);
    const_tuple_str_plain_MgoonIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MgoonIE_tuple, 0, const_str_plain_MgoonIE); Py_INCREF(const_str_plain_MgoonIE);
    const_tuple_str_plain_MatchTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MatchTVIE_tuple, 0, const_str_plain_MatchTVIE); Py_INCREF(const_str_plain_MatchTVIE);
    const_tuple_str_plain_FazIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FazIE_tuple, 0, const_str_plain_FazIE); Py_INCREF(const_str_plain_FazIE);
    const_tuple_2c1c8e525365445aa920c0d021f8f564_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_2c1c8e525365445aa920c0d021f8f564_tuple, 0, const_str_plain_FrontendMastersIE); Py_INCREF(const_str_plain_FrontendMastersIE);
    PyTuple_SET_ITEM(const_tuple_2c1c8e525365445aa920c0d021f8f564_tuple, 1, const_str_plain_FrontendMastersLessonIE); Py_INCREF(const_str_plain_FrontendMastersLessonIE);
    PyTuple_SET_ITEM(const_tuple_2c1c8e525365445aa920c0d021f8f564_tuple, 2, const_str_plain_FrontendMastersCourseIE); Py_INCREF(const_str_plain_FrontendMastersCourseIE);
    const_str_plain_ntvcojp = UNSTREAM_STRING_ASCII(&constant_bin[ 1203493 ], 7, 1);
    const_tuple_str_plain_PuhuTVIE_str_plain_PuhuTVSerieIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_PuhuTVIE_str_plain_PuhuTVSerieIE_tuple, 0, const_str_plain_PuhuTVIE); Py_INCREF(const_str_plain_PuhuTVIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_PuhuTVIE_str_plain_PuhuTVSerieIE_tuple, 1, const_str_plain_PuhuTVSerieIE); Py_INCREF(const_str_plain_PuhuTVSerieIE);
    const_str_plain_videofyme = UNSTREAM_STRING_ASCII(&constant_bin[ 1203500 ], 9, 1);
    const_str_plain_playwire = UNSTREAM_STRING_ASCII(&constant_bin[ 1203509 ], 8, 1);
    const_str_plain_clubic = UNSTREAM_STRING_ASCII(&constant_bin[ 1049182 ], 6, 1);
    const_tuple_str_plain_RENTVIE_str_plain_RENTVArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_RENTVIE_str_plain_RENTVArticleIE_tuple, 0, const_str_plain_RENTVIE); Py_INCREF(const_str_plain_RENTVIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_RENTVIE_str_plain_RENTVArticleIE_tuple, 1, const_str_plain_RENTVArticleIE); Py_INCREF(const_str_plain_RENTVArticleIE);
    const_tuple_str_plain_VVVVIDIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VVVVIDIE_tuple, 0, const_str_plain_VVVVIDIE); Py_INCREF(const_str_plain_VVVVIDIE);
    const_str_plain_varzesh3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1203517 ], 8, 1);
    const_tuple_str_plain_KarriereVideosIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_KarriereVideosIE_tuple, 0, const_str_plain_KarriereVideosIE); Py_INCREF(const_str_plain_KarriereVideosIE);
    const_tuple_str_plain_CNNIE_str_plain_CNNBlogsIE_str_plain_CNNArticleIE_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_CNNIE_str_plain_CNNBlogsIE_str_plain_CNNArticleIE_tuple, 0, const_str_plain_CNNIE); Py_INCREF(const_str_plain_CNNIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_CNNIE_str_plain_CNNBlogsIE_str_plain_CNNArticleIE_tuple, 1, const_str_plain_CNNBlogsIE); Py_INCREF(const_str_plain_CNNBlogsIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_CNNIE_str_plain_CNNBlogsIE_str_plain_CNNArticleIE_tuple, 2, const_str_plain_CNNArticleIE); Py_INCREF(const_str_plain_CNNArticleIE);
    const_str_plain_jamendo = UNSTREAM_STRING_ASCII(&constant_bin[ 1203525 ], 7, 1);
    const_str_plain_porncom = UNSTREAM_STRING_ASCII(&constant_bin[ 1203532 ], 7, 1);
    const_str_plain_nextmedia = UNSTREAM_STRING_ASCII(&constant_bin[ 885235 ], 9, 1);
    const_tuple_str_plain_DRTVIE_str_plain_DRTVLiveIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_DRTVIE_str_plain_DRTVLiveIE_tuple, 0, const_str_plain_DRTVIE); Py_INCREF(const_str_plain_DRTVIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_DRTVIE_str_plain_DRTVLiveIE_tuple, 1, const_str_plain_DRTVLiveIE); Py_INCREF(const_str_plain_DRTVLiveIE);
    const_tuple_str_plain_HowStuffWorksIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HowStuffWorksIE_tuple, 0, const_str_plain_HowStuffWorksIE); Py_INCREF(const_str_plain_HowStuffWorksIE);
    const_str_plain_showroomlive = UNSTREAM_STRING_ASCII(&constant_bin[ 1203539 ], 12, 1);
    const_tuple_str_plain_DefenseGouvFrIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DefenseGouvFrIE_tuple, 0, const_str_plain_DefenseGouvFrIE); Py_INCREF(const_str_plain_DefenseGouvFrIE);
    const_tuple_str_plain_ZDFIE_str_plain_ZDFChannelIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_ZDFIE_str_plain_ZDFChannelIE_tuple, 0, const_str_plain_ZDFIE); Py_INCREF(const_str_plain_ZDFIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ZDFIE_str_plain_ZDFChannelIE_tuple, 1, const_str_plain_ZDFChannelIE); Py_INCREF(const_str_plain_ZDFChannelIE);
    const_tuple_str_plain_DiggIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DiggIE_tuple, 0, const_str_plain_DiggIE); Py_INCREF(const_str_plain_DiggIE);
    const_tuple_str_plain_MediciIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MediciIE_tuple, 0, const_str_plain_MediciIE); Py_INCREF(const_str_plain_MediciIE);
    const_tuple_str_plain_NTVCoJpCUIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NTVCoJpCUIE_tuple, 0, const_str_plain_NTVCoJpCUIE); Py_INCREF(const_str_plain_NTVCoJpCUIE);
    const_str_plain_rtp = UNSTREAM_STRING_ASCII(&constant_bin[ 667094 ], 3, 1);
    const_tuple_str_plain_VidioIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VidioIE_tuple, 0, const_str_plain_VidioIE); Py_INCREF(const_str_plain_VidioIE);
    const_str_plain_foxsports = UNSTREAM_STRING_ASCII(&constant_bin[ 1203551 ], 9, 1);
    const_tuple_str_plain_DVTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DVTVIE_tuple, 0, const_str_plain_DVTVIE); Py_INCREF(const_str_plain_DVTVIE);
    const_tuple_str_plain_SproutIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SproutIE_tuple, 0, const_str_plain_SproutIE); Py_INCREF(const_str_plain_SproutIE);
    const_str_plain_rai = UNSTREAM_STRING_ASCII(&constant_bin[ 16679 ], 3, 1);
    const_tuple_str_plain_ServusIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ServusIE_tuple, 0, const_str_plain_ServusIE); Py_INCREF(const_str_plain_ServusIE);
    const_tuple_str_plain_BleacherReportIE_str_plain_BleacherReportCMSIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_BleacherReportIE_str_plain_BleacherReportCMSIE_tuple, 0, const_str_plain_BleacherReportIE); Py_INCREF(const_str_plain_BleacherReportIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_BleacherReportIE_str_plain_BleacherReportCMSIE_tuple, 1, const_str_plain_BleacherReportCMSIE); Py_INCREF(const_str_plain_BleacherReportCMSIE);
    const_tuple_d31216b8ee642c4f07770d393768d662_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_d31216b8ee642c4f07770d393768d662_tuple, 0, const_str_plain_SafariIE); Py_INCREF(const_str_plain_SafariIE);
    PyTuple_SET_ITEM(const_tuple_d31216b8ee642c4f07770d393768d662_tuple, 1, const_str_plain_SafariApiIE); Py_INCREF(const_str_plain_SafariApiIE);
    PyTuple_SET_ITEM(const_tuple_d31216b8ee642c4f07770d393768d662_tuple, 2, const_str_plain_SafariCourseIE); Py_INCREF(const_str_plain_SafariCourseIE);
    const_tuple_str_plain_TVAIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVAIE_tuple, 0, const_str_plain_TVAIE); Py_INCREF(const_str_plain_TVAIE);
    const_str_plain_sexu = UNSTREAM_STRING_ASCII(&constant_bin[ 961182 ], 4, 1);
    const_tuple_str_plain_OraTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_OraTVIE_tuple, 0, const_str_plain_OraTVIE); Py_INCREF(const_str_plain_OraTVIE);
    const_str_plain_youjizz = UNSTREAM_STRING_ASCII(&constant_bin[ 1203560 ], 7, 1);
    const_tuple_str_plain_XBefIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_XBefIE_tuple, 0, const_str_plain_XBefIE); Py_INCREF(const_str_plain_XBefIE);
    const_str_plain_telebruxelles = UNSTREAM_STRING_ASCII(&constant_bin[ 1203567 ], 13, 1);
    const_str_plain_zdf = UNSTREAM_STRING_ASCII(&constant_bin[ 1203580 ], 3, 1);
    const_tuple_str_plain_CamdemyIE_str_plain_CamdemyFolderIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_CamdemyIE_str_plain_CamdemyFolderIE_tuple, 0, const_str_plain_CamdemyIE); Py_INCREF(const_str_plain_CamdemyIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_CamdemyIE_str_plain_CamdemyFolderIE_tuple, 1, const_str_plain_CamdemyFolderIE); Py_INCREF(const_str_plain_CamdemyFolderIE);
    const_tuple_str_plain_IwaraIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_IwaraIE_tuple, 0, const_str_plain_IwaraIE); Py_INCREF(const_str_plain_IwaraIE);
    const_str_plain_raywenderlich = UNSTREAM_STRING_ASCII(&constant_bin[ 1203583 ], 13, 1);
    const_tuple_str_plain_EscapistIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EscapistIE_tuple, 0, const_str_plain_EscapistIE); Py_INCREF(const_str_plain_EscapistIE);
    const_tuple_str_plain_BeamProLiveIE_str_plain_BeamProVodIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_BeamProLiveIE_str_plain_BeamProVodIE_tuple, 0, const_str_plain_BeamProLiveIE); Py_INCREF(const_str_plain_BeamProLiveIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_BeamProLiveIE_str_plain_BeamProVodIE_tuple, 1, const_str_plain_BeamProVodIE); Py_INCREF(const_str_plain_BeamProVodIE);
    const_tuple_str_plain_MuenchenTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MuenchenTVIE_tuple, 0, const_str_plain_MuenchenTVIE); Py_INCREF(const_str_plain_MuenchenTVIE);
    const_tuple_str_plain_FoxgayIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FoxgayIE_tuple, 0, const_str_plain_FoxgayIE); Py_INCREF(const_str_plain_FoxgayIE);
    const_tuple_str_plain_PornoXOIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PornoXOIE_tuple, 0, const_str_plain_PornoXOIE); Py_INCREF(const_str_plain_PornoXOIE);
    const_str_plain_meipai = UNSTREAM_STRING_ASCII(&constant_bin[ 1203596 ], 6, 1);
    const_tuple_str_plain_DumpertIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DumpertIE_tuple, 0, const_str_plain_DumpertIE); Py_INCREF(const_str_plain_DumpertIE);
    const_tuple_f5fe873df175fa3a244b569f03c05a7c_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_f5fe873df175fa3a244b569f03c05a7c_tuple, 0, const_str_plain_VLiveIE); Py_INCREF(const_str_plain_VLiveIE);
    PyTuple_SET_ITEM(const_tuple_f5fe873df175fa3a244b569f03c05a7c_tuple, 1, const_str_plain_VLiveChannelIE); Py_INCREF(const_str_plain_VLiveChannelIE);
    PyTuple_SET_ITEM(const_tuple_f5fe873df175fa3a244b569f03c05a7c_tuple, 2, const_str_plain_VLivePlaylistIE); Py_INCREF(const_str_plain_VLivePlaylistIE);
    const_tuple_str_plain_PeopleIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PeopleIE_tuple, 0, const_str_plain_PeopleIE); Py_INCREF(const_str_plain_PeopleIE);
    const_tuple_str_plain_TVPEmbedIE_str_plain_TVPIE_str_plain_TVPWebsiteIE_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVPEmbedIE_str_plain_TVPIE_str_plain_TVPWebsiteIE_tuple, 0, const_str_plain_TVPEmbedIE); Py_INCREF(const_str_plain_TVPEmbedIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVPEmbedIE_str_plain_TVPIE_str_plain_TVPWebsiteIE_tuple, 1, const_str_plain_TVPIE); Py_INCREF(const_str_plain_TVPIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVPEmbedIE_str_plain_TVPIE_str_plain_TVPWebsiteIE_tuple, 2, const_str_plain_TVPWebsiteIE); Py_INCREF(const_str_plain_TVPWebsiteIE);
    const_tuple_str_plain_SinaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SinaIE_tuple, 0, const_str_plain_SinaIE); Py_INCREF(const_str_plain_SinaIE);
    const_tuple_str_plain_CMTIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CMTIE_tuple, 0, const_str_plain_CMTIE); Py_INCREF(const_str_plain_CMTIE);
    const_tuple_str_plain_AdobeConnectIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AdobeConnectIE_tuple, 0, const_str_plain_AdobeConnectIE); Py_INCREF(const_str_plain_AdobeConnectIE);
    const_tuple_str_plain_KankanIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_KankanIE_tuple, 0, const_str_plain_KankanIE); Py_INCREF(const_str_plain_KankanIE);
    const_str_plain_streetvoice = UNSTREAM_STRING_ASCII(&constant_bin[ 1203602 ], 11, 1);
    const_tuple_str_plain_BloombergIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BloombergIE_tuple, 0, const_str_plain_BloombergIE); Py_INCREF(const_str_plain_BloombergIE);
    const_tuple_str_plain_SRGSSRIE_str_plain_SRGSSRPlayIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_SRGSSRIE_str_plain_SRGSSRPlayIE_tuple, 0, const_str_plain_SRGSSRIE); Py_INCREF(const_str_plain_SRGSSRIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_SRGSSRIE_str_plain_SRGSSRPlayIE_tuple, 1, const_str_plain_SRGSSRPlayIE); Py_INCREF(const_str_plain_SRGSSRPlayIE);
    const_str_plain_mitele = UNSTREAM_STRING_ASCII(&constant_bin[ 1203613 ], 6, 1);
    const_tuple_str_plain_ATTTechChannelIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ATTTechChannelIE_tuple, 0, const_str_plain_ATTTechChannelIE); Py_INCREF(const_str_plain_ATTTechChannelIE);
    const_str_plain_sina = UNSTREAM_STRING_ASCII(&constant_bin[ 1203619 ], 4, 1);
    const_str_plain_rozhlas = UNSTREAM_STRING_ASCII(&constant_bin[ 1203623 ], 7, 1);
    const_str_plain_skylinewebcams = UNSTREAM_STRING_ASCII(&constant_bin[ 1203630 ], 14, 1);
    const_tuple_str_plain_ImdbIE_str_plain_ImdbListIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_ImdbIE_str_plain_ImdbListIE_tuple, 0, const_str_plain_ImdbIE); Py_INCREF(const_str_plain_ImdbIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ImdbIE_str_plain_ImdbListIE_tuple, 1, const_str_plain_ImdbListIE); Py_INCREF(const_str_plain_ImdbListIE);
    const_str_plain_teletask = UNSTREAM_STRING_ASCII(&constant_bin[ 1203644 ], 8, 1);
    const_tuple_str_plain_EyedoTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EyedoTVIE_tuple, 0, const_str_plain_EyedoTVIE); Py_INCREF(const_str_plain_EyedoTVIE);
    const_tuple_str_plain_RTVNHIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RTVNHIE_tuple, 0, const_str_plain_RTVNHIE); Py_INCREF(const_str_plain_RTVNHIE);
    const_str_plain_camwithher = UNSTREAM_STRING_ASCII(&constant_bin[ 994580 ], 10, 1);
    const_str_plain_tvnet = UNSTREAM_STRING_ASCII(&constant_bin[ 1203652 ], 5, 1);
    const_tuple_str_plain_TheWeatherChannelIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TheWeatherChannelIE_tuple, 0, const_str_plain_TheWeatherChannelIE); Py_INCREF(const_str_plain_TheWeatherChannelIE);
    const_str_plain_xvideos = UNSTREAM_STRING_ASCII(&constant_bin[ 1203657 ], 7, 1);
    const_str_plain_huajiao = UNSTREAM_STRING_ASCII(&constant_bin[ 1203664 ], 7, 1);
    const_str_plain_karrierevideos = UNSTREAM_STRING_ASCII(&constant_bin[ 1203671 ], 14, 1);
    const_tuple_str_plain_StitcherIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_StitcherIE_tuple, 0, const_str_plain_StitcherIE); Py_INCREF(const_str_plain_StitcherIE);
    const_tuple_str_plain_PBSIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PBSIE_tuple, 0, const_str_plain_PBSIE); Py_INCREF(const_str_plain_PBSIE);
    const_str_plain_nonktube = UNSTREAM_STRING_ASCII(&constant_bin[ 1203685 ], 8, 1);
    const_str_plain_tvnow = UNSTREAM_STRING_ASCII(&constant_bin[ 1203693 ], 5, 1);
    const_str_plain_teamcoco = UNSTREAM_STRING_ASCII(&constant_bin[ 1203698 ], 8, 1);
    const_tuple_str_plain_LineTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LineTVIE_tuple, 0, const_str_plain_LineTVIE); Py_INCREF(const_str_plain_LineTVIE);
    const_str_plain_microsoftvirtualacademy = UNSTREAM_STRING_ASCII(&constant_bin[ 1203706 ], 23, 1);
    const_str_plain_redbulltv = UNSTREAM_STRING_ASCII(&constant_bin[ 1203729 ], 9, 1);
    const_tuple_str_plain_FunkIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FunkIE_tuple, 0, const_str_plain_FunkIE); Py_INCREF(const_str_plain_FunkIE);
    const_str_plain_egghead = UNSTREAM_STRING_ASCII(&constant_bin[ 1178136 ], 7, 1);
    const_tuple_str_plain_UOLIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_UOLIE_tuple, 0, const_str_plain_UOLIE); Py_INCREF(const_str_plain_UOLIE);
    const_str_plain_googleplus = UNSTREAM_STRING_ASCII(&constant_bin[ 1203738 ], 10, 1);
    const_str_plain_rtbf = UNSTREAM_STRING_ASCII(&constant_bin[ 1203748 ], 4, 1);
    const_str_plain_glide = UNSTREAM_STRING_ASCII(&constant_bin[ 1203752 ], 5, 1);
    const_tuple_str_plain_CanalplusIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CanalplusIE_tuple, 0, const_str_plain_CanalplusIE); Py_INCREF(const_str_plain_CanalplusIE);
    const_str_plain_wwe = UNSTREAM_STRING_ASCII(&constant_bin[ 1110115 ], 3, 1);
    const_str_plain_commonmistakes = UNSTREAM_STRING_ASCII(&constant_bin[ 1098176 ], 14, 1);
    const_tuple_str_plain_DiscoveryNetworksDeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DiscoveryNetworksDeIE_tuple, 0, const_str_plain_DiscoveryNetworksDeIE); Py_INCREF(const_str_plain_DiscoveryNetworksDeIE);
    const_tuple_str_plain_KaraoketvIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_KaraoketvIE_tuple, 0, const_str_plain_KaraoketvIE); Py_INCREF(const_str_plain_KaraoketvIE);
    const_tuple_str_plain_YouJizzIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_YouJizzIE_tuple, 0, const_str_plain_YouJizzIE); Py_INCREF(const_str_plain_YouJizzIE);
    const_tuple_str_plain_BRIE_str_plain_BRMediathekIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_BRIE_str_plain_BRMediathekIE_tuple, 0, const_str_plain_BRIE); Py_INCREF(const_str_plain_BRIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_BRIE_str_plain_BRMediathekIE_tuple, 1, const_str_plain_BRMediathekIE); Py_INCREF(const_str_plain_BRMediathekIE);
    const_str_plain_odatv = UNSTREAM_STRING_ASCII(&constant_bin[ 1203757 ], 5, 1);
    const_tuple_str_plain_NonkTubeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NonkTubeIE_tuple, 0, const_str_plain_NonkTubeIE); Py_INCREF(const_str_plain_NonkTubeIE);
    const_str_plain_cbsinteractive = UNSTREAM_STRING_ASCII(&constant_bin[ 1011988 ], 14, 1);
    const_str_plain_usanetwork = UNSTREAM_STRING_ASCII(&constant_bin[ 1203762 ], 10, 1);
    const_str_plain_ebaumsworld = UNSTREAM_STRING_ASCII(&constant_bin[ 1177088 ], 11, 1);
    const_tuple_d9dbadd0367cc19cceb8eea6f8a38581_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_d9dbadd0367cc19cceb8eea6f8a38581_tuple, 0, const_str_plain_LecturioIE); Py_INCREF(const_str_plain_LecturioIE);
    PyTuple_SET_ITEM(const_tuple_d9dbadd0367cc19cceb8eea6f8a38581_tuple, 1, const_str_plain_LecturioCourseIE); Py_INCREF(const_str_plain_LecturioCourseIE);
    PyTuple_SET_ITEM(const_tuple_d9dbadd0367cc19cceb8eea6f8a38581_tuple, 2, const_str_plain_LecturioDeCourseIE); Py_INCREF(const_str_plain_LecturioDeCourseIE);
    const_str_plain_businessinsider = UNSTREAM_STRING_ASCII(&constant_bin[ 986041 ], 15, 1);
    const_tuple_str_plain_AsianCrushIE_str_plain_AsianCrushPlaylistIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_AsianCrushIE_str_plain_AsianCrushPlaylistIE_tuple, 0, const_str_plain_AsianCrushIE); Py_INCREF(const_str_plain_AsianCrushIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_AsianCrushIE_str_plain_AsianCrushPlaylistIE_tuple, 1, const_str_plain_AsianCrushPlaylistIE); Py_INCREF(const_str_plain_AsianCrushPlaylistIE);
    const_tuple_str_plain_ChirbitIE_str_plain_ChirbitProfileIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_ChirbitIE_str_plain_ChirbitProfileIE_tuple, 0, const_str_plain_ChirbitIE); Py_INCREF(const_str_plain_ChirbitIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ChirbitIE_str_plain_ChirbitProfileIE_tuple, 1, const_str_plain_ChirbitProfileIE); Py_INCREF(const_str_plain_ChirbitProfileIE);
    const_tuple_str_plain_EchoMskIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EchoMskIE_tuple, 0, const_str_plain_EchoMskIE); Py_INCREF(const_str_plain_EchoMskIE);
    const_str_plain_sunporno = UNSTREAM_STRING_ASCII(&constant_bin[ 1203772 ], 8, 1);
    const_str_plain_historicfilms = UNSTREAM_STRING_ASCII(&constant_bin[ 1203780 ], 13, 1);
    const_tuple_str_plain_HypemIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HypemIE_tuple, 0, const_str_plain_HypemIE); Py_INCREF(const_str_plain_HypemIE);
    const_tuple_str_plain_NosVideoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NosVideoIE_tuple, 0, const_str_plain_NosVideoIE); Py_INCREF(const_str_plain_NosVideoIE);
    const_tuple_str_plain_NobelPrizeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NobelPrizeIE_tuple, 0, const_str_plain_NobelPrizeIE); Py_INCREF(const_str_plain_NobelPrizeIE);
    const_tuple_str_plain_InfoQIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_InfoQIE_tuple, 0, const_str_plain_InfoQIE); Py_INCREF(const_str_plain_InfoQIE);
    const_tuple_73a47d98e51d68658afc43c3e5f3130f_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_73a47d98e51d68658afc43c3e5f3130f_tuple, 0, const_str_plain_BBCCoUkIE); Py_INCREF(const_str_plain_BBCCoUkIE);
    PyTuple_SET_ITEM(const_tuple_73a47d98e51d68658afc43c3e5f3130f_tuple, 1, const_str_plain_BBCCoUkArticleIE); Py_INCREF(const_str_plain_BBCCoUkArticleIE);
    PyTuple_SET_ITEM(const_tuple_73a47d98e51d68658afc43c3e5f3130f_tuple, 2, const_str_plain_BBCCoUkIPlayerPlaylistIE); Py_INCREF(const_str_plain_BBCCoUkIPlayerPlaylistIE);
    PyTuple_SET_ITEM(const_tuple_73a47d98e51d68658afc43c3e5f3130f_tuple, 3, const_str_plain_BBCCoUkPlaylistIE); Py_INCREF(const_str_plain_BBCCoUkPlaylistIE);
    PyTuple_SET_ITEM(const_tuple_73a47d98e51d68658afc43c3e5f3130f_tuple, 4, const_str_plain_BBCIE); Py_INCREF(const_str_plain_BBCIE);
    const_tuple_str_plain_GloboIE_str_plain_GloboArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_GloboIE_str_plain_GloboArticleIE_tuple, 0, const_str_plain_GloboIE); Py_INCREF(const_str_plain_GloboIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_GloboIE_str_plain_GloboArticleIE_tuple, 1, const_str_plain_GloboArticleIE); Py_INCREF(const_str_plain_GloboArticleIE);
    const_str_plain_nuvid = UNSTREAM_STRING_ASCII(&constant_bin[ 1203793 ], 5, 1);
    const_str_plain_voicerepublic = UNSTREAM_STRING_ASCII(&constant_bin[ 1203798 ], 13, 1);
    const_tuple_str_plain_HitRecordIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HitRecordIE_tuple, 0, const_str_plain_HitRecordIE); Py_INCREF(const_str_plain_HitRecordIE);
    const_tuple_str_plain_WatchBoxIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_WatchBoxIE_tuple, 0, const_str_plain_WatchBoxIE); Py_INCREF(const_str_plain_WatchBoxIE);
    const_tuple_str_plain_FiveTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FiveTVIE_tuple, 0, const_str_plain_FiveTVIE); Py_INCREF(const_str_plain_FiveTVIE);
    const_tuple_str_plain_RTBFIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RTBFIE_tuple, 0, const_str_plain_RTBFIE); Py_INCREF(const_str_plain_RTBFIE);
    const_str_plain_reddit = UNSTREAM_STRING_ASCII(&constant_bin[ 1203811 ], 6, 1);
    const_tuple_str_plain_TVLandIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVLandIE_tuple, 0, const_str_plain_TVLandIE); Py_INCREF(const_str_plain_TVLandIE);
    const_tuple_str_plain_CCTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CCTVIE_tuple, 0, const_str_plain_CCTVIE); Py_INCREF(const_str_plain_CCTVIE);
    const_tuple_str_plain_MySpaceIE_str_plain_MySpaceAlbumIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_MySpaceIE_str_plain_MySpaceAlbumIE_tuple, 0, const_str_plain_MySpaceIE); Py_INCREF(const_str_plain_MySpaceIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_MySpaceIE_str_plain_MySpaceAlbumIE_tuple, 1, const_str_plain_MySpaceAlbumIE); Py_INCREF(const_str_plain_MySpaceAlbumIE);
    const_str_plain_veoh = UNSTREAM_STRING_ASCII(&constant_bin[ 1203817 ], 4, 1);
    const_tuple_str_plain_RadioJavanIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RadioJavanIE_tuple, 0, const_str_plain_RadioJavanIE); Py_INCREF(const_str_plain_RadioJavanIE);
    const_tuple_str_plain_PandoraTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PandoraTVIE_tuple, 0, const_str_plain_PandoraTVIE); Py_INCREF(const_str_plain_PandoraTVIE);
    const_tuple_str_plain_AliExpressLiveIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AliExpressLiveIE_tuple, 0, const_str_plain_AliExpressLiveIE); Py_INCREF(const_str_plain_AliExpressLiveIE);
    const_str_plain_webofstories = UNSTREAM_STRING_ASCII(&constant_bin[ 1203821 ], 12, 1);
    const_tuple_9f56c3829eefc56f82d5c115157a02ff_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_9f56c3829eefc56f82d5c115157a02ff_tuple, 0, const_str_plain_SmotriIE); Py_INCREF(const_str_plain_SmotriIE);
    PyTuple_SET_ITEM(const_tuple_9f56c3829eefc56f82d5c115157a02ff_tuple, 1, const_str_plain_SmotriCommunityIE); Py_INCREF(const_str_plain_SmotriCommunityIE);
    PyTuple_SET_ITEM(const_tuple_9f56c3829eefc56f82d5c115157a02ff_tuple, 2, const_str_plain_SmotriUserIE); Py_INCREF(const_str_plain_SmotriUserIE);
    PyTuple_SET_ITEM(const_tuple_9f56c3829eefc56f82d5c115157a02ff_tuple, 3, const_str_plain_SmotriBroadcastIE); Py_INCREF(const_str_plain_SmotriBroadcastIE);
    const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple = PyTuple_New(17);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 0, const_str_plain_YoutubeIE); Py_INCREF(const_str_plain_YoutubeIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 1, const_str_plain_YoutubeChannelIE); Py_INCREF(const_str_plain_YoutubeChannelIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 2, const_str_plain_YoutubeFavouritesIE); Py_INCREF(const_str_plain_YoutubeFavouritesIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 3, const_str_plain_YoutubeHistoryIE); Py_INCREF(const_str_plain_YoutubeHistoryIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 4, const_str_plain_YoutubeLiveIE); Py_INCREF(const_str_plain_YoutubeLiveIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 5, const_str_plain_YoutubePlaylistIE); Py_INCREF(const_str_plain_YoutubePlaylistIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 6, const_str_plain_YoutubePlaylistsIE); Py_INCREF(const_str_plain_YoutubePlaylistsIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 7, const_str_plain_YoutubeRecommendedIE); Py_INCREF(const_str_plain_YoutubeRecommendedIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 8, const_str_plain_YoutubeSearchDateIE); Py_INCREF(const_str_plain_YoutubeSearchDateIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 9, const_str_plain_YoutubeSearchIE); Py_INCREF(const_str_plain_YoutubeSearchIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 10, const_str_plain_YoutubeSearchURLIE); Py_INCREF(const_str_plain_YoutubeSearchURLIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 11, const_str_plain_YoutubeShowIE); Py_INCREF(const_str_plain_YoutubeShowIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 12, const_str_plain_YoutubeSubscriptionsIE); Py_INCREF(const_str_plain_YoutubeSubscriptionsIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 13, const_str_plain_YoutubeTruncatedIDIE); Py_INCREF(const_str_plain_YoutubeTruncatedIDIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 14, const_str_plain_YoutubeTruncatedURLIE); Py_INCREF(const_str_plain_YoutubeTruncatedURLIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 15, const_str_plain_YoutubeUserIE); Py_INCREF(const_str_plain_YoutubeUserIE);
    PyTuple_SET_ITEM(const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple, 16, const_str_plain_YoutubeWatchLaterIE); Py_INCREF(const_str_plain_YoutubeWatchLaterIE);
    const_str_plain_tdslifeway = UNSTREAM_STRING_ASCII(&constant_bin[ 1203833 ], 10, 1);
    const_tuple_str_plain_PokemonIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PokemonIE_tuple, 0, const_str_plain_PokemonIE); Py_INCREF(const_str_plain_PokemonIE);
    const_tuple_str_plain_XMinusIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_XMinusIE_tuple, 0, const_str_plain_XMinusIE); Py_INCREF(const_str_plain_XMinusIE);
    const_str_plain_stitcher = UNSTREAM_STRING_ASCII(&constant_bin[ 1203843 ], 8, 1);
    const_tuple_str_plain_ADNIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ADNIE_tuple, 0, const_str_plain_ADNIE); Py_INCREF(const_str_plain_ADNIE);
    const_str_plain_izlesene = UNSTREAM_STRING_ASCII(&constant_bin[ 1203851 ], 8, 1);
    const_str_plain_pyvideo = UNSTREAM_STRING_ASCII(&constant_bin[ 965951 ], 7, 1);
    const_str_plain_slideslive = UNSTREAM_STRING_ASCII(&constant_bin[ 1203859 ], 10, 1);
    const_tuple_str_plain_YinYueTaiIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_YinYueTaiIE_tuple, 0, const_str_plain_YinYueTaiIE); Py_INCREF(const_str_plain_YinYueTaiIE);
    const_tuple_str_plain_Lecture2GoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Lecture2GoIE_tuple, 0, const_str_plain_Lecture2GoIE); Py_INCREF(const_str_plain_Lecture2GoIE);
    const_str_plain_rtvs = UNSTREAM_STRING_ASCII(&constant_bin[ 1203869 ], 4, 1);
    const_str_plain_ninenow = UNSTREAM_STRING_ASCII(&constant_bin[ 1203873 ], 7, 1);
    const_str_plain_franceinter = UNSTREAM_STRING_ASCII(&constant_bin[ 1203880 ], 11, 1);
    const_str_plain_internazionale = UNSTREAM_STRING_ASCII(&constant_bin[ 1203891 ], 14, 1);
    const_tuple_str_plain_CeskaTelevizeIE_str_plain_CeskaTelevizePoradyIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_CeskaTelevizeIE_str_plain_CeskaTelevizePoradyIE_tuple, 0, const_str_plain_CeskaTelevizeIE); Py_INCREF(const_str_plain_CeskaTelevizeIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_CeskaTelevizeIE_str_plain_CeskaTelevizePoradyIE_tuple, 1, const_str_plain_CeskaTelevizePoradyIE); Py_INCREF(const_str_plain_CeskaTelevizePoradyIE);
    const_str_plain_vodpl = UNSTREAM_STRING_ASCII(&constant_bin[ 1203905 ], 5, 1);
    const_str_plain_yinyuetai = UNSTREAM_STRING_ASCII(&constant_bin[ 1203910 ], 9, 1);
    const_str_plain_mgtv = UNSTREAM_STRING_ASCII(&constant_bin[ 1203919 ], 4, 1);
    const_tuple_str_plain_UKTVPlayIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_UKTVPlayIE_tuple, 0, const_str_plain_UKTVPlayIE); Py_INCREF(const_str_plain_UKTVPlayIE);
    const_tuple_str_plain_WorldStarHipHopIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_WorldStarHipHopIE_tuple, 0, const_str_plain_WorldStarHipHopIE); Py_INCREF(const_str_plain_WorldStarHipHopIE);
    const_tuple_str_plain_CultureUnpluggedIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CultureUnpluggedIE_tuple, 0, const_str_plain_CultureUnpluggedIE); Py_INCREF(const_str_plain_CultureUnpluggedIE);
    const_tuple_str_plain_PolskieRadioIE_str_plain_PolskieRadioCategoryIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_PolskieRadioIE_str_plain_PolskieRadioCategoryIE_tuple, 0, const_str_plain_PolskieRadioIE); Py_INCREF(const_str_plain_PolskieRadioIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_PolskieRadioIE_str_plain_PolskieRadioCategoryIE_tuple, 1, const_str_plain_PolskieRadioCategoryIE); Py_INCREF(const_str_plain_PolskieRadioCategoryIE);
    const_tuple_8acfa8ff02cc89cec07cbc6382f4ed35_tuple = PyTuple_New(7);
    PyTuple_SET_ITEM(const_tuple_8acfa8ff02cc89cec07cbc6382f4ed35_tuple, 0, const_str_plain_SoundcloudEmbedIE); Py_INCREF(const_str_plain_SoundcloudEmbedIE);
    PyTuple_SET_ITEM(const_tuple_8acfa8ff02cc89cec07cbc6382f4ed35_tuple, 1, const_str_plain_SoundcloudIE); Py_INCREF(const_str_plain_SoundcloudIE);
    PyTuple_SET_ITEM(const_tuple_8acfa8ff02cc89cec07cbc6382f4ed35_tuple, 2, const_str_plain_SoundcloudSetIE); Py_INCREF(const_str_plain_SoundcloudSetIE);
    PyTuple_SET_ITEM(const_tuple_8acfa8ff02cc89cec07cbc6382f4ed35_tuple, 3, const_str_plain_SoundcloudUserIE); Py_INCREF(const_str_plain_SoundcloudUserIE);
    PyTuple_SET_ITEM(const_tuple_8acfa8ff02cc89cec07cbc6382f4ed35_tuple, 4, const_str_plain_SoundcloudTrackStationIE); Py_INCREF(const_str_plain_SoundcloudTrackStationIE);
    PyTuple_SET_ITEM(const_tuple_8acfa8ff02cc89cec07cbc6382f4ed35_tuple, 5, const_str_plain_SoundcloudPlaylistIE); Py_INCREF(const_str_plain_SoundcloudPlaylistIE);
    PyTuple_SET_ITEM(const_tuple_8acfa8ff02cc89cec07cbc6382f4ed35_tuple, 6, const_str_plain_SoundcloudSearchIE); Py_INCREF(const_str_plain_SoundcloudSearchIE);
    const_str_plain_urplay = UNSTREAM_STRING_ASCII(&constant_bin[ 1203923 ], 6, 1);
    const_tuple_str_plain_YourUploadIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_YourUploadIE_tuple, 0, const_str_plain_YourUploadIE); Py_INCREF(const_str_plain_YourUploadIE);
    const_str_plain_behindkink = UNSTREAM_STRING_ASCII(&constant_bin[ 948388 ], 10, 1);
    const_tuple_str_plain_HellPornoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HellPornoIE_tuple, 0, const_str_plain_HellPornoIE); Py_INCREF(const_str_plain_HellPornoIE);
    const_tuple_str_plain_EinthusanIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EinthusanIE_tuple, 0, const_str_plain_EinthusanIE); Py_INCREF(const_str_plain_EinthusanIE);
    const_str_plain_carambatv = UNSTREAM_STRING_ASCII(&constant_bin[ 1002227 ], 9, 1);
    const_str_plain_rtlnl = UNSTREAM_STRING_ASCII(&constant_bin[ 1203929 ], 5, 1);
    const_str_plain_mit = UNSTREAM_STRING_ASCII(&constant_bin[ 34600 ], 3, 1);
    const_tuple_933597edc4f57e04a7617717b06e4514_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_933597edc4f57e04a7617717b06e4514_tuple, 0, const_str_plain_SouthParkIE); Py_INCREF(const_str_plain_SouthParkIE);
    PyTuple_SET_ITEM(const_tuple_933597edc4f57e04a7617717b06e4514_tuple, 1, const_str_plain_SouthParkDeIE); Py_INCREF(const_str_plain_SouthParkDeIE);
    PyTuple_SET_ITEM(const_tuple_933597edc4f57e04a7617717b06e4514_tuple, 2, const_str_plain_SouthParkDkIE); Py_INCREF(const_str_plain_SouthParkDkIE);
    PyTuple_SET_ITEM(const_tuple_933597edc4f57e04a7617717b06e4514_tuple, 3, const_str_plain_SouthParkEsIE); Py_INCREF(const_str_plain_SouthParkEsIE);
    PyTuple_SET_ITEM(const_tuple_933597edc4f57e04a7617717b06e4514_tuple, 4, const_str_plain_SouthParkNlIE); Py_INCREF(const_str_plain_SouthParkNlIE);
    const_tuple_str_plain_FC2IE_str_plain_FC2EmbedIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_FC2IE_str_plain_FC2EmbedIE_tuple, 0, const_str_plain_FC2IE); Py_INCREF(const_str_plain_FC2IE);
    PyTuple_SET_ITEM(const_tuple_str_plain_FC2IE_str_plain_FC2EmbedIE_tuple, 1, const_str_plain_FC2EmbedIE); Py_INCREF(const_str_plain_FC2EmbedIE);
    const_str_plain_tenplay = UNSTREAM_STRING_ASCII(&constant_bin[ 1203934 ], 7, 1);
    const_str_plain_unity = UNSTREAM_STRING_ASCII(&constant_bin[ 32908 ], 5, 1);
    const_str_plain_hungama = UNSTREAM_STRING_ASCII(&constant_bin[ 1203941 ], 7, 1);
    const_str_plain_trilulilu = UNSTREAM_STRING_ASCII(&constant_bin[ 1203948 ], 9, 1);
    const_tuple_str_plain_ElPaisIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ElPaisIE_tuple, 0, const_str_plain_ElPaisIE); Py_INCREF(const_str_plain_ElPaisIE);
    const_tuple_str_plain_YourPornIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_YourPornIE_tuple, 0, const_str_plain_YourPornIE); Py_INCREF(const_str_plain_YourPornIE);
    const_tuple_str_plain_CWTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CWTVIE_tuple, 0, const_str_plain_CWTVIE); Py_INCREF(const_str_plain_CWTVIE);
    const_str_plain_crooksandliars = UNSTREAM_STRING_ASCII(&constant_bin[ 1110046 ], 14, 1);
    const_tuple_str_plain_Tele13IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Tele13IE_tuple, 0, const_str_plain_Tele13IE); Py_INCREF(const_str_plain_Tele13IE);
    const_str_plain_fourtube = UNSTREAM_STRING_ASCII(&constant_bin[ 1203957 ], 8, 1);
    const_tuple_str_plain_VideoDetectiveIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VideoDetectiveIE_tuple, 0, const_str_plain_VideoDetectiveIE); Py_INCREF(const_str_plain_VideoDetectiveIE);
    const_str_plain_biobiochiletv = UNSTREAM_STRING_ASCII(&constant_bin[ 959524 ], 13, 1);
    const_str_plain_krasview = UNSTREAM_STRING_ASCII(&constant_bin[ 1203965 ], 8, 1);
    const_str_plain_tweakers = UNSTREAM_STRING_ASCII(&constant_bin[ 1203973 ], 8, 1);
    const_tuple_str_plain_HuffPostIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HuffPostIE_tuple, 0, const_str_plain_HuffPostIE); Py_INCREF(const_str_plain_HuffPostIE);
    const_tuple_2081a921fb965b7ed0955c1edb72f220_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_2081a921fb965b7ed0955c1edb72f220_tuple, 0, const_str_plain_BTArticleIE); Py_INCREF(const_str_plain_BTArticleIE);
    PyTuple_SET_ITEM(const_tuple_2081a921fb965b7ed0955c1edb72f220_tuple, 1, const_str_plain_BTVestlendingenIE); Py_INCREF(const_str_plain_BTVestlendingenIE);
    PyTuple_SET_ITEM(const_tuple_2081a921fb965b7ed0955c1edb72f220_tuple, 2, const_str_plain_VGTVIE); Py_INCREF(const_str_plain_VGTVIE);
    const_str_plain_phoenix = UNSTREAM_STRING_ASCII(&constant_bin[ 861360 ], 7, 1);
    const_str_plain_cinchcast = UNSTREAM_STRING_ASCII(&constant_bin[ 1038900 ], 9, 1);
    const_tuple_str_plain_TeacherTubeIE_str_plain_TeacherTubeUserIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_TeacherTubeIE_str_plain_TeacherTubeUserIE_tuple, 0, const_str_plain_TeacherTubeIE); Py_INCREF(const_str_plain_TeacherTubeIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_TeacherTubeIE_str_plain_TeacherTubeUserIE_tuple, 1, const_str_plain_TeacherTubeUserIE); Py_INCREF(const_str_plain_TeacherTubeUserIE);
    const_tuple_str_plain_CrooksAndLiarsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CrooksAndLiarsIE_tuple, 0, const_str_plain_CrooksAndLiarsIE); Py_INCREF(const_str_plain_CrooksAndLiarsIE);
    const_str_plain_nrl = UNSTREAM_STRING_ASCII(&constant_bin[ 1203981 ], 3, 1);
    const_str_plain_sportdeutschland = UNSTREAM_STRING_ASCII(&constant_bin[ 1203984 ], 16, 1);
    const_tuple_str_plain_NewstubeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NewstubeIE_tuple, 0, const_str_plain_NewstubeIE); Py_INCREF(const_str_plain_NewstubeIE);
    const_tuple_str_plain_DFBIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DFBIE_tuple, 0, const_str_plain_DFBIE); Py_INCREF(const_str_plain_DFBIE);
    const_str_plain_mgoon = UNSTREAM_STRING_ASCII(&constant_bin[ 1204000 ], 5, 1);
    const_str_plain_rbmaradio = UNSTREAM_STRING_ASCII(&constant_bin[ 1204005 ], 9, 1);
    const_str_plain_myvidster = UNSTREAM_STRING_ASCII(&constant_bin[ 1204014 ], 9, 1);
    const_tuple_str_plain_LifeNewsIE_str_plain_LifeEmbedIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_LifeNewsIE_str_plain_LifeEmbedIE_tuple, 0, const_str_plain_LifeNewsIE); Py_INCREF(const_str_plain_LifeNewsIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_LifeNewsIE_str_plain_LifeEmbedIE_tuple, 1, const_str_plain_LifeEmbedIE); Py_INCREF(const_str_plain_LifeEmbedIE);
    const_tuple_str_plain_WatIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_WatIE_tuple, 0, const_str_plain_WatIE); Py_INCREF(const_str_plain_WatIE);
    const_tuple_str_plain_VevoIE_str_plain_VevoPlaylistIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_VevoIE_str_plain_VevoPlaylistIE_tuple, 0, const_str_plain_VevoIE); Py_INCREF(const_str_plain_VevoIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_VevoIE_str_plain_VevoPlaylistIE_tuple, 1, const_str_plain_VevoPlaylistIE); Py_INCREF(const_str_plain_VevoPlaylistIE);
    const_tuple_str_plain_FirstTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FirstTVIE_tuple, 0, const_str_plain_FirstTVIE); Py_INCREF(const_str_plain_FirstTVIE);
    const_str_plain_rtvnh = UNSTREAM_STRING_ASCII(&constant_bin[ 1204023 ], 5, 1);
    const_tuple_str_plain_KetnetIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_KetnetIE_tuple, 0, const_str_plain_KetnetIE); Py_INCREF(const_str_plain_KetnetIE);
    const_tuple_30bfc9dcdb5163dc197d85002aa8178a_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_30bfc9dcdb5163dc197d85002aa8178a_tuple, 0, const_str_plain_TNAFlixNetworkEmbedIE); Py_INCREF(const_str_plain_TNAFlixNetworkEmbedIE);
    PyTuple_SET_ITEM(const_tuple_30bfc9dcdb5163dc197d85002aa8178a_tuple, 1, const_str_plain_TNAFlixIE); Py_INCREF(const_str_plain_TNAFlixIE);
    PyTuple_SET_ITEM(const_tuple_30bfc9dcdb5163dc197d85002aa8178a_tuple, 2, const_str_plain_EMPFlixIE); Py_INCREF(const_str_plain_EMPFlixIE);
    PyTuple_SET_ITEM(const_tuple_30bfc9dcdb5163dc197d85002aa8178a_tuple, 3, const_str_plain_MovieFapIE); Py_INCREF(const_str_plain_MovieFapIE);
    const_tuple_str_plain_MallTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MallTVIE_tuple, 0, const_str_plain_MallTVIE); Py_INCREF(const_str_plain_MallTVIE);
    const_tuple_str_plain_VH1IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VH1IE_tuple, 0, const_str_plain_VH1IE); Py_INCREF(const_str_plain_VH1IE);
    const_tuple_str_plain_FreesoundIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FreesoundIE_tuple, 0, const_str_plain_FreesoundIE); Py_INCREF(const_str_plain_FreesoundIE);
    const_str_plain_rds = UNSTREAM_STRING_ASCII(&constant_bin[ 90494 ], 3, 1);
    const_str_plain_zapiks = UNSTREAM_STRING_ASCII(&constant_bin[ 1204028 ], 6, 1);
    const_tuple_str_plain_TechTalksIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TechTalksIE_tuple, 0, const_str_plain_TechTalksIE); Py_INCREF(const_str_plain_TechTalksIE);
    const_str_plain_iprima = UNSTREAM_STRING_ASCII(&constant_bin[ 1204034 ], 6, 1);
    const_tuple_str_plain_HiDiveIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HiDiveIE_tuple, 0, const_str_plain_HiDiveIE); Py_INCREF(const_str_plain_HiDiveIE);
    const_str_plain_worldstarhiphop = UNSTREAM_STRING_ASCII(&constant_bin[ 1204040 ], 15, 1);
    const_str_plain_xxxymovies = UNSTREAM_STRING_ASCII(&constant_bin[ 1204055 ], 10, 1);
    const_str_plain_kusi = UNSTREAM_STRING_ASCII(&constant_bin[ 543127 ], 4, 1);
    const_str_plain_tvanouvelles = UNSTREAM_STRING_ASCII(&constant_bin[ 1204065 ], 12, 1);
    const_str_plain_cammodels = UNSTREAM_STRING_ASCII(&constant_bin[ 993193 ], 9, 1);
    const_str_plain_tvnoe = UNSTREAM_STRING_ASCII(&constant_bin[ 1204077 ], 5, 1);
    const_tuple_str_plain_ViewLiftIE_str_plain_ViewLiftEmbedIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_ViewLiftIE_str_plain_ViewLiftEmbedIE_tuple, 0, const_str_plain_ViewLiftIE); Py_INCREF(const_str_plain_ViewLiftIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ViewLiftIE_str_plain_ViewLiftEmbedIE_tuple, 1, const_str_plain_ViewLiftEmbedIE); Py_INCREF(const_str_plain_ViewLiftEmbedIE);
    const_tuple_str_plain_ViideaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ViideaIE_tuple, 0, const_str_plain_ViideaIE); Py_INCREF(const_str_plain_ViideaIE);
    const_str_plain_reuters = UNSTREAM_STRING_ASCII(&constant_bin[ 1204082 ], 7, 1);
    const_tuple_str_plain_CBSInteractiveIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CBSInteractiveIE_tuple, 0, const_str_plain_CBSInteractiveIE); Py_INCREF(const_str_plain_CBSInteractiveIE);
    const_tuple_str_plain_PornoVoisinesIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PornoVoisinesIE_tuple, 0, const_str_plain_PornoVoisinesIE); Py_INCREF(const_str_plain_PornoVoisinesIE);
    const_tuple_str_plain_LoveHomePornIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LoveHomePornIE_tuple, 0, const_str_plain_LoveHomePornIE); Py_INCREF(const_str_plain_LoveHomePornIE);
    const_tuple_str_plain_CommonMistakesIE_str_plain_UnicodeBOMIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_CommonMistakesIE_str_plain_UnicodeBOMIE_tuple, 0, const_str_plain_CommonMistakesIE); Py_INCREF(const_str_plain_CommonMistakesIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_CommonMistakesIE_str_plain_UnicodeBOMIE_tuple, 1, const_str_plain_UnicodeBOMIE); Py_INCREF(const_str_plain_UnicodeBOMIE);
    const_str_plain_massengeschmacktv = UNSTREAM_STRING_ASCII(&constant_bin[ 1204089 ], 17, 1);
    const_tuple_str_plain_TestURLIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TestURLIE_tuple, 0, const_str_plain_TestURLIE); Py_INCREF(const_str_plain_TestURLIE);
    const_str_plain_deezer = UNSTREAM_STRING_ASCII(&constant_bin[ 1138265 ], 6, 1);
    const_str_plain_nytimes = UNSTREAM_STRING_ASCII(&constant_bin[ 1204106 ], 7, 1);
    const_tuple_str_plain_TruNewsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TruNewsIE_tuple, 0, const_str_plain_TruNewsIE); Py_INCREF(const_str_plain_TruNewsIE);
    const_tuple_str_plain_SlidesLiveIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SlidesLiveIE_tuple, 0, const_str_plain_SlidesLiveIE); Py_INCREF(const_str_plain_SlidesLiveIE);
    const_tuple_7fa36dd7b95e542658f01f53afe93a33_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_7fa36dd7b95e542658f01f53afe93a33_tuple, 0, const_str_plain_ComedyCentralFullEpisodesIE); Py_INCREF(const_str_plain_ComedyCentralFullEpisodesIE);
    PyTuple_SET_ITEM(const_tuple_7fa36dd7b95e542658f01f53afe93a33_tuple, 1, const_str_plain_ComedyCentralIE); Py_INCREF(const_str_plain_ComedyCentralIE);
    PyTuple_SET_ITEM(const_tuple_7fa36dd7b95e542658f01f53afe93a33_tuple, 2, const_str_plain_ComedyCentralShortnameIE); Py_INCREF(const_str_plain_ComedyCentralShortnameIE);
    PyTuple_SET_ITEM(const_tuple_7fa36dd7b95e542658f01f53afe93a33_tuple, 3, const_str_plain_ComedyCentralTVIE); Py_INCREF(const_str_plain_ComedyCentralTVIE);
    PyTuple_SET_ITEM(const_tuple_7fa36dd7b95e542658f01f53afe93a33_tuple, 4, const_str_plain_ToshIE); Py_INCREF(const_str_plain_ToshIE);
    const_str_plain_giantbomb = UNSTREAM_STRING_ASCII(&constant_bin[ 1204113 ], 9, 1);
    const_tuple_str_plain_SpiegelIE_str_plain_SpiegelArticleIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_SpiegelIE_str_plain_SpiegelArticleIE_tuple, 0, const_str_plain_SpiegelIE); Py_INCREF(const_str_plain_SpiegelIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_SpiegelIE_str_plain_SpiegelArticleIE_tuple, 1, const_str_plain_SpiegelArticleIE); Py_INCREF(const_str_plain_SpiegelArticleIE);
    const_tuple_str_plain_NTVDeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NTVDeIE_tuple, 0, const_str_plain_NTVDeIE); Py_INCREF(const_str_plain_NTVDeIE);
    const_tuple_str_plain_ClippitIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ClippitIE_tuple, 0, const_str_plain_ClippitIE); Py_INCREF(const_str_plain_ClippitIE);
    const_tuple_str_plain_StreamcloudIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_StreamcloudIE_tuple, 0, const_str_plain_StreamcloudIE); Py_INCREF(const_str_plain_StreamcloudIE);
    const_str_plain_twitcasting = UNSTREAM_STRING_ASCII(&constant_bin[ 1204122 ], 11, 1);
    const_str_digest_47f8976ec65784db88447db04386ca84 = UNSTREAM_STRING_ASCII(&constant_bin[ 1204133 ], 109, 0);
    const_tuple_str_plain_AudiMediaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AudiMediaIE_tuple, 0, const_str_plain_AudiMediaIE); Py_INCREF(const_str_plain_AudiMediaIE);
    const_str_plain_npr = UNSTREAM_STRING_ASCII(&constant_bin[ 586849 ], 3, 1);
    const_tuple_str_plain_NocoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NocoIE_tuple, 0, const_str_plain_NocoIE); Py_INCREF(const_str_plain_NocoIE);
    const_str_plain_cinemax = UNSTREAM_STRING_ASCII(&constant_bin[ 1039595 ], 7, 1);
    const_str_plain_comedycentral = UNSTREAM_STRING_ASCII(&constant_bin[ 1057317 ], 13, 1);
    const_str_plain_morningstar = UNSTREAM_STRING_ASCII(&constant_bin[ 1204242 ], 11, 1);
    const_tuple_str_plain_BioBioChileTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BioBioChileTVIE_tuple, 0, const_str_plain_BioBioChileTVIE); Py_INCREF(const_str_plain_BioBioChileTVIE);
    const_str_plain_philharmoniedeparis = UNSTREAM_STRING_ASCII(&constant_bin[ 1204253 ], 19, 1);
    const_str_plain_ketnet = UNSTREAM_STRING_ASCII(&constant_bin[ 1001299 ], 6, 1);
    const_tuple_str_plain_EpornerIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EpornerIE_tuple, 0, const_str_plain_EpornerIE); Py_INCREF(const_str_plain_EpornerIE);
    const_str_plain_watchbox = UNSTREAM_STRING_ASCII(&constant_bin[ 1204272 ], 8, 1);
    const_str_plain_bigflix = UNSTREAM_STRING_ASCII(&constant_bin[ 952694 ], 7, 1);
    const_tuple_str_plain_VestiIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VestiIE_tuple, 0, const_str_plain_VestiIE); Py_INCREF(const_str_plain_VestiIE);
    const_tuple_str_plain_VODPlatformIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VODPlatformIE_tuple, 0, const_str_plain_VODPlatformIE); Py_INCREF(const_str_plain_VODPlatformIE);
    const_tuple_str_plain_XboxClipsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_XboxClipsIE_tuple, 0, const_str_plain_XboxClipsIE); Py_INCREF(const_str_plain_XboxClipsIE);
    const_tuple_str_plain_CharlieRoseIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CharlieRoseIE_tuple, 0, const_str_plain_CharlieRoseIE); Py_INCREF(const_str_plain_CharlieRoseIE);
    const_str_plain_yourupload = UNSTREAM_STRING_ASCII(&constant_bin[ 1204280 ], 10, 1);
    const_str_plain_screencastomatic = UNSTREAM_STRING_ASCII(&constant_bin[ 1204290 ], 16, 1);
    const_tuple_str_plain_WebcasterIE_str_plain_WebcasterFeedIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_WebcasterIE_str_plain_WebcasterFeedIE_tuple, 0, const_str_plain_WebcasterIE); Py_INCREF(const_str_plain_WebcasterIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_WebcasterIE_str_plain_WebcasterFeedIE_tuple, 1, const_str_plain_WebcasterFeedIE); Py_INCREF(const_str_plain_WebcasterFeedIE);
    const_tuple_str_plain_HistoricFilmsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HistoricFilmsIE_tuple, 0, const_str_plain_HistoricFilmsIE); Py_INCREF(const_str_plain_HistoricFilmsIE);
    const_tuple_str_plain_TF1IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TF1IE_tuple, 0, const_str_plain_TF1IE); Py_INCREF(const_str_plain_TF1IE);
    const_tuple_str_plain_SoundgasmIE_str_plain_SoundgasmProfileIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_SoundgasmIE_str_plain_SoundgasmProfileIE_tuple, 0, const_str_plain_SoundgasmIE); Py_INCREF(const_str_plain_SoundgasmIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_SoundgasmIE_str_plain_SoundgasmProfileIE_tuple, 1, const_str_plain_SoundgasmProfileIE); Py_INCREF(const_str_plain_SoundgasmProfileIE);
    const_tuple_str_plain_CanvasIE_str_plain_CanvasEenIE_str_plain_VrtNUIE_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_CanvasIE_str_plain_CanvasEenIE_str_plain_VrtNUIE_tuple, 0, const_str_plain_CanvasIE); Py_INCREF(const_str_plain_CanvasIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_CanvasIE_str_plain_CanvasEenIE_str_plain_VrtNUIE_tuple, 1, const_str_plain_CanvasEenIE); Py_INCREF(const_str_plain_CanvasEenIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_CanvasIE_str_plain_CanvasEenIE_str_plain_VrtNUIE_tuple, 2, const_str_plain_VrtNUIE); Py_INCREF(const_str_plain_VrtNUIE);
    const_str_plain_ellentube = UNSTREAM_STRING_ASCII(&constant_bin[ 1184199 ], 9, 1);
    const_tuple_ef58271ad2456395f805d453d2e56d92_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_ef58271ad2456395f805d453d2e56d92_tuple, 0, const_str_plain_TVPlayIE); Py_INCREF(const_str_plain_TVPlayIE);
    PyTuple_SET_ITEM(const_tuple_ef58271ad2456395f805d453d2e56d92_tuple, 1, const_str_plain_ViafreeIE); Py_INCREF(const_str_plain_ViafreeIE);
    PyTuple_SET_ITEM(const_tuple_ef58271ad2456395f805d453d2e56d92_tuple, 2, const_str_plain_TVPlayHomeIE); Py_INCREF(const_str_plain_TVPlayHomeIE);
    const_str_plain_camdemy = UNSTREAM_STRING_ASCII(&constant_bin[ 991365 ], 7, 1);
    const_tuple_str_plain_CCMAIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CCMAIE_tuple, 0, const_str_plain_CCMAIE); Py_INCREF(const_str_plain_CCMAIE);
    const_tuple_str_plain_NormalbootsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NormalbootsIE_tuple, 0, const_str_plain_NormalbootsIE); Py_INCREF(const_str_plain_NormalbootsIE);
    const_str_plain_presstv = UNSTREAM_STRING_ASCII(&constant_bin[ 1204306 ], 7, 1);
    const_tuple_str_plain_MySpassIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MySpassIE_tuple, 0, const_str_plain_MySpassIE); Py_INCREF(const_str_plain_MySpassIE);
    const_tuple_str_plain_ClubicIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ClubicIE_tuple, 0, const_str_plain_ClubicIE); Py_INCREF(const_str_plain_ClubicIE);
    const_tuple_str_plain_Sport5IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Sport5IE_tuple, 0, const_str_plain_Sport5IE); Py_INCREF(const_str_plain_Sport5IE);
    const_tuple_str_plain_RadioBremenIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RadioBremenIE_tuple, 0, const_str_plain_RadioBremenIE); Py_INCREF(const_str_plain_RadioBremenIE);
    const_tuple_str_plain_AppleTrailersIE_str_plain_AppleTrailersSectionIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_AppleTrailersIE_str_plain_AppleTrailersSectionIE_tuple, 0, const_str_plain_AppleTrailersIE); Py_INCREF(const_str_plain_AppleTrailersIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_AppleTrailersIE_str_plain_AppleTrailersSectionIE_tuple, 1, const_str_plain_AppleTrailersSectionIE); Py_INCREF(const_str_plain_AppleTrailersSectionIE);
    const_str_plain_firsttv = UNSTREAM_STRING_ASCII(&constant_bin[ 1204313 ], 7, 1);
    const_tuple_str_plain_MorningstarIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MorningstarIE_tuple, 0, const_str_plain_MorningstarIE); Py_INCREF(const_str_plain_MorningstarIE);
    const_tuple_str_plain_HowcastIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_HowcastIE_tuple, 0, const_str_plain_HowcastIE); Py_INCREF(const_str_plain_HowcastIE);
    const_str_plain_lenta = UNSTREAM_STRING_ASCII(&constant_bin[ 1174831 ], 5, 1);
    const_tuple_str_plain_LiveJournalIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LiveJournalIE_tuple, 0, const_str_plain_LiveJournalIE); Py_INCREF(const_str_plain_LiveJournalIE);
    const_tuple_str_plain_GaiaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GaiaIE_tuple, 0, const_str_plain_GaiaIE); Py_INCREF(const_str_plain_GaiaIE);
    const_tuple_str_plain_DLiveVODIE_str_plain_DLiveStreamIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_DLiveVODIE_str_plain_DLiveStreamIE_tuple, 0, const_str_plain_DLiveVODIE); Py_INCREF(const_str_plain_DLiveVODIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_DLiveVODIE_str_plain_DLiveStreamIE_tuple, 1, const_str_plain_DLiveStreamIE); Py_INCREF(const_str_plain_DLiveStreamIE);
    const_str_plain_pinkbike = UNSTREAM_STRING_ASCII(&constant_bin[ 1204320 ], 8, 1);
    const_tuple_str_plain_WebOfStoriesIE_str_plain_WebOfStoriesPlaylistIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_WebOfStoriesIE_str_plain_WebOfStoriesPlaylistIE_tuple, 0, const_str_plain_WebOfStoriesIE); Py_INCREF(const_str_plain_WebOfStoriesIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_WebOfStoriesIE_str_plain_WebOfStoriesPlaylistIE_tuple, 1, const_str_plain_WebOfStoriesPlaylistIE); Py_INCREF(const_str_plain_WebOfStoriesPlaylistIE);
    const_tuple_68575a65b37001279b95f523a7db12ca_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_68575a65b37001279b95f523a7db12ca_tuple, 0, const_str_plain_FourTubeIE); Py_INCREF(const_str_plain_FourTubeIE);
    PyTuple_SET_ITEM(const_tuple_68575a65b37001279b95f523a7db12ca_tuple, 1, const_str_plain_PornTubeIE); Py_INCREF(const_str_plain_PornTubeIE);
    PyTuple_SET_ITEM(const_tuple_68575a65b37001279b95f523a7db12ca_tuple, 2, const_str_plain_PornerBrosIE); Py_INCREF(const_str_plain_PornerBrosIE);
    PyTuple_SET_ITEM(const_tuple_68575a65b37001279b95f523a7db12ca_tuple, 3, const_str_plain_FuxIE); Py_INCREF(const_str_plain_FuxIE);
    const_str_plain_telecinco = UNSTREAM_STRING_ASCII(&constant_bin[ 1204328 ], 9, 1);
    const_str_plain_ruutu = UNSTREAM_STRING_ASCII(&constant_bin[ 1204337 ], 5, 1);
    const_str_plain_tele5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1204342 ], 5, 1);
    const_str_plain_coub = UNSTREAM_STRING_ASCII(&constant_bin[ 1106671 ], 4, 1);
    const_tuple_dfb2abcf7044378b82c50c23596fc9c3_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_dfb2abcf7044378b82c50c23596fc9c3_tuple, 0, const_str_plain_RTVEALaCartaIE); Py_INCREF(const_str_plain_RTVEALaCartaIE);
    PyTuple_SET_ITEM(const_tuple_dfb2abcf7044378b82c50c23596fc9c3_tuple, 1, const_str_plain_RTVELiveIE); Py_INCREF(const_str_plain_RTVELiveIE);
    PyTuple_SET_ITEM(const_tuple_dfb2abcf7044378b82c50c23596fc9c3_tuple, 2, const_str_plain_RTVEInfantilIE); Py_INCREF(const_str_plain_RTVEInfantilIE);
    PyTuple_SET_ITEM(const_tuple_dfb2abcf7044378b82c50c23596fc9c3_tuple, 3, const_str_plain_RTVELiveIE); Py_INCREF(const_str_plain_RTVELiveIE);
    PyTuple_SET_ITEM(const_tuple_dfb2abcf7044378b82c50c23596fc9c3_tuple, 4, const_str_plain_RTVETelevisionIE); Py_INCREF(const_str_plain_RTVETelevisionIE);
    const_tuple_str_plain_YandexDiskIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_YandexDiskIE_tuple, 0, const_str_plain_YandexDiskIE); Py_INCREF(const_str_plain_YandexDiskIE);
    const_tuple_str_plain_CNBCIE_str_plain_CNBCVideoIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_CNBCIE_str_plain_CNBCVideoIE_tuple, 0, const_str_plain_CNBCIE); Py_INCREF(const_str_plain_CNBCIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_CNBCIE_str_plain_CNBCVideoIE_tuple, 1, const_str_plain_CNBCVideoIE); Py_INCREF(const_str_plain_CNBCVideoIE);
    const_str_plain_servus = UNSTREAM_STRING_ASCII(&constant_bin[ 1204347 ], 6, 1);
    const_tuple_str_plain_TBSIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TBSIE_tuple, 0, const_str_plain_TBSIE); Py_INCREF(const_str_plain_TBSIE);
    const_str_plain_heise = UNSTREAM_STRING_ASCII(&constant_bin[ 1204353 ], 5, 1);
    const_tuple_str_plain_TinyPicIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TinyPicIE_tuple, 0, const_str_plain_TinyPicIE); Py_INCREF(const_str_plain_TinyPicIE);
    const_str_plain_espn = UNSTREAM_STRING_ASCII(&constant_bin[ 1192857 ], 4, 1);
    const_tuple_str_plain_MyVidsterIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MyVidsterIE_tuple, 0, const_str_plain_MyVidsterIE); Py_INCREF(const_str_plain_MyVidsterIE);
    const_tuple_str_plain_CoubIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CoubIE_tuple, 0, const_str_plain_CoubIE); Py_INCREF(const_str_plain_CoubIE);
    const_tuple_str_plain_USATodayIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_USATodayIE_tuple, 0, const_str_plain_USATodayIE); Py_INCREF(const_str_plain_USATodayIE);
    const_tuple_str_plain_SkylineWebcamsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SkylineWebcamsIE_tuple, 0, const_str_plain_SkylineWebcamsIE); Py_INCREF(const_str_plain_SkylineWebcamsIE);
    const_str_plain_tvland = UNSTREAM_STRING_ASCII(&constant_bin[ 1204358 ], 6, 1);
    const_tuple_str_plain_ToonGogglesIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ToonGogglesIE_tuple, 0, const_str_plain_ToonGogglesIE); Py_INCREF(const_str_plain_ToonGogglesIE);
    const_str_plain_beeg = UNSTREAM_STRING_ASCII(&constant_bin[ 947574 ], 4, 1);
    const_tuple_str_plain_DotsubIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DotsubIE_tuple, 0, const_str_plain_DotsubIE); Py_INCREF(const_str_plain_DotsubIE);
    const_tuple_str_plain_ExtremeTubeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ExtremeTubeIE_tuple, 0, const_str_plain_ExtremeTubeIE); Py_INCREF(const_str_plain_ExtremeTubeIE);
    const_tuple_08d3cedaa7b24ca90f7ee93cc9388d48_tuple = PyTuple_New(8);
    PyTuple_SET_ITEM(const_tuple_08d3cedaa7b24ca90f7ee93cc9388d48_tuple, 0, const_str_plain_FranceTVIE); Py_INCREF(const_str_plain_FranceTVIE);
    PyTuple_SET_ITEM(const_tuple_08d3cedaa7b24ca90f7ee93cc9388d48_tuple, 1, const_str_plain_FranceTVSiteIE); Py_INCREF(const_str_plain_FranceTVSiteIE);
    PyTuple_SET_ITEM(const_tuple_08d3cedaa7b24ca90f7ee93cc9388d48_tuple, 2, const_str_plain_FranceTVEmbedIE); Py_INCREF(const_str_plain_FranceTVEmbedIE);
    PyTuple_SET_ITEM(const_tuple_08d3cedaa7b24ca90f7ee93cc9388d48_tuple, 3, const_str_plain_FranceTVInfoIE); Py_INCREF(const_str_plain_FranceTVInfoIE);
    PyTuple_SET_ITEM(const_tuple_08d3cedaa7b24ca90f7ee93cc9388d48_tuple, 4, const_str_plain_FranceTVInfoSportIE); Py_INCREF(const_str_plain_FranceTVInfoSportIE);
    PyTuple_SET_ITEM(const_tuple_08d3cedaa7b24ca90f7ee93cc9388d48_tuple, 5, const_str_plain_FranceTVJeunesseIE); Py_INCREF(const_str_plain_FranceTVJeunesseIE);
    PyTuple_SET_ITEM(const_tuple_08d3cedaa7b24ca90f7ee93cc9388d48_tuple, 6, const_str_plain_GenerationWhatIE); Py_INCREF(const_str_plain_GenerationWhatIE);
    PyTuple_SET_ITEM(const_tuple_08d3cedaa7b24ca90f7ee93cc9388d48_tuple, 7, const_str_plain_CultureboxIE); Py_INCREF(const_str_plain_CultureboxIE);
    const_tuple_str_plain_MmsIE_str_plain_RtmpIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_MmsIE_str_plain_RtmpIE_tuple, 0, const_str_plain_MmsIE); Py_INCREF(const_str_plain_MmsIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_MmsIE_str_plain_RtmpIE_tuple, 1, const_str_plain_RtmpIE); Py_INCREF(const_str_plain_RtmpIE);
    const_tuple_str_plain_VeeHDIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VeeHDIE_tuple, 0, const_str_plain_VeeHDIE); Py_INCREF(const_str_plain_VeeHDIE);
    const_str_plain_tonline = UNSTREAM_STRING_ASCII(&constant_bin[ 1204364 ], 7, 1);
    const_str_plain_reverbnation = UNSTREAM_STRING_ASCII(&constant_bin[ 1204371 ], 12, 1);
    const_str_plain_iwara = UNSTREAM_STRING_ASCII(&constant_bin[ 913260 ], 5, 1);
    const_str_plain_popcorntimes = UNSTREAM_STRING_ASCII(&constant_bin[ 1204383 ], 12, 1);
    const_tuple_9fcf83477f6d1e9d332fec5ed8f42fa0_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_9fcf83477f6d1e9d332fec5ed8f42fa0_tuple, 0, const_str_plain_ArteTVPlus7IE); Py_INCREF(const_str_plain_ArteTVPlus7IE);
    PyTuple_SET_ITEM(const_tuple_9fcf83477f6d1e9d332fec5ed8f42fa0_tuple, 1, const_str_plain_ArteTVEmbedIE); Py_INCREF(const_str_plain_ArteTVEmbedIE);
    PyTuple_SET_ITEM(const_tuple_9fcf83477f6d1e9d332fec5ed8f42fa0_tuple, 2, const_str_plain_ArteTVPlaylistIE); Py_INCREF(const_str_plain_ArteTVPlaylistIE);
    const_tuple_fe77aa66350a8be87a6c8fcf71ccaa21_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_fe77aa66350a8be87a6c8fcf71ccaa21_tuple, 0, const_str_plain_LivestreamIE); Py_INCREF(const_str_plain_LivestreamIE);
    PyTuple_SET_ITEM(const_tuple_fe77aa66350a8be87a6c8fcf71ccaa21_tuple, 1, const_str_plain_LivestreamOriginalIE); Py_INCREF(const_str_plain_LivestreamOriginalIE);
    PyTuple_SET_ITEM(const_tuple_fe77aa66350a8be87a6c8fcf71ccaa21_tuple, 2, const_str_plain_LivestreamShortenerIE); Py_INCREF(const_str_plain_LivestreamShortenerIE);
    const_str_plain_bellmedia = UNSTREAM_STRING_ASCII(&constant_bin[ 949101 ], 9, 1);
    const_tuple_str_plain_TassIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TassIE_tuple, 0, const_str_plain_TassIE); Py_INCREF(const_str_plain_TassIE);
    const_str_plain_abc = UNSTREAM_STRING_ASCII(&constant_bin[ 598551 ], 3, 1);
    const_tuple_str_plain_AlJazeeraIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AlJazeeraIE_tuple, 0, const_str_plain_AlJazeeraIE); Py_INCREF(const_str_plain_AlJazeeraIE);
    const_str_plain_lemonde = UNSTREAM_STRING_ASCII(&constant_bin[ 1204395 ], 7, 1);
    const_tuple_str_plain_VideofyMeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VideofyMeIE_tuple, 0, const_str_plain_VideofyMeIE); Py_INCREF(const_str_plain_VideofyMeIE);
    const_str_plain_ceskatelevize = UNSTREAM_STRING_ASCII(&constant_bin[ 1027862 ], 13, 1);
    const_tuple_str_plain_VyboryMosIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VyboryMosIE_tuple, 0, const_str_plain_VyboryMosIE); Py_INCREF(const_str_plain_VyboryMosIE);
    const_str_plain_matchtv = UNSTREAM_STRING_ASCII(&constant_bin[ 1204402 ], 7, 1);
    const_str_plain_tbs = UNSTREAM_STRING_ASCII(&constant_bin[ 1204409 ], 3, 1);
    const_str_plain_sztvhu = UNSTREAM_STRING_ASCII(&constant_bin[ 1204412 ], 6, 1);
    const_tuple_str_plain_MofosexIE_str_plain_MofosexEmbedIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_MofosexIE_str_plain_MofosexEmbedIE_tuple, 0, const_str_plain_MofosexIE); Py_INCREF(const_str_plain_MofosexIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_MofosexIE_str_plain_MofosexEmbedIE_tuple, 1, const_str_plain_MofosexEmbedIE); Py_INCREF(const_str_plain_MofosexEmbedIE);
    const_tuple_str_plain_BostonGlobeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BostonGlobeIE_tuple, 0, const_str_plain_BostonGlobeIE); Py_INCREF(const_str_plain_BostonGlobeIE);
    const_tuple_str_plain_PodomaticIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PodomaticIE_tuple, 0, const_str_plain_PodomaticIE); Py_INCREF(const_str_plain_PodomaticIE);
    const_str_plain_ciscolive = UNSTREAM_STRING_ASCII(&constant_bin[ 1040181 ], 9, 1);
    const_str_plain_xiami = UNSTREAM_STRING_ASCII(&constant_bin[ 1204418 ], 5, 1);
    const_tuple_str_plain_NaverIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NaverIE_tuple, 0, const_str_plain_NaverIE); Py_INCREF(const_str_plain_NaverIE);
    const_tuple_str_plain_CamModelsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CamModelsIE_tuple, 0, const_str_plain_CamModelsIE); Py_INCREF(const_str_plain_CamModelsIE);
    const_str_plain_pornotube = UNSTREAM_STRING_ASCII(&constant_bin[ 1204423 ], 9, 1);
    const_tuple_str_plain_AudioBoomIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AudioBoomIE_tuple, 0, const_str_plain_AudioBoomIE); Py_INCREF(const_str_plain_AudioBoomIE);
    const_tuple_str_plain_SportDeutschlandIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SportDeutschlandIE_tuple, 0, const_str_plain_SportDeutschlandIE); Py_INCREF(const_str_plain_SportDeutschlandIE);
    const_str_plain_voot = UNSTREAM_STRING_ASCII(&constant_bin[ 1204432 ], 4, 1);
    const_str_plain_atttechchannel = UNSTREAM_STRING_ASCII(&constant_bin[ 914845 ], 14, 1);
    const_str_plain_ruv = UNSTREAM_STRING_ASCII(&constant_bin[ 1204436 ], 3, 1);
    const_tuple_cc6c8f0817962c99f8c6ba99274798d3_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_cc6c8f0817962c99f8c6ba99274798d3_tuple, 0, const_str_plain_YouNowLiveIE); Py_INCREF(const_str_plain_YouNowLiveIE);
    PyTuple_SET_ITEM(const_tuple_cc6c8f0817962c99f8c6ba99274798d3_tuple, 1, const_str_plain_YouNowChannelIE); Py_INCREF(const_str_plain_YouNowChannelIE);
    PyTuple_SET_ITEM(const_tuple_cc6c8f0817962c99f8c6ba99274798d3_tuple, 2, const_str_plain_YouNowMomentIE); Py_INCREF(const_str_plain_YouNowMomentIE);
    const_tuple_str_plain_TeachingChannelIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TeachingChannelIE_tuple, 0, const_str_plain_TeachingChannelIE); Py_INCREF(const_str_plain_TeachingChannelIE);
    const_tuple_str_plain_LiTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LiTVIE_tuple, 0, const_str_plain_LiTVIE); Py_INCREF(const_str_plain_LiTVIE);
    const_str_plain_adn = UNSTREAM_STRING_ASCII(&constant_bin[ 834884 ], 3, 1);
    const_tuple_str_plain_GoshgayIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GoshgayIE_tuple, 0, const_str_plain_GoshgayIE); Py_INCREF(const_str_plain_GoshgayIE);
    const_str_plain_umg = UNSTREAM_STRING_ASCII(&constant_bin[ 1204439 ], 3, 1);
    const_tuple_str_plain_AirMozillaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AirMozillaIE_tuple, 0, const_str_plain_AirMozillaIE); Py_INCREF(const_str_plain_AirMozillaIE);
    const_tuple_str_plain_AudiomackIE_str_plain_AudiomackAlbumIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_AudiomackIE_str_plain_AudiomackAlbumIE_tuple, 0, const_str_plain_AudiomackIE); Py_INCREF(const_str_plain_AudiomackIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_AudiomackIE_str_plain_AudiomackAlbumIE_tuple, 1, const_str_plain_AudiomackAlbumIE); Py_INCREF(const_str_plain_AudiomackAlbumIE);
    const_str_plain_ondemandkorea = UNSTREAM_STRING_ASCII(&constant_bin[ 1204442 ], 13, 1);
    const_tuple_str_plain_DemocracynowIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DemocracynowIE_tuple, 0, const_str_plain_DemocracynowIE); Py_INCREF(const_str_plain_DemocracynowIE);
    const_str_plain_nfl = UNSTREAM_STRING_ASCII(&constant_bin[ 10921 ], 3, 1);
    const_tuple_str_plain_RockstarGamesIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RockstarGamesIE_tuple, 0, const_str_plain_RockstarGamesIE); Py_INCREF(const_str_plain_RockstarGamesIE);
    const_str_plain_fxnetworks = UNSTREAM_STRING_ASCII(&constant_bin[ 1204455 ], 10, 1);
    const_tuple_str_plain_EroProfileIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EroProfileIE_tuple, 0, const_str_plain_EroProfileIE); Py_INCREF(const_str_plain_EroProfileIE);
    const_str_plain_usatoday = UNSTREAM_STRING_ASCII(&constant_bin[ 1204465 ], 8, 1);
    const_str_plain_yourporn = UNSTREAM_STRING_ASCII(&constant_bin[ 1204473 ], 8, 1);
    const_str_plain_radiojavan = UNSTREAM_STRING_ASCII(&constant_bin[ 1204481 ], 10, 1);
    const_tuple_ece414e04b68e727a8bdc98c860e1642_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_ece414e04b68e727a8bdc98c860e1642_tuple, 0, const_str_plain_XHamsterIE); Py_INCREF(const_str_plain_XHamsterIE);
    PyTuple_SET_ITEM(const_tuple_ece414e04b68e727a8bdc98c860e1642_tuple, 1, const_str_plain_XHamsterEmbedIE); Py_INCREF(const_str_plain_XHamsterEmbedIE);
    PyTuple_SET_ITEM(const_tuple_ece414e04b68e727a8bdc98c860e1642_tuple, 2, const_str_plain_XHamsterUserIE); Py_INCREF(const_str_plain_XHamsterUserIE);
    const_tuple_str_plain_SeekerIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SeekerIE_tuple, 0, const_str_plain_SeekerIE); Py_INCREF(const_str_plain_SeekerIE);
    const_tuple_b905a6975b5cf811cdb9f48650b5e3e3_tuple = PyTuple_New(4);
    PyTuple_SET_ITEM(const_tuple_b905a6975b5cf811cdb9f48650b5e3e3_tuple, 0, const_str_plain_PornHubIE); Py_INCREF(const_str_plain_PornHubIE);
    PyTuple_SET_ITEM(const_tuple_b905a6975b5cf811cdb9f48650b5e3e3_tuple, 1, const_str_plain_PornHubUserIE); Py_INCREF(const_str_plain_PornHubUserIE);
    PyTuple_SET_ITEM(const_tuple_b905a6975b5cf811cdb9f48650b5e3e3_tuple, 2, const_str_plain_PornHubPagedVideoListIE); Py_INCREF(const_str_plain_PornHubPagedVideoListIE);
    PyTuple_SET_ITEM(const_tuple_b905a6975b5cf811cdb9f48650b5e3e3_tuple, 3, const_str_plain_PornHubUserVideosUploadIE); Py_INCREF(const_str_plain_PornHubUserVideosUploadIE);
    const_str_plain_echomsk = UNSTREAM_STRING_ASCII(&constant_bin[ 1177661 ], 7, 1);
    const_str_plain_urort = UNSTREAM_STRING_ASCII(&constant_bin[ 1204491 ], 5, 1);
    const_tuple_str_plain_ReverbNationIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ReverbNationIE_tuple, 0, const_str_plain_ReverbNationIE); Py_INCREF(const_str_plain_ReverbNationIE);
    const_str_plain_kankan = UNSTREAM_STRING_ASCII(&constant_bin[ 1204496 ], 6, 1);
    const_tuple_str_plain_LyndaIE_str_plain_LyndaCourseIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_LyndaIE_str_plain_LyndaCourseIE_tuple, 0, const_str_plain_LyndaIE); Py_INCREF(const_str_plain_LyndaIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_LyndaIE_str_plain_LyndaCourseIE_tuple, 1, const_str_plain_LyndaCourseIE); Py_INCREF(const_str_plain_LyndaCourseIE);
    const_tuple_str_plain_DiscoveryVRIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DiscoveryVRIE_tuple, 0, const_str_plain_DiscoveryVRIE); Py_INCREF(const_str_plain_DiscoveryVRIE);
    const_tuple_str_plain_SlutloadIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SlutloadIE_tuple, 0, const_str_plain_SlutloadIE); Py_INCREF(const_str_plain_SlutloadIE);
    const_tuple_str_plain_PopcornTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PopcornTVIE_tuple, 0, const_str_plain_PopcornTVIE); Py_INCREF(const_str_plain_PopcornTVIE);
    const_tuple_str_plain_FczenitIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FczenitIE_tuple, 0, const_str_plain_FczenitIE); Py_INCREF(const_str_plain_FczenitIE);
    const_tuple_str_plain_Ku6IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Ku6IE_tuple, 0, const_str_plain_Ku6IE); Py_INCREF(const_str_plain_Ku6IE);
    const_tuple_str_plain_FreshLiveIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FreshLiveIE_tuple, 0, const_str_plain_FreshLiveIE); Py_INCREF(const_str_plain_FreshLiveIE);
    const_tuple_str_plain_TheSceneIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TheSceneIE_tuple, 0, const_str_plain_TheSceneIE); Py_INCREF(const_str_plain_TheSceneIE);
    const_tuple_str_plain_VineIE_str_plain_VineUserIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_VineIE_str_plain_VineUserIE_tuple, 0, const_str_plain_VineIE); Py_INCREF(const_str_plain_VineIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_VineIE_str_plain_VineUserIE_tuple, 1, const_str_plain_VineUserIE); Py_INCREF(const_str_plain_VineUserIE);
    const_tuple_str_plain_FranceInterIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FranceInterIE_tuple, 0, const_str_plain_FranceInterIE); Py_INCREF(const_str_plain_FranceInterIE);
    const_tuple_str_plain_PhoenixIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PhoenixIE_tuple, 0, const_str_plain_PhoenixIE); Py_INCREF(const_str_plain_PhoenixIE);
    const_tuple_str_plain_NovaEmbedIE_str_plain_NovaIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_NovaEmbedIE_str_plain_NovaIE_tuple, 0, const_str_plain_NovaEmbedIE); Py_INCREF(const_str_plain_NovaEmbedIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_NovaEmbedIE_str_plain_NovaIE_tuple, 1, const_str_plain_NovaIE); Py_INCREF(const_str_plain_NovaIE);
    const_str_plain_screencast = UNSTREAM_STRING_ASCII(&constant_bin[ 1204290 ], 10, 1);
    const_str_plain_tv2dk = UNSTREAM_STRING_ASCII(&constant_bin[ 1204502 ], 5, 1);
    const_str_plain_miomio = UNSTREAM_STRING_ASCII(&constant_bin[ 1204507 ], 6, 1);
    const_tuple_str_plain_NprIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NprIE_tuple, 0, const_str_plain_NprIE); Py_INCREF(const_str_plain_NprIE);
    const_str_plain_academicearth = UNSTREAM_STRING_ASCII(&constant_bin[ 830821 ], 13, 1);
    const_str_plain_lci = UNSTREAM_STRING_ASCII(&constant_bin[ 789421 ], 3, 1);
    const_tuple_9a7b0581322b4a064144df9fbe2bd89a_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_9a7b0581322b4a064144df9fbe2bd89a_tuple, 0, const_str_plain_InstagramIE); Py_INCREF(const_str_plain_InstagramIE);
    PyTuple_SET_ITEM(const_tuple_9a7b0581322b4a064144df9fbe2bd89a_tuple, 1, const_str_plain_InstagramUserIE); Py_INCREF(const_str_plain_InstagramUserIE);
    PyTuple_SET_ITEM(const_tuple_9a7b0581322b4a064144df9fbe2bd89a_tuple, 2, const_str_plain_InstagramTagIE); Py_INCREF(const_str_plain_InstagramTagIE);
    const_tuple_f480a63d8cd64d6438a62f2432c0cf37_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_f480a63d8cd64d6438a62f2432c0cf37_tuple, 0, const_str_plain_VideomoreIE); Py_INCREF(const_str_plain_VideomoreIE);
    PyTuple_SET_ITEM(const_tuple_f480a63d8cd64d6438a62f2432c0cf37_tuple, 1, const_str_plain_VideomoreVideoIE); Py_INCREF(const_str_plain_VideomoreVideoIE);
    PyTuple_SET_ITEM(const_tuple_f480a63d8cd64d6438a62f2432c0cf37_tuple, 2, const_str_plain_VideomoreSeasonIE); Py_INCREF(const_str_plain_VideomoreSeasonIE);
    const_tuple_str_plain_PornComIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PornComIE_tuple, 0, const_str_plain_PornComIE); Py_INCREF(const_str_plain_PornComIE);
    const_tuple_str_plain_VidLiiIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VidLiiIE_tuple, 0, const_str_plain_VidLiiIE); Py_INCREF(const_str_plain_VidLiiIE);
    const_tuple_str_plain_EggheadCourseIE_str_plain_EggheadLessonIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_EggheadCourseIE_str_plain_EggheadLessonIE_tuple, 0, const_str_plain_EggheadCourseIE); Py_INCREF(const_str_plain_EggheadCourseIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_EggheadCourseIE_str_plain_EggheadLessonIE_tuple, 1, const_str_plain_EggheadLessonIE); Py_INCREF(const_str_plain_EggheadLessonIE);
    const_str_plain_corus = UNSTREAM_STRING_ASCII(&constant_bin[ 1106121 ], 5, 1);
    const_tuple_str_plain_AMCNetworksIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_AMCNetworksIE_tuple, 0, const_str_plain_AMCNetworksIE); Py_INCREF(const_str_plain_AMCNetworksIE);
    const_tuple_str_plain_LEGOIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LEGOIE_tuple, 0, const_str_plain_LEGOIE); Py_INCREF(const_str_plain_LEGOIE);
    const_tuple_str_plain_Ir90TvIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Ir90TvIE_tuple, 0, const_str_plain_Ir90TvIE); Py_INCREF(const_str_plain_Ir90TvIE);
    const_str_plain_moevideo = UNSTREAM_STRING_ASCII(&constant_bin[ 1204513 ], 8, 1);
    const_tuple_str_plain_LA7IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LA7IE_tuple, 0, const_str_plain_LA7IE); Py_INCREF(const_str_plain_LA7IE);
    const_tuple_str_plain_GoogleSearchIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GoogleSearchIE_tuple, 0, const_str_plain_GoogleSearchIE); Py_INCREF(const_str_plain_GoogleSearchIE);
    const_str_plain_chaturbate = UNSTREAM_STRING_ASCII(&constant_bin[ 993954 ], 10, 1);
    const_str_plain_appleconnect = UNSTREAM_STRING_ASCII(&constant_bin[ 897572 ], 12, 1);
    const_str_plain_walla = UNSTREAM_STRING_ASCII(&constant_bin[ 1204521 ], 5, 1);
    const_tuple_str_plain_IvideonIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_IvideonIE_tuple, 0, const_str_plain_IvideonIE); Py_INCREF(const_str_plain_IvideonIE);
    const_tuple_str_plain_NineCNineMediaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NineCNineMediaIE_tuple, 0, const_str_plain_NineCNineMediaIE); Py_INCREF(const_str_plain_NineCNineMediaIE);
    const_tuple_cca3ac0c452e6fbebbbd8ee06112ebf1_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_cca3ac0c452e6fbebbbd8ee06112ebf1_tuple, 0, const_str_plain_CBSNewsEmbedIE); Py_INCREF(const_str_plain_CBSNewsEmbedIE);
    PyTuple_SET_ITEM(const_tuple_cca3ac0c452e6fbebbbd8ee06112ebf1_tuple, 1, const_str_plain_CBSNewsIE); Py_INCREF(const_str_plain_CBSNewsIE);
    PyTuple_SET_ITEM(const_tuple_cca3ac0c452e6fbebbbd8ee06112ebf1_tuple, 2, const_str_plain_CBSNewsLiveVideoIE); Py_INCREF(const_str_plain_CBSNewsLiveVideoIE);
    const_tuple_str_plain_VRTIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VRTIE_tuple, 0, const_str_plain_VRTIE); Py_INCREF(const_str_plain_VRTIE);
    const_str_plain_ina = UNSTREAM_STRING_ASCII(&constant_bin[ 15135 ], 3, 1);
    const_tuple_str_plain_KanalPlayIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_KanalPlayIE_tuple, 0, const_str_plain_KanalPlayIE); Py_INCREF(const_str_plain_KanalPlayIE);
    const_str_plain_ku6 = UNSTREAM_STRING_ASCII(&constant_bin[ 1204526 ], 3, 1);
    const_tuple_str_plain_BreakIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_BreakIE_tuple, 0, const_str_plain_BreakIE); Py_INCREF(const_str_plain_BreakIE);
    const_tuple_str_plain_UFCTVIE_str_plain_UFCArabiaIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_UFCTVIE_str_plain_UFCArabiaIE_tuple, 0, const_str_plain_UFCTVIE); Py_INCREF(const_str_plain_UFCTVIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_UFCTVIE_str_plain_UFCArabiaIE_tuple, 1, const_str_plain_UFCArabiaIE); Py_INCREF(const_str_plain_UFCArabiaIE);
    const_tuple_str_plain_TruTVIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TruTVIE_tuple, 0, const_str_plain_TruTVIE); Py_INCREF(const_str_plain_TruTVIE);
    const_str_plain_ro220 = UNSTREAM_STRING_ASCII(&constant_bin[ 1204529 ], 5, 1);
    const_tuple_str_plain_LnkGoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LnkGoIE_tuple, 0, const_str_plain_LnkGoIE); Py_INCREF(const_str_plain_LnkGoIE);
    const_tuple_str_plain_ClipRsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ClipRsIE_tuple, 0, const_str_plain_ClipRsIE); Py_INCREF(const_str_plain_ClipRsIE);
    const_str_plain_vodplatform = UNSTREAM_STRING_ASCII(&constant_bin[ 1204534 ], 11, 1);
    const_str_plain_goshgay = UNSTREAM_STRING_ASCII(&constant_bin[ 1204545 ], 7, 1);
    const_str_plain_fczenit = UNSTREAM_STRING_ASCII(&constant_bin[ 1204552 ], 7, 1);
    const_str_plain_scrippsnetworks = UNSTREAM_STRING_ASCII(&constant_bin[ 1204559 ], 15, 1);
    const_tuple_str_plain_RadioFranceIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RadioFranceIE_tuple, 0, const_str_plain_RadioFranceIE); Py_INCREF(const_str_plain_RadioFranceIE);
    const_tuple_str_plain_BellatorIE_str_plain_ParamountNetworkIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_BellatorIE_str_plain_ParamountNetworkIE_tuple, 0, const_str_plain_BellatorIE); Py_INCREF(const_str_plain_BellatorIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_BellatorIE_str_plain_ParamountNetworkIE_tuple, 1, const_str_plain_ParamountNetworkIE); Py_INCREF(const_str_plain_ParamountNetworkIE);
    const_str_plain_nhk = UNSTREAM_STRING_ASCII(&constant_bin[ 1204574 ], 3, 1);
    const_tuple_str_plain_RottenTomatoesIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RottenTomatoesIE_tuple, 0, const_str_plain_RottenTomatoesIE); Py_INCREF(const_str_plain_RottenTomatoesIE);
    const_tuple_str_plain_PearVideoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PearVideoIE_tuple, 0, const_str_plain_PearVideoIE); Py_INCREF(const_str_plain_PearVideoIE);
    const_str_plain_xboxclips = UNSTREAM_STRING_ASCII(&constant_bin[ 1204577 ], 9, 1);
    const_str_plain_uktvplay = UNSTREAM_STRING_ASCII(&constant_bin[ 1204586 ], 8, 1);
    const_str_plain_fusion = UNSTREAM_STRING_ASCII(&constant_bin[ 1204594 ], 6, 1);
    const_tuple_str_plain_CSpanIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CSpanIE_tuple, 0, const_str_plain_CSpanIE); Py_INCREF(const_str_plain_CSpanIE);
    const_str_plain_howcast = UNSTREAM_STRING_ASCII(&constant_bin[ 1204600 ], 7, 1);
    const_tuple_str_plain_UnistraIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_UnistraIE_tuple, 0, const_str_plain_UnistraIE); Py_INCREF(const_str_plain_UnistraIE);
    const_tuple_str_plain_RayWenderlichIE_str_plain_RayWenderlichCourseIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_RayWenderlichIE_str_plain_RayWenderlichCourseIE_tuple, 0, const_str_plain_RayWenderlichIE); Py_INCREF(const_str_plain_RayWenderlichIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_RayWenderlichIE_str_plain_RayWenderlichCourseIE_tuple, 1, const_str_plain_RayWenderlichCourseIE); Py_INCREF(const_str_plain_RayWenderlichCourseIE);
    const_str_plain_bleacherreport = UNSTREAM_STRING_ASCII(&constant_bin[ 964212 ], 14, 1);
    const_str_plain_dispeak = UNSTREAM_STRING_ASCII(&constant_bin[ 1151791 ], 7, 1);
    const_tuple_str_plain_EveryonesMixtapeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EveryonesMixtapeIE_tuple, 0, const_str_plain_EveryonesMixtapeIE); Py_INCREF(const_str_plain_EveryonesMixtapeIE);
    const_str_plain_adobeconnect = UNSTREAM_STRING_ASCII(&constant_bin[ 835495 ], 12, 1);
    const_str_plain_arte = UNSTREAM_STRING_ASCII(&constant_bin[ 701834 ], 4, 1);
    const_str_plain_sport5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1204607 ], 6, 1);
    const_tuple_str_plain_RtlNlIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RtlNlIE_tuple, 0, const_str_plain_RtlNlIE); Py_INCREF(const_str_plain_RtlNlIE);
    const_str_plain_sapo = UNSTREAM_STRING_ASCII(&constant_bin[ 1204613 ], 4, 1);
    const_str_plain_dumpert = UNSTREAM_STRING_ASCII(&constant_bin[ 1169262 ], 7, 1);
    const_tuple_str_plain_EitbIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EitbIE_tuple, 0, const_str_plain_EitbIE); Py_INCREF(const_str_plain_EitbIE);
    const_tuple_str_plain_FacebookIE_str_plain_FacebookPluginsVideoIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_FacebookIE_str_plain_FacebookPluginsVideoIE_tuple, 0, const_str_plain_FacebookIE); Py_INCREF(const_str_plain_FacebookIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_FacebookIE_str_plain_FacebookPluginsVideoIE_tuple, 1, const_str_plain_FacebookPluginsVideoIE); Py_INCREF(const_str_plain_FacebookPluginsVideoIE);
    const_tuple_d1cde9fdc4221cd03beddd558fb84a02_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_d1cde9fdc4221cd03beddd558fb84a02_tuple, 0, const_str_plain_DailymotionIE); Py_INCREF(const_str_plain_DailymotionIE);
    PyTuple_SET_ITEM(const_tuple_d1cde9fdc4221cd03beddd558fb84a02_tuple, 1, const_str_plain_DailymotionPlaylistIE); Py_INCREF(const_str_plain_DailymotionPlaylistIE);
    PyTuple_SET_ITEM(const_tuple_d1cde9fdc4221cd03beddd558fb84a02_tuple, 2, const_str_plain_DailymotionUserIE); Py_INCREF(const_str_plain_DailymotionUserIE);
    const_str_plain_groupon = UNSTREAM_STRING_ASCII(&constant_bin[ 1204617 ], 7, 1);
    const_tuple_str_plain_OnDemandKoreaIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_OnDemandKoreaIE_tuple, 0, const_str_plain_OnDemandKoreaIE); Py_INCREF(const_str_plain_OnDemandKoreaIE);
    const_tuple_str_plain_TelewebionIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TelewebionIE_tuple, 0, const_str_plain_TelewebionIE); Py_INCREF(const_str_plain_TelewebionIE);
    const_tuple_str_plain_CartoonNetworkIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_CartoonNetworkIE_tuple, 0, const_str_plain_CartoonNetworkIE); Py_INCREF(const_str_plain_CartoonNetworkIE);
    const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple = PyTuple_New(10);
    PyTuple_SET_ITEM(const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple, 0, const_str_plain_TwitchVideoIE); Py_INCREF(const_str_plain_TwitchVideoIE);
    PyTuple_SET_ITEM(const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple, 1, const_str_plain_TwitchChapterIE); Py_INCREF(const_str_plain_TwitchChapterIE);
    PyTuple_SET_ITEM(const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple, 2, const_str_plain_TwitchVodIE); Py_INCREF(const_str_plain_TwitchVodIE);
    PyTuple_SET_ITEM(const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple, 3, const_str_plain_TwitchProfileIE); Py_INCREF(const_str_plain_TwitchProfileIE);
    PyTuple_SET_ITEM(const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple, 4, const_str_plain_TwitchAllVideosIE); Py_INCREF(const_str_plain_TwitchAllVideosIE);
    PyTuple_SET_ITEM(const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple, 5, const_str_plain_TwitchUploadsIE); Py_INCREF(const_str_plain_TwitchUploadsIE);
    PyTuple_SET_ITEM(const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple, 6, const_str_plain_TwitchPastBroadcastsIE); Py_INCREF(const_str_plain_TwitchPastBroadcastsIE);
    PyTuple_SET_ITEM(const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple, 7, const_str_plain_TwitchHighlightsIE); Py_INCREF(const_str_plain_TwitchHighlightsIE);
    PyTuple_SET_ITEM(const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple, 8, const_str_plain_TwitchStreamIE); Py_INCREF(const_str_plain_TwitchStreamIE);
    PyTuple_SET_ITEM(const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple, 9, const_str_plain_TwitchClipsIE); Py_INCREF(const_str_plain_TwitchClipsIE);
    const_str_plain_gazeta = UNSTREAM_STRING_ASCII(&constant_bin[ 1204624 ], 6, 1);
    const_str_plain_outsidetv = UNSTREAM_STRING_ASCII(&constant_bin[ 1204630 ], 9, 1);
    const_str_plain_porn91 = UNSTREAM_STRING_ASCII(&constant_bin[ 1204639 ], 6, 1);
    const_str_plain_picarto = UNSTREAM_STRING_ASCII(&constant_bin[ 1204645 ], 7, 1);
    const_tuple_str_plain_ACastIE_str_plain_ACastChannelIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_ACastIE_str_plain_ACastChannelIE_tuple, 0, const_str_plain_ACastIE); Py_INCREF(const_str_plain_ACastIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_ACastIE_str_plain_ACastChannelIE_tuple, 1, const_str_plain_ACastChannelIE); Py_INCREF(const_str_plain_ACastChannelIE);
    const_tuple_str_plain_MangomoloVideoIE_str_plain_MangomoloLiveIE_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_MangomoloVideoIE_str_plain_MangomoloLiveIE_tuple, 0, const_str_plain_MangomoloVideoIE); Py_INCREF(const_str_plain_MangomoloVideoIE);
    PyTuple_SET_ITEM(const_tuple_str_plain_MangomoloVideoIE_str_plain_MangomoloLiveIE_tuple, 1, const_str_plain_MangomoloLiveIE); Py_INCREF(const_str_plain_MangomoloLiveIE);
    const_str_plain_watchindianporn = UNSTREAM_STRING_ASCII(&constant_bin[ 1204652 ], 15, 1);
    const_str_plain_bostonglobe = UNSTREAM_STRING_ASCII(&constant_bin[ 969047 ], 11, 1);
    const_str_plain_audioboom = UNSTREAM_STRING_ASCII(&constant_bin[ 917206 ], 9, 1);
    const_tuple_str_plain_LocalNews8IE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LocalNews8IE_tuple, 0, const_str_plain_LocalNews8IE); Py_INCREF(const_str_plain_LocalNews8IE);
    const_tuple_str_plain_VimpleIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_VimpleIE_tuple, 0, const_str_plain_VimpleIE); Py_INCREF(const_str_plain_VimpleIE);
    const_str_plain_rentv = UNSTREAM_STRING_ASCII(&constant_bin[ 1204667 ], 5, 1);
    const_tuple_str_plain_GolemIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GolemIE_tuple, 0, const_str_plain_GolemIE); Py_INCREF(const_str_plain_GolemIE);
    const_tuple_str_plain_NBAIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NBAIE_tuple, 0, const_str_plain_NBAIE); Py_INCREF(const_str_plain_NBAIE);
    const_tuple_str_plain_GodTubeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_GodTubeIE_tuple, 0, const_str_plain_GodTubeIE); Py_INCREF(const_str_plain_GodTubeIE);
    const_tuple_str_plain_DisneyIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DisneyIE_tuple, 0, const_str_plain_DisneyIE); Py_INCREF(const_str_plain_DisneyIE);
    const_str_plain_nba = UNSTREAM_STRING_ASCII(&constant_bin[ 1020140 ], 3, 1);
    const_tuple_str_plain_DeezerPlaylistIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_DeezerPlaylistIE_tuple, 0, const_str_plain_DeezerPlaylistIE); Py_INCREF(const_str_plain_DeezerPlaylistIE);
    const_tuple_str_plain_MnetIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MnetIE_tuple, 0, const_str_plain_MnetIE); Py_INCREF(const_str_plain_MnetIE);
    const_tuple_str_plain_LRTIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LRTIE_tuple, 0, const_str_plain_LRTIE); Py_INCREF(const_str_plain_LRTIE);
    const_str_plain_miaopai = UNSTREAM_STRING_ASCII(&constant_bin[ 1204672 ], 7, 1);
    const_tuple_str_plain_EsriVideoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_EsriVideoIE_tuple, 0, const_str_plain_EsriVideoIE); Py_INCREF(const_str_plain_EsriVideoIE);
    const_str_plain_ccma = UNSTREAM_STRING_ASCII(&constant_bin[ 1021791 ], 4, 1);
    const_str_plain_twentyfourvideo = UNSTREAM_STRING_ASCII(&constant_bin[ 1204679 ], 15, 1);
    const_tuple_str_plain_JeuxVideoIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_JeuxVideoIE_tuple, 0, const_str_plain_JeuxVideoIE); Py_INCREF(const_str_plain_JeuxVideoIE);
    const_tuple_str_plain_PhilharmonieDeParisIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PhilharmonieDeParisIE_tuple, 0, const_str_plain_PhilharmonieDeParisIE); Py_INCREF(const_str_plain_PhilharmonieDeParisIE);
    const_str_plain_eyedotv = UNSTREAM_STRING_ASCII(&constant_bin[ 1204694 ], 7, 1);
    const_str_plain_cloudy = UNSTREAM_STRING_ASCII(&constant_bin[ 1048645 ], 6, 1);

    constants_created = true;
}

/* Function to verify module private constants for non-corruption. */
#ifndef __NUITKA_NO_ASSERT__
void checkModuleConstants_youtube_dl$extractor$extractors(void) {
    // The module may not have been used at all, then ignore this.
    if (constants_created == false) return;


}
#endif

// The module code objects.
static PyCodeObject *codeobj_a46a74f8c2267393b45d276505dd66c4;

static void createModuleCodeObjects(void) {
    module_filename_obj = const_str_digest_47f8976ec65784db88447db04386ca84;
    codeobj_a46a74f8c2267393b45d276505dd66c4 = MAKE_CODEOBJECT(module_filename_obj, 1, CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_digest_59949d645e844a19b7723f8cf4213fb1, const_tuple_empty, 0, 0, 0);
}

// The module function declarations.


// The module function definitions.


extern PyObject *const_str_plain___compiled__;

extern PyObject *const_str_plain___package__;
extern PyObject *const_str_empty;

#if PYTHON_VERSION >= 300
extern PyObject *const_str_dot;
extern PyObject *const_str_plain___loader__;
#endif

#if PYTHON_VERSION >= 340
extern PyObject *const_str_plain___spec__;
extern PyObject *const_str_plain__initializing;
extern PyObject *const_str_plain_submodule_search_locations;
#endif

extern void _initCompiledCellType();
extern void _initCompiledGeneratorType();
extern void _initCompiledFunctionType();
extern void _initCompiledMethodType();
extern void _initCompiledFrameType();

extern PyTypeObject Nuitka_Loader_Type;

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
// Provide a way to create find a function via its C code and create it back
// in another process, useful for multiprocessing extensions like dill

function_impl_code functable_youtube_dl$extractor$extractors[] = {

    NULL
};

static char const *_reduce_compiled_function_argnames[] = {
    "func",
    NULL
};

static PyObject *_reduce_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    PyObject *func;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "O:reduce_compiled_function", (char **)_reduce_compiled_function_argnames, &func, NULL)) {
        return NULL;
    }

    if (Nuitka_Function_Check(func) == false) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "not a compiled function");
        return NULL;
    }

    struct Nuitka_FunctionObject *function = (struct Nuitka_FunctionObject *)func;

    function_impl_code *current = functable_youtube_dl$extractor$extractors;
    int offset = 0;

    while (*current != NULL) {
        if (*current == function->m_c_code) {
            break;
        }

        current += 1;
        offset += 1;
    }

    if (*current == NULL) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "Cannot find compiled function in module.");
        return NULL;
    }

    PyObject *code_object_desc = PyTuple_New(6);
    PyTuple_SET_ITEM0(code_object_desc, 0, function->m_code_object->co_filename);
    PyTuple_SET_ITEM0(code_object_desc, 1, function->m_code_object->co_name);
    PyTuple_SET_ITEM(code_object_desc, 2, PyLong_FromLong(function->m_code_object->co_firstlineno));
    PyTuple_SET_ITEM0(code_object_desc, 3, function->m_code_object->co_varnames);
    PyTuple_SET_ITEM(code_object_desc, 4, PyLong_FromLong(function->m_code_object->co_argcount));
    PyTuple_SET_ITEM(code_object_desc, 5, PyLong_FromLong(function->m_code_object->co_flags));

    CHECK_OBJECT_DEEP(code_object_desc);

    PyObject *result = PyTuple_New(4);
    PyTuple_SET_ITEM(result, 0, PyLong_FromLong(offset));
    PyTuple_SET_ITEM(result, 1, code_object_desc);
    PyTuple_SET_ITEM0(result, 2, function->m_defaults);
    PyTuple_SET_ITEM0(result, 3, function->m_doc != NULL ? function->m_doc : Py_None);

    CHECK_OBJECT_DEEP(result);

    return result;
}

static PyMethodDef _method_def_reduce_compiled_function = {"reduce_compiled_function", (PyCFunction)_reduce_compiled_function,
                                                           METH_VARARGS | METH_KEYWORDS, NULL};

static char const *_create_compiled_function_argnames[] = {
    "func",
    "code_object_desc",
    "defaults",
    "doc",
    NULL
};


static PyObject *_create_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    CHECK_OBJECT_DEEP(args);

    PyObject *func;
    PyObject *code_object_desc;
    PyObject *defaults;
    PyObject *doc;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "OOOO:create_compiled_function", (char **)_create_compiled_function_argnames, &func, &code_object_desc, &defaults, &doc, NULL)) {
        return NULL;
    }

    int offset = PyLong_AsLong(func);

    if (offset == -1 && ERROR_OCCURRED()) {
        return NULL;
    }

    if (offset > sizeof(functable_youtube_dl$extractor$extractors) || offset < 0) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "Wrong offset for compiled function.");
        return NULL;
    }

    PyObject *filename = PyTuple_GET_ITEM(code_object_desc, 0);
    PyObject *function_name = PyTuple_GET_ITEM(code_object_desc, 1);
    PyObject *line = PyTuple_GET_ITEM(code_object_desc, 2);
    int line_int = PyLong_AsLong(line);
    assert(!ERROR_OCCURRED());

    PyObject *argnames = PyTuple_GET_ITEM(code_object_desc, 3);
    PyObject *arg_count = PyTuple_GET_ITEM(code_object_desc, 4);
    int arg_count_int = PyLong_AsLong(arg_count);
    assert(!ERROR_OCCURRED());
    PyObject *flags = PyTuple_GET_ITEM(code_object_desc, 5);
    int flags_int = PyLong_AsLong(flags);
    assert(!ERROR_OCCURRED());

    PyCodeObject *code_object = MAKE_CODEOBJECT(
        filename,
        line_int,
        flags_int,
        function_name,
        argnames,
        arg_count_int,
        0, // TODO: Missing kw_only_count
        0 // TODO: Missing pos_only_count
    );

    // TODO: More stuff needed for Python3, best to re-order arguments of MAKE_CODEOBJECT.
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        functable_youtube_dl$extractor$extractors[offset],
        code_object->co_name,
#if PYTHON_VERSION >= 300
        NULL, // TODO: Not transferring qualname yet
#endif
        code_object,
        defaults,
#if PYTHON_VERSION >= 300
        NULL, // kwdefaults are done on the outside currently
        NULL, // TODO: Not transferring annotations
#endif
        module_youtube_dl$extractor$extractors,
        doc,
        0
    );

    return (PyObject *)result;
}

static PyMethodDef _method_def_create_compiled_function = {
    "create_compiled_function",
    (PyCFunction)_create_compiled_function,
    METH_VARARGS | METH_KEYWORDS, NULL
};


#endif

// Internal entry point for module code.
PyObject *modulecode_youtube_dl$extractor$extractors(PyObject *module) {
    module_youtube_dl$extractor$extractors = module;

#if defined(_NUITKA_EXE) || PYTHON_VERSION >= 300
    static bool _init_done = false;

    // Modules might be imported repeatedly, which is to be ignored.
    if (_init_done) {
        return module_youtube_dl$extractor$extractors;
    } else {
        _init_done = true;
    }
#endif

#ifdef _NUITKA_MODULE
    // In case of a stand alone extension module, need to call initialization
    // the init here because that's the first and only time we are going to get
    // called here.

    // May have to activate constants blob.
#if defined(_NUITKA_CONSTANTS_FROM_RESOURCE)
    loadConstantsResource();
#endif

    // Initialize the constant values used.
    _initBuiltinModule();
    createGlobalConstants();

    /* Initialize the compiled types of Nuitka. */
    _initCompiledCellType();
    _initCompiledGeneratorType();
    _initCompiledFunctionType();
    _initCompiledMethodType();
    _initCompiledFrameType();

#if PYTHON_VERSION < 300
    _initSlotCompare();
#endif
#if PYTHON_VERSION >= 270
    _initSlotIternext();
#endif

    patchBuiltinModule();
    patchTypeComparison();

    // Enable meta path based loader if not already done.
#ifdef _NUITKA_TRACE
    PRINT_STRING("youtube_dl.extractor.extractors: Calling setupMetaPathBasedLoader().\n");
#endif
    setupMetaPathBasedLoader();

#if PYTHON_VERSION >= 300
    patchInspectModule();
#endif

#endif

    /* The constants only used by this module are created now. */
#ifdef _NUITKA_TRACE
    PRINT_STRING("youtube_dl.extractor.extractors: Calling createModuleConstants().\n");
#endif
    createModuleConstants();

    /* The code objects used by this module are created now. */
#ifdef _NUITKA_TRACE
    PRINT_STRING("youtube_dl.extractor.extractors: Calling createModuleCodeObjects().\n");
#endif
    createModuleCodeObjects();

    // PRINT_STRING("in inityoutube_dl$extractor$extractors\n");

    // Create the module object first. There are no methods initially, all are
    // added dynamically in actual code only.  Also no "__doc__" is initially
    // set at this time, as it could not contain NUL characters this way, they
    // are instead set in early module code.  No "self" for modules, we have no
    // use for it.

    moduledict_youtube_dl$extractor$extractors = MODULE_DICT(module_youtube_dl$extractor$extractors);

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
    {
        PyObject *function_tables = PyObject_GetAttrString((PyObject *)builtin_module, "compiled_function_tables");
        if (function_tables == NULL)
        {
            DROP_ERROR_OCCURRED();
            function_tables = PyDict_New();
        }
        PyObject_SetAttrString((PyObject *)builtin_module, "compiled_function_tables", function_tables);
        PyObject *funcs = PyTuple_New(2);
        PyTuple_SET_ITEM(funcs, 0, PyCFunction_New(&_method_def_reduce_compiled_function, NULL));
        PyTuple_SET_ITEM(funcs, 1, PyCFunction_New(&_method_def_create_compiled_function, NULL));
        PyDict_SetItemString(function_tables, module_full_name, funcs);
    }
#endif

    // Set "__compiled__" to what version information we have.
    UPDATE_STRING_DICT0(
        moduledict_youtube_dl$extractor$extractors,
        (Nuitka_StringObject *)const_str_plain___compiled__,
        Nuitka_dunder_compiled_value
    );

    // Update "__package__" value to what it ought to be.
    {
#if 0
        UPDATE_STRING_DICT0(
            moduledict_youtube_dl$extractor$extractors,
            (Nuitka_StringObject *)const_str_plain___package__,
            const_str_empty
        );
#elif 0
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___name__);

        UPDATE_STRING_DICT0(
            moduledict_youtube_dl$extractor$extractors,
            (Nuitka_StringObject *)const_str_plain___package__,
            module_name
        );
#else

#if PYTHON_VERSION < 300
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___name__);
        char const *module_name_cstr = PyString_AS_STRING(module_name);

        char const *last_dot = strrchr(module_name_cstr, '.');

        if (last_dot != NULL)
        {
            UPDATE_STRING_DICT1(
                moduledict_youtube_dl$extractor$extractors,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyString_FromStringAndSize(module_name_cstr, last_dot - module_name_cstr)
            );
        }
#else
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___name__);
        Py_ssize_t dot_index = PyUnicode_Find(module_name, const_str_dot, 0, PyUnicode_GetLength(module_name), -1);

        if (dot_index != -1)
        {
            UPDATE_STRING_DICT1(
                moduledict_youtube_dl$extractor$extractors,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyUnicode_Substring(module_name, 0, dot_index)
            );
        }
#endif
#endif
    }

    CHECK_OBJECT(module_youtube_dl$extractor$extractors);

    // For deep importing of a module we need to have "__builtins__", so we set
    // it ourselves in the same way than CPython does. Note: This must be done
    // before the frame object is allocated, or else it may fail.

    if (GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___builtins__) == NULL)
    {
        PyObject *value = (PyObject *)builtin_module;

        // Check if main module, not a dict then but the module itself.
#if !defined(_NUITKA_EXE) || !0
        value = PyModule_GetDict(value);
#endif

        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___builtins__, value);
    }

#if PYTHON_VERSION >= 300
    UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___loader__, (PyObject *)&Nuitka_Loader_Type);
#endif

#if PYTHON_VERSION >= 340
// Set the "__spec__" value

#if 0
    // Main modules just get "None" as spec.
    UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___spec__, Py_None);
#else
    // Other modules get a "ModuleSpec" from the standard mechanism.
    {
        PyObject *bootstrap_module = PyImport_ImportModule("importlib._bootstrap");
        CHECK_OBJECT(bootstrap_module);
        PyObject *module_spec_class = PyObject_GetAttrString(bootstrap_module, "ModuleSpec");
        Py_DECREF(bootstrap_module);

        PyObject *args[] = {
            GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___name__),
            (PyObject *)&Nuitka_Loader_Type
        };

        PyObject *spec_value = CALL_FUNCTION_WITH_ARGS2(
            module_spec_class,
            args
        );
        Py_DECREF(module_spec_class);

        // We can assume this to never fail, or else we are in trouble anyway.
        CHECK_OBJECT(spec_value);

// For packages set the submodule search locations as well, even if to empty
// list, so investigating code will consider it a package.
#if 0
        SET_ATTRIBUTE(spec_value, const_str_plain_submodule_search_locations, PyList_New(0));
#endif

// Mark the execution in the "__spec__" value.
        SET_ATTRIBUTE(spec_value, const_str_plain__initializing, Py_True);

        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___spec__, spec_value);
    }
#endif
#endif

    // Temp variables if any
    PyObject *tmp_import_from_100__module = NULL;
    PyObject *tmp_import_from_101__module = NULL;
    PyObject *tmp_import_from_102__module = NULL;
    PyObject *tmp_import_from_103__module = NULL;
    PyObject *tmp_import_from_104__module = NULL;
    PyObject *tmp_import_from_105__module = NULL;
    PyObject *tmp_import_from_106__module = NULL;
    PyObject *tmp_import_from_107__module = NULL;
    PyObject *tmp_import_from_108__module = NULL;
    PyObject *tmp_import_from_109__module = NULL;
    PyObject *tmp_import_from_10__module = NULL;
    PyObject *tmp_import_from_110__module = NULL;
    PyObject *tmp_import_from_111__module = NULL;
    PyObject *tmp_import_from_112__module = NULL;
    PyObject *tmp_import_from_113__module = NULL;
    PyObject *tmp_import_from_114__module = NULL;
    PyObject *tmp_import_from_115__module = NULL;
    PyObject *tmp_import_from_116__module = NULL;
    PyObject *tmp_import_from_117__module = NULL;
    PyObject *tmp_import_from_118__module = NULL;
    PyObject *tmp_import_from_119__module = NULL;
    PyObject *tmp_import_from_11__module = NULL;
    PyObject *tmp_import_from_120__module = NULL;
    PyObject *tmp_import_from_121__module = NULL;
    PyObject *tmp_import_from_122__module = NULL;
    PyObject *tmp_import_from_123__module = NULL;
    PyObject *tmp_import_from_124__module = NULL;
    PyObject *tmp_import_from_125__module = NULL;
    PyObject *tmp_import_from_126__module = NULL;
    PyObject *tmp_import_from_127__module = NULL;
    PyObject *tmp_import_from_128__module = NULL;
    PyObject *tmp_import_from_129__module = NULL;
    PyObject *tmp_import_from_12__module = NULL;
    PyObject *tmp_import_from_130__module = NULL;
    PyObject *tmp_import_from_131__module = NULL;
    PyObject *tmp_import_from_132__module = NULL;
    PyObject *tmp_import_from_133__module = NULL;
    PyObject *tmp_import_from_134__module = NULL;
    PyObject *tmp_import_from_135__module = NULL;
    PyObject *tmp_import_from_136__module = NULL;
    PyObject *tmp_import_from_137__module = NULL;
    PyObject *tmp_import_from_138__module = NULL;
    PyObject *tmp_import_from_139__module = NULL;
    PyObject *tmp_import_from_13__module = NULL;
    PyObject *tmp_import_from_140__module = NULL;
    PyObject *tmp_import_from_141__module = NULL;
    PyObject *tmp_import_from_142__module = NULL;
    PyObject *tmp_import_from_143__module = NULL;
    PyObject *tmp_import_from_144__module = NULL;
    PyObject *tmp_import_from_145__module = NULL;
    PyObject *tmp_import_from_146__module = NULL;
    PyObject *tmp_import_from_147__module = NULL;
    PyObject *tmp_import_from_148__module = NULL;
    PyObject *tmp_import_from_149__module = NULL;
    PyObject *tmp_import_from_14__module = NULL;
    PyObject *tmp_import_from_150__module = NULL;
    PyObject *tmp_import_from_151__module = NULL;
    PyObject *tmp_import_from_152__module = NULL;
    PyObject *tmp_import_from_153__module = NULL;
    PyObject *tmp_import_from_154__module = NULL;
    PyObject *tmp_import_from_155__module = NULL;
    PyObject *tmp_import_from_156__module = NULL;
    PyObject *tmp_import_from_157__module = NULL;
    PyObject *tmp_import_from_158__module = NULL;
    PyObject *tmp_import_from_159__module = NULL;
    PyObject *tmp_import_from_15__module = NULL;
    PyObject *tmp_import_from_160__module = NULL;
    PyObject *tmp_import_from_161__module = NULL;
    PyObject *tmp_import_from_162__module = NULL;
    PyObject *tmp_import_from_163__module = NULL;
    PyObject *tmp_import_from_164__module = NULL;
    PyObject *tmp_import_from_165__module = NULL;
    PyObject *tmp_import_from_166__module = NULL;
    PyObject *tmp_import_from_167__module = NULL;
    PyObject *tmp_import_from_168__module = NULL;
    PyObject *tmp_import_from_169__module = NULL;
    PyObject *tmp_import_from_16__module = NULL;
    PyObject *tmp_import_from_170__module = NULL;
    PyObject *tmp_import_from_171__module = NULL;
    PyObject *tmp_import_from_172__module = NULL;
    PyObject *tmp_import_from_173__module = NULL;
    PyObject *tmp_import_from_174__module = NULL;
    PyObject *tmp_import_from_175__module = NULL;
    PyObject *tmp_import_from_176__module = NULL;
    PyObject *tmp_import_from_177__module = NULL;
    PyObject *tmp_import_from_178__module = NULL;
    PyObject *tmp_import_from_179__module = NULL;
    PyObject *tmp_import_from_17__module = NULL;
    PyObject *tmp_import_from_180__module = NULL;
    PyObject *tmp_import_from_181__module = NULL;
    PyObject *tmp_import_from_182__module = NULL;
    PyObject *tmp_import_from_183__module = NULL;
    PyObject *tmp_import_from_184__module = NULL;
    PyObject *tmp_import_from_185__module = NULL;
    PyObject *tmp_import_from_186__module = NULL;
    PyObject *tmp_import_from_187__module = NULL;
    PyObject *tmp_import_from_188__module = NULL;
    PyObject *tmp_import_from_189__module = NULL;
    PyObject *tmp_import_from_18__module = NULL;
    PyObject *tmp_import_from_190__module = NULL;
    PyObject *tmp_import_from_191__module = NULL;
    PyObject *tmp_import_from_192__module = NULL;
    PyObject *tmp_import_from_193__module = NULL;
    PyObject *tmp_import_from_194__module = NULL;
    PyObject *tmp_import_from_195__module = NULL;
    PyObject *tmp_import_from_196__module = NULL;
    PyObject *tmp_import_from_197__module = NULL;
    PyObject *tmp_import_from_198__module = NULL;
    PyObject *tmp_import_from_199__module = NULL;
    PyObject *tmp_import_from_19__module = NULL;
    PyObject *tmp_import_from_1__module = NULL;
    PyObject *tmp_import_from_200__module = NULL;
    PyObject *tmp_import_from_201__module = NULL;
    PyObject *tmp_import_from_20__module = NULL;
    PyObject *tmp_import_from_21__module = NULL;
    PyObject *tmp_import_from_22__module = NULL;
    PyObject *tmp_import_from_23__module = NULL;
    PyObject *tmp_import_from_24__module = NULL;
    PyObject *tmp_import_from_25__module = NULL;
    PyObject *tmp_import_from_26__module = NULL;
    PyObject *tmp_import_from_27__module = NULL;
    PyObject *tmp_import_from_28__module = NULL;
    PyObject *tmp_import_from_29__module = NULL;
    PyObject *tmp_import_from_2__module = NULL;
    PyObject *tmp_import_from_30__module = NULL;
    PyObject *tmp_import_from_31__module = NULL;
    PyObject *tmp_import_from_32__module = NULL;
    PyObject *tmp_import_from_33__module = NULL;
    PyObject *tmp_import_from_34__module = NULL;
    PyObject *tmp_import_from_35__module = NULL;
    PyObject *tmp_import_from_36__module = NULL;
    PyObject *tmp_import_from_37__module = NULL;
    PyObject *tmp_import_from_38__module = NULL;
    PyObject *tmp_import_from_39__module = NULL;
    PyObject *tmp_import_from_3__module = NULL;
    PyObject *tmp_import_from_40__module = NULL;
    PyObject *tmp_import_from_41__module = NULL;
    PyObject *tmp_import_from_42__module = NULL;
    PyObject *tmp_import_from_43__module = NULL;
    PyObject *tmp_import_from_44__module = NULL;
    PyObject *tmp_import_from_45__module = NULL;
    PyObject *tmp_import_from_46__module = NULL;
    PyObject *tmp_import_from_47__module = NULL;
    PyObject *tmp_import_from_48__module = NULL;
    PyObject *tmp_import_from_49__module = NULL;
    PyObject *tmp_import_from_4__module = NULL;
    PyObject *tmp_import_from_50__module = NULL;
    PyObject *tmp_import_from_51__module = NULL;
    PyObject *tmp_import_from_52__module = NULL;
    PyObject *tmp_import_from_53__module = NULL;
    PyObject *tmp_import_from_54__module = NULL;
    PyObject *tmp_import_from_55__module = NULL;
    PyObject *tmp_import_from_56__module = NULL;
    PyObject *tmp_import_from_57__module = NULL;
    PyObject *tmp_import_from_58__module = NULL;
    PyObject *tmp_import_from_59__module = NULL;
    PyObject *tmp_import_from_5__module = NULL;
    PyObject *tmp_import_from_60__module = NULL;
    PyObject *tmp_import_from_61__module = NULL;
    PyObject *tmp_import_from_62__module = NULL;
    PyObject *tmp_import_from_63__module = NULL;
    PyObject *tmp_import_from_64__module = NULL;
    PyObject *tmp_import_from_65__module = NULL;
    PyObject *tmp_import_from_66__module = NULL;
    PyObject *tmp_import_from_67__module = NULL;
    PyObject *tmp_import_from_68__module = NULL;
    PyObject *tmp_import_from_69__module = NULL;
    PyObject *tmp_import_from_6__module = NULL;
    PyObject *tmp_import_from_70__module = NULL;
    PyObject *tmp_import_from_71__module = NULL;
    PyObject *tmp_import_from_72__module = NULL;
    PyObject *tmp_import_from_73__module = NULL;
    PyObject *tmp_import_from_74__module = NULL;
    PyObject *tmp_import_from_75__module = NULL;
    PyObject *tmp_import_from_76__module = NULL;
    PyObject *tmp_import_from_77__module = NULL;
    PyObject *tmp_import_from_78__module = NULL;
    PyObject *tmp_import_from_79__module = NULL;
    PyObject *tmp_import_from_7__module = NULL;
    PyObject *tmp_import_from_80__module = NULL;
    PyObject *tmp_import_from_81__module = NULL;
    PyObject *tmp_import_from_82__module = NULL;
    PyObject *tmp_import_from_83__module = NULL;
    PyObject *tmp_import_from_84__module = NULL;
    PyObject *tmp_import_from_85__module = NULL;
    PyObject *tmp_import_from_86__module = NULL;
    PyObject *tmp_import_from_87__module = NULL;
    PyObject *tmp_import_from_88__module = NULL;
    PyObject *tmp_import_from_89__module = NULL;
    PyObject *tmp_import_from_8__module = NULL;
    PyObject *tmp_import_from_90__module = NULL;
    PyObject *tmp_import_from_91__module = NULL;
    PyObject *tmp_import_from_92__module = NULL;
    PyObject *tmp_import_from_93__module = NULL;
    PyObject *tmp_import_from_94__module = NULL;
    PyObject *tmp_import_from_95__module = NULL;
    PyObject *tmp_import_from_96__module = NULL;
    PyObject *tmp_import_from_97__module = NULL;
    PyObject *tmp_import_from_98__module = NULL;
    PyObject *tmp_import_from_99__module = NULL;
    PyObject *tmp_import_from_9__module = NULL;
    struct Nuitka_FrameObject *frame_a46a74f8c2267393b45d276505dd66c4;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    bool tmp_result;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;
    PyObject *exception_keeper_type_9;
    PyObject *exception_keeper_value_9;
    PyTracebackObject *exception_keeper_tb_9;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_9;
    PyObject *exception_keeper_type_10;
    PyObject *exception_keeper_value_10;
    PyTracebackObject *exception_keeper_tb_10;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_10;
    PyObject *exception_keeper_type_11;
    PyObject *exception_keeper_value_11;
    PyTracebackObject *exception_keeper_tb_11;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_11;
    PyObject *exception_keeper_type_12;
    PyObject *exception_keeper_value_12;
    PyTracebackObject *exception_keeper_tb_12;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_12;
    PyObject *exception_keeper_type_13;
    PyObject *exception_keeper_value_13;
    PyTracebackObject *exception_keeper_tb_13;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_13;
    PyObject *exception_keeper_type_14;
    PyObject *exception_keeper_value_14;
    PyTracebackObject *exception_keeper_tb_14;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_14;
    PyObject *exception_keeper_type_15;
    PyObject *exception_keeper_value_15;
    PyTracebackObject *exception_keeper_tb_15;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_15;
    PyObject *exception_keeper_type_16;
    PyObject *exception_keeper_value_16;
    PyTracebackObject *exception_keeper_tb_16;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_16;
    PyObject *exception_keeper_type_17;
    PyObject *exception_keeper_value_17;
    PyTracebackObject *exception_keeper_tb_17;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_17;
    PyObject *exception_keeper_type_18;
    PyObject *exception_keeper_value_18;
    PyTracebackObject *exception_keeper_tb_18;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_18;
    PyObject *exception_keeper_type_19;
    PyObject *exception_keeper_value_19;
    PyTracebackObject *exception_keeper_tb_19;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_19;
    PyObject *exception_keeper_type_20;
    PyObject *exception_keeper_value_20;
    PyTracebackObject *exception_keeper_tb_20;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_20;
    PyObject *exception_keeper_type_21;
    PyObject *exception_keeper_value_21;
    PyTracebackObject *exception_keeper_tb_21;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_21;
    PyObject *exception_keeper_type_22;
    PyObject *exception_keeper_value_22;
    PyTracebackObject *exception_keeper_tb_22;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_22;
    PyObject *exception_keeper_type_23;
    PyObject *exception_keeper_value_23;
    PyTracebackObject *exception_keeper_tb_23;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_23;
    PyObject *exception_keeper_type_24;
    PyObject *exception_keeper_value_24;
    PyTracebackObject *exception_keeper_tb_24;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_24;
    PyObject *exception_keeper_type_25;
    PyObject *exception_keeper_value_25;
    PyTracebackObject *exception_keeper_tb_25;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_25;
    PyObject *exception_keeper_type_26;
    PyObject *exception_keeper_value_26;
    PyTracebackObject *exception_keeper_tb_26;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_26;
    PyObject *exception_keeper_type_27;
    PyObject *exception_keeper_value_27;
    PyTracebackObject *exception_keeper_tb_27;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_27;
    PyObject *exception_keeper_type_28;
    PyObject *exception_keeper_value_28;
    PyTracebackObject *exception_keeper_tb_28;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_28;
    PyObject *exception_keeper_type_29;
    PyObject *exception_keeper_value_29;
    PyTracebackObject *exception_keeper_tb_29;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_29;
    PyObject *exception_keeper_type_30;
    PyObject *exception_keeper_value_30;
    PyTracebackObject *exception_keeper_tb_30;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_30;
    PyObject *exception_keeper_type_31;
    PyObject *exception_keeper_value_31;
    PyTracebackObject *exception_keeper_tb_31;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_31;
    PyObject *exception_keeper_type_32;
    PyObject *exception_keeper_value_32;
    PyTracebackObject *exception_keeper_tb_32;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_32;
    PyObject *exception_keeper_type_33;
    PyObject *exception_keeper_value_33;
    PyTracebackObject *exception_keeper_tb_33;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_33;
    PyObject *exception_keeper_type_34;
    PyObject *exception_keeper_value_34;
    PyTracebackObject *exception_keeper_tb_34;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_34;
    PyObject *exception_keeper_type_35;
    PyObject *exception_keeper_value_35;
    PyTracebackObject *exception_keeper_tb_35;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_35;
    PyObject *exception_keeper_type_36;
    PyObject *exception_keeper_value_36;
    PyTracebackObject *exception_keeper_tb_36;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_36;
    PyObject *exception_keeper_type_37;
    PyObject *exception_keeper_value_37;
    PyTracebackObject *exception_keeper_tb_37;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_37;
    PyObject *exception_keeper_type_38;
    PyObject *exception_keeper_value_38;
    PyTracebackObject *exception_keeper_tb_38;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_38;
    PyObject *exception_keeper_type_39;
    PyObject *exception_keeper_value_39;
    PyTracebackObject *exception_keeper_tb_39;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_39;
    PyObject *exception_keeper_type_40;
    PyObject *exception_keeper_value_40;
    PyTracebackObject *exception_keeper_tb_40;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_40;
    PyObject *exception_keeper_type_41;
    PyObject *exception_keeper_value_41;
    PyTracebackObject *exception_keeper_tb_41;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_41;
    PyObject *exception_keeper_type_42;
    PyObject *exception_keeper_value_42;
    PyTracebackObject *exception_keeper_tb_42;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_42;
    PyObject *exception_keeper_type_43;
    PyObject *exception_keeper_value_43;
    PyTracebackObject *exception_keeper_tb_43;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_43;
    PyObject *exception_keeper_type_44;
    PyObject *exception_keeper_value_44;
    PyTracebackObject *exception_keeper_tb_44;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_44;
    PyObject *exception_keeper_type_45;
    PyObject *exception_keeper_value_45;
    PyTracebackObject *exception_keeper_tb_45;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_45;
    PyObject *exception_keeper_type_46;
    PyObject *exception_keeper_value_46;
    PyTracebackObject *exception_keeper_tb_46;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_46;
    PyObject *exception_keeper_type_47;
    PyObject *exception_keeper_value_47;
    PyTracebackObject *exception_keeper_tb_47;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_47;
    PyObject *exception_keeper_type_48;
    PyObject *exception_keeper_value_48;
    PyTracebackObject *exception_keeper_tb_48;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_48;
    PyObject *exception_keeper_type_49;
    PyObject *exception_keeper_value_49;
    PyTracebackObject *exception_keeper_tb_49;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_49;
    PyObject *exception_keeper_type_50;
    PyObject *exception_keeper_value_50;
    PyTracebackObject *exception_keeper_tb_50;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_50;
    PyObject *exception_keeper_type_51;
    PyObject *exception_keeper_value_51;
    PyTracebackObject *exception_keeper_tb_51;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_51;
    PyObject *exception_keeper_type_52;
    PyObject *exception_keeper_value_52;
    PyTracebackObject *exception_keeper_tb_52;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_52;
    PyObject *exception_keeper_type_53;
    PyObject *exception_keeper_value_53;
    PyTracebackObject *exception_keeper_tb_53;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_53;
    PyObject *exception_keeper_type_54;
    PyObject *exception_keeper_value_54;
    PyTracebackObject *exception_keeper_tb_54;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_54;
    PyObject *exception_keeper_type_55;
    PyObject *exception_keeper_value_55;
    PyTracebackObject *exception_keeper_tb_55;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_55;
    PyObject *exception_keeper_type_56;
    PyObject *exception_keeper_value_56;
    PyTracebackObject *exception_keeper_tb_56;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_56;
    PyObject *exception_keeper_type_57;
    PyObject *exception_keeper_value_57;
    PyTracebackObject *exception_keeper_tb_57;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_57;
    PyObject *exception_keeper_type_58;
    PyObject *exception_keeper_value_58;
    PyTracebackObject *exception_keeper_tb_58;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_58;
    PyObject *exception_keeper_type_59;
    PyObject *exception_keeper_value_59;
    PyTracebackObject *exception_keeper_tb_59;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_59;
    PyObject *exception_keeper_type_60;
    PyObject *exception_keeper_value_60;
    PyTracebackObject *exception_keeper_tb_60;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_60;
    PyObject *exception_keeper_type_61;
    PyObject *exception_keeper_value_61;
    PyTracebackObject *exception_keeper_tb_61;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_61;
    PyObject *exception_keeper_type_62;
    PyObject *exception_keeper_value_62;
    PyTracebackObject *exception_keeper_tb_62;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_62;
    PyObject *exception_keeper_type_63;
    PyObject *exception_keeper_value_63;
    PyTracebackObject *exception_keeper_tb_63;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_63;
    PyObject *exception_keeper_type_64;
    PyObject *exception_keeper_value_64;
    PyTracebackObject *exception_keeper_tb_64;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_64;
    PyObject *exception_keeper_type_65;
    PyObject *exception_keeper_value_65;
    PyTracebackObject *exception_keeper_tb_65;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_65;
    PyObject *exception_keeper_type_66;
    PyObject *exception_keeper_value_66;
    PyTracebackObject *exception_keeper_tb_66;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_66;
    PyObject *exception_keeper_type_67;
    PyObject *exception_keeper_value_67;
    PyTracebackObject *exception_keeper_tb_67;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_67;
    PyObject *exception_keeper_type_68;
    PyObject *exception_keeper_value_68;
    PyTracebackObject *exception_keeper_tb_68;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_68;
    PyObject *exception_keeper_type_69;
    PyObject *exception_keeper_value_69;
    PyTracebackObject *exception_keeper_tb_69;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_69;
    PyObject *exception_keeper_type_70;
    PyObject *exception_keeper_value_70;
    PyTracebackObject *exception_keeper_tb_70;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_70;
    PyObject *exception_keeper_type_71;
    PyObject *exception_keeper_value_71;
    PyTracebackObject *exception_keeper_tb_71;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_71;
    PyObject *exception_keeper_type_72;
    PyObject *exception_keeper_value_72;
    PyTracebackObject *exception_keeper_tb_72;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_72;
    PyObject *exception_keeper_type_73;
    PyObject *exception_keeper_value_73;
    PyTracebackObject *exception_keeper_tb_73;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_73;
    PyObject *exception_keeper_type_74;
    PyObject *exception_keeper_value_74;
    PyTracebackObject *exception_keeper_tb_74;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_74;
    PyObject *exception_keeper_type_75;
    PyObject *exception_keeper_value_75;
    PyTracebackObject *exception_keeper_tb_75;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_75;
    PyObject *exception_keeper_type_76;
    PyObject *exception_keeper_value_76;
    PyTracebackObject *exception_keeper_tb_76;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_76;
    PyObject *exception_keeper_type_77;
    PyObject *exception_keeper_value_77;
    PyTracebackObject *exception_keeper_tb_77;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_77;
    PyObject *exception_keeper_type_78;
    PyObject *exception_keeper_value_78;
    PyTracebackObject *exception_keeper_tb_78;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_78;
    PyObject *exception_keeper_type_79;
    PyObject *exception_keeper_value_79;
    PyTracebackObject *exception_keeper_tb_79;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_79;
    PyObject *exception_keeper_type_80;
    PyObject *exception_keeper_value_80;
    PyTracebackObject *exception_keeper_tb_80;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_80;
    PyObject *exception_keeper_type_81;
    PyObject *exception_keeper_value_81;
    PyTracebackObject *exception_keeper_tb_81;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_81;
    PyObject *exception_keeper_type_82;
    PyObject *exception_keeper_value_82;
    PyTracebackObject *exception_keeper_tb_82;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_82;
    PyObject *exception_keeper_type_83;
    PyObject *exception_keeper_value_83;
    PyTracebackObject *exception_keeper_tb_83;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_83;
    PyObject *exception_keeper_type_84;
    PyObject *exception_keeper_value_84;
    PyTracebackObject *exception_keeper_tb_84;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_84;
    PyObject *exception_keeper_type_85;
    PyObject *exception_keeper_value_85;
    PyTracebackObject *exception_keeper_tb_85;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_85;
    PyObject *exception_keeper_type_86;
    PyObject *exception_keeper_value_86;
    PyTracebackObject *exception_keeper_tb_86;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_86;
    PyObject *exception_keeper_type_87;
    PyObject *exception_keeper_value_87;
    PyTracebackObject *exception_keeper_tb_87;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_87;
    PyObject *exception_keeper_type_88;
    PyObject *exception_keeper_value_88;
    PyTracebackObject *exception_keeper_tb_88;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_88;
    PyObject *exception_keeper_type_89;
    PyObject *exception_keeper_value_89;
    PyTracebackObject *exception_keeper_tb_89;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_89;
    PyObject *exception_keeper_type_90;
    PyObject *exception_keeper_value_90;
    PyTracebackObject *exception_keeper_tb_90;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_90;
    PyObject *exception_keeper_type_91;
    PyObject *exception_keeper_value_91;
    PyTracebackObject *exception_keeper_tb_91;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_91;
    PyObject *exception_keeper_type_92;
    PyObject *exception_keeper_value_92;
    PyTracebackObject *exception_keeper_tb_92;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_92;
    PyObject *exception_keeper_type_93;
    PyObject *exception_keeper_value_93;
    PyTracebackObject *exception_keeper_tb_93;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_93;
    PyObject *exception_keeper_type_94;
    PyObject *exception_keeper_value_94;
    PyTracebackObject *exception_keeper_tb_94;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_94;
    PyObject *exception_keeper_type_95;
    PyObject *exception_keeper_value_95;
    PyTracebackObject *exception_keeper_tb_95;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_95;
    PyObject *exception_keeper_type_96;
    PyObject *exception_keeper_value_96;
    PyTracebackObject *exception_keeper_tb_96;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_96;
    PyObject *exception_keeper_type_97;
    PyObject *exception_keeper_value_97;
    PyTracebackObject *exception_keeper_tb_97;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_97;
    PyObject *exception_keeper_type_98;
    PyObject *exception_keeper_value_98;
    PyTracebackObject *exception_keeper_tb_98;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_98;
    PyObject *exception_keeper_type_99;
    PyObject *exception_keeper_value_99;
    PyTracebackObject *exception_keeper_tb_99;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_99;
    PyObject *exception_keeper_type_100;
    PyObject *exception_keeper_value_100;
    PyTracebackObject *exception_keeper_tb_100;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_100;
    PyObject *exception_keeper_type_101;
    PyObject *exception_keeper_value_101;
    PyTracebackObject *exception_keeper_tb_101;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_101;
    PyObject *exception_keeper_type_102;
    PyObject *exception_keeper_value_102;
    PyTracebackObject *exception_keeper_tb_102;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_102;
    PyObject *exception_keeper_type_103;
    PyObject *exception_keeper_value_103;
    PyTracebackObject *exception_keeper_tb_103;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_103;
    PyObject *exception_keeper_type_104;
    PyObject *exception_keeper_value_104;
    PyTracebackObject *exception_keeper_tb_104;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_104;
    PyObject *exception_keeper_type_105;
    PyObject *exception_keeper_value_105;
    PyTracebackObject *exception_keeper_tb_105;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_105;
    PyObject *exception_keeper_type_106;
    PyObject *exception_keeper_value_106;
    PyTracebackObject *exception_keeper_tb_106;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_106;
    PyObject *exception_keeper_type_107;
    PyObject *exception_keeper_value_107;
    PyTracebackObject *exception_keeper_tb_107;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_107;
    PyObject *exception_keeper_type_108;
    PyObject *exception_keeper_value_108;
    PyTracebackObject *exception_keeper_tb_108;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_108;
    PyObject *exception_keeper_type_109;
    PyObject *exception_keeper_value_109;
    PyTracebackObject *exception_keeper_tb_109;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_109;
    PyObject *exception_keeper_type_110;
    PyObject *exception_keeper_value_110;
    PyTracebackObject *exception_keeper_tb_110;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_110;
    PyObject *exception_keeper_type_111;
    PyObject *exception_keeper_value_111;
    PyTracebackObject *exception_keeper_tb_111;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_111;
    PyObject *exception_keeper_type_112;
    PyObject *exception_keeper_value_112;
    PyTracebackObject *exception_keeper_tb_112;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_112;
    PyObject *exception_keeper_type_113;
    PyObject *exception_keeper_value_113;
    PyTracebackObject *exception_keeper_tb_113;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_113;
    PyObject *exception_keeper_type_114;
    PyObject *exception_keeper_value_114;
    PyTracebackObject *exception_keeper_tb_114;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_114;
    PyObject *exception_keeper_type_115;
    PyObject *exception_keeper_value_115;
    PyTracebackObject *exception_keeper_tb_115;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_115;
    PyObject *exception_keeper_type_116;
    PyObject *exception_keeper_value_116;
    PyTracebackObject *exception_keeper_tb_116;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_116;
    PyObject *exception_keeper_type_117;
    PyObject *exception_keeper_value_117;
    PyTracebackObject *exception_keeper_tb_117;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_117;
    PyObject *exception_keeper_type_118;
    PyObject *exception_keeper_value_118;
    PyTracebackObject *exception_keeper_tb_118;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_118;
    PyObject *exception_keeper_type_119;
    PyObject *exception_keeper_value_119;
    PyTracebackObject *exception_keeper_tb_119;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_119;
    PyObject *exception_keeper_type_120;
    PyObject *exception_keeper_value_120;
    PyTracebackObject *exception_keeper_tb_120;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_120;
    PyObject *exception_keeper_type_121;
    PyObject *exception_keeper_value_121;
    PyTracebackObject *exception_keeper_tb_121;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_121;
    PyObject *exception_keeper_type_122;
    PyObject *exception_keeper_value_122;
    PyTracebackObject *exception_keeper_tb_122;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_122;
    PyObject *exception_keeper_type_123;
    PyObject *exception_keeper_value_123;
    PyTracebackObject *exception_keeper_tb_123;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_123;
    PyObject *exception_keeper_type_124;
    PyObject *exception_keeper_value_124;
    PyTracebackObject *exception_keeper_tb_124;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_124;
    PyObject *exception_keeper_type_125;
    PyObject *exception_keeper_value_125;
    PyTracebackObject *exception_keeper_tb_125;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_125;
    PyObject *exception_keeper_type_126;
    PyObject *exception_keeper_value_126;
    PyTracebackObject *exception_keeper_tb_126;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_126;
    PyObject *exception_keeper_type_127;
    PyObject *exception_keeper_value_127;
    PyTracebackObject *exception_keeper_tb_127;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_127;
    PyObject *exception_keeper_type_128;
    PyObject *exception_keeper_value_128;
    PyTracebackObject *exception_keeper_tb_128;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_128;
    PyObject *exception_keeper_type_129;
    PyObject *exception_keeper_value_129;
    PyTracebackObject *exception_keeper_tb_129;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_129;
    PyObject *exception_keeper_type_130;
    PyObject *exception_keeper_value_130;
    PyTracebackObject *exception_keeper_tb_130;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_130;
    PyObject *exception_keeper_type_131;
    PyObject *exception_keeper_value_131;
    PyTracebackObject *exception_keeper_tb_131;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_131;
    PyObject *exception_keeper_type_132;
    PyObject *exception_keeper_value_132;
    PyTracebackObject *exception_keeper_tb_132;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_132;
    PyObject *exception_keeper_type_133;
    PyObject *exception_keeper_value_133;
    PyTracebackObject *exception_keeper_tb_133;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_133;
    PyObject *exception_keeper_type_134;
    PyObject *exception_keeper_value_134;
    PyTracebackObject *exception_keeper_tb_134;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_134;
    PyObject *exception_keeper_type_135;
    PyObject *exception_keeper_value_135;
    PyTracebackObject *exception_keeper_tb_135;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_135;
    PyObject *exception_keeper_type_136;
    PyObject *exception_keeper_value_136;
    PyTracebackObject *exception_keeper_tb_136;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_136;
    PyObject *exception_keeper_type_137;
    PyObject *exception_keeper_value_137;
    PyTracebackObject *exception_keeper_tb_137;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_137;
    PyObject *exception_keeper_type_138;
    PyObject *exception_keeper_value_138;
    PyTracebackObject *exception_keeper_tb_138;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_138;
    PyObject *exception_keeper_type_139;
    PyObject *exception_keeper_value_139;
    PyTracebackObject *exception_keeper_tb_139;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_139;
    PyObject *exception_keeper_type_140;
    PyObject *exception_keeper_value_140;
    PyTracebackObject *exception_keeper_tb_140;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_140;
    PyObject *exception_keeper_type_141;
    PyObject *exception_keeper_value_141;
    PyTracebackObject *exception_keeper_tb_141;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_141;
    PyObject *exception_keeper_type_142;
    PyObject *exception_keeper_value_142;
    PyTracebackObject *exception_keeper_tb_142;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_142;
    PyObject *exception_keeper_type_143;
    PyObject *exception_keeper_value_143;
    PyTracebackObject *exception_keeper_tb_143;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_143;
    PyObject *exception_keeper_type_144;
    PyObject *exception_keeper_value_144;
    PyTracebackObject *exception_keeper_tb_144;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_144;
    PyObject *exception_keeper_type_145;
    PyObject *exception_keeper_value_145;
    PyTracebackObject *exception_keeper_tb_145;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_145;
    PyObject *exception_keeper_type_146;
    PyObject *exception_keeper_value_146;
    PyTracebackObject *exception_keeper_tb_146;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_146;
    PyObject *exception_keeper_type_147;
    PyObject *exception_keeper_value_147;
    PyTracebackObject *exception_keeper_tb_147;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_147;
    PyObject *exception_keeper_type_148;
    PyObject *exception_keeper_value_148;
    PyTracebackObject *exception_keeper_tb_148;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_148;
    PyObject *exception_keeper_type_149;
    PyObject *exception_keeper_value_149;
    PyTracebackObject *exception_keeper_tb_149;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_149;
    PyObject *exception_keeper_type_150;
    PyObject *exception_keeper_value_150;
    PyTracebackObject *exception_keeper_tb_150;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_150;
    PyObject *exception_keeper_type_151;
    PyObject *exception_keeper_value_151;
    PyTracebackObject *exception_keeper_tb_151;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_151;
    PyObject *exception_keeper_type_152;
    PyObject *exception_keeper_value_152;
    PyTracebackObject *exception_keeper_tb_152;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_152;
    PyObject *exception_keeper_type_153;
    PyObject *exception_keeper_value_153;
    PyTracebackObject *exception_keeper_tb_153;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_153;
    PyObject *exception_keeper_type_154;
    PyObject *exception_keeper_value_154;
    PyTracebackObject *exception_keeper_tb_154;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_154;
    PyObject *exception_keeper_type_155;
    PyObject *exception_keeper_value_155;
    PyTracebackObject *exception_keeper_tb_155;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_155;
    PyObject *exception_keeper_type_156;
    PyObject *exception_keeper_value_156;
    PyTracebackObject *exception_keeper_tb_156;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_156;
    PyObject *exception_keeper_type_157;
    PyObject *exception_keeper_value_157;
    PyTracebackObject *exception_keeper_tb_157;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_157;
    PyObject *exception_keeper_type_158;
    PyObject *exception_keeper_value_158;
    PyTracebackObject *exception_keeper_tb_158;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_158;
    PyObject *exception_keeper_type_159;
    PyObject *exception_keeper_value_159;
    PyTracebackObject *exception_keeper_tb_159;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_159;
    PyObject *exception_keeper_type_160;
    PyObject *exception_keeper_value_160;
    PyTracebackObject *exception_keeper_tb_160;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_160;
    PyObject *exception_keeper_type_161;
    PyObject *exception_keeper_value_161;
    PyTracebackObject *exception_keeper_tb_161;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_161;
    PyObject *exception_keeper_type_162;
    PyObject *exception_keeper_value_162;
    PyTracebackObject *exception_keeper_tb_162;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_162;
    PyObject *exception_keeper_type_163;
    PyObject *exception_keeper_value_163;
    PyTracebackObject *exception_keeper_tb_163;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_163;
    PyObject *exception_keeper_type_164;
    PyObject *exception_keeper_value_164;
    PyTracebackObject *exception_keeper_tb_164;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_164;
    PyObject *exception_keeper_type_165;
    PyObject *exception_keeper_value_165;
    PyTracebackObject *exception_keeper_tb_165;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_165;
    PyObject *exception_keeper_type_166;
    PyObject *exception_keeper_value_166;
    PyTracebackObject *exception_keeper_tb_166;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_166;
    PyObject *exception_keeper_type_167;
    PyObject *exception_keeper_value_167;
    PyTracebackObject *exception_keeper_tb_167;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_167;
    PyObject *exception_keeper_type_168;
    PyObject *exception_keeper_value_168;
    PyTracebackObject *exception_keeper_tb_168;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_168;
    PyObject *exception_keeper_type_169;
    PyObject *exception_keeper_value_169;
    PyTracebackObject *exception_keeper_tb_169;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_169;
    PyObject *exception_keeper_type_170;
    PyObject *exception_keeper_value_170;
    PyTracebackObject *exception_keeper_tb_170;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_170;
    PyObject *exception_keeper_type_171;
    PyObject *exception_keeper_value_171;
    PyTracebackObject *exception_keeper_tb_171;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_171;
    PyObject *exception_keeper_type_172;
    PyObject *exception_keeper_value_172;
    PyTracebackObject *exception_keeper_tb_172;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_172;
    PyObject *exception_keeper_type_173;
    PyObject *exception_keeper_value_173;
    PyTracebackObject *exception_keeper_tb_173;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_173;
    PyObject *exception_keeper_type_174;
    PyObject *exception_keeper_value_174;
    PyTracebackObject *exception_keeper_tb_174;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_174;
    PyObject *exception_keeper_type_175;
    PyObject *exception_keeper_value_175;
    PyTracebackObject *exception_keeper_tb_175;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_175;
    PyObject *exception_keeper_type_176;
    PyObject *exception_keeper_value_176;
    PyTracebackObject *exception_keeper_tb_176;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_176;
    PyObject *exception_keeper_type_177;
    PyObject *exception_keeper_value_177;
    PyTracebackObject *exception_keeper_tb_177;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_177;
    PyObject *exception_keeper_type_178;
    PyObject *exception_keeper_value_178;
    PyTracebackObject *exception_keeper_tb_178;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_178;
    PyObject *exception_keeper_type_179;
    PyObject *exception_keeper_value_179;
    PyTracebackObject *exception_keeper_tb_179;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_179;
    PyObject *exception_keeper_type_180;
    PyObject *exception_keeper_value_180;
    PyTracebackObject *exception_keeper_tb_180;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_180;
    PyObject *exception_keeper_type_181;
    PyObject *exception_keeper_value_181;
    PyTracebackObject *exception_keeper_tb_181;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_181;
    PyObject *exception_keeper_type_182;
    PyObject *exception_keeper_value_182;
    PyTracebackObject *exception_keeper_tb_182;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_182;
    PyObject *exception_keeper_type_183;
    PyObject *exception_keeper_value_183;
    PyTracebackObject *exception_keeper_tb_183;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_183;
    PyObject *exception_keeper_type_184;
    PyObject *exception_keeper_value_184;
    PyTracebackObject *exception_keeper_tb_184;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_184;
    PyObject *exception_keeper_type_185;
    PyObject *exception_keeper_value_185;
    PyTracebackObject *exception_keeper_tb_185;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_185;
    PyObject *exception_keeper_type_186;
    PyObject *exception_keeper_value_186;
    PyTracebackObject *exception_keeper_tb_186;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_186;
    PyObject *exception_keeper_type_187;
    PyObject *exception_keeper_value_187;
    PyTracebackObject *exception_keeper_tb_187;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_187;
    PyObject *exception_keeper_type_188;
    PyObject *exception_keeper_value_188;
    PyTracebackObject *exception_keeper_tb_188;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_188;
    PyObject *exception_keeper_type_189;
    PyObject *exception_keeper_value_189;
    PyTracebackObject *exception_keeper_tb_189;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_189;
    PyObject *exception_keeper_type_190;
    PyObject *exception_keeper_value_190;
    PyTracebackObject *exception_keeper_tb_190;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_190;
    PyObject *exception_keeper_type_191;
    PyObject *exception_keeper_value_191;
    PyTracebackObject *exception_keeper_tb_191;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_191;
    PyObject *exception_keeper_type_192;
    PyObject *exception_keeper_value_192;
    PyTracebackObject *exception_keeper_tb_192;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_192;
    PyObject *exception_keeper_type_193;
    PyObject *exception_keeper_value_193;
    PyTracebackObject *exception_keeper_tb_193;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_193;
    PyObject *exception_keeper_type_194;
    PyObject *exception_keeper_value_194;
    PyTracebackObject *exception_keeper_tb_194;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_194;
    PyObject *exception_keeper_type_195;
    PyObject *exception_keeper_value_195;
    PyTracebackObject *exception_keeper_tb_195;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_195;
    PyObject *exception_keeper_type_196;
    PyObject *exception_keeper_value_196;
    PyTracebackObject *exception_keeper_tb_196;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_196;
    PyObject *exception_keeper_type_197;
    PyObject *exception_keeper_value_197;
    PyTracebackObject *exception_keeper_tb_197;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_197;
    PyObject *exception_keeper_type_198;
    PyObject *exception_keeper_value_198;
    PyTracebackObject *exception_keeper_tb_198;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_198;
    PyObject *exception_keeper_type_199;
    PyObject *exception_keeper_value_199;
    PyTracebackObject *exception_keeper_tb_199;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_199;
    PyObject *exception_keeper_type_200;
    PyObject *exception_keeper_value_200;
    PyTracebackObject *exception_keeper_tb_200;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_200;
    PyObject *exception_keeper_type_201;
    PyObject *exception_keeper_value_201;
    PyTracebackObject *exception_keeper_tb_201;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_201;

    // Module code.
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = Py_None;
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___doc__, tmp_assign_source_1);
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = const_str_digest_47f8976ec65784db88447db04386ca84;
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___file__, tmp_assign_source_2);
    }
    // Frame without reuse.
    frame_a46a74f8c2267393b45d276505dd66c4 = MAKE_MODULE_FRAME(codeobj_a46a74f8c2267393b45d276505dd66c4, module_youtube_dl$extractor$extractors);

    // Push the new frame as the currently active one, and we should be exclusively
    // owning it.
    pushFrameStack(frame_a46a74f8c2267393b45d276505dd66c4);
    assert(Py_REFCNT(frame_a46a74f8c2267393b45d276505dd66c4) == 2);

    // Framed code:
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_assattr_target_1;
        PyObject *tmp_mvar_value_1;
        tmp_assattr_name_1 = const_str_digest_47f8976ec65784db88447db04386ca84;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___spec__);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain___spec__);
        }

        CHECK_OBJECT(tmp_mvar_value_1);
        tmp_assattr_target_1 = tmp_mvar_value_1;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_origin, tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assattr_name_2;
        PyObject *tmp_assattr_target_2;
        PyObject *tmp_mvar_value_2;
        tmp_assattr_name_2 = Py_True;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___spec__);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain___spec__);
        }

        CHECK_OBJECT(tmp_mvar_value_2);
        tmp_assattr_target_2 = tmp_mvar_value_2;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_has_location, tmp_assattr_name_2);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_3;
        tmp_assign_source_3 = Py_None;
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___cached__, tmp_assign_source_3);
    }
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_import_name_from_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 2;
        tmp_import_name_from_1 = PyImport_ImportModule("__future__");
        assert(!(tmp_import_name_from_1 == NULL));
        if (PyModule_Check(tmp_import_name_from_1)) {
           tmp_assign_source_4 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_unicode_literals,
                const_int_0
            );
        } else {
           tmp_assign_source_4 = IMPORT_NAME(tmp_import_name_from_1, const_str_plain_unicode_literals);
        }

        if (tmp_assign_source_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_unicode_literals, tmp_assign_source_4);
    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_name_name_1;
        PyObject *tmp_globals_name_1;
        PyObject *tmp_locals_name_1;
        PyObject *tmp_fromlist_name_1;
        PyObject *tmp_level_name_1;
        tmp_name_name_1 = const_str_plain_abc;
        tmp_globals_name_1 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_1 = Py_None;
        tmp_fromlist_name_1 = const_tuple_str_plain_ABCIE_str_plain_ABCIViewIE_tuple;
        tmp_level_name_1 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 4;
        tmp_assign_source_5 = IMPORT_MODULE5(tmp_name_name_1, tmp_globals_name_1, tmp_locals_name_1, tmp_fromlist_name_1, tmp_level_name_1);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 4;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_1__module == NULL);
        tmp_import_from_1__module = tmp_assign_source_5;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_import_name_from_2;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_2 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_2)) {
           tmp_assign_source_6 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_2,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ABCIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_6 = IMPORT_NAME(tmp_import_name_from_2, const_str_plain_ABCIE);
        }

        if (tmp_assign_source_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 4;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ABCIE, tmp_assign_source_6);
    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_import_name_from_3;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_3 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_3)) {
           tmp_assign_source_7 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_3,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ABCIViewIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_7 = IMPORT_NAME(tmp_import_name_from_3, const_str_plain_ABCIViewIE);
        }

        if (tmp_assign_source_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 4;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ABCIViewIE, tmp_assign_source_7);
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;
    CHECK_OBJECT(tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;

    {
        PyObject *tmp_assign_source_8;
        PyObject *tmp_name_name_2;
        PyObject *tmp_globals_name_2;
        PyObject *tmp_locals_name_2;
        PyObject *tmp_fromlist_name_2;
        PyObject *tmp_level_name_2;
        tmp_name_name_2 = const_str_plain_abcnews;
        tmp_globals_name_2 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_2 = Py_None;
        tmp_fromlist_name_2 = const_tuple_str_plain_AbcNewsIE_str_plain_AbcNewsVideoIE_tuple;
        tmp_level_name_2 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 8;
        tmp_assign_source_8 = IMPORT_MODULE5(tmp_name_name_2, tmp_globals_name_2, tmp_locals_name_2, tmp_fromlist_name_2, tmp_level_name_2);
        if (tmp_assign_source_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 8;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_2__module == NULL);
        tmp_import_from_2__module = tmp_assign_source_8;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_import_name_from_4;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_4 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_4)) {
           tmp_assign_source_9 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_4,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AbcNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_9 = IMPORT_NAME(tmp_import_name_from_4, const_str_plain_AbcNewsIE);
        }

        if (tmp_assign_source_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 8;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AbcNewsIE, tmp_assign_source_9);
    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_import_name_from_5;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_5 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_5)) {
           tmp_assign_source_10 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_5,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AbcNewsVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_10 = IMPORT_NAME(tmp_import_name_from_5, const_str_plain_AbcNewsVideoIE);
        }

        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 8;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AbcNewsVideoIE, tmp_assign_source_10);
    }
    goto try_end_2;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_2__module);
    Py_DECREF(tmp_import_from_2__module);
    tmp_import_from_2__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto frame_exception_exit_1;
    // End of try:
    try_end_2:;
    CHECK_OBJECT(tmp_import_from_2__module);
    Py_DECREF(tmp_import_from_2__module);
    tmp_import_from_2__module = NULL;

    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_name_name_3;
        PyObject *tmp_globals_name_3;
        PyObject *tmp_locals_name_3;
        PyObject *tmp_fromlist_name_3;
        PyObject *tmp_level_name_3;
        tmp_name_name_3 = const_str_plain_abcotvs;
        tmp_globals_name_3 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_3 = Py_None;
        tmp_fromlist_name_3 = const_tuple_str_plain_ABCOTVSIE_str_plain_ABCOTVSClipsIE_tuple;
        tmp_level_name_3 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 12;
        tmp_assign_source_11 = IMPORT_MODULE5(tmp_name_name_3, tmp_globals_name_3, tmp_locals_name_3, tmp_fromlist_name_3, tmp_level_name_3);
        if (tmp_assign_source_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 12;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_3__module == NULL);
        tmp_import_from_3__module = tmp_assign_source_11;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_12;
        PyObject *tmp_import_name_from_6;
        CHECK_OBJECT(tmp_import_from_3__module);
        tmp_import_name_from_6 = tmp_import_from_3__module;
        if (PyModule_Check(tmp_import_name_from_6)) {
           tmp_assign_source_12 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_6,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ABCOTVSIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_12 = IMPORT_NAME(tmp_import_name_from_6, const_str_plain_ABCOTVSIE);
        }

        if (tmp_assign_source_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 12;

            goto try_except_handler_3;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ABCOTVSIE, tmp_assign_source_12);
    }
    {
        PyObject *tmp_assign_source_13;
        PyObject *tmp_import_name_from_7;
        CHECK_OBJECT(tmp_import_from_3__module);
        tmp_import_name_from_7 = tmp_import_from_3__module;
        if (PyModule_Check(tmp_import_name_from_7)) {
           tmp_assign_source_13 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_7,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ABCOTVSClipsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_13 = IMPORT_NAME(tmp_import_name_from_7, const_str_plain_ABCOTVSClipsIE);
        }

        if (tmp_assign_source_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 12;

            goto try_except_handler_3;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ABCOTVSClipsIE, tmp_assign_source_13);
    }
    goto try_end_3;
    // Exception handler code:
    try_except_handler_3:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_3__module);
    Py_DECREF(tmp_import_from_3__module);
    tmp_import_from_3__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto frame_exception_exit_1;
    // End of try:
    try_end_3:;
    CHECK_OBJECT(tmp_import_from_3__module);
    Py_DECREF(tmp_import_from_3__module);
    tmp_import_from_3__module = NULL;

    {
        PyObject *tmp_assign_source_14;
        PyObject *tmp_import_name_from_8;
        PyObject *tmp_name_name_4;
        PyObject *tmp_globals_name_4;
        PyObject *tmp_locals_name_4;
        PyObject *tmp_fromlist_name_4;
        PyObject *tmp_level_name_4;
        tmp_name_name_4 = const_str_plain_academicearth;
        tmp_globals_name_4 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_4 = Py_None;
        tmp_fromlist_name_4 = const_tuple_str_plain_AcademicEarthCourseIE_tuple;
        tmp_level_name_4 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 16;
        tmp_import_name_from_8 = IMPORT_MODULE5(tmp_name_name_4, tmp_globals_name_4, tmp_locals_name_4, tmp_fromlist_name_4, tmp_level_name_4);
        if (tmp_import_name_from_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 16;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_8)) {
           tmp_assign_source_14 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_8,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AcademicEarthCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_14 = IMPORT_NAME(tmp_import_name_from_8, const_str_plain_AcademicEarthCourseIE);
        }

        Py_DECREF(tmp_import_name_from_8);
        if (tmp_assign_source_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 16;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AcademicEarthCourseIE, tmp_assign_source_14);
    }
    {
        PyObject *tmp_assign_source_15;
        PyObject *tmp_name_name_5;
        PyObject *tmp_globals_name_5;
        PyObject *tmp_locals_name_5;
        PyObject *tmp_fromlist_name_5;
        PyObject *tmp_level_name_5;
        tmp_name_name_5 = const_str_plain_acast;
        tmp_globals_name_5 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_5 = Py_None;
        tmp_fromlist_name_5 = const_tuple_str_plain_ACastIE_str_plain_ACastChannelIE_tuple;
        tmp_level_name_5 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 17;
        tmp_assign_source_15 = IMPORT_MODULE5(tmp_name_name_5, tmp_globals_name_5, tmp_locals_name_5, tmp_fromlist_name_5, tmp_level_name_5);
        if (tmp_assign_source_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 17;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_4__module == NULL);
        tmp_import_from_4__module = tmp_assign_source_15;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_import_name_from_9;
        CHECK_OBJECT(tmp_import_from_4__module);
        tmp_import_name_from_9 = tmp_import_from_4__module;
        if (PyModule_Check(tmp_import_name_from_9)) {
           tmp_assign_source_16 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_9,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ACastIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_16 = IMPORT_NAME(tmp_import_name_from_9, const_str_plain_ACastIE);
        }

        if (tmp_assign_source_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 17;

            goto try_except_handler_4;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ACastIE, tmp_assign_source_16);
    }
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_import_name_from_10;
        CHECK_OBJECT(tmp_import_from_4__module);
        tmp_import_name_from_10 = tmp_import_from_4__module;
        if (PyModule_Check(tmp_import_name_from_10)) {
           tmp_assign_source_17 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_10,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ACastChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_17 = IMPORT_NAME(tmp_import_name_from_10, const_str_plain_ACastChannelIE);
        }

        if (tmp_assign_source_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 17;

            goto try_except_handler_4;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ACastChannelIE, tmp_assign_source_17);
    }
    goto try_end_4;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_4__module);
    Py_DECREF(tmp_import_from_4__module);
    tmp_import_from_4__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;
    CHECK_OBJECT(tmp_import_from_4__module);
    Py_DECREF(tmp_import_from_4__module);
    tmp_import_from_4__module = NULL;

    {
        PyObject *tmp_assign_source_18;
        PyObject *tmp_import_name_from_11;
        PyObject *tmp_name_name_6;
        PyObject *tmp_globals_name_6;
        PyObject *tmp_locals_name_6;
        PyObject *tmp_fromlist_name_6;
        PyObject *tmp_level_name_6;
        tmp_name_name_6 = const_str_plain_adn;
        tmp_globals_name_6 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_6 = Py_None;
        tmp_fromlist_name_6 = const_tuple_str_plain_ADNIE_tuple;
        tmp_level_name_6 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 21;
        tmp_import_name_from_11 = IMPORT_MODULE5(tmp_name_name_6, tmp_globals_name_6, tmp_locals_name_6, tmp_fromlist_name_6, tmp_level_name_6);
        if (tmp_import_name_from_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 21;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_11)) {
           tmp_assign_source_18 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_11,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ADNIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_18 = IMPORT_NAME(tmp_import_name_from_11, const_str_plain_ADNIE);
        }

        Py_DECREF(tmp_import_name_from_11);
        if (tmp_assign_source_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 21;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ADNIE, tmp_assign_source_18);
    }
    {
        PyObject *tmp_assign_source_19;
        PyObject *tmp_import_name_from_12;
        PyObject *tmp_name_name_7;
        PyObject *tmp_globals_name_7;
        PyObject *tmp_locals_name_7;
        PyObject *tmp_fromlist_name_7;
        PyObject *tmp_level_name_7;
        tmp_name_name_7 = const_str_plain_adobeconnect;
        tmp_globals_name_7 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_7 = Py_None;
        tmp_fromlist_name_7 = const_tuple_str_plain_AdobeConnectIE_tuple;
        tmp_level_name_7 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 22;
        tmp_import_name_from_12 = IMPORT_MODULE5(tmp_name_name_7, tmp_globals_name_7, tmp_locals_name_7, tmp_fromlist_name_7, tmp_level_name_7);
        if (tmp_import_name_from_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 22;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_12)) {
           tmp_assign_source_19 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_12,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AdobeConnectIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_19 = IMPORT_NAME(tmp_import_name_from_12, const_str_plain_AdobeConnectIE);
        }

        Py_DECREF(tmp_import_name_from_12);
        if (tmp_assign_source_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 22;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AdobeConnectIE, tmp_assign_source_19);
    }
    {
        PyObject *tmp_assign_source_20;
        PyObject *tmp_name_name_8;
        PyObject *tmp_globals_name_8;
        PyObject *tmp_locals_name_8;
        PyObject *tmp_fromlist_name_8;
        PyObject *tmp_level_name_8;
        tmp_name_name_8 = const_str_plain_adobetv;
        tmp_globals_name_8 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_8 = Py_None;
        tmp_fromlist_name_8 = const_tuple_7915279a1879c2289e09d7377626f0bd_tuple;
        tmp_level_name_8 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 23;
        tmp_assign_source_20 = IMPORT_MODULE5(tmp_name_name_8, tmp_globals_name_8, tmp_locals_name_8, tmp_fromlist_name_8, tmp_level_name_8);
        if (tmp_assign_source_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 23;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_5__module == NULL);
        tmp_import_from_5__module = tmp_assign_source_20;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_21;
        PyObject *tmp_import_name_from_13;
        CHECK_OBJECT(tmp_import_from_5__module);
        tmp_import_name_from_13 = tmp_import_from_5__module;
        if (PyModule_Check(tmp_import_name_from_13)) {
           tmp_assign_source_21 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_13,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AdobeTVEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_21 = IMPORT_NAME(tmp_import_name_from_13, const_str_plain_AdobeTVEmbedIE);
        }

        if (tmp_assign_source_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 23;

            goto try_except_handler_5;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AdobeTVEmbedIE, tmp_assign_source_21);
    }
    {
        PyObject *tmp_assign_source_22;
        PyObject *tmp_import_name_from_14;
        CHECK_OBJECT(tmp_import_from_5__module);
        tmp_import_name_from_14 = tmp_import_from_5__module;
        if (PyModule_Check(tmp_import_name_from_14)) {
           tmp_assign_source_22 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_14,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AdobeTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_22 = IMPORT_NAME(tmp_import_name_from_14, const_str_plain_AdobeTVIE);
        }

        if (tmp_assign_source_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 23;

            goto try_except_handler_5;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AdobeTVIE, tmp_assign_source_22);
    }
    {
        PyObject *tmp_assign_source_23;
        PyObject *tmp_import_name_from_15;
        CHECK_OBJECT(tmp_import_from_5__module);
        tmp_import_name_from_15 = tmp_import_from_5__module;
        if (PyModule_Check(tmp_import_name_from_15)) {
           tmp_assign_source_23 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_15,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AdobeTVShowIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_23 = IMPORT_NAME(tmp_import_name_from_15, const_str_plain_AdobeTVShowIE);
        }

        if (tmp_assign_source_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 23;

            goto try_except_handler_5;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AdobeTVShowIE, tmp_assign_source_23);
    }
    {
        PyObject *tmp_assign_source_24;
        PyObject *tmp_import_name_from_16;
        CHECK_OBJECT(tmp_import_from_5__module);
        tmp_import_name_from_16 = tmp_import_from_5__module;
        if (PyModule_Check(tmp_import_name_from_16)) {
           tmp_assign_source_24 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_16,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AdobeTVChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_24 = IMPORT_NAME(tmp_import_name_from_16, const_str_plain_AdobeTVChannelIE);
        }

        if (tmp_assign_source_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 23;

            goto try_except_handler_5;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AdobeTVChannelIE, tmp_assign_source_24);
    }
    {
        PyObject *tmp_assign_source_25;
        PyObject *tmp_import_name_from_17;
        CHECK_OBJECT(tmp_import_from_5__module);
        tmp_import_name_from_17 = tmp_import_from_5__module;
        if (PyModule_Check(tmp_import_name_from_17)) {
           tmp_assign_source_25 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_17,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AdobeTVVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_25 = IMPORT_NAME(tmp_import_name_from_17, const_str_plain_AdobeTVVideoIE);
        }

        if (tmp_assign_source_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 23;

            goto try_except_handler_5;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AdobeTVVideoIE, tmp_assign_source_25);
    }
    goto try_end_5;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_5 = exception_type;
    exception_keeper_value_5 = exception_value;
    exception_keeper_tb_5 = exception_tb;
    exception_keeper_lineno_5 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_5__module);
    Py_DECREF(tmp_import_from_5__module);
    tmp_import_from_5__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_5;
    exception_value = exception_keeper_value_5;
    exception_tb = exception_keeper_tb_5;
    exception_lineno = exception_keeper_lineno_5;

    goto frame_exception_exit_1;
    // End of try:
    try_end_5:;
    CHECK_OBJECT(tmp_import_from_5__module);
    Py_DECREF(tmp_import_from_5__module);
    tmp_import_from_5__module = NULL;

    {
        PyObject *tmp_assign_source_26;
        PyObject *tmp_import_name_from_18;
        PyObject *tmp_name_name_9;
        PyObject *tmp_globals_name_9;
        PyObject *tmp_locals_name_9;
        PyObject *tmp_fromlist_name_9;
        PyObject *tmp_level_name_9;
        tmp_name_name_9 = const_str_plain_adultswim;
        tmp_globals_name_9 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_9 = Py_None;
        tmp_fromlist_name_9 = const_tuple_str_plain_AdultSwimIE_tuple;
        tmp_level_name_9 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 30;
        tmp_import_name_from_18 = IMPORT_MODULE5(tmp_name_name_9, tmp_globals_name_9, tmp_locals_name_9, tmp_fromlist_name_9, tmp_level_name_9);
        if (tmp_import_name_from_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 30;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_18)) {
           tmp_assign_source_26 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_18,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AdultSwimIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_26 = IMPORT_NAME(tmp_import_name_from_18, const_str_plain_AdultSwimIE);
        }

        Py_DECREF(tmp_import_name_from_18);
        if (tmp_assign_source_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 30;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AdultSwimIE, tmp_assign_source_26);
    }
    {
        PyObject *tmp_assign_source_27;
        PyObject *tmp_name_name_10;
        PyObject *tmp_globals_name_10;
        PyObject *tmp_locals_name_10;
        PyObject *tmp_fromlist_name_10;
        PyObject *tmp_level_name_10;
        tmp_name_name_10 = const_str_plain_aenetworks;
        tmp_globals_name_10 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_10 = Py_None;
        tmp_fromlist_name_10 = const_tuple_str_plain_AENetworksIE_str_plain_HistoryTopicIE_tuple;
        tmp_level_name_10 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 31;
        tmp_assign_source_27 = IMPORT_MODULE5(tmp_name_name_10, tmp_globals_name_10, tmp_locals_name_10, tmp_fromlist_name_10, tmp_level_name_10);
        if (tmp_assign_source_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_6__module == NULL);
        tmp_import_from_6__module = tmp_assign_source_27;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_28;
        PyObject *tmp_import_name_from_19;
        CHECK_OBJECT(tmp_import_from_6__module);
        tmp_import_name_from_19 = tmp_import_from_6__module;
        if (PyModule_Check(tmp_import_name_from_19)) {
           tmp_assign_source_28 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_19,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AENetworksIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_28 = IMPORT_NAME(tmp_import_name_from_19, const_str_plain_AENetworksIE);
        }

        if (tmp_assign_source_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto try_except_handler_6;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AENetworksIE, tmp_assign_source_28);
    }
    {
        PyObject *tmp_assign_source_29;
        PyObject *tmp_import_name_from_20;
        CHECK_OBJECT(tmp_import_from_6__module);
        tmp_import_name_from_20 = tmp_import_from_6__module;
        if (PyModule_Check(tmp_import_name_from_20)) {
           tmp_assign_source_29 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_20,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HistoryTopicIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_29 = IMPORT_NAME(tmp_import_name_from_20, const_str_plain_HistoryTopicIE);
        }

        if (tmp_assign_source_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto try_except_handler_6;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HistoryTopicIE, tmp_assign_source_29);
    }
    goto try_end_6;
    // Exception handler code:
    try_except_handler_6:;
    exception_keeper_type_6 = exception_type;
    exception_keeper_value_6 = exception_value;
    exception_keeper_tb_6 = exception_tb;
    exception_keeper_lineno_6 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_6__module);
    Py_DECREF(tmp_import_from_6__module);
    tmp_import_from_6__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_6;
    exception_value = exception_keeper_value_6;
    exception_tb = exception_keeper_tb_6;
    exception_lineno = exception_keeper_lineno_6;

    goto frame_exception_exit_1;
    // End of try:
    try_end_6:;
    CHECK_OBJECT(tmp_import_from_6__module);
    Py_DECREF(tmp_import_from_6__module);
    tmp_import_from_6__module = NULL;

    {
        PyObject *tmp_assign_source_30;
        PyObject *tmp_import_name_from_21;
        PyObject *tmp_name_name_11;
        PyObject *tmp_globals_name_11;
        PyObject *tmp_locals_name_11;
        PyObject *tmp_fromlist_name_11;
        PyObject *tmp_level_name_11;
        tmp_name_name_11 = const_str_plain_afreecatv;
        tmp_globals_name_11 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_11 = Py_None;
        tmp_fromlist_name_11 = const_tuple_str_plain_AfreecaTVIE_tuple;
        tmp_level_name_11 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 35;
        tmp_import_name_from_21 = IMPORT_MODULE5(tmp_name_name_11, tmp_globals_name_11, tmp_locals_name_11, tmp_fromlist_name_11, tmp_level_name_11);
        if (tmp_import_name_from_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 35;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_21)) {
           tmp_assign_source_30 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_21,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AfreecaTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_30 = IMPORT_NAME(tmp_import_name_from_21, const_str_plain_AfreecaTVIE);
        }

        Py_DECREF(tmp_import_name_from_21);
        if (tmp_assign_source_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 35;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AfreecaTVIE, tmp_assign_source_30);
    }
    {
        PyObject *tmp_assign_source_31;
        PyObject *tmp_import_name_from_22;
        PyObject *tmp_name_name_12;
        PyObject *tmp_globals_name_12;
        PyObject *tmp_locals_name_12;
        PyObject *tmp_fromlist_name_12;
        PyObject *tmp_level_name_12;
        tmp_name_name_12 = const_str_plain_airmozilla;
        tmp_globals_name_12 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_12 = Py_None;
        tmp_fromlist_name_12 = const_tuple_str_plain_AirMozillaIE_tuple;
        tmp_level_name_12 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 36;
        tmp_import_name_from_22 = IMPORT_MODULE5(tmp_name_name_12, tmp_globals_name_12, tmp_locals_name_12, tmp_fromlist_name_12, tmp_level_name_12);
        if (tmp_import_name_from_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 36;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_22)) {
           tmp_assign_source_31 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_22,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AirMozillaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_31 = IMPORT_NAME(tmp_import_name_from_22, const_str_plain_AirMozillaIE);
        }

        Py_DECREF(tmp_import_name_from_22);
        if (tmp_assign_source_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 36;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AirMozillaIE, tmp_assign_source_31);
    }
    {
        PyObject *tmp_assign_source_32;
        PyObject *tmp_import_name_from_23;
        PyObject *tmp_name_name_13;
        PyObject *tmp_globals_name_13;
        PyObject *tmp_locals_name_13;
        PyObject *tmp_fromlist_name_13;
        PyObject *tmp_level_name_13;
        tmp_name_name_13 = const_str_plain_aljazeera;
        tmp_globals_name_13 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_13 = Py_None;
        tmp_fromlist_name_13 = const_tuple_str_plain_AlJazeeraIE_tuple;
        tmp_level_name_13 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 37;
        tmp_import_name_from_23 = IMPORT_MODULE5(tmp_name_name_13, tmp_globals_name_13, tmp_locals_name_13, tmp_fromlist_name_13, tmp_level_name_13);
        if (tmp_import_name_from_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 37;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_23)) {
           tmp_assign_source_32 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_23,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AlJazeeraIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_32 = IMPORT_NAME(tmp_import_name_from_23, const_str_plain_AlJazeeraIE);
        }

        Py_DECREF(tmp_import_name_from_23);
        if (tmp_assign_source_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 37;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AlJazeeraIE, tmp_assign_source_32);
    }
    {
        PyObject *tmp_assign_source_33;
        PyObject *tmp_import_name_from_24;
        PyObject *tmp_name_name_14;
        PyObject *tmp_globals_name_14;
        PyObject *tmp_locals_name_14;
        PyObject *tmp_fromlist_name_14;
        PyObject *tmp_level_name_14;
        tmp_name_name_14 = const_str_plain_alphaporno;
        tmp_globals_name_14 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_14 = Py_None;
        tmp_fromlist_name_14 = const_tuple_str_plain_AlphaPornoIE_tuple;
        tmp_level_name_14 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 38;
        tmp_import_name_from_24 = IMPORT_MODULE5(tmp_name_name_14, tmp_globals_name_14, tmp_locals_name_14, tmp_fromlist_name_14, tmp_level_name_14);
        if (tmp_import_name_from_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 38;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_24)) {
           tmp_assign_source_33 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_24,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AlphaPornoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_33 = IMPORT_NAME(tmp_import_name_from_24, const_str_plain_AlphaPornoIE);
        }

        Py_DECREF(tmp_import_name_from_24);
        if (tmp_assign_source_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 38;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AlphaPornoIE, tmp_assign_source_33);
    }
    {
        PyObject *tmp_assign_source_34;
        PyObject *tmp_import_name_from_25;
        PyObject *tmp_name_name_15;
        PyObject *tmp_globals_name_15;
        PyObject *tmp_locals_name_15;
        PyObject *tmp_fromlist_name_15;
        PyObject *tmp_level_name_15;
        tmp_name_name_15 = const_str_plain_amcnetworks;
        tmp_globals_name_15 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_15 = Py_None;
        tmp_fromlist_name_15 = const_tuple_str_plain_AMCNetworksIE_tuple;
        tmp_level_name_15 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 39;
        tmp_import_name_from_25 = IMPORT_MODULE5(tmp_name_name_15, tmp_globals_name_15, tmp_locals_name_15, tmp_fromlist_name_15, tmp_level_name_15);
        if (tmp_import_name_from_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 39;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_25)) {
           tmp_assign_source_34 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_25,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AMCNetworksIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_34 = IMPORT_NAME(tmp_import_name_from_25, const_str_plain_AMCNetworksIE);
        }

        Py_DECREF(tmp_import_name_from_25);
        if (tmp_assign_source_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 39;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AMCNetworksIE, tmp_assign_source_34);
    }
    {
        PyObject *tmp_assign_source_35;
        PyObject *tmp_import_name_from_26;
        PyObject *tmp_name_name_16;
        PyObject *tmp_globals_name_16;
        PyObject *tmp_locals_name_16;
        PyObject *tmp_fromlist_name_16;
        PyObject *tmp_level_name_16;
        tmp_name_name_16 = const_str_plain_americastestkitchen;
        tmp_globals_name_16 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_16 = Py_None;
        tmp_fromlist_name_16 = const_tuple_str_plain_AmericasTestKitchenIE_tuple;
        tmp_level_name_16 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 40;
        tmp_import_name_from_26 = IMPORT_MODULE5(tmp_name_name_16, tmp_globals_name_16, tmp_locals_name_16, tmp_fromlist_name_16, tmp_level_name_16);
        if (tmp_import_name_from_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 40;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_26)) {
           tmp_assign_source_35 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_26,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AmericasTestKitchenIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_35 = IMPORT_NAME(tmp_import_name_from_26, const_str_plain_AmericasTestKitchenIE);
        }

        Py_DECREF(tmp_import_name_from_26);
        if (tmp_assign_source_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 40;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AmericasTestKitchenIE, tmp_assign_source_35);
    }
    {
        PyObject *tmp_assign_source_36;
        PyObject *tmp_import_name_from_27;
        PyObject *tmp_name_name_17;
        PyObject *tmp_globals_name_17;
        PyObject *tmp_locals_name_17;
        PyObject *tmp_fromlist_name_17;
        PyObject *tmp_level_name_17;
        tmp_name_name_17 = const_str_plain_animeondemand;
        tmp_globals_name_17 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_17 = Py_None;
        tmp_fromlist_name_17 = const_tuple_str_plain_AnimeOnDemandIE_tuple;
        tmp_level_name_17 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 41;
        tmp_import_name_from_27 = IMPORT_MODULE5(tmp_name_name_17, tmp_globals_name_17, tmp_locals_name_17, tmp_fromlist_name_17, tmp_level_name_17);
        if (tmp_import_name_from_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 41;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_27)) {
           tmp_assign_source_36 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_27,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AnimeOnDemandIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_36 = IMPORT_NAME(tmp_import_name_from_27, const_str_plain_AnimeOnDemandIE);
        }

        Py_DECREF(tmp_import_name_from_27);
        if (tmp_assign_source_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 41;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AnimeOnDemandIE, tmp_assign_source_36);
    }
    {
        PyObject *tmp_assign_source_37;
        PyObject *tmp_import_name_from_28;
        PyObject *tmp_name_name_18;
        PyObject *tmp_globals_name_18;
        PyObject *tmp_locals_name_18;
        PyObject *tmp_fromlist_name_18;
        PyObject *tmp_level_name_18;
        tmp_name_name_18 = const_str_plain_anvato;
        tmp_globals_name_18 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_18 = Py_None;
        tmp_fromlist_name_18 = const_tuple_str_plain_AnvatoIE_tuple;
        tmp_level_name_18 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 42;
        tmp_import_name_from_28 = IMPORT_MODULE5(tmp_name_name_18, tmp_globals_name_18, tmp_locals_name_18, tmp_fromlist_name_18, tmp_level_name_18);
        if (tmp_import_name_from_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 42;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_28)) {
           tmp_assign_source_37 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_28,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AnvatoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_37 = IMPORT_NAME(tmp_import_name_from_28, const_str_plain_AnvatoIE);
        }

        Py_DECREF(tmp_import_name_from_28);
        if (tmp_assign_source_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 42;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AnvatoIE, tmp_assign_source_37);
    }
    {
        PyObject *tmp_assign_source_38;
        PyObject *tmp_import_name_from_29;
        PyObject *tmp_name_name_19;
        PyObject *tmp_globals_name_19;
        PyObject *tmp_locals_name_19;
        PyObject *tmp_fromlist_name_19;
        PyObject *tmp_level_name_19;
        tmp_name_name_19 = const_str_plain_aol;
        tmp_globals_name_19 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_19 = Py_None;
        tmp_fromlist_name_19 = const_tuple_str_plain_AolIE_tuple;
        tmp_level_name_19 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 43;
        tmp_import_name_from_29 = IMPORT_MODULE5(tmp_name_name_19, tmp_globals_name_19, tmp_locals_name_19, tmp_fromlist_name_19, tmp_level_name_19);
        if (tmp_import_name_from_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 43;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_29)) {
           tmp_assign_source_38 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_29,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AolIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_38 = IMPORT_NAME(tmp_import_name_from_29, const_str_plain_AolIE);
        }

        Py_DECREF(tmp_import_name_from_29);
        if (tmp_assign_source_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 43;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AolIE, tmp_assign_source_38);
    }
    {
        PyObject *tmp_assign_source_39;
        PyObject *tmp_import_name_from_30;
        PyObject *tmp_name_name_20;
        PyObject *tmp_globals_name_20;
        PyObject *tmp_locals_name_20;
        PyObject *tmp_fromlist_name_20;
        PyObject *tmp_level_name_20;
        tmp_name_name_20 = const_str_plain_allocine;
        tmp_globals_name_20 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_20 = Py_None;
        tmp_fromlist_name_20 = const_tuple_str_plain_AllocineIE_tuple;
        tmp_level_name_20 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 44;
        tmp_import_name_from_30 = IMPORT_MODULE5(tmp_name_name_20, tmp_globals_name_20, tmp_locals_name_20, tmp_fromlist_name_20, tmp_level_name_20);
        if (tmp_import_name_from_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 44;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_30)) {
           tmp_assign_source_39 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_30,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AllocineIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_39 = IMPORT_NAME(tmp_import_name_from_30, const_str_plain_AllocineIE);
        }

        Py_DECREF(tmp_import_name_from_30);
        if (tmp_assign_source_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 44;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AllocineIE, tmp_assign_source_39);
    }
    {
        PyObject *tmp_assign_source_40;
        PyObject *tmp_import_name_from_31;
        PyObject *tmp_name_name_21;
        PyObject *tmp_globals_name_21;
        PyObject *tmp_locals_name_21;
        PyObject *tmp_fromlist_name_21;
        PyObject *tmp_level_name_21;
        tmp_name_name_21 = const_str_plain_aliexpress;
        tmp_globals_name_21 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_21 = Py_None;
        tmp_fromlist_name_21 = const_tuple_str_plain_AliExpressLiveIE_tuple;
        tmp_level_name_21 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 45;
        tmp_import_name_from_31 = IMPORT_MODULE5(tmp_name_name_21, tmp_globals_name_21, tmp_locals_name_21, tmp_fromlist_name_21, tmp_level_name_21);
        if (tmp_import_name_from_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 45;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_31)) {
           tmp_assign_source_40 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_31,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AliExpressLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_40 = IMPORT_NAME(tmp_import_name_from_31, const_str_plain_AliExpressLiveIE);
        }

        Py_DECREF(tmp_import_name_from_31);
        if (tmp_assign_source_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 45;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AliExpressLiveIE, tmp_assign_source_40);
    }
    {
        PyObject *tmp_assign_source_41;
        PyObject *tmp_import_name_from_32;
        PyObject *tmp_name_name_22;
        PyObject *tmp_globals_name_22;
        PyObject *tmp_locals_name_22;
        PyObject *tmp_fromlist_name_22;
        PyObject *tmp_level_name_22;
        tmp_name_name_22 = const_str_plain_apa;
        tmp_globals_name_22 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_22 = Py_None;
        tmp_fromlist_name_22 = const_tuple_str_plain_APAIE_tuple;
        tmp_level_name_22 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 46;
        tmp_import_name_from_32 = IMPORT_MODULE5(tmp_name_name_22, tmp_globals_name_22, tmp_locals_name_22, tmp_fromlist_name_22, tmp_level_name_22);
        if (tmp_import_name_from_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 46;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_32)) {
           tmp_assign_source_41 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_32,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_APAIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_41 = IMPORT_NAME(tmp_import_name_from_32, const_str_plain_APAIE);
        }

        Py_DECREF(tmp_import_name_from_32);
        if (tmp_assign_source_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 46;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_APAIE, tmp_assign_source_41);
    }
    {
        PyObject *tmp_assign_source_42;
        PyObject *tmp_import_name_from_33;
        PyObject *tmp_name_name_23;
        PyObject *tmp_globals_name_23;
        PyObject *tmp_locals_name_23;
        PyObject *tmp_fromlist_name_23;
        PyObject *tmp_level_name_23;
        tmp_name_name_23 = const_str_plain_aparat;
        tmp_globals_name_23 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_23 = Py_None;
        tmp_fromlist_name_23 = const_tuple_str_plain_AparatIE_tuple;
        tmp_level_name_23 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 47;
        tmp_import_name_from_33 = IMPORT_MODULE5(tmp_name_name_23, tmp_globals_name_23, tmp_locals_name_23, tmp_fromlist_name_23, tmp_level_name_23);
        if (tmp_import_name_from_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 47;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_33)) {
           tmp_assign_source_42 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_33,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AparatIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_42 = IMPORT_NAME(tmp_import_name_from_33, const_str_plain_AparatIE);
        }

        Py_DECREF(tmp_import_name_from_33);
        if (tmp_assign_source_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 47;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AparatIE, tmp_assign_source_42);
    }
    {
        PyObject *tmp_assign_source_43;
        PyObject *tmp_import_name_from_34;
        PyObject *tmp_name_name_24;
        PyObject *tmp_globals_name_24;
        PyObject *tmp_locals_name_24;
        PyObject *tmp_fromlist_name_24;
        PyObject *tmp_level_name_24;
        tmp_name_name_24 = const_str_plain_appleconnect;
        tmp_globals_name_24 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_24 = Py_None;
        tmp_fromlist_name_24 = const_tuple_str_plain_AppleConnectIE_tuple;
        tmp_level_name_24 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 48;
        tmp_import_name_from_34 = IMPORT_MODULE5(tmp_name_name_24, tmp_globals_name_24, tmp_locals_name_24, tmp_fromlist_name_24, tmp_level_name_24);
        if (tmp_import_name_from_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 48;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_34)) {
           tmp_assign_source_43 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_34,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AppleConnectIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_43 = IMPORT_NAME(tmp_import_name_from_34, const_str_plain_AppleConnectIE);
        }

        Py_DECREF(tmp_import_name_from_34);
        if (tmp_assign_source_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 48;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AppleConnectIE, tmp_assign_source_43);
    }
    {
        PyObject *tmp_assign_source_44;
        PyObject *tmp_name_name_25;
        PyObject *tmp_globals_name_25;
        PyObject *tmp_locals_name_25;
        PyObject *tmp_fromlist_name_25;
        PyObject *tmp_level_name_25;
        tmp_name_name_25 = const_str_plain_appletrailers;
        tmp_globals_name_25 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_25 = Py_None;
        tmp_fromlist_name_25 = const_tuple_str_plain_AppleTrailersIE_str_plain_AppleTrailersSectionIE_tuple;
        tmp_level_name_25 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 49;
        tmp_assign_source_44 = IMPORT_MODULE5(tmp_name_name_25, tmp_globals_name_25, tmp_locals_name_25, tmp_fromlist_name_25, tmp_level_name_25);
        if (tmp_assign_source_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 49;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_7__module == NULL);
        tmp_import_from_7__module = tmp_assign_source_44;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_45;
        PyObject *tmp_import_name_from_35;
        CHECK_OBJECT(tmp_import_from_7__module);
        tmp_import_name_from_35 = tmp_import_from_7__module;
        if (PyModule_Check(tmp_import_name_from_35)) {
           tmp_assign_source_45 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_35,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AppleTrailersIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_45 = IMPORT_NAME(tmp_import_name_from_35, const_str_plain_AppleTrailersIE);
        }

        if (tmp_assign_source_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 49;

            goto try_except_handler_7;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AppleTrailersIE, tmp_assign_source_45);
    }
    {
        PyObject *tmp_assign_source_46;
        PyObject *tmp_import_name_from_36;
        CHECK_OBJECT(tmp_import_from_7__module);
        tmp_import_name_from_36 = tmp_import_from_7__module;
        if (PyModule_Check(tmp_import_name_from_36)) {
           tmp_assign_source_46 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_36,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AppleTrailersSectionIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_46 = IMPORT_NAME(tmp_import_name_from_36, const_str_plain_AppleTrailersSectionIE);
        }

        if (tmp_assign_source_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 49;

            goto try_except_handler_7;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AppleTrailersSectionIE, tmp_assign_source_46);
    }
    goto try_end_7;
    // Exception handler code:
    try_except_handler_7:;
    exception_keeper_type_7 = exception_type;
    exception_keeper_value_7 = exception_value;
    exception_keeper_tb_7 = exception_tb;
    exception_keeper_lineno_7 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_7__module);
    Py_DECREF(tmp_import_from_7__module);
    tmp_import_from_7__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_7;
    exception_value = exception_keeper_value_7;
    exception_tb = exception_keeper_tb_7;
    exception_lineno = exception_keeper_lineno_7;

    goto frame_exception_exit_1;
    // End of try:
    try_end_7:;
    CHECK_OBJECT(tmp_import_from_7__module);
    Py_DECREF(tmp_import_from_7__module);
    tmp_import_from_7__module = NULL;

    {
        PyObject *tmp_assign_source_47;
        PyObject *tmp_import_name_from_37;
        PyObject *tmp_name_name_26;
        PyObject *tmp_globals_name_26;
        PyObject *tmp_locals_name_26;
        PyObject *tmp_fromlist_name_26;
        PyObject *tmp_level_name_26;
        tmp_name_name_26 = const_str_plain_archiveorg;
        tmp_globals_name_26 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_26 = Py_None;
        tmp_fromlist_name_26 = const_tuple_str_plain_ArchiveOrgIE_tuple;
        tmp_level_name_26 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 53;
        tmp_import_name_from_37 = IMPORT_MODULE5(tmp_name_name_26, tmp_globals_name_26, tmp_locals_name_26, tmp_fromlist_name_26, tmp_level_name_26);
        if (tmp_import_name_from_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 53;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_37)) {
           tmp_assign_source_47 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_37,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ArchiveOrgIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_47 = IMPORT_NAME(tmp_import_name_from_37, const_str_plain_ArchiveOrgIE);
        }

        Py_DECREF(tmp_import_name_from_37);
        if (tmp_assign_source_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 53;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ArchiveOrgIE, tmp_assign_source_47);
    }
    {
        PyObject *tmp_assign_source_48;
        PyObject *tmp_import_name_from_38;
        PyObject *tmp_name_name_27;
        PyObject *tmp_globals_name_27;
        PyObject *tmp_locals_name_27;
        PyObject *tmp_fromlist_name_27;
        PyObject *tmp_level_name_27;
        tmp_name_name_27 = const_str_plain_arkena;
        tmp_globals_name_27 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_27 = Py_None;
        tmp_fromlist_name_27 = const_tuple_str_plain_ArkenaIE_tuple;
        tmp_level_name_27 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 54;
        tmp_import_name_from_38 = IMPORT_MODULE5(tmp_name_name_27, tmp_globals_name_27, tmp_locals_name_27, tmp_fromlist_name_27, tmp_level_name_27);
        if (tmp_import_name_from_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 54;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_38)) {
           tmp_assign_source_48 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_38,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ArkenaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_48 = IMPORT_NAME(tmp_import_name_from_38, const_str_plain_ArkenaIE);
        }

        Py_DECREF(tmp_import_name_from_38);
        if (tmp_assign_source_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 54;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ArkenaIE, tmp_assign_source_48);
    }
    {
        PyObject *tmp_assign_source_49;
        PyObject *tmp_name_name_28;
        PyObject *tmp_globals_name_28;
        PyObject *tmp_locals_name_28;
        PyObject *tmp_fromlist_name_28;
        PyObject *tmp_level_name_28;
        tmp_name_name_28 = const_str_plain_ard;
        tmp_globals_name_28 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_28 = Py_None;
        tmp_fromlist_name_28 = const_tuple_0f7a6fd502b2234391fd40a34f47586e_tuple;
        tmp_level_name_28 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 55;
        tmp_assign_source_49 = IMPORT_MODULE5(tmp_name_name_28, tmp_globals_name_28, tmp_locals_name_28, tmp_fromlist_name_28, tmp_level_name_28);
        if (tmp_assign_source_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 55;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_8__module == NULL);
        tmp_import_from_8__module = tmp_assign_source_49;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_50;
        PyObject *tmp_import_name_from_39;
        CHECK_OBJECT(tmp_import_from_8__module);
        tmp_import_name_from_39 = tmp_import_from_8__module;
        if (PyModule_Check(tmp_import_name_from_39)) {
           tmp_assign_source_50 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_39,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ARDBetaMediathekIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_50 = IMPORT_NAME(tmp_import_name_from_39, const_str_plain_ARDBetaMediathekIE);
        }

        if (tmp_assign_source_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 55;

            goto try_except_handler_8;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ARDBetaMediathekIE, tmp_assign_source_50);
    }
    {
        PyObject *tmp_assign_source_51;
        PyObject *tmp_import_name_from_40;
        CHECK_OBJECT(tmp_import_from_8__module);
        tmp_import_name_from_40 = tmp_import_from_8__module;
        if (PyModule_Check(tmp_import_name_from_40)) {
           tmp_assign_source_51 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_40,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ARDIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_51 = IMPORT_NAME(tmp_import_name_from_40, const_str_plain_ARDIE);
        }

        if (tmp_assign_source_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 55;

            goto try_except_handler_8;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ARDIE, tmp_assign_source_51);
    }
    {
        PyObject *tmp_assign_source_52;
        PyObject *tmp_import_name_from_41;
        CHECK_OBJECT(tmp_import_from_8__module);
        tmp_import_name_from_41 = tmp_import_from_8__module;
        if (PyModule_Check(tmp_import_name_from_41)) {
           tmp_assign_source_52 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_41,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ARDMediathekIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_52 = IMPORT_NAME(tmp_import_name_from_41, const_str_plain_ARDMediathekIE);
        }

        if (tmp_assign_source_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 55;

            goto try_except_handler_8;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ARDMediathekIE, tmp_assign_source_52);
    }
    goto try_end_8;
    // Exception handler code:
    try_except_handler_8:;
    exception_keeper_type_8 = exception_type;
    exception_keeper_value_8 = exception_value;
    exception_keeper_tb_8 = exception_tb;
    exception_keeper_lineno_8 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_8__module);
    Py_DECREF(tmp_import_from_8__module);
    tmp_import_from_8__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_8;
    exception_value = exception_keeper_value_8;
    exception_tb = exception_keeper_tb_8;
    exception_lineno = exception_keeper_lineno_8;

    goto frame_exception_exit_1;
    // End of try:
    try_end_8:;
    CHECK_OBJECT(tmp_import_from_8__module);
    Py_DECREF(tmp_import_from_8__module);
    tmp_import_from_8__module = NULL;

    {
        PyObject *tmp_assign_source_53;
        PyObject *tmp_name_name_29;
        PyObject *tmp_globals_name_29;
        PyObject *tmp_locals_name_29;
        PyObject *tmp_fromlist_name_29;
        PyObject *tmp_level_name_29;
        tmp_name_name_29 = const_str_plain_arte;
        tmp_globals_name_29 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_29 = Py_None;
        tmp_fromlist_name_29 = const_tuple_9fcf83477f6d1e9d332fec5ed8f42fa0_tuple;
        tmp_level_name_29 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 60;
        tmp_assign_source_53 = IMPORT_MODULE5(tmp_name_name_29, tmp_globals_name_29, tmp_locals_name_29, tmp_fromlist_name_29, tmp_level_name_29);
        if (tmp_assign_source_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 60;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_9__module == NULL);
        tmp_import_from_9__module = tmp_assign_source_53;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_54;
        PyObject *tmp_import_name_from_42;
        CHECK_OBJECT(tmp_import_from_9__module);
        tmp_import_name_from_42 = tmp_import_from_9__module;
        if (PyModule_Check(tmp_import_name_from_42)) {
           tmp_assign_source_54 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_42,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ArteTVPlus7IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_54 = IMPORT_NAME(tmp_import_name_from_42, const_str_plain_ArteTVPlus7IE);
        }

        if (tmp_assign_source_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 60;

            goto try_except_handler_9;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ArteTVPlus7IE, tmp_assign_source_54);
    }
    {
        PyObject *tmp_assign_source_55;
        PyObject *tmp_import_name_from_43;
        CHECK_OBJECT(tmp_import_from_9__module);
        tmp_import_name_from_43 = tmp_import_from_9__module;
        if (PyModule_Check(tmp_import_name_from_43)) {
           tmp_assign_source_55 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_43,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ArteTVEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_55 = IMPORT_NAME(tmp_import_name_from_43, const_str_plain_ArteTVEmbedIE);
        }

        if (tmp_assign_source_55 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 60;

            goto try_except_handler_9;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ArteTVEmbedIE, tmp_assign_source_55);
    }
    {
        PyObject *tmp_assign_source_56;
        PyObject *tmp_import_name_from_44;
        CHECK_OBJECT(tmp_import_from_9__module);
        tmp_import_name_from_44 = tmp_import_from_9__module;
        if (PyModule_Check(tmp_import_name_from_44)) {
           tmp_assign_source_56 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_44,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ArteTVPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_56 = IMPORT_NAME(tmp_import_name_from_44, const_str_plain_ArteTVPlaylistIE);
        }

        if (tmp_assign_source_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 60;

            goto try_except_handler_9;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ArteTVPlaylistIE, tmp_assign_source_56);
    }
    goto try_end_9;
    // Exception handler code:
    try_except_handler_9:;
    exception_keeper_type_9 = exception_type;
    exception_keeper_value_9 = exception_value;
    exception_keeper_tb_9 = exception_tb;
    exception_keeper_lineno_9 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_9__module);
    Py_DECREF(tmp_import_from_9__module);
    tmp_import_from_9__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_9;
    exception_value = exception_keeper_value_9;
    exception_tb = exception_keeper_tb_9;
    exception_lineno = exception_keeper_lineno_9;

    goto frame_exception_exit_1;
    // End of try:
    try_end_9:;
    CHECK_OBJECT(tmp_import_from_9__module);
    Py_DECREF(tmp_import_from_9__module);
    tmp_import_from_9__module = NULL;

    {
        PyObject *tmp_assign_source_57;
        PyObject *tmp_name_name_30;
        PyObject *tmp_globals_name_30;
        PyObject *tmp_locals_name_30;
        PyObject *tmp_fromlist_name_30;
        PyObject *tmp_level_name_30;
        tmp_name_name_30 = const_str_plain_asiancrush;
        tmp_globals_name_30 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_30 = Py_None;
        tmp_fromlist_name_30 = const_tuple_str_plain_AsianCrushIE_str_plain_AsianCrushPlaylistIE_tuple;
        tmp_level_name_30 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 65;
        tmp_assign_source_57 = IMPORT_MODULE5(tmp_name_name_30, tmp_globals_name_30, tmp_locals_name_30, tmp_fromlist_name_30, tmp_level_name_30);
        if (tmp_assign_source_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_10__module == NULL);
        tmp_import_from_10__module = tmp_assign_source_57;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_58;
        PyObject *tmp_import_name_from_45;
        CHECK_OBJECT(tmp_import_from_10__module);
        tmp_import_name_from_45 = tmp_import_from_10__module;
        if (PyModule_Check(tmp_import_name_from_45)) {
           tmp_assign_source_58 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_45,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AsianCrushIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_58 = IMPORT_NAME(tmp_import_name_from_45, const_str_plain_AsianCrushIE);
        }

        if (tmp_assign_source_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;

            goto try_except_handler_10;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AsianCrushIE, tmp_assign_source_58);
    }
    {
        PyObject *tmp_assign_source_59;
        PyObject *tmp_import_name_from_46;
        CHECK_OBJECT(tmp_import_from_10__module);
        tmp_import_name_from_46 = tmp_import_from_10__module;
        if (PyModule_Check(tmp_import_name_from_46)) {
           tmp_assign_source_59 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_46,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AsianCrushPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_59 = IMPORT_NAME(tmp_import_name_from_46, const_str_plain_AsianCrushPlaylistIE);
        }

        if (tmp_assign_source_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;

            goto try_except_handler_10;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AsianCrushPlaylistIE, tmp_assign_source_59);
    }
    goto try_end_10;
    // Exception handler code:
    try_except_handler_10:;
    exception_keeper_type_10 = exception_type;
    exception_keeper_value_10 = exception_value;
    exception_keeper_tb_10 = exception_tb;
    exception_keeper_lineno_10 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_10__module);
    Py_DECREF(tmp_import_from_10__module);
    tmp_import_from_10__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_10;
    exception_value = exception_keeper_value_10;
    exception_tb = exception_keeper_tb_10;
    exception_lineno = exception_keeper_lineno_10;

    goto frame_exception_exit_1;
    // End of try:
    try_end_10:;
    CHECK_OBJECT(tmp_import_from_10__module);
    Py_DECREF(tmp_import_from_10__module);
    tmp_import_from_10__module = NULL;

    {
        PyObject *tmp_assign_source_60;
        PyObject *tmp_import_name_from_47;
        PyObject *tmp_name_name_31;
        PyObject *tmp_globals_name_31;
        PyObject *tmp_locals_name_31;
        PyObject *tmp_fromlist_name_31;
        PyObject *tmp_level_name_31;
        tmp_name_name_31 = const_str_plain_atresplayer;
        tmp_globals_name_31 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_31 = Py_None;
        tmp_fromlist_name_31 = const_tuple_str_plain_AtresPlayerIE_tuple;
        tmp_level_name_31 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 69;
        tmp_import_name_from_47 = IMPORT_MODULE5(tmp_name_name_31, tmp_globals_name_31, tmp_locals_name_31, tmp_fromlist_name_31, tmp_level_name_31);
        if (tmp_import_name_from_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 69;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_47)) {
           tmp_assign_source_60 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_47,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AtresPlayerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_60 = IMPORT_NAME(tmp_import_name_from_47, const_str_plain_AtresPlayerIE);
        }

        Py_DECREF(tmp_import_name_from_47);
        if (tmp_assign_source_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 69;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AtresPlayerIE, tmp_assign_source_60);
    }
    {
        PyObject *tmp_assign_source_61;
        PyObject *tmp_import_name_from_48;
        PyObject *tmp_name_name_32;
        PyObject *tmp_globals_name_32;
        PyObject *tmp_locals_name_32;
        PyObject *tmp_fromlist_name_32;
        PyObject *tmp_level_name_32;
        tmp_name_name_32 = const_str_plain_atttechchannel;
        tmp_globals_name_32 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_32 = Py_None;
        tmp_fromlist_name_32 = const_tuple_str_plain_ATTTechChannelIE_tuple;
        tmp_level_name_32 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 70;
        tmp_import_name_from_48 = IMPORT_MODULE5(tmp_name_name_32, tmp_globals_name_32, tmp_locals_name_32, tmp_fromlist_name_32, tmp_level_name_32);
        if (tmp_import_name_from_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 70;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_48)) {
           tmp_assign_source_61 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_48,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ATTTechChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_61 = IMPORT_NAME(tmp_import_name_from_48, const_str_plain_ATTTechChannelIE);
        }

        Py_DECREF(tmp_import_name_from_48);
        if (tmp_assign_source_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 70;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ATTTechChannelIE, tmp_assign_source_61);
    }
    {
        PyObject *tmp_assign_source_62;
        PyObject *tmp_import_name_from_49;
        PyObject *tmp_name_name_33;
        PyObject *tmp_globals_name_33;
        PyObject *tmp_locals_name_33;
        PyObject *tmp_fromlist_name_33;
        PyObject *tmp_level_name_33;
        tmp_name_name_33 = const_str_plain_atvat;
        tmp_globals_name_33 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_33 = Py_None;
        tmp_fromlist_name_33 = const_tuple_str_plain_ATVAtIE_tuple;
        tmp_level_name_33 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 71;
        tmp_import_name_from_49 = IMPORT_MODULE5(tmp_name_name_33, tmp_globals_name_33, tmp_locals_name_33, tmp_fromlist_name_33, tmp_level_name_33);
        if (tmp_import_name_from_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 71;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_49)) {
           tmp_assign_source_62 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_49,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ATVAtIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_62 = IMPORT_NAME(tmp_import_name_from_49, const_str_plain_ATVAtIE);
        }

        Py_DECREF(tmp_import_name_from_49);
        if (tmp_assign_source_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 71;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ATVAtIE, tmp_assign_source_62);
    }
    {
        PyObject *tmp_assign_source_63;
        PyObject *tmp_import_name_from_50;
        PyObject *tmp_name_name_34;
        PyObject *tmp_globals_name_34;
        PyObject *tmp_locals_name_34;
        PyObject *tmp_fromlist_name_34;
        PyObject *tmp_level_name_34;
        tmp_name_name_34 = const_str_plain_audimedia;
        tmp_globals_name_34 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_34 = Py_None;
        tmp_fromlist_name_34 = const_tuple_str_plain_AudiMediaIE_tuple;
        tmp_level_name_34 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 72;
        tmp_import_name_from_50 = IMPORT_MODULE5(tmp_name_name_34, tmp_globals_name_34, tmp_locals_name_34, tmp_fromlist_name_34, tmp_level_name_34);
        if (tmp_import_name_from_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 72;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_50)) {
           tmp_assign_source_63 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_50,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AudiMediaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_63 = IMPORT_NAME(tmp_import_name_from_50, const_str_plain_AudiMediaIE);
        }

        Py_DECREF(tmp_import_name_from_50);
        if (tmp_assign_source_63 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 72;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AudiMediaIE, tmp_assign_source_63);
    }
    {
        PyObject *tmp_assign_source_64;
        PyObject *tmp_import_name_from_51;
        PyObject *tmp_name_name_35;
        PyObject *tmp_globals_name_35;
        PyObject *tmp_locals_name_35;
        PyObject *tmp_fromlist_name_35;
        PyObject *tmp_level_name_35;
        tmp_name_name_35 = const_str_plain_audioboom;
        tmp_globals_name_35 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_35 = Py_None;
        tmp_fromlist_name_35 = const_tuple_str_plain_AudioBoomIE_tuple;
        tmp_level_name_35 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 73;
        tmp_import_name_from_51 = IMPORT_MODULE5(tmp_name_name_35, tmp_globals_name_35, tmp_locals_name_35, tmp_fromlist_name_35, tmp_level_name_35);
        if (tmp_import_name_from_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 73;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_51)) {
           tmp_assign_source_64 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_51,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AudioBoomIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_64 = IMPORT_NAME(tmp_import_name_from_51, const_str_plain_AudioBoomIE);
        }

        Py_DECREF(tmp_import_name_from_51);
        if (tmp_assign_source_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 73;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AudioBoomIE, tmp_assign_source_64);
    }
    {
        PyObject *tmp_assign_source_65;
        PyObject *tmp_name_name_36;
        PyObject *tmp_globals_name_36;
        PyObject *tmp_locals_name_36;
        PyObject *tmp_fromlist_name_36;
        PyObject *tmp_level_name_36;
        tmp_name_name_36 = const_str_plain_audiomack;
        tmp_globals_name_36 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_36 = Py_None;
        tmp_fromlist_name_36 = const_tuple_str_plain_AudiomackIE_str_plain_AudiomackAlbumIE_tuple;
        tmp_level_name_36 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 74;
        tmp_assign_source_65 = IMPORT_MODULE5(tmp_name_name_36, tmp_globals_name_36, tmp_locals_name_36, tmp_fromlist_name_36, tmp_level_name_36);
        if (tmp_assign_source_65 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_11__module == NULL);
        tmp_import_from_11__module = tmp_assign_source_65;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_66;
        PyObject *tmp_import_name_from_52;
        CHECK_OBJECT(tmp_import_from_11__module);
        tmp_import_name_from_52 = tmp_import_from_11__module;
        if (PyModule_Check(tmp_import_name_from_52)) {
           tmp_assign_source_66 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_52,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AudiomackIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_66 = IMPORT_NAME(tmp_import_name_from_52, const_str_plain_AudiomackIE);
        }

        if (tmp_assign_source_66 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;

            goto try_except_handler_11;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AudiomackIE, tmp_assign_source_66);
    }
    {
        PyObject *tmp_assign_source_67;
        PyObject *tmp_import_name_from_53;
        CHECK_OBJECT(tmp_import_from_11__module);
        tmp_import_name_from_53 = tmp_import_from_11__module;
        if (PyModule_Check(tmp_import_name_from_53)) {
           tmp_assign_source_67 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_53,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AudiomackAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_67 = IMPORT_NAME(tmp_import_name_from_53, const_str_plain_AudiomackAlbumIE);
        }

        if (tmp_assign_source_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;

            goto try_except_handler_11;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AudiomackAlbumIE, tmp_assign_source_67);
    }
    goto try_end_11;
    // Exception handler code:
    try_except_handler_11:;
    exception_keeper_type_11 = exception_type;
    exception_keeper_value_11 = exception_value;
    exception_keeper_tb_11 = exception_tb;
    exception_keeper_lineno_11 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_11__module);
    Py_DECREF(tmp_import_from_11__module);
    tmp_import_from_11__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_11;
    exception_value = exception_keeper_value_11;
    exception_tb = exception_keeper_tb_11;
    exception_lineno = exception_keeper_lineno_11;

    goto frame_exception_exit_1;
    // End of try:
    try_end_11:;
    CHECK_OBJECT(tmp_import_from_11__module);
    Py_DECREF(tmp_import_from_11__module);
    tmp_import_from_11__module = NULL;

    {
        PyObject *tmp_assign_source_68;
        PyObject *tmp_name_name_37;
        PyObject *tmp_globals_name_37;
        PyObject *tmp_locals_name_37;
        PyObject *tmp_fromlist_name_37;
        PyObject *tmp_level_name_37;
        tmp_name_name_37 = const_str_plain_awaan;
        tmp_globals_name_37 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_37 = Py_None;
        tmp_fromlist_name_37 = const_tuple_672937f689dfcbfc1004d06d90565167_tuple;
        tmp_level_name_37 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 75;
        tmp_assign_source_68 = IMPORT_MODULE5(tmp_name_name_37, tmp_globals_name_37, tmp_locals_name_37, tmp_fromlist_name_37, tmp_level_name_37);
        if (tmp_assign_source_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 75;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_12__module == NULL);
        tmp_import_from_12__module = tmp_assign_source_68;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_69;
        PyObject *tmp_import_name_from_54;
        CHECK_OBJECT(tmp_import_from_12__module);
        tmp_import_name_from_54 = tmp_import_from_12__module;
        if (PyModule_Check(tmp_import_name_from_54)) {
           tmp_assign_source_69 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_54,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AWAANIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_69 = IMPORT_NAME(tmp_import_name_from_54, const_str_plain_AWAANIE);
        }

        if (tmp_assign_source_69 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 75;

            goto try_except_handler_12;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AWAANIE, tmp_assign_source_69);
    }
    {
        PyObject *tmp_assign_source_70;
        PyObject *tmp_import_name_from_55;
        CHECK_OBJECT(tmp_import_from_12__module);
        tmp_import_name_from_55 = tmp_import_from_12__module;
        if (PyModule_Check(tmp_import_name_from_55)) {
           tmp_assign_source_70 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_55,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AWAANVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_70 = IMPORT_NAME(tmp_import_name_from_55, const_str_plain_AWAANVideoIE);
        }

        if (tmp_assign_source_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 75;

            goto try_except_handler_12;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AWAANVideoIE, tmp_assign_source_70);
    }
    {
        PyObject *tmp_assign_source_71;
        PyObject *tmp_import_name_from_56;
        CHECK_OBJECT(tmp_import_from_12__module);
        tmp_import_name_from_56 = tmp_import_from_12__module;
        if (PyModule_Check(tmp_import_name_from_56)) {
           tmp_assign_source_71 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_56,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AWAANLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_71 = IMPORT_NAME(tmp_import_name_from_56, const_str_plain_AWAANLiveIE);
        }

        if (tmp_assign_source_71 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 75;

            goto try_except_handler_12;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AWAANLiveIE, tmp_assign_source_71);
    }
    {
        PyObject *tmp_assign_source_72;
        PyObject *tmp_import_name_from_57;
        CHECK_OBJECT(tmp_import_from_12__module);
        tmp_import_name_from_57 = tmp_import_from_12__module;
        if (PyModule_Check(tmp_import_name_from_57)) {
           tmp_assign_source_72 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_57,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AWAANSeasonIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_72 = IMPORT_NAME(tmp_import_name_from_57, const_str_plain_AWAANSeasonIE);
        }

        if (tmp_assign_source_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 75;

            goto try_except_handler_12;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AWAANSeasonIE, tmp_assign_source_72);
    }
    goto try_end_12;
    // Exception handler code:
    try_except_handler_12:;
    exception_keeper_type_12 = exception_type;
    exception_keeper_value_12 = exception_value;
    exception_keeper_tb_12 = exception_tb;
    exception_keeper_lineno_12 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_12__module);
    Py_DECREF(tmp_import_from_12__module);
    tmp_import_from_12__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_12;
    exception_value = exception_keeper_value_12;
    exception_tb = exception_keeper_tb_12;
    exception_lineno = exception_keeper_lineno_12;

    goto frame_exception_exit_1;
    // End of try:
    try_end_12:;
    CHECK_OBJECT(tmp_import_from_12__module);
    Py_DECREF(tmp_import_from_12__module);
    tmp_import_from_12__module = NULL;

    {
        PyObject *tmp_assign_source_73;
        PyObject *tmp_import_name_from_58;
        PyObject *tmp_name_name_38;
        PyObject *tmp_globals_name_38;
        PyObject *tmp_locals_name_38;
        PyObject *tmp_fromlist_name_38;
        PyObject *tmp_level_name_38;
        tmp_name_name_38 = const_str_plain_azmedien;
        tmp_globals_name_38 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_38 = Py_None;
        tmp_fromlist_name_38 = const_tuple_str_plain_AZMedienIE_tuple;
        tmp_level_name_38 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 81;
        tmp_import_name_from_58 = IMPORT_MODULE5(tmp_name_name_38, tmp_globals_name_38, tmp_locals_name_38, tmp_fromlist_name_38, tmp_level_name_38);
        if (tmp_import_name_from_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_58)) {
           tmp_assign_source_73 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_58,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AZMedienIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_73 = IMPORT_NAME(tmp_import_name_from_58, const_str_plain_AZMedienIE);
        }

        Py_DECREF(tmp_import_name_from_58);
        if (tmp_assign_source_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AZMedienIE, tmp_assign_source_73);
    }
    {
        PyObject *tmp_assign_source_74;
        PyObject *tmp_import_name_from_59;
        PyObject *tmp_name_name_39;
        PyObject *tmp_globals_name_39;
        PyObject *tmp_locals_name_39;
        PyObject *tmp_fromlist_name_39;
        PyObject *tmp_level_name_39;
        tmp_name_name_39 = const_str_plain_baidu;
        tmp_globals_name_39 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_39 = Py_None;
        tmp_fromlist_name_39 = const_tuple_str_plain_BaiduVideoIE_tuple;
        tmp_level_name_39 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 82;
        tmp_import_name_from_59 = IMPORT_MODULE5(tmp_name_name_39, tmp_globals_name_39, tmp_locals_name_39, tmp_fromlist_name_39, tmp_level_name_39);
        if (tmp_import_name_from_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 82;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_59)) {
           tmp_assign_source_74 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_59,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BaiduVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_74 = IMPORT_NAME(tmp_import_name_from_59, const_str_plain_BaiduVideoIE);
        }

        Py_DECREF(tmp_import_name_from_59);
        if (tmp_assign_source_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 82;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BaiduVideoIE, tmp_assign_source_74);
    }
    {
        PyObject *tmp_assign_source_75;
        PyObject *tmp_name_name_40;
        PyObject *tmp_globals_name_40;
        PyObject *tmp_locals_name_40;
        PyObject *tmp_fromlist_name_40;
        PyObject *tmp_level_name_40;
        tmp_name_name_40 = const_str_plain_bandcamp;
        tmp_globals_name_40 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_40 = Py_None;
        tmp_fromlist_name_40 = const_tuple_6f50e65f74ca8c14b4adc7bb16ad3b46_tuple;
        tmp_level_name_40 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 83;
        tmp_assign_source_75 = IMPORT_MODULE5(tmp_name_name_40, tmp_globals_name_40, tmp_locals_name_40, tmp_fromlist_name_40, tmp_level_name_40);
        if (tmp_assign_source_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 83;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_13__module == NULL);
        tmp_import_from_13__module = tmp_assign_source_75;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_76;
        PyObject *tmp_import_name_from_60;
        CHECK_OBJECT(tmp_import_from_13__module);
        tmp_import_name_from_60 = tmp_import_from_13__module;
        if (PyModule_Check(tmp_import_name_from_60)) {
           tmp_assign_source_76 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_60,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BandcampIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_76 = IMPORT_NAME(tmp_import_name_from_60, const_str_plain_BandcampIE);
        }

        if (tmp_assign_source_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 83;

            goto try_except_handler_13;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BandcampIE, tmp_assign_source_76);
    }
    {
        PyObject *tmp_assign_source_77;
        PyObject *tmp_import_name_from_61;
        CHECK_OBJECT(tmp_import_from_13__module);
        tmp_import_name_from_61 = tmp_import_from_13__module;
        if (PyModule_Check(tmp_import_name_from_61)) {
           tmp_assign_source_77 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_61,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BandcampAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_77 = IMPORT_NAME(tmp_import_name_from_61, const_str_plain_BandcampAlbumIE);
        }

        if (tmp_assign_source_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 83;

            goto try_except_handler_13;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BandcampAlbumIE, tmp_assign_source_77);
    }
    {
        PyObject *tmp_assign_source_78;
        PyObject *tmp_import_name_from_62;
        CHECK_OBJECT(tmp_import_from_13__module);
        tmp_import_name_from_62 = tmp_import_from_13__module;
        if (PyModule_Check(tmp_import_name_from_62)) {
           tmp_assign_source_78 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_62,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BandcampWeeklyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_78 = IMPORT_NAME(tmp_import_name_from_62, const_str_plain_BandcampWeeklyIE);
        }

        if (tmp_assign_source_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 83;

            goto try_except_handler_13;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BandcampWeeklyIE, tmp_assign_source_78);
    }
    goto try_end_13;
    // Exception handler code:
    try_except_handler_13:;
    exception_keeper_type_13 = exception_type;
    exception_keeper_value_13 = exception_value;
    exception_keeper_tb_13 = exception_tb;
    exception_keeper_lineno_13 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_13__module);
    Py_DECREF(tmp_import_from_13__module);
    tmp_import_from_13__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_13;
    exception_value = exception_keeper_value_13;
    exception_tb = exception_keeper_tb_13;
    exception_lineno = exception_keeper_lineno_13;

    goto frame_exception_exit_1;
    // End of try:
    try_end_13:;
    CHECK_OBJECT(tmp_import_from_13__module);
    Py_DECREF(tmp_import_from_13__module);
    tmp_import_from_13__module = NULL;

    {
        PyObject *tmp_assign_source_79;
        PyObject *tmp_name_name_41;
        PyObject *tmp_globals_name_41;
        PyObject *tmp_locals_name_41;
        PyObject *tmp_fromlist_name_41;
        PyObject *tmp_level_name_41;
        tmp_name_name_41 = const_str_plain_bbc;
        tmp_globals_name_41 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_41 = Py_None;
        tmp_fromlist_name_41 = const_tuple_73a47d98e51d68658afc43c3e5f3130f_tuple;
        tmp_level_name_41 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 84;
        tmp_assign_source_79 = IMPORT_MODULE5(tmp_name_name_41, tmp_globals_name_41, tmp_locals_name_41, tmp_fromlist_name_41, tmp_level_name_41);
        if (tmp_assign_source_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_14__module == NULL);
        tmp_import_from_14__module = tmp_assign_source_79;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_80;
        PyObject *tmp_import_name_from_63;
        CHECK_OBJECT(tmp_import_from_14__module);
        tmp_import_name_from_63 = tmp_import_from_14__module;
        if (PyModule_Check(tmp_import_name_from_63)) {
           tmp_assign_source_80 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_63,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BBCCoUkIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_80 = IMPORT_NAME(tmp_import_name_from_63, const_str_plain_BBCCoUkIE);
        }

        if (tmp_assign_source_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;

            goto try_except_handler_14;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BBCCoUkIE, tmp_assign_source_80);
    }
    {
        PyObject *tmp_assign_source_81;
        PyObject *tmp_import_name_from_64;
        CHECK_OBJECT(tmp_import_from_14__module);
        tmp_import_name_from_64 = tmp_import_from_14__module;
        if (PyModule_Check(tmp_import_name_from_64)) {
           tmp_assign_source_81 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_64,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BBCCoUkArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_81 = IMPORT_NAME(tmp_import_name_from_64, const_str_plain_BBCCoUkArticleIE);
        }

        if (tmp_assign_source_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;

            goto try_except_handler_14;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BBCCoUkArticleIE, tmp_assign_source_81);
    }
    {
        PyObject *tmp_assign_source_82;
        PyObject *tmp_import_name_from_65;
        CHECK_OBJECT(tmp_import_from_14__module);
        tmp_import_name_from_65 = tmp_import_from_14__module;
        if (PyModule_Check(tmp_import_name_from_65)) {
           tmp_assign_source_82 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_65,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BBCCoUkIPlayerPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_82 = IMPORT_NAME(tmp_import_name_from_65, const_str_plain_BBCCoUkIPlayerPlaylistIE);
        }

        if (tmp_assign_source_82 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;

            goto try_except_handler_14;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BBCCoUkIPlayerPlaylistIE, tmp_assign_source_82);
    }
    {
        PyObject *tmp_assign_source_83;
        PyObject *tmp_import_name_from_66;
        CHECK_OBJECT(tmp_import_from_14__module);
        tmp_import_name_from_66 = tmp_import_from_14__module;
        if (PyModule_Check(tmp_import_name_from_66)) {
           tmp_assign_source_83 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_66,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BBCCoUkPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_83 = IMPORT_NAME(tmp_import_name_from_66, const_str_plain_BBCCoUkPlaylistIE);
        }

        if (tmp_assign_source_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;

            goto try_except_handler_14;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BBCCoUkPlaylistIE, tmp_assign_source_83);
    }
    {
        PyObject *tmp_assign_source_84;
        PyObject *tmp_import_name_from_67;
        CHECK_OBJECT(tmp_import_from_14__module);
        tmp_import_name_from_67 = tmp_import_from_14__module;
        if (PyModule_Check(tmp_import_name_from_67)) {
           tmp_assign_source_84 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_67,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BBCIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_84 = IMPORT_NAME(tmp_import_name_from_67, const_str_plain_BBCIE);
        }

        if (tmp_assign_source_84 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;

            goto try_except_handler_14;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BBCIE, tmp_assign_source_84);
    }
    goto try_end_14;
    // Exception handler code:
    try_except_handler_14:;
    exception_keeper_type_14 = exception_type;
    exception_keeper_value_14 = exception_value;
    exception_keeper_tb_14 = exception_tb;
    exception_keeper_lineno_14 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_14__module);
    Py_DECREF(tmp_import_from_14__module);
    tmp_import_from_14__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_14;
    exception_value = exception_keeper_value_14;
    exception_tb = exception_keeper_tb_14;
    exception_lineno = exception_keeper_lineno_14;

    goto frame_exception_exit_1;
    // End of try:
    try_end_14:;
    CHECK_OBJECT(tmp_import_from_14__module);
    Py_DECREF(tmp_import_from_14__module);
    tmp_import_from_14__module = NULL;

    {
        PyObject *tmp_assign_source_85;
        PyObject *tmp_name_name_42;
        PyObject *tmp_globals_name_42;
        PyObject *tmp_locals_name_42;
        PyObject *tmp_fromlist_name_42;
        PyObject *tmp_level_name_42;
        tmp_name_name_42 = const_str_plain_beampro;
        tmp_globals_name_42 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_42 = Py_None;
        tmp_fromlist_name_42 = const_tuple_str_plain_BeamProLiveIE_str_plain_BeamProVodIE_tuple;
        tmp_level_name_42 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 91;
        tmp_assign_source_85 = IMPORT_MODULE5(tmp_name_name_42, tmp_globals_name_42, tmp_locals_name_42, tmp_fromlist_name_42, tmp_level_name_42);
        if (tmp_assign_source_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 91;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_15__module == NULL);
        tmp_import_from_15__module = tmp_assign_source_85;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_86;
        PyObject *tmp_import_name_from_68;
        CHECK_OBJECT(tmp_import_from_15__module);
        tmp_import_name_from_68 = tmp_import_from_15__module;
        if (PyModule_Check(tmp_import_name_from_68)) {
           tmp_assign_source_86 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_68,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BeamProLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_86 = IMPORT_NAME(tmp_import_name_from_68, const_str_plain_BeamProLiveIE);
        }

        if (tmp_assign_source_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 91;

            goto try_except_handler_15;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BeamProLiveIE, tmp_assign_source_86);
    }
    {
        PyObject *tmp_assign_source_87;
        PyObject *tmp_import_name_from_69;
        CHECK_OBJECT(tmp_import_from_15__module);
        tmp_import_name_from_69 = tmp_import_from_15__module;
        if (PyModule_Check(tmp_import_name_from_69)) {
           tmp_assign_source_87 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_69,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BeamProVodIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_87 = IMPORT_NAME(tmp_import_name_from_69, const_str_plain_BeamProVodIE);
        }

        if (tmp_assign_source_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 91;

            goto try_except_handler_15;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BeamProVodIE, tmp_assign_source_87);
    }
    goto try_end_15;
    // Exception handler code:
    try_except_handler_15:;
    exception_keeper_type_15 = exception_type;
    exception_keeper_value_15 = exception_value;
    exception_keeper_tb_15 = exception_tb;
    exception_keeper_lineno_15 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_15__module);
    Py_DECREF(tmp_import_from_15__module);
    tmp_import_from_15__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_15;
    exception_value = exception_keeper_value_15;
    exception_tb = exception_keeper_tb_15;
    exception_lineno = exception_keeper_lineno_15;

    goto frame_exception_exit_1;
    // End of try:
    try_end_15:;
    CHECK_OBJECT(tmp_import_from_15__module);
    Py_DECREF(tmp_import_from_15__module);
    tmp_import_from_15__module = NULL;

    {
        PyObject *tmp_assign_source_88;
        PyObject *tmp_import_name_from_70;
        PyObject *tmp_name_name_43;
        PyObject *tmp_globals_name_43;
        PyObject *tmp_locals_name_43;
        PyObject *tmp_fromlist_name_43;
        PyObject *tmp_level_name_43;
        tmp_name_name_43 = const_str_plain_beeg;
        tmp_globals_name_43 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_43 = Py_None;
        tmp_fromlist_name_43 = const_tuple_str_plain_BeegIE_tuple;
        tmp_level_name_43 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 95;
        tmp_import_name_from_70 = IMPORT_MODULE5(tmp_name_name_43, tmp_globals_name_43, tmp_locals_name_43, tmp_fromlist_name_43, tmp_level_name_43);
        if (tmp_import_name_from_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 95;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_70)) {
           tmp_assign_source_88 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_70,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BeegIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_88 = IMPORT_NAME(tmp_import_name_from_70, const_str_plain_BeegIE);
        }

        Py_DECREF(tmp_import_name_from_70);
        if (tmp_assign_source_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 95;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BeegIE, tmp_assign_source_88);
    }
    {
        PyObject *tmp_assign_source_89;
        PyObject *tmp_import_name_from_71;
        PyObject *tmp_name_name_44;
        PyObject *tmp_globals_name_44;
        PyObject *tmp_locals_name_44;
        PyObject *tmp_fromlist_name_44;
        PyObject *tmp_level_name_44;
        tmp_name_name_44 = const_str_plain_behindkink;
        tmp_globals_name_44 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_44 = Py_None;
        tmp_fromlist_name_44 = const_tuple_str_plain_BehindKinkIE_tuple;
        tmp_level_name_44 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 96;
        tmp_import_name_from_71 = IMPORT_MODULE5(tmp_name_name_44, tmp_globals_name_44, tmp_locals_name_44, tmp_fromlist_name_44, tmp_level_name_44);
        if (tmp_import_name_from_71 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_71)) {
           tmp_assign_source_89 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_71,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BehindKinkIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_89 = IMPORT_NAME(tmp_import_name_from_71, const_str_plain_BehindKinkIE);
        }

        Py_DECREF(tmp_import_name_from_71);
        if (tmp_assign_source_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BehindKinkIE, tmp_assign_source_89);
    }
    {
        PyObject *tmp_assign_source_90;
        PyObject *tmp_import_name_from_72;
        PyObject *tmp_name_name_45;
        PyObject *tmp_globals_name_45;
        PyObject *tmp_locals_name_45;
        PyObject *tmp_fromlist_name_45;
        PyObject *tmp_level_name_45;
        tmp_name_name_45 = const_str_plain_bellmedia;
        tmp_globals_name_45 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_45 = Py_None;
        tmp_fromlist_name_45 = const_tuple_str_plain_BellMediaIE_tuple;
        tmp_level_name_45 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 97;
        tmp_import_name_from_72 = IMPORT_MODULE5(tmp_name_name_45, tmp_globals_name_45, tmp_locals_name_45, tmp_fromlist_name_45, tmp_level_name_45);
        if (tmp_import_name_from_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 97;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_72)) {
           tmp_assign_source_90 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_72,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BellMediaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_90 = IMPORT_NAME(tmp_import_name_from_72, const_str_plain_BellMediaIE);
        }

        Py_DECREF(tmp_import_name_from_72);
        if (tmp_assign_source_90 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 97;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BellMediaIE, tmp_assign_source_90);
    }
    {
        PyObject *tmp_assign_source_91;
        PyObject *tmp_import_name_from_73;
        PyObject *tmp_name_name_46;
        PyObject *tmp_globals_name_46;
        PyObject *tmp_locals_name_46;
        PyObject *tmp_fromlist_name_46;
        PyObject *tmp_level_name_46;
        tmp_name_name_46 = const_str_plain_beatport;
        tmp_globals_name_46 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_46 = Py_None;
        tmp_fromlist_name_46 = const_tuple_str_plain_BeatportIE_tuple;
        tmp_level_name_46 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 98;
        tmp_import_name_from_73 = IMPORT_MODULE5(tmp_name_name_46, tmp_globals_name_46, tmp_locals_name_46, tmp_fromlist_name_46, tmp_level_name_46);
        if (tmp_import_name_from_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 98;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_73)) {
           tmp_assign_source_91 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_73,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BeatportIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_91 = IMPORT_NAME(tmp_import_name_from_73, const_str_plain_BeatportIE);
        }

        Py_DECREF(tmp_import_name_from_73);
        if (tmp_assign_source_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 98;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BeatportIE, tmp_assign_source_91);
    }
    {
        PyObject *tmp_assign_source_92;
        PyObject *tmp_import_name_from_74;
        PyObject *tmp_name_name_47;
        PyObject *tmp_globals_name_47;
        PyObject *tmp_locals_name_47;
        PyObject *tmp_fromlist_name_47;
        PyObject *tmp_level_name_47;
        tmp_name_name_47 = const_str_plain_bet;
        tmp_globals_name_47 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_47 = Py_None;
        tmp_fromlist_name_47 = const_tuple_str_plain_BetIE_tuple;
        tmp_level_name_47 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 99;
        tmp_import_name_from_74 = IMPORT_MODULE5(tmp_name_name_47, tmp_globals_name_47, tmp_locals_name_47, tmp_fromlist_name_47, tmp_level_name_47);
        if (tmp_import_name_from_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 99;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_74)) {
           tmp_assign_source_92 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_74,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_92 = IMPORT_NAME(tmp_import_name_from_74, const_str_plain_BetIE);
        }

        Py_DECREF(tmp_import_name_from_74);
        if (tmp_assign_source_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 99;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BetIE, tmp_assign_source_92);
    }
    {
        PyObject *tmp_assign_source_93;
        PyObject *tmp_import_name_from_75;
        PyObject *tmp_name_name_48;
        PyObject *tmp_globals_name_48;
        PyObject *tmp_locals_name_48;
        PyObject *tmp_fromlist_name_48;
        PyObject *tmp_level_name_48;
        tmp_name_name_48 = const_str_plain_bfi;
        tmp_globals_name_48 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_48 = Py_None;
        tmp_fromlist_name_48 = const_tuple_str_plain_BFIPlayerIE_tuple;
        tmp_level_name_48 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 100;
        tmp_import_name_from_75 = IMPORT_MODULE5(tmp_name_name_48, tmp_globals_name_48, tmp_locals_name_48, tmp_fromlist_name_48, tmp_level_name_48);
        if (tmp_import_name_from_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 100;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_75)) {
           tmp_assign_source_93 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_75,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BFIPlayerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_93 = IMPORT_NAME(tmp_import_name_from_75, const_str_plain_BFIPlayerIE);
        }

        Py_DECREF(tmp_import_name_from_75);
        if (tmp_assign_source_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 100;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BFIPlayerIE, tmp_assign_source_93);
    }
    {
        PyObject *tmp_assign_source_94;
        PyObject *tmp_import_name_from_76;
        PyObject *tmp_name_name_49;
        PyObject *tmp_globals_name_49;
        PyObject *tmp_locals_name_49;
        PyObject *tmp_fromlist_name_49;
        PyObject *tmp_level_name_49;
        tmp_name_name_49 = const_str_plain_bigflix;
        tmp_globals_name_49 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_49 = Py_None;
        tmp_fromlist_name_49 = const_tuple_str_plain_BigflixIE_tuple;
        tmp_level_name_49 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 101;
        tmp_import_name_from_76 = IMPORT_MODULE5(tmp_name_name_49, tmp_globals_name_49, tmp_locals_name_49, tmp_fromlist_name_49, tmp_level_name_49);
        if (tmp_import_name_from_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 101;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_76)) {
           tmp_assign_source_94 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_76,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BigflixIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_94 = IMPORT_NAME(tmp_import_name_from_76, const_str_plain_BigflixIE);
        }

        Py_DECREF(tmp_import_name_from_76);
        if (tmp_assign_source_94 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 101;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BigflixIE, tmp_assign_source_94);
    }
    {
        PyObject *tmp_assign_source_95;
        PyObject *tmp_import_name_from_77;
        PyObject *tmp_name_name_50;
        PyObject *tmp_globals_name_50;
        PyObject *tmp_locals_name_50;
        PyObject *tmp_fromlist_name_50;
        PyObject *tmp_level_name_50;
        tmp_name_name_50 = const_str_plain_bild;
        tmp_globals_name_50 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_50 = Py_None;
        tmp_fromlist_name_50 = const_tuple_str_plain_BildIE_tuple;
        tmp_level_name_50 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 102;
        tmp_import_name_from_77 = IMPORT_MODULE5(tmp_name_name_50, tmp_globals_name_50, tmp_locals_name_50, tmp_fromlist_name_50, tmp_level_name_50);
        if (tmp_import_name_from_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 102;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_77)) {
           tmp_assign_source_95 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_77,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BildIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_95 = IMPORT_NAME(tmp_import_name_from_77, const_str_plain_BildIE);
        }

        Py_DECREF(tmp_import_name_from_77);
        if (tmp_assign_source_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 102;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BildIE, tmp_assign_source_95);
    }
    {
        PyObject *tmp_assign_source_96;
        PyObject *tmp_name_name_51;
        PyObject *tmp_globals_name_51;
        PyObject *tmp_locals_name_51;
        PyObject *tmp_fromlist_name_51;
        PyObject *tmp_level_name_51;
        tmp_name_name_51 = const_str_plain_bilibili;
        tmp_globals_name_51 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_51 = Py_None;
        tmp_fromlist_name_51 = const_tuple_64d29dcb9f2bf3fc7644f2097fa5706c_tuple;
        tmp_level_name_51 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 103;
        tmp_assign_source_96 = IMPORT_MODULE5(tmp_name_name_51, tmp_globals_name_51, tmp_locals_name_51, tmp_fromlist_name_51, tmp_level_name_51);
        if (tmp_assign_source_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 103;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_16__module == NULL);
        tmp_import_from_16__module = tmp_assign_source_96;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_97;
        PyObject *tmp_import_name_from_78;
        CHECK_OBJECT(tmp_import_from_16__module);
        tmp_import_name_from_78 = tmp_import_from_16__module;
        if (PyModule_Check(tmp_import_name_from_78)) {
           tmp_assign_source_97 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_78,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BiliBiliIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_97 = IMPORT_NAME(tmp_import_name_from_78, const_str_plain_BiliBiliIE);
        }

        if (tmp_assign_source_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 103;

            goto try_except_handler_16;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BiliBiliIE, tmp_assign_source_97);
    }
    {
        PyObject *tmp_assign_source_98;
        PyObject *tmp_import_name_from_79;
        CHECK_OBJECT(tmp_import_from_16__module);
        tmp_import_name_from_79 = tmp_import_from_16__module;
        if (PyModule_Check(tmp_import_name_from_79)) {
           tmp_assign_source_98 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_79,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BiliBiliBangumiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_98 = IMPORT_NAME(tmp_import_name_from_79, const_str_plain_BiliBiliBangumiIE);
        }

        if (tmp_assign_source_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 103;

            goto try_except_handler_16;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BiliBiliBangumiIE, tmp_assign_source_98);
    }
    {
        PyObject *tmp_assign_source_99;
        PyObject *tmp_import_name_from_80;
        CHECK_OBJECT(tmp_import_from_16__module);
        tmp_import_name_from_80 = tmp_import_from_16__module;
        if (PyModule_Check(tmp_import_name_from_80)) {
           tmp_assign_source_99 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_80,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BilibiliAudioIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_99 = IMPORT_NAME(tmp_import_name_from_80, const_str_plain_BilibiliAudioIE);
        }

        if (tmp_assign_source_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 103;

            goto try_except_handler_16;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BilibiliAudioIE, tmp_assign_source_99);
    }
    {
        PyObject *tmp_assign_source_100;
        PyObject *tmp_import_name_from_81;
        CHECK_OBJECT(tmp_import_from_16__module);
        tmp_import_name_from_81 = tmp_import_from_16__module;
        if (PyModule_Check(tmp_import_name_from_81)) {
           tmp_assign_source_100 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_81,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BilibiliAudioAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_100 = IMPORT_NAME(tmp_import_name_from_81, const_str_plain_BilibiliAudioAlbumIE);
        }

        if (tmp_assign_source_100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 103;

            goto try_except_handler_16;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BilibiliAudioAlbumIE, tmp_assign_source_100);
    }
    {
        PyObject *tmp_assign_source_101;
        PyObject *tmp_import_name_from_82;
        CHECK_OBJECT(tmp_import_from_16__module);
        tmp_import_name_from_82 = tmp_import_from_16__module;
        if (PyModule_Check(tmp_import_name_from_82)) {
           tmp_assign_source_101 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_82,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BiliBiliPlayerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_101 = IMPORT_NAME(tmp_import_name_from_82, const_str_plain_BiliBiliPlayerIE);
        }

        if (tmp_assign_source_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 103;

            goto try_except_handler_16;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BiliBiliPlayerIE, tmp_assign_source_101);
    }
    goto try_end_16;
    // Exception handler code:
    try_except_handler_16:;
    exception_keeper_type_16 = exception_type;
    exception_keeper_value_16 = exception_value;
    exception_keeper_tb_16 = exception_tb;
    exception_keeper_lineno_16 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_16__module);
    Py_DECREF(tmp_import_from_16__module);
    tmp_import_from_16__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_16;
    exception_value = exception_keeper_value_16;
    exception_tb = exception_keeper_tb_16;
    exception_lineno = exception_keeper_lineno_16;

    goto frame_exception_exit_1;
    // End of try:
    try_end_16:;
    CHECK_OBJECT(tmp_import_from_16__module);
    Py_DECREF(tmp_import_from_16__module);
    tmp_import_from_16__module = NULL;

    {
        PyObject *tmp_assign_source_102;
        PyObject *tmp_import_name_from_83;
        PyObject *tmp_name_name_52;
        PyObject *tmp_globals_name_52;
        PyObject *tmp_locals_name_52;
        PyObject *tmp_fromlist_name_52;
        PyObject *tmp_level_name_52;
        tmp_name_name_52 = const_str_plain_biobiochiletv;
        tmp_globals_name_52 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_52 = Py_None;
        tmp_fromlist_name_52 = const_tuple_str_plain_BioBioChileTVIE_tuple;
        tmp_level_name_52 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 110;
        tmp_import_name_from_83 = IMPORT_MODULE5(tmp_name_name_52, tmp_globals_name_52, tmp_locals_name_52, tmp_fromlist_name_52, tmp_level_name_52);
        if (tmp_import_name_from_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 110;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_83)) {
           tmp_assign_source_102 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_83,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BioBioChileTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_102 = IMPORT_NAME(tmp_import_name_from_83, const_str_plain_BioBioChileTVIE);
        }

        Py_DECREF(tmp_import_name_from_83);
        if (tmp_assign_source_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 110;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BioBioChileTVIE, tmp_assign_source_102);
    }
    {
        PyObject *tmp_assign_source_103;
        PyObject *tmp_name_name_53;
        PyObject *tmp_globals_name_53;
        PyObject *tmp_locals_name_53;
        PyObject *tmp_fromlist_name_53;
        PyObject *tmp_level_name_53;
        tmp_name_name_53 = const_str_plain_bitchute;
        tmp_globals_name_53 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_53 = Py_None;
        tmp_fromlist_name_53 = const_tuple_str_plain_BitChuteIE_str_plain_BitChuteChannelIE_tuple;
        tmp_level_name_53 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 111;
        tmp_assign_source_103 = IMPORT_MODULE5(tmp_name_name_53, tmp_globals_name_53, tmp_locals_name_53, tmp_fromlist_name_53, tmp_level_name_53);
        if (tmp_assign_source_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 111;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_17__module == NULL);
        tmp_import_from_17__module = tmp_assign_source_103;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_104;
        PyObject *tmp_import_name_from_84;
        CHECK_OBJECT(tmp_import_from_17__module);
        tmp_import_name_from_84 = tmp_import_from_17__module;
        if (PyModule_Check(tmp_import_name_from_84)) {
           tmp_assign_source_104 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_84,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BitChuteIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_104 = IMPORT_NAME(tmp_import_name_from_84, const_str_plain_BitChuteIE);
        }

        if (tmp_assign_source_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 111;

            goto try_except_handler_17;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BitChuteIE, tmp_assign_source_104);
    }
    {
        PyObject *tmp_assign_source_105;
        PyObject *tmp_import_name_from_85;
        CHECK_OBJECT(tmp_import_from_17__module);
        tmp_import_name_from_85 = tmp_import_from_17__module;
        if (PyModule_Check(tmp_import_name_from_85)) {
           tmp_assign_source_105 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_85,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BitChuteChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_105 = IMPORT_NAME(tmp_import_name_from_85, const_str_plain_BitChuteChannelIE);
        }

        if (tmp_assign_source_105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 111;

            goto try_except_handler_17;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BitChuteChannelIE, tmp_assign_source_105);
    }
    goto try_end_17;
    // Exception handler code:
    try_except_handler_17:;
    exception_keeper_type_17 = exception_type;
    exception_keeper_value_17 = exception_value;
    exception_keeper_tb_17 = exception_tb;
    exception_keeper_lineno_17 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_17__module);
    Py_DECREF(tmp_import_from_17__module);
    tmp_import_from_17__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_17;
    exception_value = exception_keeper_value_17;
    exception_tb = exception_keeper_tb_17;
    exception_lineno = exception_keeper_lineno_17;

    goto frame_exception_exit_1;
    // End of try:
    try_end_17:;
    CHECK_OBJECT(tmp_import_from_17__module);
    Py_DECREF(tmp_import_from_17__module);
    tmp_import_from_17__module = NULL;

    {
        PyObject *tmp_assign_source_106;
        PyObject *tmp_import_name_from_86;
        PyObject *tmp_name_name_54;
        PyObject *tmp_globals_name_54;
        PyObject *tmp_locals_name_54;
        PyObject *tmp_fromlist_name_54;
        PyObject *tmp_level_name_54;
        tmp_name_name_54 = const_str_plain_biqle;
        tmp_globals_name_54 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_54 = Py_None;
        tmp_fromlist_name_54 = const_tuple_str_plain_BIQLEIE_tuple;
        tmp_level_name_54 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 115;
        tmp_import_name_from_86 = IMPORT_MODULE5(tmp_name_name_54, tmp_globals_name_54, tmp_locals_name_54, tmp_fromlist_name_54, tmp_level_name_54);
        if (tmp_import_name_from_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 115;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_86)) {
           tmp_assign_source_106 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_86,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BIQLEIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_106 = IMPORT_NAME(tmp_import_name_from_86, const_str_plain_BIQLEIE);
        }

        Py_DECREF(tmp_import_name_from_86);
        if (tmp_assign_source_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 115;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BIQLEIE, tmp_assign_source_106);
    }
    {
        PyObject *tmp_assign_source_107;
        PyObject *tmp_name_name_55;
        PyObject *tmp_globals_name_55;
        PyObject *tmp_locals_name_55;
        PyObject *tmp_fromlist_name_55;
        PyObject *tmp_level_name_55;
        tmp_name_name_55 = const_str_plain_bleacherreport;
        tmp_globals_name_55 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_55 = Py_None;
        tmp_fromlist_name_55 = const_tuple_str_plain_BleacherReportIE_str_plain_BleacherReportCMSIE_tuple;
        tmp_level_name_55 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 116;
        tmp_assign_source_107 = IMPORT_MODULE5(tmp_name_name_55, tmp_globals_name_55, tmp_locals_name_55, tmp_fromlist_name_55, tmp_level_name_55);
        if (tmp_assign_source_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 116;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_18__module == NULL);
        tmp_import_from_18__module = tmp_assign_source_107;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_108;
        PyObject *tmp_import_name_from_87;
        CHECK_OBJECT(tmp_import_from_18__module);
        tmp_import_name_from_87 = tmp_import_from_18__module;
        if (PyModule_Check(tmp_import_name_from_87)) {
           tmp_assign_source_108 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_87,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BleacherReportIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_108 = IMPORT_NAME(tmp_import_name_from_87, const_str_plain_BleacherReportIE);
        }

        if (tmp_assign_source_108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 116;

            goto try_except_handler_18;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BleacherReportIE, tmp_assign_source_108);
    }
    {
        PyObject *tmp_assign_source_109;
        PyObject *tmp_import_name_from_88;
        CHECK_OBJECT(tmp_import_from_18__module);
        tmp_import_name_from_88 = tmp_import_from_18__module;
        if (PyModule_Check(tmp_import_name_from_88)) {
           tmp_assign_source_109 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_88,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BleacherReportCMSIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_109 = IMPORT_NAME(tmp_import_name_from_88, const_str_plain_BleacherReportCMSIE);
        }

        if (tmp_assign_source_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 116;

            goto try_except_handler_18;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BleacherReportCMSIE, tmp_assign_source_109);
    }
    goto try_end_18;
    // Exception handler code:
    try_except_handler_18:;
    exception_keeper_type_18 = exception_type;
    exception_keeper_value_18 = exception_value;
    exception_keeper_tb_18 = exception_tb;
    exception_keeper_lineno_18 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_18__module);
    Py_DECREF(tmp_import_from_18__module);
    tmp_import_from_18__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_18;
    exception_value = exception_keeper_value_18;
    exception_tb = exception_keeper_tb_18;
    exception_lineno = exception_keeper_lineno_18;

    goto frame_exception_exit_1;
    // End of try:
    try_end_18:;
    CHECK_OBJECT(tmp_import_from_18__module);
    Py_DECREF(tmp_import_from_18__module);
    tmp_import_from_18__module = NULL;

    {
        PyObject *tmp_assign_source_110;
        PyObject *tmp_import_name_from_89;
        PyObject *tmp_name_name_56;
        PyObject *tmp_globals_name_56;
        PyObject *tmp_locals_name_56;
        PyObject *tmp_fromlist_name_56;
        PyObject *tmp_level_name_56;
        tmp_name_name_56 = const_str_plain_blinkx;
        tmp_globals_name_56 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_56 = Py_None;
        tmp_fromlist_name_56 = const_tuple_str_plain_BlinkxIE_tuple;
        tmp_level_name_56 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 120;
        tmp_import_name_from_89 = IMPORT_MODULE5(tmp_name_name_56, tmp_globals_name_56, tmp_locals_name_56, tmp_fromlist_name_56, tmp_level_name_56);
        if (tmp_import_name_from_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 120;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_89)) {
           tmp_assign_source_110 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_89,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BlinkxIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_110 = IMPORT_NAME(tmp_import_name_from_89, const_str_plain_BlinkxIE);
        }

        Py_DECREF(tmp_import_name_from_89);
        if (tmp_assign_source_110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 120;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BlinkxIE, tmp_assign_source_110);
    }
    {
        PyObject *tmp_assign_source_111;
        PyObject *tmp_import_name_from_90;
        PyObject *tmp_name_name_57;
        PyObject *tmp_globals_name_57;
        PyObject *tmp_locals_name_57;
        PyObject *tmp_fromlist_name_57;
        PyObject *tmp_level_name_57;
        tmp_name_name_57 = const_str_plain_bloomberg;
        tmp_globals_name_57 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_57 = Py_None;
        tmp_fromlist_name_57 = const_tuple_str_plain_BloombergIE_tuple;
        tmp_level_name_57 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 121;
        tmp_import_name_from_90 = IMPORT_MODULE5(tmp_name_name_57, tmp_globals_name_57, tmp_locals_name_57, tmp_fromlist_name_57, tmp_level_name_57);
        if (tmp_import_name_from_90 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 121;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_90)) {
           tmp_assign_source_111 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_90,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BloombergIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_111 = IMPORT_NAME(tmp_import_name_from_90, const_str_plain_BloombergIE);
        }

        Py_DECREF(tmp_import_name_from_90);
        if (tmp_assign_source_111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 121;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BloombergIE, tmp_assign_source_111);
    }
    {
        PyObject *tmp_assign_source_112;
        PyObject *tmp_import_name_from_91;
        PyObject *tmp_name_name_58;
        PyObject *tmp_globals_name_58;
        PyObject *tmp_locals_name_58;
        PyObject *tmp_fromlist_name_58;
        PyObject *tmp_level_name_58;
        tmp_name_name_58 = const_str_plain_bokecc;
        tmp_globals_name_58 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_58 = Py_None;
        tmp_fromlist_name_58 = const_tuple_str_plain_BokeCCIE_tuple;
        tmp_level_name_58 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 122;
        tmp_import_name_from_91 = IMPORT_MODULE5(tmp_name_name_58, tmp_globals_name_58, tmp_locals_name_58, tmp_fromlist_name_58, tmp_level_name_58);
        if (tmp_import_name_from_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 122;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_91)) {
           tmp_assign_source_112 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_91,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BokeCCIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_112 = IMPORT_NAME(tmp_import_name_from_91, const_str_plain_BokeCCIE);
        }

        Py_DECREF(tmp_import_name_from_91);
        if (tmp_assign_source_112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 122;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BokeCCIE, tmp_assign_source_112);
    }
    {
        PyObject *tmp_assign_source_113;
        PyObject *tmp_import_name_from_92;
        PyObject *tmp_name_name_59;
        PyObject *tmp_globals_name_59;
        PyObject *tmp_locals_name_59;
        PyObject *tmp_fromlist_name_59;
        PyObject *tmp_level_name_59;
        tmp_name_name_59 = const_str_plain_bostonglobe;
        tmp_globals_name_59 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_59 = Py_None;
        tmp_fromlist_name_59 = const_tuple_str_plain_BostonGlobeIE_tuple;
        tmp_level_name_59 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 123;
        tmp_import_name_from_92 = IMPORT_MODULE5(tmp_name_name_59, tmp_globals_name_59, tmp_locals_name_59, tmp_fromlist_name_59, tmp_level_name_59);
        if (tmp_import_name_from_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 123;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_92)) {
           tmp_assign_source_113 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_92,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BostonGlobeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_113 = IMPORT_NAME(tmp_import_name_from_92, const_str_plain_BostonGlobeIE);
        }

        Py_DECREF(tmp_import_name_from_92);
        if (tmp_assign_source_113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 123;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BostonGlobeIE, tmp_assign_source_113);
    }
    {
        PyObject *tmp_assign_source_114;
        PyObject *tmp_import_name_from_93;
        PyObject *tmp_name_name_60;
        PyObject *tmp_globals_name_60;
        PyObject *tmp_locals_name_60;
        PyObject *tmp_fromlist_name_60;
        PyObject *tmp_level_name_60;
        tmp_name_name_60 = const_str_plain_bpb;
        tmp_globals_name_60 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_60 = Py_None;
        tmp_fromlist_name_60 = const_tuple_str_plain_BpbIE_tuple;
        tmp_level_name_60 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 124;
        tmp_import_name_from_93 = IMPORT_MODULE5(tmp_name_name_60, tmp_globals_name_60, tmp_locals_name_60, tmp_fromlist_name_60, tmp_level_name_60);
        if (tmp_import_name_from_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_93)) {
           tmp_assign_source_114 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_93,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BpbIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_114 = IMPORT_NAME(tmp_import_name_from_93, const_str_plain_BpbIE);
        }

        Py_DECREF(tmp_import_name_from_93);
        if (tmp_assign_source_114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BpbIE, tmp_assign_source_114);
    }
    {
        PyObject *tmp_assign_source_115;
        PyObject *tmp_name_name_61;
        PyObject *tmp_globals_name_61;
        PyObject *tmp_locals_name_61;
        PyObject *tmp_fromlist_name_61;
        PyObject *tmp_level_name_61;
        tmp_name_name_61 = const_str_plain_br;
        tmp_globals_name_61 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_61 = Py_None;
        tmp_fromlist_name_61 = const_tuple_str_plain_BRIE_str_plain_BRMediathekIE_tuple;
        tmp_level_name_61 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 125;
        tmp_assign_source_115 = IMPORT_MODULE5(tmp_name_name_61, tmp_globals_name_61, tmp_locals_name_61, tmp_fromlist_name_61, tmp_level_name_61);
        if (tmp_assign_source_115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 125;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_19__module == NULL);
        tmp_import_from_19__module = tmp_assign_source_115;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_116;
        PyObject *tmp_import_name_from_94;
        CHECK_OBJECT(tmp_import_from_19__module);
        tmp_import_name_from_94 = tmp_import_from_19__module;
        if (PyModule_Check(tmp_import_name_from_94)) {
           tmp_assign_source_116 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_94,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BRIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_116 = IMPORT_NAME(tmp_import_name_from_94, const_str_plain_BRIE);
        }

        if (tmp_assign_source_116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 125;

            goto try_except_handler_19;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BRIE, tmp_assign_source_116);
    }
    {
        PyObject *tmp_assign_source_117;
        PyObject *tmp_import_name_from_95;
        CHECK_OBJECT(tmp_import_from_19__module);
        tmp_import_name_from_95 = tmp_import_from_19__module;
        if (PyModule_Check(tmp_import_name_from_95)) {
           tmp_assign_source_117 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_95,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BRMediathekIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_117 = IMPORT_NAME(tmp_import_name_from_95, const_str_plain_BRMediathekIE);
        }

        if (tmp_assign_source_117 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 125;

            goto try_except_handler_19;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BRMediathekIE, tmp_assign_source_117);
    }
    goto try_end_19;
    // Exception handler code:
    try_except_handler_19:;
    exception_keeper_type_19 = exception_type;
    exception_keeper_value_19 = exception_value;
    exception_keeper_tb_19 = exception_tb;
    exception_keeper_lineno_19 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_19__module);
    Py_DECREF(tmp_import_from_19__module);
    tmp_import_from_19__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_19;
    exception_value = exception_keeper_value_19;
    exception_tb = exception_keeper_tb_19;
    exception_lineno = exception_keeper_lineno_19;

    goto frame_exception_exit_1;
    // End of try:
    try_end_19:;
    CHECK_OBJECT(tmp_import_from_19__module);
    Py_DECREF(tmp_import_from_19__module);
    tmp_import_from_19__module = NULL;

    {
        PyObject *tmp_assign_source_118;
        PyObject *tmp_import_name_from_96;
        PyObject *tmp_name_name_62;
        PyObject *tmp_globals_name_62;
        PyObject *tmp_locals_name_62;
        PyObject *tmp_fromlist_name_62;
        PyObject *tmp_level_name_62;
        tmp_name_name_62 = const_str_plain_bravotv;
        tmp_globals_name_62 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_62 = Py_None;
        tmp_fromlist_name_62 = const_tuple_str_plain_BravoTVIE_tuple;
        tmp_level_name_62 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 129;
        tmp_import_name_from_96 = IMPORT_MODULE5(tmp_name_name_62, tmp_globals_name_62, tmp_locals_name_62, tmp_fromlist_name_62, tmp_level_name_62);
        if (tmp_import_name_from_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 129;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_96)) {
           tmp_assign_source_118 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_96,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BravoTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_118 = IMPORT_NAME(tmp_import_name_from_96, const_str_plain_BravoTVIE);
        }

        Py_DECREF(tmp_import_name_from_96);
        if (tmp_assign_source_118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 129;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BravoTVIE, tmp_assign_source_118);
    }
    {
        PyObject *tmp_assign_source_119;
        PyObject *tmp_import_name_from_97;
        PyObject *tmp_name_name_63;
        PyObject *tmp_globals_name_63;
        PyObject *tmp_locals_name_63;
        PyObject *tmp_fromlist_name_63;
        PyObject *tmp_level_name_63;
        tmp_name_name_63 = const_str_plain_breakcom;
        tmp_globals_name_63 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_63 = Py_None;
        tmp_fromlist_name_63 = const_tuple_str_plain_BreakIE_tuple;
        tmp_level_name_63 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 130;
        tmp_import_name_from_97 = IMPORT_MODULE5(tmp_name_name_63, tmp_globals_name_63, tmp_locals_name_63, tmp_fromlist_name_63, tmp_level_name_63);
        if (tmp_import_name_from_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 130;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_97)) {
           tmp_assign_source_119 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_97,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BreakIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_119 = IMPORT_NAME(tmp_import_name_from_97, const_str_plain_BreakIE);
        }

        Py_DECREF(tmp_import_name_from_97);
        if (tmp_assign_source_119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 130;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BreakIE, tmp_assign_source_119);
    }
    {
        PyObject *tmp_assign_source_120;
        PyObject *tmp_name_name_64;
        PyObject *tmp_globals_name_64;
        PyObject *tmp_locals_name_64;
        PyObject *tmp_fromlist_name_64;
        PyObject *tmp_level_name_64;
        tmp_name_name_64 = const_str_plain_brightcove;
        tmp_globals_name_64 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_64 = Py_None;
        tmp_fromlist_name_64 = const_tuple_str_plain_BrightcoveLegacyIE_str_plain_BrightcoveNewIE_tuple;
        tmp_level_name_64 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 131;
        tmp_assign_source_120 = IMPORT_MODULE5(tmp_name_name_64, tmp_globals_name_64, tmp_locals_name_64, tmp_fromlist_name_64, tmp_level_name_64);
        if (tmp_assign_source_120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 131;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_20__module == NULL);
        tmp_import_from_20__module = tmp_assign_source_120;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_121;
        PyObject *tmp_import_name_from_98;
        CHECK_OBJECT(tmp_import_from_20__module);
        tmp_import_name_from_98 = tmp_import_from_20__module;
        if (PyModule_Check(tmp_import_name_from_98)) {
           tmp_assign_source_121 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_98,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BrightcoveLegacyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_121 = IMPORT_NAME(tmp_import_name_from_98, const_str_plain_BrightcoveLegacyIE);
        }

        if (tmp_assign_source_121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 131;

            goto try_except_handler_20;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BrightcoveLegacyIE, tmp_assign_source_121);
    }
    {
        PyObject *tmp_assign_source_122;
        PyObject *tmp_import_name_from_99;
        CHECK_OBJECT(tmp_import_from_20__module);
        tmp_import_name_from_99 = tmp_import_from_20__module;
        if (PyModule_Check(tmp_import_name_from_99)) {
           tmp_assign_source_122 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_99,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BrightcoveNewIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_122 = IMPORT_NAME(tmp_import_name_from_99, const_str_plain_BrightcoveNewIE);
        }

        if (tmp_assign_source_122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 131;

            goto try_except_handler_20;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BrightcoveNewIE, tmp_assign_source_122);
    }
    goto try_end_20;
    // Exception handler code:
    try_except_handler_20:;
    exception_keeper_type_20 = exception_type;
    exception_keeper_value_20 = exception_value;
    exception_keeper_tb_20 = exception_tb;
    exception_keeper_lineno_20 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_20__module);
    Py_DECREF(tmp_import_from_20__module);
    tmp_import_from_20__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_20;
    exception_value = exception_keeper_value_20;
    exception_tb = exception_keeper_tb_20;
    exception_lineno = exception_keeper_lineno_20;

    goto frame_exception_exit_1;
    // End of try:
    try_end_20:;
    CHECK_OBJECT(tmp_import_from_20__module);
    Py_DECREF(tmp_import_from_20__module);
    tmp_import_from_20__module = NULL;

    {
        PyObject *tmp_assign_source_123;
        PyObject *tmp_import_name_from_100;
        PyObject *tmp_name_name_65;
        PyObject *tmp_globals_name_65;
        PyObject *tmp_locals_name_65;
        PyObject *tmp_fromlist_name_65;
        PyObject *tmp_level_name_65;
        tmp_name_name_65 = const_str_plain_businessinsider;
        tmp_globals_name_65 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_65 = Py_None;
        tmp_fromlist_name_65 = const_tuple_str_plain_BusinessInsiderIE_tuple;
        tmp_level_name_65 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 135;
        tmp_import_name_from_100 = IMPORT_MODULE5(tmp_name_name_65, tmp_globals_name_65, tmp_locals_name_65, tmp_fromlist_name_65, tmp_level_name_65);
        if (tmp_import_name_from_100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_100)) {
           tmp_assign_source_123 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_100,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BusinessInsiderIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_123 = IMPORT_NAME(tmp_import_name_from_100, const_str_plain_BusinessInsiderIE);
        }

        Py_DECREF(tmp_import_name_from_100);
        if (tmp_assign_source_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BusinessInsiderIE, tmp_assign_source_123);
    }
    {
        PyObject *tmp_assign_source_124;
        PyObject *tmp_import_name_from_101;
        PyObject *tmp_name_name_66;
        PyObject *tmp_globals_name_66;
        PyObject *tmp_locals_name_66;
        PyObject *tmp_fromlist_name_66;
        PyObject *tmp_level_name_66;
        tmp_name_name_66 = const_str_plain_buzzfeed;
        tmp_globals_name_66 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_66 = Py_None;
        tmp_fromlist_name_66 = const_tuple_str_plain_BuzzFeedIE_tuple;
        tmp_level_name_66 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 136;
        tmp_import_name_from_101 = IMPORT_MODULE5(tmp_name_name_66, tmp_globals_name_66, tmp_locals_name_66, tmp_fromlist_name_66, tmp_level_name_66);
        if (tmp_import_name_from_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 136;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_101)) {
           tmp_assign_source_124 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_101,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BuzzFeedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_124 = IMPORT_NAME(tmp_import_name_from_101, const_str_plain_BuzzFeedIE);
        }

        Py_DECREF(tmp_import_name_from_101);
        if (tmp_assign_source_124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 136;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BuzzFeedIE, tmp_assign_source_124);
    }
    {
        PyObject *tmp_assign_source_125;
        PyObject *tmp_import_name_from_102;
        PyObject *tmp_name_name_67;
        PyObject *tmp_globals_name_67;
        PyObject *tmp_locals_name_67;
        PyObject *tmp_fromlist_name_67;
        PyObject *tmp_level_name_67;
        tmp_name_name_67 = const_str_plain_byutv;
        tmp_globals_name_67 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_67 = Py_None;
        tmp_fromlist_name_67 = const_tuple_str_plain_BYUtvIE_tuple;
        tmp_level_name_67 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 137;
        tmp_import_name_from_102 = IMPORT_MODULE5(tmp_name_name_67, tmp_globals_name_67, tmp_locals_name_67, tmp_fromlist_name_67, tmp_level_name_67);
        if (tmp_import_name_from_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 137;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_102)) {
           tmp_assign_source_125 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_102,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BYUtvIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_125 = IMPORT_NAME(tmp_import_name_from_102, const_str_plain_BYUtvIE);
        }

        Py_DECREF(tmp_import_name_from_102);
        if (tmp_assign_source_125 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 137;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BYUtvIE, tmp_assign_source_125);
    }
    {
        PyObject *tmp_assign_source_126;
        PyObject *tmp_import_name_from_103;
        PyObject *tmp_name_name_68;
        PyObject *tmp_globals_name_68;
        PyObject *tmp_locals_name_68;
        PyObject *tmp_fromlist_name_68;
        PyObject *tmp_level_name_68;
        tmp_name_name_68 = const_str_plain_c56;
        tmp_globals_name_68 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_68 = Py_None;
        tmp_fromlist_name_68 = const_tuple_str_plain_C56IE_tuple;
        tmp_level_name_68 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 138;
        tmp_import_name_from_103 = IMPORT_MODULE5(tmp_name_name_68, tmp_globals_name_68, tmp_locals_name_68, tmp_fromlist_name_68, tmp_level_name_68);
        if (tmp_import_name_from_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 138;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_103)) {
           tmp_assign_source_126 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_103,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_C56IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_126 = IMPORT_NAME(tmp_import_name_from_103, const_str_plain_C56IE);
        }

        Py_DECREF(tmp_import_name_from_103);
        if (tmp_assign_source_126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 138;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_C56IE, tmp_assign_source_126);
    }
    {
        PyObject *tmp_assign_source_127;
        PyObject *tmp_name_name_69;
        PyObject *tmp_globals_name_69;
        PyObject *tmp_locals_name_69;
        PyObject *tmp_fromlist_name_69;
        PyObject *tmp_level_name_69;
        tmp_name_name_69 = const_str_plain_camdemy;
        tmp_globals_name_69 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_69 = Py_None;
        tmp_fromlist_name_69 = const_tuple_str_plain_CamdemyIE_str_plain_CamdemyFolderIE_tuple;
        tmp_level_name_69 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 139;
        tmp_assign_source_127 = IMPORT_MODULE5(tmp_name_name_69, tmp_globals_name_69, tmp_locals_name_69, tmp_fromlist_name_69, tmp_level_name_69);
        if (tmp_assign_source_127 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 139;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_21__module == NULL);
        tmp_import_from_21__module = tmp_assign_source_127;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_128;
        PyObject *tmp_import_name_from_104;
        CHECK_OBJECT(tmp_import_from_21__module);
        tmp_import_name_from_104 = tmp_import_from_21__module;
        if (PyModule_Check(tmp_import_name_from_104)) {
           tmp_assign_source_128 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_104,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CamdemyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_128 = IMPORT_NAME(tmp_import_name_from_104, const_str_plain_CamdemyIE);
        }

        if (tmp_assign_source_128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 139;

            goto try_except_handler_21;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CamdemyIE, tmp_assign_source_128);
    }
    {
        PyObject *tmp_assign_source_129;
        PyObject *tmp_import_name_from_105;
        CHECK_OBJECT(tmp_import_from_21__module);
        tmp_import_name_from_105 = tmp_import_from_21__module;
        if (PyModule_Check(tmp_import_name_from_105)) {
           tmp_assign_source_129 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_105,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CamdemyFolderIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_129 = IMPORT_NAME(tmp_import_name_from_105, const_str_plain_CamdemyFolderIE);
        }

        if (tmp_assign_source_129 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 139;

            goto try_except_handler_21;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CamdemyFolderIE, tmp_assign_source_129);
    }
    goto try_end_21;
    // Exception handler code:
    try_except_handler_21:;
    exception_keeper_type_21 = exception_type;
    exception_keeper_value_21 = exception_value;
    exception_keeper_tb_21 = exception_tb;
    exception_keeper_lineno_21 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_21__module);
    Py_DECREF(tmp_import_from_21__module);
    tmp_import_from_21__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_21;
    exception_value = exception_keeper_value_21;
    exception_tb = exception_keeper_tb_21;
    exception_lineno = exception_keeper_lineno_21;

    goto frame_exception_exit_1;
    // End of try:
    try_end_21:;
    CHECK_OBJECT(tmp_import_from_21__module);
    Py_DECREF(tmp_import_from_21__module);
    tmp_import_from_21__module = NULL;

    {
        PyObject *tmp_assign_source_130;
        PyObject *tmp_import_name_from_106;
        PyObject *tmp_name_name_70;
        PyObject *tmp_globals_name_70;
        PyObject *tmp_locals_name_70;
        PyObject *tmp_fromlist_name_70;
        PyObject *tmp_level_name_70;
        tmp_name_name_70 = const_str_plain_cammodels;
        tmp_globals_name_70 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_70 = Py_None;
        tmp_fromlist_name_70 = const_tuple_str_plain_CamModelsIE_tuple;
        tmp_level_name_70 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 143;
        tmp_import_name_from_106 = IMPORT_MODULE5(tmp_name_name_70, tmp_globals_name_70, tmp_locals_name_70, tmp_fromlist_name_70, tmp_level_name_70);
        if (tmp_import_name_from_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 143;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_106)) {
           tmp_assign_source_130 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_106,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CamModelsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_130 = IMPORT_NAME(tmp_import_name_from_106, const_str_plain_CamModelsIE);
        }

        Py_DECREF(tmp_import_name_from_106);
        if (tmp_assign_source_130 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 143;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CamModelsIE, tmp_assign_source_130);
    }
    {
        PyObject *tmp_assign_source_131;
        PyObject *tmp_import_name_from_107;
        PyObject *tmp_name_name_71;
        PyObject *tmp_globals_name_71;
        PyObject *tmp_locals_name_71;
        PyObject *tmp_fromlist_name_71;
        PyObject *tmp_level_name_71;
        tmp_name_name_71 = const_str_plain_camtube;
        tmp_globals_name_71 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_71 = Py_None;
        tmp_fromlist_name_71 = const_tuple_str_plain_CamTubeIE_tuple;
        tmp_level_name_71 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 144;
        tmp_import_name_from_107 = IMPORT_MODULE5(tmp_name_name_71, tmp_globals_name_71, tmp_locals_name_71, tmp_fromlist_name_71, tmp_level_name_71);
        if (tmp_import_name_from_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 144;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_107)) {
           tmp_assign_source_131 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_107,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CamTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_131 = IMPORT_NAME(tmp_import_name_from_107, const_str_plain_CamTubeIE);
        }

        Py_DECREF(tmp_import_name_from_107);
        if (tmp_assign_source_131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 144;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CamTubeIE, tmp_assign_source_131);
    }
    {
        PyObject *tmp_assign_source_132;
        PyObject *tmp_import_name_from_108;
        PyObject *tmp_name_name_72;
        PyObject *tmp_globals_name_72;
        PyObject *tmp_locals_name_72;
        PyObject *tmp_fromlist_name_72;
        PyObject *tmp_level_name_72;
        tmp_name_name_72 = const_str_plain_camwithher;
        tmp_globals_name_72 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_72 = Py_None;
        tmp_fromlist_name_72 = const_tuple_str_plain_CamWithHerIE_tuple;
        tmp_level_name_72 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 145;
        tmp_import_name_from_108 = IMPORT_MODULE5(tmp_name_name_72, tmp_globals_name_72, tmp_locals_name_72, tmp_fromlist_name_72, tmp_level_name_72);
        if (tmp_import_name_from_108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 145;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_108)) {
           tmp_assign_source_132 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_108,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CamWithHerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_132 = IMPORT_NAME(tmp_import_name_from_108, const_str_plain_CamWithHerIE);
        }

        Py_DECREF(tmp_import_name_from_108);
        if (tmp_assign_source_132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 145;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CamWithHerIE, tmp_assign_source_132);
    }
    {
        PyObject *tmp_assign_source_133;
        PyObject *tmp_import_name_from_109;
        PyObject *tmp_name_name_73;
        PyObject *tmp_globals_name_73;
        PyObject *tmp_locals_name_73;
        PyObject *tmp_fromlist_name_73;
        PyObject *tmp_level_name_73;
        tmp_name_name_73 = const_str_plain_canalplus;
        tmp_globals_name_73 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_73 = Py_None;
        tmp_fromlist_name_73 = const_tuple_str_plain_CanalplusIE_tuple;
        tmp_level_name_73 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 146;
        tmp_import_name_from_109 = IMPORT_MODULE5(tmp_name_name_73, tmp_globals_name_73, tmp_locals_name_73, tmp_fromlist_name_73, tmp_level_name_73);
        if (tmp_import_name_from_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 146;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_109)) {
           tmp_assign_source_133 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_109,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CanalplusIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_133 = IMPORT_NAME(tmp_import_name_from_109, const_str_plain_CanalplusIE);
        }

        Py_DECREF(tmp_import_name_from_109);
        if (tmp_assign_source_133 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 146;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CanalplusIE, tmp_assign_source_133);
    }
    {
        PyObject *tmp_assign_source_134;
        PyObject *tmp_import_name_from_110;
        PyObject *tmp_name_name_74;
        PyObject *tmp_globals_name_74;
        PyObject *tmp_locals_name_74;
        PyObject *tmp_fromlist_name_74;
        PyObject *tmp_level_name_74;
        tmp_name_name_74 = const_str_plain_canalc2;
        tmp_globals_name_74 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_74 = Py_None;
        tmp_fromlist_name_74 = const_tuple_str_plain_Canalc2IE_tuple;
        tmp_level_name_74 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 147;
        tmp_import_name_from_110 = IMPORT_MODULE5(tmp_name_name_74, tmp_globals_name_74, tmp_locals_name_74, tmp_fromlist_name_74, tmp_level_name_74);
        if (tmp_import_name_from_110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 147;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_110)) {
           tmp_assign_source_134 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_110,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Canalc2IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_134 = IMPORT_NAME(tmp_import_name_from_110, const_str_plain_Canalc2IE);
        }

        Py_DECREF(tmp_import_name_from_110);
        if (tmp_assign_source_134 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 147;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Canalc2IE, tmp_assign_source_134);
    }
    {
        PyObject *tmp_assign_source_135;
        PyObject *tmp_name_name_75;
        PyObject *tmp_globals_name_75;
        PyObject *tmp_locals_name_75;
        PyObject *tmp_fromlist_name_75;
        PyObject *tmp_level_name_75;
        tmp_name_name_75 = const_str_plain_canvas;
        tmp_globals_name_75 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_75 = Py_None;
        tmp_fromlist_name_75 = const_tuple_str_plain_CanvasIE_str_plain_CanvasEenIE_str_plain_VrtNUIE_tuple;
        tmp_level_name_75 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 148;
        tmp_assign_source_135 = IMPORT_MODULE5(tmp_name_name_75, tmp_globals_name_75, tmp_locals_name_75, tmp_fromlist_name_75, tmp_level_name_75);
        if (tmp_assign_source_135 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 148;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_22__module == NULL);
        tmp_import_from_22__module = tmp_assign_source_135;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_136;
        PyObject *tmp_import_name_from_111;
        CHECK_OBJECT(tmp_import_from_22__module);
        tmp_import_name_from_111 = tmp_import_from_22__module;
        if (PyModule_Check(tmp_import_name_from_111)) {
           tmp_assign_source_136 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_111,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CanvasIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_136 = IMPORT_NAME(tmp_import_name_from_111, const_str_plain_CanvasIE);
        }

        if (tmp_assign_source_136 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 148;

            goto try_except_handler_22;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CanvasIE, tmp_assign_source_136);
    }
    {
        PyObject *tmp_assign_source_137;
        PyObject *tmp_import_name_from_112;
        CHECK_OBJECT(tmp_import_from_22__module);
        tmp_import_name_from_112 = tmp_import_from_22__module;
        if (PyModule_Check(tmp_import_name_from_112)) {
           tmp_assign_source_137 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_112,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CanvasEenIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_137 = IMPORT_NAME(tmp_import_name_from_112, const_str_plain_CanvasEenIE);
        }

        if (tmp_assign_source_137 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 148;

            goto try_except_handler_22;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CanvasEenIE, tmp_assign_source_137);
    }
    {
        PyObject *tmp_assign_source_138;
        PyObject *tmp_import_name_from_113;
        CHECK_OBJECT(tmp_import_from_22__module);
        tmp_import_name_from_113 = tmp_import_from_22__module;
        if (PyModule_Check(tmp_import_name_from_113)) {
           tmp_assign_source_138 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_113,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VrtNUIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_138 = IMPORT_NAME(tmp_import_name_from_113, const_str_plain_VrtNUIE);
        }

        if (tmp_assign_source_138 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 148;

            goto try_except_handler_22;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VrtNUIE, tmp_assign_source_138);
    }
    goto try_end_22;
    // Exception handler code:
    try_except_handler_22:;
    exception_keeper_type_22 = exception_type;
    exception_keeper_value_22 = exception_value;
    exception_keeper_tb_22 = exception_tb;
    exception_keeper_lineno_22 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_22__module);
    Py_DECREF(tmp_import_from_22__module);
    tmp_import_from_22__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_22;
    exception_value = exception_keeper_value_22;
    exception_tb = exception_keeper_tb_22;
    exception_lineno = exception_keeper_lineno_22;

    goto frame_exception_exit_1;
    // End of try:
    try_end_22:;
    CHECK_OBJECT(tmp_import_from_22__module);
    Py_DECREF(tmp_import_from_22__module);
    tmp_import_from_22__module = NULL;

    {
        PyObject *tmp_assign_source_139;
        PyObject *tmp_name_name_76;
        PyObject *tmp_globals_name_76;
        PyObject *tmp_locals_name_76;
        PyObject *tmp_fromlist_name_76;
        PyObject *tmp_level_name_76;
        tmp_name_name_76 = const_str_plain_carambatv;
        tmp_globals_name_76 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_76 = Py_None;
        tmp_fromlist_name_76 = const_tuple_str_plain_CarambaTVIE_str_plain_CarambaTVPageIE_tuple;
        tmp_level_name_76 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 153;
        tmp_assign_source_139 = IMPORT_MODULE5(tmp_name_name_76, tmp_globals_name_76, tmp_locals_name_76, tmp_fromlist_name_76, tmp_level_name_76);
        if (tmp_assign_source_139 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 153;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_23__module == NULL);
        tmp_import_from_23__module = tmp_assign_source_139;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_140;
        PyObject *tmp_import_name_from_114;
        CHECK_OBJECT(tmp_import_from_23__module);
        tmp_import_name_from_114 = tmp_import_from_23__module;
        if (PyModule_Check(tmp_import_name_from_114)) {
           tmp_assign_source_140 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_114,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CarambaTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_140 = IMPORT_NAME(tmp_import_name_from_114, const_str_plain_CarambaTVIE);
        }

        if (tmp_assign_source_140 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 153;

            goto try_except_handler_23;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CarambaTVIE, tmp_assign_source_140);
    }
    {
        PyObject *tmp_assign_source_141;
        PyObject *tmp_import_name_from_115;
        CHECK_OBJECT(tmp_import_from_23__module);
        tmp_import_name_from_115 = tmp_import_from_23__module;
        if (PyModule_Check(tmp_import_name_from_115)) {
           tmp_assign_source_141 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_115,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CarambaTVPageIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_141 = IMPORT_NAME(tmp_import_name_from_115, const_str_plain_CarambaTVPageIE);
        }

        if (tmp_assign_source_141 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 153;

            goto try_except_handler_23;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CarambaTVPageIE, tmp_assign_source_141);
    }
    goto try_end_23;
    // Exception handler code:
    try_except_handler_23:;
    exception_keeper_type_23 = exception_type;
    exception_keeper_value_23 = exception_value;
    exception_keeper_tb_23 = exception_tb;
    exception_keeper_lineno_23 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_23__module);
    Py_DECREF(tmp_import_from_23__module);
    tmp_import_from_23__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_23;
    exception_value = exception_keeper_value_23;
    exception_tb = exception_keeper_tb_23;
    exception_lineno = exception_keeper_lineno_23;

    goto frame_exception_exit_1;
    // End of try:
    try_end_23:;
    CHECK_OBJECT(tmp_import_from_23__module);
    Py_DECREF(tmp_import_from_23__module);
    tmp_import_from_23__module = NULL;

    {
        PyObject *tmp_assign_source_142;
        PyObject *tmp_import_name_from_116;
        PyObject *tmp_name_name_77;
        PyObject *tmp_globals_name_77;
        PyObject *tmp_locals_name_77;
        PyObject *tmp_fromlist_name_77;
        PyObject *tmp_level_name_77;
        tmp_name_name_77 = const_str_plain_cartoonnetwork;
        tmp_globals_name_77 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_77 = Py_None;
        tmp_fromlist_name_77 = const_tuple_str_plain_CartoonNetworkIE_tuple;
        tmp_level_name_77 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 157;
        tmp_import_name_from_116 = IMPORT_MODULE5(tmp_name_name_77, tmp_globals_name_77, tmp_locals_name_77, tmp_fromlist_name_77, tmp_level_name_77);
        if (tmp_import_name_from_116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 157;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_116)) {
           tmp_assign_source_142 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_116,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CartoonNetworkIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_142 = IMPORT_NAME(tmp_import_name_from_116, const_str_plain_CartoonNetworkIE);
        }

        Py_DECREF(tmp_import_name_from_116);
        if (tmp_assign_source_142 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 157;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CartoonNetworkIE, tmp_assign_source_142);
    }
    {
        PyObject *tmp_assign_source_143;
        PyObject *tmp_name_name_78;
        PyObject *tmp_globals_name_78;
        PyObject *tmp_locals_name_78;
        PyObject *tmp_fromlist_name_78;
        PyObject *tmp_level_name_78;
        tmp_name_name_78 = const_str_plain_cbc;
        tmp_globals_name_78 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_78 = Py_None;
        tmp_fromlist_name_78 = const_tuple_0ea1f8be190213cfeea8b1023b02021d_tuple;
        tmp_level_name_78 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 158;
        tmp_assign_source_143 = IMPORT_MODULE5(tmp_name_name_78, tmp_globals_name_78, tmp_locals_name_78, tmp_fromlist_name_78, tmp_level_name_78);
        if (tmp_assign_source_143 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 158;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_24__module == NULL);
        tmp_import_from_24__module = tmp_assign_source_143;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_144;
        PyObject *tmp_import_name_from_117;
        CHECK_OBJECT(tmp_import_from_24__module);
        tmp_import_name_from_117 = tmp_import_from_24__module;
        if (PyModule_Check(tmp_import_name_from_117)) {
           tmp_assign_source_144 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_117,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CBCIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_144 = IMPORT_NAME(tmp_import_name_from_117, const_str_plain_CBCIE);
        }

        if (tmp_assign_source_144 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 158;

            goto try_except_handler_24;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CBCIE, tmp_assign_source_144);
    }
    {
        PyObject *tmp_assign_source_145;
        PyObject *tmp_import_name_from_118;
        CHECK_OBJECT(tmp_import_from_24__module);
        tmp_import_name_from_118 = tmp_import_from_24__module;
        if (PyModule_Check(tmp_import_name_from_118)) {
           tmp_assign_source_145 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_118,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CBCPlayerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_145 = IMPORT_NAME(tmp_import_name_from_118, const_str_plain_CBCPlayerIE);
        }

        if (tmp_assign_source_145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 158;

            goto try_except_handler_24;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CBCPlayerIE, tmp_assign_source_145);
    }
    {
        PyObject *tmp_assign_source_146;
        PyObject *tmp_import_name_from_119;
        CHECK_OBJECT(tmp_import_from_24__module);
        tmp_import_name_from_119 = tmp_import_from_24__module;
        if (PyModule_Check(tmp_import_name_from_119)) {
           tmp_assign_source_146 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_119,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CBCWatchVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_146 = IMPORT_NAME(tmp_import_name_from_119, const_str_plain_CBCWatchVideoIE);
        }

        if (tmp_assign_source_146 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 158;

            goto try_except_handler_24;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CBCWatchVideoIE, tmp_assign_source_146);
    }
    {
        PyObject *tmp_assign_source_147;
        PyObject *tmp_import_name_from_120;
        CHECK_OBJECT(tmp_import_from_24__module);
        tmp_import_name_from_120 = tmp_import_from_24__module;
        if (PyModule_Check(tmp_import_name_from_120)) {
           tmp_assign_source_147 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_120,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CBCWatchIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_147 = IMPORT_NAME(tmp_import_name_from_120, const_str_plain_CBCWatchIE);
        }

        if (tmp_assign_source_147 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 158;

            goto try_except_handler_24;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CBCWatchIE, tmp_assign_source_147);
    }
    {
        PyObject *tmp_assign_source_148;
        PyObject *tmp_import_name_from_121;
        CHECK_OBJECT(tmp_import_from_24__module);
        tmp_import_name_from_121 = tmp_import_from_24__module;
        if (PyModule_Check(tmp_import_name_from_121)) {
           tmp_assign_source_148 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_121,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CBCOlympicsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_148 = IMPORT_NAME(tmp_import_name_from_121, const_str_plain_CBCOlympicsIE);
        }

        if (tmp_assign_source_148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 158;

            goto try_except_handler_24;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CBCOlympicsIE, tmp_assign_source_148);
    }
    goto try_end_24;
    // Exception handler code:
    try_except_handler_24:;
    exception_keeper_type_24 = exception_type;
    exception_keeper_value_24 = exception_value;
    exception_keeper_tb_24 = exception_tb;
    exception_keeper_lineno_24 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_24__module);
    Py_DECREF(tmp_import_from_24__module);
    tmp_import_from_24__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_24;
    exception_value = exception_keeper_value_24;
    exception_tb = exception_keeper_tb_24;
    exception_lineno = exception_keeper_lineno_24;

    goto frame_exception_exit_1;
    // End of try:
    try_end_24:;
    CHECK_OBJECT(tmp_import_from_24__module);
    Py_DECREF(tmp_import_from_24__module);
    tmp_import_from_24__module = NULL;

    {
        PyObject *tmp_assign_source_149;
        PyObject *tmp_import_name_from_122;
        PyObject *tmp_name_name_79;
        PyObject *tmp_globals_name_79;
        PyObject *tmp_locals_name_79;
        PyObject *tmp_fromlist_name_79;
        PyObject *tmp_level_name_79;
        tmp_name_name_79 = const_str_plain_cbs;
        tmp_globals_name_79 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_79 = Py_None;
        tmp_fromlist_name_79 = const_tuple_str_plain_CBSIE_tuple;
        tmp_level_name_79 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 165;
        tmp_import_name_from_122 = IMPORT_MODULE5(tmp_name_name_79, tmp_globals_name_79, tmp_locals_name_79, tmp_fromlist_name_79, tmp_level_name_79);
        if (tmp_import_name_from_122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 165;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_122)) {
           tmp_assign_source_149 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_122,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CBSIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_149 = IMPORT_NAME(tmp_import_name_from_122, const_str_plain_CBSIE);
        }

        Py_DECREF(tmp_import_name_from_122);
        if (tmp_assign_source_149 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 165;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CBSIE, tmp_assign_source_149);
    }
    {
        PyObject *tmp_assign_source_150;
        PyObject *tmp_import_name_from_123;
        PyObject *tmp_name_name_80;
        PyObject *tmp_globals_name_80;
        PyObject *tmp_locals_name_80;
        PyObject *tmp_fromlist_name_80;
        PyObject *tmp_level_name_80;
        tmp_name_name_80 = const_str_plain_cbslocal;
        tmp_globals_name_80 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_80 = Py_None;
        tmp_fromlist_name_80 = const_tuple_str_plain_CBSLocalIE_tuple;
        tmp_level_name_80 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 166;
        tmp_import_name_from_123 = IMPORT_MODULE5(tmp_name_name_80, tmp_globals_name_80, tmp_locals_name_80, tmp_fromlist_name_80, tmp_level_name_80);
        if (tmp_import_name_from_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 166;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_123)) {
           tmp_assign_source_150 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_123,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CBSLocalIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_150 = IMPORT_NAME(tmp_import_name_from_123, const_str_plain_CBSLocalIE);
        }

        Py_DECREF(tmp_import_name_from_123);
        if (tmp_assign_source_150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 166;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CBSLocalIE, tmp_assign_source_150);
    }
    {
        PyObject *tmp_assign_source_151;
        PyObject *tmp_import_name_from_124;
        PyObject *tmp_name_name_81;
        PyObject *tmp_globals_name_81;
        PyObject *tmp_locals_name_81;
        PyObject *tmp_fromlist_name_81;
        PyObject *tmp_level_name_81;
        tmp_name_name_81 = const_str_plain_cbsinteractive;
        tmp_globals_name_81 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_81 = Py_None;
        tmp_fromlist_name_81 = const_tuple_str_plain_CBSInteractiveIE_tuple;
        tmp_level_name_81 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 167;
        tmp_import_name_from_124 = IMPORT_MODULE5(tmp_name_name_81, tmp_globals_name_81, tmp_locals_name_81, tmp_fromlist_name_81, tmp_level_name_81);
        if (tmp_import_name_from_124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 167;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_124)) {
           tmp_assign_source_151 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_124,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CBSInteractiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_151 = IMPORT_NAME(tmp_import_name_from_124, const_str_plain_CBSInteractiveIE);
        }

        Py_DECREF(tmp_import_name_from_124);
        if (tmp_assign_source_151 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 167;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CBSInteractiveIE, tmp_assign_source_151);
    }
    {
        PyObject *tmp_assign_source_152;
        PyObject *tmp_name_name_82;
        PyObject *tmp_globals_name_82;
        PyObject *tmp_locals_name_82;
        PyObject *tmp_fromlist_name_82;
        PyObject *tmp_level_name_82;
        tmp_name_name_82 = const_str_plain_cbsnews;
        tmp_globals_name_82 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_82 = Py_None;
        tmp_fromlist_name_82 = const_tuple_cca3ac0c452e6fbebbbd8ee06112ebf1_tuple;
        tmp_level_name_82 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 168;
        tmp_assign_source_152 = IMPORT_MODULE5(tmp_name_name_82, tmp_globals_name_82, tmp_locals_name_82, tmp_fromlist_name_82, tmp_level_name_82);
        if (tmp_assign_source_152 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 168;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_25__module == NULL);
        tmp_import_from_25__module = tmp_assign_source_152;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_153;
        PyObject *tmp_import_name_from_125;
        CHECK_OBJECT(tmp_import_from_25__module);
        tmp_import_name_from_125 = tmp_import_from_25__module;
        if (PyModule_Check(tmp_import_name_from_125)) {
           tmp_assign_source_153 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_125,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CBSNewsEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_153 = IMPORT_NAME(tmp_import_name_from_125, const_str_plain_CBSNewsEmbedIE);
        }

        if (tmp_assign_source_153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 168;

            goto try_except_handler_25;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CBSNewsEmbedIE, tmp_assign_source_153);
    }
    {
        PyObject *tmp_assign_source_154;
        PyObject *tmp_import_name_from_126;
        CHECK_OBJECT(tmp_import_from_25__module);
        tmp_import_name_from_126 = tmp_import_from_25__module;
        if (PyModule_Check(tmp_import_name_from_126)) {
           tmp_assign_source_154 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_126,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CBSNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_154 = IMPORT_NAME(tmp_import_name_from_126, const_str_plain_CBSNewsIE);
        }

        if (tmp_assign_source_154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 168;

            goto try_except_handler_25;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CBSNewsIE, tmp_assign_source_154);
    }
    {
        PyObject *tmp_assign_source_155;
        PyObject *tmp_import_name_from_127;
        CHECK_OBJECT(tmp_import_from_25__module);
        tmp_import_name_from_127 = tmp_import_from_25__module;
        if (PyModule_Check(tmp_import_name_from_127)) {
           tmp_assign_source_155 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_127,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CBSNewsLiveVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_155 = IMPORT_NAME(tmp_import_name_from_127, const_str_plain_CBSNewsLiveVideoIE);
        }

        if (tmp_assign_source_155 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 168;

            goto try_except_handler_25;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CBSNewsLiveVideoIE, tmp_assign_source_155);
    }
    goto try_end_25;
    // Exception handler code:
    try_except_handler_25:;
    exception_keeper_type_25 = exception_type;
    exception_keeper_value_25 = exception_value;
    exception_keeper_tb_25 = exception_tb;
    exception_keeper_lineno_25 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_25__module);
    Py_DECREF(tmp_import_from_25__module);
    tmp_import_from_25__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_25;
    exception_value = exception_keeper_value_25;
    exception_tb = exception_keeper_tb_25;
    exception_lineno = exception_keeper_lineno_25;

    goto frame_exception_exit_1;
    // End of try:
    try_end_25:;
    CHECK_OBJECT(tmp_import_from_25__module);
    Py_DECREF(tmp_import_from_25__module);
    tmp_import_from_25__module = NULL;

    {
        PyObject *tmp_assign_source_156;
        PyObject *tmp_import_name_from_128;
        PyObject *tmp_name_name_83;
        PyObject *tmp_globals_name_83;
        PyObject *tmp_locals_name_83;
        PyObject *tmp_fromlist_name_83;
        PyObject *tmp_level_name_83;
        tmp_name_name_83 = const_str_plain_cbssports;
        tmp_globals_name_83 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_83 = Py_None;
        tmp_fromlist_name_83 = const_tuple_str_plain_CBSSportsIE_tuple;
        tmp_level_name_83 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 173;
        tmp_import_name_from_128 = IMPORT_MODULE5(tmp_name_name_83, tmp_globals_name_83, tmp_locals_name_83, tmp_fromlist_name_83, tmp_level_name_83);
        if (tmp_import_name_from_128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 173;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_128)) {
           tmp_assign_source_156 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_128,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CBSSportsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_156 = IMPORT_NAME(tmp_import_name_from_128, const_str_plain_CBSSportsIE);
        }

        Py_DECREF(tmp_import_name_from_128);
        if (tmp_assign_source_156 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 173;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CBSSportsIE, tmp_assign_source_156);
    }
    {
        PyObject *tmp_assign_source_157;
        PyObject *tmp_name_name_84;
        PyObject *tmp_globals_name_84;
        PyObject *tmp_locals_name_84;
        PyObject *tmp_fromlist_name_84;
        PyObject *tmp_level_name_84;
        tmp_name_name_84 = const_str_plain_ccc;
        tmp_globals_name_84 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_84 = Py_None;
        tmp_fromlist_name_84 = const_tuple_str_plain_CCCIE_str_plain_CCCPlaylistIE_tuple;
        tmp_level_name_84 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 174;
        tmp_assign_source_157 = IMPORT_MODULE5(tmp_name_name_84, tmp_globals_name_84, tmp_locals_name_84, tmp_fromlist_name_84, tmp_level_name_84);
        if (tmp_assign_source_157 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 174;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_26__module == NULL);
        tmp_import_from_26__module = tmp_assign_source_157;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_158;
        PyObject *tmp_import_name_from_129;
        CHECK_OBJECT(tmp_import_from_26__module);
        tmp_import_name_from_129 = tmp_import_from_26__module;
        if (PyModule_Check(tmp_import_name_from_129)) {
           tmp_assign_source_158 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_129,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CCCIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_158 = IMPORT_NAME(tmp_import_name_from_129, const_str_plain_CCCIE);
        }

        if (tmp_assign_source_158 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 174;

            goto try_except_handler_26;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CCCIE, tmp_assign_source_158);
    }
    {
        PyObject *tmp_assign_source_159;
        PyObject *tmp_import_name_from_130;
        CHECK_OBJECT(tmp_import_from_26__module);
        tmp_import_name_from_130 = tmp_import_from_26__module;
        if (PyModule_Check(tmp_import_name_from_130)) {
           tmp_assign_source_159 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_130,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CCCPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_159 = IMPORT_NAME(tmp_import_name_from_130, const_str_plain_CCCPlaylistIE);
        }

        if (tmp_assign_source_159 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 174;

            goto try_except_handler_26;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CCCPlaylistIE, tmp_assign_source_159);
    }
    goto try_end_26;
    // Exception handler code:
    try_except_handler_26:;
    exception_keeper_type_26 = exception_type;
    exception_keeper_value_26 = exception_value;
    exception_keeper_tb_26 = exception_tb;
    exception_keeper_lineno_26 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_26__module);
    Py_DECREF(tmp_import_from_26__module);
    tmp_import_from_26__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_26;
    exception_value = exception_keeper_value_26;
    exception_tb = exception_keeper_tb_26;
    exception_lineno = exception_keeper_lineno_26;

    goto frame_exception_exit_1;
    // End of try:
    try_end_26:;
    CHECK_OBJECT(tmp_import_from_26__module);
    Py_DECREF(tmp_import_from_26__module);
    tmp_import_from_26__module = NULL;

    {
        PyObject *tmp_assign_source_160;
        PyObject *tmp_import_name_from_131;
        PyObject *tmp_name_name_85;
        PyObject *tmp_globals_name_85;
        PyObject *tmp_locals_name_85;
        PyObject *tmp_fromlist_name_85;
        PyObject *tmp_level_name_85;
        tmp_name_name_85 = const_str_plain_ccma;
        tmp_globals_name_85 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_85 = Py_None;
        tmp_fromlist_name_85 = const_tuple_str_plain_CCMAIE_tuple;
        tmp_level_name_85 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 178;
        tmp_import_name_from_131 = IMPORT_MODULE5(tmp_name_name_85, tmp_globals_name_85, tmp_locals_name_85, tmp_fromlist_name_85, tmp_level_name_85);
        if (tmp_import_name_from_131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 178;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_131)) {
           tmp_assign_source_160 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_131,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CCMAIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_160 = IMPORT_NAME(tmp_import_name_from_131, const_str_plain_CCMAIE);
        }

        Py_DECREF(tmp_import_name_from_131);
        if (tmp_assign_source_160 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 178;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CCMAIE, tmp_assign_source_160);
    }
    {
        PyObject *tmp_assign_source_161;
        PyObject *tmp_import_name_from_132;
        PyObject *tmp_name_name_86;
        PyObject *tmp_globals_name_86;
        PyObject *tmp_locals_name_86;
        PyObject *tmp_fromlist_name_86;
        PyObject *tmp_level_name_86;
        tmp_name_name_86 = const_str_plain_cctv;
        tmp_globals_name_86 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_86 = Py_None;
        tmp_fromlist_name_86 = const_tuple_str_plain_CCTVIE_tuple;
        tmp_level_name_86 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 179;
        tmp_import_name_from_132 = IMPORT_MODULE5(tmp_name_name_86, tmp_globals_name_86, tmp_locals_name_86, tmp_fromlist_name_86, tmp_level_name_86);
        if (tmp_import_name_from_132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 179;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_132)) {
           tmp_assign_source_161 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_132,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CCTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_161 = IMPORT_NAME(tmp_import_name_from_132, const_str_plain_CCTVIE);
        }

        Py_DECREF(tmp_import_name_from_132);
        if (tmp_assign_source_161 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 179;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CCTVIE, tmp_assign_source_161);
    }
    {
        PyObject *tmp_assign_source_162;
        PyObject *tmp_import_name_from_133;
        PyObject *tmp_name_name_87;
        PyObject *tmp_globals_name_87;
        PyObject *tmp_locals_name_87;
        PyObject *tmp_fromlist_name_87;
        PyObject *tmp_level_name_87;
        tmp_name_name_87 = const_str_plain_cda;
        tmp_globals_name_87 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_87 = Py_None;
        tmp_fromlist_name_87 = const_tuple_str_plain_CDAIE_tuple;
        tmp_level_name_87 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 180;
        tmp_import_name_from_133 = IMPORT_MODULE5(tmp_name_name_87, tmp_globals_name_87, tmp_locals_name_87, tmp_fromlist_name_87, tmp_level_name_87);
        if (tmp_import_name_from_133 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_133)) {
           tmp_assign_source_162 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_133,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CDAIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_162 = IMPORT_NAME(tmp_import_name_from_133, const_str_plain_CDAIE);
        }

        Py_DECREF(tmp_import_name_from_133);
        if (tmp_assign_source_162 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 180;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CDAIE, tmp_assign_source_162);
    }
    {
        PyObject *tmp_assign_source_163;
        PyObject *tmp_name_name_88;
        PyObject *tmp_globals_name_88;
        PyObject *tmp_locals_name_88;
        PyObject *tmp_fromlist_name_88;
        PyObject *tmp_level_name_88;
        tmp_name_name_88 = const_str_plain_ceskatelevize;
        tmp_globals_name_88 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_88 = Py_None;
        tmp_fromlist_name_88 = const_tuple_str_plain_CeskaTelevizeIE_str_plain_CeskaTelevizePoradyIE_tuple;
        tmp_level_name_88 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 181;
        tmp_assign_source_163 = IMPORT_MODULE5(tmp_name_name_88, tmp_globals_name_88, tmp_locals_name_88, tmp_fromlist_name_88, tmp_level_name_88);
        if (tmp_assign_source_163 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 181;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_27__module == NULL);
        tmp_import_from_27__module = tmp_assign_source_163;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_164;
        PyObject *tmp_import_name_from_134;
        CHECK_OBJECT(tmp_import_from_27__module);
        tmp_import_name_from_134 = tmp_import_from_27__module;
        if (PyModule_Check(tmp_import_name_from_134)) {
           tmp_assign_source_164 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_134,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CeskaTelevizeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_164 = IMPORT_NAME(tmp_import_name_from_134, const_str_plain_CeskaTelevizeIE);
        }

        if (tmp_assign_source_164 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 181;

            goto try_except_handler_27;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CeskaTelevizeIE, tmp_assign_source_164);
    }
    {
        PyObject *tmp_assign_source_165;
        PyObject *tmp_import_name_from_135;
        CHECK_OBJECT(tmp_import_from_27__module);
        tmp_import_name_from_135 = tmp_import_from_27__module;
        if (PyModule_Check(tmp_import_name_from_135)) {
           tmp_assign_source_165 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_135,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CeskaTelevizePoradyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_165 = IMPORT_NAME(tmp_import_name_from_135, const_str_plain_CeskaTelevizePoradyIE);
        }

        if (tmp_assign_source_165 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 181;

            goto try_except_handler_27;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CeskaTelevizePoradyIE, tmp_assign_source_165);
    }
    goto try_end_27;
    // Exception handler code:
    try_except_handler_27:;
    exception_keeper_type_27 = exception_type;
    exception_keeper_value_27 = exception_value;
    exception_keeper_tb_27 = exception_tb;
    exception_keeper_lineno_27 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_27__module);
    Py_DECREF(tmp_import_from_27__module);
    tmp_import_from_27__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_27;
    exception_value = exception_keeper_value_27;
    exception_tb = exception_keeper_tb_27;
    exception_lineno = exception_keeper_lineno_27;

    goto frame_exception_exit_1;
    // End of try:
    try_end_27:;
    CHECK_OBJECT(tmp_import_from_27__module);
    Py_DECREF(tmp_import_from_27__module);
    tmp_import_from_27__module = NULL;

    {
        PyObject *tmp_assign_source_166;
        PyObject *tmp_import_name_from_136;
        PyObject *tmp_name_name_89;
        PyObject *tmp_globals_name_89;
        PyObject *tmp_locals_name_89;
        PyObject *tmp_fromlist_name_89;
        PyObject *tmp_level_name_89;
        tmp_name_name_89 = const_str_plain_channel9;
        tmp_globals_name_89 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_89 = Py_None;
        tmp_fromlist_name_89 = const_tuple_str_plain_Channel9IE_tuple;
        tmp_level_name_89 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 185;
        tmp_import_name_from_136 = IMPORT_MODULE5(tmp_name_name_89, tmp_globals_name_89, tmp_locals_name_89, tmp_fromlist_name_89, tmp_level_name_89);
        if (tmp_import_name_from_136 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 185;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_136)) {
           tmp_assign_source_166 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_136,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Channel9IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_166 = IMPORT_NAME(tmp_import_name_from_136, const_str_plain_Channel9IE);
        }

        Py_DECREF(tmp_import_name_from_136);
        if (tmp_assign_source_166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 185;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Channel9IE, tmp_assign_source_166);
    }
    {
        PyObject *tmp_assign_source_167;
        PyObject *tmp_import_name_from_137;
        PyObject *tmp_name_name_90;
        PyObject *tmp_globals_name_90;
        PyObject *tmp_locals_name_90;
        PyObject *tmp_fromlist_name_90;
        PyObject *tmp_level_name_90;
        tmp_name_name_90 = const_str_plain_charlierose;
        tmp_globals_name_90 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_90 = Py_None;
        tmp_fromlist_name_90 = const_tuple_str_plain_CharlieRoseIE_tuple;
        tmp_level_name_90 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 186;
        tmp_import_name_from_137 = IMPORT_MODULE5(tmp_name_name_90, tmp_globals_name_90, tmp_locals_name_90, tmp_fromlist_name_90, tmp_level_name_90);
        if (tmp_import_name_from_137 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 186;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_137)) {
           tmp_assign_source_167 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_137,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CharlieRoseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_167 = IMPORT_NAME(tmp_import_name_from_137, const_str_plain_CharlieRoseIE);
        }

        Py_DECREF(tmp_import_name_from_137);
        if (tmp_assign_source_167 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 186;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CharlieRoseIE, tmp_assign_source_167);
    }
    {
        PyObject *tmp_assign_source_168;
        PyObject *tmp_import_name_from_138;
        PyObject *tmp_name_name_91;
        PyObject *tmp_globals_name_91;
        PyObject *tmp_locals_name_91;
        PyObject *tmp_fromlist_name_91;
        PyObject *tmp_level_name_91;
        tmp_name_name_91 = const_str_plain_chaturbate;
        tmp_globals_name_91 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_91 = Py_None;
        tmp_fromlist_name_91 = const_tuple_str_plain_ChaturbateIE_tuple;
        tmp_level_name_91 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 187;
        tmp_import_name_from_138 = IMPORT_MODULE5(tmp_name_name_91, tmp_globals_name_91, tmp_locals_name_91, tmp_fromlist_name_91, tmp_level_name_91);
        if (tmp_import_name_from_138 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 187;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_138)) {
           tmp_assign_source_168 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_138,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ChaturbateIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_168 = IMPORT_NAME(tmp_import_name_from_138, const_str_plain_ChaturbateIE);
        }

        Py_DECREF(tmp_import_name_from_138);
        if (tmp_assign_source_168 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 187;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ChaturbateIE, tmp_assign_source_168);
    }
    {
        PyObject *tmp_assign_source_169;
        PyObject *tmp_import_name_from_139;
        PyObject *tmp_name_name_92;
        PyObject *tmp_globals_name_92;
        PyObject *tmp_locals_name_92;
        PyObject *tmp_fromlist_name_92;
        PyObject *tmp_level_name_92;
        tmp_name_name_92 = const_str_plain_chilloutzone;
        tmp_globals_name_92 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_92 = Py_None;
        tmp_fromlist_name_92 = const_tuple_str_plain_ChilloutzoneIE_tuple;
        tmp_level_name_92 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 188;
        tmp_import_name_from_139 = IMPORT_MODULE5(tmp_name_name_92, tmp_globals_name_92, tmp_locals_name_92, tmp_fromlist_name_92, tmp_level_name_92);
        if (tmp_import_name_from_139 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 188;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_139)) {
           tmp_assign_source_169 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_139,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ChilloutzoneIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_169 = IMPORT_NAME(tmp_import_name_from_139, const_str_plain_ChilloutzoneIE);
        }

        Py_DECREF(tmp_import_name_from_139);
        if (tmp_assign_source_169 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 188;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ChilloutzoneIE, tmp_assign_source_169);
    }
    {
        PyObject *tmp_assign_source_170;
        PyObject *tmp_name_name_93;
        PyObject *tmp_globals_name_93;
        PyObject *tmp_locals_name_93;
        PyObject *tmp_fromlist_name_93;
        PyObject *tmp_level_name_93;
        tmp_name_name_93 = const_str_plain_chirbit;
        tmp_globals_name_93 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_93 = Py_None;
        tmp_fromlist_name_93 = const_tuple_str_plain_ChirbitIE_str_plain_ChirbitProfileIE_tuple;
        tmp_level_name_93 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 189;
        tmp_assign_source_170 = IMPORT_MODULE5(tmp_name_name_93, tmp_globals_name_93, tmp_locals_name_93, tmp_fromlist_name_93, tmp_level_name_93);
        if (tmp_assign_source_170 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 189;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_28__module == NULL);
        tmp_import_from_28__module = tmp_assign_source_170;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_171;
        PyObject *tmp_import_name_from_140;
        CHECK_OBJECT(tmp_import_from_28__module);
        tmp_import_name_from_140 = tmp_import_from_28__module;
        if (PyModule_Check(tmp_import_name_from_140)) {
           tmp_assign_source_171 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_140,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ChirbitIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_171 = IMPORT_NAME(tmp_import_name_from_140, const_str_plain_ChirbitIE);
        }

        if (tmp_assign_source_171 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 189;

            goto try_except_handler_28;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ChirbitIE, tmp_assign_source_171);
    }
    {
        PyObject *tmp_assign_source_172;
        PyObject *tmp_import_name_from_141;
        CHECK_OBJECT(tmp_import_from_28__module);
        tmp_import_name_from_141 = tmp_import_from_28__module;
        if (PyModule_Check(tmp_import_name_from_141)) {
           tmp_assign_source_172 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_141,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ChirbitProfileIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_172 = IMPORT_NAME(tmp_import_name_from_141, const_str_plain_ChirbitProfileIE);
        }

        if (tmp_assign_source_172 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 189;

            goto try_except_handler_28;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ChirbitProfileIE, tmp_assign_source_172);
    }
    goto try_end_28;
    // Exception handler code:
    try_except_handler_28:;
    exception_keeper_type_28 = exception_type;
    exception_keeper_value_28 = exception_value;
    exception_keeper_tb_28 = exception_tb;
    exception_keeper_lineno_28 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_28__module);
    Py_DECREF(tmp_import_from_28__module);
    tmp_import_from_28__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_28;
    exception_value = exception_keeper_value_28;
    exception_tb = exception_keeper_tb_28;
    exception_lineno = exception_keeper_lineno_28;

    goto frame_exception_exit_1;
    // End of try:
    try_end_28:;
    CHECK_OBJECT(tmp_import_from_28__module);
    Py_DECREF(tmp_import_from_28__module);
    tmp_import_from_28__module = NULL;

    {
        PyObject *tmp_assign_source_173;
        PyObject *tmp_import_name_from_142;
        PyObject *tmp_name_name_94;
        PyObject *tmp_globals_name_94;
        PyObject *tmp_locals_name_94;
        PyObject *tmp_fromlist_name_94;
        PyObject *tmp_level_name_94;
        tmp_name_name_94 = const_str_plain_cinchcast;
        tmp_globals_name_94 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_94 = Py_None;
        tmp_fromlist_name_94 = const_tuple_str_plain_CinchcastIE_tuple;
        tmp_level_name_94 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 193;
        tmp_import_name_from_142 = IMPORT_MODULE5(tmp_name_name_94, tmp_globals_name_94, tmp_locals_name_94, tmp_fromlist_name_94, tmp_level_name_94);
        if (tmp_import_name_from_142 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 193;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_142)) {
           tmp_assign_source_173 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_142,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CinchcastIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_173 = IMPORT_NAME(tmp_import_name_from_142, const_str_plain_CinchcastIE);
        }

        Py_DECREF(tmp_import_name_from_142);
        if (tmp_assign_source_173 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 193;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CinchcastIE, tmp_assign_source_173);
    }
    {
        PyObject *tmp_assign_source_174;
        PyObject *tmp_import_name_from_143;
        PyObject *tmp_name_name_95;
        PyObject *tmp_globals_name_95;
        PyObject *tmp_locals_name_95;
        PyObject *tmp_fromlist_name_95;
        PyObject *tmp_level_name_95;
        tmp_name_name_95 = const_str_plain_cinemax;
        tmp_globals_name_95 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_95 = Py_None;
        tmp_fromlist_name_95 = const_tuple_str_plain_CinemaxIE_tuple;
        tmp_level_name_95 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 194;
        tmp_import_name_from_143 = IMPORT_MODULE5(tmp_name_name_95, tmp_globals_name_95, tmp_locals_name_95, tmp_fromlist_name_95, tmp_level_name_95);
        if (tmp_import_name_from_143 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 194;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_143)) {
           tmp_assign_source_174 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_143,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CinemaxIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_174 = IMPORT_NAME(tmp_import_name_from_143, const_str_plain_CinemaxIE);
        }

        Py_DECREF(tmp_import_name_from_143);
        if (tmp_assign_source_174 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 194;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CinemaxIE, tmp_assign_source_174);
    }
    {
        PyObject *tmp_assign_source_175;
        PyObject *tmp_name_name_96;
        PyObject *tmp_globals_name_96;
        PyObject *tmp_locals_name_96;
        PyObject *tmp_fromlist_name_96;
        PyObject *tmp_level_name_96;
        tmp_name_name_96 = const_str_plain_ciscolive;
        tmp_globals_name_96 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_96 = Py_None;
        tmp_fromlist_name_96 = const_tuple_str_plain_CiscoLiveSessionIE_str_plain_CiscoLiveSearchIE_tuple;
        tmp_level_name_96 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 195;
        tmp_assign_source_175 = IMPORT_MODULE5(tmp_name_name_96, tmp_globals_name_96, tmp_locals_name_96, tmp_fromlist_name_96, tmp_level_name_96);
        if (tmp_assign_source_175 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 195;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_29__module == NULL);
        tmp_import_from_29__module = tmp_assign_source_175;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_176;
        PyObject *tmp_import_name_from_144;
        CHECK_OBJECT(tmp_import_from_29__module);
        tmp_import_name_from_144 = tmp_import_from_29__module;
        if (PyModule_Check(tmp_import_name_from_144)) {
           tmp_assign_source_176 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_144,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CiscoLiveSessionIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_176 = IMPORT_NAME(tmp_import_name_from_144, const_str_plain_CiscoLiveSessionIE);
        }

        if (tmp_assign_source_176 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 195;

            goto try_except_handler_29;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CiscoLiveSessionIE, tmp_assign_source_176);
    }
    {
        PyObject *tmp_assign_source_177;
        PyObject *tmp_import_name_from_145;
        CHECK_OBJECT(tmp_import_from_29__module);
        tmp_import_name_from_145 = tmp_import_from_29__module;
        if (PyModule_Check(tmp_import_name_from_145)) {
           tmp_assign_source_177 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_145,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CiscoLiveSearchIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_177 = IMPORT_NAME(tmp_import_name_from_145, const_str_plain_CiscoLiveSearchIE);
        }

        if (tmp_assign_source_177 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 195;

            goto try_except_handler_29;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CiscoLiveSearchIE, tmp_assign_source_177);
    }
    goto try_end_29;
    // Exception handler code:
    try_except_handler_29:;
    exception_keeper_type_29 = exception_type;
    exception_keeper_value_29 = exception_value;
    exception_keeper_tb_29 = exception_tb;
    exception_keeper_lineno_29 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_29__module);
    Py_DECREF(tmp_import_from_29__module);
    tmp_import_from_29__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_29;
    exception_value = exception_keeper_value_29;
    exception_tb = exception_keeper_tb_29;
    exception_lineno = exception_keeper_lineno_29;

    goto frame_exception_exit_1;
    // End of try:
    try_end_29:;
    CHECK_OBJECT(tmp_import_from_29__module);
    Py_DECREF(tmp_import_from_29__module);
    tmp_import_from_29__module = NULL;

    {
        PyObject *tmp_assign_source_178;
        PyObject *tmp_import_name_from_146;
        PyObject *tmp_name_name_97;
        PyObject *tmp_globals_name_97;
        PyObject *tmp_locals_name_97;
        PyObject *tmp_fromlist_name_97;
        PyObject *tmp_level_name_97;
        tmp_name_name_97 = const_str_plain_cjsw;
        tmp_globals_name_97 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_97 = Py_None;
        tmp_fromlist_name_97 = const_tuple_str_plain_CJSWIE_tuple;
        tmp_level_name_97 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 199;
        tmp_import_name_from_146 = IMPORT_MODULE5(tmp_name_name_97, tmp_globals_name_97, tmp_locals_name_97, tmp_fromlist_name_97, tmp_level_name_97);
        if (tmp_import_name_from_146 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 199;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_146)) {
           tmp_assign_source_178 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_146,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CJSWIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_178 = IMPORT_NAME(tmp_import_name_from_146, const_str_plain_CJSWIE);
        }

        Py_DECREF(tmp_import_name_from_146);
        if (tmp_assign_source_178 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 199;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CJSWIE, tmp_assign_source_178);
    }
    {
        PyObject *tmp_assign_source_179;
        PyObject *tmp_import_name_from_147;
        PyObject *tmp_name_name_98;
        PyObject *tmp_globals_name_98;
        PyObject *tmp_locals_name_98;
        PyObject *tmp_fromlist_name_98;
        PyObject *tmp_level_name_98;
        tmp_name_name_98 = const_str_plain_cliphunter;
        tmp_globals_name_98 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_98 = Py_None;
        tmp_fromlist_name_98 = const_tuple_str_plain_CliphunterIE_tuple;
        tmp_level_name_98 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 200;
        tmp_import_name_from_147 = IMPORT_MODULE5(tmp_name_name_98, tmp_globals_name_98, tmp_locals_name_98, tmp_fromlist_name_98, tmp_level_name_98);
        if (tmp_import_name_from_147 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 200;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_147)) {
           tmp_assign_source_179 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_147,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CliphunterIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_179 = IMPORT_NAME(tmp_import_name_from_147, const_str_plain_CliphunterIE);
        }

        Py_DECREF(tmp_import_name_from_147);
        if (tmp_assign_source_179 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 200;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CliphunterIE, tmp_assign_source_179);
    }
    {
        PyObject *tmp_assign_source_180;
        PyObject *tmp_import_name_from_148;
        PyObject *tmp_name_name_99;
        PyObject *tmp_globals_name_99;
        PyObject *tmp_locals_name_99;
        PyObject *tmp_fromlist_name_99;
        PyObject *tmp_level_name_99;
        tmp_name_name_99 = const_str_plain_clippit;
        tmp_globals_name_99 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_99 = Py_None;
        tmp_fromlist_name_99 = const_tuple_str_plain_ClippitIE_tuple;
        tmp_level_name_99 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 201;
        tmp_import_name_from_148 = IMPORT_MODULE5(tmp_name_name_99, tmp_globals_name_99, tmp_locals_name_99, tmp_fromlist_name_99, tmp_level_name_99);
        if (tmp_import_name_from_148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 201;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_148)) {
           tmp_assign_source_180 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_148,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ClippitIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_180 = IMPORT_NAME(tmp_import_name_from_148, const_str_plain_ClippitIE);
        }

        Py_DECREF(tmp_import_name_from_148);
        if (tmp_assign_source_180 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 201;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ClippitIE, tmp_assign_source_180);
    }
    {
        PyObject *tmp_assign_source_181;
        PyObject *tmp_import_name_from_149;
        PyObject *tmp_name_name_100;
        PyObject *tmp_globals_name_100;
        PyObject *tmp_locals_name_100;
        PyObject *tmp_fromlist_name_100;
        PyObject *tmp_level_name_100;
        tmp_name_name_100 = const_str_plain_cliprs;
        tmp_globals_name_100 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_100 = Py_None;
        tmp_fromlist_name_100 = const_tuple_str_plain_ClipRsIE_tuple;
        tmp_level_name_100 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 202;
        tmp_import_name_from_149 = IMPORT_MODULE5(tmp_name_name_100, tmp_globals_name_100, tmp_locals_name_100, tmp_fromlist_name_100, tmp_level_name_100);
        if (tmp_import_name_from_149 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 202;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_149)) {
           tmp_assign_source_181 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_149,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ClipRsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_181 = IMPORT_NAME(tmp_import_name_from_149, const_str_plain_ClipRsIE);
        }

        Py_DECREF(tmp_import_name_from_149);
        if (tmp_assign_source_181 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 202;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ClipRsIE, tmp_assign_source_181);
    }
    {
        PyObject *tmp_assign_source_182;
        PyObject *tmp_import_name_from_150;
        PyObject *tmp_name_name_101;
        PyObject *tmp_globals_name_101;
        PyObject *tmp_locals_name_101;
        PyObject *tmp_fromlist_name_101;
        PyObject *tmp_level_name_101;
        tmp_name_name_101 = const_str_plain_clipsyndicate;
        tmp_globals_name_101 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_101 = Py_None;
        tmp_fromlist_name_101 = const_tuple_str_plain_ClipsyndicateIE_tuple;
        tmp_level_name_101 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 203;
        tmp_import_name_from_150 = IMPORT_MODULE5(tmp_name_name_101, tmp_globals_name_101, tmp_locals_name_101, tmp_fromlist_name_101, tmp_level_name_101);
        if (tmp_import_name_from_150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 203;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_150)) {
           tmp_assign_source_182 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_150,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ClipsyndicateIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_182 = IMPORT_NAME(tmp_import_name_from_150, const_str_plain_ClipsyndicateIE);
        }

        Py_DECREF(tmp_import_name_from_150);
        if (tmp_assign_source_182 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 203;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ClipsyndicateIE, tmp_assign_source_182);
    }
    {
        PyObject *tmp_assign_source_183;
        PyObject *tmp_import_name_from_151;
        PyObject *tmp_name_name_102;
        PyObject *tmp_globals_name_102;
        PyObject *tmp_locals_name_102;
        PyObject *tmp_fromlist_name_102;
        PyObject *tmp_level_name_102;
        tmp_name_name_102 = const_str_plain_closertotruth;
        tmp_globals_name_102 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_102 = Py_None;
        tmp_fromlist_name_102 = const_tuple_str_plain_CloserToTruthIE_tuple;
        tmp_level_name_102 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 204;
        tmp_import_name_from_151 = IMPORT_MODULE5(tmp_name_name_102, tmp_globals_name_102, tmp_locals_name_102, tmp_fromlist_name_102, tmp_level_name_102);
        if (tmp_import_name_from_151 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 204;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_151)) {
           tmp_assign_source_183 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_151,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CloserToTruthIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_183 = IMPORT_NAME(tmp_import_name_from_151, const_str_plain_CloserToTruthIE);
        }

        Py_DECREF(tmp_import_name_from_151);
        if (tmp_assign_source_183 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 204;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CloserToTruthIE, tmp_assign_source_183);
    }
    {
        PyObject *tmp_assign_source_184;
        PyObject *tmp_import_name_from_152;
        PyObject *tmp_name_name_103;
        PyObject *tmp_globals_name_103;
        PyObject *tmp_locals_name_103;
        PyObject *tmp_fromlist_name_103;
        PyObject *tmp_level_name_103;
        tmp_name_name_103 = const_str_plain_cloudflarestream;
        tmp_globals_name_103 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_103 = Py_None;
        tmp_fromlist_name_103 = const_tuple_str_plain_CloudflareStreamIE_tuple;
        tmp_level_name_103 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 205;
        tmp_import_name_from_152 = IMPORT_MODULE5(tmp_name_name_103, tmp_globals_name_103, tmp_locals_name_103, tmp_fromlist_name_103, tmp_level_name_103);
        if (tmp_import_name_from_152 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 205;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_152)) {
           tmp_assign_source_184 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_152,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CloudflareStreamIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_184 = IMPORT_NAME(tmp_import_name_from_152, const_str_plain_CloudflareStreamIE);
        }

        Py_DECREF(tmp_import_name_from_152);
        if (tmp_assign_source_184 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 205;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CloudflareStreamIE, tmp_assign_source_184);
    }
    {
        PyObject *tmp_assign_source_185;
        PyObject *tmp_import_name_from_153;
        PyObject *tmp_name_name_104;
        PyObject *tmp_globals_name_104;
        PyObject *tmp_locals_name_104;
        PyObject *tmp_fromlist_name_104;
        PyObject *tmp_level_name_104;
        tmp_name_name_104 = const_str_plain_cloudy;
        tmp_globals_name_104 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_104 = Py_None;
        tmp_fromlist_name_104 = const_tuple_str_plain_CloudyIE_tuple;
        tmp_level_name_104 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 206;
        tmp_import_name_from_153 = IMPORT_MODULE5(tmp_name_name_104, tmp_globals_name_104, tmp_locals_name_104, tmp_fromlist_name_104, tmp_level_name_104);
        if (tmp_import_name_from_153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 206;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_153)) {
           tmp_assign_source_185 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_153,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CloudyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_185 = IMPORT_NAME(tmp_import_name_from_153, const_str_plain_CloudyIE);
        }

        Py_DECREF(tmp_import_name_from_153);
        if (tmp_assign_source_185 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 206;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CloudyIE, tmp_assign_source_185);
    }
    {
        PyObject *tmp_assign_source_186;
        PyObject *tmp_import_name_from_154;
        PyObject *tmp_name_name_105;
        PyObject *tmp_globals_name_105;
        PyObject *tmp_locals_name_105;
        PyObject *tmp_fromlist_name_105;
        PyObject *tmp_level_name_105;
        tmp_name_name_105 = const_str_plain_clubic;
        tmp_globals_name_105 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_105 = Py_None;
        tmp_fromlist_name_105 = const_tuple_str_plain_ClubicIE_tuple;
        tmp_level_name_105 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 207;
        tmp_import_name_from_154 = IMPORT_MODULE5(tmp_name_name_105, tmp_globals_name_105, tmp_locals_name_105, tmp_fromlist_name_105, tmp_level_name_105);
        if (tmp_import_name_from_154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 207;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_154)) {
           tmp_assign_source_186 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_154,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ClubicIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_186 = IMPORT_NAME(tmp_import_name_from_154, const_str_plain_ClubicIE);
        }

        Py_DECREF(tmp_import_name_from_154);
        if (tmp_assign_source_186 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 207;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ClubicIE, tmp_assign_source_186);
    }
    {
        PyObject *tmp_assign_source_187;
        PyObject *tmp_import_name_from_155;
        PyObject *tmp_name_name_106;
        PyObject *tmp_globals_name_106;
        PyObject *tmp_locals_name_106;
        PyObject *tmp_fromlist_name_106;
        PyObject *tmp_level_name_106;
        tmp_name_name_106 = const_str_plain_clyp;
        tmp_globals_name_106 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_106 = Py_None;
        tmp_fromlist_name_106 = const_tuple_str_plain_ClypIE_tuple;
        tmp_level_name_106 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 208;
        tmp_import_name_from_155 = IMPORT_MODULE5(tmp_name_name_106, tmp_globals_name_106, tmp_locals_name_106, tmp_fromlist_name_106, tmp_level_name_106);
        if (tmp_import_name_from_155 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 208;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_155)) {
           tmp_assign_source_187 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_155,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ClypIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_187 = IMPORT_NAME(tmp_import_name_from_155, const_str_plain_ClypIE);
        }

        Py_DECREF(tmp_import_name_from_155);
        if (tmp_assign_source_187 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 208;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ClypIE, tmp_assign_source_187);
    }
    {
        PyObject *tmp_assign_source_188;
        PyObject *tmp_import_name_from_156;
        PyObject *tmp_name_name_107;
        PyObject *tmp_globals_name_107;
        PyObject *tmp_locals_name_107;
        PyObject *tmp_fromlist_name_107;
        PyObject *tmp_level_name_107;
        tmp_name_name_107 = const_str_plain_cmt;
        tmp_globals_name_107 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_107 = Py_None;
        tmp_fromlist_name_107 = const_tuple_str_plain_CMTIE_tuple;
        tmp_level_name_107 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 209;
        tmp_import_name_from_156 = IMPORT_MODULE5(tmp_name_name_107, tmp_globals_name_107, tmp_locals_name_107, tmp_fromlist_name_107, tmp_level_name_107);
        if (tmp_import_name_from_156 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 209;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_156)) {
           tmp_assign_source_188 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_156,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CMTIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_188 = IMPORT_NAME(tmp_import_name_from_156, const_str_plain_CMTIE);
        }

        Py_DECREF(tmp_import_name_from_156);
        if (tmp_assign_source_188 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 209;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CMTIE, tmp_assign_source_188);
    }
    {
        PyObject *tmp_assign_source_189;
        PyObject *tmp_name_name_108;
        PyObject *tmp_globals_name_108;
        PyObject *tmp_locals_name_108;
        PyObject *tmp_fromlist_name_108;
        PyObject *tmp_level_name_108;
        tmp_name_name_108 = const_str_plain_cnbc;
        tmp_globals_name_108 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_108 = Py_None;
        tmp_fromlist_name_108 = const_tuple_str_plain_CNBCIE_str_plain_CNBCVideoIE_tuple;
        tmp_level_name_108 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 210;
        tmp_assign_source_189 = IMPORT_MODULE5(tmp_name_name_108, tmp_globals_name_108, tmp_locals_name_108, tmp_fromlist_name_108, tmp_level_name_108);
        if (tmp_assign_source_189 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 210;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_30__module == NULL);
        tmp_import_from_30__module = tmp_assign_source_189;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_190;
        PyObject *tmp_import_name_from_157;
        CHECK_OBJECT(tmp_import_from_30__module);
        tmp_import_name_from_157 = tmp_import_from_30__module;
        if (PyModule_Check(tmp_import_name_from_157)) {
           tmp_assign_source_190 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_157,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CNBCIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_190 = IMPORT_NAME(tmp_import_name_from_157, const_str_plain_CNBCIE);
        }

        if (tmp_assign_source_190 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 210;

            goto try_except_handler_30;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CNBCIE, tmp_assign_source_190);
    }
    {
        PyObject *tmp_assign_source_191;
        PyObject *tmp_import_name_from_158;
        CHECK_OBJECT(tmp_import_from_30__module);
        tmp_import_name_from_158 = tmp_import_from_30__module;
        if (PyModule_Check(tmp_import_name_from_158)) {
           tmp_assign_source_191 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_158,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CNBCVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_191 = IMPORT_NAME(tmp_import_name_from_158, const_str_plain_CNBCVideoIE);
        }

        if (tmp_assign_source_191 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 210;

            goto try_except_handler_30;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CNBCVideoIE, tmp_assign_source_191);
    }
    goto try_end_30;
    // Exception handler code:
    try_except_handler_30:;
    exception_keeper_type_30 = exception_type;
    exception_keeper_value_30 = exception_value;
    exception_keeper_tb_30 = exception_tb;
    exception_keeper_lineno_30 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_30__module);
    Py_DECREF(tmp_import_from_30__module);
    tmp_import_from_30__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_30;
    exception_value = exception_keeper_value_30;
    exception_tb = exception_keeper_tb_30;
    exception_lineno = exception_keeper_lineno_30;

    goto frame_exception_exit_1;
    // End of try:
    try_end_30:;
    CHECK_OBJECT(tmp_import_from_30__module);
    Py_DECREF(tmp_import_from_30__module);
    tmp_import_from_30__module = NULL;

    {
        PyObject *tmp_assign_source_192;
        PyObject *tmp_name_name_109;
        PyObject *tmp_globals_name_109;
        PyObject *tmp_locals_name_109;
        PyObject *tmp_fromlist_name_109;
        PyObject *tmp_level_name_109;
        tmp_name_name_109 = const_str_plain_cnn;
        tmp_globals_name_109 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_109 = Py_None;
        tmp_fromlist_name_109 = const_tuple_str_plain_CNNIE_str_plain_CNNBlogsIE_str_plain_CNNArticleIE_tuple;
        tmp_level_name_109 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 214;
        tmp_assign_source_192 = IMPORT_MODULE5(tmp_name_name_109, tmp_globals_name_109, tmp_locals_name_109, tmp_fromlist_name_109, tmp_level_name_109);
        if (tmp_assign_source_192 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 214;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_31__module == NULL);
        tmp_import_from_31__module = tmp_assign_source_192;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_193;
        PyObject *tmp_import_name_from_159;
        CHECK_OBJECT(tmp_import_from_31__module);
        tmp_import_name_from_159 = tmp_import_from_31__module;
        if (PyModule_Check(tmp_import_name_from_159)) {
           tmp_assign_source_193 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_159,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CNNIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_193 = IMPORT_NAME(tmp_import_name_from_159, const_str_plain_CNNIE);
        }

        if (tmp_assign_source_193 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 214;

            goto try_except_handler_31;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CNNIE, tmp_assign_source_193);
    }
    {
        PyObject *tmp_assign_source_194;
        PyObject *tmp_import_name_from_160;
        CHECK_OBJECT(tmp_import_from_31__module);
        tmp_import_name_from_160 = tmp_import_from_31__module;
        if (PyModule_Check(tmp_import_name_from_160)) {
           tmp_assign_source_194 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_160,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CNNBlogsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_194 = IMPORT_NAME(tmp_import_name_from_160, const_str_plain_CNNBlogsIE);
        }

        if (tmp_assign_source_194 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 214;

            goto try_except_handler_31;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CNNBlogsIE, tmp_assign_source_194);
    }
    {
        PyObject *tmp_assign_source_195;
        PyObject *tmp_import_name_from_161;
        CHECK_OBJECT(tmp_import_from_31__module);
        tmp_import_name_from_161 = tmp_import_from_31__module;
        if (PyModule_Check(tmp_import_name_from_161)) {
           tmp_assign_source_195 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_161,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CNNArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_195 = IMPORT_NAME(tmp_import_name_from_161, const_str_plain_CNNArticleIE);
        }

        if (tmp_assign_source_195 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 214;

            goto try_except_handler_31;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CNNArticleIE, tmp_assign_source_195);
    }
    goto try_end_31;
    // Exception handler code:
    try_except_handler_31:;
    exception_keeper_type_31 = exception_type;
    exception_keeper_value_31 = exception_value;
    exception_keeper_tb_31 = exception_tb;
    exception_keeper_lineno_31 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_31__module);
    Py_DECREF(tmp_import_from_31__module);
    tmp_import_from_31__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_31;
    exception_value = exception_keeper_value_31;
    exception_tb = exception_keeper_tb_31;
    exception_lineno = exception_keeper_lineno_31;

    goto frame_exception_exit_1;
    // End of try:
    try_end_31:;
    CHECK_OBJECT(tmp_import_from_31__module);
    Py_DECREF(tmp_import_from_31__module);
    tmp_import_from_31__module = NULL;

    {
        PyObject *tmp_assign_source_196;
        PyObject *tmp_import_name_from_162;
        PyObject *tmp_name_name_110;
        PyObject *tmp_globals_name_110;
        PyObject *tmp_locals_name_110;
        PyObject *tmp_fromlist_name_110;
        PyObject *tmp_level_name_110;
        tmp_name_name_110 = const_str_plain_coub;
        tmp_globals_name_110 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_110 = Py_None;
        tmp_fromlist_name_110 = const_tuple_str_plain_CoubIE_tuple;
        tmp_level_name_110 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 219;
        tmp_import_name_from_162 = IMPORT_MODULE5(tmp_name_name_110, tmp_globals_name_110, tmp_locals_name_110, tmp_fromlist_name_110, tmp_level_name_110);
        if (tmp_import_name_from_162 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 219;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_162)) {
           tmp_assign_source_196 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_162,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CoubIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_196 = IMPORT_NAME(tmp_import_name_from_162, const_str_plain_CoubIE);
        }

        Py_DECREF(tmp_import_name_from_162);
        if (tmp_assign_source_196 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 219;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CoubIE, tmp_assign_source_196);
    }
    {
        PyObject *tmp_assign_source_197;
        PyObject *tmp_name_name_111;
        PyObject *tmp_globals_name_111;
        PyObject *tmp_locals_name_111;
        PyObject *tmp_fromlist_name_111;
        PyObject *tmp_level_name_111;
        tmp_name_name_111 = const_str_plain_comedycentral;
        tmp_globals_name_111 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_111 = Py_None;
        tmp_fromlist_name_111 = const_tuple_7fa36dd7b95e542658f01f53afe93a33_tuple;
        tmp_level_name_111 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 220;
        tmp_assign_source_197 = IMPORT_MODULE5(tmp_name_name_111, tmp_globals_name_111, tmp_locals_name_111, tmp_fromlist_name_111, tmp_level_name_111);
        if (tmp_assign_source_197 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 220;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_32__module == NULL);
        tmp_import_from_32__module = tmp_assign_source_197;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_198;
        PyObject *tmp_import_name_from_163;
        CHECK_OBJECT(tmp_import_from_32__module);
        tmp_import_name_from_163 = tmp_import_from_32__module;
        if (PyModule_Check(tmp_import_name_from_163)) {
           tmp_assign_source_198 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_163,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ComedyCentralFullEpisodesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_198 = IMPORT_NAME(tmp_import_name_from_163, const_str_plain_ComedyCentralFullEpisodesIE);
        }

        if (tmp_assign_source_198 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 220;

            goto try_except_handler_32;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ComedyCentralFullEpisodesIE, tmp_assign_source_198);
    }
    {
        PyObject *tmp_assign_source_199;
        PyObject *tmp_import_name_from_164;
        CHECK_OBJECT(tmp_import_from_32__module);
        tmp_import_name_from_164 = tmp_import_from_32__module;
        if (PyModule_Check(tmp_import_name_from_164)) {
           tmp_assign_source_199 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_164,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ComedyCentralIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_199 = IMPORT_NAME(tmp_import_name_from_164, const_str_plain_ComedyCentralIE);
        }

        if (tmp_assign_source_199 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 220;

            goto try_except_handler_32;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ComedyCentralIE, tmp_assign_source_199);
    }
    {
        PyObject *tmp_assign_source_200;
        PyObject *tmp_import_name_from_165;
        CHECK_OBJECT(tmp_import_from_32__module);
        tmp_import_name_from_165 = tmp_import_from_32__module;
        if (PyModule_Check(tmp_import_name_from_165)) {
           tmp_assign_source_200 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_165,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ComedyCentralShortnameIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_200 = IMPORT_NAME(tmp_import_name_from_165, const_str_plain_ComedyCentralShortnameIE);
        }

        if (tmp_assign_source_200 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 220;

            goto try_except_handler_32;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ComedyCentralShortnameIE, tmp_assign_source_200);
    }
    {
        PyObject *tmp_assign_source_201;
        PyObject *tmp_import_name_from_166;
        CHECK_OBJECT(tmp_import_from_32__module);
        tmp_import_name_from_166 = tmp_import_from_32__module;
        if (PyModule_Check(tmp_import_name_from_166)) {
           tmp_assign_source_201 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_166,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ComedyCentralTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_201 = IMPORT_NAME(tmp_import_name_from_166, const_str_plain_ComedyCentralTVIE);
        }

        if (tmp_assign_source_201 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 220;

            goto try_except_handler_32;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ComedyCentralTVIE, tmp_assign_source_201);
    }
    {
        PyObject *tmp_assign_source_202;
        PyObject *tmp_import_name_from_167;
        CHECK_OBJECT(tmp_import_from_32__module);
        tmp_import_name_from_167 = tmp_import_from_32__module;
        if (PyModule_Check(tmp_import_name_from_167)) {
           tmp_assign_source_202 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_167,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ToshIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_202 = IMPORT_NAME(tmp_import_name_from_167, const_str_plain_ToshIE);
        }

        if (tmp_assign_source_202 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 220;

            goto try_except_handler_32;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ToshIE, tmp_assign_source_202);
    }
    goto try_end_32;
    // Exception handler code:
    try_except_handler_32:;
    exception_keeper_type_32 = exception_type;
    exception_keeper_value_32 = exception_value;
    exception_keeper_tb_32 = exception_tb;
    exception_keeper_lineno_32 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_32__module);
    Py_DECREF(tmp_import_from_32__module);
    tmp_import_from_32__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_32;
    exception_value = exception_keeper_value_32;
    exception_tb = exception_keeper_tb_32;
    exception_lineno = exception_keeper_lineno_32;

    goto frame_exception_exit_1;
    // End of try:
    try_end_32:;
    CHECK_OBJECT(tmp_import_from_32__module);
    Py_DECREF(tmp_import_from_32__module);
    tmp_import_from_32__module = NULL;

    {
        PyObject *tmp_assign_source_203;
        PyObject *tmp_name_name_112;
        PyObject *tmp_globals_name_112;
        PyObject *tmp_locals_name_112;
        PyObject *tmp_fromlist_name_112;
        PyObject *tmp_level_name_112;
        tmp_name_name_112 = const_str_plain_commonmistakes;
        tmp_globals_name_112 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_112 = Py_None;
        tmp_fromlist_name_112 = const_tuple_str_plain_CommonMistakesIE_str_plain_UnicodeBOMIE_tuple;
        tmp_level_name_112 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 227;
        tmp_assign_source_203 = IMPORT_MODULE5(tmp_name_name_112, tmp_globals_name_112, tmp_locals_name_112, tmp_fromlist_name_112, tmp_level_name_112);
        if (tmp_assign_source_203 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 227;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_33__module == NULL);
        tmp_import_from_33__module = tmp_assign_source_203;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_204;
        PyObject *tmp_import_name_from_168;
        CHECK_OBJECT(tmp_import_from_33__module);
        tmp_import_name_from_168 = tmp_import_from_33__module;
        if (PyModule_Check(tmp_import_name_from_168)) {
           tmp_assign_source_204 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_168,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CommonMistakesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_204 = IMPORT_NAME(tmp_import_name_from_168, const_str_plain_CommonMistakesIE);
        }

        if (tmp_assign_source_204 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 227;

            goto try_except_handler_33;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CommonMistakesIE, tmp_assign_source_204);
    }
    {
        PyObject *tmp_assign_source_205;
        PyObject *tmp_import_name_from_169;
        CHECK_OBJECT(tmp_import_from_33__module);
        tmp_import_name_from_169 = tmp_import_from_33__module;
        if (PyModule_Check(tmp_import_name_from_169)) {
           tmp_assign_source_205 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_169,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UnicodeBOMIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_205 = IMPORT_NAME(tmp_import_name_from_169, const_str_plain_UnicodeBOMIE);
        }

        if (tmp_assign_source_205 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 227;

            goto try_except_handler_33;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UnicodeBOMIE, tmp_assign_source_205);
    }
    goto try_end_33;
    // Exception handler code:
    try_except_handler_33:;
    exception_keeper_type_33 = exception_type;
    exception_keeper_value_33 = exception_value;
    exception_keeper_tb_33 = exception_tb;
    exception_keeper_lineno_33 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_33__module);
    Py_DECREF(tmp_import_from_33__module);
    tmp_import_from_33__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_33;
    exception_value = exception_keeper_value_33;
    exception_tb = exception_keeper_tb_33;
    exception_lineno = exception_keeper_lineno_33;

    goto frame_exception_exit_1;
    // End of try:
    try_end_33:;
    CHECK_OBJECT(tmp_import_from_33__module);
    Py_DECREF(tmp_import_from_33__module);
    tmp_import_from_33__module = NULL;

    {
        PyObject *tmp_assign_source_206;
        PyObject *tmp_name_name_113;
        PyObject *tmp_globals_name_113;
        PyObject *tmp_locals_name_113;
        PyObject *tmp_fromlist_name_113;
        PyObject *tmp_level_name_113;
        tmp_name_name_113 = const_str_plain_commonprotocols;
        tmp_globals_name_113 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_113 = Py_None;
        tmp_fromlist_name_113 = const_tuple_str_plain_MmsIE_str_plain_RtmpIE_tuple;
        tmp_level_name_113 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 228;
        tmp_assign_source_206 = IMPORT_MODULE5(tmp_name_name_113, tmp_globals_name_113, tmp_locals_name_113, tmp_fromlist_name_113, tmp_level_name_113);
        if (tmp_assign_source_206 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_34__module == NULL);
        tmp_import_from_34__module = tmp_assign_source_206;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_207;
        PyObject *tmp_import_name_from_170;
        CHECK_OBJECT(tmp_import_from_34__module);
        tmp_import_name_from_170 = tmp_import_from_34__module;
        if (PyModule_Check(tmp_import_name_from_170)) {
           tmp_assign_source_207 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_170,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MmsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_207 = IMPORT_NAME(tmp_import_name_from_170, const_str_plain_MmsIE);
        }

        if (tmp_assign_source_207 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_34;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MmsIE, tmp_assign_source_207);
    }
    {
        PyObject *tmp_assign_source_208;
        PyObject *tmp_import_name_from_171;
        CHECK_OBJECT(tmp_import_from_34__module);
        tmp_import_name_from_171 = tmp_import_from_34__module;
        if (PyModule_Check(tmp_import_name_from_171)) {
           tmp_assign_source_208 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_171,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RtmpIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_208 = IMPORT_NAME(tmp_import_name_from_171, const_str_plain_RtmpIE);
        }

        if (tmp_assign_source_208 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto try_except_handler_34;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RtmpIE, tmp_assign_source_208);
    }
    goto try_end_34;
    // Exception handler code:
    try_except_handler_34:;
    exception_keeper_type_34 = exception_type;
    exception_keeper_value_34 = exception_value;
    exception_keeper_tb_34 = exception_tb;
    exception_keeper_lineno_34 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_34__module);
    Py_DECREF(tmp_import_from_34__module);
    tmp_import_from_34__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_34;
    exception_value = exception_keeper_value_34;
    exception_tb = exception_keeper_tb_34;
    exception_lineno = exception_keeper_lineno_34;

    goto frame_exception_exit_1;
    // End of try:
    try_end_34:;
    CHECK_OBJECT(tmp_import_from_34__module);
    Py_DECREF(tmp_import_from_34__module);
    tmp_import_from_34__module = NULL;

    {
        PyObject *tmp_assign_source_209;
        PyObject *tmp_import_name_from_172;
        PyObject *tmp_name_name_114;
        PyObject *tmp_globals_name_114;
        PyObject *tmp_locals_name_114;
        PyObject *tmp_fromlist_name_114;
        PyObject *tmp_level_name_114;
        tmp_name_name_114 = const_str_plain_condenast;
        tmp_globals_name_114 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_114 = Py_None;
        tmp_fromlist_name_114 = const_tuple_str_plain_CondeNastIE_tuple;
        tmp_level_name_114 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 232;
        tmp_import_name_from_172 = IMPORT_MODULE5(tmp_name_name_114, tmp_globals_name_114, tmp_locals_name_114, tmp_fromlist_name_114, tmp_level_name_114);
        if (tmp_import_name_from_172 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 232;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_172)) {
           tmp_assign_source_209 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_172,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CondeNastIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_209 = IMPORT_NAME(tmp_import_name_from_172, const_str_plain_CondeNastIE);
        }

        Py_DECREF(tmp_import_name_from_172);
        if (tmp_assign_source_209 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 232;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CondeNastIE, tmp_assign_source_209);
    }
    {
        PyObject *tmp_assign_source_210;
        PyObject *tmp_import_name_from_173;
        PyObject *tmp_name_name_115;
        PyObject *tmp_globals_name_115;
        PyObject *tmp_locals_name_115;
        PyObject *tmp_fromlist_name_115;
        PyObject *tmp_level_name_115;
        tmp_name_name_115 = const_str_plain_contv;
        tmp_globals_name_115 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_115 = Py_None;
        tmp_fromlist_name_115 = const_tuple_str_plain_CONtvIE_tuple;
        tmp_level_name_115 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 233;
        tmp_import_name_from_173 = IMPORT_MODULE5(tmp_name_name_115, tmp_globals_name_115, tmp_locals_name_115, tmp_fromlist_name_115, tmp_level_name_115);
        if (tmp_import_name_from_173 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 233;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_173)) {
           tmp_assign_source_210 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_173,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CONtvIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_210 = IMPORT_NAME(tmp_import_name_from_173, const_str_plain_CONtvIE);
        }

        Py_DECREF(tmp_import_name_from_173);
        if (tmp_assign_source_210 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 233;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CONtvIE, tmp_assign_source_210);
    }
    {
        PyObject *tmp_assign_source_211;
        PyObject *tmp_import_name_from_174;
        PyObject *tmp_name_name_116;
        PyObject *tmp_globals_name_116;
        PyObject *tmp_locals_name_116;
        PyObject *tmp_fromlist_name_116;
        PyObject *tmp_level_name_116;
        tmp_name_name_116 = const_str_plain_corus;
        tmp_globals_name_116 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_116 = Py_None;
        tmp_fromlist_name_116 = const_tuple_str_plain_CorusIE_tuple;
        tmp_level_name_116 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 234;
        tmp_import_name_from_174 = IMPORT_MODULE5(tmp_name_name_116, tmp_globals_name_116, tmp_locals_name_116, tmp_fromlist_name_116, tmp_level_name_116);
        if (tmp_import_name_from_174 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 234;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_174)) {
           tmp_assign_source_211 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_174,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CorusIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_211 = IMPORT_NAME(tmp_import_name_from_174, const_str_plain_CorusIE);
        }

        Py_DECREF(tmp_import_name_from_174);
        if (tmp_assign_source_211 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 234;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CorusIE, tmp_assign_source_211);
    }
    {
        PyObject *tmp_assign_source_212;
        PyObject *tmp_import_name_from_175;
        PyObject *tmp_name_name_117;
        PyObject *tmp_globals_name_117;
        PyObject *tmp_locals_name_117;
        PyObject *tmp_fromlist_name_117;
        PyObject *tmp_level_name_117;
        tmp_name_name_117 = const_str_plain_cracked;
        tmp_globals_name_117 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_117 = Py_None;
        tmp_fromlist_name_117 = const_tuple_str_plain_CrackedIE_tuple;
        tmp_level_name_117 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 235;
        tmp_import_name_from_175 = IMPORT_MODULE5(tmp_name_name_117, tmp_globals_name_117, tmp_locals_name_117, tmp_fromlist_name_117, tmp_level_name_117);
        if (tmp_import_name_from_175 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 235;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_175)) {
           tmp_assign_source_212 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_175,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CrackedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_212 = IMPORT_NAME(tmp_import_name_from_175, const_str_plain_CrackedIE);
        }

        Py_DECREF(tmp_import_name_from_175);
        if (tmp_assign_source_212 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 235;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CrackedIE, tmp_assign_source_212);
    }
    {
        PyObject *tmp_assign_source_213;
        PyObject *tmp_import_name_from_176;
        PyObject *tmp_name_name_118;
        PyObject *tmp_globals_name_118;
        PyObject *tmp_locals_name_118;
        PyObject *tmp_fromlist_name_118;
        PyObject *tmp_level_name_118;
        tmp_name_name_118 = const_str_plain_crackle;
        tmp_globals_name_118 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_118 = Py_None;
        tmp_fromlist_name_118 = const_tuple_str_plain_CrackleIE_tuple;
        tmp_level_name_118 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 236;
        tmp_import_name_from_176 = IMPORT_MODULE5(tmp_name_name_118, tmp_globals_name_118, tmp_locals_name_118, tmp_fromlist_name_118, tmp_level_name_118);
        if (tmp_import_name_from_176 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 236;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_176)) {
           tmp_assign_source_213 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_176,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CrackleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_213 = IMPORT_NAME(tmp_import_name_from_176, const_str_plain_CrackleIE);
        }

        Py_DECREF(tmp_import_name_from_176);
        if (tmp_assign_source_213 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 236;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CrackleIE, tmp_assign_source_213);
    }
    {
        PyObject *tmp_assign_source_214;
        PyObject *tmp_import_name_from_177;
        PyObject *tmp_name_name_119;
        PyObject *tmp_globals_name_119;
        PyObject *tmp_locals_name_119;
        PyObject *tmp_fromlist_name_119;
        PyObject *tmp_level_name_119;
        tmp_name_name_119 = const_str_plain_crooksandliars;
        tmp_globals_name_119 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_119 = Py_None;
        tmp_fromlist_name_119 = const_tuple_str_plain_CrooksAndLiarsIE_tuple;
        tmp_level_name_119 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 237;
        tmp_import_name_from_177 = IMPORT_MODULE5(tmp_name_name_119, tmp_globals_name_119, tmp_locals_name_119, tmp_fromlist_name_119, tmp_level_name_119);
        if (tmp_import_name_from_177 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 237;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_177)) {
           tmp_assign_source_214 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_177,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CrooksAndLiarsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_214 = IMPORT_NAME(tmp_import_name_from_177, const_str_plain_CrooksAndLiarsIE);
        }

        Py_DECREF(tmp_import_name_from_177);
        if (tmp_assign_source_214 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 237;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CrooksAndLiarsIE, tmp_assign_source_214);
    }
    {
        PyObject *tmp_assign_source_215;
        PyObject *tmp_name_name_120;
        PyObject *tmp_globals_name_120;
        PyObject *tmp_locals_name_120;
        PyObject *tmp_fromlist_name_120;
        PyObject *tmp_level_name_120;
        tmp_name_name_120 = const_str_plain_crunchyroll;
        tmp_globals_name_120 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_120 = Py_None;
        tmp_fromlist_name_120 = const_tuple_str_plain_CrunchyrollIE_str_plain_CrunchyrollShowPlaylistIE_tuple;
        tmp_level_name_120 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 238;
        tmp_assign_source_215 = IMPORT_MODULE5(tmp_name_name_120, tmp_globals_name_120, tmp_locals_name_120, tmp_fromlist_name_120, tmp_level_name_120);
        if (tmp_assign_source_215 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 238;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_35__module == NULL);
        tmp_import_from_35__module = tmp_assign_source_215;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_216;
        PyObject *tmp_import_name_from_178;
        CHECK_OBJECT(tmp_import_from_35__module);
        tmp_import_name_from_178 = tmp_import_from_35__module;
        if (PyModule_Check(tmp_import_name_from_178)) {
           tmp_assign_source_216 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_178,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CrunchyrollIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_216 = IMPORT_NAME(tmp_import_name_from_178, const_str_plain_CrunchyrollIE);
        }

        if (tmp_assign_source_216 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 238;

            goto try_except_handler_35;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CrunchyrollIE, tmp_assign_source_216);
    }
    {
        PyObject *tmp_assign_source_217;
        PyObject *tmp_import_name_from_179;
        CHECK_OBJECT(tmp_import_from_35__module);
        tmp_import_name_from_179 = tmp_import_from_35__module;
        if (PyModule_Check(tmp_import_name_from_179)) {
           tmp_assign_source_217 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_179,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CrunchyrollShowPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_217 = IMPORT_NAME(tmp_import_name_from_179, const_str_plain_CrunchyrollShowPlaylistIE);
        }

        if (tmp_assign_source_217 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 238;

            goto try_except_handler_35;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CrunchyrollShowPlaylistIE, tmp_assign_source_217);
    }
    goto try_end_35;
    // Exception handler code:
    try_except_handler_35:;
    exception_keeper_type_35 = exception_type;
    exception_keeper_value_35 = exception_value;
    exception_keeper_tb_35 = exception_tb;
    exception_keeper_lineno_35 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_35__module);
    Py_DECREF(tmp_import_from_35__module);
    tmp_import_from_35__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_35;
    exception_value = exception_keeper_value_35;
    exception_tb = exception_keeper_tb_35;
    exception_lineno = exception_keeper_lineno_35;

    goto frame_exception_exit_1;
    // End of try:
    try_end_35:;
    CHECK_OBJECT(tmp_import_from_35__module);
    Py_DECREF(tmp_import_from_35__module);
    tmp_import_from_35__module = NULL;

    {
        PyObject *tmp_assign_source_218;
        PyObject *tmp_import_name_from_180;
        PyObject *tmp_name_name_121;
        PyObject *tmp_globals_name_121;
        PyObject *tmp_locals_name_121;
        PyObject *tmp_fromlist_name_121;
        PyObject *tmp_level_name_121;
        tmp_name_name_121 = const_str_plain_cspan;
        tmp_globals_name_121 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_121 = Py_None;
        tmp_fromlist_name_121 = const_tuple_str_plain_CSpanIE_tuple;
        tmp_level_name_121 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 242;
        tmp_import_name_from_180 = IMPORT_MODULE5(tmp_name_name_121, tmp_globals_name_121, tmp_locals_name_121, tmp_fromlist_name_121, tmp_level_name_121);
        if (tmp_import_name_from_180 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 242;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_180)) {
           tmp_assign_source_218 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_180,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CSpanIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_218 = IMPORT_NAME(tmp_import_name_from_180, const_str_plain_CSpanIE);
        }

        Py_DECREF(tmp_import_name_from_180);
        if (tmp_assign_source_218 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 242;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CSpanIE, tmp_assign_source_218);
    }
    {
        PyObject *tmp_assign_source_219;
        PyObject *tmp_import_name_from_181;
        PyObject *tmp_name_name_122;
        PyObject *tmp_globals_name_122;
        PyObject *tmp_locals_name_122;
        PyObject *tmp_fromlist_name_122;
        PyObject *tmp_level_name_122;
        tmp_name_name_122 = const_str_plain_ctsnews;
        tmp_globals_name_122 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_122 = Py_None;
        tmp_fromlist_name_122 = const_tuple_str_plain_CtsNewsIE_tuple;
        tmp_level_name_122 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 243;
        tmp_import_name_from_181 = IMPORT_MODULE5(tmp_name_name_122, tmp_globals_name_122, tmp_locals_name_122, tmp_fromlist_name_122, tmp_level_name_122);
        if (tmp_import_name_from_181 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 243;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_181)) {
           tmp_assign_source_219 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_181,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CtsNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_219 = IMPORT_NAME(tmp_import_name_from_181, const_str_plain_CtsNewsIE);
        }

        Py_DECREF(tmp_import_name_from_181);
        if (tmp_assign_source_219 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 243;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CtsNewsIE, tmp_assign_source_219);
    }
    {
        PyObject *tmp_assign_source_220;
        PyObject *tmp_import_name_from_182;
        PyObject *tmp_name_name_123;
        PyObject *tmp_globals_name_123;
        PyObject *tmp_locals_name_123;
        PyObject *tmp_fromlist_name_123;
        PyObject *tmp_level_name_123;
        tmp_name_name_123 = const_str_plain_ctvnews;
        tmp_globals_name_123 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_123 = Py_None;
        tmp_fromlist_name_123 = const_tuple_str_plain_CTVNewsIE_tuple;
        tmp_level_name_123 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 244;
        tmp_import_name_from_182 = IMPORT_MODULE5(tmp_name_name_123, tmp_globals_name_123, tmp_locals_name_123, tmp_fromlist_name_123, tmp_level_name_123);
        if (tmp_import_name_from_182 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 244;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_182)) {
           tmp_assign_source_220 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_182,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CTVNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_220 = IMPORT_NAME(tmp_import_name_from_182, const_str_plain_CTVNewsIE);
        }

        Py_DECREF(tmp_import_name_from_182);
        if (tmp_assign_source_220 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 244;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CTVNewsIE, tmp_assign_source_220);
    }
    {
        PyObject *tmp_assign_source_221;
        PyObject *tmp_import_name_from_183;
        PyObject *tmp_name_name_124;
        PyObject *tmp_globals_name_124;
        PyObject *tmp_locals_name_124;
        PyObject *tmp_fromlist_name_124;
        PyObject *tmp_level_name_124;
        tmp_name_name_124 = const_str_plain_cultureunplugged;
        tmp_globals_name_124 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_124 = Py_None;
        tmp_fromlist_name_124 = const_tuple_str_plain_CultureUnpluggedIE_tuple;
        tmp_level_name_124 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 245;
        tmp_import_name_from_183 = IMPORT_MODULE5(tmp_name_name_124, tmp_globals_name_124, tmp_locals_name_124, tmp_fromlist_name_124, tmp_level_name_124);
        if (tmp_import_name_from_183 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_183)) {
           tmp_assign_source_221 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_183,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CultureUnpluggedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_221 = IMPORT_NAME(tmp_import_name_from_183, const_str_plain_CultureUnpluggedIE);
        }

        Py_DECREF(tmp_import_name_from_183);
        if (tmp_assign_source_221 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 245;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CultureUnpluggedIE, tmp_assign_source_221);
    }
    {
        PyObject *tmp_assign_source_222;
        PyObject *tmp_name_name_125;
        PyObject *tmp_globals_name_125;
        PyObject *tmp_locals_name_125;
        PyObject *tmp_fromlist_name_125;
        PyObject *tmp_level_name_125;
        tmp_name_name_125 = const_str_plain_curiositystream;
        tmp_globals_name_125 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_125 = Py_None;
        tmp_fromlist_name_125 = const_tuple_67ce4cf8cba92da85b69ae5c016c53f8_tuple;
        tmp_level_name_125 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 246;
        tmp_assign_source_222 = IMPORT_MODULE5(tmp_name_name_125, tmp_globals_name_125, tmp_locals_name_125, tmp_fromlist_name_125, tmp_level_name_125);
        if (tmp_assign_source_222 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 246;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_36__module == NULL);
        tmp_import_from_36__module = tmp_assign_source_222;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_223;
        PyObject *tmp_import_name_from_184;
        CHECK_OBJECT(tmp_import_from_36__module);
        tmp_import_name_from_184 = tmp_import_from_36__module;
        if (PyModule_Check(tmp_import_name_from_184)) {
           tmp_assign_source_223 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_184,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CuriosityStreamIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_223 = IMPORT_NAME(tmp_import_name_from_184, const_str_plain_CuriosityStreamIE);
        }

        if (tmp_assign_source_223 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 246;

            goto try_except_handler_36;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CuriosityStreamIE, tmp_assign_source_223);
    }
    {
        PyObject *tmp_assign_source_224;
        PyObject *tmp_import_name_from_185;
        CHECK_OBJECT(tmp_import_from_36__module);
        tmp_import_name_from_185 = tmp_import_from_36__module;
        if (PyModule_Check(tmp_import_name_from_185)) {
           tmp_assign_source_224 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_185,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CuriosityStreamCollectionIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_224 = IMPORT_NAME(tmp_import_name_from_185, const_str_plain_CuriosityStreamCollectionIE);
        }

        if (tmp_assign_source_224 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 246;

            goto try_except_handler_36;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CuriosityStreamCollectionIE, tmp_assign_source_224);
    }
    goto try_end_36;
    // Exception handler code:
    try_except_handler_36:;
    exception_keeper_type_36 = exception_type;
    exception_keeper_value_36 = exception_value;
    exception_keeper_tb_36 = exception_tb;
    exception_keeper_lineno_36 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_36__module);
    Py_DECREF(tmp_import_from_36__module);
    tmp_import_from_36__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_36;
    exception_value = exception_keeper_value_36;
    exception_tb = exception_keeper_tb_36;
    exception_lineno = exception_keeper_lineno_36;

    goto frame_exception_exit_1;
    // End of try:
    try_end_36:;
    CHECK_OBJECT(tmp_import_from_36__module);
    Py_DECREF(tmp_import_from_36__module);
    tmp_import_from_36__module = NULL;

    {
        PyObject *tmp_assign_source_225;
        PyObject *tmp_import_name_from_186;
        PyObject *tmp_name_name_126;
        PyObject *tmp_globals_name_126;
        PyObject *tmp_locals_name_126;
        PyObject *tmp_fromlist_name_126;
        PyObject *tmp_level_name_126;
        tmp_name_name_126 = const_str_plain_cwtv;
        tmp_globals_name_126 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_126 = Py_None;
        tmp_fromlist_name_126 = const_tuple_str_plain_CWTVIE_tuple;
        tmp_level_name_126 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 250;
        tmp_import_name_from_186 = IMPORT_MODULE5(tmp_name_name_126, tmp_globals_name_126, tmp_locals_name_126, tmp_fromlist_name_126, tmp_level_name_126);
        if (tmp_import_name_from_186 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 250;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_186)) {
           tmp_assign_source_225 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_186,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CWTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_225 = IMPORT_NAME(tmp_import_name_from_186, const_str_plain_CWTVIE);
        }

        Py_DECREF(tmp_import_name_from_186);
        if (tmp_assign_source_225 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 250;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CWTVIE, tmp_assign_source_225);
    }
    {
        PyObject *tmp_assign_source_226;
        PyObject *tmp_import_name_from_187;
        PyObject *tmp_name_name_127;
        PyObject *tmp_globals_name_127;
        PyObject *tmp_locals_name_127;
        PyObject *tmp_fromlist_name_127;
        PyObject *tmp_level_name_127;
        tmp_name_name_127 = const_str_plain_dailymail;
        tmp_globals_name_127 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_127 = Py_None;
        tmp_fromlist_name_127 = const_tuple_str_plain_DailyMailIE_tuple;
        tmp_level_name_127 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 251;
        tmp_import_name_from_187 = IMPORT_MODULE5(tmp_name_name_127, tmp_globals_name_127, tmp_locals_name_127, tmp_fromlist_name_127, tmp_level_name_127);
        if (tmp_import_name_from_187 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 251;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_187)) {
           tmp_assign_source_226 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_187,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DailyMailIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_226 = IMPORT_NAME(tmp_import_name_from_187, const_str_plain_DailyMailIE);
        }

        Py_DECREF(tmp_import_name_from_187);
        if (tmp_assign_source_226 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 251;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DailyMailIE, tmp_assign_source_226);
    }
    {
        PyObject *tmp_assign_source_227;
        PyObject *tmp_name_name_128;
        PyObject *tmp_globals_name_128;
        PyObject *tmp_locals_name_128;
        PyObject *tmp_fromlist_name_128;
        PyObject *tmp_level_name_128;
        tmp_name_name_128 = const_str_plain_dailymotion;
        tmp_globals_name_128 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_128 = Py_None;
        tmp_fromlist_name_128 = const_tuple_d1cde9fdc4221cd03beddd558fb84a02_tuple;
        tmp_level_name_128 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 252;
        tmp_assign_source_227 = IMPORT_MODULE5(tmp_name_name_128, tmp_globals_name_128, tmp_locals_name_128, tmp_fromlist_name_128, tmp_level_name_128);
        if (tmp_assign_source_227 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 252;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_37__module == NULL);
        tmp_import_from_37__module = tmp_assign_source_227;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_228;
        PyObject *tmp_import_name_from_188;
        CHECK_OBJECT(tmp_import_from_37__module);
        tmp_import_name_from_188 = tmp_import_from_37__module;
        if (PyModule_Check(tmp_import_name_from_188)) {
           tmp_assign_source_228 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_188,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DailymotionIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_228 = IMPORT_NAME(tmp_import_name_from_188, const_str_plain_DailymotionIE);
        }

        if (tmp_assign_source_228 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 252;

            goto try_except_handler_37;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DailymotionIE, tmp_assign_source_228);
    }
    {
        PyObject *tmp_assign_source_229;
        PyObject *tmp_import_name_from_189;
        CHECK_OBJECT(tmp_import_from_37__module);
        tmp_import_name_from_189 = tmp_import_from_37__module;
        if (PyModule_Check(tmp_import_name_from_189)) {
           tmp_assign_source_229 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_189,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DailymotionPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_229 = IMPORT_NAME(tmp_import_name_from_189, const_str_plain_DailymotionPlaylistIE);
        }

        if (tmp_assign_source_229 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 252;

            goto try_except_handler_37;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DailymotionPlaylistIE, tmp_assign_source_229);
    }
    {
        PyObject *tmp_assign_source_230;
        PyObject *tmp_import_name_from_190;
        CHECK_OBJECT(tmp_import_from_37__module);
        tmp_import_name_from_190 = tmp_import_from_37__module;
        if (PyModule_Check(tmp_import_name_from_190)) {
           tmp_assign_source_230 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_190,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DailymotionUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_230 = IMPORT_NAME(tmp_import_name_from_190, const_str_plain_DailymotionUserIE);
        }

        if (tmp_assign_source_230 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 252;

            goto try_except_handler_37;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DailymotionUserIE, tmp_assign_source_230);
    }
    goto try_end_37;
    // Exception handler code:
    try_except_handler_37:;
    exception_keeper_type_37 = exception_type;
    exception_keeper_value_37 = exception_value;
    exception_keeper_tb_37 = exception_tb;
    exception_keeper_lineno_37 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_37__module);
    Py_DECREF(tmp_import_from_37__module);
    tmp_import_from_37__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_37;
    exception_value = exception_keeper_value_37;
    exception_tb = exception_keeper_tb_37;
    exception_lineno = exception_keeper_lineno_37;

    goto frame_exception_exit_1;
    // End of try:
    try_end_37:;
    CHECK_OBJECT(tmp_import_from_37__module);
    Py_DECREF(tmp_import_from_37__module);
    tmp_import_from_37__module = NULL;

    {
        PyObject *tmp_assign_source_231;
        PyObject *tmp_name_name_129;
        PyObject *tmp_globals_name_129;
        PyObject *tmp_locals_name_129;
        PyObject *tmp_fromlist_name_129;
        PyObject *tmp_level_name_129;
        tmp_name_name_129 = const_str_plain_daum;
        tmp_globals_name_129 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_129 = Py_None;
        tmp_fromlist_name_129 = const_tuple_e660837d525e34e73ebb03c4633816bc_tuple;
        tmp_level_name_129 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 257;
        tmp_assign_source_231 = IMPORT_MODULE5(tmp_name_name_129, tmp_globals_name_129, tmp_locals_name_129, tmp_fromlist_name_129, tmp_level_name_129);
        if (tmp_assign_source_231 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 257;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_38__module == NULL);
        tmp_import_from_38__module = tmp_assign_source_231;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_232;
        PyObject *tmp_import_name_from_191;
        CHECK_OBJECT(tmp_import_from_38__module);
        tmp_import_name_from_191 = tmp_import_from_38__module;
        if (PyModule_Check(tmp_import_name_from_191)) {
           tmp_assign_source_232 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_191,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DaumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_232 = IMPORT_NAME(tmp_import_name_from_191, const_str_plain_DaumIE);
        }

        if (tmp_assign_source_232 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 257;

            goto try_except_handler_38;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DaumIE, tmp_assign_source_232);
    }
    {
        PyObject *tmp_assign_source_233;
        PyObject *tmp_import_name_from_192;
        CHECK_OBJECT(tmp_import_from_38__module);
        tmp_import_name_from_192 = tmp_import_from_38__module;
        if (PyModule_Check(tmp_import_name_from_192)) {
           tmp_assign_source_233 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_192,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DaumClipIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_233 = IMPORT_NAME(tmp_import_name_from_192, const_str_plain_DaumClipIE);
        }

        if (tmp_assign_source_233 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 257;

            goto try_except_handler_38;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DaumClipIE, tmp_assign_source_233);
    }
    {
        PyObject *tmp_assign_source_234;
        PyObject *tmp_import_name_from_193;
        CHECK_OBJECT(tmp_import_from_38__module);
        tmp_import_name_from_193 = tmp_import_from_38__module;
        if (PyModule_Check(tmp_import_name_from_193)) {
           tmp_assign_source_234 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_193,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DaumPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_234 = IMPORT_NAME(tmp_import_name_from_193, const_str_plain_DaumPlaylistIE);
        }

        if (tmp_assign_source_234 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 257;

            goto try_except_handler_38;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DaumPlaylistIE, tmp_assign_source_234);
    }
    {
        PyObject *tmp_assign_source_235;
        PyObject *tmp_import_name_from_194;
        CHECK_OBJECT(tmp_import_from_38__module);
        tmp_import_name_from_194 = tmp_import_from_38__module;
        if (PyModule_Check(tmp_import_name_from_194)) {
           tmp_assign_source_235 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_194,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DaumUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_235 = IMPORT_NAME(tmp_import_name_from_194, const_str_plain_DaumUserIE);
        }

        if (tmp_assign_source_235 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 257;

            goto try_except_handler_38;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DaumUserIE, tmp_assign_source_235);
    }
    goto try_end_38;
    // Exception handler code:
    try_except_handler_38:;
    exception_keeper_type_38 = exception_type;
    exception_keeper_value_38 = exception_value;
    exception_keeper_tb_38 = exception_tb;
    exception_keeper_lineno_38 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_38__module);
    Py_DECREF(tmp_import_from_38__module);
    tmp_import_from_38__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_38;
    exception_value = exception_keeper_value_38;
    exception_tb = exception_keeper_tb_38;
    exception_lineno = exception_keeper_lineno_38;

    goto frame_exception_exit_1;
    // End of try:
    try_end_38:;
    CHECK_OBJECT(tmp_import_from_38__module);
    Py_DECREF(tmp_import_from_38__module);
    tmp_import_from_38__module = NULL;

    {
        PyObject *tmp_assign_source_236;
        PyObject *tmp_import_name_from_195;
        PyObject *tmp_name_name_130;
        PyObject *tmp_globals_name_130;
        PyObject *tmp_locals_name_130;
        PyObject *tmp_fromlist_name_130;
        PyObject *tmp_level_name_130;
        tmp_name_name_130 = const_str_plain_dbtv;
        tmp_globals_name_130 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_130 = Py_None;
        tmp_fromlist_name_130 = const_tuple_str_plain_DBTVIE_tuple;
        tmp_level_name_130 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 263;
        tmp_import_name_from_195 = IMPORT_MODULE5(tmp_name_name_130, tmp_globals_name_130, tmp_locals_name_130, tmp_fromlist_name_130, tmp_level_name_130);
        if (tmp_import_name_from_195 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 263;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_195)) {
           tmp_assign_source_236 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_195,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DBTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_236 = IMPORT_NAME(tmp_import_name_from_195, const_str_plain_DBTVIE);
        }

        Py_DECREF(tmp_import_name_from_195);
        if (tmp_assign_source_236 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 263;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DBTVIE, tmp_assign_source_236);
    }
    {
        PyObject *tmp_assign_source_237;
        PyObject *tmp_import_name_from_196;
        PyObject *tmp_name_name_131;
        PyObject *tmp_globals_name_131;
        PyObject *tmp_locals_name_131;
        PyObject *tmp_fromlist_name_131;
        PyObject *tmp_level_name_131;
        tmp_name_name_131 = const_str_plain_dctp;
        tmp_globals_name_131 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_131 = Py_None;
        tmp_fromlist_name_131 = const_tuple_str_plain_DctpTvIE_tuple;
        tmp_level_name_131 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 264;
        tmp_import_name_from_196 = IMPORT_MODULE5(tmp_name_name_131, tmp_globals_name_131, tmp_locals_name_131, tmp_fromlist_name_131, tmp_level_name_131);
        if (tmp_import_name_from_196 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 264;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_196)) {
           tmp_assign_source_237 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_196,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DctpTvIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_237 = IMPORT_NAME(tmp_import_name_from_196, const_str_plain_DctpTvIE);
        }

        Py_DECREF(tmp_import_name_from_196);
        if (tmp_assign_source_237 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 264;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DctpTvIE, tmp_assign_source_237);
    }
    {
        PyObject *tmp_assign_source_238;
        PyObject *tmp_import_name_from_197;
        PyObject *tmp_name_name_132;
        PyObject *tmp_globals_name_132;
        PyObject *tmp_locals_name_132;
        PyObject *tmp_fromlist_name_132;
        PyObject *tmp_level_name_132;
        tmp_name_name_132 = const_str_plain_deezer;
        tmp_globals_name_132 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_132 = Py_None;
        tmp_fromlist_name_132 = const_tuple_str_plain_DeezerPlaylistIE_tuple;
        tmp_level_name_132 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 265;
        tmp_import_name_from_197 = IMPORT_MODULE5(tmp_name_name_132, tmp_globals_name_132, tmp_locals_name_132, tmp_fromlist_name_132, tmp_level_name_132);
        if (tmp_import_name_from_197 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 265;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_197)) {
           tmp_assign_source_238 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_197,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DeezerPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_238 = IMPORT_NAME(tmp_import_name_from_197, const_str_plain_DeezerPlaylistIE);
        }

        Py_DECREF(tmp_import_name_from_197);
        if (tmp_assign_source_238 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 265;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DeezerPlaylistIE, tmp_assign_source_238);
    }
    {
        PyObject *tmp_assign_source_239;
        PyObject *tmp_import_name_from_198;
        PyObject *tmp_name_name_133;
        PyObject *tmp_globals_name_133;
        PyObject *tmp_locals_name_133;
        PyObject *tmp_fromlist_name_133;
        PyObject *tmp_level_name_133;
        tmp_name_name_133 = const_str_plain_democracynow;
        tmp_globals_name_133 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_133 = Py_None;
        tmp_fromlist_name_133 = const_tuple_str_plain_DemocracynowIE_tuple;
        tmp_level_name_133 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 266;
        tmp_import_name_from_198 = IMPORT_MODULE5(tmp_name_name_133, tmp_globals_name_133, tmp_locals_name_133, tmp_fromlist_name_133, tmp_level_name_133);
        if (tmp_import_name_from_198 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 266;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_198)) {
           tmp_assign_source_239 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_198,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DemocracynowIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_239 = IMPORT_NAME(tmp_import_name_from_198, const_str_plain_DemocracynowIE);
        }

        Py_DECREF(tmp_import_name_from_198);
        if (tmp_assign_source_239 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 266;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DemocracynowIE, tmp_assign_source_239);
    }
    {
        PyObject *tmp_assign_source_240;
        PyObject *tmp_import_name_from_199;
        PyObject *tmp_name_name_134;
        PyObject *tmp_globals_name_134;
        PyObject *tmp_locals_name_134;
        PyObject *tmp_fromlist_name_134;
        PyObject *tmp_level_name_134;
        tmp_name_name_134 = const_str_plain_dfb;
        tmp_globals_name_134 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_134 = Py_None;
        tmp_fromlist_name_134 = const_tuple_str_plain_DFBIE_tuple;
        tmp_level_name_134 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 267;
        tmp_import_name_from_199 = IMPORT_MODULE5(tmp_name_name_134, tmp_globals_name_134, tmp_locals_name_134, tmp_fromlist_name_134, tmp_level_name_134);
        if (tmp_import_name_from_199 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 267;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_199)) {
           tmp_assign_source_240 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_199,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DFBIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_240 = IMPORT_NAME(tmp_import_name_from_199, const_str_plain_DFBIE);
        }

        Py_DECREF(tmp_import_name_from_199);
        if (tmp_assign_source_240 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 267;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DFBIE, tmp_assign_source_240);
    }
    {
        PyObject *tmp_assign_source_241;
        PyObject *tmp_import_name_from_200;
        PyObject *tmp_name_name_135;
        PyObject *tmp_globals_name_135;
        PyObject *tmp_locals_name_135;
        PyObject *tmp_fromlist_name_135;
        PyObject *tmp_level_name_135;
        tmp_name_name_135 = const_str_plain_dhm;
        tmp_globals_name_135 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_135 = Py_None;
        tmp_fromlist_name_135 = const_tuple_str_plain_DHMIE_tuple;
        tmp_level_name_135 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 268;
        tmp_import_name_from_200 = IMPORT_MODULE5(tmp_name_name_135, tmp_globals_name_135, tmp_locals_name_135, tmp_fromlist_name_135, tmp_level_name_135);
        if (tmp_import_name_from_200 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 268;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_200)) {
           tmp_assign_source_241 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_200,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DHMIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_241 = IMPORT_NAME(tmp_import_name_from_200, const_str_plain_DHMIE);
        }

        Py_DECREF(tmp_import_name_from_200);
        if (tmp_assign_source_241 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 268;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DHMIE, tmp_assign_source_241);
    }
    {
        PyObject *tmp_assign_source_242;
        PyObject *tmp_import_name_from_201;
        PyObject *tmp_name_name_136;
        PyObject *tmp_globals_name_136;
        PyObject *tmp_locals_name_136;
        PyObject *tmp_fromlist_name_136;
        PyObject *tmp_level_name_136;
        tmp_name_name_136 = const_str_plain_digg;
        tmp_globals_name_136 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_136 = Py_None;
        tmp_fromlist_name_136 = const_tuple_str_plain_DiggIE_tuple;
        tmp_level_name_136 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 269;
        tmp_import_name_from_201 = IMPORT_MODULE5(tmp_name_name_136, tmp_globals_name_136, tmp_locals_name_136, tmp_fromlist_name_136, tmp_level_name_136);
        if (tmp_import_name_from_201 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 269;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_201)) {
           tmp_assign_source_242 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_201,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DiggIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_242 = IMPORT_NAME(tmp_import_name_from_201, const_str_plain_DiggIE);
        }

        Py_DECREF(tmp_import_name_from_201);
        if (tmp_assign_source_242 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 269;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DiggIE, tmp_assign_source_242);
    }
    {
        PyObject *tmp_assign_source_243;
        PyObject *tmp_import_name_from_202;
        PyObject *tmp_name_name_137;
        PyObject *tmp_globals_name_137;
        PyObject *tmp_locals_name_137;
        PyObject *tmp_fromlist_name_137;
        PyObject *tmp_level_name_137;
        tmp_name_name_137 = const_str_plain_dotsub;
        tmp_globals_name_137 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_137 = Py_None;
        tmp_fromlist_name_137 = const_tuple_str_plain_DotsubIE_tuple;
        tmp_level_name_137 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 270;
        tmp_import_name_from_202 = IMPORT_MODULE5(tmp_name_name_137, tmp_globals_name_137, tmp_locals_name_137, tmp_fromlist_name_137, tmp_level_name_137);
        if (tmp_import_name_from_202 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_202)) {
           tmp_assign_source_243 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_202,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DotsubIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_243 = IMPORT_NAME(tmp_import_name_from_202, const_str_plain_DotsubIE);
        }

        Py_DECREF(tmp_import_name_from_202);
        if (tmp_assign_source_243 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 270;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DotsubIE, tmp_assign_source_243);
    }
    {
        PyObject *tmp_assign_source_244;
        PyObject *tmp_name_name_138;
        PyObject *tmp_globals_name_138;
        PyObject *tmp_locals_name_138;
        PyObject *tmp_fromlist_name_138;
        PyObject *tmp_level_name_138;
        tmp_name_name_138 = const_str_plain_douyutv;
        tmp_globals_name_138 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_138 = Py_None;
        tmp_fromlist_name_138 = const_tuple_str_plain_DouyuShowIE_str_plain_DouyuTVIE_tuple;
        tmp_level_name_138 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 271;
        tmp_assign_source_244 = IMPORT_MODULE5(tmp_name_name_138, tmp_globals_name_138, tmp_locals_name_138, tmp_fromlist_name_138, tmp_level_name_138);
        if (tmp_assign_source_244 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 271;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_39__module == NULL);
        tmp_import_from_39__module = tmp_assign_source_244;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_245;
        PyObject *tmp_import_name_from_203;
        CHECK_OBJECT(tmp_import_from_39__module);
        tmp_import_name_from_203 = tmp_import_from_39__module;
        if (PyModule_Check(tmp_import_name_from_203)) {
           tmp_assign_source_245 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_203,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DouyuShowIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_245 = IMPORT_NAME(tmp_import_name_from_203, const_str_plain_DouyuShowIE);
        }

        if (tmp_assign_source_245 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 271;

            goto try_except_handler_39;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DouyuShowIE, tmp_assign_source_245);
    }
    {
        PyObject *tmp_assign_source_246;
        PyObject *tmp_import_name_from_204;
        CHECK_OBJECT(tmp_import_from_39__module);
        tmp_import_name_from_204 = tmp_import_from_39__module;
        if (PyModule_Check(tmp_import_name_from_204)) {
           tmp_assign_source_246 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_204,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DouyuTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_246 = IMPORT_NAME(tmp_import_name_from_204, const_str_plain_DouyuTVIE);
        }

        if (tmp_assign_source_246 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 271;

            goto try_except_handler_39;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DouyuTVIE, tmp_assign_source_246);
    }
    goto try_end_39;
    // Exception handler code:
    try_except_handler_39:;
    exception_keeper_type_39 = exception_type;
    exception_keeper_value_39 = exception_value;
    exception_keeper_tb_39 = exception_tb;
    exception_keeper_lineno_39 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_39__module);
    Py_DECREF(tmp_import_from_39__module);
    tmp_import_from_39__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_39;
    exception_value = exception_keeper_value_39;
    exception_tb = exception_keeper_tb_39;
    exception_lineno = exception_keeper_lineno_39;

    goto frame_exception_exit_1;
    // End of try:
    try_end_39:;
    CHECK_OBJECT(tmp_import_from_39__module);
    Py_DECREF(tmp_import_from_39__module);
    tmp_import_from_39__module = NULL;

    {
        PyObject *tmp_assign_source_247;
        PyObject *tmp_import_name_from_205;
        PyObject *tmp_name_name_139;
        PyObject *tmp_globals_name_139;
        PyObject *tmp_locals_name_139;
        PyObject *tmp_fromlist_name_139;
        PyObject *tmp_level_name_139;
        tmp_name_name_139 = const_str_plain_dplay;
        tmp_globals_name_139 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_139 = Py_None;
        tmp_fromlist_name_139 = const_tuple_str_plain_DPlayIE_tuple;
        tmp_level_name_139 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 275;
        tmp_import_name_from_205 = IMPORT_MODULE5(tmp_name_name_139, tmp_globals_name_139, tmp_locals_name_139, tmp_fromlist_name_139, tmp_level_name_139);
        if (tmp_import_name_from_205 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 275;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_205)) {
           tmp_assign_source_247 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_205,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_247 = IMPORT_NAME(tmp_import_name_from_205, const_str_plain_DPlayIE);
        }

        Py_DECREF(tmp_import_name_from_205);
        if (tmp_assign_source_247 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 275;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DPlayIE, tmp_assign_source_247);
    }
    {
        PyObject *tmp_assign_source_248;
        PyObject *tmp_import_name_from_206;
        PyObject *tmp_name_name_140;
        PyObject *tmp_globals_name_140;
        PyObject *tmp_locals_name_140;
        PyObject *tmp_fromlist_name_140;
        PyObject *tmp_level_name_140;
        tmp_name_name_140 = const_str_plain_dreisat;
        tmp_globals_name_140 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_140 = Py_None;
        tmp_fromlist_name_140 = const_tuple_str_plain_DreiSatIE_tuple;
        tmp_level_name_140 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 276;
        tmp_import_name_from_206 = IMPORT_MODULE5(tmp_name_name_140, tmp_globals_name_140, tmp_locals_name_140, tmp_fromlist_name_140, tmp_level_name_140);
        if (tmp_import_name_from_206 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 276;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_206)) {
           tmp_assign_source_248 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_206,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DreiSatIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_248 = IMPORT_NAME(tmp_import_name_from_206, const_str_plain_DreiSatIE);
        }

        Py_DECREF(tmp_import_name_from_206);
        if (tmp_assign_source_248 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 276;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DreiSatIE, tmp_assign_source_248);
    }
    {
        PyObject *tmp_assign_source_249;
        PyObject *tmp_import_name_from_207;
        PyObject *tmp_name_name_141;
        PyObject *tmp_globals_name_141;
        PyObject *tmp_locals_name_141;
        PyObject *tmp_fromlist_name_141;
        PyObject *tmp_level_name_141;
        tmp_name_name_141 = const_str_plain_drbonanza;
        tmp_globals_name_141 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_141 = Py_None;
        tmp_fromlist_name_141 = const_tuple_str_plain_DRBonanzaIE_tuple;
        tmp_level_name_141 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 277;
        tmp_import_name_from_207 = IMPORT_MODULE5(tmp_name_name_141, tmp_globals_name_141, tmp_locals_name_141, tmp_fromlist_name_141, tmp_level_name_141);
        if (tmp_import_name_from_207 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 277;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_207)) {
           tmp_assign_source_249 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_207,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DRBonanzaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_249 = IMPORT_NAME(tmp_import_name_from_207, const_str_plain_DRBonanzaIE);
        }

        Py_DECREF(tmp_import_name_from_207);
        if (tmp_assign_source_249 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 277;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DRBonanzaIE, tmp_assign_source_249);
    }
    {
        PyObject *tmp_assign_source_250;
        PyObject *tmp_import_name_from_208;
        PyObject *tmp_name_name_142;
        PyObject *tmp_globals_name_142;
        PyObject *tmp_locals_name_142;
        PyObject *tmp_fromlist_name_142;
        PyObject *tmp_level_name_142;
        tmp_name_name_142 = const_str_plain_drtuber;
        tmp_globals_name_142 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_142 = Py_None;
        tmp_fromlist_name_142 = const_tuple_str_plain_DrTuberIE_tuple;
        tmp_level_name_142 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 278;
        tmp_import_name_from_208 = IMPORT_MODULE5(tmp_name_name_142, tmp_globals_name_142, tmp_locals_name_142, tmp_fromlist_name_142, tmp_level_name_142);
        if (tmp_import_name_from_208 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 278;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_208)) {
           tmp_assign_source_250 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_208,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DrTuberIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_250 = IMPORT_NAME(tmp_import_name_from_208, const_str_plain_DrTuberIE);
        }

        Py_DECREF(tmp_import_name_from_208);
        if (tmp_assign_source_250 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 278;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DrTuberIE, tmp_assign_source_250);
    }
    {
        PyObject *tmp_assign_source_251;
        PyObject *tmp_name_name_143;
        PyObject *tmp_globals_name_143;
        PyObject *tmp_locals_name_143;
        PyObject *tmp_fromlist_name_143;
        PyObject *tmp_level_name_143;
        tmp_name_name_143 = const_str_plain_drtv;
        tmp_globals_name_143 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_143 = Py_None;
        tmp_fromlist_name_143 = const_tuple_str_plain_DRTVIE_str_plain_DRTVLiveIE_tuple;
        tmp_level_name_143 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 279;
        tmp_assign_source_251 = IMPORT_MODULE5(tmp_name_name_143, tmp_globals_name_143, tmp_locals_name_143, tmp_fromlist_name_143, tmp_level_name_143);
        if (tmp_assign_source_251 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 279;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_40__module == NULL);
        tmp_import_from_40__module = tmp_assign_source_251;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_252;
        PyObject *tmp_import_name_from_209;
        CHECK_OBJECT(tmp_import_from_40__module);
        tmp_import_name_from_209 = tmp_import_from_40__module;
        if (PyModule_Check(tmp_import_name_from_209)) {
           tmp_assign_source_252 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_209,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DRTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_252 = IMPORT_NAME(tmp_import_name_from_209, const_str_plain_DRTVIE);
        }

        if (tmp_assign_source_252 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 279;

            goto try_except_handler_40;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DRTVIE, tmp_assign_source_252);
    }
    {
        PyObject *tmp_assign_source_253;
        PyObject *tmp_import_name_from_210;
        CHECK_OBJECT(tmp_import_from_40__module);
        tmp_import_name_from_210 = tmp_import_from_40__module;
        if (PyModule_Check(tmp_import_name_from_210)) {
           tmp_assign_source_253 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_210,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DRTVLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_253 = IMPORT_NAME(tmp_import_name_from_210, const_str_plain_DRTVLiveIE);
        }

        if (tmp_assign_source_253 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 279;

            goto try_except_handler_40;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DRTVLiveIE, tmp_assign_source_253);
    }
    goto try_end_40;
    // Exception handler code:
    try_except_handler_40:;
    exception_keeper_type_40 = exception_type;
    exception_keeper_value_40 = exception_value;
    exception_keeper_tb_40 = exception_tb;
    exception_keeper_lineno_40 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_40__module);
    Py_DECREF(tmp_import_from_40__module);
    tmp_import_from_40__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_40;
    exception_value = exception_keeper_value_40;
    exception_tb = exception_keeper_tb_40;
    exception_lineno = exception_keeper_lineno_40;

    goto frame_exception_exit_1;
    // End of try:
    try_end_40:;
    CHECK_OBJECT(tmp_import_from_40__module);
    Py_DECREF(tmp_import_from_40__module);
    tmp_import_from_40__module = NULL;

    {
        PyObject *tmp_assign_source_254;
        PyObject *tmp_import_name_from_211;
        PyObject *tmp_name_name_144;
        PyObject *tmp_globals_name_144;
        PyObject *tmp_locals_name_144;
        PyObject *tmp_fromlist_name_144;
        PyObject *tmp_level_name_144;
        tmp_name_name_144 = const_str_plain_dtube;
        tmp_globals_name_144 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_144 = Py_None;
        tmp_fromlist_name_144 = const_tuple_str_plain_DTubeIE_tuple;
        tmp_level_name_144 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 283;
        tmp_import_name_from_211 = IMPORT_MODULE5(tmp_name_name_144, tmp_globals_name_144, tmp_locals_name_144, tmp_fromlist_name_144, tmp_level_name_144);
        if (tmp_import_name_from_211 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 283;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_211)) {
           tmp_assign_source_254 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_211,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_254 = IMPORT_NAME(tmp_import_name_from_211, const_str_plain_DTubeIE);
        }

        Py_DECREF(tmp_import_name_from_211);
        if (tmp_assign_source_254 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 283;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DTubeIE, tmp_assign_source_254);
    }
    {
        PyObject *tmp_assign_source_255;
        PyObject *tmp_import_name_from_212;
        PyObject *tmp_name_name_145;
        PyObject *tmp_globals_name_145;
        PyObject *tmp_locals_name_145;
        PyObject *tmp_fromlist_name_145;
        PyObject *tmp_level_name_145;
        tmp_name_name_145 = const_str_plain_dvtv;
        tmp_globals_name_145 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_145 = Py_None;
        tmp_fromlist_name_145 = const_tuple_str_plain_DVTVIE_tuple;
        tmp_level_name_145 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 284;
        tmp_import_name_from_212 = IMPORT_MODULE5(tmp_name_name_145, tmp_globals_name_145, tmp_locals_name_145, tmp_fromlist_name_145, tmp_level_name_145);
        if (tmp_import_name_from_212 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 284;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_212)) {
           tmp_assign_source_255 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_212,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DVTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_255 = IMPORT_NAME(tmp_import_name_from_212, const_str_plain_DVTVIE);
        }

        Py_DECREF(tmp_import_name_from_212);
        if (tmp_assign_source_255 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 284;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DVTVIE, tmp_assign_source_255);
    }
    {
        PyObject *tmp_assign_source_256;
        PyObject *tmp_import_name_from_213;
        PyObject *tmp_name_name_146;
        PyObject *tmp_globals_name_146;
        PyObject *tmp_locals_name_146;
        PyObject *tmp_fromlist_name_146;
        PyObject *tmp_level_name_146;
        tmp_name_name_146 = const_str_plain_dumpert;
        tmp_globals_name_146 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_146 = Py_None;
        tmp_fromlist_name_146 = const_tuple_str_plain_DumpertIE_tuple;
        tmp_level_name_146 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 285;
        tmp_import_name_from_213 = IMPORT_MODULE5(tmp_name_name_146, tmp_globals_name_146, tmp_locals_name_146, tmp_fromlist_name_146, tmp_level_name_146);
        if (tmp_import_name_from_213 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 285;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_213)) {
           tmp_assign_source_256 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_213,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DumpertIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_256 = IMPORT_NAME(tmp_import_name_from_213, const_str_plain_DumpertIE);
        }

        Py_DECREF(tmp_import_name_from_213);
        if (tmp_assign_source_256 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 285;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DumpertIE, tmp_assign_source_256);
    }
    {
        PyObject *tmp_assign_source_257;
        PyObject *tmp_import_name_from_214;
        PyObject *tmp_name_name_147;
        PyObject *tmp_globals_name_147;
        PyObject *tmp_locals_name_147;
        PyObject *tmp_fromlist_name_147;
        PyObject *tmp_level_name_147;
        tmp_name_name_147 = const_str_plain_defense;
        tmp_globals_name_147 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_147 = Py_None;
        tmp_fromlist_name_147 = const_tuple_str_plain_DefenseGouvFrIE_tuple;
        tmp_level_name_147 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 286;
        tmp_import_name_from_214 = IMPORT_MODULE5(tmp_name_name_147, tmp_globals_name_147, tmp_locals_name_147, tmp_fromlist_name_147, tmp_level_name_147);
        if (tmp_import_name_from_214 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 286;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_214)) {
           tmp_assign_source_257 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_214,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DefenseGouvFrIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_257 = IMPORT_NAME(tmp_import_name_from_214, const_str_plain_DefenseGouvFrIE);
        }

        Py_DECREF(tmp_import_name_from_214);
        if (tmp_assign_source_257 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 286;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DefenseGouvFrIE, tmp_assign_source_257);
    }
    {
        PyObject *tmp_assign_source_258;
        PyObject *tmp_import_name_from_215;
        PyObject *tmp_name_name_148;
        PyObject *tmp_globals_name_148;
        PyObject *tmp_locals_name_148;
        PyObject *tmp_fromlist_name_148;
        PyObject *tmp_level_name_148;
        tmp_name_name_148 = const_str_plain_discovery;
        tmp_globals_name_148 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_148 = Py_None;
        tmp_fromlist_name_148 = const_tuple_str_plain_DiscoveryIE_tuple;
        tmp_level_name_148 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 287;
        tmp_import_name_from_215 = IMPORT_MODULE5(tmp_name_name_148, tmp_globals_name_148, tmp_locals_name_148, tmp_fromlist_name_148, tmp_level_name_148);
        if (tmp_import_name_from_215 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 287;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_215)) {
           tmp_assign_source_258 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_215,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DiscoveryIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_258 = IMPORT_NAME(tmp_import_name_from_215, const_str_plain_DiscoveryIE);
        }

        Py_DECREF(tmp_import_name_from_215);
        if (tmp_assign_source_258 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 287;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DiscoveryIE, tmp_assign_source_258);
    }
    {
        PyObject *tmp_assign_source_259;
        PyObject *tmp_name_name_149;
        PyObject *tmp_globals_name_149;
        PyObject *tmp_locals_name_149;
        PyObject *tmp_fromlist_name_149;
        PyObject *tmp_level_name_149;
        tmp_name_name_149 = const_str_plain_discoverygo;
        tmp_globals_name_149 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_149 = Py_None;
        tmp_fromlist_name_149 = const_tuple_str_plain_DiscoveryGoIE_str_plain_DiscoveryGoPlaylistIE_tuple;
        tmp_level_name_149 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 288;
        tmp_assign_source_259 = IMPORT_MODULE5(tmp_name_name_149, tmp_globals_name_149, tmp_locals_name_149, tmp_fromlist_name_149, tmp_level_name_149);
        if (tmp_assign_source_259 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_41__module == NULL);
        tmp_import_from_41__module = tmp_assign_source_259;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_260;
        PyObject *tmp_import_name_from_216;
        CHECK_OBJECT(tmp_import_from_41__module);
        tmp_import_name_from_216 = tmp_import_from_41__module;
        if (PyModule_Check(tmp_import_name_from_216)) {
           tmp_assign_source_260 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_216,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DiscoveryGoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_260 = IMPORT_NAME(tmp_import_name_from_216, const_str_plain_DiscoveryGoIE);
        }

        if (tmp_assign_source_260 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_41;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DiscoveryGoIE, tmp_assign_source_260);
    }
    {
        PyObject *tmp_assign_source_261;
        PyObject *tmp_import_name_from_217;
        CHECK_OBJECT(tmp_import_from_41__module);
        tmp_import_name_from_217 = tmp_import_from_41__module;
        if (PyModule_Check(tmp_import_name_from_217)) {
           tmp_assign_source_261 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_217,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DiscoveryGoPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_261 = IMPORT_NAME(tmp_import_name_from_217, const_str_plain_DiscoveryGoPlaylistIE);
        }

        if (tmp_assign_source_261 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto try_except_handler_41;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DiscoveryGoPlaylistIE, tmp_assign_source_261);
    }
    goto try_end_41;
    // Exception handler code:
    try_except_handler_41:;
    exception_keeper_type_41 = exception_type;
    exception_keeper_value_41 = exception_value;
    exception_keeper_tb_41 = exception_tb;
    exception_keeper_lineno_41 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_41__module);
    Py_DECREF(tmp_import_from_41__module);
    tmp_import_from_41__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_41;
    exception_value = exception_keeper_value_41;
    exception_tb = exception_keeper_tb_41;
    exception_lineno = exception_keeper_lineno_41;

    goto frame_exception_exit_1;
    // End of try:
    try_end_41:;
    CHECK_OBJECT(tmp_import_from_41__module);
    Py_DECREF(tmp_import_from_41__module);
    tmp_import_from_41__module = NULL;

    {
        PyObject *tmp_assign_source_262;
        PyObject *tmp_import_name_from_218;
        PyObject *tmp_name_name_150;
        PyObject *tmp_globals_name_150;
        PyObject *tmp_locals_name_150;
        PyObject *tmp_fromlist_name_150;
        PyObject *tmp_level_name_150;
        tmp_name_name_150 = const_str_plain_discoverynetworks;
        tmp_globals_name_150 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_150 = Py_None;
        tmp_fromlist_name_150 = const_tuple_str_plain_DiscoveryNetworksDeIE_tuple;
        tmp_level_name_150 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 292;
        tmp_import_name_from_218 = IMPORT_MODULE5(tmp_name_name_150, tmp_globals_name_150, tmp_locals_name_150, tmp_fromlist_name_150, tmp_level_name_150);
        if (tmp_import_name_from_218 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_218)) {
           tmp_assign_source_262 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_218,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DiscoveryNetworksDeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_262 = IMPORT_NAME(tmp_import_name_from_218, const_str_plain_DiscoveryNetworksDeIE);
        }

        Py_DECREF(tmp_import_name_from_218);
        if (tmp_assign_source_262 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DiscoveryNetworksDeIE, tmp_assign_source_262);
    }
    {
        PyObject *tmp_assign_source_263;
        PyObject *tmp_import_name_from_219;
        PyObject *tmp_name_name_151;
        PyObject *tmp_globals_name_151;
        PyObject *tmp_locals_name_151;
        PyObject *tmp_fromlist_name_151;
        PyObject *tmp_level_name_151;
        tmp_name_name_151 = const_str_plain_discoveryvr;
        tmp_globals_name_151 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_151 = Py_None;
        tmp_fromlist_name_151 = const_tuple_str_plain_DiscoveryVRIE_tuple;
        tmp_level_name_151 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 293;
        tmp_import_name_from_219 = IMPORT_MODULE5(tmp_name_name_151, tmp_globals_name_151, tmp_locals_name_151, tmp_fromlist_name_151, tmp_level_name_151);
        if (tmp_import_name_from_219 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 293;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_219)) {
           tmp_assign_source_263 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_219,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DiscoveryVRIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_263 = IMPORT_NAME(tmp_import_name_from_219, const_str_plain_DiscoveryVRIE);
        }

        Py_DECREF(tmp_import_name_from_219);
        if (tmp_assign_source_263 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 293;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DiscoveryVRIE, tmp_assign_source_263);
    }
    {
        PyObject *tmp_assign_source_264;
        PyObject *tmp_import_name_from_220;
        PyObject *tmp_name_name_152;
        PyObject *tmp_globals_name_152;
        PyObject *tmp_locals_name_152;
        PyObject *tmp_fromlist_name_152;
        PyObject *tmp_level_name_152;
        tmp_name_name_152 = const_str_plain_disney;
        tmp_globals_name_152 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_152 = Py_None;
        tmp_fromlist_name_152 = const_tuple_str_plain_DisneyIE_tuple;
        tmp_level_name_152 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 294;
        tmp_import_name_from_220 = IMPORT_MODULE5(tmp_name_name_152, tmp_globals_name_152, tmp_locals_name_152, tmp_fromlist_name_152, tmp_level_name_152);
        if (tmp_import_name_from_220 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 294;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_220)) {
           tmp_assign_source_264 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_220,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DisneyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_264 = IMPORT_NAME(tmp_import_name_from_220, const_str_plain_DisneyIE);
        }

        Py_DECREF(tmp_import_name_from_220);
        if (tmp_assign_source_264 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 294;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DisneyIE, tmp_assign_source_264);
    }
    {
        PyObject *tmp_assign_source_265;
        PyObject *tmp_import_name_from_221;
        PyObject *tmp_name_name_153;
        PyObject *tmp_globals_name_153;
        PyObject *tmp_locals_name_153;
        PyObject *tmp_fromlist_name_153;
        PyObject *tmp_level_name_153;
        tmp_name_name_153 = const_str_plain_dispeak;
        tmp_globals_name_153 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_153 = Py_None;
        tmp_fromlist_name_153 = const_tuple_str_plain_DigitallySpeakingIE_tuple;
        tmp_level_name_153 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 295;
        tmp_import_name_from_221 = IMPORT_MODULE5(tmp_name_name_153, tmp_globals_name_153, tmp_locals_name_153, tmp_fromlist_name_153, tmp_level_name_153);
        if (tmp_import_name_from_221 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_221)) {
           tmp_assign_source_265 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_221,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DigitallySpeakingIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_265 = IMPORT_NAME(tmp_import_name_from_221, const_str_plain_DigitallySpeakingIE);
        }

        Py_DECREF(tmp_import_name_from_221);
        if (tmp_assign_source_265 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DigitallySpeakingIE, tmp_assign_source_265);
    }
    {
        PyObject *tmp_assign_source_266;
        PyObject *tmp_import_name_from_222;
        PyObject *tmp_name_name_154;
        PyObject *tmp_globals_name_154;
        PyObject *tmp_locals_name_154;
        PyObject *tmp_fromlist_name_154;
        PyObject *tmp_level_name_154;
        tmp_name_name_154 = const_str_plain_dropbox;
        tmp_globals_name_154 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_154 = Py_None;
        tmp_fromlist_name_154 = const_tuple_str_plain_DropboxIE_tuple;
        tmp_level_name_154 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 296;
        tmp_import_name_from_222 = IMPORT_MODULE5(tmp_name_name_154, tmp_globals_name_154, tmp_locals_name_154, tmp_fromlist_name_154, tmp_level_name_154);
        if (tmp_import_name_from_222 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 296;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_222)) {
           tmp_assign_source_266 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_222,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DropboxIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_266 = IMPORT_NAME(tmp_import_name_from_222, const_str_plain_DropboxIE);
        }

        Py_DECREF(tmp_import_name_from_222);
        if (tmp_assign_source_266 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 296;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DropboxIE, tmp_assign_source_266);
    }
    {
        PyObject *tmp_assign_source_267;
        PyObject *tmp_name_name_155;
        PyObject *tmp_globals_name_155;
        PyObject *tmp_locals_name_155;
        PyObject *tmp_fromlist_name_155;
        PyObject *tmp_level_name_155;
        tmp_name_name_155 = const_str_plain_dw;
        tmp_globals_name_155 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_155 = Py_None;
        tmp_fromlist_name_155 = const_tuple_str_plain_DWIE_str_plain_DWArticleIE_tuple;
        tmp_level_name_155 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 297;
        tmp_assign_source_267 = IMPORT_MODULE5(tmp_name_name_155, tmp_globals_name_155, tmp_locals_name_155, tmp_fromlist_name_155, tmp_level_name_155);
        if (tmp_assign_source_267 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 297;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_42__module == NULL);
        tmp_import_from_42__module = tmp_assign_source_267;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_268;
        PyObject *tmp_import_name_from_223;
        CHECK_OBJECT(tmp_import_from_42__module);
        tmp_import_name_from_223 = tmp_import_from_42__module;
        if (PyModule_Check(tmp_import_name_from_223)) {
           tmp_assign_source_268 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_223,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DWIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_268 = IMPORT_NAME(tmp_import_name_from_223, const_str_plain_DWIE);
        }

        if (tmp_assign_source_268 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 297;

            goto try_except_handler_42;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DWIE, tmp_assign_source_268);
    }
    {
        PyObject *tmp_assign_source_269;
        PyObject *tmp_import_name_from_224;
        CHECK_OBJECT(tmp_import_from_42__module);
        tmp_import_name_from_224 = tmp_import_from_42__module;
        if (PyModule_Check(tmp_import_name_from_224)) {
           tmp_assign_source_269 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_224,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DWArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_269 = IMPORT_NAME(tmp_import_name_from_224, const_str_plain_DWArticleIE);
        }

        if (tmp_assign_source_269 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 297;

            goto try_except_handler_42;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DWArticleIE, tmp_assign_source_269);
    }
    goto try_end_42;
    // Exception handler code:
    try_except_handler_42:;
    exception_keeper_type_42 = exception_type;
    exception_keeper_value_42 = exception_value;
    exception_keeper_tb_42 = exception_tb;
    exception_keeper_lineno_42 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_42__module);
    Py_DECREF(tmp_import_from_42__module);
    tmp_import_from_42__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_42;
    exception_value = exception_keeper_value_42;
    exception_tb = exception_keeper_tb_42;
    exception_lineno = exception_keeper_lineno_42;

    goto frame_exception_exit_1;
    // End of try:
    try_end_42:;
    CHECK_OBJECT(tmp_import_from_42__module);
    Py_DECREF(tmp_import_from_42__module);
    tmp_import_from_42__module = NULL;

    {
        PyObject *tmp_assign_source_270;
        PyObject *tmp_import_name_from_225;
        PyObject *tmp_name_name_156;
        PyObject *tmp_globals_name_156;
        PyObject *tmp_locals_name_156;
        PyObject *tmp_fromlist_name_156;
        PyObject *tmp_level_name_156;
        tmp_name_name_156 = const_str_plain_eagleplatform;
        tmp_globals_name_156 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_156 = Py_None;
        tmp_fromlist_name_156 = const_tuple_str_plain_EaglePlatformIE_tuple;
        tmp_level_name_156 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 301;
        tmp_import_name_from_225 = IMPORT_MODULE5(tmp_name_name_156, tmp_globals_name_156, tmp_locals_name_156, tmp_fromlist_name_156, tmp_level_name_156);
        if (tmp_import_name_from_225 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 301;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_225)) {
           tmp_assign_source_270 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_225,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EaglePlatformIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_270 = IMPORT_NAME(tmp_import_name_from_225, const_str_plain_EaglePlatformIE);
        }

        Py_DECREF(tmp_import_name_from_225);
        if (tmp_assign_source_270 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 301;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EaglePlatformIE, tmp_assign_source_270);
    }
    {
        PyObject *tmp_assign_source_271;
        PyObject *tmp_import_name_from_226;
        PyObject *tmp_name_name_157;
        PyObject *tmp_globals_name_157;
        PyObject *tmp_locals_name_157;
        PyObject *tmp_fromlist_name_157;
        PyObject *tmp_level_name_157;
        tmp_name_name_157 = const_str_plain_ebaumsworld;
        tmp_globals_name_157 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_157 = Py_None;
        tmp_fromlist_name_157 = const_tuple_str_plain_EbaumsWorldIE_tuple;
        tmp_level_name_157 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 302;
        tmp_import_name_from_226 = IMPORT_MODULE5(tmp_name_name_157, tmp_globals_name_157, tmp_locals_name_157, tmp_fromlist_name_157, tmp_level_name_157);
        if (tmp_import_name_from_226 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 302;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_226)) {
           tmp_assign_source_271 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_226,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EbaumsWorldIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_271 = IMPORT_NAME(tmp_import_name_from_226, const_str_plain_EbaumsWorldIE);
        }

        Py_DECREF(tmp_import_name_from_226);
        if (tmp_assign_source_271 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 302;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EbaumsWorldIE, tmp_assign_source_271);
    }
    {
        PyObject *tmp_assign_source_272;
        PyObject *tmp_import_name_from_227;
        PyObject *tmp_name_name_158;
        PyObject *tmp_globals_name_158;
        PyObject *tmp_locals_name_158;
        PyObject *tmp_fromlist_name_158;
        PyObject *tmp_level_name_158;
        tmp_name_name_158 = const_str_plain_echomsk;
        tmp_globals_name_158 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_158 = Py_None;
        tmp_fromlist_name_158 = const_tuple_str_plain_EchoMskIE_tuple;
        tmp_level_name_158 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 303;
        tmp_import_name_from_227 = IMPORT_MODULE5(tmp_name_name_158, tmp_globals_name_158, tmp_locals_name_158, tmp_fromlist_name_158, tmp_level_name_158);
        if (tmp_import_name_from_227 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 303;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_227)) {
           tmp_assign_source_272 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_227,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EchoMskIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_272 = IMPORT_NAME(tmp_import_name_from_227, const_str_plain_EchoMskIE);
        }

        Py_DECREF(tmp_import_name_from_227);
        if (tmp_assign_source_272 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 303;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EchoMskIE, tmp_assign_source_272);
    }
    {
        PyObject *tmp_assign_source_273;
        PyObject *tmp_name_name_159;
        PyObject *tmp_globals_name_159;
        PyObject *tmp_locals_name_159;
        PyObject *tmp_fromlist_name_159;
        PyObject *tmp_level_name_159;
        tmp_name_name_159 = const_str_plain_egghead;
        tmp_globals_name_159 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_159 = Py_None;
        tmp_fromlist_name_159 = const_tuple_str_plain_EggheadCourseIE_str_plain_EggheadLessonIE_tuple;
        tmp_level_name_159 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 304;
        tmp_assign_source_273 = IMPORT_MODULE5(tmp_name_name_159, tmp_globals_name_159, tmp_locals_name_159, tmp_fromlist_name_159, tmp_level_name_159);
        if (tmp_assign_source_273 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 304;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_43__module == NULL);
        tmp_import_from_43__module = tmp_assign_source_273;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_274;
        PyObject *tmp_import_name_from_228;
        CHECK_OBJECT(tmp_import_from_43__module);
        tmp_import_name_from_228 = tmp_import_from_43__module;
        if (PyModule_Check(tmp_import_name_from_228)) {
           tmp_assign_source_274 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_228,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EggheadCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_274 = IMPORT_NAME(tmp_import_name_from_228, const_str_plain_EggheadCourseIE);
        }

        if (tmp_assign_source_274 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 304;

            goto try_except_handler_43;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EggheadCourseIE, tmp_assign_source_274);
    }
    {
        PyObject *tmp_assign_source_275;
        PyObject *tmp_import_name_from_229;
        CHECK_OBJECT(tmp_import_from_43__module);
        tmp_import_name_from_229 = tmp_import_from_43__module;
        if (PyModule_Check(tmp_import_name_from_229)) {
           tmp_assign_source_275 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_229,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EggheadLessonIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_275 = IMPORT_NAME(tmp_import_name_from_229, const_str_plain_EggheadLessonIE);
        }

        if (tmp_assign_source_275 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 304;

            goto try_except_handler_43;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EggheadLessonIE, tmp_assign_source_275);
    }
    goto try_end_43;
    // Exception handler code:
    try_except_handler_43:;
    exception_keeper_type_43 = exception_type;
    exception_keeper_value_43 = exception_value;
    exception_keeper_tb_43 = exception_tb;
    exception_keeper_lineno_43 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_43__module);
    Py_DECREF(tmp_import_from_43__module);
    tmp_import_from_43__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_43;
    exception_value = exception_keeper_value_43;
    exception_tb = exception_keeper_tb_43;
    exception_lineno = exception_keeper_lineno_43;

    goto frame_exception_exit_1;
    // End of try:
    try_end_43:;
    CHECK_OBJECT(tmp_import_from_43__module);
    Py_DECREF(tmp_import_from_43__module);
    tmp_import_from_43__module = NULL;

    {
        PyObject *tmp_assign_source_276;
        PyObject *tmp_import_name_from_230;
        PyObject *tmp_name_name_160;
        PyObject *tmp_globals_name_160;
        PyObject *tmp_locals_name_160;
        PyObject *tmp_fromlist_name_160;
        PyObject *tmp_level_name_160;
        tmp_name_name_160 = const_str_plain_ehow;
        tmp_globals_name_160 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_160 = Py_None;
        tmp_fromlist_name_160 = const_tuple_str_plain_EHowIE_tuple;
        tmp_level_name_160 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 308;
        tmp_import_name_from_230 = IMPORT_MODULE5(tmp_name_name_160, tmp_globals_name_160, tmp_locals_name_160, tmp_fromlist_name_160, tmp_level_name_160);
        if (tmp_import_name_from_230 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 308;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_230)) {
           tmp_assign_source_276 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_230,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EHowIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_276 = IMPORT_NAME(tmp_import_name_from_230, const_str_plain_EHowIE);
        }

        Py_DECREF(tmp_import_name_from_230);
        if (tmp_assign_source_276 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 308;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EHowIE, tmp_assign_source_276);
    }
    {
        PyObject *tmp_assign_source_277;
        PyObject *tmp_import_name_from_231;
        PyObject *tmp_name_name_161;
        PyObject *tmp_globals_name_161;
        PyObject *tmp_locals_name_161;
        PyObject *tmp_fromlist_name_161;
        PyObject *tmp_level_name_161;
        tmp_name_name_161 = const_str_plain_eighttracks;
        tmp_globals_name_161 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_161 = Py_None;
        tmp_fromlist_name_161 = const_tuple_str_plain_EightTracksIE_tuple;
        tmp_level_name_161 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 309;
        tmp_import_name_from_231 = IMPORT_MODULE5(tmp_name_name_161, tmp_globals_name_161, tmp_locals_name_161, tmp_fromlist_name_161, tmp_level_name_161);
        if (tmp_import_name_from_231 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 309;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_231)) {
           tmp_assign_source_277 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_231,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EightTracksIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_277 = IMPORT_NAME(tmp_import_name_from_231, const_str_plain_EightTracksIE);
        }

        Py_DECREF(tmp_import_name_from_231);
        if (tmp_assign_source_277 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 309;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EightTracksIE, tmp_assign_source_277);
    }
    {
        PyObject *tmp_assign_source_278;
        PyObject *tmp_import_name_from_232;
        PyObject *tmp_name_name_162;
        PyObject *tmp_globals_name_162;
        PyObject *tmp_locals_name_162;
        PyObject *tmp_fromlist_name_162;
        PyObject *tmp_level_name_162;
        tmp_name_name_162 = const_str_plain_einthusan;
        tmp_globals_name_162 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_162 = Py_None;
        tmp_fromlist_name_162 = const_tuple_str_plain_EinthusanIE_tuple;
        tmp_level_name_162 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 310;
        tmp_import_name_from_232 = IMPORT_MODULE5(tmp_name_name_162, tmp_globals_name_162, tmp_locals_name_162, tmp_fromlist_name_162, tmp_level_name_162);
        if (tmp_import_name_from_232 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 310;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_232)) {
           tmp_assign_source_278 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_232,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EinthusanIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_278 = IMPORT_NAME(tmp_import_name_from_232, const_str_plain_EinthusanIE);
        }

        Py_DECREF(tmp_import_name_from_232);
        if (tmp_assign_source_278 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 310;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EinthusanIE, tmp_assign_source_278);
    }
    {
        PyObject *tmp_assign_source_279;
        PyObject *tmp_import_name_from_233;
        PyObject *tmp_name_name_163;
        PyObject *tmp_globals_name_163;
        PyObject *tmp_locals_name_163;
        PyObject *tmp_fromlist_name_163;
        PyObject *tmp_level_name_163;
        tmp_name_name_163 = const_str_plain_eitb;
        tmp_globals_name_163 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_163 = Py_None;
        tmp_fromlist_name_163 = const_tuple_str_plain_EitbIE_tuple;
        tmp_level_name_163 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 311;
        tmp_import_name_from_233 = IMPORT_MODULE5(tmp_name_name_163, tmp_globals_name_163, tmp_locals_name_163, tmp_fromlist_name_163, tmp_level_name_163);
        if (tmp_import_name_from_233 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 311;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_233)) {
           tmp_assign_source_279 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_233,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EitbIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_279 = IMPORT_NAME(tmp_import_name_from_233, const_str_plain_EitbIE);
        }

        Py_DECREF(tmp_import_name_from_233);
        if (tmp_assign_source_279 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 311;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EitbIE, tmp_assign_source_279);
    }
    {
        PyObject *tmp_assign_source_280;
        PyObject *tmp_name_name_164;
        PyObject *tmp_globals_name_164;
        PyObject *tmp_locals_name_164;
        PyObject *tmp_fromlist_name_164;
        PyObject *tmp_level_name_164;
        tmp_name_name_164 = const_str_plain_ellentube;
        tmp_globals_name_164 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_164 = Py_None;
        tmp_fromlist_name_164 = const_tuple_0f4d5730c34d828ed4052fbe8bd040b8_tuple;
        tmp_level_name_164 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 312;
        tmp_assign_source_280 = IMPORT_MODULE5(tmp_name_name_164, tmp_globals_name_164, tmp_locals_name_164, tmp_fromlist_name_164, tmp_level_name_164);
        if (tmp_assign_source_280 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 312;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_44__module == NULL);
        tmp_import_from_44__module = tmp_assign_source_280;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_281;
        PyObject *tmp_import_name_from_234;
        CHECK_OBJECT(tmp_import_from_44__module);
        tmp_import_name_from_234 = tmp_import_from_44__module;
        if (PyModule_Check(tmp_import_name_from_234)) {
           tmp_assign_source_281 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_234,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EllenTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_281 = IMPORT_NAME(tmp_import_name_from_234, const_str_plain_EllenTubeIE);
        }

        if (tmp_assign_source_281 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 312;

            goto try_except_handler_44;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EllenTubeIE, tmp_assign_source_281);
    }
    {
        PyObject *tmp_assign_source_282;
        PyObject *tmp_import_name_from_235;
        CHECK_OBJECT(tmp_import_from_44__module);
        tmp_import_name_from_235 = tmp_import_from_44__module;
        if (PyModule_Check(tmp_import_name_from_235)) {
           tmp_assign_source_282 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_235,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EllenTubeVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_282 = IMPORT_NAME(tmp_import_name_from_235, const_str_plain_EllenTubeVideoIE);
        }

        if (tmp_assign_source_282 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 312;

            goto try_except_handler_44;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EllenTubeVideoIE, tmp_assign_source_282);
    }
    {
        PyObject *tmp_assign_source_283;
        PyObject *tmp_import_name_from_236;
        CHECK_OBJECT(tmp_import_from_44__module);
        tmp_import_name_from_236 = tmp_import_from_44__module;
        if (PyModule_Check(tmp_import_name_from_236)) {
           tmp_assign_source_283 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_236,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EllenTubePlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_283 = IMPORT_NAME(tmp_import_name_from_236, const_str_plain_EllenTubePlaylistIE);
        }

        if (tmp_assign_source_283 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 312;

            goto try_except_handler_44;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EllenTubePlaylistIE, tmp_assign_source_283);
    }
    goto try_end_44;
    // Exception handler code:
    try_except_handler_44:;
    exception_keeper_type_44 = exception_type;
    exception_keeper_value_44 = exception_value;
    exception_keeper_tb_44 = exception_tb;
    exception_keeper_lineno_44 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_44__module);
    Py_DECREF(tmp_import_from_44__module);
    tmp_import_from_44__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_44;
    exception_value = exception_keeper_value_44;
    exception_tb = exception_keeper_tb_44;
    exception_lineno = exception_keeper_lineno_44;

    goto frame_exception_exit_1;
    // End of try:
    try_end_44:;
    CHECK_OBJECT(tmp_import_from_44__module);
    Py_DECREF(tmp_import_from_44__module);
    tmp_import_from_44__module = NULL;

    {
        PyObject *tmp_assign_source_284;
        PyObject *tmp_import_name_from_237;
        PyObject *tmp_name_name_165;
        PyObject *tmp_globals_name_165;
        PyObject *tmp_locals_name_165;
        PyObject *tmp_fromlist_name_165;
        PyObject *tmp_level_name_165;
        tmp_name_name_165 = const_str_plain_elpais;
        tmp_globals_name_165 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_165 = Py_None;
        tmp_fromlist_name_165 = const_tuple_str_plain_ElPaisIE_tuple;
        tmp_level_name_165 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 317;
        tmp_import_name_from_237 = IMPORT_MODULE5(tmp_name_name_165, tmp_globals_name_165, tmp_locals_name_165, tmp_fromlist_name_165, tmp_level_name_165);
        if (tmp_import_name_from_237 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 317;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_237)) {
           tmp_assign_source_284 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_237,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ElPaisIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_284 = IMPORT_NAME(tmp_import_name_from_237, const_str_plain_ElPaisIE);
        }

        Py_DECREF(tmp_import_name_from_237);
        if (tmp_assign_source_284 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 317;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ElPaisIE, tmp_assign_source_284);
    }
    {
        PyObject *tmp_assign_source_285;
        PyObject *tmp_import_name_from_238;
        PyObject *tmp_name_name_166;
        PyObject *tmp_globals_name_166;
        PyObject *tmp_locals_name_166;
        PyObject *tmp_fromlist_name_166;
        PyObject *tmp_level_name_166;
        tmp_name_name_166 = const_str_plain_embedly;
        tmp_globals_name_166 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_166 = Py_None;
        tmp_fromlist_name_166 = const_tuple_str_plain_EmbedlyIE_tuple;
        tmp_level_name_166 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 318;
        tmp_import_name_from_238 = IMPORT_MODULE5(tmp_name_name_166, tmp_globals_name_166, tmp_locals_name_166, tmp_fromlist_name_166, tmp_level_name_166);
        if (tmp_import_name_from_238 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 318;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_238)) {
           tmp_assign_source_285 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_238,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EmbedlyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_285 = IMPORT_NAME(tmp_import_name_from_238, const_str_plain_EmbedlyIE);
        }

        Py_DECREF(tmp_import_name_from_238);
        if (tmp_assign_source_285 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 318;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EmbedlyIE, tmp_assign_source_285);
    }
    {
        PyObject *tmp_assign_source_286;
        PyObject *tmp_import_name_from_239;
        PyObject *tmp_name_name_167;
        PyObject *tmp_globals_name_167;
        PyObject *tmp_locals_name_167;
        PyObject *tmp_fromlist_name_167;
        PyObject *tmp_level_name_167;
        tmp_name_name_167 = const_str_plain_engadget;
        tmp_globals_name_167 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_167 = Py_None;
        tmp_fromlist_name_167 = const_tuple_str_plain_EngadgetIE_tuple;
        tmp_level_name_167 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 319;
        tmp_import_name_from_239 = IMPORT_MODULE5(tmp_name_name_167, tmp_globals_name_167, tmp_locals_name_167, tmp_fromlist_name_167, tmp_level_name_167);
        if (tmp_import_name_from_239 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 319;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_239)) {
           tmp_assign_source_286 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_239,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EngadgetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_286 = IMPORT_NAME(tmp_import_name_from_239, const_str_plain_EngadgetIE);
        }

        Py_DECREF(tmp_import_name_from_239);
        if (tmp_assign_source_286 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 319;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EngadgetIE, tmp_assign_source_286);
    }
    {
        PyObject *tmp_assign_source_287;
        PyObject *tmp_import_name_from_240;
        PyObject *tmp_name_name_168;
        PyObject *tmp_globals_name_168;
        PyObject *tmp_locals_name_168;
        PyObject *tmp_fromlist_name_168;
        PyObject *tmp_level_name_168;
        tmp_name_name_168 = const_str_plain_eporner;
        tmp_globals_name_168 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_168 = Py_None;
        tmp_fromlist_name_168 = const_tuple_str_plain_EpornerIE_tuple;
        tmp_level_name_168 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 320;
        tmp_import_name_from_240 = IMPORT_MODULE5(tmp_name_name_168, tmp_globals_name_168, tmp_locals_name_168, tmp_fromlist_name_168, tmp_level_name_168);
        if (tmp_import_name_from_240 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 320;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_240)) {
           tmp_assign_source_287 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_240,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EpornerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_287 = IMPORT_NAME(tmp_import_name_from_240, const_str_plain_EpornerIE);
        }

        Py_DECREF(tmp_import_name_from_240);
        if (tmp_assign_source_287 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 320;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EpornerIE, tmp_assign_source_287);
    }
    {
        PyObject *tmp_assign_source_288;
        PyObject *tmp_import_name_from_241;
        PyObject *tmp_name_name_169;
        PyObject *tmp_globals_name_169;
        PyObject *tmp_locals_name_169;
        PyObject *tmp_fromlist_name_169;
        PyObject *tmp_level_name_169;
        tmp_name_name_169 = const_str_plain_eroprofile;
        tmp_globals_name_169 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_169 = Py_None;
        tmp_fromlist_name_169 = const_tuple_str_plain_EroProfileIE_tuple;
        tmp_level_name_169 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 321;
        tmp_import_name_from_241 = IMPORT_MODULE5(tmp_name_name_169, tmp_globals_name_169, tmp_locals_name_169, tmp_fromlist_name_169, tmp_level_name_169);
        if (tmp_import_name_from_241 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 321;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_241)) {
           tmp_assign_source_288 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_241,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EroProfileIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_288 = IMPORT_NAME(tmp_import_name_from_241, const_str_plain_EroProfileIE);
        }

        Py_DECREF(tmp_import_name_from_241);
        if (tmp_assign_source_288 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 321;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EroProfileIE, tmp_assign_source_288);
    }
    {
        PyObject *tmp_assign_source_289;
        PyObject *tmp_import_name_from_242;
        PyObject *tmp_name_name_170;
        PyObject *tmp_globals_name_170;
        PyObject *tmp_locals_name_170;
        PyObject *tmp_fromlist_name_170;
        PyObject *tmp_level_name_170;
        tmp_name_name_170 = const_str_plain_escapist;
        tmp_globals_name_170 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_170 = Py_None;
        tmp_fromlist_name_170 = const_tuple_str_plain_EscapistIE_tuple;
        tmp_level_name_170 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 322;
        tmp_import_name_from_242 = IMPORT_MODULE5(tmp_name_name_170, tmp_globals_name_170, tmp_locals_name_170, tmp_fromlist_name_170, tmp_level_name_170);
        if (tmp_import_name_from_242 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 322;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_242)) {
           tmp_assign_source_289 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_242,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EscapistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_289 = IMPORT_NAME(tmp_import_name_from_242, const_str_plain_EscapistIE);
        }

        Py_DECREF(tmp_import_name_from_242);
        if (tmp_assign_source_289 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 322;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EscapistIE, tmp_assign_source_289);
    }
    {
        PyObject *tmp_assign_source_290;
        PyObject *tmp_name_name_171;
        PyObject *tmp_globals_name_171;
        PyObject *tmp_locals_name_171;
        PyObject *tmp_fromlist_name_171;
        PyObject *tmp_level_name_171;
        tmp_name_name_171 = const_str_plain_espn;
        tmp_globals_name_171 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_171 = Py_None;
        tmp_fromlist_name_171 = const_tuple_96868e867f6d3cc8b1d3f48f3d2d2de8_tuple;
        tmp_level_name_171 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 323;
        tmp_assign_source_290 = IMPORT_MODULE5(tmp_name_name_171, tmp_globals_name_171, tmp_locals_name_171, tmp_fromlist_name_171, tmp_level_name_171);
        if (tmp_assign_source_290 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_45__module == NULL);
        tmp_import_from_45__module = tmp_assign_source_290;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_291;
        PyObject *tmp_import_name_from_243;
        CHECK_OBJECT(tmp_import_from_45__module);
        tmp_import_name_from_243 = tmp_import_from_45__module;
        if (PyModule_Check(tmp_import_name_from_243)) {
           tmp_assign_source_291 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_243,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ESPNIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_291 = IMPORT_NAME(tmp_import_name_from_243, const_str_plain_ESPNIE);
        }

        if (tmp_assign_source_291 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;

            goto try_except_handler_45;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ESPNIE, tmp_assign_source_291);
    }
    {
        PyObject *tmp_assign_source_292;
        PyObject *tmp_import_name_from_244;
        CHECK_OBJECT(tmp_import_from_45__module);
        tmp_import_name_from_244 = tmp_import_from_45__module;
        if (PyModule_Check(tmp_import_name_from_244)) {
           tmp_assign_source_292 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_244,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ESPNArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_292 = IMPORT_NAME(tmp_import_name_from_244, const_str_plain_ESPNArticleIE);
        }

        if (tmp_assign_source_292 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;

            goto try_except_handler_45;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ESPNArticleIE, tmp_assign_source_292);
    }
    {
        PyObject *tmp_assign_source_293;
        PyObject *tmp_import_name_from_245;
        CHECK_OBJECT(tmp_import_from_45__module);
        tmp_import_name_from_245 = tmp_import_from_45__module;
        if (PyModule_Check(tmp_import_name_from_245)) {
           tmp_assign_source_293 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_245,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FiveThirtyEightIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_293 = IMPORT_NAME(tmp_import_name_from_245, const_str_plain_FiveThirtyEightIE);
        }

        if (tmp_assign_source_293 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;

            goto try_except_handler_45;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FiveThirtyEightIE, tmp_assign_source_293);
    }
    goto try_end_45;
    // Exception handler code:
    try_except_handler_45:;
    exception_keeper_type_45 = exception_type;
    exception_keeper_value_45 = exception_value;
    exception_keeper_tb_45 = exception_tb;
    exception_keeper_lineno_45 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_45__module);
    Py_DECREF(tmp_import_from_45__module);
    tmp_import_from_45__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_45;
    exception_value = exception_keeper_value_45;
    exception_tb = exception_keeper_tb_45;
    exception_lineno = exception_keeper_lineno_45;

    goto frame_exception_exit_1;
    // End of try:
    try_end_45:;
    CHECK_OBJECT(tmp_import_from_45__module);
    Py_DECREF(tmp_import_from_45__module);
    tmp_import_from_45__module = NULL;

    {
        PyObject *tmp_assign_source_294;
        PyObject *tmp_import_name_from_246;
        PyObject *tmp_name_name_172;
        PyObject *tmp_globals_name_172;
        PyObject *tmp_locals_name_172;
        PyObject *tmp_fromlist_name_172;
        PyObject *tmp_level_name_172;
        tmp_name_name_172 = const_str_plain_esri;
        tmp_globals_name_172 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_172 = Py_None;
        tmp_fromlist_name_172 = const_tuple_str_plain_EsriVideoIE_tuple;
        tmp_level_name_172 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 328;
        tmp_import_name_from_246 = IMPORT_MODULE5(tmp_name_name_172, tmp_globals_name_172, tmp_locals_name_172, tmp_fromlist_name_172, tmp_level_name_172);
        if (tmp_import_name_from_246 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 328;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_246)) {
           tmp_assign_source_294 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_246,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EsriVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_294 = IMPORT_NAME(tmp_import_name_from_246, const_str_plain_EsriVideoIE);
        }

        Py_DECREF(tmp_import_name_from_246);
        if (tmp_assign_source_294 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 328;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EsriVideoIE, tmp_assign_source_294);
    }
    {
        PyObject *tmp_assign_source_295;
        PyObject *tmp_import_name_from_247;
        PyObject *tmp_name_name_173;
        PyObject *tmp_globals_name_173;
        PyObject *tmp_locals_name_173;
        PyObject *tmp_fromlist_name_173;
        PyObject *tmp_level_name_173;
        tmp_name_name_173 = const_str_plain_europa;
        tmp_globals_name_173 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_173 = Py_None;
        tmp_fromlist_name_173 = const_tuple_str_plain_EuropaIE_tuple;
        tmp_level_name_173 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 329;
        tmp_import_name_from_247 = IMPORT_MODULE5(tmp_name_name_173, tmp_globals_name_173, tmp_locals_name_173, tmp_fromlist_name_173, tmp_level_name_173);
        if (tmp_import_name_from_247 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 329;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_247)) {
           tmp_assign_source_295 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_247,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EuropaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_295 = IMPORT_NAME(tmp_import_name_from_247, const_str_plain_EuropaIE);
        }

        Py_DECREF(tmp_import_name_from_247);
        if (tmp_assign_source_295 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 329;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EuropaIE, tmp_assign_source_295);
    }
    {
        PyObject *tmp_assign_source_296;
        PyObject *tmp_import_name_from_248;
        PyObject *tmp_name_name_174;
        PyObject *tmp_globals_name_174;
        PyObject *tmp_locals_name_174;
        PyObject *tmp_fromlist_name_174;
        PyObject *tmp_level_name_174;
        tmp_name_name_174 = const_str_plain_everyonesmixtape;
        tmp_globals_name_174 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_174 = Py_None;
        tmp_fromlist_name_174 = const_tuple_str_plain_EveryonesMixtapeIE_tuple;
        tmp_level_name_174 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 330;
        tmp_import_name_from_248 = IMPORT_MODULE5(tmp_name_name_174, tmp_globals_name_174, tmp_locals_name_174, tmp_fromlist_name_174, tmp_level_name_174);
        if (tmp_import_name_from_248 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 330;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_248)) {
           tmp_assign_source_296 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_248,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EveryonesMixtapeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_296 = IMPORT_NAME(tmp_import_name_from_248, const_str_plain_EveryonesMixtapeIE);
        }

        Py_DECREF(tmp_import_name_from_248);
        if (tmp_assign_source_296 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 330;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EveryonesMixtapeIE, tmp_assign_source_296);
    }
    {
        PyObject *tmp_assign_source_297;
        PyObject *tmp_import_name_from_249;
        PyObject *tmp_name_name_175;
        PyObject *tmp_globals_name_175;
        PyObject *tmp_locals_name_175;
        PyObject *tmp_fromlist_name_175;
        PyObject *tmp_level_name_175;
        tmp_name_name_175 = const_str_plain_expotv;
        tmp_globals_name_175 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_175 = Py_None;
        tmp_fromlist_name_175 = const_tuple_str_plain_ExpoTVIE_tuple;
        tmp_level_name_175 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 331;
        tmp_import_name_from_249 = IMPORT_MODULE5(tmp_name_name_175, tmp_globals_name_175, tmp_locals_name_175, tmp_fromlist_name_175, tmp_level_name_175);
        if (tmp_import_name_from_249 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 331;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_249)) {
           tmp_assign_source_297 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_249,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ExpoTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_297 = IMPORT_NAME(tmp_import_name_from_249, const_str_plain_ExpoTVIE);
        }

        Py_DECREF(tmp_import_name_from_249);
        if (tmp_assign_source_297 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 331;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ExpoTVIE, tmp_assign_source_297);
    }
    {
        PyObject *tmp_assign_source_298;
        PyObject *tmp_import_name_from_250;
        PyObject *tmp_name_name_176;
        PyObject *tmp_globals_name_176;
        PyObject *tmp_locals_name_176;
        PyObject *tmp_fromlist_name_176;
        PyObject *tmp_level_name_176;
        tmp_name_name_176 = const_str_plain_expressen;
        tmp_globals_name_176 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_176 = Py_None;
        tmp_fromlist_name_176 = const_tuple_str_plain_ExpressenIE_tuple;
        tmp_level_name_176 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 332;
        tmp_import_name_from_250 = IMPORT_MODULE5(tmp_name_name_176, tmp_globals_name_176, tmp_locals_name_176, tmp_fromlist_name_176, tmp_level_name_176);
        if (tmp_import_name_from_250 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 332;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_250)) {
           tmp_assign_source_298 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_250,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ExpressenIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_298 = IMPORT_NAME(tmp_import_name_from_250, const_str_plain_ExpressenIE);
        }

        Py_DECREF(tmp_import_name_from_250);
        if (tmp_assign_source_298 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 332;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ExpressenIE, tmp_assign_source_298);
    }
    {
        PyObject *tmp_assign_source_299;
        PyObject *tmp_import_name_from_251;
        PyObject *tmp_name_name_177;
        PyObject *tmp_globals_name_177;
        PyObject *tmp_locals_name_177;
        PyObject *tmp_fromlist_name_177;
        PyObject *tmp_level_name_177;
        tmp_name_name_177 = const_str_plain_extremetube;
        tmp_globals_name_177 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_177 = Py_None;
        tmp_fromlist_name_177 = const_tuple_str_plain_ExtremeTubeIE_tuple;
        tmp_level_name_177 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 333;
        tmp_import_name_from_251 = IMPORT_MODULE5(tmp_name_name_177, tmp_globals_name_177, tmp_locals_name_177, tmp_fromlist_name_177, tmp_level_name_177);
        if (tmp_import_name_from_251 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 333;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_251)) {
           tmp_assign_source_299 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_251,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ExtremeTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_299 = IMPORT_NAME(tmp_import_name_from_251, const_str_plain_ExtremeTubeIE);
        }

        Py_DECREF(tmp_import_name_from_251);
        if (tmp_assign_source_299 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 333;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ExtremeTubeIE, tmp_assign_source_299);
    }
    {
        PyObject *tmp_assign_source_300;
        PyObject *tmp_import_name_from_252;
        PyObject *tmp_name_name_178;
        PyObject *tmp_globals_name_178;
        PyObject *tmp_locals_name_178;
        PyObject *tmp_fromlist_name_178;
        PyObject *tmp_level_name_178;
        tmp_name_name_178 = const_str_plain_eyedotv;
        tmp_globals_name_178 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_178 = Py_None;
        tmp_fromlist_name_178 = const_tuple_str_plain_EyedoTVIE_tuple;
        tmp_level_name_178 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 334;
        tmp_import_name_from_252 = IMPORT_MODULE5(tmp_name_name_178, tmp_globals_name_178, tmp_locals_name_178, tmp_fromlist_name_178, tmp_level_name_178);
        if (tmp_import_name_from_252 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 334;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_252)) {
           tmp_assign_source_300 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_252,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EyedoTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_300 = IMPORT_NAME(tmp_import_name_from_252, const_str_plain_EyedoTVIE);
        }

        Py_DECREF(tmp_import_name_from_252);
        if (tmp_assign_source_300 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 334;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EyedoTVIE, tmp_assign_source_300);
    }
    {
        PyObject *tmp_assign_source_301;
        PyObject *tmp_name_name_179;
        PyObject *tmp_globals_name_179;
        PyObject *tmp_locals_name_179;
        PyObject *tmp_fromlist_name_179;
        PyObject *tmp_level_name_179;
        tmp_name_name_179 = const_str_plain_facebook;
        tmp_globals_name_179 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_179 = Py_None;
        tmp_fromlist_name_179 = const_tuple_str_plain_FacebookIE_str_plain_FacebookPluginsVideoIE_tuple;
        tmp_level_name_179 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 335;
        tmp_assign_source_301 = IMPORT_MODULE5(tmp_name_name_179, tmp_globals_name_179, tmp_locals_name_179, tmp_fromlist_name_179, tmp_level_name_179);
        if (tmp_assign_source_301 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 335;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_46__module == NULL);
        tmp_import_from_46__module = tmp_assign_source_301;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_302;
        PyObject *tmp_import_name_from_253;
        CHECK_OBJECT(tmp_import_from_46__module);
        tmp_import_name_from_253 = tmp_import_from_46__module;
        if (PyModule_Check(tmp_import_name_from_253)) {
           tmp_assign_source_302 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_253,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FacebookIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_302 = IMPORT_NAME(tmp_import_name_from_253, const_str_plain_FacebookIE);
        }

        if (tmp_assign_source_302 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 335;

            goto try_except_handler_46;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FacebookIE, tmp_assign_source_302);
    }
    {
        PyObject *tmp_assign_source_303;
        PyObject *tmp_import_name_from_254;
        CHECK_OBJECT(tmp_import_from_46__module);
        tmp_import_name_from_254 = tmp_import_from_46__module;
        if (PyModule_Check(tmp_import_name_from_254)) {
           tmp_assign_source_303 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_254,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FacebookPluginsVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_303 = IMPORT_NAME(tmp_import_name_from_254, const_str_plain_FacebookPluginsVideoIE);
        }

        if (tmp_assign_source_303 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 335;

            goto try_except_handler_46;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FacebookPluginsVideoIE, tmp_assign_source_303);
    }
    goto try_end_46;
    // Exception handler code:
    try_except_handler_46:;
    exception_keeper_type_46 = exception_type;
    exception_keeper_value_46 = exception_value;
    exception_keeper_tb_46 = exception_tb;
    exception_keeper_lineno_46 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_46__module);
    Py_DECREF(tmp_import_from_46__module);
    tmp_import_from_46__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_46;
    exception_value = exception_keeper_value_46;
    exception_tb = exception_keeper_tb_46;
    exception_lineno = exception_keeper_lineno_46;

    goto frame_exception_exit_1;
    // End of try:
    try_end_46:;
    CHECK_OBJECT(tmp_import_from_46__module);
    Py_DECREF(tmp_import_from_46__module);
    tmp_import_from_46__module = NULL;

    {
        PyObject *tmp_assign_source_304;
        PyObject *tmp_import_name_from_255;
        PyObject *tmp_name_name_180;
        PyObject *tmp_globals_name_180;
        PyObject *tmp_locals_name_180;
        PyObject *tmp_fromlist_name_180;
        PyObject *tmp_level_name_180;
        tmp_name_name_180 = const_str_plain_faz;
        tmp_globals_name_180 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_180 = Py_None;
        tmp_fromlist_name_180 = const_tuple_str_plain_FazIE_tuple;
        tmp_level_name_180 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 339;
        tmp_import_name_from_255 = IMPORT_MODULE5(tmp_name_name_180, tmp_globals_name_180, tmp_locals_name_180, tmp_fromlist_name_180, tmp_level_name_180);
        if (tmp_import_name_from_255 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 339;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_255)) {
           tmp_assign_source_304 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_255,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FazIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_304 = IMPORT_NAME(tmp_import_name_from_255, const_str_plain_FazIE);
        }

        Py_DECREF(tmp_import_name_from_255);
        if (tmp_assign_source_304 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 339;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FazIE, tmp_assign_source_304);
    }
    {
        PyObject *tmp_assign_source_305;
        PyObject *tmp_name_name_181;
        PyObject *tmp_globals_name_181;
        PyObject *tmp_locals_name_181;
        PyObject *tmp_fromlist_name_181;
        PyObject *tmp_level_name_181;
        tmp_name_name_181 = const_str_plain_fc2;
        tmp_globals_name_181 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_181 = Py_None;
        tmp_fromlist_name_181 = const_tuple_str_plain_FC2IE_str_plain_FC2EmbedIE_tuple;
        tmp_level_name_181 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 340;
        tmp_assign_source_305 = IMPORT_MODULE5(tmp_name_name_181, tmp_globals_name_181, tmp_locals_name_181, tmp_fromlist_name_181, tmp_level_name_181);
        if (tmp_assign_source_305 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 340;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_47__module == NULL);
        tmp_import_from_47__module = tmp_assign_source_305;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_306;
        PyObject *tmp_import_name_from_256;
        CHECK_OBJECT(tmp_import_from_47__module);
        tmp_import_name_from_256 = tmp_import_from_47__module;
        if (PyModule_Check(tmp_import_name_from_256)) {
           tmp_assign_source_306 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_256,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FC2IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_306 = IMPORT_NAME(tmp_import_name_from_256, const_str_plain_FC2IE);
        }

        if (tmp_assign_source_306 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 340;

            goto try_except_handler_47;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FC2IE, tmp_assign_source_306);
    }
    {
        PyObject *tmp_assign_source_307;
        PyObject *tmp_import_name_from_257;
        CHECK_OBJECT(tmp_import_from_47__module);
        tmp_import_name_from_257 = tmp_import_from_47__module;
        if (PyModule_Check(tmp_import_name_from_257)) {
           tmp_assign_source_307 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_257,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FC2EmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_307 = IMPORT_NAME(tmp_import_name_from_257, const_str_plain_FC2EmbedIE);
        }

        if (tmp_assign_source_307 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 340;

            goto try_except_handler_47;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FC2EmbedIE, tmp_assign_source_307);
    }
    goto try_end_47;
    // Exception handler code:
    try_except_handler_47:;
    exception_keeper_type_47 = exception_type;
    exception_keeper_value_47 = exception_value;
    exception_keeper_tb_47 = exception_tb;
    exception_keeper_lineno_47 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_47__module);
    Py_DECREF(tmp_import_from_47__module);
    tmp_import_from_47__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_47;
    exception_value = exception_keeper_value_47;
    exception_tb = exception_keeper_tb_47;
    exception_lineno = exception_keeper_lineno_47;

    goto frame_exception_exit_1;
    // End of try:
    try_end_47:;
    CHECK_OBJECT(tmp_import_from_47__module);
    Py_DECREF(tmp_import_from_47__module);
    tmp_import_from_47__module = NULL;

    {
        PyObject *tmp_assign_source_308;
        PyObject *tmp_import_name_from_258;
        PyObject *tmp_name_name_182;
        PyObject *tmp_globals_name_182;
        PyObject *tmp_locals_name_182;
        PyObject *tmp_fromlist_name_182;
        PyObject *tmp_level_name_182;
        tmp_name_name_182 = const_str_plain_fczenit;
        tmp_globals_name_182 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_182 = Py_None;
        tmp_fromlist_name_182 = const_tuple_str_plain_FczenitIE_tuple;
        tmp_level_name_182 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 344;
        tmp_import_name_from_258 = IMPORT_MODULE5(tmp_name_name_182, tmp_globals_name_182, tmp_locals_name_182, tmp_fromlist_name_182, tmp_level_name_182);
        if (tmp_import_name_from_258 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 344;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_258)) {
           tmp_assign_source_308 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_258,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FczenitIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_308 = IMPORT_NAME(tmp_import_name_from_258, const_str_plain_FczenitIE);
        }

        Py_DECREF(tmp_import_name_from_258);
        if (tmp_assign_source_308 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 344;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FczenitIE, tmp_assign_source_308);
    }
    {
        PyObject *tmp_assign_source_309;
        PyObject *tmp_name_name_183;
        PyObject *tmp_globals_name_183;
        PyObject *tmp_locals_name_183;
        PyObject *tmp_fromlist_name_183;
        PyObject *tmp_level_name_183;
        tmp_name_name_183 = const_str_plain_filmon;
        tmp_globals_name_183 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_183 = Py_None;
        tmp_fromlist_name_183 = const_tuple_str_plain_FilmOnIE_str_plain_FilmOnChannelIE_tuple;
        tmp_level_name_183 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 345;
        tmp_assign_source_309 = IMPORT_MODULE5(tmp_name_name_183, tmp_globals_name_183, tmp_locals_name_183, tmp_fromlist_name_183, tmp_level_name_183);
        if (tmp_assign_source_309 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 345;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_48__module == NULL);
        tmp_import_from_48__module = tmp_assign_source_309;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_310;
        PyObject *tmp_import_name_from_259;
        CHECK_OBJECT(tmp_import_from_48__module);
        tmp_import_name_from_259 = tmp_import_from_48__module;
        if (PyModule_Check(tmp_import_name_from_259)) {
           tmp_assign_source_310 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_259,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FilmOnIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_310 = IMPORT_NAME(tmp_import_name_from_259, const_str_plain_FilmOnIE);
        }

        if (tmp_assign_source_310 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 345;

            goto try_except_handler_48;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FilmOnIE, tmp_assign_source_310);
    }
    {
        PyObject *tmp_assign_source_311;
        PyObject *tmp_import_name_from_260;
        CHECK_OBJECT(tmp_import_from_48__module);
        tmp_import_name_from_260 = tmp_import_from_48__module;
        if (PyModule_Check(tmp_import_name_from_260)) {
           tmp_assign_source_311 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_260,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FilmOnChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_311 = IMPORT_NAME(tmp_import_name_from_260, const_str_plain_FilmOnChannelIE);
        }

        if (tmp_assign_source_311 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 345;

            goto try_except_handler_48;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FilmOnChannelIE, tmp_assign_source_311);
    }
    goto try_end_48;
    // Exception handler code:
    try_except_handler_48:;
    exception_keeper_type_48 = exception_type;
    exception_keeper_value_48 = exception_value;
    exception_keeper_tb_48 = exception_tb;
    exception_keeper_lineno_48 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_48__module);
    Py_DECREF(tmp_import_from_48__module);
    tmp_import_from_48__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_48;
    exception_value = exception_keeper_value_48;
    exception_tb = exception_keeper_tb_48;
    exception_lineno = exception_keeper_lineno_48;

    goto frame_exception_exit_1;
    // End of try:
    try_end_48:;
    CHECK_OBJECT(tmp_import_from_48__module);
    Py_DECREF(tmp_import_from_48__module);
    tmp_import_from_48__module = NULL;

    {
        PyObject *tmp_assign_source_312;
        PyObject *tmp_import_name_from_261;
        PyObject *tmp_name_name_184;
        PyObject *tmp_globals_name_184;
        PyObject *tmp_locals_name_184;
        PyObject *tmp_fromlist_name_184;
        PyObject *tmp_level_name_184;
        tmp_name_name_184 = const_str_plain_filmweb;
        tmp_globals_name_184 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_184 = Py_None;
        tmp_fromlist_name_184 = const_tuple_str_plain_FilmwebIE_tuple;
        tmp_level_name_184 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 349;
        tmp_import_name_from_261 = IMPORT_MODULE5(tmp_name_name_184, tmp_globals_name_184, tmp_locals_name_184, tmp_fromlist_name_184, tmp_level_name_184);
        if (tmp_import_name_from_261 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 349;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_261)) {
           tmp_assign_source_312 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_261,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FilmwebIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_312 = IMPORT_NAME(tmp_import_name_from_261, const_str_plain_FilmwebIE);
        }

        Py_DECREF(tmp_import_name_from_261);
        if (tmp_assign_source_312 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 349;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FilmwebIE, tmp_assign_source_312);
    }
    {
        PyObject *tmp_assign_source_313;
        PyObject *tmp_import_name_from_262;
        PyObject *tmp_name_name_185;
        PyObject *tmp_globals_name_185;
        PyObject *tmp_locals_name_185;
        PyObject *tmp_fromlist_name_185;
        PyObject *tmp_level_name_185;
        tmp_name_name_185 = const_str_plain_firsttv;
        tmp_globals_name_185 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_185 = Py_None;
        tmp_fromlist_name_185 = const_tuple_str_plain_FirstTVIE_tuple;
        tmp_level_name_185 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 350;
        tmp_import_name_from_262 = IMPORT_MODULE5(tmp_name_name_185, tmp_globals_name_185, tmp_locals_name_185, tmp_fromlist_name_185, tmp_level_name_185);
        if (tmp_import_name_from_262 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 350;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_262)) {
           tmp_assign_source_313 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_262,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FirstTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_313 = IMPORT_NAME(tmp_import_name_from_262, const_str_plain_FirstTVIE);
        }

        Py_DECREF(tmp_import_name_from_262);
        if (tmp_assign_source_313 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 350;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FirstTVIE, tmp_assign_source_313);
    }
    {
        PyObject *tmp_assign_source_314;
        PyObject *tmp_import_name_from_263;
        PyObject *tmp_name_name_186;
        PyObject *tmp_globals_name_186;
        PyObject *tmp_locals_name_186;
        PyObject *tmp_fromlist_name_186;
        PyObject *tmp_level_name_186;
        tmp_name_name_186 = const_str_plain_fivemin;
        tmp_globals_name_186 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_186 = Py_None;
        tmp_fromlist_name_186 = const_tuple_str_plain_FiveMinIE_tuple;
        tmp_level_name_186 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 351;
        tmp_import_name_from_263 = IMPORT_MODULE5(tmp_name_name_186, tmp_globals_name_186, tmp_locals_name_186, tmp_fromlist_name_186, tmp_level_name_186);
        if (tmp_import_name_from_263 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 351;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_263)) {
           tmp_assign_source_314 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_263,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FiveMinIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_314 = IMPORT_NAME(tmp_import_name_from_263, const_str_plain_FiveMinIE);
        }

        Py_DECREF(tmp_import_name_from_263);
        if (tmp_assign_source_314 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 351;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FiveMinIE, tmp_assign_source_314);
    }
    {
        PyObject *tmp_assign_source_315;
        PyObject *tmp_import_name_from_264;
        PyObject *tmp_name_name_187;
        PyObject *tmp_globals_name_187;
        PyObject *tmp_locals_name_187;
        PyObject *tmp_fromlist_name_187;
        PyObject *tmp_level_name_187;
        tmp_name_name_187 = const_str_plain_fivetv;
        tmp_globals_name_187 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_187 = Py_None;
        tmp_fromlist_name_187 = const_tuple_str_plain_FiveTVIE_tuple;
        tmp_level_name_187 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 352;
        tmp_import_name_from_264 = IMPORT_MODULE5(tmp_name_name_187, tmp_globals_name_187, tmp_locals_name_187, tmp_fromlist_name_187, tmp_level_name_187);
        if (tmp_import_name_from_264 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 352;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_264)) {
           tmp_assign_source_315 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_264,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FiveTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_315 = IMPORT_NAME(tmp_import_name_from_264, const_str_plain_FiveTVIE);
        }

        Py_DECREF(tmp_import_name_from_264);
        if (tmp_assign_source_315 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 352;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FiveTVIE, tmp_assign_source_315);
    }
    {
        PyObject *tmp_assign_source_316;
        PyObject *tmp_import_name_from_265;
        PyObject *tmp_name_name_188;
        PyObject *tmp_globals_name_188;
        PyObject *tmp_locals_name_188;
        PyObject *tmp_fromlist_name_188;
        PyObject *tmp_level_name_188;
        tmp_name_name_188 = const_str_plain_flickr;
        tmp_globals_name_188 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_188 = Py_None;
        tmp_fromlist_name_188 = const_tuple_str_plain_FlickrIE_tuple;
        tmp_level_name_188 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 353;
        tmp_import_name_from_265 = IMPORT_MODULE5(tmp_name_name_188, tmp_globals_name_188, tmp_locals_name_188, tmp_fromlist_name_188, tmp_level_name_188);
        if (tmp_import_name_from_265 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 353;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_265)) {
           tmp_assign_source_316 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_265,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FlickrIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_316 = IMPORT_NAME(tmp_import_name_from_265, const_str_plain_FlickrIE);
        }

        Py_DECREF(tmp_import_name_from_265);
        if (tmp_assign_source_316 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 353;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FlickrIE, tmp_assign_source_316);
    }
    {
        PyObject *tmp_assign_source_317;
        PyObject *tmp_import_name_from_266;
        PyObject *tmp_name_name_189;
        PyObject *tmp_globals_name_189;
        PyObject *tmp_locals_name_189;
        PyObject *tmp_fromlist_name_189;
        PyObject *tmp_level_name_189;
        tmp_name_name_189 = const_str_plain_folketinget;
        tmp_globals_name_189 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_189 = Py_None;
        tmp_fromlist_name_189 = const_tuple_str_plain_FolketingetIE_tuple;
        tmp_level_name_189 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 354;
        tmp_import_name_from_266 = IMPORT_MODULE5(tmp_name_name_189, tmp_globals_name_189, tmp_locals_name_189, tmp_fromlist_name_189, tmp_level_name_189);
        if (tmp_import_name_from_266 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 354;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_266)) {
           tmp_assign_source_317 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_266,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FolketingetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_317 = IMPORT_NAME(tmp_import_name_from_266, const_str_plain_FolketingetIE);
        }

        Py_DECREF(tmp_import_name_from_266);
        if (tmp_assign_source_317 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 354;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FolketingetIE, tmp_assign_source_317);
    }
    {
        PyObject *tmp_assign_source_318;
        PyObject *tmp_import_name_from_267;
        PyObject *tmp_name_name_190;
        PyObject *tmp_globals_name_190;
        PyObject *tmp_locals_name_190;
        PyObject *tmp_fromlist_name_190;
        PyObject *tmp_level_name_190;
        tmp_name_name_190 = const_str_plain_footyroom;
        tmp_globals_name_190 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_190 = Py_None;
        tmp_fromlist_name_190 = const_tuple_str_plain_FootyRoomIE_tuple;
        tmp_level_name_190 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 355;
        tmp_import_name_from_267 = IMPORT_MODULE5(tmp_name_name_190, tmp_globals_name_190, tmp_locals_name_190, tmp_fromlist_name_190, tmp_level_name_190);
        if (tmp_import_name_from_267 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 355;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_267)) {
           tmp_assign_source_318 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_267,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FootyRoomIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_318 = IMPORT_NAME(tmp_import_name_from_267, const_str_plain_FootyRoomIE);
        }

        Py_DECREF(tmp_import_name_from_267);
        if (tmp_assign_source_318 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 355;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FootyRoomIE, tmp_assign_source_318);
    }
    {
        PyObject *tmp_assign_source_319;
        PyObject *tmp_import_name_from_268;
        PyObject *tmp_name_name_191;
        PyObject *tmp_globals_name_191;
        PyObject *tmp_locals_name_191;
        PyObject *tmp_fromlist_name_191;
        PyObject *tmp_level_name_191;
        tmp_name_name_191 = const_str_plain_formula1;
        tmp_globals_name_191 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_191 = Py_None;
        tmp_fromlist_name_191 = const_tuple_str_plain_Formula1IE_tuple;
        tmp_level_name_191 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 356;
        tmp_import_name_from_268 = IMPORT_MODULE5(tmp_name_name_191, tmp_globals_name_191, tmp_locals_name_191, tmp_fromlist_name_191, tmp_level_name_191);
        if (tmp_import_name_from_268 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 356;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_268)) {
           tmp_assign_source_319 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_268,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Formula1IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_319 = IMPORT_NAME(tmp_import_name_from_268, const_str_plain_Formula1IE);
        }

        Py_DECREF(tmp_import_name_from_268);
        if (tmp_assign_source_319 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 356;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Formula1IE, tmp_assign_source_319);
    }
    {
        PyObject *tmp_assign_source_320;
        PyObject *tmp_name_name_192;
        PyObject *tmp_globals_name_192;
        PyObject *tmp_locals_name_192;
        PyObject *tmp_fromlist_name_192;
        PyObject *tmp_level_name_192;
        tmp_name_name_192 = const_str_plain_fourtube;
        tmp_globals_name_192 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_192 = Py_None;
        tmp_fromlist_name_192 = const_tuple_68575a65b37001279b95f523a7db12ca_tuple;
        tmp_level_name_192 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 357;
        tmp_assign_source_320 = IMPORT_MODULE5(tmp_name_name_192, tmp_globals_name_192, tmp_locals_name_192, tmp_fromlist_name_192, tmp_level_name_192);
        if (tmp_assign_source_320 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 357;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_49__module == NULL);
        tmp_import_from_49__module = tmp_assign_source_320;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_321;
        PyObject *tmp_import_name_from_269;
        CHECK_OBJECT(tmp_import_from_49__module);
        tmp_import_name_from_269 = tmp_import_from_49__module;
        if (PyModule_Check(tmp_import_name_from_269)) {
           tmp_assign_source_321 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_269,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FourTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_321 = IMPORT_NAME(tmp_import_name_from_269, const_str_plain_FourTubeIE);
        }

        if (tmp_assign_source_321 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 357;

            goto try_except_handler_49;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FourTubeIE, tmp_assign_source_321);
    }
    {
        PyObject *tmp_assign_source_322;
        PyObject *tmp_import_name_from_270;
        CHECK_OBJECT(tmp_import_from_49__module);
        tmp_import_name_from_270 = tmp_import_from_49__module;
        if (PyModule_Check(tmp_import_name_from_270)) {
           tmp_assign_source_322 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_270,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PornTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_322 = IMPORT_NAME(tmp_import_name_from_270, const_str_plain_PornTubeIE);
        }

        if (tmp_assign_source_322 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 357;

            goto try_except_handler_49;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PornTubeIE, tmp_assign_source_322);
    }
    {
        PyObject *tmp_assign_source_323;
        PyObject *tmp_import_name_from_271;
        CHECK_OBJECT(tmp_import_from_49__module);
        tmp_import_name_from_271 = tmp_import_from_49__module;
        if (PyModule_Check(tmp_import_name_from_271)) {
           tmp_assign_source_323 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_271,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PornerBrosIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_323 = IMPORT_NAME(tmp_import_name_from_271, const_str_plain_PornerBrosIE);
        }

        if (tmp_assign_source_323 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 357;

            goto try_except_handler_49;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PornerBrosIE, tmp_assign_source_323);
    }
    {
        PyObject *tmp_assign_source_324;
        PyObject *tmp_import_name_from_272;
        CHECK_OBJECT(tmp_import_from_49__module);
        tmp_import_name_from_272 = tmp_import_from_49__module;
        if (PyModule_Check(tmp_import_name_from_272)) {
           tmp_assign_source_324 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_272,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FuxIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_324 = IMPORT_NAME(tmp_import_name_from_272, const_str_plain_FuxIE);
        }

        if (tmp_assign_source_324 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 357;

            goto try_except_handler_49;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FuxIE, tmp_assign_source_324);
    }
    goto try_end_49;
    // Exception handler code:
    try_except_handler_49:;
    exception_keeper_type_49 = exception_type;
    exception_keeper_value_49 = exception_value;
    exception_keeper_tb_49 = exception_tb;
    exception_keeper_lineno_49 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_49__module);
    Py_DECREF(tmp_import_from_49__module);
    tmp_import_from_49__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_49;
    exception_value = exception_keeper_value_49;
    exception_tb = exception_keeper_tb_49;
    exception_lineno = exception_keeper_lineno_49;

    goto frame_exception_exit_1;
    // End of try:
    try_end_49:;
    CHECK_OBJECT(tmp_import_from_49__module);
    Py_DECREF(tmp_import_from_49__module);
    tmp_import_from_49__module = NULL;

    {
        PyObject *tmp_assign_source_325;
        PyObject *tmp_import_name_from_273;
        PyObject *tmp_name_name_193;
        PyObject *tmp_globals_name_193;
        PyObject *tmp_locals_name_193;
        PyObject *tmp_fromlist_name_193;
        PyObject *tmp_level_name_193;
        tmp_name_name_193 = const_str_plain_fox;
        tmp_globals_name_193 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_193 = Py_None;
        tmp_fromlist_name_193 = const_tuple_str_plain_FOXIE_tuple;
        tmp_level_name_193 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 363;
        tmp_import_name_from_273 = IMPORT_MODULE5(tmp_name_name_193, tmp_globals_name_193, tmp_locals_name_193, tmp_fromlist_name_193, tmp_level_name_193);
        if (tmp_import_name_from_273 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 363;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_273)) {
           tmp_assign_source_325 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_273,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FOXIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_325 = IMPORT_NAME(tmp_import_name_from_273, const_str_plain_FOXIE);
        }

        Py_DECREF(tmp_import_name_from_273);
        if (tmp_assign_source_325 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 363;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FOXIE, tmp_assign_source_325);
    }
    {
        PyObject *tmp_assign_source_326;
        PyObject *tmp_name_name_194;
        PyObject *tmp_globals_name_194;
        PyObject *tmp_locals_name_194;
        PyObject *tmp_fromlist_name_194;
        PyObject *tmp_level_name_194;
        tmp_name_name_194 = const_str_plain_fox9;
        tmp_globals_name_194 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_194 = Py_None;
        tmp_fromlist_name_194 = const_tuple_str_plain_FOX9IE_str_plain_FOX9NewsIE_tuple;
        tmp_level_name_194 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 364;
        tmp_assign_source_326 = IMPORT_MODULE5(tmp_name_name_194, tmp_globals_name_194, tmp_locals_name_194, tmp_fromlist_name_194, tmp_level_name_194);
        if (tmp_assign_source_326 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 364;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_50__module == NULL);
        tmp_import_from_50__module = tmp_assign_source_326;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_327;
        PyObject *tmp_import_name_from_274;
        CHECK_OBJECT(tmp_import_from_50__module);
        tmp_import_name_from_274 = tmp_import_from_50__module;
        if (PyModule_Check(tmp_import_name_from_274)) {
           tmp_assign_source_327 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_274,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FOX9IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_327 = IMPORT_NAME(tmp_import_name_from_274, const_str_plain_FOX9IE);
        }

        if (tmp_assign_source_327 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 364;

            goto try_except_handler_50;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FOX9IE, tmp_assign_source_327);
    }
    {
        PyObject *tmp_assign_source_328;
        PyObject *tmp_import_name_from_275;
        CHECK_OBJECT(tmp_import_from_50__module);
        tmp_import_name_from_275 = tmp_import_from_50__module;
        if (PyModule_Check(tmp_import_name_from_275)) {
           tmp_assign_source_328 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_275,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FOX9NewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_328 = IMPORT_NAME(tmp_import_name_from_275, const_str_plain_FOX9NewsIE);
        }

        if (tmp_assign_source_328 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 364;

            goto try_except_handler_50;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FOX9NewsIE, tmp_assign_source_328);
    }
    goto try_end_50;
    // Exception handler code:
    try_except_handler_50:;
    exception_keeper_type_50 = exception_type;
    exception_keeper_value_50 = exception_value;
    exception_keeper_tb_50 = exception_tb;
    exception_keeper_lineno_50 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_50__module);
    Py_DECREF(tmp_import_from_50__module);
    tmp_import_from_50__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_50;
    exception_value = exception_keeper_value_50;
    exception_tb = exception_keeper_tb_50;
    exception_lineno = exception_keeper_lineno_50;

    goto frame_exception_exit_1;
    // End of try:
    try_end_50:;
    CHECK_OBJECT(tmp_import_from_50__module);
    Py_DECREF(tmp_import_from_50__module);
    tmp_import_from_50__module = NULL;

    {
        PyObject *tmp_assign_source_329;
        PyObject *tmp_import_name_from_276;
        PyObject *tmp_name_name_195;
        PyObject *tmp_globals_name_195;
        PyObject *tmp_locals_name_195;
        PyObject *tmp_fromlist_name_195;
        PyObject *tmp_level_name_195;
        tmp_name_name_195 = const_str_plain_foxgay;
        tmp_globals_name_195 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_195 = Py_None;
        tmp_fromlist_name_195 = const_tuple_str_plain_FoxgayIE_tuple;
        tmp_level_name_195 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 368;
        tmp_import_name_from_276 = IMPORT_MODULE5(tmp_name_name_195, tmp_globals_name_195, tmp_locals_name_195, tmp_fromlist_name_195, tmp_level_name_195);
        if (tmp_import_name_from_276 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 368;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_276)) {
           tmp_assign_source_329 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_276,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FoxgayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_329 = IMPORT_NAME(tmp_import_name_from_276, const_str_plain_FoxgayIE);
        }

        Py_DECREF(tmp_import_name_from_276);
        if (tmp_assign_source_329 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 368;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FoxgayIE, tmp_assign_source_329);
    }
    {
        PyObject *tmp_assign_source_330;
        PyObject *tmp_name_name_196;
        PyObject *tmp_globals_name_196;
        PyObject *tmp_locals_name_196;
        PyObject *tmp_fromlist_name_196;
        PyObject *tmp_level_name_196;
        tmp_name_name_196 = const_str_plain_foxnews;
        tmp_globals_name_196 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_196 = Py_None;
        tmp_fromlist_name_196 = const_tuple_str_plain_FoxNewsIE_str_plain_FoxNewsArticleIE_tuple;
        tmp_level_name_196 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 369;
        tmp_assign_source_330 = IMPORT_MODULE5(tmp_name_name_196, tmp_globals_name_196, tmp_locals_name_196, tmp_fromlist_name_196, tmp_level_name_196);
        if (tmp_assign_source_330 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 369;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_51__module == NULL);
        tmp_import_from_51__module = tmp_assign_source_330;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_331;
        PyObject *tmp_import_name_from_277;
        CHECK_OBJECT(tmp_import_from_51__module);
        tmp_import_name_from_277 = tmp_import_from_51__module;
        if (PyModule_Check(tmp_import_name_from_277)) {
           tmp_assign_source_331 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_277,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FoxNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_331 = IMPORT_NAME(tmp_import_name_from_277, const_str_plain_FoxNewsIE);
        }

        if (tmp_assign_source_331 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 369;

            goto try_except_handler_51;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FoxNewsIE, tmp_assign_source_331);
    }
    {
        PyObject *tmp_assign_source_332;
        PyObject *tmp_import_name_from_278;
        CHECK_OBJECT(tmp_import_from_51__module);
        tmp_import_name_from_278 = tmp_import_from_51__module;
        if (PyModule_Check(tmp_import_name_from_278)) {
           tmp_assign_source_332 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_278,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FoxNewsArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_332 = IMPORT_NAME(tmp_import_name_from_278, const_str_plain_FoxNewsArticleIE);
        }

        if (tmp_assign_source_332 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 369;

            goto try_except_handler_51;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FoxNewsArticleIE, tmp_assign_source_332);
    }
    goto try_end_51;
    // Exception handler code:
    try_except_handler_51:;
    exception_keeper_type_51 = exception_type;
    exception_keeper_value_51 = exception_value;
    exception_keeper_tb_51 = exception_tb;
    exception_keeper_lineno_51 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_51__module);
    Py_DECREF(tmp_import_from_51__module);
    tmp_import_from_51__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_51;
    exception_value = exception_keeper_value_51;
    exception_tb = exception_keeper_tb_51;
    exception_lineno = exception_keeper_lineno_51;

    goto frame_exception_exit_1;
    // End of try:
    try_end_51:;
    CHECK_OBJECT(tmp_import_from_51__module);
    Py_DECREF(tmp_import_from_51__module);
    tmp_import_from_51__module = NULL;

    {
        PyObject *tmp_assign_source_333;
        PyObject *tmp_import_name_from_279;
        PyObject *tmp_name_name_197;
        PyObject *tmp_globals_name_197;
        PyObject *tmp_locals_name_197;
        PyObject *tmp_fromlist_name_197;
        PyObject *tmp_level_name_197;
        tmp_name_name_197 = const_str_plain_foxsports;
        tmp_globals_name_197 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_197 = Py_None;
        tmp_fromlist_name_197 = const_tuple_str_plain_FoxSportsIE_tuple;
        tmp_level_name_197 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 373;
        tmp_import_name_from_279 = IMPORT_MODULE5(tmp_name_name_197, tmp_globals_name_197, tmp_locals_name_197, tmp_fromlist_name_197, tmp_level_name_197);
        if (tmp_import_name_from_279 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 373;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_279)) {
           tmp_assign_source_333 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_279,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FoxSportsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_333 = IMPORT_NAME(tmp_import_name_from_279, const_str_plain_FoxSportsIE);
        }

        Py_DECREF(tmp_import_name_from_279);
        if (tmp_assign_source_333 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 373;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FoxSportsIE, tmp_assign_source_333);
    }
    {
        PyObject *tmp_assign_source_334;
        PyObject *tmp_import_name_from_280;
        PyObject *tmp_name_name_198;
        PyObject *tmp_globals_name_198;
        PyObject *tmp_locals_name_198;
        PyObject *tmp_fromlist_name_198;
        PyObject *tmp_level_name_198;
        tmp_name_name_198 = const_str_plain_franceculture;
        tmp_globals_name_198 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_198 = Py_None;
        tmp_fromlist_name_198 = const_tuple_str_plain_FranceCultureIE_tuple;
        tmp_level_name_198 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 374;
        tmp_import_name_from_280 = IMPORT_MODULE5(tmp_name_name_198, tmp_globals_name_198, tmp_locals_name_198, tmp_fromlist_name_198, tmp_level_name_198);
        if (tmp_import_name_from_280 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 374;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_280)) {
           tmp_assign_source_334 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_280,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FranceCultureIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_334 = IMPORT_NAME(tmp_import_name_from_280, const_str_plain_FranceCultureIE);
        }

        Py_DECREF(tmp_import_name_from_280);
        if (tmp_assign_source_334 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 374;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FranceCultureIE, tmp_assign_source_334);
    }
    {
        PyObject *tmp_assign_source_335;
        PyObject *tmp_import_name_from_281;
        PyObject *tmp_name_name_199;
        PyObject *tmp_globals_name_199;
        PyObject *tmp_locals_name_199;
        PyObject *tmp_fromlist_name_199;
        PyObject *tmp_level_name_199;
        tmp_name_name_199 = const_str_plain_franceinter;
        tmp_globals_name_199 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_199 = Py_None;
        tmp_fromlist_name_199 = const_tuple_str_plain_FranceInterIE_tuple;
        tmp_level_name_199 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 375;
        tmp_import_name_from_281 = IMPORT_MODULE5(tmp_name_name_199, tmp_globals_name_199, tmp_locals_name_199, tmp_fromlist_name_199, tmp_level_name_199);
        if (tmp_import_name_from_281 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 375;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_281)) {
           tmp_assign_source_335 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_281,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FranceInterIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_335 = IMPORT_NAME(tmp_import_name_from_281, const_str_plain_FranceInterIE);
        }

        Py_DECREF(tmp_import_name_from_281);
        if (tmp_assign_source_335 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 375;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FranceInterIE, tmp_assign_source_335);
    }
    {
        PyObject *tmp_assign_source_336;
        PyObject *tmp_name_name_200;
        PyObject *tmp_globals_name_200;
        PyObject *tmp_locals_name_200;
        PyObject *tmp_fromlist_name_200;
        PyObject *tmp_level_name_200;
        tmp_name_name_200 = const_str_plain_francetv;
        tmp_globals_name_200 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_200 = Py_None;
        tmp_fromlist_name_200 = const_tuple_08d3cedaa7b24ca90f7ee93cc9388d48_tuple;
        tmp_level_name_200 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 376;
        tmp_assign_source_336 = IMPORT_MODULE5(tmp_name_name_200, tmp_globals_name_200, tmp_locals_name_200, tmp_fromlist_name_200, tmp_level_name_200);
        if (tmp_assign_source_336 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 376;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_52__module == NULL);
        tmp_import_from_52__module = tmp_assign_source_336;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_337;
        PyObject *tmp_import_name_from_282;
        CHECK_OBJECT(tmp_import_from_52__module);
        tmp_import_name_from_282 = tmp_import_from_52__module;
        if (PyModule_Check(tmp_import_name_from_282)) {
           tmp_assign_source_337 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_282,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FranceTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_337 = IMPORT_NAME(tmp_import_name_from_282, const_str_plain_FranceTVIE);
        }

        if (tmp_assign_source_337 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 376;

            goto try_except_handler_52;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FranceTVIE, tmp_assign_source_337);
    }
    {
        PyObject *tmp_assign_source_338;
        PyObject *tmp_import_name_from_283;
        CHECK_OBJECT(tmp_import_from_52__module);
        tmp_import_name_from_283 = tmp_import_from_52__module;
        if (PyModule_Check(tmp_import_name_from_283)) {
           tmp_assign_source_338 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_283,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FranceTVSiteIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_338 = IMPORT_NAME(tmp_import_name_from_283, const_str_plain_FranceTVSiteIE);
        }

        if (tmp_assign_source_338 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 376;

            goto try_except_handler_52;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FranceTVSiteIE, tmp_assign_source_338);
    }
    {
        PyObject *tmp_assign_source_339;
        PyObject *tmp_import_name_from_284;
        CHECK_OBJECT(tmp_import_from_52__module);
        tmp_import_name_from_284 = tmp_import_from_52__module;
        if (PyModule_Check(tmp_import_name_from_284)) {
           tmp_assign_source_339 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_284,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FranceTVEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_339 = IMPORT_NAME(tmp_import_name_from_284, const_str_plain_FranceTVEmbedIE);
        }

        if (tmp_assign_source_339 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 376;

            goto try_except_handler_52;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FranceTVEmbedIE, tmp_assign_source_339);
    }
    {
        PyObject *tmp_assign_source_340;
        PyObject *tmp_import_name_from_285;
        CHECK_OBJECT(tmp_import_from_52__module);
        tmp_import_name_from_285 = tmp_import_from_52__module;
        if (PyModule_Check(tmp_import_name_from_285)) {
           tmp_assign_source_340 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_285,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FranceTVInfoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_340 = IMPORT_NAME(tmp_import_name_from_285, const_str_plain_FranceTVInfoIE);
        }

        if (tmp_assign_source_340 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 376;

            goto try_except_handler_52;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FranceTVInfoIE, tmp_assign_source_340);
    }
    {
        PyObject *tmp_assign_source_341;
        PyObject *tmp_import_name_from_286;
        CHECK_OBJECT(tmp_import_from_52__module);
        tmp_import_name_from_286 = tmp_import_from_52__module;
        if (PyModule_Check(tmp_import_name_from_286)) {
           tmp_assign_source_341 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_286,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FranceTVInfoSportIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_341 = IMPORT_NAME(tmp_import_name_from_286, const_str_plain_FranceTVInfoSportIE);
        }

        if (tmp_assign_source_341 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 376;

            goto try_except_handler_52;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FranceTVInfoSportIE, tmp_assign_source_341);
    }
    {
        PyObject *tmp_assign_source_342;
        PyObject *tmp_import_name_from_287;
        CHECK_OBJECT(tmp_import_from_52__module);
        tmp_import_name_from_287 = tmp_import_from_52__module;
        if (PyModule_Check(tmp_import_name_from_287)) {
           tmp_assign_source_342 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_287,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FranceTVJeunesseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_342 = IMPORT_NAME(tmp_import_name_from_287, const_str_plain_FranceTVJeunesseIE);
        }

        if (tmp_assign_source_342 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 376;

            goto try_except_handler_52;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FranceTVJeunesseIE, tmp_assign_source_342);
    }
    {
        PyObject *tmp_assign_source_343;
        PyObject *tmp_import_name_from_288;
        CHECK_OBJECT(tmp_import_from_52__module);
        tmp_import_name_from_288 = tmp_import_from_52__module;
        if (PyModule_Check(tmp_import_name_from_288)) {
           tmp_assign_source_343 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_288,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GenerationWhatIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_343 = IMPORT_NAME(tmp_import_name_from_288, const_str_plain_GenerationWhatIE);
        }

        if (tmp_assign_source_343 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 376;

            goto try_except_handler_52;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GenerationWhatIE, tmp_assign_source_343);
    }
    {
        PyObject *tmp_assign_source_344;
        PyObject *tmp_import_name_from_289;
        CHECK_OBJECT(tmp_import_from_52__module);
        tmp_import_name_from_289 = tmp_import_from_52__module;
        if (PyModule_Check(tmp_import_name_from_289)) {
           tmp_assign_source_344 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_289,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CultureboxIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_344 = IMPORT_NAME(tmp_import_name_from_289, const_str_plain_CultureboxIE);
        }

        if (tmp_assign_source_344 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 376;

            goto try_except_handler_52;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CultureboxIE, tmp_assign_source_344);
    }
    goto try_end_52;
    // Exception handler code:
    try_except_handler_52:;
    exception_keeper_type_52 = exception_type;
    exception_keeper_value_52 = exception_value;
    exception_keeper_tb_52 = exception_tb;
    exception_keeper_lineno_52 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_52__module);
    Py_DECREF(tmp_import_from_52__module);
    tmp_import_from_52__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_52;
    exception_value = exception_keeper_value_52;
    exception_tb = exception_keeper_tb_52;
    exception_lineno = exception_keeper_lineno_52;

    goto frame_exception_exit_1;
    // End of try:
    try_end_52:;
    CHECK_OBJECT(tmp_import_from_52__module);
    Py_DECREF(tmp_import_from_52__module);
    tmp_import_from_52__module = NULL;

    {
        PyObject *tmp_assign_source_345;
        PyObject *tmp_import_name_from_290;
        PyObject *tmp_name_name_201;
        PyObject *tmp_globals_name_201;
        PyObject *tmp_locals_name_201;
        PyObject *tmp_fromlist_name_201;
        PyObject *tmp_level_name_201;
        tmp_name_name_201 = const_str_plain_freesound;
        tmp_globals_name_201 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_201 = Py_None;
        tmp_fromlist_name_201 = const_tuple_str_plain_FreesoundIE_tuple;
        tmp_level_name_201 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 386;
        tmp_import_name_from_290 = IMPORT_MODULE5(tmp_name_name_201, tmp_globals_name_201, tmp_locals_name_201, tmp_fromlist_name_201, tmp_level_name_201);
        if (tmp_import_name_from_290 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 386;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_290)) {
           tmp_assign_source_345 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_290,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FreesoundIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_345 = IMPORT_NAME(tmp_import_name_from_290, const_str_plain_FreesoundIE);
        }

        Py_DECREF(tmp_import_name_from_290);
        if (tmp_assign_source_345 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 386;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FreesoundIE, tmp_assign_source_345);
    }
    {
        PyObject *tmp_assign_source_346;
        PyObject *tmp_import_name_from_291;
        PyObject *tmp_name_name_202;
        PyObject *tmp_globals_name_202;
        PyObject *tmp_locals_name_202;
        PyObject *tmp_fromlist_name_202;
        PyObject *tmp_level_name_202;
        tmp_name_name_202 = const_str_plain_freespeech;
        tmp_globals_name_202 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_202 = Py_None;
        tmp_fromlist_name_202 = const_tuple_str_plain_FreespeechIE_tuple;
        tmp_level_name_202 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 387;
        tmp_import_name_from_291 = IMPORT_MODULE5(tmp_name_name_202, tmp_globals_name_202, tmp_locals_name_202, tmp_fromlist_name_202, tmp_level_name_202);
        if (tmp_import_name_from_291 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 387;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_291)) {
           tmp_assign_source_346 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_291,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FreespeechIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_346 = IMPORT_NAME(tmp_import_name_from_291, const_str_plain_FreespeechIE);
        }

        Py_DECREF(tmp_import_name_from_291);
        if (tmp_assign_source_346 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 387;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FreespeechIE, tmp_assign_source_346);
    }
    {
        PyObject *tmp_assign_source_347;
        PyObject *tmp_import_name_from_292;
        PyObject *tmp_name_name_203;
        PyObject *tmp_globals_name_203;
        PyObject *tmp_locals_name_203;
        PyObject *tmp_fromlist_name_203;
        PyObject *tmp_level_name_203;
        tmp_name_name_203 = const_str_plain_freshlive;
        tmp_globals_name_203 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_203 = Py_None;
        tmp_fromlist_name_203 = const_tuple_str_plain_FreshLiveIE_tuple;
        tmp_level_name_203 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 388;
        tmp_import_name_from_292 = IMPORT_MODULE5(tmp_name_name_203, tmp_globals_name_203, tmp_locals_name_203, tmp_fromlist_name_203, tmp_level_name_203);
        if (tmp_import_name_from_292 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 388;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_292)) {
           tmp_assign_source_347 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_292,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FreshLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_347 = IMPORT_NAME(tmp_import_name_from_292, const_str_plain_FreshLiveIE);
        }

        Py_DECREF(tmp_import_name_from_292);
        if (tmp_assign_source_347 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 388;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FreshLiveIE, tmp_assign_source_347);
    }
    {
        PyObject *tmp_assign_source_348;
        PyObject *tmp_name_name_204;
        PyObject *tmp_globals_name_204;
        PyObject *tmp_locals_name_204;
        PyObject *tmp_fromlist_name_204;
        PyObject *tmp_level_name_204;
        tmp_name_name_204 = const_str_plain_frontendmasters;
        tmp_globals_name_204 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_204 = Py_None;
        tmp_fromlist_name_204 = const_tuple_2c1c8e525365445aa920c0d021f8f564_tuple;
        tmp_level_name_204 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 389;
        tmp_assign_source_348 = IMPORT_MODULE5(tmp_name_name_204, tmp_globals_name_204, tmp_locals_name_204, tmp_fromlist_name_204, tmp_level_name_204);
        if (tmp_assign_source_348 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 389;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_53__module == NULL);
        tmp_import_from_53__module = tmp_assign_source_348;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_349;
        PyObject *tmp_import_name_from_293;
        CHECK_OBJECT(tmp_import_from_53__module);
        tmp_import_name_from_293 = tmp_import_from_53__module;
        if (PyModule_Check(tmp_import_name_from_293)) {
           tmp_assign_source_349 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_293,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FrontendMastersIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_349 = IMPORT_NAME(tmp_import_name_from_293, const_str_plain_FrontendMastersIE);
        }

        if (tmp_assign_source_349 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 389;

            goto try_except_handler_53;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FrontendMastersIE, tmp_assign_source_349);
    }
    {
        PyObject *tmp_assign_source_350;
        PyObject *tmp_import_name_from_294;
        CHECK_OBJECT(tmp_import_from_53__module);
        tmp_import_name_from_294 = tmp_import_from_53__module;
        if (PyModule_Check(tmp_import_name_from_294)) {
           tmp_assign_source_350 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_294,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FrontendMastersLessonIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_350 = IMPORT_NAME(tmp_import_name_from_294, const_str_plain_FrontendMastersLessonIE);
        }

        if (tmp_assign_source_350 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 389;

            goto try_except_handler_53;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FrontendMastersLessonIE, tmp_assign_source_350);
    }
    {
        PyObject *tmp_assign_source_351;
        PyObject *tmp_import_name_from_295;
        CHECK_OBJECT(tmp_import_from_53__module);
        tmp_import_name_from_295 = tmp_import_from_53__module;
        if (PyModule_Check(tmp_import_name_from_295)) {
           tmp_assign_source_351 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_295,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FrontendMastersCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_351 = IMPORT_NAME(tmp_import_name_from_295, const_str_plain_FrontendMastersCourseIE);
        }

        if (tmp_assign_source_351 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 389;

            goto try_except_handler_53;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FrontendMastersCourseIE, tmp_assign_source_351);
    }
    goto try_end_53;
    // Exception handler code:
    try_except_handler_53:;
    exception_keeper_type_53 = exception_type;
    exception_keeper_value_53 = exception_value;
    exception_keeper_tb_53 = exception_tb;
    exception_keeper_lineno_53 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_53__module);
    Py_DECREF(tmp_import_from_53__module);
    tmp_import_from_53__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_53;
    exception_value = exception_keeper_value_53;
    exception_tb = exception_keeper_tb_53;
    exception_lineno = exception_keeper_lineno_53;

    goto frame_exception_exit_1;
    // End of try:
    try_end_53:;
    CHECK_OBJECT(tmp_import_from_53__module);
    Py_DECREF(tmp_import_from_53__module);
    tmp_import_from_53__module = NULL;

    {
        PyObject *tmp_assign_source_352;
        PyObject *tmp_import_name_from_296;
        PyObject *tmp_name_name_205;
        PyObject *tmp_globals_name_205;
        PyObject *tmp_locals_name_205;
        PyObject *tmp_fromlist_name_205;
        PyObject *tmp_level_name_205;
        tmp_name_name_205 = const_str_plain_funimation;
        tmp_globals_name_205 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_205 = Py_None;
        tmp_fromlist_name_205 = const_tuple_str_plain_FunimationIE_tuple;
        tmp_level_name_205 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 394;
        tmp_import_name_from_296 = IMPORT_MODULE5(tmp_name_name_205, tmp_globals_name_205, tmp_locals_name_205, tmp_fromlist_name_205, tmp_level_name_205);
        if (tmp_import_name_from_296 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 394;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_296)) {
           tmp_assign_source_352 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_296,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FunimationIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_352 = IMPORT_NAME(tmp_import_name_from_296, const_str_plain_FunimationIE);
        }

        Py_DECREF(tmp_import_name_from_296);
        if (tmp_assign_source_352 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 394;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FunimationIE, tmp_assign_source_352);
    }
    {
        PyObject *tmp_assign_source_353;
        PyObject *tmp_import_name_from_297;
        PyObject *tmp_name_name_206;
        PyObject *tmp_globals_name_206;
        PyObject *tmp_locals_name_206;
        PyObject *tmp_fromlist_name_206;
        PyObject *tmp_level_name_206;
        tmp_name_name_206 = const_str_plain_funk;
        tmp_globals_name_206 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_206 = Py_None;
        tmp_fromlist_name_206 = const_tuple_str_plain_FunkIE_tuple;
        tmp_level_name_206 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 395;
        tmp_import_name_from_297 = IMPORT_MODULE5(tmp_name_name_206, tmp_globals_name_206, tmp_locals_name_206, tmp_fromlist_name_206, tmp_level_name_206);
        if (tmp_import_name_from_297 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 395;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_297)) {
           tmp_assign_source_353 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_297,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FunkIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_353 = IMPORT_NAME(tmp_import_name_from_297, const_str_plain_FunkIE);
        }

        Py_DECREF(tmp_import_name_from_297);
        if (tmp_assign_source_353 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 395;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FunkIE, tmp_assign_source_353);
    }
    {
        PyObject *tmp_assign_source_354;
        PyObject *tmp_import_name_from_298;
        PyObject *tmp_name_name_207;
        PyObject *tmp_globals_name_207;
        PyObject *tmp_locals_name_207;
        PyObject *tmp_fromlist_name_207;
        PyObject *tmp_level_name_207;
        tmp_name_name_207 = const_str_plain_fusion;
        tmp_globals_name_207 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_207 = Py_None;
        tmp_fromlist_name_207 = const_tuple_str_plain_FusionIE_tuple;
        tmp_level_name_207 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 396;
        tmp_import_name_from_298 = IMPORT_MODULE5(tmp_name_name_207, tmp_globals_name_207, tmp_locals_name_207, tmp_fromlist_name_207, tmp_level_name_207);
        if (tmp_import_name_from_298 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 396;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_298)) {
           tmp_assign_source_354 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_298,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FusionIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_354 = IMPORT_NAME(tmp_import_name_from_298, const_str_plain_FusionIE);
        }

        Py_DECREF(tmp_import_name_from_298);
        if (tmp_assign_source_354 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 396;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FusionIE, tmp_assign_source_354);
    }
    {
        PyObject *tmp_assign_source_355;
        PyObject *tmp_import_name_from_299;
        PyObject *tmp_name_name_208;
        PyObject *tmp_globals_name_208;
        PyObject *tmp_locals_name_208;
        PyObject *tmp_fromlist_name_208;
        PyObject *tmp_level_name_208;
        tmp_name_name_208 = const_str_plain_fxnetworks;
        tmp_globals_name_208 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_208 = Py_None;
        tmp_fromlist_name_208 = const_tuple_str_plain_FXNetworksIE_tuple;
        tmp_level_name_208 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 397;
        tmp_import_name_from_299 = IMPORT_MODULE5(tmp_name_name_208, tmp_globals_name_208, tmp_locals_name_208, tmp_fromlist_name_208, tmp_level_name_208);
        if (tmp_import_name_from_299 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 397;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_299)) {
           tmp_assign_source_355 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_299,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_FXNetworksIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_355 = IMPORT_NAME(tmp_import_name_from_299, const_str_plain_FXNetworksIE);
        }

        Py_DECREF(tmp_import_name_from_299);
        if (tmp_assign_source_355 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 397;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_FXNetworksIE, tmp_assign_source_355);
    }
    {
        PyObject *tmp_assign_source_356;
        PyObject *tmp_import_name_from_300;
        PyObject *tmp_name_name_209;
        PyObject *tmp_globals_name_209;
        PyObject *tmp_locals_name_209;
        PyObject *tmp_fromlist_name_209;
        PyObject *tmp_level_name_209;
        tmp_name_name_209 = const_str_plain_gaia;
        tmp_globals_name_209 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_209 = Py_None;
        tmp_fromlist_name_209 = const_tuple_str_plain_GaiaIE_tuple;
        tmp_level_name_209 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 398;
        tmp_import_name_from_300 = IMPORT_MODULE5(tmp_name_name_209, tmp_globals_name_209, tmp_locals_name_209, tmp_fromlist_name_209, tmp_level_name_209);
        if (tmp_import_name_from_300 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 398;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_300)) {
           tmp_assign_source_356 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_300,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GaiaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_356 = IMPORT_NAME(tmp_import_name_from_300, const_str_plain_GaiaIE);
        }

        Py_DECREF(tmp_import_name_from_300);
        if (tmp_assign_source_356 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 398;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GaiaIE, tmp_assign_source_356);
    }
    {
        PyObject *tmp_assign_source_357;
        PyObject *tmp_import_name_from_301;
        PyObject *tmp_name_name_210;
        PyObject *tmp_globals_name_210;
        PyObject *tmp_locals_name_210;
        PyObject *tmp_fromlist_name_210;
        PyObject *tmp_level_name_210;
        tmp_name_name_210 = const_str_plain_gameinformer;
        tmp_globals_name_210 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_210 = Py_None;
        tmp_fromlist_name_210 = const_tuple_str_plain_GameInformerIE_tuple;
        tmp_level_name_210 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 399;
        tmp_import_name_from_301 = IMPORT_MODULE5(tmp_name_name_210, tmp_globals_name_210, tmp_locals_name_210, tmp_fromlist_name_210, tmp_level_name_210);
        if (tmp_import_name_from_301 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 399;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_301)) {
           tmp_assign_source_357 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_301,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GameInformerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_357 = IMPORT_NAME(tmp_import_name_from_301, const_str_plain_GameInformerIE);
        }

        Py_DECREF(tmp_import_name_from_301);
        if (tmp_assign_source_357 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 399;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GameInformerIE, tmp_assign_source_357);
    }
    {
        PyObject *tmp_assign_source_358;
        PyObject *tmp_import_name_from_302;
        PyObject *tmp_name_name_211;
        PyObject *tmp_globals_name_211;
        PyObject *tmp_locals_name_211;
        PyObject *tmp_fromlist_name_211;
        PyObject *tmp_level_name_211;
        tmp_name_name_211 = const_str_plain_gamespot;
        tmp_globals_name_211 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_211 = Py_None;
        tmp_fromlist_name_211 = const_tuple_str_plain_GameSpotIE_tuple;
        tmp_level_name_211 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 400;
        tmp_import_name_from_302 = IMPORT_MODULE5(tmp_name_name_211, tmp_globals_name_211, tmp_locals_name_211, tmp_fromlist_name_211, tmp_level_name_211);
        if (tmp_import_name_from_302 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 400;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_302)) {
           tmp_assign_source_358 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_302,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GameSpotIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_358 = IMPORT_NAME(tmp_import_name_from_302, const_str_plain_GameSpotIE);
        }

        Py_DECREF(tmp_import_name_from_302);
        if (tmp_assign_source_358 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 400;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GameSpotIE, tmp_assign_source_358);
    }
    {
        PyObject *tmp_assign_source_359;
        PyObject *tmp_import_name_from_303;
        PyObject *tmp_name_name_212;
        PyObject *tmp_globals_name_212;
        PyObject *tmp_locals_name_212;
        PyObject *tmp_fromlist_name_212;
        PyObject *tmp_level_name_212;
        tmp_name_name_212 = const_str_plain_gamestar;
        tmp_globals_name_212 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_212 = Py_None;
        tmp_fromlist_name_212 = const_tuple_str_plain_GameStarIE_tuple;
        tmp_level_name_212 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 401;
        tmp_import_name_from_303 = IMPORT_MODULE5(tmp_name_name_212, tmp_globals_name_212, tmp_locals_name_212, tmp_fromlist_name_212, tmp_level_name_212);
        if (tmp_import_name_from_303 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_303)) {
           tmp_assign_source_359 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_303,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GameStarIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_359 = IMPORT_NAME(tmp_import_name_from_303, const_str_plain_GameStarIE);
        }

        Py_DECREF(tmp_import_name_from_303);
        if (tmp_assign_source_359 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GameStarIE, tmp_assign_source_359);
    }
    {
        PyObject *tmp_assign_source_360;
        PyObject *tmp_import_name_from_304;
        PyObject *tmp_name_name_213;
        PyObject *tmp_globals_name_213;
        PyObject *tmp_locals_name_213;
        PyObject *tmp_fromlist_name_213;
        PyObject *tmp_level_name_213;
        tmp_name_name_213 = const_str_plain_gaskrank;
        tmp_globals_name_213 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_213 = Py_None;
        tmp_fromlist_name_213 = const_tuple_str_plain_GaskrankIE_tuple;
        tmp_level_name_213 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 402;
        tmp_import_name_from_304 = IMPORT_MODULE5(tmp_name_name_213, tmp_globals_name_213, tmp_locals_name_213, tmp_fromlist_name_213, tmp_level_name_213);
        if (tmp_import_name_from_304 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 402;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_304)) {
           tmp_assign_source_360 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_304,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GaskrankIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_360 = IMPORT_NAME(tmp_import_name_from_304, const_str_plain_GaskrankIE);
        }

        Py_DECREF(tmp_import_name_from_304);
        if (tmp_assign_source_360 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 402;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GaskrankIE, tmp_assign_source_360);
    }
    {
        PyObject *tmp_assign_source_361;
        PyObject *tmp_import_name_from_305;
        PyObject *tmp_name_name_214;
        PyObject *tmp_globals_name_214;
        PyObject *tmp_locals_name_214;
        PyObject *tmp_fromlist_name_214;
        PyObject *tmp_level_name_214;
        tmp_name_name_214 = const_str_plain_gazeta;
        tmp_globals_name_214 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_214 = Py_None;
        tmp_fromlist_name_214 = const_tuple_str_plain_GazetaIE_tuple;
        tmp_level_name_214 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 403;
        tmp_import_name_from_305 = IMPORT_MODULE5(tmp_name_name_214, tmp_globals_name_214, tmp_locals_name_214, tmp_fromlist_name_214, tmp_level_name_214);
        if (tmp_import_name_from_305 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 403;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_305)) {
           tmp_assign_source_361 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_305,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GazetaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_361 = IMPORT_NAME(tmp_import_name_from_305, const_str_plain_GazetaIE);
        }

        Py_DECREF(tmp_import_name_from_305);
        if (tmp_assign_source_361 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 403;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GazetaIE, tmp_assign_source_361);
    }
    {
        PyObject *tmp_assign_source_362;
        PyObject *tmp_import_name_from_306;
        PyObject *tmp_name_name_215;
        PyObject *tmp_globals_name_215;
        PyObject *tmp_locals_name_215;
        PyObject *tmp_fromlist_name_215;
        PyObject *tmp_level_name_215;
        tmp_name_name_215 = const_str_plain_gdcvault;
        tmp_globals_name_215 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_215 = Py_None;
        tmp_fromlist_name_215 = const_tuple_str_plain_GDCVaultIE_tuple;
        tmp_level_name_215 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 404;
        tmp_import_name_from_306 = IMPORT_MODULE5(tmp_name_name_215, tmp_globals_name_215, tmp_locals_name_215, tmp_fromlist_name_215, tmp_level_name_215);
        if (tmp_import_name_from_306 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 404;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_306)) {
           tmp_assign_source_362 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_306,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GDCVaultIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_362 = IMPORT_NAME(tmp_import_name_from_306, const_str_plain_GDCVaultIE);
        }

        Py_DECREF(tmp_import_name_from_306);
        if (tmp_assign_source_362 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 404;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GDCVaultIE, tmp_assign_source_362);
    }
    {
        PyObject *tmp_assign_source_363;
        PyObject *tmp_import_name_from_307;
        PyObject *tmp_name_name_216;
        PyObject *tmp_globals_name_216;
        PyObject *tmp_locals_name_216;
        PyObject *tmp_fromlist_name_216;
        PyObject *tmp_level_name_216;
        tmp_name_name_216 = const_str_plain_generic;
        tmp_globals_name_216 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_216 = Py_None;
        tmp_fromlist_name_216 = const_tuple_str_plain_GenericIE_tuple;
        tmp_level_name_216 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 405;
        tmp_import_name_from_307 = IMPORT_MODULE5(tmp_name_name_216, tmp_globals_name_216, tmp_locals_name_216, tmp_fromlist_name_216, tmp_level_name_216);
        if (tmp_import_name_from_307 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 405;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_307)) {
           tmp_assign_source_363 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_307,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GenericIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_363 = IMPORT_NAME(tmp_import_name_from_307, const_str_plain_GenericIE);
        }

        Py_DECREF(tmp_import_name_from_307);
        if (tmp_assign_source_363 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 405;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GenericIE, tmp_assign_source_363);
    }
    {
        PyObject *tmp_assign_source_364;
        PyObject *tmp_import_name_from_308;
        PyObject *tmp_name_name_217;
        PyObject *tmp_globals_name_217;
        PyObject *tmp_locals_name_217;
        PyObject *tmp_fromlist_name_217;
        PyObject *tmp_level_name_217;
        tmp_name_name_217 = const_str_plain_gfycat;
        tmp_globals_name_217 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_217 = Py_None;
        tmp_fromlist_name_217 = const_tuple_str_plain_GfycatIE_tuple;
        tmp_level_name_217 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 406;
        tmp_import_name_from_308 = IMPORT_MODULE5(tmp_name_name_217, tmp_globals_name_217, tmp_locals_name_217, tmp_fromlist_name_217, tmp_level_name_217);
        if (tmp_import_name_from_308 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 406;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_308)) {
           tmp_assign_source_364 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_308,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GfycatIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_364 = IMPORT_NAME(tmp_import_name_from_308, const_str_plain_GfycatIE);
        }

        Py_DECREF(tmp_import_name_from_308);
        if (tmp_assign_source_364 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 406;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GfycatIE, tmp_assign_source_364);
    }
    {
        PyObject *tmp_assign_source_365;
        PyObject *tmp_import_name_from_309;
        PyObject *tmp_name_name_218;
        PyObject *tmp_globals_name_218;
        PyObject *tmp_locals_name_218;
        PyObject *tmp_fromlist_name_218;
        PyObject *tmp_level_name_218;
        tmp_name_name_218 = const_str_plain_giantbomb;
        tmp_globals_name_218 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_218 = Py_None;
        tmp_fromlist_name_218 = const_tuple_str_plain_GiantBombIE_tuple;
        tmp_level_name_218 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 407;
        tmp_import_name_from_309 = IMPORT_MODULE5(tmp_name_name_218, tmp_globals_name_218, tmp_locals_name_218, tmp_fromlist_name_218, tmp_level_name_218);
        if (tmp_import_name_from_309 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 407;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_309)) {
           tmp_assign_source_365 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_309,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GiantBombIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_365 = IMPORT_NAME(tmp_import_name_from_309, const_str_plain_GiantBombIE);
        }

        Py_DECREF(tmp_import_name_from_309);
        if (tmp_assign_source_365 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 407;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GiantBombIE, tmp_assign_source_365);
    }
    {
        PyObject *tmp_assign_source_366;
        PyObject *tmp_import_name_from_310;
        PyObject *tmp_name_name_219;
        PyObject *tmp_globals_name_219;
        PyObject *tmp_locals_name_219;
        PyObject *tmp_fromlist_name_219;
        PyObject *tmp_level_name_219;
        tmp_name_name_219 = const_str_plain_giga;
        tmp_globals_name_219 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_219 = Py_None;
        tmp_fromlist_name_219 = const_tuple_str_plain_GigaIE_tuple;
        tmp_level_name_219 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 408;
        tmp_import_name_from_310 = IMPORT_MODULE5(tmp_name_name_219, tmp_globals_name_219, tmp_locals_name_219, tmp_fromlist_name_219, tmp_level_name_219);
        if (tmp_import_name_from_310 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 408;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_310)) {
           tmp_assign_source_366 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_310,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GigaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_366 = IMPORT_NAME(tmp_import_name_from_310, const_str_plain_GigaIE);
        }

        Py_DECREF(tmp_import_name_from_310);
        if (tmp_assign_source_366 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 408;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GigaIE, tmp_assign_source_366);
    }
    {
        PyObject *tmp_assign_source_367;
        PyObject *tmp_import_name_from_311;
        PyObject *tmp_name_name_220;
        PyObject *tmp_globals_name_220;
        PyObject *tmp_locals_name_220;
        PyObject *tmp_fromlist_name_220;
        PyObject *tmp_level_name_220;
        tmp_name_name_220 = const_str_plain_glide;
        tmp_globals_name_220 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_220 = Py_None;
        tmp_fromlist_name_220 = const_tuple_str_plain_GlideIE_tuple;
        tmp_level_name_220 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 409;
        tmp_import_name_from_311 = IMPORT_MODULE5(tmp_name_name_220, tmp_globals_name_220, tmp_locals_name_220, tmp_fromlist_name_220, tmp_level_name_220);
        if (tmp_import_name_from_311 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 409;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_311)) {
           tmp_assign_source_367 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_311,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GlideIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_367 = IMPORT_NAME(tmp_import_name_from_311, const_str_plain_GlideIE);
        }

        Py_DECREF(tmp_import_name_from_311);
        if (tmp_assign_source_367 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 409;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GlideIE, tmp_assign_source_367);
    }
    {
        PyObject *tmp_assign_source_368;
        PyObject *tmp_name_name_221;
        PyObject *tmp_globals_name_221;
        PyObject *tmp_locals_name_221;
        PyObject *tmp_fromlist_name_221;
        PyObject *tmp_level_name_221;
        tmp_name_name_221 = const_str_plain_globo;
        tmp_globals_name_221 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_221 = Py_None;
        tmp_fromlist_name_221 = const_tuple_str_plain_GloboIE_str_plain_GloboArticleIE_tuple;
        tmp_level_name_221 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 410;
        tmp_assign_source_368 = IMPORT_MODULE5(tmp_name_name_221, tmp_globals_name_221, tmp_locals_name_221, tmp_fromlist_name_221, tmp_level_name_221);
        if (tmp_assign_source_368 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 410;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_54__module == NULL);
        tmp_import_from_54__module = tmp_assign_source_368;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_369;
        PyObject *tmp_import_name_from_312;
        CHECK_OBJECT(tmp_import_from_54__module);
        tmp_import_name_from_312 = tmp_import_from_54__module;
        if (PyModule_Check(tmp_import_name_from_312)) {
           tmp_assign_source_369 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_312,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GloboIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_369 = IMPORT_NAME(tmp_import_name_from_312, const_str_plain_GloboIE);
        }

        if (tmp_assign_source_369 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 410;

            goto try_except_handler_54;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GloboIE, tmp_assign_source_369);
    }
    {
        PyObject *tmp_assign_source_370;
        PyObject *tmp_import_name_from_313;
        CHECK_OBJECT(tmp_import_from_54__module);
        tmp_import_name_from_313 = tmp_import_from_54__module;
        if (PyModule_Check(tmp_import_name_from_313)) {
           tmp_assign_source_370 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_313,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GloboArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_370 = IMPORT_NAME(tmp_import_name_from_313, const_str_plain_GloboArticleIE);
        }

        if (tmp_assign_source_370 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 410;

            goto try_except_handler_54;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GloboArticleIE, tmp_assign_source_370);
    }
    goto try_end_54;
    // Exception handler code:
    try_except_handler_54:;
    exception_keeper_type_54 = exception_type;
    exception_keeper_value_54 = exception_value;
    exception_keeper_tb_54 = exception_tb;
    exception_keeper_lineno_54 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_54__module);
    Py_DECREF(tmp_import_from_54__module);
    tmp_import_from_54__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_54;
    exception_value = exception_keeper_value_54;
    exception_tb = exception_keeper_tb_54;
    exception_lineno = exception_keeper_lineno_54;

    goto frame_exception_exit_1;
    // End of try:
    try_end_54:;
    CHECK_OBJECT(tmp_import_from_54__module);
    Py_DECREF(tmp_import_from_54__module);
    tmp_import_from_54__module = NULL;

    {
        PyObject *tmp_assign_source_371;
        PyObject *tmp_import_name_from_314;
        PyObject *tmp_name_name_222;
        PyObject *tmp_globals_name_222;
        PyObject *tmp_locals_name_222;
        PyObject *tmp_fromlist_name_222;
        PyObject *tmp_level_name_222;
        tmp_name_name_222 = const_str_plain_go;
        tmp_globals_name_222 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_222 = Py_None;
        tmp_fromlist_name_222 = const_tuple_str_plain_GoIE_tuple;
        tmp_level_name_222 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 414;
        tmp_import_name_from_314 = IMPORT_MODULE5(tmp_name_name_222, tmp_globals_name_222, tmp_locals_name_222, tmp_fromlist_name_222, tmp_level_name_222);
        if (tmp_import_name_from_314 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 414;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_314)) {
           tmp_assign_source_371 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_314,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_371 = IMPORT_NAME(tmp_import_name_from_314, const_str_plain_GoIE);
        }

        Py_DECREF(tmp_import_name_from_314);
        if (tmp_assign_source_371 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 414;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GoIE, tmp_assign_source_371);
    }
    {
        PyObject *tmp_assign_source_372;
        PyObject *tmp_import_name_from_315;
        PyObject *tmp_name_name_223;
        PyObject *tmp_globals_name_223;
        PyObject *tmp_locals_name_223;
        PyObject *tmp_fromlist_name_223;
        PyObject *tmp_level_name_223;
        tmp_name_name_223 = const_str_plain_godtube;
        tmp_globals_name_223 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_223 = Py_None;
        tmp_fromlist_name_223 = const_tuple_str_plain_GodTubeIE_tuple;
        tmp_level_name_223 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 415;
        tmp_import_name_from_315 = IMPORT_MODULE5(tmp_name_name_223, tmp_globals_name_223, tmp_locals_name_223, tmp_fromlist_name_223, tmp_level_name_223);
        if (tmp_import_name_from_315 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 415;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_315)) {
           tmp_assign_source_372 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_315,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GodTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_372 = IMPORT_NAME(tmp_import_name_from_315, const_str_plain_GodTubeIE);
        }

        Py_DECREF(tmp_import_name_from_315);
        if (tmp_assign_source_372 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 415;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GodTubeIE, tmp_assign_source_372);
    }
    {
        PyObject *tmp_assign_source_373;
        PyObject *tmp_import_name_from_316;
        PyObject *tmp_name_name_224;
        PyObject *tmp_globals_name_224;
        PyObject *tmp_locals_name_224;
        PyObject *tmp_fromlist_name_224;
        PyObject *tmp_level_name_224;
        tmp_name_name_224 = const_str_plain_golem;
        tmp_globals_name_224 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_224 = Py_None;
        tmp_fromlist_name_224 = const_tuple_str_plain_GolemIE_tuple;
        tmp_level_name_224 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 416;
        tmp_import_name_from_316 = IMPORT_MODULE5(tmp_name_name_224, tmp_globals_name_224, tmp_locals_name_224, tmp_fromlist_name_224, tmp_level_name_224);
        if (tmp_import_name_from_316 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 416;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_316)) {
           tmp_assign_source_373 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_316,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GolemIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_373 = IMPORT_NAME(tmp_import_name_from_316, const_str_plain_GolemIE);
        }

        Py_DECREF(tmp_import_name_from_316);
        if (tmp_assign_source_373 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 416;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GolemIE, tmp_assign_source_373);
    }
    {
        PyObject *tmp_assign_source_374;
        PyObject *tmp_import_name_from_317;
        PyObject *tmp_name_name_225;
        PyObject *tmp_globals_name_225;
        PyObject *tmp_locals_name_225;
        PyObject *tmp_fromlist_name_225;
        PyObject *tmp_level_name_225;
        tmp_name_name_225 = const_str_plain_googledrive;
        tmp_globals_name_225 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_225 = Py_None;
        tmp_fromlist_name_225 = const_tuple_str_plain_GoogleDriveIE_tuple;
        tmp_level_name_225 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 417;
        tmp_import_name_from_317 = IMPORT_MODULE5(tmp_name_name_225, tmp_globals_name_225, tmp_locals_name_225, tmp_fromlist_name_225, tmp_level_name_225);
        if (tmp_import_name_from_317 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 417;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_317)) {
           tmp_assign_source_374 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_317,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GoogleDriveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_374 = IMPORT_NAME(tmp_import_name_from_317, const_str_plain_GoogleDriveIE);
        }

        Py_DECREF(tmp_import_name_from_317);
        if (tmp_assign_source_374 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 417;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GoogleDriveIE, tmp_assign_source_374);
    }
    {
        PyObject *tmp_assign_source_375;
        PyObject *tmp_import_name_from_318;
        PyObject *tmp_name_name_226;
        PyObject *tmp_globals_name_226;
        PyObject *tmp_locals_name_226;
        PyObject *tmp_fromlist_name_226;
        PyObject *tmp_level_name_226;
        tmp_name_name_226 = const_str_plain_googleplus;
        tmp_globals_name_226 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_226 = Py_None;
        tmp_fromlist_name_226 = const_tuple_str_plain_GooglePlusIE_tuple;
        tmp_level_name_226 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 418;
        tmp_import_name_from_318 = IMPORT_MODULE5(tmp_name_name_226, tmp_globals_name_226, tmp_locals_name_226, tmp_fromlist_name_226, tmp_level_name_226);
        if (tmp_import_name_from_318 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 418;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_318)) {
           tmp_assign_source_375 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_318,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GooglePlusIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_375 = IMPORT_NAME(tmp_import_name_from_318, const_str_plain_GooglePlusIE);
        }

        Py_DECREF(tmp_import_name_from_318);
        if (tmp_assign_source_375 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 418;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GooglePlusIE, tmp_assign_source_375);
    }
    {
        PyObject *tmp_assign_source_376;
        PyObject *tmp_import_name_from_319;
        PyObject *tmp_name_name_227;
        PyObject *tmp_globals_name_227;
        PyObject *tmp_locals_name_227;
        PyObject *tmp_fromlist_name_227;
        PyObject *tmp_level_name_227;
        tmp_name_name_227 = const_str_plain_googlesearch;
        tmp_globals_name_227 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_227 = Py_None;
        tmp_fromlist_name_227 = const_tuple_str_plain_GoogleSearchIE_tuple;
        tmp_level_name_227 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 419;
        tmp_import_name_from_319 = IMPORT_MODULE5(tmp_name_name_227, tmp_globals_name_227, tmp_locals_name_227, tmp_fromlist_name_227, tmp_level_name_227);
        if (tmp_import_name_from_319 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 419;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_319)) {
           tmp_assign_source_376 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_319,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GoogleSearchIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_376 = IMPORT_NAME(tmp_import_name_from_319, const_str_plain_GoogleSearchIE);
        }

        Py_DECREF(tmp_import_name_from_319);
        if (tmp_assign_source_376 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 419;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GoogleSearchIE, tmp_assign_source_376);
    }
    {
        PyObject *tmp_assign_source_377;
        PyObject *tmp_import_name_from_320;
        PyObject *tmp_name_name_228;
        PyObject *tmp_globals_name_228;
        PyObject *tmp_locals_name_228;
        PyObject *tmp_fromlist_name_228;
        PyObject *tmp_level_name_228;
        tmp_name_name_228 = const_str_plain_goshgay;
        tmp_globals_name_228 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_228 = Py_None;
        tmp_fromlist_name_228 = const_tuple_str_plain_GoshgayIE_tuple;
        tmp_level_name_228 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 420;
        tmp_import_name_from_320 = IMPORT_MODULE5(tmp_name_name_228, tmp_globals_name_228, tmp_locals_name_228, tmp_fromlist_name_228, tmp_level_name_228);
        if (tmp_import_name_from_320 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 420;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_320)) {
           tmp_assign_source_377 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_320,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GoshgayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_377 = IMPORT_NAME(tmp_import_name_from_320, const_str_plain_GoshgayIE);
        }

        Py_DECREF(tmp_import_name_from_320);
        if (tmp_assign_source_377 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 420;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GoshgayIE, tmp_assign_source_377);
    }
    {
        PyObject *tmp_assign_source_378;
        PyObject *tmp_import_name_from_321;
        PyObject *tmp_name_name_229;
        PyObject *tmp_globals_name_229;
        PyObject *tmp_locals_name_229;
        PyObject *tmp_fromlist_name_229;
        PyObject *tmp_level_name_229;
        tmp_name_name_229 = const_str_plain_gputechconf;
        tmp_globals_name_229 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_229 = Py_None;
        tmp_fromlist_name_229 = const_tuple_str_plain_GPUTechConfIE_tuple;
        tmp_level_name_229 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 421;
        tmp_import_name_from_321 = IMPORT_MODULE5(tmp_name_name_229, tmp_globals_name_229, tmp_locals_name_229, tmp_fromlist_name_229, tmp_level_name_229);
        if (tmp_import_name_from_321 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 421;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_321)) {
           tmp_assign_source_378 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_321,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GPUTechConfIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_378 = IMPORT_NAME(tmp_import_name_from_321, const_str_plain_GPUTechConfIE);
        }

        Py_DECREF(tmp_import_name_from_321);
        if (tmp_assign_source_378 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 421;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GPUTechConfIE, tmp_assign_source_378);
    }
    {
        PyObject *tmp_assign_source_379;
        PyObject *tmp_import_name_from_322;
        PyObject *tmp_name_name_230;
        PyObject *tmp_globals_name_230;
        PyObject *tmp_locals_name_230;
        PyObject *tmp_fromlist_name_230;
        PyObject *tmp_level_name_230;
        tmp_name_name_230 = const_str_plain_groupon;
        tmp_globals_name_230 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_230 = Py_None;
        tmp_fromlist_name_230 = const_tuple_str_plain_GrouponIE_tuple;
        tmp_level_name_230 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 422;
        tmp_import_name_from_322 = IMPORT_MODULE5(tmp_name_name_230, tmp_globals_name_230, tmp_locals_name_230, tmp_fromlist_name_230, tmp_level_name_230);
        if (tmp_import_name_from_322 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 422;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_322)) {
           tmp_assign_source_379 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_322,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GrouponIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_379 = IMPORT_NAME(tmp_import_name_from_322, const_str_plain_GrouponIE);
        }

        Py_DECREF(tmp_import_name_from_322);
        if (tmp_assign_source_379 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 422;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GrouponIE, tmp_assign_source_379);
    }
    {
        PyObject *tmp_assign_source_380;
        PyObject *tmp_import_name_from_323;
        PyObject *tmp_name_name_231;
        PyObject *tmp_globals_name_231;
        PyObject *tmp_locals_name_231;
        PyObject *tmp_fromlist_name_231;
        PyObject *tmp_level_name_231;
        tmp_name_name_231 = const_str_plain_hbo;
        tmp_globals_name_231 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_231 = Py_None;
        tmp_fromlist_name_231 = const_tuple_str_plain_HBOIE_tuple;
        tmp_level_name_231 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 423;
        tmp_import_name_from_323 = IMPORT_MODULE5(tmp_name_name_231, tmp_globals_name_231, tmp_locals_name_231, tmp_fromlist_name_231, tmp_level_name_231);
        if (tmp_import_name_from_323 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 423;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_323)) {
           tmp_assign_source_380 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_323,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HBOIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_380 = IMPORT_NAME(tmp_import_name_from_323, const_str_plain_HBOIE);
        }

        Py_DECREF(tmp_import_name_from_323);
        if (tmp_assign_source_380 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 423;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HBOIE, tmp_assign_source_380);
    }
    {
        PyObject *tmp_assign_source_381;
        PyObject *tmp_import_name_from_324;
        PyObject *tmp_name_name_232;
        PyObject *tmp_globals_name_232;
        PyObject *tmp_locals_name_232;
        PyObject *tmp_fromlist_name_232;
        PyObject *tmp_level_name_232;
        tmp_name_name_232 = const_str_plain_hearthisat;
        tmp_globals_name_232 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_232 = Py_None;
        tmp_fromlist_name_232 = const_tuple_str_plain_HearThisAtIE_tuple;
        tmp_level_name_232 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 424;
        tmp_import_name_from_324 = IMPORT_MODULE5(tmp_name_name_232, tmp_globals_name_232, tmp_locals_name_232, tmp_fromlist_name_232, tmp_level_name_232);
        if (tmp_import_name_from_324 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 424;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_324)) {
           tmp_assign_source_381 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_324,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HearThisAtIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_381 = IMPORT_NAME(tmp_import_name_from_324, const_str_plain_HearThisAtIE);
        }

        Py_DECREF(tmp_import_name_from_324);
        if (tmp_assign_source_381 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 424;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HearThisAtIE, tmp_assign_source_381);
    }
    {
        PyObject *tmp_assign_source_382;
        PyObject *tmp_import_name_from_325;
        PyObject *tmp_name_name_233;
        PyObject *tmp_globals_name_233;
        PyObject *tmp_locals_name_233;
        PyObject *tmp_fromlist_name_233;
        PyObject *tmp_level_name_233;
        tmp_name_name_233 = const_str_plain_heise;
        tmp_globals_name_233 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_233 = Py_None;
        tmp_fromlist_name_233 = const_tuple_str_plain_HeiseIE_tuple;
        tmp_level_name_233 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 425;
        tmp_import_name_from_325 = IMPORT_MODULE5(tmp_name_name_233, tmp_globals_name_233, tmp_locals_name_233, tmp_fromlist_name_233, tmp_level_name_233);
        if (tmp_import_name_from_325 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 425;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_325)) {
           tmp_assign_source_382 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_325,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HeiseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_382 = IMPORT_NAME(tmp_import_name_from_325, const_str_plain_HeiseIE);
        }

        Py_DECREF(tmp_import_name_from_325);
        if (tmp_assign_source_382 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 425;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HeiseIE, tmp_assign_source_382);
    }
    {
        PyObject *tmp_assign_source_383;
        PyObject *tmp_import_name_from_326;
        PyObject *tmp_name_name_234;
        PyObject *tmp_globals_name_234;
        PyObject *tmp_locals_name_234;
        PyObject *tmp_fromlist_name_234;
        PyObject *tmp_level_name_234;
        tmp_name_name_234 = const_str_plain_hellporno;
        tmp_globals_name_234 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_234 = Py_None;
        tmp_fromlist_name_234 = const_tuple_str_plain_HellPornoIE_tuple;
        tmp_level_name_234 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 426;
        tmp_import_name_from_326 = IMPORT_MODULE5(tmp_name_name_234, tmp_globals_name_234, tmp_locals_name_234, tmp_fromlist_name_234, tmp_level_name_234);
        if (tmp_import_name_from_326 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 426;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_326)) {
           tmp_assign_source_383 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_326,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HellPornoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_383 = IMPORT_NAME(tmp_import_name_from_326, const_str_plain_HellPornoIE);
        }

        Py_DECREF(tmp_import_name_from_326);
        if (tmp_assign_source_383 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 426;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HellPornoIE, tmp_assign_source_383);
    }
    {
        PyObject *tmp_assign_source_384;
        PyObject *tmp_import_name_from_327;
        PyObject *tmp_name_name_235;
        PyObject *tmp_globals_name_235;
        PyObject *tmp_locals_name_235;
        PyObject *tmp_fromlist_name_235;
        PyObject *tmp_level_name_235;
        tmp_name_name_235 = const_str_plain_helsinki;
        tmp_globals_name_235 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_235 = Py_None;
        tmp_fromlist_name_235 = const_tuple_str_plain_HelsinkiIE_tuple;
        tmp_level_name_235 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 427;
        tmp_import_name_from_327 = IMPORT_MODULE5(tmp_name_name_235, tmp_globals_name_235, tmp_locals_name_235, tmp_fromlist_name_235, tmp_level_name_235);
        if (tmp_import_name_from_327 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 427;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_327)) {
           tmp_assign_source_384 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_327,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HelsinkiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_384 = IMPORT_NAME(tmp_import_name_from_327, const_str_plain_HelsinkiIE);
        }

        Py_DECREF(tmp_import_name_from_327);
        if (tmp_assign_source_384 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 427;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HelsinkiIE, tmp_assign_source_384);
    }
    {
        PyObject *tmp_assign_source_385;
        PyObject *tmp_import_name_from_328;
        PyObject *tmp_name_name_236;
        PyObject *tmp_globals_name_236;
        PyObject *tmp_locals_name_236;
        PyObject *tmp_fromlist_name_236;
        PyObject *tmp_level_name_236;
        tmp_name_name_236 = const_str_plain_hentaistigma;
        tmp_globals_name_236 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_236 = Py_None;
        tmp_fromlist_name_236 = const_tuple_str_plain_HentaiStigmaIE_tuple;
        tmp_level_name_236 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 428;
        tmp_import_name_from_328 = IMPORT_MODULE5(tmp_name_name_236, tmp_globals_name_236, tmp_locals_name_236, tmp_fromlist_name_236, tmp_level_name_236);
        if (tmp_import_name_from_328 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 428;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_328)) {
           tmp_assign_source_385 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_328,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HentaiStigmaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_385 = IMPORT_NAME(tmp_import_name_from_328, const_str_plain_HentaiStigmaIE);
        }

        Py_DECREF(tmp_import_name_from_328);
        if (tmp_assign_source_385 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 428;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HentaiStigmaIE, tmp_assign_source_385);
    }
    {
        PyObject *tmp_assign_source_386;
        PyObject *tmp_import_name_from_329;
        PyObject *tmp_name_name_237;
        PyObject *tmp_globals_name_237;
        PyObject *tmp_locals_name_237;
        PyObject *tmp_fromlist_name_237;
        PyObject *tmp_level_name_237;
        tmp_name_name_237 = const_str_plain_hgtv;
        tmp_globals_name_237 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_237 = Py_None;
        tmp_fromlist_name_237 = const_tuple_str_plain_HGTVComShowIE_tuple;
        tmp_level_name_237 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 429;
        tmp_import_name_from_329 = IMPORT_MODULE5(tmp_name_name_237, tmp_globals_name_237, tmp_locals_name_237, tmp_fromlist_name_237, tmp_level_name_237);
        if (tmp_import_name_from_329 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 429;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_329)) {
           tmp_assign_source_386 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_329,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HGTVComShowIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_386 = IMPORT_NAME(tmp_import_name_from_329, const_str_plain_HGTVComShowIE);
        }

        Py_DECREF(tmp_import_name_from_329);
        if (tmp_assign_source_386 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 429;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HGTVComShowIE, tmp_assign_source_386);
    }
    {
        PyObject *tmp_assign_source_387;
        PyObject *tmp_import_name_from_330;
        PyObject *tmp_name_name_238;
        PyObject *tmp_globals_name_238;
        PyObject *tmp_locals_name_238;
        PyObject *tmp_fromlist_name_238;
        PyObject *tmp_level_name_238;
        tmp_name_name_238 = const_str_plain_hketv;
        tmp_globals_name_238 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_238 = Py_None;
        tmp_fromlist_name_238 = const_tuple_str_plain_HKETVIE_tuple;
        tmp_level_name_238 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 430;
        tmp_import_name_from_330 = IMPORT_MODULE5(tmp_name_name_238, tmp_globals_name_238, tmp_locals_name_238, tmp_fromlist_name_238, tmp_level_name_238);
        if (tmp_import_name_from_330 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 430;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_330)) {
           tmp_assign_source_387 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_330,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HKETVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_387 = IMPORT_NAME(tmp_import_name_from_330, const_str_plain_HKETVIE);
        }

        Py_DECREF(tmp_import_name_from_330);
        if (tmp_assign_source_387 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 430;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HKETVIE, tmp_assign_source_387);
    }
    {
        PyObject *tmp_assign_source_388;
        PyObject *tmp_import_name_from_331;
        PyObject *tmp_name_name_239;
        PyObject *tmp_globals_name_239;
        PyObject *tmp_locals_name_239;
        PyObject *tmp_fromlist_name_239;
        PyObject *tmp_level_name_239;
        tmp_name_name_239 = const_str_plain_hidive;
        tmp_globals_name_239 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_239 = Py_None;
        tmp_fromlist_name_239 = const_tuple_str_plain_HiDiveIE_tuple;
        tmp_level_name_239 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 431;
        tmp_import_name_from_331 = IMPORT_MODULE5(tmp_name_name_239, tmp_globals_name_239, tmp_locals_name_239, tmp_fromlist_name_239, tmp_level_name_239);
        if (tmp_import_name_from_331 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 431;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_331)) {
           tmp_assign_source_388 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_331,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HiDiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_388 = IMPORT_NAME(tmp_import_name_from_331, const_str_plain_HiDiveIE);
        }

        Py_DECREF(tmp_import_name_from_331);
        if (tmp_assign_source_388 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 431;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HiDiveIE, tmp_assign_source_388);
    }
    {
        PyObject *tmp_assign_source_389;
        PyObject *tmp_import_name_from_332;
        PyObject *tmp_name_name_240;
        PyObject *tmp_globals_name_240;
        PyObject *tmp_locals_name_240;
        PyObject *tmp_fromlist_name_240;
        PyObject *tmp_level_name_240;
        tmp_name_name_240 = const_str_plain_historicfilms;
        tmp_globals_name_240 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_240 = Py_None;
        tmp_fromlist_name_240 = const_tuple_str_plain_HistoricFilmsIE_tuple;
        tmp_level_name_240 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 432;
        tmp_import_name_from_332 = IMPORT_MODULE5(tmp_name_name_240, tmp_globals_name_240, tmp_locals_name_240, tmp_fromlist_name_240, tmp_level_name_240);
        if (tmp_import_name_from_332 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 432;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_332)) {
           tmp_assign_source_389 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_332,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HistoricFilmsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_389 = IMPORT_NAME(tmp_import_name_from_332, const_str_plain_HistoricFilmsIE);
        }

        Py_DECREF(tmp_import_name_from_332);
        if (tmp_assign_source_389 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 432;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HistoricFilmsIE, tmp_assign_source_389);
    }
    {
        PyObject *tmp_assign_source_390;
        PyObject *tmp_name_name_241;
        PyObject *tmp_globals_name_241;
        PyObject *tmp_locals_name_241;
        PyObject *tmp_fromlist_name_241;
        PyObject *tmp_level_name_241;
        tmp_name_name_241 = const_str_plain_hitbox;
        tmp_globals_name_241 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_241 = Py_None;
        tmp_fromlist_name_241 = const_tuple_str_plain_HitboxIE_str_plain_HitboxLiveIE_tuple;
        tmp_level_name_241 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 433;
        tmp_assign_source_390 = IMPORT_MODULE5(tmp_name_name_241, tmp_globals_name_241, tmp_locals_name_241, tmp_fromlist_name_241, tmp_level_name_241);
        if (tmp_assign_source_390 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 433;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_55__module == NULL);
        tmp_import_from_55__module = tmp_assign_source_390;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_391;
        PyObject *tmp_import_name_from_333;
        CHECK_OBJECT(tmp_import_from_55__module);
        tmp_import_name_from_333 = tmp_import_from_55__module;
        if (PyModule_Check(tmp_import_name_from_333)) {
           tmp_assign_source_391 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_333,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HitboxIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_391 = IMPORT_NAME(tmp_import_name_from_333, const_str_plain_HitboxIE);
        }

        if (tmp_assign_source_391 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 433;

            goto try_except_handler_55;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HitboxIE, tmp_assign_source_391);
    }
    {
        PyObject *tmp_assign_source_392;
        PyObject *tmp_import_name_from_334;
        CHECK_OBJECT(tmp_import_from_55__module);
        tmp_import_name_from_334 = tmp_import_from_55__module;
        if (PyModule_Check(tmp_import_name_from_334)) {
           tmp_assign_source_392 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_334,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HitboxLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_392 = IMPORT_NAME(tmp_import_name_from_334, const_str_plain_HitboxLiveIE);
        }

        if (tmp_assign_source_392 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 433;

            goto try_except_handler_55;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HitboxLiveIE, tmp_assign_source_392);
    }
    goto try_end_55;
    // Exception handler code:
    try_except_handler_55:;
    exception_keeper_type_55 = exception_type;
    exception_keeper_value_55 = exception_value;
    exception_keeper_tb_55 = exception_tb;
    exception_keeper_lineno_55 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_55__module);
    Py_DECREF(tmp_import_from_55__module);
    tmp_import_from_55__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_55;
    exception_value = exception_keeper_value_55;
    exception_tb = exception_keeper_tb_55;
    exception_lineno = exception_keeper_lineno_55;

    goto frame_exception_exit_1;
    // End of try:
    try_end_55:;
    CHECK_OBJECT(tmp_import_from_55__module);
    Py_DECREF(tmp_import_from_55__module);
    tmp_import_from_55__module = NULL;

    {
        PyObject *tmp_assign_source_393;
        PyObject *tmp_import_name_from_335;
        PyObject *tmp_name_name_242;
        PyObject *tmp_globals_name_242;
        PyObject *tmp_locals_name_242;
        PyObject *tmp_fromlist_name_242;
        PyObject *tmp_level_name_242;
        tmp_name_name_242 = const_str_plain_hitrecord;
        tmp_globals_name_242 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_242 = Py_None;
        tmp_fromlist_name_242 = const_tuple_str_plain_HitRecordIE_tuple;
        tmp_level_name_242 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 434;
        tmp_import_name_from_335 = IMPORT_MODULE5(tmp_name_name_242, tmp_globals_name_242, tmp_locals_name_242, tmp_fromlist_name_242, tmp_level_name_242);
        if (tmp_import_name_from_335 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 434;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_335)) {
           tmp_assign_source_393 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_335,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HitRecordIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_393 = IMPORT_NAME(tmp_import_name_from_335, const_str_plain_HitRecordIE);
        }

        Py_DECREF(tmp_import_name_from_335);
        if (tmp_assign_source_393 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 434;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HitRecordIE, tmp_assign_source_393);
    }
    {
        PyObject *tmp_assign_source_394;
        PyObject *tmp_import_name_from_336;
        PyObject *tmp_name_name_243;
        PyObject *tmp_globals_name_243;
        PyObject *tmp_locals_name_243;
        PyObject *tmp_fromlist_name_243;
        PyObject *tmp_level_name_243;
        tmp_name_name_243 = const_str_plain_hornbunny;
        tmp_globals_name_243 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_243 = Py_None;
        tmp_fromlist_name_243 = const_tuple_str_plain_HornBunnyIE_tuple;
        tmp_level_name_243 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 435;
        tmp_import_name_from_336 = IMPORT_MODULE5(tmp_name_name_243, tmp_globals_name_243, tmp_locals_name_243, tmp_fromlist_name_243, tmp_level_name_243);
        if (tmp_import_name_from_336 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 435;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_336)) {
           tmp_assign_source_394 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_336,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HornBunnyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_394 = IMPORT_NAME(tmp_import_name_from_336, const_str_plain_HornBunnyIE);
        }

        Py_DECREF(tmp_import_name_from_336);
        if (tmp_assign_source_394 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 435;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HornBunnyIE, tmp_assign_source_394);
    }
    {
        PyObject *tmp_assign_source_395;
        PyObject *tmp_import_name_from_337;
        PyObject *tmp_name_name_244;
        PyObject *tmp_globals_name_244;
        PyObject *tmp_locals_name_244;
        PyObject *tmp_fromlist_name_244;
        PyObject *tmp_level_name_244;
        tmp_name_name_244 = const_str_plain_hotnewhiphop;
        tmp_globals_name_244 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_244 = Py_None;
        tmp_fromlist_name_244 = const_tuple_str_plain_HotNewHipHopIE_tuple;
        tmp_level_name_244 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 436;
        tmp_import_name_from_337 = IMPORT_MODULE5(tmp_name_name_244, tmp_globals_name_244, tmp_locals_name_244, tmp_fromlist_name_244, tmp_level_name_244);
        if (tmp_import_name_from_337 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 436;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_337)) {
           tmp_assign_source_395 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_337,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HotNewHipHopIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_395 = IMPORT_NAME(tmp_import_name_from_337, const_str_plain_HotNewHipHopIE);
        }

        Py_DECREF(tmp_import_name_from_337);
        if (tmp_assign_source_395 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 436;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HotNewHipHopIE, tmp_assign_source_395);
    }
    {
        PyObject *tmp_assign_source_396;
        PyObject *tmp_name_name_245;
        PyObject *tmp_globals_name_245;
        PyObject *tmp_locals_name_245;
        PyObject *tmp_fromlist_name_245;
        PyObject *tmp_level_name_245;
        tmp_name_name_245 = const_str_plain_hotstar;
        tmp_globals_name_245 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_245 = Py_None;
        tmp_fromlist_name_245 = const_tuple_str_plain_HotStarIE_str_plain_HotStarPlaylistIE_tuple;
        tmp_level_name_245 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 437;
        tmp_assign_source_396 = IMPORT_MODULE5(tmp_name_name_245, tmp_globals_name_245, tmp_locals_name_245, tmp_fromlist_name_245, tmp_level_name_245);
        if (tmp_assign_source_396 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 437;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_56__module == NULL);
        tmp_import_from_56__module = tmp_assign_source_396;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_397;
        PyObject *tmp_import_name_from_338;
        CHECK_OBJECT(tmp_import_from_56__module);
        tmp_import_name_from_338 = tmp_import_from_56__module;
        if (PyModule_Check(tmp_import_name_from_338)) {
           tmp_assign_source_397 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_338,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HotStarIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_397 = IMPORT_NAME(tmp_import_name_from_338, const_str_plain_HotStarIE);
        }

        if (tmp_assign_source_397 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 437;

            goto try_except_handler_56;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HotStarIE, tmp_assign_source_397);
    }
    {
        PyObject *tmp_assign_source_398;
        PyObject *tmp_import_name_from_339;
        CHECK_OBJECT(tmp_import_from_56__module);
        tmp_import_name_from_339 = tmp_import_from_56__module;
        if (PyModule_Check(tmp_import_name_from_339)) {
           tmp_assign_source_398 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_339,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HotStarPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_398 = IMPORT_NAME(tmp_import_name_from_339, const_str_plain_HotStarPlaylistIE);
        }

        if (tmp_assign_source_398 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 437;

            goto try_except_handler_56;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HotStarPlaylistIE, tmp_assign_source_398);
    }
    goto try_end_56;
    // Exception handler code:
    try_except_handler_56:;
    exception_keeper_type_56 = exception_type;
    exception_keeper_value_56 = exception_value;
    exception_keeper_tb_56 = exception_tb;
    exception_keeper_lineno_56 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_56__module);
    Py_DECREF(tmp_import_from_56__module);
    tmp_import_from_56__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_56;
    exception_value = exception_keeper_value_56;
    exception_tb = exception_keeper_tb_56;
    exception_lineno = exception_keeper_lineno_56;

    goto frame_exception_exit_1;
    // End of try:
    try_end_56:;
    CHECK_OBJECT(tmp_import_from_56__module);
    Py_DECREF(tmp_import_from_56__module);
    tmp_import_from_56__module = NULL;

    {
        PyObject *tmp_assign_source_399;
        PyObject *tmp_import_name_from_340;
        PyObject *tmp_name_name_246;
        PyObject *tmp_globals_name_246;
        PyObject *tmp_locals_name_246;
        PyObject *tmp_fromlist_name_246;
        PyObject *tmp_level_name_246;
        tmp_name_name_246 = const_str_plain_howcast;
        tmp_globals_name_246 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_246 = Py_None;
        tmp_fromlist_name_246 = const_tuple_str_plain_HowcastIE_tuple;
        tmp_level_name_246 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 441;
        tmp_import_name_from_340 = IMPORT_MODULE5(tmp_name_name_246, tmp_globals_name_246, tmp_locals_name_246, tmp_fromlist_name_246, tmp_level_name_246);
        if (tmp_import_name_from_340 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 441;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_340)) {
           tmp_assign_source_399 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_340,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HowcastIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_399 = IMPORT_NAME(tmp_import_name_from_340, const_str_plain_HowcastIE);
        }

        Py_DECREF(tmp_import_name_from_340);
        if (tmp_assign_source_399 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 441;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HowcastIE, tmp_assign_source_399);
    }
    {
        PyObject *tmp_assign_source_400;
        PyObject *tmp_import_name_from_341;
        PyObject *tmp_name_name_247;
        PyObject *tmp_globals_name_247;
        PyObject *tmp_locals_name_247;
        PyObject *tmp_fromlist_name_247;
        PyObject *tmp_level_name_247;
        tmp_name_name_247 = const_str_plain_howstuffworks;
        tmp_globals_name_247 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_247 = Py_None;
        tmp_fromlist_name_247 = const_tuple_str_plain_HowStuffWorksIE_tuple;
        tmp_level_name_247 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 442;
        tmp_import_name_from_341 = IMPORT_MODULE5(tmp_name_name_247, tmp_globals_name_247, tmp_locals_name_247, tmp_fromlist_name_247, tmp_level_name_247);
        if (tmp_import_name_from_341 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 442;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_341)) {
           tmp_assign_source_400 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_341,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HowStuffWorksIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_400 = IMPORT_NAME(tmp_import_name_from_341, const_str_plain_HowStuffWorksIE);
        }

        Py_DECREF(tmp_import_name_from_341);
        if (tmp_assign_source_400 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 442;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HowStuffWorksIE, tmp_assign_source_400);
    }
    {
        PyObject *tmp_assign_source_401;
        PyObject *tmp_name_name_248;
        PyObject *tmp_globals_name_248;
        PyObject *tmp_locals_name_248;
        PyObject *tmp_fromlist_name_248;
        PyObject *tmp_level_name_248;
        tmp_name_name_248 = const_str_plain_hrti;
        tmp_globals_name_248 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_248 = Py_None;
        tmp_fromlist_name_248 = const_tuple_str_plain_HRTiIE_str_plain_HRTiPlaylistIE_tuple;
        tmp_level_name_248 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 443;
        tmp_assign_source_401 = IMPORT_MODULE5(tmp_name_name_248, tmp_globals_name_248, tmp_locals_name_248, tmp_fromlist_name_248, tmp_level_name_248);
        if (tmp_assign_source_401 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 443;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_57__module == NULL);
        tmp_import_from_57__module = tmp_assign_source_401;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_402;
        PyObject *tmp_import_name_from_342;
        CHECK_OBJECT(tmp_import_from_57__module);
        tmp_import_name_from_342 = tmp_import_from_57__module;
        if (PyModule_Check(tmp_import_name_from_342)) {
           tmp_assign_source_402 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_342,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HRTiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_402 = IMPORT_NAME(tmp_import_name_from_342, const_str_plain_HRTiIE);
        }

        if (tmp_assign_source_402 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 443;

            goto try_except_handler_57;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HRTiIE, tmp_assign_source_402);
    }
    {
        PyObject *tmp_assign_source_403;
        PyObject *tmp_import_name_from_343;
        CHECK_OBJECT(tmp_import_from_57__module);
        tmp_import_name_from_343 = tmp_import_from_57__module;
        if (PyModule_Check(tmp_import_name_from_343)) {
           tmp_assign_source_403 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_343,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HRTiPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_403 = IMPORT_NAME(tmp_import_name_from_343, const_str_plain_HRTiPlaylistIE);
        }

        if (tmp_assign_source_403 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 443;

            goto try_except_handler_57;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HRTiPlaylistIE, tmp_assign_source_403);
    }
    goto try_end_57;
    // Exception handler code:
    try_except_handler_57:;
    exception_keeper_type_57 = exception_type;
    exception_keeper_value_57 = exception_value;
    exception_keeper_tb_57 = exception_tb;
    exception_keeper_lineno_57 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_57__module);
    Py_DECREF(tmp_import_from_57__module);
    tmp_import_from_57__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_57;
    exception_value = exception_keeper_value_57;
    exception_tb = exception_keeper_tb_57;
    exception_lineno = exception_keeper_lineno_57;

    goto frame_exception_exit_1;
    // End of try:
    try_end_57:;
    CHECK_OBJECT(tmp_import_from_57__module);
    Py_DECREF(tmp_import_from_57__module);
    tmp_import_from_57__module = NULL;

    {
        PyObject *tmp_assign_source_404;
        PyObject *tmp_import_name_from_344;
        PyObject *tmp_name_name_249;
        PyObject *tmp_globals_name_249;
        PyObject *tmp_locals_name_249;
        PyObject *tmp_fromlist_name_249;
        PyObject *tmp_level_name_249;
        tmp_name_name_249 = const_str_plain_huajiao;
        tmp_globals_name_249 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_249 = Py_None;
        tmp_fromlist_name_249 = const_tuple_str_plain_HuajiaoIE_tuple;
        tmp_level_name_249 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 447;
        tmp_import_name_from_344 = IMPORT_MODULE5(tmp_name_name_249, tmp_globals_name_249, tmp_locals_name_249, tmp_fromlist_name_249, tmp_level_name_249);
        if (tmp_import_name_from_344 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 447;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_344)) {
           tmp_assign_source_404 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_344,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HuajiaoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_404 = IMPORT_NAME(tmp_import_name_from_344, const_str_plain_HuajiaoIE);
        }

        Py_DECREF(tmp_import_name_from_344);
        if (tmp_assign_source_404 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 447;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HuajiaoIE, tmp_assign_source_404);
    }
    {
        PyObject *tmp_assign_source_405;
        PyObject *tmp_import_name_from_345;
        PyObject *tmp_name_name_250;
        PyObject *tmp_globals_name_250;
        PyObject *tmp_locals_name_250;
        PyObject *tmp_fromlist_name_250;
        PyObject *tmp_level_name_250;
        tmp_name_name_250 = const_str_plain_huffpost;
        tmp_globals_name_250 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_250 = Py_None;
        tmp_fromlist_name_250 = const_tuple_str_plain_HuffPostIE_tuple;
        tmp_level_name_250 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 448;
        tmp_import_name_from_345 = IMPORT_MODULE5(tmp_name_name_250, tmp_globals_name_250, tmp_locals_name_250, tmp_fromlist_name_250, tmp_level_name_250);
        if (tmp_import_name_from_345 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 448;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_345)) {
           tmp_assign_source_405 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_345,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HuffPostIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_405 = IMPORT_NAME(tmp_import_name_from_345, const_str_plain_HuffPostIE);
        }

        Py_DECREF(tmp_import_name_from_345);
        if (tmp_assign_source_405 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 448;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HuffPostIE, tmp_assign_source_405);
    }
    {
        PyObject *tmp_assign_source_406;
        PyObject *tmp_name_name_251;
        PyObject *tmp_globals_name_251;
        PyObject *tmp_locals_name_251;
        PyObject *tmp_fromlist_name_251;
        PyObject *tmp_level_name_251;
        tmp_name_name_251 = const_str_plain_hungama;
        tmp_globals_name_251 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_251 = Py_None;
        tmp_fromlist_name_251 = const_tuple_str_plain_HungamaIE_str_plain_HungamaSongIE_tuple;
        tmp_level_name_251 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 449;
        tmp_assign_source_406 = IMPORT_MODULE5(tmp_name_name_251, tmp_globals_name_251, tmp_locals_name_251, tmp_fromlist_name_251, tmp_level_name_251);
        if (tmp_assign_source_406 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 449;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_58__module == NULL);
        tmp_import_from_58__module = tmp_assign_source_406;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_407;
        PyObject *tmp_import_name_from_346;
        CHECK_OBJECT(tmp_import_from_58__module);
        tmp_import_name_from_346 = tmp_import_from_58__module;
        if (PyModule_Check(tmp_import_name_from_346)) {
           tmp_assign_source_407 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_346,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HungamaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_407 = IMPORT_NAME(tmp_import_name_from_346, const_str_plain_HungamaIE);
        }

        if (tmp_assign_source_407 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 449;

            goto try_except_handler_58;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HungamaIE, tmp_assign_source_407);
    }
    {
        PyObject *tmp_assign_source_408;
        PyObject *tmp_import_name_from_347;
        CHECK_OBJECT(tmp_import_from_58__module);
        tmp_import_name_from_347 = tmp_import_from_58__module;
        if (PyModule_Check(tmp_import_name_from_347)) {
           tmp_assign_source_408 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_347,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HungamaSongIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_408 = IMPORT_NAME(tmp_import_name_from_347, const_str_plain_HungamaSongIE);
        }

        if (tmp_assign_source_408 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 449;

            goto try_except_handler_58;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HungamaSongIE, tmp_assign_source_408);
    }
    goto try_end_58;
    // Exception handler code:
    try_except_handler_58:;
    exception_keeper_type_58 = exception_type;
    exception_keeper_value_58 = exception_value;
    exception_keeper_tb_58 = exception_tb;
    exception_keeper_lineno_58 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_58__module);
    Py_DECREF(tmp_import_from_58__module);
    tmp_import_from_58__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_58;
    exception_value = exception_keeper_value_58;
    exception_tb = exception_keeper_tb_58;
    exception_lineno = exception_keeper_lineno_58;

    goto frame_exception_exit_1;
    // End of try:
    try_end_58:;
    CHECK_OBJECT(tmp_import_from_58__module);
    Py_DECREF(tmp_import_from_58__module);
    tmp_import_from_58__module = NULL;

    {
        PyObject *tmp_assign_source_409;
        PyObject *tmp_import_name_from_348;
        PyObject *tmp_name_name_252;
        PyObject *tmp_globals_name_252;
        PyObject *tmp_locals_name_252;
        PyObject *tmp_fromlist_name_252;
        PyObject *tmp_level_name_252;
        tmp_name_name_252 = const_str_plain_hypem;
        tmp_globals_name_252 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_252 = Py_None;
        tmp_fromlist_name_252 = const_tuple_str_plain_HypemIE_tuple;
        tmp_level_name_252 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 453;
        tmp_import_name_from_348 = IMPORT_MODULE5(tmp_name_name_252, tmp_globals_name_252, tmp_locals_name_252, tmp_fromlist_name_252, tmp_level_name_252);
        if (tmp_import_name_from_348 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 453;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_348)) {
           tmp_assign_source_409 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_348,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HypemIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_409 = IMPORT_NAME(tmp_import_name_from_348, const_str_plain_HypemIE);
        }

        Py_DECREF(tmp_import_name_from_348);
        if (tmp_assign_source_409 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 453;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HypemIE, tmp_assign_source_409);
    }
    {
        PyObject *tmp_assign_source_410;
        PyObject *tmp_name_name_253;
        PyObject *tmp_globals_name_253;
        PyObject *tmp_locals_name_253;
        PyObject *tmp_fromlist_name_253;
        PyObject *tmp_level_name_253;
        tmp_name_name_253 = const_str_plain_ign;
        tmp_globals_name_253 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_253 = Py_None;
        tmp_fromlist_name_253 = const_tuple_str_plain_IGNIE_str_plain_OneUPIE_str_plain_PCMagIE_tuple;
        tmp_level_name_253 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 454;
        tmp_assign_source_410 = IMPORT_MODULE5(tmp_name_name_253, tmp_globals_name_253, tmp_locals_name_253, tmp_fromlist_name_253, tmp_level_name_253);
        if (tmp_assign_source_410 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 454;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_59__module == NULL);
        tmp_import_from_59__module = tmp_assign_source_410;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_411;
        PyObject *tmp_import_name_from_349;
        CHECK_OBJECT(tmp_import_from_59__module);
        tmp_import_name_from_349 = tmp_import_from_59__module;
        if (PyModule_Check(tmp_import_name_from_349)) {
           tmp_assign_source_411 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_349,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_IGNIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_411 = IMPORT_NAME(tmp_import_name_from_349, const_str_plain_IGNIE);
        }

        if (tmp_assign_source_411 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 454;

            goto try_except_handler_59;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_IGNIE, tmp_assign_source_411);
    }
    {
        PyObject *tmp_assign_source_412;
        PyObject *tmp_import_name_from_350;
        CHECK_OBJECT(tmp_import_from_59__module);
        tmp_import_name_from_350 = tmp_import_from_59__module;
        if (PyModule_Check(tmp_import_name_from_350)) {
           tmp_assign_source_412 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_350,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OneUPIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_412 = IMPORT_NAME(tmp_import_name_from_350, const_str_plain_OneUPIE);
        }

        if (tmp_assign_source_412 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 454;

            goto try_except_handler_59;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OneUPIE, tmp_assign_source_412);
    }
    {
        PyObject *tmp_assign_source_413;
        PyObject *tmp_import_name_from_351;
        CHECK_OBJECT(tmp_import_from_59__module);
        tmp_import_name_from_351 = tmp_import_from_59__module;
        if (PyModule_Check(tmp_import_name_from_351)) {
           tmp_assign_source_413 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_351,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PCMagIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_413 = IMPORT_NAME(tmp_import_name_from_351, const_str_plain_PCMagIE);
        }

        if (tmp_assign_source_413 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 454;

            goto try_except_handler_59;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PCMagIE, tmp_assign_source_413);
    }
    goto try_end_59;
    // Exception handler code:
    try_except_handler_59:;
    exception_keeper_type_59 = exception_type;
    exception_keeper_value_59 = exception_value;
    exception_keeper_tb_59 = exception_tb;
    exception_keeper_lineno_59 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_59__module);
    Py_DECREF(tmp_import_from_59__module);
    tmp_import_from_59__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_59;
    exception_value = exception_keeper_value_59;
    exception_tb = exception_keeper_tb_59;
    exception_lineno = exception_keeper_lineno_59;

    goto frame_exception_exit_1;
    // End of try:
    try_end_59:;
    CHECK_OBJECT(tmp_import_from_59__module);
    Py_DECREF(tmp_import_from_59__module);
    tmp_import_from_59__module = NULL;

    {
        PyObject *tmp_assign_source_414;
        PyObject *tmp_name_name_254;
        PyObject *tmp_globals_name_254;
        PyObject *tmp_locals_name_254;
        PyObject *tmp_fromlist_name_254;
        PyObject *tmp_level_name_254;
        tmp_name_name_254 = const_str_plain_imdb;
        tmp_globals_name_254 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_254 = Py_None;
        tmp_fromlist_name_254 = const_tuple_str_plain_ImdbIE_str_plain_ImdbListIE_tuple;
        tmp_level_name_254 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 459;
        tmp_assign_source_414 = IMPORT_MODULE5(tmp_name_name_254, tmp_globals_name_254, tmp_locals_name_254, tmp_fromlist_name_254, tmp_level_name_254);
        if (tmp_assign_source_414 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 459;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_60__module == NULL);
        tmp_import_from_60__module = tmp_assign_source_414;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_415;
        PyObject *tmp_import_name_from_352;
        CHECK_OBJECT(tmp_import_from_60__module);
        tmp_import_name_from_352 = tmp_import_from_60__module;
        if (PyModule_Check(tmp_import_name_from_352)) {
           tmp_assign_source_415 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_352,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ImdbIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_415 = IMPORT_NAME(tmp_import_name_from_352, const_str_plain_ImdbIE);
        }

        if (tmp_assign_source_415 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 459;

            goto try_except_handler_60;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ImdbIE, tmp_assign_source_415);
    }
    {
        PyObject *tmp_assign_source_416;
        PyObject *tmp_import_name_from_353;
        CHECK_OBJECT(tmp_import_from_60__module);
        tmp_import_name_from_353 = tmp_import_from_60__module;
        if (PyModule_Check(tmp_import_name_from_353)) {
           tmp_assign_source_416 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_353,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ImdbListIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_416 = IMPORT_NAME(tmp_import_name_from_353, const_str_plain_ImdbListIE);
        }

        if (tmp_assign_source_416 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 459;

            goto try_except_handler_60;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ImdbListIE, tmp_assign_source_416);
    }
    goto try_end_60;
    // Exception handler code:
    try_except_handler_60:;
    exception_keeper_type_60 = exception_type;
    exception_keeper_value_60 = exception_value;
    exception_keeper_tb_60 = exception_tb;
    exception_keeper_lineno_60 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_60__module);
    Py_DECREF(tmp_import_from_60__module);
    tmp_import_from_60__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_60;
    exception_value = exception_keeper_value_60;
    exception_tb = exception_keeper_tb_60;
    exception_lineno = exception_keeper_lineno_60;

    goto frame_exception_exit_1;
    // End of try:
    try_end_60:;
    CHECK_OBJECT(tmp_import_from_60__module);
    Py_DECREF(tmp_import_from_60__module);
    tmp_import_from_60__module = NULL;

    {
        PyObject *tmp_assign_source_417;
        PyObject *tmp_name_name_255;
        PyObject *tmp_globals_name_255;
        PyObject *tmp_locals_name_255;
        PyObject *tmp_fromlist_name_255;
        PyObject *tmp_level_name_255;
        tmp_name_name_255 = const_str_plain_imgur;
        tmp_globals_name_255 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_255 = Py_None;
        tmp_fromlist_name_255 = const_tuple_95536fd190d17c4316e164a07c53ca3c_tuple;
        tmp_level_name_255 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 463;
        tmp_assign_source_417 = IMPORT_MODULE5(tmp_name_name_255, tmp_globals_name_255, tmp_locals_name_255, tmp_fromlist_name_255, tmp_level_name_255);
        if (tmp_assign_source_417 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 463;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_61__module == NULL);
        tmp_import_from_61__module = tmp_assign_source_417;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_418;
        PyObject *tmp_import_name_from_354;
        CHECK_OBJECT(tmp_import_from_61__module);
        tmp_import_name_from_354 = tmp_import_from_61__module;
        if (PyModule_Check(tmp_import_name_from_354)) {
           tmp_assign_source_418 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_354,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ImgurIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_418 = IMPORT_NAME(tmp_import_name_from_354, const_str_plain_ImgurIE);
        }

        if (tmp_assign_source_418 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 463;

            goto try_except_handler_61;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ImgurIE, tmp_assign_source_418);
    }
    {
        PyObject *tmp_assign_source_419;
        PyObject *tmp_import_name_from_355;
        CHECK_OBJECT(tmp_import_from_61__module);
        tmp_import_name_from_355 = tmp_import_from_61__module;
        if (PyModule_Check(tmp_import_name_from_355)) {
           tmp_assign_source_419 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_355,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ImgurAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_419 = IMPORT_NAME(tmp_import_name_from_355, const_str_plain_ImgurAlbumIE);
        }

        if (tmp_assign_source_419 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 463;

            goto try_except_handler_61;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ImgurAlbumIE, tmp_assign_source_419);
    }
    {
        PyObject *tmp_assign_source_420;
        PyObject *tmp_import_name_from_356;
        CHECK_OBJECT(tmp_import_from_61__module);
        tmp_import_name_from_356 = tmp_import_from_61__module;
        if (PyModule_Check(tmp_import_name_from_356)) {
           tmp_assign_source_420 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_356,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ImgurGalleryIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_420 = IMPORT_NAME(tmp_import_name_from_356, const_str_plain_ImgurGalleryIE);
        }

        if (tmp_assign_source_420 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 463;

            goto try_except_handler_61;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ImgurGalleryIE, tmp_assign_source_420);
    }
    goto try_end_61;
    // Exception handler code:
    try_except_handler_61:;
    exception_keeper_type_61 = exception_type;
    exception_keeper_value_61 = exception_value;
    exception_keeper_tb_61 = exception_tb;
    exception_keeper_lineno_61 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_61__module);
    Py_DECREF(tmp_import_from_61__module);
    tmp_import_from_61__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_61;
    exception_value = exception_keeper_value_61;
    exception_tb = exception_keeper_tb_61;
    exception_lineno = exception_keeper_lineno_61;

    goto frame_exception_exit_1;
    // End of try:
    try_end_61:;
    CHECK_OBJECT(tmp_import_from_61__module);
    Py_DECREF(tmp_import_from_61__module);
    tmp_import_from_61__module = NULL;

    {
        PyObject *tmp_assign_source_421;
        PyObject *tmp_import_name_from_357;
        PyObject *tmp_name_name_256;
        PyObject *tmp_globals_name_256;
        PyObject *tmp_locals_name_256;
        PyObject *tmp_fromlist_name_256;
        PyObject *tmp_level_name_256;
        tmp_name_name_256 = const_str_plain_ina;
        tmp_globals_name_256 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_256 = Py_None;
        tmp_fromlist_name_256 = const_tuple_str_plain_InaIE_tuple;
        tmp_level_name_256 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 468;
        tmp_import_name_from_357 = IMPORT_MODULE5(tmp_name_name_256, tmp_globals_name_256, tmp_locals_name_256, tmp_fromlist_name_256, tmp_level_name_256);
        if (tmp_import_name_from_357 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 468;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_357)) {
           tmp_assign_source_421 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_357,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_InaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_421 = IMPORT_NAME(tmp_import_name_from_357, const_str_plain_InaIE);
        }

        Py_DECREF(tmp_import_name_from_357);
        if (tmp_assign_source_421 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 468;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_InaIE, tmp_assign_source_421);
    }
    {
        PyObject *tmp_assign_source_422;
        PyObject *tmp_import_name_from_358;
        PyObject *tmp_name_name_257;
        PyObject *tmp_globals_name_257;
        PyObject *tmp_locals_name_257;
        PyObject *tmp_fromlist_name_257;
        PyObject *tmp_level_name_257;
        tmp_name_name_257 = const_str_plain_inc;
        tmp_globals_name_257 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_257 = Py_None;
        tmp_fromlist_name_257 = const_tuple_str_plain_IncIE_tuple;
        tmp_level_name_257 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 469;
        tmp_import_name_from_358 = IMPORT_MODULE5(tmp_name_name_257, tmp_globals_name_257, tmp_locals_name_257, tmp_fromlist_name_257, tmp_level_name_257);
        if (tmp_import_name_from_358 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 469;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_358)) {
           tmp_assign_source_422 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_358,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_IncIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_422 = IMPORT_NAME(tmp_import_name_from_358, const_str_plain_IncIE);
        }

        Py_DECREF(tmp_import_name_from_358);
        if (tmp_assign_source_422 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 469;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_IncIE, tmp_assign_source_422);
    }
    {
        PyObject *tmp_assign_source_423;
        PyObject *tmp_import_name_from_359;
        PyObject *tmp_name_name_258;
        PyObject *tmp_globals_name_258;
        PyObject *tmp_locals_name_258;
        PyObject *tmp_fromlist_name_258;
        PyObject *tmp_level_name_258;
        tmp_name_name_258 = const_str_plain_indavideo;
        tmp_globals_name_258 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_258 = Py_None;
        tmp_fromlist_name_258 = const_tuple_str_plain_IndavideoEmbedIE_tuple;
        tmp_level_name_258 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 470;
        tmp_import_name_from_359 = IMPORT_MODULE5(tmp_name_name_258, tmp_globals_name_258, tmp_locals_name_258, tmp_fromlist_name_258, tmp_level_name_258);
        if (tmp_import_name_from_359 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 470;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_359)) {
           tmp_assign_source_423 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_359,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_IndavideoEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_423 = IMPORT_NAME(tmp_import_name_from_359, const_str_plain_IndavideoEmbedIE);
        }

        Py_DECREF(tmp_import_name_from_359);
        if (tmp_assign_source_423 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 470;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_IndavideoEmbedIE, tmp_assign_source_423);
    }
    {
        PyObject *tmp_assign_source_424;
        PyObject *tmp_import_name_from_360;
        PyObject *tmp_name_name_259;
        PyObject *tmp_globals_name_259;
        PyObject *tmp_locals_name_259;
        PyObject *tmp_fromlist_name_259;
        PyObject *tmp_level_name_259;
        tmp_name_name_259 = const_str_plain_infoq;
        tmp_globals_name_259 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_259 = Py_None;
        tmp_fromlist_name_259 = const_tuple_str_plain_InfoQIE_tuple;
        tmp_level_name_259 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 471;
        tmp_import_name_from_360 = IMPORT_MODULE5(tmp_name_name_259, tmp_globals_name_259, tmp_locals_name_259, tmp_fromlist_name_259, tmp_level_name_259);
        if (tmp_import_name_from_360 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 471;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_360)) {
           tmp_assign_source_424 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_360,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_InfoQIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_424 = IMPORT_NAME(tmp_import_name_from_360, const_str_plain_InfoQIE);
        }

        Py_DECREF(tmp_import_name_from_360);
        if (tmp_assign_source_424 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 471;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_InfoQIE, tmp_assign_source_424);
    }
    {
        PyObject *tmp_assign_source_425;
        PyObject *tmp_name_name_260;
        PyObject *tmp_globals_name_260;
        PyObject *tmp_locals_name_260;
        PyObject *tmp_fromlist_name_260;
        PyObject *tmp_level_name_260;
        tmp_name_name_260 = const_str_plain_instagram;
        tmp_globals_name_260 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_260 = Py_None;
        tmp_fromlist_name_260 = const_tuple_9a7b0581322b4a064144df9fbe2bd89a_tuple;
        tmp_level_name_260 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 472;
        tmp_assign_source_425 = IMPORT_MODULE5(tmp_name_name_260, tmp_globals_name_260, tmp_locals_name_260, tmp_fromlist_name_260, tmp_level_name_260);
        if (tmp_assign_source_425 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 472;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_62__module == NULL);
        tmp_import_from_62__module = tmp_assign_source_425;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_426;
        PyObject *tmp_import_name_from_361;
        CHECK_OBJECT(tmp_import_from_62__module);
        tmp_import_name_from_361 = tmp_import_from_62__module;
        if (PyModule_Check(tmp_import_name_from_361)) {
           tmp_assign_source_426 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_361,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_InstagramIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_426 = IMPORT_NAME(tmp_import_name_from_361, const_str_plain_InstagramIE);
        }

        if (tmp_assign_source_426 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 472;

            goto try_except_handler_62;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_InstagramIE, tmp_assign_source_426);
    }
    {
        PyObject *tmp_assign_source_427;
        PyObject *tmp_import_name_from_362;
        CHECK_OBJECT(tmp_import_from_62__module);
        tmp_import_name_from_362 = tmp_import_from_62__module;
        if (PyModule_Check(tmp_import_name_from_362)) {
           tmp_assign_source_427 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_362,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_InstagramUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_427 = IMPORT_NAME(tmp_import_name_from_362, const_str_plain_InstagramUserIE);
        }

        if (tmp_assign_source_427 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 472;

            goto try_except_handler_62;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_InstagramUserIE, tmp_assign_source_427);
    }
    {
        PyObject *tmp_assign_source_428;
        PyObject *tmp_import_name_from_363;
        CHECK_OBJECT(tmp_import_from_62__module);
        tmp_import_name_from_363 = tmp_import_from_62__module;
        if (PyModule_Check(tmp_import_name_from_363)) {
           tmp_assign_source_428 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_363,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_InstagramTagIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_428 = IMPORT_NAME(tmp_import_name_from_363, const_str_plain_InstagramTagIE);
        }

        if (tmp_assign_source_428 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 472;

            goto try_except_handler_62;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_InstagramTagIE, tmp_assign_source_428);
    }
    goto try_end_62;
    // Exception handler code:
    try_except_handler_62:;
    exception_keeper_type_62 = exception_type;
    exception_keeper_value_62 = exception_value;
    exception_keeper_tb_62 = exception_tb;
    exception_keeper_lineno_62 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_62__module);
    Py_DECREF(tmp_import_from_62__module);
    tmp_import_from_62__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_62;
    exception_value = exception_keeper_value_62;
    exception_tb = exception_keeper_tb_62;
    exception_lineno = exception_keeper_lineno_62;

    goto frame_exception_exit_1;
    // End of try:
    try_end_62:;
    CHECK_OBJECT(tmp_import_from_62__module);
    Py_DECREF(tmp_import_from_62__module);
    tmp_import_from_62__module = NULL;

    {
        PyObject *tmp_assign_source_429;
        PyObject *tmp_import_name_from_364;
        PyObject *tmp_name_name_261;
        PyObject *tmp_globals_name_261;
        PyObject *tmp_locals_name_261;
        PyObject *tmp_fromlist_name_261;
        PyObject *tmp_level_name_261;
        tmp_name_name_261 = const_str_plain_internazionale;
        tmp_globals_name_261 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_261 = Py_None;
        tmp_fromlist_name_261 = const_tuple_str_plain_InternazionaleIE_tuple;
        tmp_level_name_261 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 477;
        tmp_import_name_from_364 = IMPORT_MODULE5(tmp_name_name_261, tmp_globals_name_261, tmp_locals_name_261, tmp_fromlist_name_261, tmp_level_name_261);
        if (tmp_import_name_from_364 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 477;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_364)) {
           tmp_assign_source_429 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_364,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_InternazionaleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_429 = IMPORT_NAME(tmp_import_name_from_364, const_str_plain_InternazionaleIE);
        }

        Py_DECREF(tmp_import_name_from_364);
        if (tmp_assign_source_429 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 477;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_InternazionaleIE, tmp_assign_source_429);
    }
    {
        PyObject *tmp_assign_source_430;
        PyObject *tmp_import_name_from_365;
        PyObject *tmp_name_name_262;
        PyObject *tmp_globals_name_262;
        PyObject *tmp_locals_name_262;
        PyObject *tmp_fromlist_name_262;
        PyObject *tmp_level_name_262;
        tmp_name_name_262 = const_str_plain_internetvideoarchive;
        tmp_globals_name_262 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_262 = Py_None;
        tmp_fromlist_name_262 = const_tuple_str_plain_InternetVideoArchiveIE_tuple;
        tmp_level_name_262 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 478;
        tmp_import_name_from_365 = IMPORT_MODULE5(tmp_name_name_262, tmp_globals_name_262, tmp_locals_name_262, tmp_fromlist_name_262, tmp_level_name_262);
        if (tmp_import_name_from_365 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 478;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_365)) {
           tmp_assign_source_430 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_365,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_InternetVideoArchiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_430 = IMPORT_NAME(tmp_import_name_from_365, const_str_plain_InternetVideoArchiveIE);
        }

        Py_DECREF(tmp_import_name_from_365);
        if (tmp_assign_source_430 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 478;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_InternetVideoArchiveIE, tmp_assign_source_430);
    }
    {
        PyObject *tmp_assign_source_431;
        PyObject *tmp_import_name_from_366;
        PyObject *tmp_name_name_263;
        PyObject *tmp_globals_name_263;
        PyObject *tmp_locals_name_263;
        PyObject *tmp_fromlist_name_263;
        PyObject *tmp_level_name_263;
        tmp_name_name_263 = const_str_plain_iprima;
        tmp_globals_name_263 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_263 = Py_None;
        tmp_fromlist_name_263 = const_tuple_str_plain_IPrimaIE_tuple;
        tmp_level_name_263 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 479;
        tmp_import_name_from_366 = IMPORT_MODULE5(tmp_name_name_263, tmp_globals_name_263, tmp_locals_name_263, tmp_fromlist_name_263, tmp_level_name_263);
        if (tmp_import_name_from_366 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 479;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_366)) {
           tmp_assign_source_431 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_366,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_IPrimaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_431 = IMPORT_NAME(tmp_import_name_from_366, const_str_plain_IPrimaIE);
        }

        Py_DECREF(tmp_import_name_from_366);
        if (tmp_assign_source_431 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 479;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_IPrimaIE, tmp_assign_source_431);
    }
    {
        PyObject *tmp_assign_source_432;
        PyObject *tmp_import_name_from_367;
        PyObject *tmp_name_name_264;
        PyObject *tmp_globals_name_264;
        PyObject *tmp_locals_name_264;
        PyObject *tmp_fromlist_name_264;
        PyObject *tmp_level_name_264;
        tmp_name_name_264 = const_str_plain_iqiyi;
        tmp_globals_name_264 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_264 = Py_None;
        tmp_fromlist_name_264 = const_tuple_str_plain_IqiyiIE_tuple;
        tmp_level_name_264 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 480;
        tmp_import_name_from_367 = IMPORT_MODULE5(tmp_name_name_264, tmp_globals_name_264, tmp_locals_name_264, tmp_fromlist_name_264, tmp_level_name_264);
        if (tmp_import_name_from_367 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 480;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_367)) {
           tmp_assign_source_432 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_367,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_IqiyiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_432 = IMPORT_NAME(tmp_import_name_from_367, const_str_plain_IqiyiIE);
        }

        Py_DECREF(tmp_import_name_from_367);
        if (tmp_assign_source_432 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 480;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_IqiyiIE, tmp_assign_source_432);
    }
    {
        PyObject *tmp_assign_source_433;
        PyObject *tmp_import_name_from_368;
        PyObject *tmp_name_name_265;
        PyObject *tmp_globals_name_265;
        PyObject *tmp_locals_name_265;
        PyObject *tmp_fromlist_name_265;
        PyObject *tmp_level_name_265;
        tmp_name_name_265 = const_str_plain_ir90tv;
        tmp_globals_name_265 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_265 = Py_None;
        tmp_fromlist_name_265 = const_tuple_str_plain_Ir90TvIE_tuple;
        tmp_level_name_265 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 481;
        tmp_import_name_from_368 = IMPORT_MODULE5(tmp_name_name_265, tmp_globals_name_265, tmp_locals_name_265, tmp_fromlist_name_265, tmp_level_name_265);
        if (tmp_import_name_from_368 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 481;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_368)) {
           tmp_assign_source_433 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_368,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Ir90TvIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_433 = IMPORT_NAME(tmp_import_name_from_368, const_str_plain_Ir90TvIE);
        }

        Py_DECREF(tmp_import_name_from_368);
        if (tmp_assign_source_433 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 481;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Ir90TvIE, tmp_assign_source_433);
    }
    {
        PyObject *tmp_assign_source_434;
        PyObject *tmp_name_name_266;
        PyObject *tmp_globals_name_266;
        PyObject *tmp_locals_name_266;
        PyObject *tmp_fromlist_name_266;
        PyObject *tmp_level_name_266;
        tmp_name_name_266 = const_str_plain_itv;
        tmp_globals_name_266 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_266 = Py_None;
        tmp_fromlist_name_266 = const_tuple_str_plain_ITVIE_str_plain_ITVBTCCIE_tuple;
        tmp_level_name_266 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 482;
        tmp_assign_source_434 = IMPORT_MODULE5(tmp_name_name_266, tmp_globals_name_266, tmp_locals_name_266, tmp_fromlist_name_266, tmp_level_name_266);
        if (tmp_assign_source_434 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 482;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_63__module == NULL);
        tmp_import_from_63__module = tmp_assign_source_434;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_435;
        PyObject *tmp_import_name_from_369;
        CHECK_OBJECT(tmp_import_from_63__module);
        tmp_import_name_from_369 = tmp_import_from_63__module;
        if (PyModule_Check(tmp_import_name_from_369)) {
           tmp_assign_source_435 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_369,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ITVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_435 = IMPORT_NAME(tmp_import_name_from_369, const_str_plain_ITVIE);
        }

        if (tmp_assign_source_435 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 482;

            goto try_except_handler_63;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ITVIE, tmp_assign_source_435);
    }
    {
        PyObject *tmp_assign_source_436;
        PyObject *tmp_import_name_from_370;
        CHECK_OBJECT(tmp_import_from_63__module);
        tmp_import_name_from_370 = tmp_import_from_63__module;
        if (PyModule_Check(tmp_import_name_from_370)) {
           tmp_assign_source_436 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_370,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ITVBTCCIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_436 = IMPORT_NAME(tmp_import_name_from_370, const_str_plain_ITVBTCCIE);
        }

        if (tmp_assign_source_436 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 482;

            goto try_except_handler_63;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ITVBTCCIE, tmp_assign_source_436);
    }
    goto try_end_63;
    // Exception handler code:
    try_except_handler_63:;
    exception_keeper_type_63 = exception_type;
    exception_keeper_value_63 = exception_value;
    exception_keeper_tb_63 = exception_tb;
    exception_keeper_lineno_63 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_63__module);
    Py_DECREF(tmp_import_from_63__module);
    tmp_import_from_63__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_63;
    exception_value = exception_keeper_value_63;
    exception_tb = exception_keeper_tb_63;
    exception_lineno = exception_keeper_lineno_63;

    goto frame_exception_exit_1;
    // End of try:
    try_end_63:;
    CHECK_OBJECT(tmp_import_from_63__module);
    Py_DECREF(tmp_import_from_63__module);
    tmp_import_from_63__module = NULL;

    {
        PyObject *tmp_assign_source_437;
        PyObject *tmp_name_name_267;
        PyObject *tmp_globals_name_267;
        PyObject *tmp_locals_name_267;
        PyObject *tmp_fromlist_name_267;
        PyObject *tmp_level_name_267;
        tmp_name_name_267 = const_str_plain_ivi;
        tmp_globals_name_267 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_267 = Py_None;
        tmp_fromlist_name_267 = const_tuple_str_plain_IviIE_str_plain_IviCompilationIE_tuple;
        tmp_level_name_267 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 486;
        tmp_assign_source_437 = IMPORT_MODULE5(tmp_name_name_267, tmp_globals_name_267, tmp_locals_name_267, tmp_fromlist_name_267, tmp_level_name_267);
        if (tmp_assign_source_437 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 486;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_64__module == NULL);
        tmp_import_from_64__module = tmp_assign_source_437;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_438;
        PyObject *tmp_import_name_from_371;
        CHECK_OBJECT(tmp_import_from_64__module);
        tmp_import_name_from_371 = tmp_import_from_64__module;
        if (PyModule_Check(tmp_import_name_from_371)) {
           tmp_assign_source_438 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_371,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_IviIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_438 = IMPORT_NAME(tmp_import_name_from_371, const_str_plain_IviIE);
        }

        if (tmp_assign_source_438 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 486;

            goto try_except_handler_64;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_IviIE, tmp_assign_source_438);
    }
    {
        PyObject *tmp_assign_source_439;
        PyObject *tmp_import_name_from_372;
        CHECK_OBJECT(tmp_import_from_64__module);
        tmp_import_name_from_372 = tmp_import_from_64__module;
        if (PyModule_Check(tmp_import_name_from_372)) {
           tmp_assign_source_439 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_372,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_IviCompilationIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_439 = IMPORT_NAME(tmp_import_name_from_372, const_str_plain_IviCompilationIE);
        }

        if (tmp_assign_source_439 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 486;

            goto try_except_handler_64;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_IviCompilationIE, tmp_assign_source_439);
    }
    goto try_end_64;
    // Exception handler code:
    try_except_handler_64:;
    exception_keeper_type_64 = exception_type;
    exception_keeper_value_64 = exception_value;
    exception_keeper_tb_64 = exception_tb;
    exception_keeper_lineno_64 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_64__module);
    Py_DECREF(tmp_import_from_64__module);
    tmp_import_from_64__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_64;
    exception_value = exception_keeper_value_64;
    exception_tb = exception_keeper_tb_64;
    exception_lineno = exception_keeper_lineno_64;

    goto frame_exception_exit_1;
    // End of try:
    try_end_64:;
    CHECK_OBJECT(tmp_import_from_64__module);
    Py_DECREF(tmp_import_from_64__module);
    tmp_import_from_64__module = NULL;

    {
        PyObject *tmp_assign_source_440;
        PyObject *tmp_import_name_from_373;
        PyObject *tmp_name_name_268;
        PyObject *tmp_globals_name_268;
        PyObject *tmp_locals_name_268;
        PyObject *tmp_fromlist_name_268;
        PyObject *tmp_level_name_268;
        tmp_name_name_268 = const_str_plain_ivideon;
        tmp_globals_name_268 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_268 = Py_None;
        tmp_fromlist_name_268 = const_tuple_str_plain_IvideonIE_tuple;
        tmp_level_name_268 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 490;
        tmp_import_name_from_373 = IMPORT_MODULE5(tmp_name_name_268, tmp_globals_name_268, tmp_locals_name_268, tmp_fromlist_name_268, tmp_level_name_268);
        if (tmp_import_name_from_373 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 490;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_373)) {
           tmp_assign_source_440 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_373,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_IvideonIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_440 = IMPORT_NAME(tmp_import_name_from_373, const_str_plain_IvideonIE);
        }

        Py_DECREF(tmp_import_name_from_373);
        if (tmp_assign_source_440 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 490;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_IvideonIE, tmp_assign_source_440);
    }
    {
        PyObject *tmp_assign_source_441;
        PyObject *tmp_import_name_from_374;
        PyObject *tmp_name_name_269;
        PyObject *tmp_globals_name_269;
        PyObject *tmp_locals_name_269;
        PyObject *tmp_fromlist_name_269;
        PyObject *tmp_level_name_269;
        tmp_name_name_269 = const_str_plain_iwara;
        tmp_globals_name_269 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_269 = Py_None;
        tmp_fromlist_name_269 = const_tuple_str_plain_IwaraIE_tuple;
        tmp_level_name_269 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 491;
        tmp_import_name_from_374 = IMPORT_MODULE5(tmp_name_name_269, tmp_globals_name_269, tmp_locals_name_269, tmp_fromlist_name_269, tmp_level_name_269);
        if (tmp_import_name_from_374 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 491;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_374)) {
           tmp_assign_source_441 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_374,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_IwaraIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_441 = IMPORT_NAME(tmp_import_name_from_374, const_str_plain_IwaraIE);
        }

        Py_DECREF(tmp_import_name_from_374);
        if (tmp_assign_source_441 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 491;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_IwaraIE, tmp_assign_source_441);
    }
    {
        PyObject *tmp_assign_source_442;
        PyObject *tmp_import_name_from_375;
        PyObject *tmp_name_name_270;
        PyObject *tmp_globals_name_270;
        PyObject *tmp_locals_name_270;
        PyObject *tmp_fromlist_name_270;
        PyObject *tmp_level_name_270;
        tmp_name_name_270 = const_str_plain_izlesene;
        tmp_globals_name_270 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_270 = Py_None;
        tmp_fromlist_name_270 = const_tuple_str_plain_IzleseneIE_tuple;
        tmp_level_name_270 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 492;
        tmp_import_name_from_375 = IMPORT_MODULE5(tmp_name_name_270, tmp_globals_name_270, tmp_locals_name_270, tmp_fromlist_name_270, tmp_level_name_270);
        if (tmp_import_name_from_375 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 492;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_375)) {
           tmp_assign_source_442 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_375,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_IzleseneIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_442 = IMPORT_NAME(tmp_import_name_from_375, const_str_plain_IzleseneIE);
        }

        Py_DECREF(tmp_import_name_from_375);
        if (tmp_assign_source_442 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 492;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_IzleseneIE, tmp_assign_source_442);
    }
    {
        PyObject *tmp_assign_source_443;
        PyObject *tmp_name_name_271;
        PyObject *tmp_globals_name_271;
        PyObject *tmp_locals_name_271;
        PyObject *tmp_fromlist_name_271;
        PyObject *tmp_level_name_271;
        tmp_name_name_271 = const_str_plain_jamendo;
        tmp_globals_name_271 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_271 = Py_None;
        tmp_fromlist_name_271 = const_tuple_str_plain_JamendoIE_str_plain_JamendoAlbumIE_tuple;
        tmp_level_name_271 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 493;
        tmp_assign_source_443 = IMPORT_MODULE5(tmp_name_name_271, tmp_globals_name_271, tmp_locals_name_271, tmp_fromlist_name_271, tmp_level_name_271);
        if (tmp_assign_source_443 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 493;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_65__module == NULL);
        tmp_import_from_65__module = tmp_assign_source_443;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_444;
        PyObject *tmp_import_name_from_376;
        CHECK_OBJECT(tmp_import_from_65__module);
        tmp_import_name_from_376 = tmp_import_from_65__module;
        if (PyModule_Check(tmp_import_name_from_376)) {
           tmp_assign_source_444 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_376,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_JamendoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_444 = IMPORT_NAME(tmp_import_name_from_376, const_str_plain_JamendoIE);
        }

        if (tmp_assign_source_444 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 493;

            goto try_except_handler_65;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_JamendoIE, tmp_assign_source_444);
    }
    {
        PyObject *tmp_assign_source_445;
        PyObject *tmp_import_name_from_377;
        CHECK_OBJECT(tmp_import_from_65__module);
        tmp_import_name_from_377 = tmp_import_from_65__module;
        if (PyModule_Check(tmp_import_name_from_377)) {
           tmp_assign_source_445 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_377,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_JamendoAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_445 = IMPORT_NAME(tmp_import_name_from_377, const_str_plain_JamendoAlbumIE);
        }

        if (tmp_assign_source_445 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 493;

            goto try_except_handler_65;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_JamendoAlbumIE, tmp_assign_source_445);
    }
    goto try_end_65;
    // Exception handler code:
    try_except_handler_65:;
    exception_keeper_type_65 = exception_type;
    exception_keeper_value_65 = exception_value;
    exception_keeper_tb_65 = exception_tb;
    exception_keeper_lineno_65 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_65__module);
    Py_DECREF(tmp_import_from_65__module);
    tmp_import_from_65__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_65;
    exception_value = exception_keeper_value_65;
    exception_tb = exception_keeper_tb_65;
    exception_lineno = exception_keeper_lineno_65;

    goto frame_exception_exit_1;
    // End of try:
    try_end_65:;
    CHECK_OBJECT(tmp_import_from_65__module);
    Py_DECREF(tmp_import_from_65__module);
    tmp_import_from_65__module = NULL;

    {
        PyObject *tmp_assign_source_446;
        PyObject *tmp_import_name_from_378;
        PyObject *tmp_name_name_272;
        PyObject *tmp_globals_name_272;
        PyObject *tmp_locals_name_272;
        PyObject *tmp_fromlist_name_272;
        PyObject *tmp_level_name_272;
        tmp_name_name_272 = const_str_plain_jeuxvideo;
        tmp_globals_name_272 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_272 = Py_None;
        tmp_fromlist_name_272 = const_tuple_str_plain_JeuxVideoIE_tuple;
        tmp_level_name_272 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 497;
        tmp_import_name_from_378 = IMPORT_MODULE5(tmp_name_name_272, tmp_globals_name_272, tmp_locals_name_272, tmp_fromlist_name_272, tmp_level_name_272);
        if (tmp_import_name_from_378 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 497;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_378)) {
           tmp_assign_source_446 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_378,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_JeuxVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_446 = IMPORT_NAME(tmp_import_name_from_378, const_str_plain_JeuxVideoIE);
        }

        Py_DECREF(tmp_import_name_from_378);
        if (tmp_assign_source_446 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 497;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_JeuxVideoIE, tmp_assign_source_446);
    }
    {
        PyObject *tmp_assign_source_447;
        PyObject *tmp_import_name_from_379;
        PyObject *tmp_name_name_273;
        PyObject *tmp_globals_name_273;
        PyObject *tmp_locals_name_273;
        PyObject *tmp_fromlist_name_273;
        PyObject *tmp_level_name_273;
        tmp_name_name_273 = const_str_plain_jove;
        tmp_globals_name_273 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_273 = Py_None;
        tmp_fromlist_name_273 = const_tuple_str_plain_JoveIE_tuple;
        tmp_level_name_273 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 498;
        tmp_import_name_from_379 = IMPORT_MODULE5(tmp_name_name_273, tmp_globals_name_273, tmp_locals_name_273, tmp_fromlist_name_273, tmp_level_name_273);
        if (tmp_import_name_from_379 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 498;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_379)) {
           tmp_assign_source_447 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_379,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_JoveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_447 = IMPORT_NAME(tmp_import_name_from_379, const_str_plain_JoveIE);
        }

        Py_DECREF(tmp_import_name_from_379);
        if (tmp_assign_source_447 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 498;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_JoveIE, tmp_assign_source_447);
    }
    {
        PyObject *tmp_assign_source_448;
        PyObject *tmp_import_name_from_380;
        PyObject *tmp_name_name_274;
        PyObject *tmp_globals_name_274;
        PyObject *tmp_locals_name_274;
        PyObject *tmp_fromlist_name_274;
        PyObject *tmp_level_name_274;
        tmp_name_name_274 = const_str_plain_joj;
        tmp_globals_name_274 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_274 = Py_None;
        tmp_fromlist_name_274 = const_tuple_str_plain_JojIE_tuple;
        tmp_level_name_274 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 499;
        tmp_import_name_from_380 = IMPORT_MODULE5(tmp_name_name_274, tmp_globals_name_274, tmp_locals_name_274, tmp_fromlist_name_274, tmp_level_name_274);
        if (tmp_import_name_from_380 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 499;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_380)) {
           tmp_assign_source_448 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_380,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_JojIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_448 = IMPORT_NAME(tmp_import_name_from_380, const_str_plain_JojIE);
        }

        Py_DECREF(tmp_import_name_from_380);
        if (tmp_assign_source_448 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 499;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_JojIE, tmp_assign_source_448);
    }
    {
        PyObject *tmp_assign_source_449;
        PyObject *tmp_import_name_from_381;
        PyObject *tmp_name_name_275;
        PyObject *tmp_globals_name_275;
        PyObject *tmp_locals_name_275;
        PyObject *tmp_fromlist_name_275;
        PyObject *tmp_level_name_275;
        tmp_name_name_275 = const_str_plain_jwplatform;
        tmp_globals_name_275 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_275 = Py_None;
        tmp_fromlist_name_275 = const_tuple_str_plain_JWPlatformIE_tuple;
        tmp_level_name_275 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 500;
        tmp_import_name_from_381 = IMPORT_MODULE5(tmp_name_name_275, tmp_globals_name_275, tmp_locals_name_275, tmp_fromlist_name_275, tmp_level_name_275);
        if (tmp_import_name_from_381 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 500;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_381)) {
           tmp_assign_source_449 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_381,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_JWPlatformIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_449 = IMPORT_NAME(tmp_import_name_from_381, const_str_plain_JWPlatformIE);
        }

        Py_DECREF(tmp_import_name_from_381);
        if (tmp_assign_source_449 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 500;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_JWPlatformIE, tmp_assign_source_449);
    }
    {
        PyObject *tmp_assign_source_450;
        PyObject *tmp_import_name_from_382;
        PyObject *tmp_name_name_276;
        PyObject *tmp_globals_name_276;
        PyObject *tmp_locals_name_276;
        PyObject *tmp_fromlist_name_276;
        PyObject *tmp_level_name_276;
        tmp_name_name_276 = const_str_plain_kakao;
        tmp_globals_name_276 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_276 = Py_None;
        tmp_fromlist_name_276 = const_tuple_str_plain_KakaoIE_tuple;
        tmp_level_name_276 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 501;
        tmp_import_name_from_382 = IMPORT_MODULE5(tmp_name_name_276, tmp_globals_name_276, tmp_locals_name_276, tmp_fromlist_name_276, tmp_level_name_276);
        if (tmp_import_name_from_382 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 501;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_382)) {
           tmp_assign_source_450 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_382,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KakaoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_450 = IMPORT_NAME(tmp_import_name_from_382, const_str_plain_KakaoIE);
        }

        Py_DECREF(tmp_import_name_from_382);
        if (tmp_assign_source_450 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 501;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KakaoIE, tmp_assign_source_450);
    }
    {
        PyObject *tmp_assign_source_451;
        PyObject *tmp_import_name_from_383;
        PyObject *tmp_name_name_277;
        PyObject *tmp_globals_name_277;
        PyObject *tmp_locals_name_277;
        PyObject *tmp_fromlist_name_277;
        PyObject *tmp_level_name_277;
        tmp_name_name_277 = const_str_plain_kaltura;
        tmp_globals_name_277 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_277 = Py_None;
        tmp_fromlist_name_277 = const_tuple_str_plain_KalturaIE_tuple;
        tmp_level_name_277 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 502;
        tmp_import_name_from_383 = IMPORT_MODULE5(tmp_name_name_277, tmp_globals_name_277, tmp_locals_name_277, tmp_fromlist_name_277, tmp_level_name_277);
        if (tmp_import_name_from_383 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 502;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_383)) {
           tmp_assign_source_451 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_383,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KalturaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_451 = IMPORT_NAME(tmp_import_name_from_383, const_str_plain_KalturaIE);
        }

        Py_DECREF(tmp_import_name_from_383);
        if (tmp_assign_source_451 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 502;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KalturaIE, tmp_assign_source_451);
    }
    {
        PyObject *tmp_assign_source_452;
        PyObject *tmp_import_name_from_384;
        PyObject *tmp_name_name_278;
        PyObject *tmp_globals_name_278;
        PyObject *tmp_locals_name_278;
        PyObject *tmp_fromlist_name_278;
        PyObject *tmp_level_name_278;
        tmp_name_name_278 = const_str_plain_kanalplay;
        tmp_globals_name_278 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_278 = Py_None;
        tmp_fromlist_name_278 = const_tuple_str_plain_KanalPlayIE_tuple;
        tmp_level_name_278 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 503;
        tmp_import_name_from_384 = IMPORT_MODULE5(tmp_name_name_278, tmp_globals_name_278, tmp_locals_name_278, tmp_fromlist_name_278, tmp_level_name_278);
        if (tmp_import_name_from_384 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 503;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_384)) {
           tmp_assign_source_452 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_384,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KanalPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_452 = IMPORT_NAME(tmp_import_name_from_384, const_str_plain_KanalPlayIE);
        }

        Py_DECREF(tmp_import_name_from_384);
        if (tmp_assign_source_452 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 503;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KanalPlayIE, tmp_assign_source_452);
    }
    {
        PyObject *tmp_assign_source_453;
        PyObject *tmp_import_name_from_385;
        PyObject *tmp_name_name_279;
        PyObject *tmp_globals_name_279;
        PyObject *tmp_locals_name_279;
        PyObject *tmp_fromlist_name_279;
        PyObject *tmp_level_name_279;
        tmp_name_name_279 = const_str_plain_kankan;
        tmp_globals_name_279 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_279 = Py_None;
        tmp_fromlist_name_279 = const_tuple_str_plain_KankanIE_tuple;
        tmp_level_name_279 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 504;
        tmp_import_name_from_385 = IMPORT_MODULE5(tmp_name_name_279, tmp_globals_name_279, tmp_locals_name_279, tmp_fromlist_name_279, tmp_level_name_279);
        if (tmp_import_name_from_385 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 504;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_385)) {
           tmp_assign_source_453 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_385,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KankanIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_453 = IMPORT_NAME(tmp_import_name_from_385, const_str_plain_KankanIE);
        }

        Py_DECREF(tmp_import_name_from_385);
        if (tmp_assign_source_453 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 504;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KankanIE, tmp_assign_source_453);
    }
    {
        PyObject *tmp_assign_source_454;
        PyObject *tmp_import_name_from_386;
        PyObject *tmp_name_name_280;
        PyObject *tmp_globals_name_280;
        PyObject *tmp_locals_name_280;
        PyObject *tmp_fromlist_name_280;
        PyObject *tmp_level_name_280;
        tmp_name_name_280 = const_str_plain_karaoketv;
        tmp_globals_name_280 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_280 = Py_None;
        tmp_fromlist_name_280 = const_tuple_str_plain_KaraoketvIE_tuple;
        tmp_level_name_280 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 505;
        tmp_import_name_from_386 = IMPORT_MODULE5(tmp_name_name_280, tmp_globals_name_280, tmp_locals_name_280, tmp_fromlist_name_280, tmp_level_name_280);
        if (tmp_import_name_from_386 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 505;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_386)) {
           tmp_assign_source_454 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_386,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KaraoketvIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_454 = IMPORT_NAME(tmp_import_name_from_386, const_str_plain_KaraoketvIE);
        }

        Py_DECREF(tmp_import_name_from_386);
        if (tmp_assign_source_454 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 505;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KaraoketvIE, tmp_assign_source_454);
    }
    {
        PyObject *tmp_assign_source_455;
        PyObject *tmp_import_name_from_387;
        PyObject *tmp_name_name_281;
        PyObject *tmp_globals_name_281;
        PyObject *tmp_locals_name_281;
        PyObject *tmp_fromlist_name_281;
        PyObject *tmp_level_name_281;
        tmp_name_name_281 = const_str_plain_karrierevideos;
        tmp_globals_name_281 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_281 = Py_None;
        tmp_fromlist_name_281 = const_tuple_str_plain_KarriereVideosIE_tuple;
        tmp_level_name_281 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 506;
        tmp_import_name_from_387 = IMPORT_MODULE5(tmp_name_name_281, tmp_globals_name_281, tmp_locals_name_281, tmp_fromlist_name_281, tmp_level_name_281);
        if (tmp_import_name_from_387 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 506;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_387)) {
           tmp_assign_source_455 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_387,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KarriereVideosIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_455 = IMPORT_NAME(tmp_import_name_from_387, const_str_plain_KarriereVideosIE);
        }

        Py_DECREF(tmp_import_name_from_387);
        if (tmp_assign_source_455 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 506;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KarriereVideosIE, tmp_assign_source_455);
    }
    {
        PyObject *tmp_assign_source_456;
        PyObject *tmp_import_name_from_388;
        PyObject *tmp_name_name_282;
        PyObject *tmp_globals_name_282;
        PyObject *tmp_locals_name_282;
        PyObject *tmp_fromlist_name_282;
        PyObject *tmp_level_name_282;
        tmp_name_name_282 = const_str_plain_keezmovies;
        tmp_globals_name_282 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_282 = Py_None;
        tmp_fromlist_name_282 = const_tuple_str_plain_KeezMoviesIE_tuple;
        tmp_level_name_282 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 507;
        tmp_import_name_from_388 = IMPORT_MODULE5(tmp_name_name_282, tmp_globals_name_282, tmp_locals_name_282, tmp_fromlist_name_282, tmp_level_name_282);
        if (tmp_import_name_from_388 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 507;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_388)) {
           tmp_assign_source_456 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_388,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KeezMoviesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_456 = IMPORT_NAME(tmp_import_name_from_388, const_str_plain_KeezMoviesIE);
        }

        Py_DECREF(tmp_import_name_from_388);
        if (tmp_assign_source_456 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 507;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KeezMoviesIE, tmp_assign_source_456);
    }
    {
        PyObject *tmp_assign_source_457;
        PyObject *tmp_import_name_from_389;
        PyObject *tmp_name_name_283;
        PyObject *tmp_globals_name_283;
        PyObject *tmp_locals_name_283;
        PyObject *tmp_fromlist_name_283;
        PyObject *tmp_level_name_283;
        tmp_name_name_283 = const_str_plain_ketnet;
        tmp_globals_name_283 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_283 = Py_None;
        tmp_fromlist_name_283 = const_tuple_str_plain_KetnetIE_tuple;
        tmp_level_name_283 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 508;
        tmp_import_name_from_389 = IMPORT_MODULE5(tmp_name_name_283, tmp_globals_name_283, tmp_locals_name_283, tmp_fromlist_name_283, tmp_level_name_283);
        if (tmp_import_name_from_389 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 508;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_389)) {
           tmp_assign_source_457 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_389,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KetnetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_457 = IMPORT_NAME(tmp_import_name_from_389, const_str_plain_KetnetIE);
        }

        Py_DECREF(tmp_import_name_from_389);
        if (tmp_assign_source_457 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 508;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KetnetIE, tmp_assign_source_457);
    }
    {
        PyObject *tmp_assign_source_458;
        PyObject *tmp_import_name_from_390;
        PyObject *tmp_name_name_284;
        PyObject *tmp_globals_name_284;
        PyObject *tmp_locals_name_284;
        PyObject *tmp_fromlist_name_284;
        PyObject *tmp_level_name_284;
        tmp_name_name_284 = const_str_plain_khanacademy;
        tmp_globals_name_284 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_284 = Py_None;
        tmp_fromlist_name_284 = const_tuple_str_plain_KhanAcademyIE_tuple;
        tmp_level_name_284 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 509;
        tmp_import_name_from_390 = IMPORT_MODULE5(tmp_name_name_284, tmp_globals_name_284, tmp_locals_name_284, tmp_fromlist_name_284, tmp_level_name_284);
        if (tmp_import_name_from_390 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 509;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_390)) {
           tmp_assign_source_458 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_390,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KhanAcademyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_458 = IMPORT_NAME(tmp_import_name_from_390, const_str_plain_KhanAcademyIE);
        }

        Py_DECREF(tmp_import_name_from_390);
        if (tmp_assign_source_458 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 509;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KhanAcademyIE, tmp_assign_source_458);
    }
    {
        PyObject *tmp_assign_source_459;
        PyObject *tmp_import_name_from_391;
        PyObject *tmp_name_name_285;
        PyObject *tmp_globals_name_285;
        PyObject *tmp_locals_name_285;
        PyObject *tmp_fromlist_name_285;
        PyObject *tmp_level_name_285;
        tmp_name_name_285 = const_str_plain_kickstarter;
        tmp_globals_name_285 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_285 = Py_None;
        tmp_fromlist_name_285 = const_tuple_str_plain_KickStarterIE_tuple;
        tmp_level_name_285 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 510;
        tmp_import_name_from_391 = IMPORT_MODULE5(tmp_name_name_285, tmp_globals_name_285, tmp_locals_name_285, tmp_fromlist_name_285, tmp_level_name_285);
        if (tmp_import_name_from_391 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 510;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_391)) {
           tmp_assign_source_459 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_391,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KickStarterIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_459 = IMPORT_NAME(tmp_import_name_from_391, const_str_plain_KickStarterIE);
        }

        Py_DECREF(tmp_import_name_from_391);
        if (tmp_assign_source_459 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 510;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KickStarterIE, tmp_assign_source_459);
    }
    {
        PyObject *tmp_assign_source_460;
        PyObject *tmp_import_name_from_392;
        PyObject *tmp_name_name_286;
        PyObject *tmp_globals_name_286;
        PyObject *tmp_locals_name_286;
        PyObject *tmp_fromlist_name_286;
        PyObject *tmp_level_name_286;
        tmp_name_name_286 = const_str_plain_kinja;
        tmp_globals_name_286 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_286 = Py_None;
        tmp_fromlist_name_286 = const_tuple_str_plain_KinjaEmbedIE_tuple;
        tmp_level_name_286 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 511;
        tmp_import_name_from_392 = IMPORT_MODULE5(tmp_name_name_286, tmp_globals_name_286, tmp_locals_name_286, tmp_fromlist_name_286, tmp_level_name_286);
        if (tmp_import_name_from_392 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 511;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_392)) {
           tmp_assign_source_460 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_392,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KinjaEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_460 = IMPORT_NAME(tmp_import_name_from_392, const_str_plain_KinjaEmbedIE);
        }

        Py_DECREF(tmp_import_name_from_392);
        if (tmp_assign_source_460 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 511;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KinjaEmbedIE, tmp_assign_source_460);
    }
    {
        PyObject *tmp_assign_source_461;
        PyObject *tmp_import_name_from_393;
        PyObject *tmp_name_name_287;
        PyObject *tmp_globals_name_287;
        PyObject *tmp_locals_name_287;
        PyObject *tmp_fromlist_name_287;
        PyObject *tmp_level_name_287;
        tmp_name_name_287 = const_str_plain_kinopoisk;
        tmp_globals_name_287 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_287 = Py_None;
        tmp_fromlist_name_287 = const_tuple_str_plain_KinoPoiskIE_tuple;
        tmp_level_name_287 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 512;
        tmp_import_name_from_393 = IMPORT_MODULE5(tmp_name_name_287, tmp_globals_name_287, tmp_locals_name_287, tmp_fromlist_name_287, tmp_level_name_287);
        if (tmp_import_name_from_393 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 512;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_393)) {
           tmp_assign_source_461 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_393,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KinoPoiskIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_461 = IMPORT_NAME(tmp_import_name_from_393, const_str_plain_KinoPoiskIE);
        }

        Py_DECREF(tmp_import_name_from_393);
        if (tmp_assign_source_461 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 512;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KinoPoiskIE, tmp_assign_source_461);
    }
    {
        PyObject *tmp_assign_source_462;
        PyObject *tmp_import_name_from_394;
        PyObject *tmp_name_name_288;
        PyObject *tmp_globals_name_288;
        PyObject *tmp_locals_name_288;
        PyObject *tmp_fromlist_name_288;
        PyObject *tmp_level_name_288;
        tmp_name_name_288 = const_str_plain_konserthusetplay;
        tmp_globals_name_288 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_288 = Py_None;
        tmp_fromlist_name_288 = const_tuple_str_plain_KonserthusetPlayIE_tuple;
        tmp_level_name_288 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 513;
        tmp_import_name_from_394 = IMPORT_MODULE5(tmp_name_name_288, tmp_globals_name_288, tmp_locals_name_288, tmp_fromlist_name_288, tmp_level_name_288);
        if (tmp_import_name_from_394 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 513;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_394)) {
           tmp_assign_source_462 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_394,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KonserthusetPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_462 = IMPORT_NAME(tmp_import_name_from_394, const_str_plain_KonserthusetPlayIE);
        }

        Py_DECREF(tmp_import_name_from_394);
        if (tmp_assign_source_462 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 513;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KonserthusetPlayIE, tmp_assign_source_462);
    }
    {
        PyObject *tmp_assign_source_463;
        PyObject *tmp_import_name_from_395;
        PyObject *tmp_name_name_289;
        PyObject *tmp_globals_name_289;
        PyObject *tmp_locals_name_289;
        PyObject *tmp_fromlist_name_289;
        PyObject *tmp_level_name_289;
        tmp_name_name_289 = const_str_plain_krasview;
        tmp_globals_name_289 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_289 = Py_None;
        tmp_fromlist_name_289 = const_tuple_str_plain_KrasViewIE_tuple;
        tmp_level_name_289 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 514;
        tmp_import_name_from_395 = IMPORT_MODULE5(tmp_name_name_289, tmp_globals_name_289, tmp_locals_name_289, tmp_fromlist_name_289, tmp_level_name_289);
        if (tmp_import_name_from_395 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 514;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_395)) {
           tmp_assign_source_463 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_395,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KrasViewIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_463 = IMPORT_NAME(tmp_import_name_from_395, const_str_plain_KrasViewIE);
        }

        Py_DECREF(tmp_import_name_from_395);
        if (tmp_assign_source_463 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 514;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KrasViewIE, tmp_assign_source_463);
    }
    {
        PyObject *tmp_assign_source_464;
        PyObject *tmp_import_name_from_396;
        PyObject *tmp_name_name_290;
        PyObject *tmp_globals_name_290;
        PyObject *tmp_locals_name_290;
        PyObject *tmp_fromlist_name_290;
        PyObject *tmp_level_name_290;
        tmp_name_name_290 = const_str_plain_ku6;
        tmp_globals_name_290 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_290 = Py_None;
        tmp_fromlist_name_290 = const_tuple_str_plain_Ku6IE_tuple;
        tmp_level_name_290 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 515;
        tmp_import_name_from_396 = IMPORT_MODULE5(tmp_name_name_290, tmp_globals_name_290, tmp_locals_name_290, tmp_fromlist_name_290, tmp_level_name_290);
        if (tmp_import_name_from_396 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 515;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_396)) {
           tmp_assign_source_464 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_396,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Ku6IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_464 = IMPORT_NAME(tmp_import_name_from_396, const_str_plain_Ku6IE);
        }

        Py_DECREF(tmp_import_name_from_396);
        if (tmp_assign_source_464 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 515;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Ku6IE, tmp_assign_source_464);
    }
    {
        PyObject *tmp_assign_source_465;
        PyObject *tmp_import_name_from_397;
        PyObject *tmp_name_name_291;
        PyObject *tmp_globals_name_291;
        PyObject *tmp_locals_name_291;
        PyObject *tmp_fromlist_name_291;
        PyObject *tmp_level_name_291;
        tmp_name_name_291 = const_str_plain_kusi;
        tmp_globals_name_291 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_291 = Py_None;
        tmp_fromlist_name_291 = const_tuple_str_plain_KUSIIE_tuple;
        tmp_level_name_291 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 516;
        tmp_import_name_from_397 = IMPORT_MODULE5(tmp_name_name_291, tmp_globals_name_291, tmp_locals_name_291, tmp_fromlist_name_291, tmp_level_name_291);
        if (tmp_import_name_from_397 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 516;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_397)) {
           tmp_assign_source_465 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_397,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KUSIIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_465 = IMPORT_NAME(tmp_import_name_from_397, const_str_plain_KUSIIE);
        }

        Py_DECREF(tmp_import_name_from_397);
        if (tmp_assign_source_465 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 516;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KUSIIE, tmp_assign_source_465);
    }
    {
        PyObject *tmp_assign_source_466;
        PyObject *tmp_name_name_292;
        PyObject *tmp_globals_name_292;
        PyObject *tmp_locals_name_292;
        PyObject *tmp_fromlist_name_292;
        PyObject *tmp_level_name_292;
        tmp_name_name_292 = const_str_plain_kuwo;
        tmp_globals_name_292 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_292 = Py_None;
        tmp_fromlist_name_292 = const_tuple_7c62a71a8376c40e16cc33d47a8df7ad_tuple;
        tmp_level_name_292 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 517;
        tmp_assign_source_466 = IMPORT_MODULE5(tmp_name_name_292, tmp_globals_name_292, tmp_locals_name_292, tmp_fromlist_name_292, tmp_level_name_292);
        if (tmp_assign_source_466 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 517;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_66__module == NULL);
        tmp_import_from_66__module = tmp_assign_source_466;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_467;
        PyObject *tmp_import_name_from_398;
        CHECK_OBJECT(tmp_import_from_66__module);
        tmp_import_name_from_398 = tmp_import_from_66__module;
        if (PyModule_Check(tmp_import_name_from_398)) {
           tmp_assign_source_467 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_398,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KuwoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_467 = IMPORT_NAME(tmp_import_name_from_398, const_str_plain_KuwoIE);
        }

        if (tmp_assign_source_467 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 517;

            goto try_except_handler_66;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KuwoIE, tmp_assign_source_467);
    }
    {
        PyObject *tmp_assign_source_468;
        PyObject *tmp_import_name_from_399;
        CHECK_OBJECT(tmp_import_from_66__module);
        tmp_import_name_from_399 = tmp_import_from_66__module;
        if (PyModule_Check(tmp_import_name_from_399)) {
           tmp_assign_source_468 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_399,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KuwoAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_468 = IMPORT_NAME(tmp_import_name_from_399, const_str_plain_KuwoAlbumIE);
        }

        if (tmp_assign_source_468 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 517;

            goto try_except_handler_66;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KuwoAlbumIE, tmp_assign_source_468);
    }
    {
        PyObject *tmp_assign_source_469;
        PyObject *tmp_import_name_from_400;
        CHECK_OBJECT(tmp_import_from_66__module);
        tmp_import_name_from_400 = tmp_import_from_66__module;
        if (PyModule_Check(tmp_import_name_from_400)) {
           tmp_assign_source_469 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_400,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KuwoChartIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_469 = IMPORT_NAME(tmp_import_name_from_400, const_str_plain_KuwoChartIE);
        }

        if (tmp_assign_source_469 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 517;

            goto try_except_handler_66;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KuwoChartIE, tmp_assign_source_469);
    }
    {
        PyObject *tmp_assign_source_470;
        PyObject *tmp_import_name_from_401;
        CHECK_OBJECT(tmp_import_from_66__module);
        tmp_import_name_from_401 = tmp_import_from_66__module;
        if (PyModule_Check(tmp_import_name_from_401)) {
           tmp_assign_source_470 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_401,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KuwoSingerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_470 = IMPORT_NAME(tmp_import_name_from_401, const_str_plain_KuwoSingerIE);
        }

        if (tmp_assign_source_470 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 517;

            goto try_except_handler_66;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KuwoSingerIE, tmp_assign_source_470);
    }
    {
        PyObject *tmp_assign_source_471;
        PyObject *tmp_import_name_from_402;
        CHECK_OBJECT(tmp_import_from_66__module);
        tmp_import_name_from_402 = tmp_import_from_66__module;
        if (PyModule_Check(tmp_import_name_from_402)) {
           tmp_assign_source_471 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_402,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KuwoCategoryIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_471 = IMPORT_NAME(tmp_import_name_from_402, const_str_plain_KuwoCategoryIE);
        }

        if (tmp_assign_source_471 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 517;

            goto try_except_handler_66;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KuwoCategoryIE, tmp_assign_source_471);
    }
    {
        PyObject *tmp_assign_source_472;
        PyObject *tmp_import_name_from_403;
        CHECK_OBJECT(tmp_import_from_66__module);
        tmp_import_name_from_403 = tmp_import_from_66__module;
        if (PyModule_Check(tmp_import_name_from_403)) {
           tmp_assign_source_472 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_403,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KuwoMvIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_472 = IMPORT_NAME(tmp_import_name_from_403, const_str_plain_KuwoMvIE);
        }

        if (tmp_assign_source_472 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 517;

            goto try_except_handler_66;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KuwoMvIE, tmp_assign_source_472);
    }
    goto try_end_66;
    // Exception handler code:
    try_except_handler_66:;
    exception_keeper_type_66 = exception_type;
    exception_keeper_value_66 = exception_value;
    exception_keeper_tb_66 = exception_tb;
    exception_keeper_lineno_66 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_66__module);
    Py_DECREF(tmp_import_from_66__module);
    tmp_import_from_66__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_66;
    exception_value = exception_keeper_value_66;
    exception_tb = exception_keeper_tb_66;
    exception_lineno = exception_keeper_lineno_66;

    goto frame_exception_exit_1;
    // End of try:
    try_end_66:;
    CHECK_OBJECT(tmp_import_from_66__module);
    Py_DECREF(tmp_import_from_66__module);
    tmp_import_from_66__module = NULL;

    {
        PyObject *tmp_assign_source_473;
        PyObject *tmp_import_name_from_404;
        PyObject *tmp_name_name_293;
        PyObject *tmp_globals_name_293;
        PyObject *tmp_locals_name_293;
        PyObject *tmp_fromlist_name_293;
        PyObject *tmp_level_name_293;
        tmp_name_name_293 = const_str_plain_la7;
        tmp_globals_name_293 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_293 = Py_None;
        tmp_fromlist_name_293 = const_tuple_str_plain_LA7IE_tuple;
        tmp_level_name_293 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 525;
        tmp_import_name_from_404 = IMPORT_MODULE5(tmp_name_name_293, tmp_globals_name_293, tmp_locals_name_293, tmp_fromlist_name_293, tmp_level_name_293);
        if (tmp_import_name_from_404 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 525;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_404)) {
           tmp_assign_source_473 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_404,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LA7IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_473 = IMPORT_NAME(tmp_import_name_from_404, const_str_plain_LA7IE);
        }

        Py_DECREF(tmp_import_name_from_404);
        if (tmp_assign_source_473 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 525;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LA7IE, tmp_assign_source_473);
    }
    {
        PyObject *tmp_assign_source_474;
        PyObject *tmp_name_name_294;
        PyObject *tmp_globals_name_294;
        PyObject *tmp_locals_name_294;
        PyObject *tmp_fromlist_name_294;
        PyObject *tmp_level_name_294;
        tmp_name_name_294 = const_str_plain_laola1tv;
        tmp_globals_name_294 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_294 = Py_None;
        tmp_fromlist_name_294 = const_tuple_92f0885fc87047f30ecf07e5840fbf73_tuple;
        tmp_level_name_294 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 526;
        tmp_assign_source_474 = IMPORT_MODULE5(tmp_name_name_294, tmp_globals_name_294, tmp_locals_name_294, tmp_fromlist_name_294, tmp_level_name_294);
        if (tmp_assign_source_474 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 526;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_67__module == NULL);
        tmp_import_from_67__module = tmp_assign_source_474;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_475;
        PyObject *tmp_import_name_from_405;
        CHECK_OBJECT(tmp_import_from_67__module);
        tmp_import_name_from_405 = tmp_import_from_67__module;
        if (PyModule_Check(tmp_import_name_from_405)) {
           tmp_assign_source_475 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_405,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Laola1TvEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_475 = IMPORT_NAME(tmp_import_name_from_405, const_str_plain_Laola1TvEmbedIE);
        }

        if (tmp_assign_source_475 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 526;

            goto try_except_handler_67;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Laola1TvEmbedIE, tmp_assign_source_475);
    }
    {
        PyObject *tmp_assign_source_476;
        PyObject *tmp_import_name_from_406;
        CHECK_OBJECT(tmp_import_from_67__module);
        tmp_import_name_from_406 = tmp_import_from_67__module;
        if (PyModule_Check(tmp_import_name_from_406)) {
           tmp_assign_source_476 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_406,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Laola1TvIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_476 = IMPORT_NAME(tmp_import_name_from_406, const_str_plain_Laola1TvIE);
        }

        if (tmp_assign_source_476 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 526;

            goto try_except_handler_67;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Laola1TvIE, tmp_assign_source_476);
    }
    {
        PyObject *tmp_assign_source_477;
        PyObject *tmp_import_name_from_407;
        CHECK_OBJECT(tmp_import_from_67__module);
        tmp_import_name_from_407 = tmp_import_from_67__module;
        if (PyModule_Check(tmp_import_name_from_407)) {
           tmp_assign_source_477 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_407,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EHFTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_477 = IMPORT_NAME(tmp_import_name_from_407, const_str_plain_EHFTVIE);
        }

        if (tmp_assign_source_477 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 526;

            goto try_except_handler_67;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EHFTVIE, tmp_assign_source_477);
    }
    {
        PyObject *tmp_assign_source_478;
        PyObject *tmp_import_name_from_408;
        CHECK_OBJECT(tmp_import_from_67__module);
        tmp_import_name_from_408 = tmp_import_from_67__module;
        if (PyModule_Check(tmp_import_name_from_408)) {
           tmp_assign_source_478 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_408,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ITTFIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_478 = IMPORT_NAME(tmp_import_name_from_408, const_str_plain_ITTFIE);
        }

        if (tmp_assign_source_478 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 526;

            goto try_except_handler_67;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ITTFIE, tmp_assign_source_478);
    }
    goto try_end_67;
    // Exception handler code:
    try_except_handler_67:;
    exception_keeper_type_67 = exception_type;
    exception_keeper_value_67 = exception_value;
    exception_keeper_tb_67 = exception_tb;
    exception_keeper_lineno_67 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_67__module);
    Py_DECREF(tmp_import_from_67__module);
    tmp_import_from_67__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_67;
    exception_value = exception_keeper_value_67;
    exception_tb = exception_keeper_tb_67;
    exception_lineno = exception_keeper_lineno_67;

    goto frame_exception_exit_1;
    // End of try:
    try_end_67:;
    CHECK_OBJECT(tmp_import_from_67__module);
    Py_DECREF(tmp_import_from_67__module);
    tmp_import_from_67__module = NULL;

    {
        PyObject *tmp_assign_source_479;
        PyObject *tmp_import_name_from_409;
        PyObject *tmp_name_name_295;
        PyObject *tmp_globals_name_295;
        PyObject *tmp_locals_name_295;
        PyObject *tmp_fromlist_name_295;
        PyObject *tmp_level_name_295;
        tmp_name_name_295 = const_str_plain_lci;
        tmp_globals_name_295 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_295 = Py_None;
        tmp_fromlist_name_295 = const_tuple_str_plain_LCIIE_tuple;
        tmp_level_name_295 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 532;
        tmp_import_name_from_409 = IMPORT_MODULE5(tmp_name_name_295, tmp_globals_name_295, tmp_locals_name_295, tmp_fromlist_name_295, tmp_level_name_295);
        if (tmp_import_name_from_409 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 532;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_409)) {
           tmp_assign_source_479 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_409,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LCIIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_479 = IMPORT_NAME(tmp_import_name_from_409, const_str_plain_LCIIE);
        }

        Py_DECREF(tmp_import_name_from_409);
        if (tmp_assign_source_479 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 532;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LCIIE, tmp_assign_source_479);
    }
    {
        PyObject *tmp_assign_source_480;
        PyObject *tmp_name_name_296;
        PyObject *tmp_globals_name_296;
        PyObject *tmp_locals_name_296;
        PyObject *tmp_fromlist_name_296;
        PyObject *tmp_level_name_296;
        tmp_name_name_296 = const_str_plain_lcp;
        tmp_globals_name_296 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_296 = Py_None;
        tmp_fromlist_name_296 = const_tuple_str_plain_LcpPlayIE_str_plain_LcpIE_tuple;
        tmp_level_name_296 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 533;
        tmp_assign_source_480 = IMPORT_MODULE5(tmp_name_name_296, tmp_globals_name_296, tmp_locals_name_296, tmp_fromlist_name_296, tmp_level_name_296);
        if (tmp_assign_source_480 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 533;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_68__module == NULL);
        tmp_import_from_68__module = tmp_assign_source_480;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_481;
        PyObject *tmp_import_name_from_410;
        CHECK_OBJECT(tmp_import_from_68__module);
        tmp_import_name_from_410 = tmp_import_from_68__module;
        if (PyModule_Check(tmp_import_name_from_410)) {
           tmp_assign_source_481 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_410,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LcpPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_481 = IMPORT_NAME(tmp_import_name_from_410, const_str_plain_LcpPlayIE);
        }

        if (tmp_assign_source_481 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 533;

            goto try_except_handler_68;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LcpPlayIE, tmp_assign_source_481);
    }
    {
        PyObject *tmp_assign_source_482;
        PyObject *tmp_import_name_from_411;
        CHECK_OBJECT(tmp_import_from_68__module);
        tmp_import_name_from_411 = tmp_import_from_68__module;
        if (PyModule_Check(tmp_import_name_from_411)) {
           tmp_assign_source_482 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_411,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LcpIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_482 = IMPORT_NAME(tmp_import_name_from_411, const_str_plain_LcpIE);
        }

        if (tmp_assign_source_482 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 533;

            goto try_except_handler_68;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LcpIE, tmp_assign_source_482);
    }
    goto try_end_68;
    // Exception handler code:
    try_except_handler_68:;
    exception_keeper_type_68 = exception_type;
    exception_keeper_value_68 = exception_value;
    exception_keeper_tb_68 = exception_tb;
    exception_keeper_lineno_68 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_68__module);
    Py_DECREF(tmp_import_from_68__module);
    tmp_import_from_68__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_68;
    exception_value = exception_keeper_value_68;
    exception_tb = exception_keeper_tb_68;
    exception_lineno = exception_keeper_lineno_68;

    goto frame_exception_exit_1;
    // End of try:
    try_end_68:;
    CHECK_OBJECT(tmp_import_from_68__module);
    Py_DECREF(tmp_import_from_68__module);
    tmp_import_from_68__module = NULL;

    {
        PyObject *tmp_assign_source_483;
        PyObject *tmp_import_name_from_412;
        PyObject *tmp_name_name_297;
        PyObject *tmp_globals_name_297;
        PyObject *tmp_locals_name_297;
        PyObject *tmp_fromlist_name_297;
        PyObject *tmp_level_name_297;
        tmp_name_name_297 = const_str_plain_lecture2go;
        tmp_globals_name_297 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_297 = Py_None;
        tmp_fromlist_name_297 = const_tuple_str_plain_Lecture2GoIE_tuple;
        tmp_level_name_297 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 537;
        tmp_import_name_from_412 = IMPORT_MODULE5(tmp_name_name_297, tmp_globals_name_297, tmp_locals_name_297, tmp_fromlist_name_297, tmp_level_name_297);
        if (tmp_import_name_from_412 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 537;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_412)) {
           tmp_assign_source_483 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_412,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Lecture2GoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_483 = IMPORT_NAME(tmp_import_name_from_412, const_str_plain_Lecture2GoIE);
        }

        Py_DECREF(tmp_import_name_from_412);
        if (tmp_assign_source_483 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 537;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Lecture2GoIE, tmp_assign_source_483);
    }
    {
        PyObject *tmp_assign_source_484;
        PyObject *tmp_name_name_298;
        PyObject *tmp_globals_name_298;
        PyObject *tmp_locals_name_298;
        PyObject *tmp_fromlist_name_298;
        PyObject *tmp_level_name_298;
        tmp_name_name_298 = const_str_plain_lecturio;
        tmp_globals_name_298 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_298 = Py_None;
        tmp_fromlist_name_298 = const_tuple_d9dbadd0367cc19cceb8eea6f8a38581_tuple;
        tmp_level_name_298 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 538;
        tmp_assign_source_484 = IMPORT_MODULE5(tmp_name_name_298, tmp_globals_name_298, tmp_locals_name_298, tmp_fromlist_name_298, tmp_level_name_298);
        if (tmp_assign_source_484 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 538;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_69__module == NULL);
        tmp_import_from_69__module = tmp_assign_source_484;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_485;
        PyObject *tmp_import_name_from_413;
        CHECK_OBJECT(tmp_import_from_69__module);
        tmp_import_name_from_413 = tmp_import_from_69__module;
        if (PyModule_Check(tmp_import_name_from_413)) {
           tmp_assign_source_485 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_413,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LecturioIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_485 = IMPORT_NAME(tmp_import_name_from_413, const_str_plain_LecturioIE);
        }

        if (tmp_assign_source_485 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 538;

            goto try_except_handler_69;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LecturioIE, tmp_assign_source_485);
    }
    {
        PyObject *tmp_assign_source_486;
        PyObject *tmp_import_name_from_414;
        CHECK_OBJECT(tmp_import_from_69__module);
        tmp_import_name_from_414 = tmp_import_from_69__module;
        if (PyModule_Check(tmp_import_name_from_414)) {
           tmp_assign_source_486 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_414,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LecturioCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_486 = IMPORT_NAME(tmp_import_name_from_414, const_str_plain_LecturioCourseIE);
        }

        if (tmp_assign_source_486 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 538;

            goto try_except_handler_69;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LecturioCourseIE, tmp_assign_source_486);
    }
    {
        PyObject *tmp_assign_source_487;
        PyObject *tmp_import_name_from_415;
        CHECK_OBJECT(tmp_import_from_69__module);
        tmp_import_name_from_415 = tmp_import_from_69__module;
        if (PyModule_Check(tmp_import_name_from_415)) {
           tmp_assign_source_487 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_415,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LecturioDeCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_487 = IMPORT_NAME(tmp_import_name_from_415, const_str_plain_LecturioDeCourseIE);
        }

        if (tmp_assign_source_487 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 538;

            goto try_except_handler_69;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LecturioDeCourseIE, tmp_assign_source_487);
    }
    goto try_end_69;
    // Exception handler code:
    try_except_handler_69:;
    exception_keeper_type_69 = exception_type;
    exception_keeper_value_69 = exception_value;
    exception_keeper_tb_69 = exception_tb;
    exception_keeper_lineno_69 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_69__module);
    Py_DECREF(tmp_import_from_69__module);
    tmp_import_from_69__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_69;
    exception_value = exception_keeper_value_69;
    exception_tb = exception_keeper_tb_69;
    exception_lineno = exception_keeper_lineno_69;

    goto frame_exception_exit_1;
    // End of try:
    try_end_69:;
    CHECK_OBJECT(tmp_import_from_69__module);
    Py_DECREF(tmp_import_from_69__module);
    tmp_import_from_69__module = NULL;

    {
        PyObject *tmp_assign_source_488;
        PyObject *tmp_name_name_299;
        PyObject *tmp_globals_name_299;
        PyObject *tmp_locals_name_299;
        PyObject *tmp_fromlist_name_299;
        PyObject *tmp_level_name_299;
        tmp_name_name_299 = const_str_plain_leeco;
        tmp_globals_name_299 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_299 = Py_None;
        tmp_fromlist_name_299 = const_tuple_str_plain_LeIE_str_plain_LePlaylistIE_str_plain_LetvCloudIE_tuple;
        tmp_level_name_299 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 543;
        tmp_assign_source_488 = IMPORT_MODULE5(tmp_name_name_299, tmp_globals_name_299, tmp_locals_name_299, tmp_fromlist_name_299, tmp_level_name_299);
        if (tmp_assign_source_488 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 543;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_70__module == NULL);
        tmp_import_from_70__module = tmp_assign_source_488;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_489;
        PyObject *tmp_import_name_from_416;
        CHECK_OBJECT(tmp_import_from_70__module);
        tmp_import_name_from_416 = tmp_import_from_70__module;
        if (PyModule_Check(tmp_import_name_from_416)) {
           tmp_assign_source_489 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_416,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_489 = IMPORT_NAME(tmp_import_name_from_416, const_str_plain_LeIE);
        }

        if (tmp_assign_source_489 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 543;

            goto try_except_handler_70;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LeIE, tmp_assign_source_489);
    }
    {
        PyObject *tmp_assign_source_490;
        PyObject *tmp_import_name_from_417;
        CHECK_OBJECT(tmp_import_from_70__module);
        tmp_import_name_from_417 = tmp_import_from_70__module;
        if (PyModule_Check(tmp_import_name_from_417)) {
           tmp_assign_source_490 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_417,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LePlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_490 = IMPORT_NAME(tmp_import_name_from_417, const_str_plain_LePlaylistIE);
        }

        if (tmp_assign_source_490 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 543;

            goto try_except_handler_70;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LePlaylistIE, tmp_assign_source_490);
    }
    {
        PyObject *tmp_assign_source_491;
        PyObject *tmp_import_name_from_418;
        CHECK_OBJECT(tmp_import_from_70__module);
        tmp_import_name_from_418 = tmp_import_from_70__module;
        if (PyModule_Check(tmp_import_name_from_418)) {
           tmp_assign_source_491 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_418,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LetvCloudIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_491 = IMPORT_NAME(tmp_import_name_from_418, const_str_plain_LetvCloudIE);
        }

        if (tmp_assign_source_491 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 543;

            goto try_except_handler_70;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LetvCloudIE, tmp_assign_source_491);
    }
    goto try_end_70;
    // Exception handler code:
    try_except_handler_70:;
    exception_keeper_type_70 = exception_type;
    exception_keeper_value_70 = exception_value;
    exception_keeper_tb_70 = exception_tb;
    exception_keeper_lineno_70 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_70__module);
    Py_DECREF(tmp_import_from_70__module);
    tmp_import_from_70__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_70;
    exception_value = exception_keeper_value_70;
    exception_tb = exception_keeper_tb_70;
    exception_lineno = exception_keeper_lineno_70;

    goto frame_exception_exit_1;
    // End of try:
    try_end_70:;
    CHECK_OBJECT(tmp_import_from_70__module);
    Py_DECREF(tmp_import_from_70__module);
    tmp_import_from_70__module = NULL;

    {
        PyObject *tmp_assign_source_492;
        PyObject *tmp_import_name_from_419;
        PyObject *tmp_name_name_300;
        PyObject *tmp_globals_name_300;
        PyObject *tmp_locals_name_300;
        PyObject *tmp_fromlist_name_300;
        PyObject *tmp_level_name_300;
        tmp_name_name_300 = const_str_plain_lego;
        tmp_globals_name_300 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_300 = Py_None;
        tmp_fromlist_name_300 = const_tuple_str_plain_LEGOIE_tuple;
        tmp_level_name_300 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 548;
        tmp_import_name_from_419 = IMPORT_MODULE5(tmp_name_name_300, tmp_globals_name_300, tmp_locals_name_300, tmp_fromlist_name_300, tmp_level_name_300);
        if (tmp_import_name_from_419 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 548;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_419)) {
           tmp_assign_source_492 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_419,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LEGOIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_492 = IMPORT_NAME(tmp_import_name_from_419, const_str_plain_LEGOIE);
        }

        Py_DECREF(tmp_import_name_from_419);
        if (tmp_assign_source_492 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 548;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LEGOIE, tmp_assign_source_492);
    }
    {
        PyObject *tmp_assign_source_493;
        PyObject *tmp_import_name_from_420;
        PyObject *tmp_name_name_301;
        PyObject *tmp_globals_name_301;
        PyObject *tmp_locals_name_301;
        PyObject *tmp_fromlist_name_301;
        PyObject *tmp_level_name_301;
        tmp_name_name_301 = const_str_plain_lemonde;
        tmp_globals_name_301 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_301 = Py_None;
        tmp_fromlist_name_301 = const_tuple_str_plain_LemondeIE_tuple;
        tmp_level_name_301 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 549;
        tmp_import_name_from_420 = IMPORT_MODULE5(tmp_name_name_301, tmp_globals_name_301, tmp_locals_name_301, tmp_fromlist_name_301, tmp_level_name_301);
        if (tmp_import_name_from_420 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 549;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_420)) {
           tmp_assign_source_493 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_420,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LemondeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_493 = IMPORT_NAME(tmp_import_name_from_420, const_str_plain_LemondeIE);
        }

        Py_DECREF(tmp_import_name_from_420);
        if (tmp_assign_source_493 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 549;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LemondeIE, tmp_assign_source_493);
    }
    {
        PyObject *tmp_assign_source_494;
        PyObject *tmp_import_name_from_421;
        PyObject *tmp_name_name_302;
        PyObject *tmp_globals_name_302;
        PyObject *tmp_locals_name_302;
        PyObject *tmp_fromlist_name_302;
        PyObject *tmp_level_name_302;
        tmp_name_name_302 = const_str_plain_lenta;
        tmp_globals_name_302 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_302 = Py_None;
        tmp_fromlist_name_302 = const_tuple_str_plain_LentaIE_tuple;
        tmp_level_name_302 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 550;
        tmp_import_name_from_421 = IMPORT_MODULE5(tmp_name_name_302, tmp_globals_name_302, tmp_locals_name_302, tmp_fromlist_name_302, tmp_level_name_302);
        if (tmp_import_name_from_421 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 550;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_421)) {
           tmp_assign_source_494 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_421,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LentaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_494 = IMPORT_NAME(tmp_import_name_from_421, const_str_plain_LentaIE);
        }

        Py_DECREF(tmp_import_name_from_421);
        if (tmp_assign_source_494 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 550;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LentaIE, tmp_assign_source_494);
    }
    {
        PyObject *tmp_assign_source_495;
        PyObject *tmp_import_name_from_422;
        PyObject *tmp_name_name_303;
        PyObject *tmp_globals_name_303;
        PyObject *tmp_locals_name_303;
        PyObject *tmp_fromlist_name_303;
        PyObject *tmp_level_name_303;
        tmp_name_name_303 = const_str_plain_libraryofcongress;
        tmp_globals_name_303 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_303 = Py_None;
        tmp_fromlist_name_303 = const_tuple_str_plain_LibraryOfCongressIE_tuple;
        tmp_level_name_303 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 551;
        tmp_import_name_from_422 = IMPORT_MODULE5(tmp_name_name_303, tmp_globals_name_303, tmp_locals_name_303, tmp_fromlist_name_303, tmp_level_name_303);
        if (tmp_import_name_from_422 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 551;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_422)) {
           tmp_assign_source_495 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_422,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LibraryOfCongressIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_495 = IMPORT_NAME(tmp_import_name_from_422, const_str_plain_LibraryOfCongressIE);
        }

        Py_DECREF(tmp_import_name_from_422);
        if (tmp_assign_source_495 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 551;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LibraryOfCongressIE, tmp_assign_source_495);
    }
    {
        PyObject *tmp_assign_source_496;
        PyObject *tmp_import_name_from_423;
        PyObject *tmp_name_name_304;
        PyObject *tmp_globals_name_304;
        PyObject *tmp_locals_name_304;
        PyObject *tmp_fromlist_name_304;
        PyObject *tmp_level_name_304;
        tmp_name_name_304 = const_str_plain_libsyn;
        tmp_globals_name_304 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_304 = Py_None;
        tmp_fromlist_name_304 = const_tuple_str_plain_LibsynIE_tuple;
        tmp_level_name_304 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 552;
        tmp_import_name_from_423 = IMPORT_MODULE5(tmp_name_name_304, tmp_globals_name_304, tmp_locals_name_304, tmp_fromlist_name_304, tmp_level_name_304);
        if (tmp_import_name_from_423 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 552;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_423)) {
           tmp_assign_source_496 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_423,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LibsynIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_496 = IMPORT_NAME(tmp_import_name_from_423, const_str_plain_LibsynIE);
        }

        Py_DECREF(tmp_import_name_from_423);
        if (tmp_assign_source_496 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 552;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LibsynIE, tmp_assign_source_496);
    }
    {
        PyObject *tmp_assign_source_497;
        PyObject *tmp_name_name_305;
        PyObject *tmp_globals_name_305;
        PyObject *tmp_locals_name_305;
        PyObject *tmp_fromlist_name_305;
        PyObject *tmp_level_name_305;
        tmp_name_name_305 = const_str_plain_lifenews;
        tmp_globals_name_305 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_305 = Py_None;
        tmp_fromlist_name_305 = const_tuple_str_plain_LifeNewsIE_str_plain_LifeEmbedIE_tuple;
        tmp_level_name_305 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 553;
        tmp_assign_source_497 = IMPORT_MODULE5(tmp_name_name_305, tmp_globals_name_305, tmp_locals_name_305, tmp_fromlist_name_305, tmp_level_name_305);
        if (tmp_assign_source_497 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 553;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_71__module == NULL);
        tmp_import_from_71__module = tmp_assign_source_497;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_498;
        PyObject *tmp_import_name_from_424;
        CHECK_OBJECT(tmp_import_from_71__module);
        tmp_import_name_from_424 = tmp_import_from_71__module;
        if (PyModule_Check(tmp_import_name_from_424)) {
           tmp_assign_source_498 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_424,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LifeNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_498 = IMPORT_NAME(tmp_import_name_from_424, const_str_plain_LifeNewsIE);
        }

        if (tmp_assign_source_498 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 553;

            goto try_except_handler_71;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LifeNewsIE, tmp_assign_source_498);
    }
    {
        PyObject *tmp_assign_source_499;
        PyObject *tmp_import_name_from_425;
        CHECK_OBJECT(tmp_import_from_71__module);
        tmp_import_name_from_425 = tmp_import_from_71__module;
        if (PyModule_Check(tmp_import_name_from_425)) {
           tmp_assign_source_499 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_425,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LifeEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_499 = IMPORT_NAME(tmp_import_name_from_425, const_str_plain_LifeEmbedIE);
        }

        if (tmp_assign_source_499 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 553;

            goto try_except_handler_71;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LifeEmbedIE, tmp_assign_source_499);
    }
    goto try_end_71;
    // Exception handler code:
    try_except_handler_71:;
    exception_keeper_type_71 = exception_type;
    exception_keeper_value_71 = exception_value;
    exception_keeper_tb_71 = exception_tb;
    exception_keeper_lineno_71 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_71__module);
    Py_DECREF(tmp_import_from_71__module);
    tmp_import_from_71__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_71;
    exception_value = exception_keeper_value_71;
    exception_tb = exception_keeper_tb_71;
    exception_lineno = exception_keeper_lineno_71;

    goto frame_exception_exit_1;
    // End of try:
    try_end_71:;
    CHECK_OBJECT(tmp_import_from_71__module);
    Py_DECREF(tmp_import_from_71__module);
    tmp_import_from_71__module = NULL;

    {
        PyObject *tmp_assign_source_500;
        PyObject *tmp_name_name_306;
        PyObject *tmp_globals_name_306;
        PyObject *tmp_locals_name_306;
        PyObject *tmp_fromlist_name_306;
        PyObject *tmp_level_name_306;
        tmp_name_name_306 = const_str_plain_limelight;
        tmp_globals_name_306 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_306 = Py_None;
        tmp_fromlist_name_306 = const_tuple_315acfe0dc00e4686a7cf9335df409eb_tuple;
        tmp_level_name_306 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 557;
        tmp_assign_source_500 = IMPORT_MODULE5(tmp_name_name_306, tmp_globals_name_306, tmp_locals_name_306, tmp_fromlist_name_306, tmp_level_name_306);
        if (tmp_assign_source_500 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 557;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_72__module == NULL);
        tmp_import_from_72__module = tmp_assign_source_500;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_501;
        PyObject *tmp_import_name_from_426;
        CHECK_OBJECT(tmp_import_from_72__module);
        tmp_import_name_from_426 = tmp_import_from_72__module;
        if (PyModule_Check(tmp_import_name_from_426)) {
           tmp_assign_source_501 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_426,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LimelightMediaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_501 = IMPORT_NAME(tmp_import_name_from_426, const_str_plain_LimelightMediaIE);
        }

        if (tmp_assign_source_501 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 557;

            goto try_except_handler_72;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LimelightMediaIE, tmp_assign_source_501);
    }
    {
        PyObject *tmp_assign_source_502;
        PyObject *tmp_import_name_from_427;
        CHECK_OBJECT(tmp_import_from_72__module);
        tmp_import_name_from_427 = tmp_import_from_72__module;
        if (PyModule_Check(tmp_import_name_from_427)) {
           tmp_assign_source_502 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_427,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LimelightChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_502 = IMPORT_NAME(tmp_import_name_from_427, const_str_plain_LimelightChannelIE);
        }

        if (tmp_assign_source_502 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 557;

            goto try_except_handler_72;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LimelightChannelIE, tmp_assign_source_502);
    }
    {
        PyObject *tmp_assign_source_503;
        PyObject *tmp_import_name_from_428;
        CHECK_OBJECT(tmp_import_from_72__module);
        tmp_import_name_from_428 = tmp_import_from_72__module;
        if (PyModule_Check(tmp_import_name_from_428)) {
           tmp_assign_source_503 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_428,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LimelightChannelListIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_503 = IMPORT_NAME(tmp_import_name_from_428, const_str_plain_LimelightChannelListIE);
        }

        if (tmp_assign_source_503 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 557;

            goto try_except_handler_72;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LimelightChannelListIE, tmp_assign_source_503);
    }
    goto try_end_72;
    // Exception handler code:
    try_except_handler_72:;
    exception_keeper_type_72 = exception_type;
    exception_keeper_value_72 = exception_value;
    exception_keeper_tb_72 = exception_tb;
    exception_keeper_lineno_72 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_72__module);
    Py_DECREF(tmp_import_from_72__module);
    tmp_import_from_72__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_72;
    exception_value = exception_keeper_value_72;
    exception_tb = exception_keeper_tb_72;
    exception_lineno = exception_keeper_lineno_72;

    goto frame_exception_exit_1;
    // End of try:
    try_end_72:;
    CHECK_OBJECT(tmp_import_from_72__module);
    Py_DECREF(tmp_import_from_72__module);
    tmp_import_from_72__module = NULL;

    {
        PyObject *tmp_assign_source_504;
        PyObject *tmp_import_name_from_429;
        PyObject *tmp_name_name_307;
        PyObject *tmp_globals_name_307;
        PyObject *tmp_locals_name_307;
        PyObject *tmp_fromlist_name_307;
        PyObject *tmp_level_name_307;
        tmp_name_name_307 = const_str_plain_line;
        tmp_globals_name_307 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_307 = Py_None;
        tmp_fromlist_name_307 = const_tuple_str_plain_LineTVIE_tuple;
        tmp_level_name_307 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 562;
        tmp_import_name_from_429 = IMPORT_MODULE5(tmp_name_name_307, tmp_globals_name_307, tmp_locals_name_307, tmp_fromlist_name_307, tmp_level_name_307);
        if (tmp_import_name_from_429 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 562;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_429)) {
           tmp_assign_source_504 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_429,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LineTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_504 = IMPORT_NAME(tmp_import_name_from_429, const_str_plain_LineTVIE);
        }

        Py_DECREF(tmp_import_name_from_429);
        if (tmp_assign_source_504 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 562;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LineTVIE, tmp_assign_source_504);
    }
    {
        PyObject *tmp_assign_source_505;
        PyObject *tmp_name_name_308;
        PyObject *tmp_globals_name_308;
        PyObject *tmp_locals_name_308;
        PyObject *tmp_fromlist_name_308;
        PyObject *tmp_level_name_308;
        tmp_name_name_308 = const_str_plain_linkedin;
        tmp_globals_name_308 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_308 = Py_None;
        tmp_fromlist_name_308 = const_tuple_e25b2eeb438de32f8007ad08ab7fc997_tuple;
        tmp_level_name_308 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 563;
        tmp_assign_source_505 = IMPORT_MODULE5(tmp_name_name_308, tmp_globals_name_308, tmp_locals_name_308, tmp_fromlist_name_308, tmp_level_name_308);
        if (tmp_assign_source_505 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 563;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_73__module == NULL);
        tmp_import_from_73__module = tmp_assign_source_505;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_506;
        PyObject *tmp_import_name_from_430;
        CHECK_OBJECT(tmp_import_from_73__module);
        tmp_import_name_from_430 = tmp_import_from_73__module;
        if (PyModule_Check(tmp_import_name_from_430)) {
           tmp_assign_source_506 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_430,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LinkedInLearningIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_506 = IMPORT_NAME(tmp_import_name_from_430, const_str_plain_LinkedInLearningIE);
        }

        if (tmp_assign_source_506 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 563;

            goto try_except_handler_73;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LinkedInLearningIE, tmp_assign_source_506);
    }
    {
        PyObject *tmp_assign_source_507;
        PyObject *tmp_import_name_from_431;
        CHECK_OBJECT(tmp_import_from_73__module);
        tmp_import_name_from_431 = tmp_import_from_73__module;
        if (PyModule_Check(tmp_import_name_from_431)) {
           tmp_assign_source_507 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_431,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LinkedInLearningCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_507 = IMPORT_NAME(tmp_import_name_from_431, const_str_plain_LinkedInLearningCourseIE);
        }

        if (tmp_assign_source_507 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 563;

            goto try_except_handler_73;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LinkedInLearningCourseIE, tmp_assign_source_507);
    }
    goto try_end_73;
    // Exception handler code:
    try_except_handler_73:;
    exception_keeper_type_73 = exception_type;
    exception_keeper_value_73 = exception_value;
    exception_keeper_tb_73 = exception_tb;
    exception_keeper_lineno_73 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_73__module);
    Py_DECREF(tmp_import_from_73__module);
    tmp_import_from_73__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_73;
    exception_value = exception_keeper_value_73;
    exception_tb = exception_keeper_tb_73;
    exception_lineno = exception_keeper_lineno_73;

    goto frame_exception_exit_1;
    // End of try:
    try_end_73:;
    CHECK_OBJECT(tmp_import_from_73__module);
    Py_DECREF(tmp_import_from_73__module);
    tmp_import_from_73__module = NULL;

    {
        PyObject *tmp_assign_source_508;
        PyObject *tmp_import_name_from_432;
        PyObject *tmp_name_name_309;
        PyObject *tmp_globals_name_309;
        PyObject *tmp_locals_name_309;
        PyObject *tmp_fromlist_name_309;
        PyObject *tmp_level_name_309;
        tmp_name_name_309 = const_str_plain_linuxacademy;
        tmp_globals_name_309 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_309 = Py_None;
        tmp_fromlist_name_309 = const_tuple_str_plain_LinuxAcademyIE_tuple;
        tmp_level_name_309 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 567;
        tmp_import_name_from_432 = IMPORT_MODULE5(tmp_name_name_309, tmp_globals_name_309, tmp_locals_name_309, tmp_fromlist_name_309, tmp_level_name_309);
        if (tmp_import_name_from_432 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 567;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_432)) {
           tmp_assign_source_508 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_432,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LinuxAcademyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_508 = IMPORT_NAME(tmp_import_name_from_432, const_str_plain_LinuxAcademyIE);
        }

        Py_DECREF(tmp_import_name_from_432);
        if (tmp_assign_source_508 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 567;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LinuxAcademyIE, tmp_assign_source_508);
    }
    {
        PyObject *tmp_assign_source_509;
        PyObject *tmp_import_name_from_433;
        PyObject *tmp_name_name_310;
        PyObject *tmp_globals_name_310;
        PyObject *tmp_locals_name_310;
        PyObject *tmp_fromlist_name_310;
        PyObject *tmp_level_name_310;
        tmp_name_name_310 = const_str_plain_litv;
        tmp_globals_name_310 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_310 = Py_None;
        tmp_fromlist_name_310 = const_tuple_str_plain_LiTVIE_tuple;
        tmp_level_name_310 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 568;
        tmp_import_name_from_433 = IMPORT_MODULE5(tmp_name_name_310, tmp_globals_name_310, tmp_locals_name_310, tmp_fromlist_name_310, tmp_level_name_310);
        if (tmp_import_name_from_433 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 568;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_433)) {
           tmp_assign_source_509 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_433,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LiTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_509 = IMPORT_NAME(tmp_import_name_from_433, const_str_plain_LiTVIE);
        }

        Py_DECREF(tmp_import_name_from_433);
        if (tmp_assign_source_509 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 568;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LiTVIE, tmp_assign_source_509);
    }
    {
        PyObject *tmp_assign_source_510;
        PyObject *tmp_import_name_from_434;
        PyObject *tmp_name_name_311;
        PyObject *tmp_globals_name_311;
        PyObject *tmp_locals_name_311;
        PyObject *tmp_fromlist_name_311;
        PyObject *tmp_level_name_311;
        tmp_name_name_311 = const_str_plain_livejournal;
        tmp_globals_name_311 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_311 = Py_None;
        tmp_fromlist_name_311 = const_tuple_str_plain_LiveJournalIE_tuple;
        tmp_level_name_311 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 569;
        tmp_import_name_from_434 = IMPORT_MODULE5(tmp_name_name_311, tmp_globals_name_311, tmp_locals_name_311, tmp_fromlist_name_311, tmp_level_name_311);
        if (tmp_import_name_from_434 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 569;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_434)) {
           tmp_assign_source_510 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_434,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LiveJournalIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_510 = IMPORT_NAME(tmp_import_name_from_434, const_str_plain_LiveJournalIE);
        }

        Py_DECREF(tmp_import_name_from_434);
        if (tmp_assign_source_510 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 569;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LiveJournalIE, tmp_assign_source_510);
    }
    {
        PyObject *tmp_assign_source_511;
        PyObject *tmp_name_name_312;
        PyObject *tmp_globals_name_312;
        PyObject *tmp_locals_name_312;
        PyObject *tmp_fromlist_name_312;
        PyObject *tmp_level_name_312;
        tmp_name_name_312 = const_str_plain_liveleak;
        tmp_globals_name_312 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_312 = Py_None;
        tmp_fromlist_name_312 = const_tuple_str_plain_LiveLeakIE_str_plain_LiveLeakEmbedIE_tuple;
        tmp_level_name_312 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 570;
        tmp_assign_source_511 = IMPORT_MODULE5(tmp_name_name_312, tmp_globals_name_312, tmp_locals_name_312, tmp_fromlist_name_312, tmp_level_name_312);
        if (tmp_assign_source_511 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 570;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_74__module == NULL);
        tmp_import_from_74__module = tmp_assign_source_511;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_512;
        PyObject *tmp_import_name_from_435;
        CHECK_OBJECT(tmp_import_from_74__module);
        tmp_import_name_from_435 = tmp_import_from_74__module;
        if (PyModule_Check(tmp_import_name_from_435)) {
           tmp_assign_source_512 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_435,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LiveLeakIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_512 = IMPORT_NAME(tmp_import_name_from_435, const_str_plain_LiveLeakIE);
        }

        if (tmp_assign_source_512 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 570;

            goto try_except_handler_74;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LiveLeakIE, tmp_assign_source_512);
    }
    {
        PyObject *tmp_assign_source_513;
        PyObject *tmp_import_name_from_436;
        CHECK_OBJECT(tmp_import_from_74__module);
        tmp_import_name_from_436 = tmp_import_from_74__module;
        if (PyModule_Check(tmp_import_name_from_436)) {
           tmp_assign_source_513 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_436,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LiveLeakEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_513 = IMPORT_NAME(tmp_import_name_from_436, const_str_plain_LiveLeakEmbedIE);
        }

        if (tmp_assign_source_513 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 570;

            goto try_except_handler_74;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LiveLeakEmbedIE, tmp_assign_source_513);
    }
    goto try_end_74;
    // Exception handler code:
    try_except_handler_74:;
    exception_keeper_type_74 = exception_type;
    exception_keeper_value_74 = exception_value;
    exception_keeper_tb_74 = exception_tb;
    exception_keeper_lineno_74 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_74__module);
    Py_DECREF(tmp_import_from_74__module);
    tmp_import_from_74__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_74;
    exception_value = exception_keeper_value_74;
    exception_tb = exception_keeper_tb_74;
    exception_lineno = exception_keeper_lineno_74;

    goto frame_exception_exit_1;
    // End of try:
    try_end_74:;
    CHECK_OBJECT(tmp_import_from_74__module);
    Py_DECREF(tmp_import_from_74__module);
    tmp_import_from_74__module = NULL;

    {
        PyObject *tmp_assign_source_514;
        PyObject *tmp_name_name_313;
        PyObject *tmp_globals_name_313;
        PyObject *tmp_locals_name_313;
        PyObject *tmp_fromlist_name_313;
        PyObject *tmp_level_name_313;
        tmp_name_name_313 = const_str_plain_livestream;
        tmp_globals_name_313 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_313 = Py_None;
        tmp_fromlist_name_313 = const_tuple_fe77aa66350a8be87a6c8fcf71ccaa21_tuple;
        tmp_level_name_313 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 574;
        tmp_assign_source_514 = IMPORT_MODULE5(tmp_name_name_313, tmp_globals_name_313, tmp_locals_name_313, tmp_fromlist_name_313, tmp_level_name_313);
        if (tmp_assign_source_514 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 574;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_75__module == NULL);
        tmp_import_from_75__module = tmp_assign_source_514;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_515;
        PyObject *tmp_import_name_from_437;
        CHECK_OBJECT(tmp_import_from_75__module);
        tmp_import_name_from_437 = tmp_import_from_75__module;
        if (PyModule_Check(tmp_import_name_from_437)) {
           tmp_assign_source_515 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_437,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LivestreamIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_515 = IMPORT_NAME(tmp_import_name_from_437, const_str_plain_LivestreamIE);
        }

        if (tmp_assign_source_515 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 574;

            goto try_except_handler_75;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LivestreamIE, tmp_assign_source_515);
    }
    {
        PyObject *tmp_assign_source_516;
        PyObject *tmp_import_name_from_438;
        CHECK_OBJECT(tmp_import_from_75__module);
        tmp_import_name_from_438 = tmp_import_from_75__module;
        if (PyModule_Check(tmp_import_name_from_438)) {
           tmp_assign_source_516 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_438,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LivestreamOriginalIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_516 = IMPORT_NAME(tmp_import_name_from_438, const_str_plain_LivestreamOriginalIE);
        }

        if (tmp_assign_source_516 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 574;

            goto try_except_handler_75;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LivestreamOriginalIE, tmp_assign_source_516);
    }
    {
        PyObject *tmp_assign_source_517;
        PyObject *tmp_import_name_from_439;
        CHECK_OBJECT(tmp_import_from_75__module);
        tmp_import_name_from_439 = tmp_import_from_75__module;
        if (PyModule_Check(tmp_import_name_from_439)) {
           tmp_assign_source_517 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_439,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LivestreamShortenerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_517 = IMPORT_NAME(tmp_import_name_from_439, const_str_plain_LivestreamShortenerIE);
        }

        if (tmp_assign_source_517 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 574;

            goto try_except_handler_75;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LivestreamShortenerIE, tmp_assign_source_517);
    }
    goto try_end_75;
    // Exception handler code:
    try_except_handler_75:;
    exception_keeper_type_75 = exception_type;
    exception_keeper_value_75 = exception_value;
    exception_keeper_tb_75 = exception_tb;
    exception_keeper_lineno_75 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_75__module);
    Py_DECREF(tmp_import_from_75__module);
    tmp_import_from_75__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_75;
    exception_value = exception_keeper_value_75;
    exception_tb = exception_keeper_tb_75;
    exception_lineno = exception_keeper_lineno_75;

    goto frame_exception_exit_1;
    // End of try:
    try_end_75:;
    CHECK_OBJECT(tmp_import_from_75__module);
    Py_DECREF(tmp_import_from_75__module);
    tmp_import_from_75__module = NULL;

    {
        PyObject *tmp_assign_source_518;
        PyObject *tmp_import_name_from_440;
        PyObject *tmp_name_name_314;
        PyObject *tmp_globals_name_314;
        PyObject *tmp_locals_name_314;
        PyObject *tmp_fromlist_name_314;
        PyObject *tmp_level_name_314;
        tmp_name_name_314 = const_str_plain_lnkgo;
        tmp_globals_name_314 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_314 = Py_None;
        tmp_fromlist_name_314 = const_tuple_str_plain_LnkGoIE_tuple;
        tmp_level_name_314 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 579;
        tmp_import_name_from_440 = IMPORT_MODULE5(tmp_name_name_314, tmp_globals_name_314, tmp_locals_name_314, tmp_fromlist_name_314, tmp_level_name_314);
        if (tmp_import_name_from_440 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 579;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_440)) {
           tmp_assign_source_518 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_440,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LnkGoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_518 = IMPORT_NAME(tmp_import_name_from_440, const_str_plain_LnkGoIE);
        }

        Py_DECREF(tmp_import_name_from_440);
        if (tmp_assign_source_518 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 579;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LnkGoIE, tmp_assign_source_518);
    }
    {
        PyObject *tmp_assign_source_519;
        PyObject *tmp_import_name_from_441;
        PyObject *tmp_name_name_315;
        PyObject *tmp_globals_name_315;
        PyObject *tmp_locals_name_315;
        PyObject *tmp_fromlist_name_315;
        PyObject *tmp_level_name_315;
        tmp_name_name_315 = const_str_plain_localnews8;
        tmp_globals_name_315 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_315 = Py_None;
        tmp_fromlist_name_315 = const_tuple_str_plain_LocalNews8IE_tuple;
        tmp_level_name_315 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 580;
        tmp_import_name_from_441 = IMPORT_MODULE5(tmp_name_name_315, tmp_globals_name_315, tmp_locals_name_315, tmp_fromlist_name_315, tmp_level_name_315);
        if (tmp_import_name_from_441 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 580;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_441)) {
           tmp_assign_source_519 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_441,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LocalNews8IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_519 = IMPORT_NAME(tmp_import_name_from_441, const_str_plain_LocalNews8IE);
        }

        Py_DECREF(tmp_import_name_from_441);
        if (tmp_assign_source_519 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 580;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LocalNews8IE, tmp_assign_source_519);
    }
    {
        PyObject *tmp_assign_source_520;
        PyObject *tmp_import_name_from_442;
        PyObject *tmp_name_name_316;
        PyObject *tmp_globals_name_316;
        PyObject *tmp_locals_name_316;
        PyObject *tmp_fromlist_name_316;
        PyObject *tmp_level_name_316;
        tmp_name_name_316 = const_str_plain_lovehomeporn;
        tmp_globals_name_316 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_316 = Py_None;
        tmp_fromlist_name_316 = const_tuple_str_plain_LoveHomePornIE_tuple;
        tmp_level_name_316 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 581;
        tmp_import_name_from_442 = IMPORT_MODULE5(tmp_name_name_316, tmp_globals_name_316, tmp_locals_name_316, tmp_fromlist_name_316, tmp_level_name_316);
        if (tmp_import_name_from_442 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 581;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_442)) {
           tmp_assign_source_520 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_442,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LoveHomePornIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_520 = IMPORT_NAME(tmp_import_name_from_442, const_str_plain_LoveHomePornIE);
        }

        Py_DECREF(tmp_import_name_from_442);
        if (tmp_assign_source_520 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 581;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LoveHomePornIE, tmp_assign_source_520);
    }
    {
        PyObject *tmp_assign_source_521;
        PyObject *tmp_import_name_from_443;
        PyObject *tmp_name_name_317;
        PyObject *tmp_globals_name_317;
        PyObject *tmp_locals_name_317;
        PyObject *tmp_fromlist_name_317;
        PyObject *tmp_level_name_317;
        tmp_name_name_317 = const_str_plain_lrt;
        tmp_globals_name_317 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_317 = Py_None;
        tmp_fromlist_name_317 = const_tuple_str_plain_LRTIE_tuple;
        tmp_level_name_317 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 582;
        tmp_import_name_from_443 = IMPORT_MODULE5(tmp_name_name_317, tmp_globals_name_317, tmp_locals_name_317, tmp_fromlist_name_317, tmp_level_name_317);
        if (tmp_import_name_from_443 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 582;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_443)) {
           tmp_assign_source_521 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_443,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LRTIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_521 = IMPORT_NAME(tmp_import_name_from_443, const_str_plain_LRTIE);
        }

        Py_DECREF(tmp_import_name_from_443);
        if (tmp_assign_source_521 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 582;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LRTIE, tmp_assign_source_521);
    }
    {
        PyObject *tmp_assign_source_522;
        PyObject *tmp_name_name_318;
        PyObject *tmp_globals_name_318;
        PyObject *tmp_locals_name_318;
        PyObject *tmp_fromlist_name_318;
        PyObject *tmp_level_name_318;
        tmp_name_name_318 = const_str_plain_lynda;
        tmp_globals_name_318 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_318 = Py_None;
        tmp_fromlist_name_318 = const_tuple_str_plain_LyndaIE_str_plain_LyndaCourseIE_tuple;
        tmp_level_name_318 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 583;
        tmp_assign_source_522 = IMPORT_MODULE5(tmp_name_name_318, tmp_globals_name_318, tmp_locals_name_318, tmp_fromlist_name_318, tmp_level_name_318);
        if (tmp_assign_source_522 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 583;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_76__module == NULL);
        tmp_import_from_76__module = tmp_assign_source_522;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_523;
        PyObject *tmp_import_name_from_444;
        CHECK_OBJECT(tmp_import_from_76__module);
        tmp_import_name_from_444 = tmp_import_from_76__module;
        if (PyModule_Check(tmp_import_name_from_444)) {
           tmp_assign_source_523 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_444,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LyndaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_523 = IMPORT_NAME(tmp_import_name_from_444, const_str_plain_LyndaIE);
        }

        if (tmp_assign_source_523 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 583;

            goto try_except_handler_76;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LyndaIE, tmp_assign_source_523);
    }
    {
        PyObject *tmp_assign_source_524;
        PyObject *tmp_import_name_from_445;
        CHECK_OBJECT(tmp_import_from_76__module);
        tmp_import_name_from_445 = tmp_import_from_76__module;
        if (PyModule_Check(tmp_import_name_from_445)) {
           tmp_assign_source_524 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_445,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_LyndaCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_524 = IMPORT_NAME(tmp_import_name_from_445, const_str_plain_LyndaCourseIE);
        }

        if (tmp_assign_source_524 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 583;

            goto try_except_handler_76;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_LyndaCourseIE, tmp_assign_source_524);
    }
    goto try_end_76;
    // Exception handler code:
    try_except_handler_76:;
    exception_keeper_type_76 = exception_type;
    exception_keeper_value_76 = exception_value;
    exception_keeper_tb_76 = exception_tb;
    exception_keeper_lineno_76 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_76__module);
    Py_DECREF(tmp_import_from_76__module);
    tmp_import_from_76__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_76;
    exception_value = exception_keeper_value_76;
    exception_tb = exception_keeper_tb_76;
    exception_lineno = exception_keeper_lineno_76;

    goto frame_exception_exit_1;
    // End of try:
    try_end_76:;
    CHECK_OBJECT(tmp_import_from_76__module);
    Py_DECREF(tmp_import_from_76__module);
    tmp_import_from_76__module = NULL;

    {
        PyObject *tmp_assign_source_525;
        PyObject *tmp_import_name_from_446;
        PyObject *tmp_name_name_319;
        PyObject *tmp_globals_name_319;
        PyObject *tmp_locals_name_319;
        PyObject *tmp_fromlist_name_319;
        PyObject *tmp_level_name_319;
        tmp_name_name_319 = const_str_plain_m6;
        tmp_globals_name_319 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_319 = Py_None;
        tmp_fromlist_name_319 = const_tuple_str_plain_M6IE_tuple;
        tmp_level_name_319 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 587;
        tmp_import_name_from_446 = IMPORT_MODULE5(tmp_name_name_319, tmp_globals_name_319, tmp_locals_name_319, tmp_fromlist_name_319, tmp_level_name_319);
        if (tmp_import_name_from_446 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 587;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_446)) {
           tmp_assign_source_525 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_446,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_M6IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_525 = IMPORT_NAME(tmp_import_name_from_446, const_str_plain_M6IE);
        }

        Py_DECREF(tmp_import_name_from_446);
        if (tmp_assign_source_525 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 587;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_M6IE, tmp_assign_source_525);
    }
    {
        PyObject *tmp_assign_source_526;
        PyObject *tmp_name_name_320;
        PyObject *tmp_globals_name_320;
        PyObject *tmp_locals_name_320;
        PyObject *tmp_fromlist_name_320;
        PyObject *tmp_level_name_320;
        tmp_name_name_320 = const_str_plain_mailru;
        tmp_globals_name_320 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_320 = Py_None;
        tmp_fromlist_name_320 = const_tuple_7282d20c3aa5368967332b03202bda9d_tuple;
        tmp_level_name_320 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 588;
        tmp_assign_source_526 = IMPORT_MODULE5(tmp_name_name_320, tmp_globals_name_320, tmp_locals_name_320, tmp_fromlist_name_320, tmp_level_name_320);
        if (tmp_assign_source_526 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 588;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_77__module == NULL);
        tmp_import_from_77__module = tmp_assign_source_526;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_527;
        PyObject *tmp_import_name_from_447;
        CHECK_OBJECT(tmp_import_from_77__module);
        tmp_import_name_from_447 = tmp_import_from_77__module;
        if (PyModule_Check(tmp_import_name_from_447)) {
           tmp_assign_source_527 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_447,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MailRuIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_527 = IMPORT_NAME(tmp_import_name_from_447, const_str_plain_MailRuIE);
        }

        if (tmp_assign_source_527 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 588;

            goto try_except_handler_77;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MailRuIE, tmp_assign_source_527);
    }
    {
        PyObject *tmp_assign_source_528;
        PyObject *tmp_import_name_from_448;
        CHECK_OBJECT(tmp_import_from_77__module);
        tmp_import_name_from_448 = tmp_import_from_77__module;
        if (PyModule_Check(tmp_import_name_from_448)) {
           tmp_assign_source_528 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_448,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MailRuMusicIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_528 = IMPORT_NAME(tmp_import_name_from_448, const_str_plain_MailRuMusicIE);
        }

        if (tmp_assign_source_528 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 588;

            goto try_except_handler_77;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MailRuMusicIE, tmp_assign_source_528);
    }
    {
        PyObject *tmp_assign_source_529;
        PyObject *tmp_import_name_from_449;
        CHECK_OBJECT(tmp_import_from_77__module);
        tmp_import_name_from_449 = tmp_import_from_77__module;
        if (PyModule_Check(tmp_import_name_from_449)) {
           tmp_assign_source_529 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_449,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MailRuMusicSearchIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_529 = IMPORT_NAME(tmp_import_name_from_449, const_str_plain_MailRuMusicSearchIE);
        }

        if (tmp_assign_source_529 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 588;

            goto try_except_handler_77;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MailRuMusicSearchIE, tmp_assign_source_529);
    }
    goto try_end_77;
    // Exception handler code:
    try_except_handler_77:;
    exception_keeper_type_77 = exception_type;
    exception_keeper_value_77 = exception_value;
    exception_keeper_tb_77 = exception_tb;
    exception_keeper_lineno_77 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_77__module);
    Py_DECREF(tmp_import_from_77__module);
    tmp_import_from_77__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_77;
    exception_value = exception_keeper_value_77;
    exception_tb = exception_keeper_tb_77;
    exception_lineno = exception_keeper_lineno_77;

    goto frame_exception_exit_1;
    // End of try:
    try_end_77:;
    CHECK_OBJECT(tmp_import_from_77__module);
    Py_DECREF(tmp_import_from_77__module);
    tmp_import_from_77__module = NULL;

    {
        PyObject *tmp_assign_source_530;
        PyObject *tmp_import_name_from_450;
        PyObject *tmp_name_name_321;
        PyObject *tmp_globals_name_321;
        PyObject *tmp_locals_name_321;
        PyObject *tmp_fromlist_name_321;
        PyObject *tmp_level_name_321;
        tmp_name_name_321 = const_str_plain_malltv;
        tmp_globals_name_321 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_321 = Py_None;
        tmp_fromlist_name_321 = const_tuple_str_plain_MallTVIE_tuple;
        tmp_level_name_321 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 593;
        tmp_import_name_from_450 = IMPORT_MODULE5(tmp_name_name_321, tmp_globals_name_321, tmp_locals_name_321, tmp_fromlist_name_321, tmp_level_name_321);
        if (tmp_import_name_from_450 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 593;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_450)) {
           tmp_assign_source_530 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_450,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MallTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_530 = IMPORT_NAME(tmp_import_name_from_450, const_str_plain_MallTVIE);
        }

        Py_DECREF(tmp_import_name_from_450);
        if (tmp_assign_source_530 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 593;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MallTVIE, tmp_assign_source_530);
    }
    {
        PyObject *tmp_assign_source_531;
        PyObject *tmp_name_name_322;
        PyObject *tmp_globals_name_322;
        PyObject *tmp_locals_name_322;
        PyObject *tmp_fromlist_name_322;
        PyObject *tmp_level_name_322;
        tmp_name_name_322 = const_str_plain_mangomolo;
        tmp_globals_name_322 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_322 = Py_None;
        tmp_fromlist_name_322 = const_tuple_str_plain_MangomoloVideoIE_str_plain_MangomoloLiveIE_tuple;
        tmp_level_name_322 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 594;
        tmp_assign_source_531 = IMPORT_MODULE5(tmp_name_name_322, tmp_globals_name_322, tmp_locals_name_322, tmp_fromlist_name_322, tmp_level_name_322);
        if (tmp_assign_source_531 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 594;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_78__module == NULL);
        tmp_import_from_78__module = tmp_assign_source_531;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_532;
        PyObject *tmp_import_name_from_451;
        CHECK_OBJECT(tmp_import_from_78__module);
        tmp_import_name_from_451 = tmp_import_from_78__module;
        if (PyModule_Check(tmp_import_name_from_451)) {
           tmp_assign_source_532 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_451,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MangomoloVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_532 = IMPORT_NAME(tmp_import_name_from_451, const_str_plain_MangomoloVideoIE);
        }

        if (tmp_assign_source_532 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 594;

            goto try_except_handler_78;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MangomoloVideoIE, tmp_assign_source_532);
    }
    {
        PyObject *tmp_assign_source_533;
        PyObject *tmp_import_name_from_452;
        CHECK_OBJECT(tmp_import_from_78__module);
        tmp_import_name_from_452 = tmp_import_from_78__module;
        if (PyModule_Check(tmp_import_name_from_452)) {
           tmp_assign_source_533 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_452,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MangomoloLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_533 = IMPORT_NAME(tmp_import_name_from_452, const_str_plain_MangomoloLiveIE);
        }

        if (tmp_assign_source_533 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 594;

            goto try_except_handler_78;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MangomoloLiveIE, tmp_assign_source_533);
    }
    goto try_end_78;
    // Exception handler code:
    try_except_handler_78:;
    exception_keeper_type_78 = exception_type;
    exception_keeper_value_78 = exception_value;
    exception_keeper_tb_78 = exception_tb;
    exception_keeper_lineno_78 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_78__module);
    Py_DECREF(tmp_import_from_78__module);
    tmp_import_from_78__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_78;
    exception_value = exception_keeper_value_78;
    exception_tb = exception_keeper_tb_78;
    exception_lineno = exception_keeper_lineno_78;

    goto frame_exception_exit_1;
    // End of try:
    try_end_78:;
    CHECK_OBJECT(tmp_import_from_78__module);
    Py_DECREF(tmp_import_from_78__module);
    tmp_import_from_78__module = NULL;

    {
        PyObject *tmp_assign_source_534;
        PyObject *tmp_import_name_from_453;
        PyObject *tmp_name_name_323;
        PyObject *tmp_globals_name_323;
        PyObject *tmp_locals_name_323;
        PyObject *tmp_fromlist_name_323;
        PyObject *tmp_level_name_323;
        tmp_name_name_323 = const_str_plain_manyvids;
        tmp_globals_name_323 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_323 = Py_None;
        tmp_fromlist_name_323 = const_tuple_str_plain_ManyVidsIE_tuple;
        tmp_level_name_323 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 598;
        tmp_import_name_from_453 = IMPORT_MODULE5(tmp_name_name_323, tmp_globals_name_323, tmp_locals_name_323, tmp_fromlist_name_323, tmp_level_name_323);
        if (tmp_import_name_from_453 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 598;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_453)) {
           tmp_assign_source_534 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_453,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ManyVidsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_534 = IMPORT_NAME(tmp_import_name_from_453, const_str_plain_ManyVidsIE);
        }

        Py_DECREF(tmp_import_name_from_453);
        if (tmp_assign_source_534 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 598;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ManyVidsIE, tmp_assign_source_534);
    }
    {
        PyObject *tmp_assign_source_535;
        PyObject *tmp_name_name_324;
        PyObject *tmp_globals_name_324;
        PyObject *tmp_locals_name_324;
        PyObject *tmp_fromlist_name_324;
        PyObject *tmp_level_name_324;
        tmp_name_name_324 = const_str_plain_markiza;
        tmp_globals_name_324 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_324 = Py_None;
        tmp_fromlist_name_324 = const_tuple_str_plain_MarkizaIE_str_plain_MarkizaPageIE_tuple;
        tmp_level_name_324 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 599;
        tmp_assign_source_535 = IMPORT_MODULE5(tmp_name_name_324, tmp_globals_name_324, tmp_locals_name_324, tmp_fromlist_name_324, tmp_level_name_324);
        if (tmp_assign_source_535 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 599;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_79__module == NULL);
        tmp_import_from_79__module = tmp_assign_source_535;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_536;
        PyObject *tmp_import_name_from_454;
        CHECK_OBJECT(tmp_import_from_79__module);
        tmp_import_name_from_454 = tmp_import_from_79__module;
        if (PyModule_Check(tmp_import_name_from_454)) {
           tmp_assign_source_536 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_454,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MarkizaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_536 = IMPORT_NAME(tmp_import_name_from_454, const_str_plain_MarkizaIE);
        }

        if (tmp_assign_source_536 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 599;

            goto try_except_handler_79;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MarkizaIE, tmp_assign_source_536);
    }
    {
        PyObject *tmp_assign_source_537;
        PyObject *tmp_import_name_from_455;
        CHECK_OBJECT(tmp_import_from_79__module);
        tmp_import_name_from_455 = tmp_import_from_79__module;
        if (PyModule_Check(tmp_import_name_from_455)) {
           tmp_assign_source_537 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_455,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MarkizaPageIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_537 = IMPORT_NAME(tmp_import_name_from_455, const_str_plain_MarkizaPageIE);
        }

        if (tmp_assign_source_537 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 599;

            goto try_except_handler_79;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MarkizaPageIE, tmp_assign_source_537);
    }
    goto try_end_79;
    // Exception handler code:
    try_except_handler_79:;
    exception_keeper_type_79 = exception_type;
    exception_keeper_value_79 = exception_value;
    exception_keeper_tb_79 = exception_tb;
    exception_keeper_lineno_79 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_79__module);
    Py_DECREF(tmp_import_from_79__module);
    tmp_import_from_79__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_79;
    exception_value = exception_keeper_value_79;
    exception_tb = exception_keeper_tb_79;
    exception_lineno = exception_keeper_lineno_79;

    goto frame_exception_exit_1;
    // End of try:
    try_end_79:;
    CHECK_OBJECT(tmp_import_from_79__module);
    Py_DECREF(tmp_import_from_79__module);
    tmp_import_from_79__module = NULL;

    {
        PyObject *tmp_assign_source_538;
        PyObject *tmp_import_name_from_456;
        PyObject *tmp_name_name_325;
        PyObject *tmp_globals_name_325;
        PyObject *tmp_locals_name_325;
        PyObject *tmp_fromlist_name_325;
        PyObject *tmp_level_name_325;
        tmp_name_name_325 = const_str_plain_massengeschmacktv;
        tmp_globals_name_325 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_325 = Py_None;
        tmp_fromlist_name_325 = const_tuple_str_plain_MassengeschmackTVIE_tuple;
        tmp_level_name_325 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 603;
        tmp_import_name_from_456 = IMPORT_MODULE5(tmp_name_name_325, tmp_globals_name_325, tmp_locals_name_325, tmp_fromlist_name_325, tmp_level_name_325);
        if (tmp_import_name_from_456 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 603;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_456)) {
           tmp_assign_source_538 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_456,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MassengeschmackTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_538 = IMPORT_NAME(tmp_import_name_from_456, const_str_plain_MassengeschmackTVIE);
        }

        Py_DECREF(tmp_import_name_from_456);
        if (tmp_assign_source_538 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 603;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MassengeschmackTVIE, tmp_assign_source_538);
    }
    {
        PyObject *tmp_assign_source_539;
        PyObject *tmp_import_name_from_457;
        PyObject *tmp_name_name_326;
        PyObject *tmp_globals_name_326;
        PyObject *tmp_locals_name_326;
        PyObject *tmp_fromlist_name_326;
        PyObject *tmp_level_name_326;
        tmp_name_name_326 = const_str_plain_matchtv;
        tmp_globals_name_326 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_326 = Py_None;
        tmp_fromlist_name_326 = const_tuple_str_plain_MatchTVIE_tuple;
        tmp_level_name_326 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 604;
        tmp_import_name_from_457 = IMPORT_MODULE5(tmp_name_name_326, tmp_globals_name_326, tmp_locals_name_326, tmp_fromlist_name_326, tmp_level_name_326);
        if (tmp_import_name_from_457 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 604;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_457)) {
           tmp_assign_source_539 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_457,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MatchTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_539 = IMPORT_NAME(tmp_import_name_from_457, const_str_plain_MatchTVIE);
        }

        Py_DECREF(tmp_import_name_from_457);
        if (tmp_assign_source_539 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 604;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MatchTVIE, tmp_assign_source_539);
    }
    {
        PyObject *tmp_assign_source_540;
        PyObject *tmp_import_name_from_458;
        PyObject *tmp_name_name_327;
        PyObject *tmp_globals_name_327;
        PyObject *tmp_locals_name_327;
        PyObject *tmp_fromlist_name_327;
        PyObject *tmp_level_name_327;
        tmp_name_name_327 = const_str_plain_mdr;
        tmp_globals_name_327 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_327 = Py_None;
        tmp_fromlist_name_327 = const_tuple_str_plain_MDRIE_tuple;
        tmp_level_name_327 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 605;
        tmp_import_name_from_458 = IMPORT_MODULE5(tmp_name_name_327, tmp_globals_name_327, tmp_locals_name_327, tmp_fromlist_name_327, tmp_level_name_327);
        if (tmp_import_name_from_458 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 605;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_458)) {
           tmp_assign_source_540 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_458,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MDRIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_540 = IMPORT_NAME(tmp_import_name_from_458, const_str_plain_MDRIE);
        }

        Py_DECREF(tmp_import_name_from_458);
        if (tmp_assign_source_540 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 605;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MDRIE, tmp_assign_source_540);
    }
    {
        PyObject *tmp_assign_source_541;
        PyObject *tmp_import_name_from_459;
        PyObject *tmp_name_name_328;
        PyObject *tmp_globals_name_328;
        PyObject *tmp_locals_name_328;
        PyObject *tmp_fromlist_name_328;
        PyObject *tmp_level_name_328;
        tmp_name_name_328 = const_str_plain_mediaset;
        tmp_globals_name_328 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_328 = Py_None;
        tmp_fromlist_name_328 = const_tuple_str_plain_MediasetIE_tuple;
        tmp_level_name_328 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 606;
        tmp_import_name_from_459 = IMPORT_MODULE5(tmp_name_name_328, tmp_globals_name_328, tmp_locals_name_328, tmp_fromlist_name_328, tmp_level_name_328);
        if (tmp_import_name_from_459 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 606;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_459)) {
           tmp_assign_source_541 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_459,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MediasetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_541 = IMPORT_NAME(tmp_import_name_from_459, const_str_plain_MediasetIE);
        }

        Py_DECREF(tmp_import_name_from_459);
        if (tmp_assign_source_541 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 606;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MediasetIE, tmp_assign_source_541);
    }
    {
        PyObject *tmp_assign_source_542;
        PyObject *tmp_name_name_329;
        PyObject *tmp_globals_name_329;
        PyObject *tmp_locals_name_329;
        PyObject *tmp_fromlist_name_329;
        PyObject *tmp_level_name_329;
        tmp_name_name_329 = const_str_plain_mediasite;
        tmp_globals_name_329 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_329 = Py_None;
        tmp_fromlist_name_329 = const_tuple_0cdf24cf561da711898f7c6ac47ad286_tuple;
        tmp_level_name_329 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 607;
        tmp_assign_source_542 = IMPORT_MODULE5(tmp_name_name_329, tmp_globals_name_329, tmp_locals_name_329, tmp_fromlist_name_329, tmp_level_name_329);
        if (tmp_assign_source_542 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 607;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_80__module == NULL);
        tmp_import_from_80__module = tmp_assign_source_542;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_543;
        PyObject *tmp_import_name_from_460;
        CHECK_OBJECT(tmp_import_from_80__module);
        tmp_import_name_from_460 = tmp_import_from_80__module;
        if (PyModule_Check(tmp_import_name_from_460)) {
           tmp_assign_source_543 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_460,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MediasiteIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_543 = IMPORT_NAME(tmp_import_name_from_460, const_str_plain_MediasiteIE);
        }

        if (tmp_assign_source_543 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 607;

            goto try_except_handler_80;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MediasiteIE, tmp_assign_source_543);
    }
    {
        PyObject *tmp_assign_source_544;
        PyObject *tmp_import_name_from_461;
        CHECK_OBJECT(tmp_import_from_80__module);
        tmp_import_name_from_461 = tmp_import_from_80__module;
        if (PyModule_Check(tmp_import_name_from_461)) {
           tmp_assign_source_544 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_461,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MediasiteCatalogIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_544 = IMPORT_NAME(tmp_import_name_from_461, const_str_plain_MediasiteCatalogIE);
        }

        if (tmp_assign_source_544 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 607;

            goto try_except_handler_80;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MediasiteCatalogIE, tmp_assign_source_544);
    }
    {
        PyObject *tmp_assign_source_545;
        PyObject *tmp_import_name_from_462;
        CHECK_OBJECT(tmp_import_from_80__module);
        tmp_import_name_from_462 = tmp_import_from_80__module;
        if (PyModule_Check(tmp_import_name_from_462)) {
           tmp_assign_source_545 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_462,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MediasiteNamedCatalogIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_545 = IMPORT_NAME(tmp_import_name_from_462, const_str_plain_MediasiteNamedCatalogIE);
        }

        if (tmp_assign_source_545 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 607;

            goto try_except_handler_80;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MediasiteNamedCatalogIE, tmp_assign_source_545);
    }
    goto try_end_80;
    // Exception handler code:
    try_except_handler_80:;
    exception_keeper_type_80 = exception_type;
    exception_keeper_value_80 = exception_value;
    exception_keeper_tb_80 = exception_tb;
    exception_keeper_lineno_80 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_80__module);
    Py_DECREF(tmp_import_from_80__module);
    tmp_import_from_80__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_80;
    exception_value = exception_keeper_value_80;
    exception_tb = exception_keeper_tb_80;
    exception_lineno = exception_keeper_lineno_80;

    goto frame_exception_exit_1;
    // End of try:
    try_end_80:;
    CHECK_OBJECT(tmp_import_from_80__module);
    Py_DECREF(tmp_import_from_80__module);
    tmp_import_from_80__module = NULL;

    {
        PyObject *tmp_assign_source_546;
        PyObject *tmp_import_name_from_463;
        PyObject *tmp_name_name_330;
        PyObject *tmp_globals_name_330;
        PyObject *tmp_locals_name_330;
        PyObject *tmp_fromlist_name_330;
        PyObject *tmp_level_name_330;
        tmp_name_name_330 = const_str_plain_medici;
        tmp_globals_name_330 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_330 = Py_None;
        tmp_fromlist_name_330 = const_tuple_str_plain_MediciIE_tuple;
        tmp_level_name_330 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 612;
        tmp_import_name_from_463 = IMPORT_MODULE5(tmp_name_name_330, tmp_globals_name_330, tmp_locals_name_330, tmp_fromlist_name_330, tmp_level_name_330);
        if (tmp_import_name_from_463 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 612;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_463)) {
           tmp_assign_source_546 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_463,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MediciIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_546 = IMPORT_NAME(tmp_import_name_from_463, const_str_plain_MediciIE);
        }

        Py_DECREF(tmp_import_name_from_463);
        if (tmp_assign_source_546 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 612;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MediciIE, tmp_assign_source_546);
    }
    {
        PyObject *tmp_assign_source_547;
        PyObject *tmp_import_name_from_464;
        PyObject *tmp_name_name_331;
        PyObject *tmp_globals_name_331;
        PyObject *tmp_locals_name_331;
        PyObject *tmp_fromlist_name_331;
        PyObject *tmp_level_name_331;
        tmp_name_name_331 = const_str_plain_megaphone;
        tmp_globals_name_331 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_331 = Py_None;
        tmp_fromlist_name_331 = const_tuple_str_plain_MegaphoneIE_tuple;
        tmp_level_name_331 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 613;
        tmp_import_name_from_464 = IMPORT_MODULE5(tmp_name_name_331, tmp_globals_name_331, tmp_locals_name_331, tmp_fromlist_name_331, tmp_level_name_331);
        if (tmp_import_name_from_464 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 613;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_464)) {
           tmp_assign_source_547 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_464,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MegaphoneIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_547 = IMPORT_NAME(tmp_import_name_from_464, const_str_plain_MegaphoneIE);
        }

        Py_DECREF(tmp_import_name_from_464);
        if (tmp_assign_source_547 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 613;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MegaphoneIE, tmp_assign_source_547);
    }
    {
        PyObject *tmp_assign_source_548;
        PyObject *tmp_import_name_from_465;
        PyObject *tmp_name_name_332;
        PyObject *tmp_globals_name_332;
        PyObject *tmp_locals_name_332;
        PyObject *tmp_fromlist_name_332;
        PyObject *tmp_level_name_332;
        tmp_name_name_332 = const_str_plain_meipai;
        tmp_globals_name_332 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_332 = Py_None;
        tmp_fromlist_name_332 = const_tuple_str_plain_MeipaiIE_tuple;
        tmp_level_name_332 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 614;
        tmp_import_name_from_465 = IMPORT_MODULE5(tmp_name_name_332, tmp_globals_name_332, tmp_locals_name_332, tmp_fromlist_name_332, tmp_level_name_332);
        if (tmp_import_name_from_465 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 614;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_465)) {
           tmp_assign_source_548 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_465,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MeipaiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_548 = IMPORT_NAME(tmp_import_name_from_465, const_str_plain_MeipaiIE);
        }

        Py_DECREF(tmp_import_name_from_465);
        if (tmp_assign_source_548 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 614;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MeipaiIE, tmp_assign_source_548);
    }
    {
        PyObject *tmp_assign_source_549;
        PyObject *tmp_import_name_from_466;
        PyObject *tmp_name_name_333;
        PyObject *tmp_globals_name_333;
        PyObject *tmp_locals_name_333;
        PyObject *tmp_fromlist_name_333;
        PyObject *tmp_level_name_333;
        tmp_name_name_333 = const_str_plain_melonvod;
        tmp_globals_name_333 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_333 = Py_None;
        tmp_fromlist_name_333 = const_tuple_str_plain_MelonVODIE_tuple;
        tmp_level_name_333 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 615;
        tmp_import_name_from_466 = IMPORT_MODULE5(tmp_name_name_333, tmp_globals_name_333, tmp_locals_name_333, tmp_fromlist_name_333, tmp_level_name_333);
        if (tmp_import_name_from_466 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 615;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_466)) {
           tmp_assign_source_549 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_466,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MelonVODIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_549 = IMPORT_NAME(tmp_import_name_from_466, const_str_plain_MelonVODIE);
        }

        Py_DECREF(tmp_import_name_from_466);
        if (tmp_assign_source_549 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 615;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MelonVODIE, tmp_assign_source_549);
    }
    {
        PyObject *tmp_assign_source_550;
        PyObject *tmp_import_name_from_467;
        PyObject *tmp_name_name_334;
        PyObject *tmp_globals_name_334;
        PyObject *tmp_locals_name_334;
        PyObject *tmp_fromlist_name_334;
        PyObject *tmp_level_name_334;
        tmp_name_name_334 = const_str_plain_meta;
        tmp_globals_name_334 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_334 = Py_None;
        tmp_fromlist_name_334 = const_tuple_str_plain_METAIE_tuple;
        tmp_level_name_334 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 616;
        tmp_import_name_from_467 = IMPORT_MODULE5(tmp_name_name_334, tmp_globals_name_334, tmp_locals_name_334, tmp_fromlist_name_334, tmp_level_name_334);
        if (tmp_import_name_from_467 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 616;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_467)) {
           tmp_assign_source_550 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_467,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_METAIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_550 = IMPORT_NAME(tmp_import_name_from_467, const_str_plain_METAIE);
        }

        Py_DECREF(tmp_import_name_from_467);
        if (tmp_assign_source_550 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 616;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_METAIE, tmp_assign_source_550);
    }
    {
        PyObject *tmp_assign_source_551;
        PyObject *tmp_import_name_from_468;
        PyObject *tmp_name_name_335;
        PyObject *tmp_globals_name_335;
        PyObject *tmp_locals_name_335;
        PyObject *tmp_fromlist_name_335;
        PyObject *tmp_level_name_335;
        tmp_name_name_335 = const_str_plain_metacafe;
        tmp_globals_name_335 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_335 = Py_None;
        tmp_fromlist_name_335 = const_tuple_str_plain_MetacafeIE_tuple;
        tmp_level_name_335 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 617;
        tmp_import_name_from_468 = IMPORT_MODULE5(tmp_name_name_335, tmp_globals_name_335, tmp_locals_name_335, tmp_fromlist_name_335, tmp_level_name_335);
        if (tmp_import_name_from_468 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 617;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_468)) {
           tmp_assign_source_551 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_468,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MetacafeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_551 = IMPORT_NAME(tmp_import_name_from_468, const_str_plain_MetacafeIE);
        }

        Py_DECREF(tmp_import_name_from_468);
        if (tmp_assign_source_551 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 617;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MetacafeIE, tmp_assign_source_551);
    }
    {
        PyObject *tmp_assign_source_552;
        PyObject *tmp_import_name_from_469;
        PyObject *tmp_name_name_336;
        PyObject *tmp_globals_name_336;
        PyObject *tmp_locals_name_336;
        PyObject *tmp_fromlist_name_336;
        PyObject *tmp_level_name_336;
        tmp_name_name_336 = const_str_plain_metacritic;
        tmp_globals_name_336 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_336 = Py_None;
        tmp_fromlist_name_336 = const_tuple_str_plain_MetacriticIE_tuple;
        tmp_level_name_336 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 618;
        tmp_import_name_from_469 = IMPORT_MODULE5(tmp_name_name_336, tmp_globals_name_336, tmp_locals_name_336, tmp_fromlist_name_336, tmp_level_name_336);
        if (tmp_import_name_from_469 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 618;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_469)) {
           tmp_assign_source_552 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_469,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MetacriticIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_552 = IMPORT_NAME(tmp_import_name_from_469, const_str_plain_MetacriticIE);
        }

        Py_DECREF(tmp_import_name_from_469);
        if (tmp_assign_source_552 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 618;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MetacriticIE, tmp_assign_source_552);
    }
    {
        PyObject *tmp_assign_source_553;
        PyObject *tmp_import_name_from_470;
        PyObject *tmp_name_name_337;
        PyObject *tmp_globals_name_337;
        PyObject *tmp_locals_name_337;
        PyObject *tmp_fromlist_name_337;
        PyObject *tmp_level_name_337;
        tmp_name_name_337 = const_str_plain_mgoon;
        tmp_globals_name_337 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_337 = Py_None;
        tmp_fromlist_name_337 = const_tuple_str_plain_MgoonIE_tuple;
        tmp_level_name_337 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 619;
        tmp_import_name_from_470 = IMPORT_MODULE5(tmp_name_name_337, tmp_globals_name_337, tmp_locals_name_337, tmp_fromlist_name_337, tmp_level_name_337);
        if (tmp_import_name_from_470 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 619;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_470)) {
           tmp_assign_source_553 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_470,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MgoonIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_553 = IMPORT_NAME(tmp_import_name_from_470, const_str_plain_MgoonIE);
        }

        Py_DECREF(tmp_import_name_from_470);
        if (tmp_assign_source_553 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 619;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MgoonIE, tmp_assign_source_553);
    }
    {
        PyObject *tmp_assign_source_554;
        PyObject *tmp_import_name_from_471;
        PyObject *tmp_name_name_338;
        PyObject *tmp_globals_name_338;
        PyObject *tmp_locals_name_338;
        PyObject *tmp_fromlist_name_338;
        PyObject *tmp_level_name_338;
        tmp_name_name_338 = const_str_plain_mgtv;
        tmp_globals_name_338 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_338 = Py_None;
        tmp_fromlist_name_338 = const_tuple_str_plain_MGTVIE_tuple;
        tmp_level_name_338 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 620;
        tmp_import_name_from_471 = IMPORT_MODULE5(tmp_name_name_338, tmp_globals_name_338, tmp_locals_name_338, tmp_fromlist_name_338, tmp_level_name_338);
        if (tmp_import_name_from_471 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 620;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_471)) {
           tmp_assign_source_554 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_471,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MGTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_554 = IMPORT_NAME(tmp_import_name_from_471, const_str_plain_MGTVIE);
        }

        Py_DECREF(tmp_import_name_from_471);
        if (tmp_assign_source_554 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 620;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MGTVIE, tmp_assign_source_554);
    }
    {
        PyObject *tmp_assign_source_555;
        PyObject *tmp_import_name_from_472;
        PyObject *tmp_name_name_339;
        PyObject *tmp_globals_name_339;
        PyObject *tmp_locals_name_339;
        PyObject *tmp_fromlist_name_339;
        PyObject *tmp_level_name_339;
        tmp_name_name_339 = const_str_plain_miaopai;
        tmp_globals_name_339 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_339 = Py_None;
        tmp_fromlist_name_339 = const_tuple_str_plain_MiaoPaiIE_tuple;
        tmp_level_name_339 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 621;
        tmp_import_name_from_472 = IMPORT_MODULE5(tmp_name_name_339, tmp_globals_name_339, tmp_locals_name_339, tmp_fromlist_name_339, tmp_level_name_339);
        if (tmp_import_name_from_472 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 621;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_472)) {
           tmp_assign_source_555 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_472,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MiaoPaiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_555 = IMPORT_NAME(tmp_import_name_from_472, const_str_plain_MiaoPaiIE);
        }

        Py_DECREF(tmp_import_name_from_472);
        if (tmp_assign_source_555 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 621;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MiaoPaiIE, tmp_assign_source_555);
    }
    {
        PyObject *tmp_assign_source_556;
        PyObject *tmp_name_name_340;
        PyObject *tmp_globals_name_340;
        PyObject *tmp_locals_name_340;
        PyObject *tmp_fromlist_name_340;
        PyObject *tmp_level_name_340;
        tmp_name_name_340 = const_str_plain_microsoftvirtualacademy;
        tmp_globals_name_340 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_340 = Py_None;
        tmp_fromlist_name_340 = const_tuple_45a8696be5d934ac8f3d30d168d61a77_tuple;
        tmp_level_name_340 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 622;
        tmp_assign_source_556 = IMPORT_MODULE5(tmp_name_name_340, tmp_globals_name_340, tmp_locals_name_340, tmp_fromlist_name_340, tmp_level_name_340);
        if (tmp_assign_source_556 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 622;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_81__module == NULL);
        tmp_import_from_81__module = tmp_assign_source_556;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_557;
        PyObject *tmp_import_name_from_473;
        CHECK_OBJECT(tmp_import_from_81__module);
        tmp_import_name_from_473 = tmp_import_from_81__module;
        if (PyModule_Check(tmp_import_name_from_473)) {
           tmp_assign_source_557 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_473,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MicrosoftVirtualAcademyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_557 = IMPORT_NAME(tmp_import_name_from_473, const_str_plain_MicrosoftVirtualAcademyIE);
        }

        if (tmp_assign_source_557 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 622;

            goto try_except_handler_81;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MicrosoftVirtualAcademyIE, tmp_assign_source_557);
    }
    {
        PyObject *tmp_assign_source_558;
        PyObject *tmp_import_name_from_474;
        CHECK_OBJECT(tmp_import_from_81__module);
        tmp_import_name_from_474 = tmp_import_from_81__module;
        if (PyModule_Check(tmp_import_name_from_474)) {
           tmp_assign_source_558 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_474,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MicrosoftVirtualAcademyCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_558 = IMPORT_NAME(tmp_import_name_from_474, const_str_plain_MicrosoftVirtualAcademyCourseIE);
        }

        if (tmp_assign_source_558 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 622;

            goto try_except_handler_81;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MicrosoftVirtualAcademyCourseIE, tmp_assign_source_558);
    }
    goto try_end_81;
    // Exception handler code:
    try_except_handler_81:;
    exception_keeper_type_81 = exception_type;
    exception_keeper_value_81 = exception_value;
    exception_keeper_tb_81 = exception_tb;
    exception_keeper_lineno_81 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_81__module);
    Py_DECREF(tmp_import_from_81__module);
    tmp_import_from_81__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_81;
    exception_value = exception_keeper_value_81;
    exception_tb = exception_keeper_tb_81;
    exception_lineno = exception_keeper_lineno_81;

    goto frame_exception_exit_1;
    // End of try:
    try_end_81:;
    CHECK_OBJECT(tmp_import_from_81__module);
    Py_DECREF(tmp_import_from_81__module);
    tmp_import_from_81__module = NULL;

    {
        PyObject *tmp_assign_source_559;
        PyObject *tmp_import_name_from_475;
        PyObject *tmp_name_name_341;
        PyObject *tmp_globals_name_341;
        PyObject *tmp_locals_name_341;
        PyObject *tmp_fromlist_name_341;
        PyObject *tmp_level_name_341;
        tmp_name_name_341 = const_str_plain_ministrygrid;
        tmp_globals_name_341 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_341 = Py_None;
        tmp_fromlist_name_341 = const_tuple_str_plain_MinistryGridIE_tuple;
        tmp_level_name_341 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 626;
        tmp_import_name_from_475 = IMPORT_MODULE5(tmp_name_name_341, tmp_globals_name_341, tmp_locals_name_341, tmp_fromlist_name_341, tmp_level_name_341);
        if (tmp_import_name_from_475 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 626;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_475)) {
           tmp_assign_source_559 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_475,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MinistryGridIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_559 = IMPORT_NAME(tmp_import_name_from_475, const_str_plain_MinistryGridIE);
        }

        Py_DECREF(tmp_import_name_from_475);
        if (tmp_assign_source_559 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 626;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MinistryGridIE, tmp_assign_source_559);
    }
    {
        PyObject *tmp_assign_source_560;
        PyObject *tmp_import_name_from_476;
        PyObject *tmp_name_name_342;
        PyObject *tmp_globals_name_342;
        PyObject *tmp_locals_name_342;
        PyObject *tmp_fromlist_name_342;
        PyObject *tmp_level_name_342;
        tmp_name_name_342 = const_str_plain_minoto;
        tmp_globals_name_342 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_342 = Py_None;
        tmp_fromlist_name_342 = const_tuple_str_plain_MinotoIE_tuple;
        tmp_level_name_342 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 627;
        tmp_import_name_from_476 = IMPORT_MODULE5(tmp_name_name_342, tmp_globals_name_342, tmp_locals_name_342, tmp_fromlist_name_342, tmp_level_name_342);
        if (tmp_import_name_from_476 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 627;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_476)) {
           tmp_assign_source_560 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_476,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MinotoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_560 = IMPORT_NAME(tmp_import_name_from_476, const_str_plain_MinotoIE);
        }

        Py_DECREF(tmp_import_name_from_476);
        if (tmp_assign_source_560 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 627;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MinotoIE, tmp_assign_source_560);
    }
    {
        PyObject *tmp_assign_source_561;
        PyObject *tmp_import_name_from_477;
        PyObject *tmp_name_name_343;
        PyObject *tmp_globals_name_343;
        PyObject *tmp_locals_name_343;
        PyObject *tmp_fromlist_name_343;
        PyObject *tmp_level_name_343;
        tmp_name_name_343 = const_str_plain_miomio;
        tmp_globals_name_343 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_343 = Py_None;
        tmp_fromlist_name_343 = const_tuple_str_plain_MioMioIE_tuple;
        tmp_level_name_343 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 628;
        tmp_import_name_from_477 = IMPORT_MODULE5(tmp_name_name_343, tmp_globals_name_343, tmp_locals_name_343, tmp_fromlist_name_343, tmp_level_name_343);
        if (tmp_import_name_from_477 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 628;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_477)) {
           tmp_assign_source_561 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_477,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MioMioIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_561 = IMPORT_NAME(tmp_import_name_from_477, const_str_plain_MioMioIE);
        }

        Py_DECREF(tmp_import_name_from_477);
        if (tmp_assign_source_561 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 628;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MioMioIE, tmp_assign_source_561);
    }
    {
        PyObject *tmp_assign_source_562;
        PyObject *tmp_name_name_344;
        PyObject *tmp_globals_name_344;
        PyObject *tmp_locals_name_344;
        PyObject *tmp_fromlist_name_344;
        PyObject *tmp_level_name_344;
        tmp_name_name_344 = const_str_plain_mit;
        tmp_globals_name_344 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_344 = Py_None;
        tmp_fromlist_name_344 = const_tuple_str_plain_TechTVMITIE_str_plain_OCWMITIE_tuple;
        tmp_level_name_344 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 629;
        tmp_assign_source_562 = IMPORT_MODULE5(tmp_name_name_344, tmp_globals_name_344, tmp_locals_name_344, tmp_fromlist_name_344, tmp_level_name_344);
        if (tmp_assign_source_562 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 629;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_82__module == NULL);
        tmp_import_from_82__module = tmp_assign_source_562;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_563;
        PyObject *tmp_import_name_from_478;
        CHECK_OBJECT(tmp_import_from_82__module);
        tmp_import_name_from_478 = tmp_import_from_82__module;
        if (PyModule_Check(tmp_import_name_from_478)) {
           tmp_assign_source_563 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_478,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TechTVMITIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_563 = IMPORT_NAME(tmp_import_name_from_478, const_str_plain_TechTVMITIE);
        }

        if (tmp_assign_source_563 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 629;

            goto try_except_handler_82;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TechTVMITIE, tmp_assign_source_563);
    }
    {
        PyObject *tmp_assign_source_564;
        PyObject *tmp_import_name_from_479;
        CHECK_OBJECT(tmp_import_from_82__module);
        tmp_import_name_from_479 = tmp_import_from_82__module;
        if (PyModule_Check(tmp_import_name_from_479)) {
           tmp_assign_source_564 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_479,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OCWMITIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_564 = IMPORT_NAME(tmp_import_name_from_479, const_str_plain_OCWMITIE);
        }

        if (tmp_assign_source_564 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 629;

            goto try_except_handler_82;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OCWMITIE, tmp_assign_source_564);
    }
    goto try_end_82;
    // Exception handler code:
    try_except_handler_82:;
    exception_keeper_type_82 = exception_type;
    exception_keeper_value_82 = exception_value;
    exception_keeper_tb_82 = exception_tb;
    exception_keeper_lineno_82 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_82__module);
    Py_DECREF(tmp_import_from_82__module);
    tmp_import_from_82__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_82;
    exception_value = exception_keeper_value_82;
    exception_tb = exception_keeper_tb_82;
    exception_lineno = exception_keeper_lineno_82;

    goto frame_exception_exit_1;
    // End of try:
    try_end_82:;
    CHECK_OBJECT(tmp_import_from_82__module);
    Py_DECREF(tmp_import_from_82__module);
    tmp_import_from_82__module = NULL;

    {
        PyObject *tmp_assign_source_565;
        PyObject *tmp_import_name_from_480;
        PyObject *tmp_name_name_345;
        PyObject *tmp_globals_name_345;
        PyObject *tmp_locals_name_345;
        PyObject *tmp_fromlist_name_345;
        PyObject *tmp_level_name_345;
        tmp_name_name_345 = const_str_plain_mitele;
        tmp_globals_name_345 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_345 = Py_None;
        tmp_fromlist_name_345 = const_tuple_str_plain_MiTeleIE_tuple;
        tmp_level_name_345 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 630;
        tmp_import_name_from_480 = IMPORT_MODULE5(tmp_name_name_345, tmp_globals_name_345, tmp_locals_name_345, tmp_fromlist_name_345, tmp_level_name_345);
        if (tmp_import_name_from_480 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 630;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_480)) {
           tmp_assign_source_565 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_480,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MiTeleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_565 = IMPORT_NAME(tmp_import_name_from_480, const_str_plain_MiTeleIE);
        }

        Py_DECREF(tmp_import_name_from_480);
        if (tmp_assign_source_565 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 630;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MiTeleIE, tmp_assign_source_565);
    }
    {
        PyObject *tmp_assign_source_566;
        PyObject *tmp_name_name_346;
        PyObject *tmp_globals_name_346;
        PyObject *tmp_locals_name_346;
        PyObject *tmp_fromlist_name_346;
        PyObject *tmp_level_name_346;
        tmp_name_name_346 = const_str_plain_mixcloud;
        tmp_globals_name_346 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_346 = Py_None;
        tmp_fromlist_name_346 = const_tuple_8d61ccd01ac70c4ab30026ba7a5bc7a2_tuple;
        tmp_level_name_346 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 631;
        tmp_assign_source_566 = IMPORT_MODULE5(tmp_name_name_346, tmp_globals_name_346, tmp_locals_name_346, tmp_fromlist_name_346, tmp_level_name_346);
        if (tmp_assign_source_566 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 631;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_83__module == NULL);
        tmp_import_from_83__module = tmp_assign_source_566;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_567;
        PyObject *tmp_import_name_from_481;
        CHECK_OBJECT(tmp_import_from_83__module);
        tmp_import_name_from_481 = tmp_import_from_83__module;
        if (PyModule_Check(tmp_import_name_from_481)) {
           tmp_assign_source_567 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_481,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MixcloudIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_567 = IMPORT_NAME(tmp_import_name_from_481, const_str_plain_MixcloudIE);
        }

        if (tmp_assign_source_567 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 631;

            goto try_except_handler_83;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MixcloudIE, tmp_assign_source_567);
    }
    {
        PyObject *tmp_assign_source_568;
        PyObject *tmp_import_name_from_482;
        CHECK_OBJECT(tmp_import_from_83__module);
        tmp_import_name_from_482 = tmp_import_from_83__module;
        if (PyModule_Check(tmp_import_name_from_482)) {
           tmp_assign_source_568 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_482,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MixcloudUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_568 = IMPORT_NAME(tmp_import_name_from_482, const_str_plain_MixcloudUserIE);
        }

        if (tmp_assign_source_568 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 631;

            goto try_except_handler_83;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MixcloudUserIE, tmp_assign_source_568);
    }
    {
        PyObject *tmp_assign_source_569;
        PyObject *tmp_import_name_from_483;
        CHECK_OBJECT(tmp_import_from_83__module);
        tmp_import_name_from_483 = tmp_import_from_83__module;
        if (PyModule_Check(tmp_import_name_from_483)) {
           tmp_assign_source_569 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_483,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MixcloudPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_569 = IMPORT_NAME(tmp_import_name_from_483, const_str_plain_MixcloudPlaylistIE);
        }

        if (tmp_assign_source_569 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 631;

            goto try_except_handler_83;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MixcloudPlaylistIE, tmp_assign_source_569);
    }
    goto try_end_83;
    // Exception handler code:
    try_except_handler_83:;
    exception_keeper_type_83 = exception_type;
    exception_keeper_value_83 = exception_value;
    exception_keeper_tb_83 = exception_tb;
    exception_keeper_lineno_83 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_83__module);
    Py_DECREF(tmp_import_from_83__module);
    tmp_import_from_83__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_83;
    exception_value = exception_keeper_value_83;
    exception_tb = exception_keeper_tb_83;
    exception_lineno = exception_keeper_lineno_83;

    goto frame_exception_exit_1;
    // End of try:
    try_end_83:;
    CHECK_OBJECT(tmp_import_from_83__module);
    Py_DECREF(tmp_import_from_83__module);
    tmp_import_from_83__module = NULL;

    {
        PyObject *tmp_assign_source_570;
        PyObject *tmp_import_name_from_484;
        PyObject *tmp_name_name_347;
        PyObject *tmp_globals_name_347;
        PyObject *tmp_locals_name_347;
        PyObject *tmp_fromlist_name_347;
        PyObject *tmp_level_name_347;
        tmp_name_name_347 = const_str_plain_mlb;
        tmp_globals_name_347 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_347 = Py_None;
        tmp_fromlist_name_347 = const_tuple_str_plain_MLBIE_tuple;
        tmp_level_name_347 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 636;
        tmp_import_name_from_484 = IMPORT_MODULE5(tmp_name_name_347, tmp_globals_name_347, tmp_locals_name_347, tmp_fromlist_name_347, tmp_level_name_347);
        if (tmp_import_name_from_484 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 636;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_484)) {
           tmp_assign_source_570 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_484,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MLBIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_570 = IMPORT_NAME(tmp_import_name_from_484, const_str_plain_MLBIE);
        }

        Py_DECREF(tmp_import_name_from_484);
        if (tmp_assign_source_570 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 636;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MLBIE, tmp_assign_source_570);
    }
    {
        PyObject *tmp_assign_source_571;
        PyObject *tmp_import_name_from_485;
        PyObject *tmp_name_name_348;
        PyObject *tmp_globals_name_348;
        PyObject *tmp_locals_name_348;
        PyObject *tmp_fromlist_name_348;
        PyObject *tmp_level_name_348;
        tmp_name_name_348 = const_str_plain_mnet;
        tmp_globals_name_348 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_348 = Py_None;
        tmp_fromlist_name_348 = const_tuple_str_plain_MnetIE_tuple;
        tmp_level_name_348 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 637;
        tmp_import_name_from_485 = IMPORT_MODULE5(tmp_name_name_348, tmp_globals_name_348, tmp_locals_name_348, tmp_fromlist_name_348, tmp_level_name_348);
        if (tmp_import_name_from_485 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 637;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_485)) {
           tmp_assign_source_571 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_485,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MnetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_571 = IMPORT_NAME(tmp_import_name_from_485, const_str_plain_MnetIE);
        }

        Py_DECREF(tmp_import_name_from_485);
        if (tmp_assign_source_571 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 637;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MnetIE, tmp_assign_source_571);
    }
    {
        PyObject *tmp_assign_source_572;
        PyObject *tmp_import_name_from_486;
        PyObject *tmp_name_name_349;
        PyObject *tmp_globals_name_349;
        PyObject *tmp_locals_name_349;
        PyObject *tmp_fromlist_name_349;
        PyObject *tmp_level_name_349;
        tmp_name_name_349 = const_str_plain_moevideo;
        tmp_globals_name_349 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_349 = Py_None;
        tmp_fromlist_name_349 = const_tuple_str_plain_MoeVideoIE_tuple;
        tmp_level_name_349 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 638;
        tmp_import_name_from_486 = IMPORT_MODULE5(tmp_name_name_349, tmp_globals_name_349, tmp_locals_name_349, tmp_fromlist_name_349, tmp_level_name_349);
        if (tmp_import_name_from_486 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 638;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_486)) {
           tmp_assign_source_572 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_486,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MoeVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_572 = IMPORT_NAME(tmp_import_name_from_486, const_str_plain_MoeVideoIE);
        }

        Py_DECREF(tmp_import_name_from_486);
        if (tmp_assign_source_572 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 638;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MoeVideoIE, tmp_assign_source_572);
    }
    {
        PyObject *tmp_assign_source_573;
        PyObject *tmp_name_name_350;
        PyObject *tmp_globals_name_350;
        PyObject *tmp_locals_name_350;
        PyObject *tmp_fromlist_name_350;
        PyObject *tmp_level_name_350;
        tmp_name_name_350 = const_str_plain_mofosex;
        tmp_globals_name_350 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_350 = Py_None;
        tmp_fromlist_name_350 = const_tuple_str_plain_MofosexIE_str_plain_MofosexEmbedIE_tuple;
        tmp_level_name_350 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 639;
        tmp_assign_source_573 = IMPORT_MODULE5(tmp_name_name_350, tmp_globals_name_350, tmp_locals_name_350, tmp_fromlist_name_350, tmp_level_name_350);
        if (tmp_assign_source_573 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 639;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_84__module == NULL);
        tmp_import_from_84__module = tmp_assign_source_573;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_574;
        PyObject *tmp_import_name_from_487;
        CHECK_OBJECT(tmp_import_from_84__module);
        tmp_import_name_from_487 = tmp_import_from_84__module;
        if (PyModule_Check(tmp_import_name_from_487)) {
           tmp_assign_source_574 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_487,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MofosexIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_574 = IMPORT_NAME(tmp_import_name_from_487, const_str_plain_MofosexIE);
        }

        if (tmp_assign_source_574 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 639;

            goto try_except_handler_84;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MofosexIE, tmp_assign_source_574);
    }
    {
        PyObject *tmp_assign_source_575;
        PyObject *tmp_import_name_from_488;
        CHECK_OBJECT(tmp_import_from_84__module);
        tmp_import_name_from_488 = tmp_import_from_84__module;
        if (PyModule_Check(tmp_import_name_from_488)) {
           tmp_assign_source_575 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_488,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MofosexEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_575 = IMPORT_NAME(tmp_import_name_from_488, const_str_plain_MofosexEmbedIE);
        }

        if (tmp_assign_source_575 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 639;

            goto try_except_handler_84;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MofosexEmbedIE, tmp_assign_source_575);
    }
    goto try_end_84;
    // Exception handler code:
    try_except_handler_84:;
    exception_keeper_type_84 = exception_type;
    exception_keeper_value_84 = exception_value;
    exception_keeper_tb_84 = exception_tb;
    exception_keeper_lineno_84 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_84__module);
    Py_DECREF(tmp_import_from_84__module);
    tmp_import_from_84__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_84;
    exception_value = exception_keeper_value_84;
    exception_tb = exception_keeper_tb_84;
    exception_lineno = exception_keeper_lineno_84;

    goto frame_exception_exit_1;
    // End of try:
    try_end_84:;
    CHECK_OBJECT(tmp_import_from_84__module);
    Py_DECREF(tmp_import_from_84__module);
    tmp_import_from_84__module = NULL;

    {
        PyObject *tmp_assign_source_576;
        PyObject *tmp_import_name_from_489;
        PyObject *tmp_name_name_351;
        PyObject *tmp_globals_name_351;
        PyObject *tmp_locals_name_351;
        PyObject *tmp_fromlist_name_351;
        PyObject *tmp_level_name_351;
        tmp_name_name_351 = const_str_plain_mojvideo;
        tmp_globals_name_351 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_351 = Py_None;
        tmp_fromlist_name_351 = const_tuple_str_plain_MojvideoIE_tuple;
        tmp_level_name_351 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 643;
        tmp_import_name_from_489 = IMPORT_MODULE5(tmp_name_name_351, tmp_globals_name_351, tmp_locals_name_351, tmp_fromlist_name_351, tmp_level_name_351);
        if (tmp_import_name_from_489 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 643;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_489)) {
           tmp_assign_source_576 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_489,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MojvideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_576 = IMPORT_NAME(tmp_import_name_from_489, const_str_plain_MojvideoIE);
        }

        Py_DECREF(tmp_import_name_from_489);
        if (tmp_assign_source_576 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 643;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MojvideoIE, tmp_assign_source_576);
    }
    {
        PyObject *tmp_assign_source_577;
        PyObject *tmp_import_name_from_490;
        PyObject *tmp_name_name_352;
        PyObject *tmp_globals_name_352;
        PyObject *tmp_locals_name_352;
        PyObject *tmp_fromlist_name_352;
        PyObject *tmp_level_name_352;
        tmp_name_name_352 = const_str_plain_morningstar;
        tmp_globals_name_352 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_352 = Py_None;
        tmp_fromlist_name_352 = const_tuple_str_plain_MorningstarIE_tuple;
        tmp_level_name_352 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 644;
        tmp_import_name_from_490 = IMPORT_MODULE5(tmp_name_name_352, tmp_globals_name_352, tmp_locals_name_352, tmp_fromlist_name_352, tmp_level_name_352);
        if (tmp_import_name_from_490 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 644;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_490)) {
           tmp_assign_source_577 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_490,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MorningstarIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_577 = IMPORT_NAME(tmp_import_name_from_490, const_str_plain_MorningstarIE);
        }

        Py_DECREF(tmp_import_name_from_490);
        if (tmp_assign_source_577 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 644;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MorningstarIE, tmp_assign_source_577);
    }
    {
        PyObject *tmp_assign_source_578;
        PyObject *tmp_name_name_353;
        PyObject *tmp_globals_name_353;
        PyObject *tmp_locals_name_353;
        PyObject *tmp_fromlist_name_353;
        PyObject *tmp_level_name_353;
        tmp_name_name_353 = const_str_plain_motherless;
        tmp_globals_name_353 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_353 = Py_None;
        tmp_fromlist_name_353 = const_tuple_str_plain_MotherlessIE_str_plain_MotherlessGroupIE_tuple;
        tmp_level_name_353 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 645;
        tmp_assign_source_578 = IMPORT_MODULE5(tmp_name_name_353, tmp_globals_name_353, tmp_locals_name_353, tmp_fromlist_name_353, tmp_level_name_353);
        if (tmp_assign_source_578 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 645;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_85__module == NULL);
        tmp_import_from_85__module = tmp_assign_source_578;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_579;
        PyObject *tmp_import_name_from_491;
        CHECK_OBJECT(tmp_import_from_85__module);
        tmp_import_name_from_491 = tmp_import_from_85__module;
        if (PyModule_Check(tmp_import_name_from_491)) {
           tmp_assign_source_579 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_491,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MotherlessIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_579 = IMPORT_NAME(tmp_import_name_from_491, const_str_plain_MotherlessIE);
        }

        if (tmp_assign_source_579 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 645;

            goto try_except_handler_85;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MotherlessIE, tmp_assign_source_579);
    }
    {
        PyObject *tmp_assign_source_580;
        PyObject *tmp_import_name_from_492;
        CHECK_OBJECT(tmp_import_from_85__module);
        tmp_import_name_from_492 = tmp_import_from_85__module;
        if (PyModule_Check(tmp_import_name_from_492)) {
           tmp_assign_source_580 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_492,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MotherlessGroupIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_580 = IMPORT_NAME(tmp_import_name_from_492, const_str_plain_MotherlessGroupIE);
        }

        if (tmp_assign_source_580 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 645;

            goto try_except_handler_85;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MotherlessGroupIE, tmp_assign_source_580);
    }
    goto try_end_85;
    // Exception handler code:
    try_except_handler_85:;
    exception_keeper_type_85 = exception_type;
    exception_keeper_value_85 = exception_value;
    exception_keeper_tb_85 = exception_tb;
    exception_keeper_lineno_85 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_85__module);
    Py_DECREF(tmp_import_from_85__module);
    tmp_import_from_85__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_85;
    exception_value = exception_keeper_value_85;
    exception_tb = exception_keeper_tb_85;
    exception_lineno = exception_keeper_lineno_85;

    goto frame_exception_exit_1;
    // End of try:
    try_end_85:;
    CHECK_OBJECT(tmp_import_from_85__module);
    Py_DECREF(tmp_import_from_85__module);
    tmp_import_from_85__module = NULL;

    {
        PyObject *tmp_assign_source_581;
        PyObject *tmp_import_name_from_493;
        PyObject *tmp_name_name_354;
        PyObject *tmp_globals_name_354;
        PyObject *tmp_locals_name_354;
        PyObject *tmp_fromlist_name_354;
        PyObject *tmp_level_name_354;
        tmp_name_name_354 = const_str_plain_motorsport;
        tmp_globals_name_354 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_354 = Py_None;
        tmp_fromlist_name_354 = const_tuple_str_plain_MotorsportIE_tuple;
        tmp_level_name_354 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 649;
        tmp_import_name_from_493 = IMPORT_MODULE5(tmp_name_name_354, tmp_globals_name_354, tmp_locals_name_354, tmp_fromlist_name_354, tmp_level_name_354);
        if (tmp_import_name_from_493 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 649;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_493)) {
           tmp_assign_source_581 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_493,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MotorsportIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_581 = IMPORT_NAME(tmp_import_name_from_493, const_str_plain_MotorsportIE);
        }

        Py_DECREF(tmp_import_name_from_493);
        if (tmp_assign_source_581 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 649;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MotorsportIE, tmp_assign_source_581);
    }
    {
        PyObject *tmp_assign_source_582;
        PyObject *tmp_import_name_from_494;
        PyObject *tmp_name_name_355;
        PyObject *tmp_globals_name_355;
        PyObject *tmp_locals_name_355;
        PyObject *tmp_fromlist_name_355;
        PyObject *tmp_level_name_355;
        tmp_name_name_355 = const_str_plain_movieclips;
        tmp_globals_name_355 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_355 = Py_None;
        tmp_fromlist_name_355 = const_tuple_str_plain_MovieClipsIE_tuple;
        tmp_level_name_355 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 650;
        tmp_import_name_from_494 = IMPORT_MODULE5(tmp_name_name_355, tmp_globals_name_355, tmp_locals_name_355, tmp_fromlist_name_355, tmp_level_name_355);
        if (tmp_import_name_from_494 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 650;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_494)) {
           tmp_assign_source_582 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_494,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MovieClipsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_582 = IMPORT_NAME(tmp_import_name_from_494, const_str_plain_MovieClipsIE);
        }

        Py_DECREF(tmp_import_name_from_494);
        if (tmp_assign_source_582 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 650;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MovieClipsIE, tmp_assign_source_582);
    }
    {
        PyObject *tmp_assign_source_583;
        PyObject *tmp_import_name_from_495;
        PyObject *tmp_name_name_356;
        PyObject *tmp_globals_name_356;
        PyObject *tmp_locals_name_356;
        PyObject *tmp_fromlist_name_356;
        PyObject *tmp_level_name_356;
        tmp_name_name_356 = const_str_plain_moviezine;
        tmp_globals_name_356 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_356 = Py_None;
        tmp_fromlist_name_356 = const_tuple_str_plain_MoviezineIE_tuple;
        tmp_level_name_356 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 651;
        tmp_import_name_from_495 = IMPORT_MODULE5(tmp_name_name_356, tmp_globals_name_356, tmp_locals_name_356, tmp_fromlist_name_356, tmp_level_name_356);
        if (tmp_import_name_from_495 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 651;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_495)) {
           tmp_assign_source_583 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_495,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MoviezineIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_583 = IMPORT_NAME(tmp_import_name_from_495, const_str_plain_MoviezineIE);
        }

        Py_DECREF(tmp_import_name_from_495);
        if (tmp_assign_source_583 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 651;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MoviezineIE, tmp_assign_source_583);
    }
    {
        PyObject *tmp_assign_source_584;
        PyObject *tmp_import_name_from_496;
        PyObject *tmp_name_name_357;
        PyObject *tmp_globals_name_357;
        PyObject *tmp_locals_name_357;
        PyObject *tmp_fromlist_name_357;
        PyObject *tmp_level_name_357;
        tmp_name_name_357 = const_str_plain_movingimage;
        tmp_globals_name_357 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_357 = Py_None;
        tmp_fromlist_name_357 = const_tuple_str_plain_MovingImageIE_tuple;
        tmp_level_name_357 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 652;
        tmp_import_name_from_496 = IMPORT_MODULE5(tmp_name_name_357, tmp_globals_name_357, tmp_locals_name_357, tmp_fromlist_name_357, tmp_level_name_357);
        if (tmp_import_name_from_496 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 652;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_496)) {
           tmp_assign_source_584 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_496,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MovingImageIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_584 = IMPORT_NAME(tmp_import_name_from_496, const_str_plain_MovingImageIE);
        }

        Py_DECREF(tmp_import_name_from_496);
        if (tmp_assign_source_584 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 652;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MovingImageIE, tmp_assign_source_584);
    }
    {
        PyObject *tmp_assign_source_585;
        PyObject *tmp_import_name_from_497;
        PyObject *tmp_name_name_358;
        PyObject *tmp_globals_name_358;
        PyObject *tmp_locals_name_358;
        PyObject *tmp_fromlist_name_358;
        PyObject *tmp_level_name_358;
        tmp_name_name_358 = const_str_plain_msn;
        tmp_globals_name_358 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_358 = Py_None;
        tmp_fromlist_name_358 = const_tuple_str_plain_MSNIE_tuple;
        tmp_level_name_358 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 653;
        tmp_import_name_from_497 = IMPORT_MODULE5(tmp_name_name_358, tmp_globals_name_358, tmp_locals_name_358, tmp_fromlist_name_358, tmp_level_name_358);
        if (tmp_import_name_from_497 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 653;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_497)) {
           tmp_assign_source_585 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_497,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MSNIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_585 = IMPORT_NAME(tmp_import_name_from_497, const_str_plain_MSNIE);
        }

        Py_DECREF(tmp_import_name_from_497);
        if (tmp_assign_source_585 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 653;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MSNIE, tmp_assign_source_585);
    }
    {
        PyObject *tmp_assign_source_586;
        PyObject *tmp_name_name_359;
        PyObject *tmp_globals_name_359;
        PyObject *tmp_locals_name_359;
        PyObject *tmp_fromlist_name_359;
        PyObject *tmp_level_name_359;
        tmp_name_name_359 = const_str_plain_mtv;
        tmp_globals_name_359 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_359 = Py_None;
        tmp_fromlist_name_359 = const_tuple_970b04f3ba2eadcab4c0f0973ef1b8ef_tuple;
        tmp_level_name_359 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 654;
        tmp_assign_source_586 = IMPORT_MODULE5(tmp_name_name_359, tmp_globals_name_359, tmp_locals_name_359, tmp_fromlist_name_359, tmp_level_name_359);
        if (tmp_assign_source_586 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 654;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_86__module == NULL);
        tmp_import_from_86__module = tmp_assign_source_586;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_587;
        PyObject *tmp_import_name_from_498;
        CHECK_OBJECT(tmp_import_from_86__module);
        tmp_import_name_from_498 = tmp_import_from_86__module;
        if (PyModule_Check(tmp_import_name_from_498)) {
           tmp_assign_source_587 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_498,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_587 = IMPORT_NAME(tmp_import_name_from_498, const_str_plain_MTVIE);
        }

        if (tmp_assign_source_587 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 654;

            goto try_except_handler_86;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MTVIE, tmp_assign_source_587);
    }
    {
        PyObject *tmp_assign_source_588;
        PyObject *tmp_import_name_from_499;
        CHECK_OBJECT(tmp_import_from_86__module);
        tmp_import_name_from_499 = tmp_import_from_86__module;
        if (PyModule_Check(tmp_import_name_from_499)) {
           tmp_assign_source_588 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_499,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MTVVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_588 = IMPORT_NAME(tmp_import_name_from_499, const_str_plain_MTVVideoIE);
        }

        if (tmp_assign_source_588 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 654;

            goto try_except_handler_86;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MTVVideoIE, tmp_assign_source_588);
    }
    {
        PyObject *tmp_assign_source_589;
        PyObject *tmp_import_name_from_500;
        CHECK_OBJECT(tmp_import_from_86__module);
        tmp_import_name_from_500 = tmp_import_from_86__module;
        if (PyModule_Check(tmp_import_name_from_500)) {
           tmp_assign_source_589 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_500,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MTVServicesEmbeddedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_589 = IMPORT_NAME(tmp_import_name_from_500, const_str_plain_MTVServicesEmbeddedIE);
        }

        if (tmp_assign_source_589 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 654;

            goto try_except_handler_86;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MTVServicesEmbeddedIE, tmp_assign_source_589);
    }
    {
        PyObject *tmp_assign_source_590;
        PyObject *tmp_import_name_from_501;
        CHECK_OBJECT(tmp_import_from_86__module);
        tmp_import_name_from_501 = tmp_import_from_86__module;
        if (PyModule_Check(tmp_import_name_from_501)) {
           tmp_assign_source_590 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_501,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MTVDEIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_590 = IMPORT_NAME(tmp_import_name_from_501, const_str_plain_MTVDEIE);
        }

        if (tmp_assign_source_590 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 654;

            goto try_except_handler_86;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MTVDEIE, tmp_assign_source_590);
    }
    {
        PyObject *tmp_assign_source_591;
        PyObject *tmp_import_name_from_502;
        CHECK_OBJECT(tmp_import_from_86__module);
        tmp_import_name_from_502 = tmp_import_from_86__module;
        if (PyModule_Check(tmp_import_name_from_502)) {
           tmp_assign_source_591 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_502,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MTVJapanIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_591 = IMPORT_NAME(tmp_import_name_from_502, const_str_plain_MTVJapanIE);
        }

        if (tmp_assign_source_591 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 654;

            goto try_except_handler_86;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MTVJapanIE, tmp_assign_source_591);
    }
    goto try_end_86;
    // Exception handler code:
    try_except_handler_86:;
    exception_keeper_type_86 = exception_type;
    exception_keeper_value_86 = exception_value;
    exception_keeper_tb_86 = exception_tb;
    exception_keeper_lineno_86 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_86__module);
    Py_DECREF(tmp_import_from_86__module);
    tmp_import_from_86__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_86;
    exception_value = exception_keeper_value_86;
    exception_tb = exception_keeper_tb_86;
    exception_lineno = exception_keeper_lineno_86;

    goto frame_exception_exit_1;
    // End of try:
    try_end_86:;
    CHECK_OBJECT(tmp_import_from_86__module);
    Py_DECREF(tmp_import_from_86__module);
    tmp_import_from_86__module = NULL;

    {
        PyObject *tmp_assign_source_592;
        PyObject *tmp_import_name_from_503;
        PyObject *tmp_name_name_360;
        PyObject *tmp_globals_name_360;
        PyObject *tmp_locals_name_360;
        PyObject *tmp_fromlist_name_360;
        PyObject *tmp_level_name_360;
        tmp_name_name_360 = const_str_plain_muenchentv;
        tmp_globals_name_360 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_360 = Py_None;
        tmp_fromlist_name_360 = const_tuple_str_plain_MuenchenTVIE_tuple;
        tmp_level_name_360 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 661;
        tmp_import_name_from_503 = IMPORT_MODULE5(tmp_name_name_360, tmp_globals_name_360, tmp_locals_name_360, tmp_fromlist_name_360, tmp_level_name_360);
        if (tmp_import_name_from_503 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 661;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_503)) {
           tmp_assign_source_592 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_503,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MuenchenTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_592 = IMPORT_NAME(tmp_import_name_from_503, const_str_plain_MuenchenTVIE);
        }

        Py_DECREF(tmp_import_name_from_503);
        if (tmp_assign_source_592 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 661;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MuenchenTVIE, tmp_assign_source_592);
    }
    {
        PyObject *tmp_assign_source_593;
        PyObject *tmp_name_name_361;
        PyObject *tmp_globals_name_361;
        PyObject *tmp_locals_name_361;
        PyObject *tmp_fromlist_name_361;
        PyObject *tmp_level_name_361;
        tmp_name_name_361 = const_str_plain_mwave;
        tmp_globals_name_361 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_361 = Py_None;
        tmp_fromlist_name_361 = const_tuple_str_plain_MwaveIE_str_plain_MwaveMeetGreetIE_tuple;
        tmp_level_name_361 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 662;
        tmp_assign_source_593 = IMPORT_MODULE5(tmp_name_name_361, tmp_globals_name_361, tmp_locals_name_361, tmp_fromlist_name_361, tmp_level_name_361);
        if (tmp_assign_source_593 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 662;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_87__module == NULL);
        tmp_import_from_87__module = tmp_assign_source_593;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_594;
        PyObject *tmp_import_name_from_504;
        CHECK_OBJECT(tmp_import_from_87__module);
        tmp_import_name_from_504 = tmp_import_from_87__module;
        if (PyModule_Check(tmp_import_name_from_504)) {
           tmp_assign_source_594 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_504,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MwaveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_594 = IMPORT_NAME(tmp_import_name_from_504, const_str_plain_MwaveIE);
        }

        if (tmp_assign_source_594 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 662;

            goto try_except_handler_87;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MwaveIE, tmp_assign_source_594);
    }
    {
        PyObject *tmp_assign_source_595;
        PyObject *tmp_import_name_from_505;
        CHECK_OBJECT(tmp_import_from_87__module);
        tmp_import_name_from_505 = tmp_import_from_87__module;
        if (PyModule_Check(tmp_import_name_from_505)) {
           tmp_assign_source_595 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_505,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MwaveMeetGreetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_595 = IMPORT_NAME(tmp_import_name_from_505, const_str_plain_MwaveMeetGreetIE);
        }

        if (tmp_assign_source_595 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 662;

            goto try_except_handler_87;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MwaveMeetGreetIE, tmp_assign_source_595);
    }
    goto try_end_87;
    // Exception handler code:
    try_except_handler_87:;
    exception_keeper_type_87 = exception_type;
    exception_keeper_value_87 = exception_value;
    exception_keeper_tb_87 = exception_tb;
    exception_keeper_lineno_87 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_87__module);
    Py_DECREF(tmp_import_from_87__module);
    tmp_import_from_87__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_87;
    exception_value = exception_keeper_value_87;
    exception_tb = exception_keeper_tb_87;
    exception_lineno = exception_keeper_lineno_87;

    goto frame_exception_exit_1;
    // End of try:
    try_end_87:;
    CHECK_OBJECT(tmp_import_from_87__module);
    Py_DECREF(tmp_import_from_87__module);
    tmp_import_from_87__module = NULL;

    {
        PyObject *tmp_assign_source_596;
        PyObject *tmp_import_name_from_506;
        PyObject *tmp_name_name_362;
        PyObject *tmp_globals_name_362;
        PyObject *tmp_locals_name_362;
        PyObject *tmp_fromlist_name_362;
        PyObject *tmp_level_name_362;
        tmp_name_name_362 = const_str_plain_mychannels;
        tmp_globals_name_362 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_362 = Py_None;
        tmp_fromlist_name_362 = const_tuple_str_plain_MyChannelsIE_tuple;
        tmp_level_name_362 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 663;
        tmp_import_name_from_506 = IMPORT_MODULE5(tmp_name_name_362, tmp_globals_name_362, tmp_locals_name_362, tmp_fromlist_name_362, tmp_level_name_362);
        if (tmp_import_name_from_506 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 663;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_506)) {
           tmp_assign_source_596 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_506,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MyChannelsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_596 = IMPORT_NAME(tmp_import_name_from_506, const_str_plain_MyChannelsIE);
        }

        Py_DECREF(tmp_import_name_from_506);
        if (tmp_assign_source_596 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 663;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MyChannelsIE, tmp_assign_source_596);
    }
    {
        PyObject *tmp_assign_source_597;
        PyObject *tmp_name_name_363;
        PyObject *tmp_globals_name_363;
        PyObject *tmp_locals_name_363;
        PyObject *tmp_fromlist_name_363;
        PyObject *tmp_level_name_363;
        tmp_name_name_363 = const_str_plain_myspace;
        tmp_globals_name_363 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_363 = Py_None;
        tmp_fromlist_name_363 = const_tuple_str_plain_MySpaceIE_str_plain_MySpaceAlbumIE_tuple;
        tmp_level_name_363 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 664;
        tmp_assign_source_597 = IMPORT_MODULE5(tmp_name_name_363, tmp_globals_name_363, tmp_locals_name_363, tmp_fromlist_name_363, tmp_level_name_363);
        if (tmp_assign_source_597 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 664;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_88__module == NULL);
        tmp_import_from_88__module = tmp_assign_source_597;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_598;
        PyObject *tmp_import_name_from_507;
        CHECK_OBJECT(tmp_import_from_88__module);
        tmp_import_name_from_507 = tmp_import_from_88__module;
        if (PyModule_Check(tmp_import_name_from_507)) {
           tmp_assign_source_598 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_507,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MySpaceIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_598 = IMPORT_NAME(tmp_import_name_from_507, const_str_plain_MySpaceIE);
        }

        if (tmp_assign_source_598 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 664;

            goto try_except_handler_88;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MySpaceIE, tmp_assign_source_598);
    }
    {
        PyObject *tmp_assign_source_599;
        PyObject *tmp_import_name_from_508;
        CHECK_OBJECT(tmp_import_from_88__module);
        tmp_import_name_from_508 = tmp_import_from_88__module;
        if (PyModule_Check(tmp_import_name_from_508)) {
           tmp_assign_source_599 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_508,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MySpaceAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_599 = IMPORT_NAME(tmp_import_name_from_508, const_str_plain_MySpaceAlbumIE);
        }

        if (tmp_assign_source_599 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 664;

            goto try_except_handler_88;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MySpaceAlbumIE, tmp_assign_source_599);
    }
    goto try_end_88;
    // Exception handler code:
    try_except_handler_88:;
    exception_keeper_type_88 = exception_type;
    exception_keeper_value_88 = exception_value;
    exception_keeper_tb_88 = exception_tb;
    exception_keeper_lineno_88 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_88__module);
    Py_DECREF(tmp_import_from_88__module);
    tmp_import_from_88__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_88;
    exception_value = exception_keeper_value_88;
    exception_tb = exception_keeper_tb_88;
    exception_lineno = exception_keeper_lineno_88;

    goto frame_exception_exit_1;
    // End of try:
    try_end_88:;
    CHECK_OBJECT(tmp_import_from_88__module);
    Py_DECREF(tmp_import_from_88__module);
    tmp_import_from_88__module = NULL;

    {
        PyObject *tmp_assign_source_600;
        PyObject *tmp_import_name_from_509;
        PyObject *tmp_name_name_364;
        PyObject *tmp_globals_name_364;
        PyObject *tmp_locals_name_364;
        PyObject *tmp_fromlist_name_364;
        PyObject *tmp_level_name_364;
        tmp_name_name_364 = const_str_plain_myspass;
        tmp_globals_name_364 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_364 = Py_None;
        tmp_fromlist_name_364 = const_tuple_str_plain_MySpassIE_tuple;
        tmp_level_name_364 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 665;
        tmp_import_name_from_509 = IMPORT_MODULE5(tmp_name_name_364, tmp_globals_name_364, tmp_locals_name_364, tmp_fromlist_name_364, tmp_level_name_364);
        if (tmp_import_name_from_509 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 665;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_509)) {
           tmp_assign_source_600 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_509,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MySpassIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_600 = IMPORT_NAME(tmp_import_name_from_509, const_str_plain_MySpassIE);
        }

        Py_DECREF(tmp_import_name_from_509);
        if (tmp_assign_source_600 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 665;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MySpassIE, tmp_assign_source_600);
    }
    {
        PyObject *tmp_assign_source_601;
        PyObject *tmp_name_name_365;
        PyObject *tmp_globals_name_365;
        PyObject *tmp_locals_name_365;
        PyObject *tmp_fromlist_name_365;
        PyObject *tmp_level_name_365;
        tmp_name_name_365 = const_str_plain_myvi;
        tmp_globals_name_365 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_365 = Py_None;
        tmp_fromlist_name_365 = const_tuple_str_plain_MyviIE_str_plain_MyviEmbedIE_tuple;
        tmp_level_name_365 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 666;
        tmp_assign_source_601 = IMPORT_MODULE5(tmp_name_name_365, tmp_globals_name_365, tmp_locals_name_365, tmp_fromlist_name_365, tmp_level_name_365);
        if (tmp_assign_source_601 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 666;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_89__module == NULL);
        tmp_import_from_89__module = tmp_assign_source_601;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_602;
        PyObject *tmp_import_name_from_510;
        CHECK_OBJECT(tmp_import_from_89__module);
        tmp_import_name_from_510 = tmp_import_from_89__module;
        if (PyModule_Check(tmp_import_name_from_510)) {
           tmp_assign_source_602 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_510,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MyviIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_602 = IMPORT_NAME(tmp_import_name_from_510, const_str_plain_MyviIE);
        }

        if (tmp_assign_source_602 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 666;

            goto try_except_handler_89;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MyviIE, tmp_assign_source_602);
    }
    {
        PyObject *tmp_assign_source_603;
        PyObject *tmp_import_name_from_511;
        CHECK_OBJECT(tmp_import_from_89__module);
        tmp_import_name_from_511 = tmp_import_from_89__module;
        if (PyModule_Check(tmp_import_name_from_511)) {
           tmp_assign_source_603 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_511,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MyviEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_603 = IMPORT_NAME(tmp_import_name_from_511, const_str_plain_MyviEmbedIE);
        }

        if (tmp_assign_source_603 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 666;

            goto try_except_handler_89;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MyviEmbedIE, tmp_assign_source_603);
    }
    goto try_end_89;
    // Exception handler code:
    try_except_handler_89:;
    exception_keeper_type_89 = exception_type;
    exception_keeper_value_89 = exception_value;
    exception_keeper_tb_89 = exception_tb;
    exception_keeper_lineno_89 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_89__module);
    Py_DECREF(tmp_import_from_89__module);
    tmp_import_from_89__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_89;
    exception_value = exception_keeper_value_89;
    exception_tb = exception_keeper_tb_89;
    exception_lineno = exception_keeper_lineno_89;

    goto frame_exception_exit_1;
    // End of try:
    try_end_89:;
    CHECK_OBJECT(tmp_import_from_89__module);
    Py_DECREF(tmp_import_from_89__module);
    tmp_import_from_89__module = NULL;

    {
        PyObject *tmp_assign_source_604;
        PyObject *tmp_import_name_from_512;
        PyObject *tmp_name_name_366;
        PyObject *tmp_globals_name_366;
        PyObject *tmp_locals_name_366;
        PyObject *tmp_fromlist_name_366;
        PyObject *tmp_level_name_366;
        tmp_name_name_366 = const_str_plain_myvidster;
        tmp_globals_name_366 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_366 = Py_None;
        tmp_fromlist_name_366 = const_tuple_str_plain_MyVidsterIE_tuple;
        tmp_level_name_366 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 670;
        tmp_import_name_from_512 = IMPORT_MODULE5(tmp_name_name_366, tmp_globals_name_366, tmp_locals_name_366, tmp_fromlist_name_366, tmp_level_name_366);
        if (tmp_import_name_from_512 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 670;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_512)) {
           tmp_assign_source_604 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_512,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MyVidsterIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_604 = IMPORT_NAME(tmp_import_name_from_512, const_str_plain_MyVidsterIE);
        }

        Py_DECREF(tmp_import_name_from_512);
        if (tmp_assign_source_604 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 670;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MyVidsterIE, tmp_assign_source_604);
    }
    {
        PyObject *tmp_assign_source_605;
        PyObject *tmp_name_name_367;
        PyObject *tmp_globals_name_367;
        PyObject *tmp_locals_name_367;
        PyObject *tmp_fromlist_name_367;
        PyObject *tmp_level_name_367;
        tmp_name_name_367 = const_str_plain_nationalgeographic;
        tmp_globals_name_367 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_367 = Py_None;
        tmp_fromlist_name_367 = const_tuple_d1815f20ac58d678c003008be903b1ca_tuple;
        tmp_level_name_367 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 671;
        tmp_assign_source_605 = IMPORT_MODULE5(tmp_name_name_367, tmp_globals_name_367, tmp_locals_name_367, tmp_fromlist_name_367, tmp_level_name_367);
        if (tmp_assign_source_605 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 671;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_90__module == NULL);
        tmp_import_from_90__module = tmp_assign_source_605;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_606;
        PyObject *tmp_import_name_from_513;
        CHECK_OBJECT(tmp_import_from_90__module);
        tmp_import_name_from_513 = tmp_import_from_90__module;
        if (PyModule_Check(tmp_import_name_from_513)) {
           tmp_assign_source_606 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_513,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NationalGeographicVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_606 = IMPORT_NAME(tmp_import_name_from_513, const_str_plain_NationalGeographicVideoIE);
        }

        if (tmp_assign_source_606 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 671;

            goto try_except_handler_90;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NationalGeographicVideoIE, tmp_assign_source_606);
    }
    {
        PyObject *tmp_assign_source_607;
        PyObject *tmp_import_name_from_514;
        CHECK_OBJECT(tmp_import_from_90__module);
        tmp_import_name_from_514 = tmp_import_from_90__module;
        if (PyModule_Check(tmp_import_name_from_514)) {
           tmp_assign_source_607 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_514,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NationalGeographicTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_607 = IMPORT_NAME(tmp_import_name_from_514, const_str_plain_NationalGeographicTVIE);
        }

        if (tmp_assign_source_607 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 671;

            goto try_except_handler_90;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NationalGeographicTVIE, tmp_assign_source_607);
    }
    goto try_end_90;
    // Exception handler code:
    try_except_handler_90:;
    exception_keeper_type_90 = exception_type;
    exception_keeper_value_90 = exception_value;
    exception_keeper_tb_90 = exception_tb;
    exception_keeper_lineno_90 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_90__module);
    Py_DECREF(tmp_import_from_90__module);
    tmp_import_from_90__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_90;
    exception_value = exception_keeper_value_90;
    exception_tb = exception_keeper_tb_90;
    exception_lineno = exception_keeper_lineno_90;

    goto frame_exception_exit_1;
    // End of try:
    try_end_90:;
    CHECK_OBJECT(tmp_import_from_90__module);
    Py_DECREF(tmp_import_from_90__module);
    tmp_import_from_90__module = NULL;

    {
        PyObject *tmp_assign_source_608;
        PyObject *tmp_import_name_from_515;
        PyObject *tmp_name_name_368;
        PyObject *tmp_globals_name_368;
        PyObject *tmp_locals_name_368;
        PyObject *tmp_fromlist_name_368;
        PyObject *tmp_level_name_368;
        tmp_name_name_368 = const_str_plain_naver;
        tmp_globals_name_368 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_368 = Py_None;
        tmp_fromlist_name_368 = const_tuple_str_plain_NaverIE_tuple;
        tmp_level_name_368 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 675;
        tmp_import_name_from_515 = IMPORT_MODULE5(tmp_name_name_368, tmp_globals_name_368, tmp_locals_name_368, tmp_fromlist_name_368, tmp_level_name_368);
        if (tmp_import_name_from_515 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 675;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_515)) {
           tmp_assign_source_608 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_515,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NaverIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_608 = IMPORT_NAME(tmp_import_name_from_515, const_str_plain_NaverIE);
        }

        Py_DECREF(tmp_import_name_from_515);
        if (tmp_assign_source_608 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 675;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NaverIE, tmp_assign_source_608);
    }
    {
        PyObject *tmp_assign_source_609;
        PyObject *tmp_import_name_from_516;
        PyObject *tmp_name_name_369;
        PyObject *tmp_globals_name_369;
        PyObject *tmp_locals_name_369;
        PyObject *tmp_fromlist_name_369;
        PyObject *tmp_level_name_369;
        tmp_name_name_369 = const_str_plain_nba;
        tmp_globals_name_369 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_369 = Py_None;
        tmp_fromlist_name_369 = const_tuple_str_plain_NBAIE_tuple;
        tmp_level_name_369 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 676;
        tmp_import_name_from_516 = IMPORT_MODULE5(tmp_name_name_369, tmp_globals_name_369, tmp_locals_name_369, tmp_fromlist_name_369, tmp_level_name_369);
        if (tmp_import_name_from_516 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 676;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_516)) {
           tmp_assign_source_609 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_516,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NBAIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_609 = IMPORT_NAME(tmp_import_name_from_516, const_str_plain_NBAIE);
        }

        Py_DECREF(tmp_import_name_from_516);
        if (tmp_assign_source_609 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 676;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NBAIE, tmp_assign_source_609);
    }
    {
        PyObject *tmp_assign_source_610;
        PyObject *tmp_name_name_370;
        PyObject *tmp_globals_name_370;
        PyObject *tmp_locals_name_370;
        PyObject *tmp_fromlist_name_370;
        PyObject *tmp_level_name_370;
        tmp_name_name_370 = const_str_plain_nbc;
        tmp_globals_name_370 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_370 = Py_None;
        tmp_fromlist_name_370 = const_tuple_d0aaed6f46afa928c8454a2c81f59a0a_tuple;
        tmp_level_name_370 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 677;
        tmp_assign_source_610 = IMPORT_MODULE5(tmp_name_name_370, tmp_globals_name_370, tmp_locals_name_370, tmp_fromlist_name_370, tmp_level_name_370);
        if (tmp_assign_source_610 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_91__module == NULL);
        tmp_import_from_91__module = tmp_assign_source_610;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_611;
        PyObject *tmp_import_name_from_517;
        CHECK_OBJECT(tmp_import_from_91__module);
        tmp_import_name_from_517 = tmp_import_from_91__module;
        if (PyModule_Check(tmp_import_name_from_517)) {
           tmp_assign_source_611 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_517,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_CSNNEIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_611 = IMPORT_NAME(tmp_import_name_from_517, const_str_plain_CSNNEIE);
        }

        if (tmp_assign_source_611 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto try_except_handler_91;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_CSNNEIE, tmp_assign_source_611);
    }
    {
        PyObject *tmp_assign_source_612;
        PyObject *tmp_import_name_from_518;
        CHECK_OBJECT(tmp_import_from_91__module);
        tmp_import_name_from_518 = tmp_import_from_91__module;
        if (PyModule_Check(tmp_import_name_from_518)) {
           tmp_assign_source_612 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_518,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NBCIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_612 = IMPORT_NAME(tmp_import_name_from_518, const_str_plain_NBCIE);
        }

        if (tmp_assign_source_612 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto try_except_handler_91;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NBCIE, tmp_assign_source_612);
    }
    {
        PyObject *tmp_assign_source_613;
        PyObject *tmp_import_name_from_519;
        CHECK_OBJECT(tmp_import_from_91__module);
        tmp_import_name_from_519 = tmp_import_from_91__module;
        if (PyModule_Check(tmp_import_name_from_519)) {
           tmp_assign_source_613 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_519,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NBCNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_613 = IMPORT_NAME(tmp_import_name_from_519, const_str_plain_NBCNewsIE);
        }

        if (tmp_assign_source_613 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto try_except_handler_91;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NBCNewsIE, tmp_assign_source_613);
    }
    {
        PyObject *tmp_assign_source_614;
        PyObject *tmp_import_name_from_520;
        CHECK_OBJECT(tmp_import_from_91__module);
        tmp_import_name_from_520 = tmp_import_from_91__module;
        if (PyModule_Check(tmp_import_name_from_520)) {
           tmp_assign_source_614 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_520,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NBCOlympicsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_614 = IMPORT_NAME(tmp_import_name_from_520, const_str_plain_NBCOlympicsIE);
        }

        if (tmp_assign_source_614 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto try_except_handler_91;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NBCOlympicsIE, tmp_assign_source_614);
    }
    {
        PyObject *tmp_assign_source_615;
        PyObject *tmp_import_name_from_521;
        CHECK_OBJECT(tmp_import_from_91__module);
        tmp_import_name_from_521 = tmp_import_from_91__module;
        if (PyModule_Check(tmp_import_name_from_521)) {
           tmp_assign_source_615 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_521,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NBCOlympicsStreamIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_615 = IMPORT_NAME(tmp_import_name_from_521, const_str_plain_NBCOlympicsStreamIE);
        }

        if (tmp_assign_source_615 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto try_except_handler_91;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NBCOlympicsStreamIE, tmp_assign_source_615);
    }
    {
        PyObject *tmp_assign_source_616;
        PyObject *tmp_import_name_from_522;
        CHECK_OBJECT(tmp_import_from_91__module);
        tmp_import_name_from_522 = tmp_import_from_91__module;
        if (PyModule_Check(tmp_import_name_from_522)) {
           tmp_assign_source_616 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_522,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NBCSportsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_616 = IMPORT_NAME(tmp_import_name_from_522, const_str_plain_NBCSportsIE);
        }

        if (tmp_assign_source_616 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto try_except_handler_91;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NBCSportsIE, tmp_assign_source_616);
    }
    {
        PyObject *tmp_assign_source_617;
        PyObject *tmp_import_name_from_523;
        CHECK_OBJECT(tmp_import_from_91__module);
        tmp_import_name_from_523 = tmp_import_from_91__module;
        if (PyModule_Check(tmp_import_name_from_523)) {
           tmp_assign_source_617 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_523,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NBCSportsStreamIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_617 = IMPORT_NAME(tmp_import_name_from_523, const_str_plain_NBCSportsStreamIE);
        }

        if (tmp_assign_source_617 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto try_except_handler_91;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NBCSportsStreamIE, tmp_assign_source_617);
    }
    {
        PyObject *tmp_assign_source_618;
        PyObject *tmp_import_name_from_524;
        CHECK_OBJECT(tmp_import_from_91__module);
        tmp_import_name_from_524 = tmp_import_from_91__module;
        if (PyModule_Check(tmp_import_name_from_524)) {
           tmp_assign_source_618 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_524,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NBCSportsVPlayerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_618 = IMPORT_NAME(tmp_import_name_from_524, const_str_plain_NBCSportsVPlayerIE);
        }

        if (tmp_assign_source_618 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto try_except_handler_91;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NBCSportsVPlayerIE, tmp_assign_source_618);
    }
    goto try_end_91;
    // Exception handler code:
    try_except_handler_91:;
    exception_keeper_type_91 = exception_type;
    exception_keeper_value_91 = exception_value;
    exception_keeper_tb_91 = exception_tb;
    exception_keeper_lineno_91 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_91__module);
    Py_DECREF(tmp_import_from_91__module);
    tmp_import_from_91__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_91;
    exception_value = exception_keeper_value_91;
    exception_tb = exception_keeper_tb_91;
    exception_lineno = exception_keeper_lineno_91;

    goto frame_exception_exit_1;
    // End of try:
    try_end_91:;
    CHECK_OBJECT(tmp_import_from_91__module);
    Py_DECREF(tmp_import_from_91__module);
    tmp_import_from_91__module = NULL;

    {
        PyObject *tmp_assign_source_619;
        PyObject *tmp_name_name_371;
        PyObject *tmp_globals_name_371;
        PyObject *tmp_locals_name_371;
        PyObject *tmp_fromlist_name_371;
        PyObject *tmp_level_name_371;
        tmp_name_name_371 = const_str_plain_ndr;
        tmp_globals_name_371 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_371 = Py_None;
        tmp_fromlist_name_371 = const_tuple_8b5f4bfee9d57ef8b702418362449376_tuple;
        tmp_level_name_371 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 687;
        tmp_assign_source_619 = IMPORT_MODULE5(tmp_name_name_371, tmp_globals_name_371, tmp_locals_name_371, tmp_fromlist_name_371, tmp_level_name_371);
        if (tmp_assign_source_619 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 687;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_92__module == NULL);
        tmp_import_from_92__module = tmp_assign_source_619;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_620;
        PyObject *tmp_import_name_from_525;
        CHECK_OBJECT(tmp_import_from_92__module);
        tmp_import_name_from_525 = tmp_import_from_92__module;
        if (PyModule_Check(tmp_import_name_from_525)) {
           tmp_assign_source_620 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_525,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NDRIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_620 = IMPORT_NAME(tmp_import_name_from_525, const_str_plain_NDRIE);
        }

        if (tmp_assign_source_620 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 687;

            goto try_except_handler_92;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NDRIE, tmp_assign_source_620);
    }
    {
        PyObject *tmp_assign_source_621;
        PyObject *tmp_import_name_from_526;
        CHECK_OBJECT(tmp_import_from_92__module);
        tmp_import_name_from_526 = tmp_import_from_92__module;
        if (PyModule_Check(tmp_import_name_from_526)) {
           tmp_assign_source_621 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_526,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NJoyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_621 = IMPORT_NAME(tmp_import_name_from_526, const_str_plain_NJoyIE);
        }

        if (tmp_assign_source_621 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 687;

            goto try_except_handler_92;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NJoyIE, tmp_assign_source_621);
    }
    {
        PyObject *tmp_assign_source_622;
        PyObject *tmp_import_name_from_527;
        CHECK_OBJECT(tmp_import_from_92__module);
        tmp_import_name_from_527 = tmp_import_from_92__module;
        if (PyModule_Check(tmp_import_name_from_527)) {
           tmp_assign_source_622 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_527,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NDREmbedBaseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_622 = IMPORT_NAME(tmp_import_name_from_527, const_str_plain_NDREmbedBaseIE);
        }

        if (tmp_assign_source_622 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 687;

            goto try_except_handler_92;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NDREmbedBaseIE, tmp_assign_source_622);
    }
    {
        PyObject *tmp_assign_source_623;
        PyObject *tmp_import_name_from_528;
        CHECK_OBJECT(tmp_import_from_92__module);
        tmp_import_name_from_528 = tmp_import_from_92__module;
        if (PyModule_Check(tmp_import_name_from_528)) {
           tmp_assign_source_623 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_528,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NDREmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_623 = IMPORT_NAME(tmp_import_name_from_528, const_str_plain_NDREmbedIE);
        }

        if (tmp_assign_source_623 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 687;

            goto try_except_handler_92;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NDREmbedIE, tmp_assign_source_623);
    }
    {
        PyObject *tmp_assign_source_624;
        PyObject *tmp_import_name_from_529;
        CHECK_OBJECT(tmp_import_from_92__module);
        tmp_import_name_from_529 = tmp_import_from_92__module;
        if (PyModule_Check(tmp_import_name_from_529)) {
           tmp_assign_source_624 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_529,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NJoyEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_624 = IMPORT_NAME(tmp_import_name_from_529, const_str_plain_NJoyEmbedIE);
        }

        if (tmp_assign_source_624 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 687;

            goto try_except_handler_92;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NJoyEmbedIE, tmp_assign_source_624);
    }
    goto try_end_92;
    // Exception handler code:
    try_except_handler_92:;
    exception_keeper_type_92 = exception_type;
    exception_keeper_value_92 = exception_value;
    exception_keeper_tb_92 = exception_tb;
    exception_keeper_lineno_92 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_92__module);
    Py_DECREF(tmp_import_from_92__module);
    tmp_import_from_92__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_92;
    exception_value = exception_keeper_value_92;
    exception_tb = exception_keeper_tb_92;
    exception_lineno = exception_keeper_lineno_92;

    goto frame_exception_exit_1;
    // End of try:
    try_end_92:;
    CHECK_OBJECT(tmp_import_from_92__module);
    Py_DECREF(tmp_import_from_92__module);
    tmp_import_from_92__module = NULL;

    {
        PyObject *tmp_assign_source_625;
        PyObject *tmp_import_name_from_530;
        PyObject *tmp_name_name_372;
        PyObject *tmp_globals_name_372;
        PyObject *tmp_locals_name_372;
        PyObject *tmp_fromlist_name_372;
        PyObject *tmp_level_name_372;
        tmp_name_name_372 = const_str_plain_ndtv;
        tmp_globals_name_372 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_372 = Py_None;
        tmp_fromlist_name_372 = const_tuple_str_plain_NDTVIE_tuple;
        tmp_level_name_372 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 694;
        tmp_import_name_from_530 = IMPORT_MODULE5(tmp_name_name_372, tmp_globals_name_372, tmp_locals_name_372, tmp_fromlist_name_372, tmp_level_name_372);
        if (tmp_import_name_from_530 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 694;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_530)) {
           tmp_assign_source_625 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_530,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NDTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_625 = IMPORT_NAME(tmp_import_name_from_530, const_str_plain_NDTVIE);
        }

        Py_DECREF(tmp_import_name_from_530);
        if (tmp_assign_source_625 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 694;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NDTVIE, tmp_assign_source_625);
    }
    {
        PyObject *tmp_assign_source_626;
        PyObject *tmp_import_name_from_531;
        PyObject *tmp_name_name_373;
        PyObject *tmp_globals_name_373;
        PyObject *tmp_locals_name_373;
        PyObject *tmp_fromlist_name_373;
        PyObject *tmp_level_name_373;
        tmp_name_name_373 = const_str_plain_netzkino;
        tmp_globals_name_373 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_373 = Py_None;
        tmp_fromlist_name_373 = const_tuple_str_plain_NetzkinoIE_tuple;
        tmp_level_name_373 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 695;
        tmp_import_name_from_531 = IMPORT_MODULE5(tmp_name_name_373, tmp_globals_name_373, tmp_locals_name_373, tmp_fromlist_name_373, tmp_level_name_373);
        if (tmp_import_name_from_531 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 695;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_531)) {
           tmp_assign_source_626 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_531,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NetzkinoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_626 = IMPORT_NAME(tmp_import_name_from_531, const_str_plain_NetzkinoIE);
        }

        Py_DECREF(tmp_import_name_from_531);
        if (tmp_assign_source_626 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 695;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NetzkinoIE, tmp_assign_source_626);
    }
    {
        PyObject *tmp_assign_source_627;
        PyObject *tmp_import_name_from_532;
        PyObject *tmp_name_name_374;
        PyObject *tmp_globals_name_374;
        PyObject *tmp_locals_name_374;
        PyObject *tmp_fromlist_name_374;
        PyObject *tmp_level_name_374;
        tmp_name_name_374 = const_str_plain_nerdcubed;
        tmp_globals_name_374 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_374 = Py_None;
        tmp_fromlist_name_374 = const_tuple_str_plain_NerdCubedFeedIE_tuple;
        tmp_level_name_374 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 696;
        tmp_import_name_from_532 = IMPORT_MODULE5(tmp_name_name_374, tmp_globals_name_374, tmp_locals_name_374, tmp_fromlist_name_374, tmp_level_name_374);
        if (tmp_import_name_from_532 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 696;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_532)) {
           tmp_assign_source_627 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_532,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NerdCubedFeedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_627 = IMPORT_NAME(tmp_import_name_from_532, const_str_plain_NerdCubedFeedIE);
        }

        Py_DECREF(tmp_import_name_from_532);
        if (tmp_assign_source_627 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 696;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NerdCubedFeedIE, tmp_assign_source_627);
    }
    {
        PyObject *tmp_assign_source_628;
        PyObject *tmp_name_name_375;
        PyObject *tmp_globals_name_375;
        PyObject *tmp_locals_name_375;
        PyObject *tmp_fromlist_name_375;
        PyObject *tmp_level_name_375;
        tmp_name_name_375 = const_str_plain_neteasemusic;
        tmp_globals_name_375 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_375 = Py_None;
        tmp_fromlist_name_375 = const_tuple_b63791b7cbec42bc00debfbfa72fc466_tuple;
        tmp_level_name_375 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 697;
        tmp_assign_source_628 = IMPORT_MODULE5(tmp_name_name_375, tmp_globals_name_375, tmp_locals_name_375, tmp_fromlist_name_375, tmp_level_name_375);
        if (tmp_assign_source_628 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 697;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_93__module == NULL);
        tmp_import_from_93__module = tmp_assign_source_628;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_629;
        PyObject *tmp_import_name_from_533;
        CHECK_OBJECT(tmp_import_from_93__module);
        tmp_import_name_from_533 = tmp_import_from_93__module;
        if (PyModule_Check(tmp_import_name_from_533)) {
           tmp_assign_source_629 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_533,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NetEaseMusicIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_629 = IMPORT_NAME(tmp_import_name_from_533, const_str_plain_NetEaseMusicIE);
        }

        if (tmp_assign_source_629 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 697;

            goto try_except_handler_93;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NetEaseMusicIE, tmp_assign_source_629);
    }
    {
        PyObject *tmp_assign_source_630;
        PyObject *tmp_import_name_from_534;
        CHECK_OBJECT(tmp_import_from_93__module);
        tmp_import_name_from_534 = tmp_import_from_93__module;
        if (PyModule_Check(tmp_import_name_from_534)) {
           tmp_assign_source_630 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_534,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NetEaseMusicAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_630 = IMPORT_NAME(tmp_import_name_from_534, const_str_plain_NetEaseMusicAlbumIE);
        }

        if (tmp_assign_source_630 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 697;

            goto try_except_handler_93;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NetEaseMusicAlbumIE, tmp_assign_source_630);
    }
    {
        PyObject *tmp_assign_source_631;
        PyObject *tmp_import_name_from_535;
        CHECK_OBJECT(tmp_import_from_93__module);
        tmp_import_name_from_535 = tmp_import_from_93__module;
        if (PyModule_Check(tmp_import_name_from_535)) {
           tmp_assign_source_631 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_535,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NetEaseMusicSingerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_631 = IMPORT_NAME(tmp_import_name_from_535, const_str_plain_NetEaseMusicSingerIE);
        }

        if (tmp_assign_source_631 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 697;

            goto try_except_handler_93;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NetEaseMusicSingerIE, tmp_assign_source_631);
    }
    {
        PyObject *tmp_assign_source_632;
        PyObject *tmp_import_name_from_536;
        CHECK_OBJECT(tmp_import_from_93__module);
        tmp_import_name_from_536 = tmp_import_from_93__module;
        if (PyModule_Check(tmp_import_name_from_536)) {
           tmp_assign_source_632 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_536,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NetEaseMusicListIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_632 = IMPORT_NAME(tmp_import_name_from_536, const_str_plain_NetEaseMusicListIE);
        }

        if (tmp_assign_source_632 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 697;

            goto try_except_handler_93;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NetEaseMusicListIE, tmp_assign_source_632);
    }
    {
        PyObject *tmp_assign_source_633;
        PyObject *tmp_import_name_from_537;
        CHECK_OBJECT(tmp_import_from_93__module);
        tmp_import_name_from_537 = tmp_import_from_93__module;
        if (PyModule_Check(tmp_import_name_from_537)) {
           tmp_assign_source_633 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_537,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NetEaseMusicMvIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_633 = IMPORT_NAME(tmp_import_name_from_537, const_str_plain_NetEaseMusicMvIE);
        }

        if (tmp_assign_source_633 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 697;

            goto try_except_handler_93;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NetEaseMusicMvIE, tmp_assign_source_633);
    }
    {
        PyObject *tmp_assign_source_634;
        PyObject *tmp_import_name_from_538;
        CHECK_OBJECT(tmp_import_from_93__module);
        tmp_import_name_from_538 = tmp_import_from_93__module;
        if (PyModule_Check(tmp_import_name_from_538)) {
           tmp_assign_source_634 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_538,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NetEaseMusicProgramIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_634 = IMPORT_NAME(tmp_import_name_from_538, const_str_plain_NetEaseMusicProgramIE);
        }

        if (tmp_assign_source_634 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 697;

            goto try_except_handler_93;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NetEaseMusicProgramIE, tmp_assign_source_634);
    }
    {
        PyObject *tmp_assign_source_635;
        PyObject *tmp_import_name_from_539;
        CHECK_OBJECT(tmp_import_from_93__module);
        tmp_import_name_from_539 = tmp_import_from_93__module;
        if (PyModule_Check(tmp_import_name_from_539)) {
           tmp_assign_source_635 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_539,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NetEaseMusicDjRadioIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_635 = IMPORT_NAME(tmp_import_name_from_539, const_str_plain_NetEaseMusicDjRadioIE);
        }

        if (tmp_assign_source_635 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 697;

            goto try_except_handler_93;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NetEaseMusicDjRadioIE, tmp_assign_source_635);
    }
    goto try_end_93;
    // Exception handler code:
    try_except_handler_93:;
    exception_keeper_type_93 = exception_type;
    exception_keeper_value_93 = exception_value;
    exception_keeper_tb_93 = exception_tb;
    exception_keeper_lineno_93 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_93__module);
    Py_DECREF(tmp_import_from_93__module);
    tmp_import_from_93__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_93;
    exception_value = exception_keeper_value_93;
    exception_tb = exception_keeper_tb_93;
    exception_lineno = exception_keeper_lineno_93;

    goto frame_exception_exit_1;
    // End of try:
    try_end_93:;
    CHECK_OBJECT(tmp_import_from_93__module);
    Py_DECREF(tmp_import_from_93__module);
    tmp_import_from_93__module = NULL;

    {
        PyObject *tmp_assign_source_636;
        PyObject *tmp_name_name_376;
        PyObject *tmp_globals_name_376;
        PyObject *tmp_locals_name_376;
        PyObject *tmp_fromlist_name_376;
        PyObject *tmp_level_name_376;
        tmp_name_name_376 = const_str_plain_newgrounds;
        tmp_globals_name_376 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_376 = Py_None;
        tmp_fromlist_name_376 = const_tuple_str_plain_NewgroundsIE_str_plain_NewgroundsPlaylistIE_tuple;
        tmp_level_name_376 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 706;
        tmp_assign_source_636 = IMPORT_MODULE5(tmp_name_name_376, tmp_globals_name_376, tmp_locals_name_376, tmp_fromlist_name_376, tmp_level_name_376);
        if (tmp_assign_source_636 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 706;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_94__module == NULL);
        tmp_import_from_94__module = tmp_assign_source_636;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_637;
        PyObject *tmp_import_name_from_540;
        CHECK_OBJECT(tmp_import_from_94__module);
        tmp_import_name_from_540 = tmp_import_from_94__module;
        if (PyModule_Check(tmp_import_name_from_540)) {
           tmp_assign_source_637 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_540,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NewgroundsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_637 = IMPORT_NAME(tmp_import_name_from_540, const_str_plain_NewgroundsIE);
        }

        if (tmp_assign_source_637 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 706;

            goto try_except_handler_94;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NewgroundsIE, tmp_assign_source_637);
    }
    {
        PyObject *tmp_assign_source_638;
        PyObject *tmp_import_name_from_541;
        CHECK_OBJECT(tmp_import_from_94__module);
        tmp_import_name_from_541 = tmp_import_from_94__module;
        if (PyModule_Check(tmp_import_name_from_541)) {
           tmp_assign_source_638 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_541,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NewgroundsPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_638 = IMPORT_NAME(tmp_import_name_from_541, const_str_plain_NewgroundsPlaylistIE);
        }

        if (tmp_assign_source_638 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 706;

            goto try_except_handler_94;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NewgroundsPlaylistIE, tmp_assign_source_638);
    }
    goto try_end_94;
    // Exception handler code:
    try_except_handler_94:;
    exception_keeper_type_94 = exception_type;
    exception_keeper_value_94 = exception_value;
    exception_keeper_tb_94 = exception_tb;
    exception_keeper_lineno_94 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_94__module);
    Py_DECREF(tmp_import_from_94__module);
    tmp_import_from_94__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_94;
    exception_value = exception_keeper_value_94;
    exception_tb = exception_keeper_tb_94;
    exception_lineno = exception_keeper_lineno_94;

    goto frame_exception_exit_1;
    // End of try:
    try_end_94:;
    CHECK_OBJECT(tmp_import_from_94__module);
    Py_DECREF(tmp_import_from_94__module);
    tmp_import_from_94__module = NULL;

    {
        PyObject *tmp_assign_source_639;
        PyObject *tmp_import_name_from_542;
        PyObject *tmp_name_name_377;
        PyObject *tmp_globals_name_377;
        PyObject *tmp_locals_name_377;
        PyObject *tmp_fromlist_name_377;
        PyObject *tmp_level_name_377;
        tmp_name_name_377 = const_str_plain_newstube;
        tmp_globals_name_377 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_377 = Py_None;
        tmp_fromlist_name_377 = const_tuple_str_plain_NewstubeIE_tuple;
        tmp_level_name_377 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 710;
        tmp_import_name_from_542 = IMPORT_MODULE5(tmp_name_name_377, tmp_globals_name_377, tmp_locals_name_377, tmp_fromlist_name_377, tmp_level_name_377);
        if (tmp_import_name_from_542 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 710;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_542)) {
           tmp_assign_source_639 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_542,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NewstubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_639 = IMPORT_NAME(tmp_import_name_from_542, const_str_plain_NewstubeIE);
        }

        Py_DECREF(tmp_import_name_from_542);
        if (tmp_assign_source_639 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 710;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NewstubeIE, tmp_assign_source_639);
    }
    {
        PyObject *tmp_assign_source_640;
        PyObject *tmp_name_name_378;
        PyObject *tmp_globals_name_378;
        PyObject *tmp_locals_name_378;
        PyObject *tmp_fromlist_name_378;
        PyObject *tmp_level_name_378;
        tmp_name_name_378 = const_str_plain_nextmedia;
        tmp_globals_name_378 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_378 = Py_None;
        tmp_fromlist_name_378 = const_tuple_8ba425396d0796abd5fa0f9f6bc8fb1b_tuple;
        tmp_level_name_378 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 711;
        tmp_assign_source_640 = IMPORT_MODULE5(tmp_name_name_378, tmp_globals_name_378, tmp_locals_name_378, tmp_fromlist_name_378, tmp_level_name_378);
        if (tmp_assign_source_640 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 711;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_95__module == NULL);
        tmp_import_from_95__module = tmp_assign_source_640;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_641;
        PyObject *tmp_import_name_from_543;
        CHECK_OBJECT(tmp_import_from_95__module);
        tmp_import_name_from_543 = tmp_import_from_95__module;
        if (PyModule_Check(tmp_import_name_from_543)) {
           tmp_assign_source_641 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_543,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NextMediaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_641 = IMPORT_NAME(tmp_import_name_from_543, const_str_plain_NextMediaIE);
        }

        if (tmp_assign_source_641 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 711;

            goto try_except_handler_95;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NextMediaIE, tmp_assign_source_641);
    }
    {
        PyObject *tmp_assign_source_642;
        PyObject *tmp_import_name_from_544;
        CHECK_OBJECT(tmp_import_from_95__module);
        tmp_import_name_from_544 = tmp_import_from_95__module;
        if (PyModule_Check(tmp_import_name_from_544)) {
           tmp_assign_source_642 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_544,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NextMediaActionNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_642 = IMPORT_NAME(tmp_import_name_from_544, const_str_plain_NextMediaActionNewsIE);
        }

        if (tmp_assign_source_642 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 711;

            goto try_except_handler_95;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NextMediaActionNewsIE, tmp_assign_source_642);
    }
    {
        PyObject *tmp_assign_source_643;
        PyObject *tmp_import_name_from_545;
        CHECK_OBJECT(tmp_import_from_95__module);
        tmp_import_name_from_545 = tmp_import_from_95__module;
        if (PyModule_Check(tmp_import_name_from_545)) {
           tmp_assign_source_643 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_545,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AppleDailyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_643 = IMPORT_NAME(tmp_import_name_from_545, const_str_plain_AppleDailyIE);
        }

        if (tmp_assign_source_643 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 711;

            goto try_except_handler_95;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AppleDailyIE, tmp_assign_source_643);
    }
    {
        PyObject *tmp_assign_source_644;
        PyObject *tmp_import_name_from_546;
        CHECK_OBJECT(tmp_import_from_95__module);
        tmp_import_name_from_546 = tmp_import_from_95__module;
        if (PyModule_Check(tmp_import_name_from_546)) {
           tmp_assign_source_644 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_546,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NextTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_644 = IMPORT_NAME(tmp_import_name_from_546, const_str_plain_NextTVIE);
        }

        if (tmp_assign_source_644 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 711;

            goto try_except_handler_95;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NextTVIE, tmp_assign_source_644);
    }
    goto try_end_95;
    // Exception handler code:
    try_except_handler_95:;
    exception_keeper_type_95 = exception_type;
    exception_keeper_value_95 = exception_value;
    exception_keeper_tb_95 = exception_tb;
    exception_keeper_lineno_95 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_95__module);
    Py_DECREF(tmp_import_from_95__module);
    tmp_import_from_95__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_95;
    exception_value = exception_keeper_value_95;
    exception_tb = exception_keeper_tb_95;
    exception_lineno = exception_keeper_lineno_95;

    goto frame_exception_exit_1;
    // End of try:
    try_end_95:;
    CHECK_OBJECT(tmp_import_from_95__module);
    Py_DECREF(tmp_import_from_95__module);
    tmp_import_from_95__module = NULL;

    {
        PyObject *tmp_assign_source_645;
        PyObject *tmp_name_name_379;
        PyObject *tmp_globals_name_379;
        PyObject *tmp_locals_name_379;
        PyObject *tmp_fromlist_name_379;
        PyObject *tmp_level_name_379;
        tmp_name_name_379 = const_str_plain_nexx;
        tmp_globals_name_379 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_379 = Py_None;
        tmp_fromlist_name_379 = const_tuple_str_plain_NexxIE_str_plain_NexxEmbedIE_tuple;
        tmp_level_name_379 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 717;
        tmp_assign_source_645 = IMPORT_MODULE5(tmp_name_name_379, tmp_globals_name_379, tmp_locals_name_379, tmp_fromlist_name_379, tmp_level_name_379);
        if (tmp_assign_source_645 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 717;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_96__module == NULL);
        tmp_import_from_96__module = tmp_assign_source_645;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_646;
        PyObject *tmp_import_name_from_547;
        CHECK_OBJECT(tmp_import_from_96__module);
        tmp_import_name_from_547 = tmp_import_from_96__module;
        if (PyModule_Check(tmp_import_name_from_547)) {
           tmp_assign_source_646 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_547,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NexxIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_646 = IMPORT_NAME(tmp_import_name_from_547, const_str_plain_NexxIE);
        }

        if (tmp_assign_source_646 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 717;

            goto try_except_handler_96;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NexxIE, tmp_assign_source_646);
    }
    {
        PyObject *tmp_assign_source_647;
        PyObject *tmp_import_name_from_548;
        CHECK_OBJECT(tmp_import_from_96__module);
        tmp_import_name_from_548 = tmp_import_from_96__module;
        if (PyModule_Check(tmp_import_name_from_548)) {
           tmp_assign_source_647 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_548,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NexxEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_647 = IMPORT_NAME(tmp_import_name_from_548, const_str_plain_NexxEmbedIE);
        }

        if (tmp_assign_source_647 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 717;

            goto try_except_handler_96;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NexxEmbedIE, tmp_assign_source_647);
    }
    goto try_end_96;
    // Exception handler code:
    try_except_handler_96:;
    exception_keeper_type_96 = exception_type;
    exception_keeper_value_96 = exception_value;
    exception_keeper_tb_96 = exception_tb;
    exception_keeper_lineno_96 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_96__module);
    Py_DECREF(tmp_import_from_96__module);
    tmp_import_from_96__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_96;
    exception_value = exception_keeper_value_96;
    exception_tb = exception_keeper_tb_96;
    exception_lineno = exception_keeper_lineno_96;

    goto frame_exception_exit_1;
    // End of try:
    try_end_96:;
    CHECK_OBJECT(tmp_import_from_96__module);
    Py_DECREF(tmp_import_from_96__module);
    tmp_import_from_96__module = NULL;

    {
        PyObject *tmp_assign_source_648;
        PyObject *tmp_import_name_from_549;
        PyObject *tmp_name_name_380;
        PyObject *tmp_globals_name_380;
        PyObject *tmp_locals_name_380;
        PyObject *tmp_fromlist_name_380;
        PyObject *tmp_level_name_380;
        tmp_name_name_380 = const_str_plain_nfl;
        tmp_globals_name_380 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_380 = Py_None;
        tmp_fromlist_name_380 = const_tuple_str_plain_NFLIE_tuple;
        tmp_level_name_380 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 721;
        tmp_import_name_from_549 = IMPORT_MODULE5(tmp_name_name_380, tmp_globals_name_380, tmp_locals_name_380, tmp_fromlist_name_380, tmp_level_name_380);
        if (tmp_import_name_from_549 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 721;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_549)) {
           tmp_assign_source_648 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_549,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NFLIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_648 = IMPORT_NAME(tmp_import_name_from_549, const_str_plain_NFLIE);
        }

        Py_DECREF(tmp_import_name_from_549);
        if (tmp_assign_source_648 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 721;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NFLIE, tmp_assign_source_648);
    }
    {
        PyObject *tmp_assign_source_649;
        PyObject *tmp_import_name_from_550;
        PyObject *tmp_name_name_381;
        PyObject *tmp_globals_name_381;
        PyObject *tmp_locals_name_381;
        PyObject *tmp_fromlist_name_381;
        PyObject *tmp_level_name_381;
        tmp_name_name_381 = const_str_plain_nhk;
        tmp_globals_name_381 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_381 = Py_None;
        tmp_fromlist_name_381 = const_tuple_str_plain_NhkVodIE_tuple;
        tmp_level_name_381 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 722;
        tmp_import_name_from_550 = IMPORT_MODULE5(tmp_name_name_381, tmp_globals_name_381, tmp_locals_name_381, tmp_fromlist_name_381, tmp_level_name_381);
        if (tmp_import_name_from_550 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 722;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_550)) {
           tmp_assign_source_649 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_550,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NhkVodIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_649 = IMPORT_NAME(tmp_import_name_from_550, const_str_plain_NhkVodIE);
        }

        Py_DECREF(tmp_import_name_from_550);
        if (tmp_assign_source_649 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 722;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NhkVodIE, tmp_assign_source_649);
    }
    {
        PyObject *tmp_assign_source_650;
        PyObject *tmp_import_name_from_551;
        PyObject *tmp_name_name_382;
        PyObject *tmp_globals_name_382;
        PyObject *tmp_locals_name_382;
        PyObject *tmp_fromlist_name_382;
        PyObject *tmp_level_name_382;
        tmp_name_name_382 = const_str_plain_nhl;
        tmp_globals_name_382 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_382 = Py_None;
        tmp_fromlist_name_382 = const_tuple_str_plain_NHLIE_tuple;
        tmp_level_name_382 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 723;
        tmp_import_name_from_551 = IMPORT_MODULE5(tmp_name_name_382, tmp_globals_name_382, tmp_locals_name_382, tmp_fromlist_name_382, tmp_level_name_382);
        if (tmp_import_name_from_551 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 723;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_551)) {
           tmp_assign_source_650 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_551,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NHLIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_650 = IMPORT_NAME(tmp_import_name_from_551, const_str_plain_NHLIE);
        }

        Py_DECREF(tmp_import_name_from_551);
        if (tmp_assign_source_650 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 723;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NHLIE, tmp_assign_source_650);
    }
    {
        PyObject *tmp_assign_source_651;
        PyObject *tmp_name_name_383;
        PyObject *tmp_globals_name_383;
        PyObject *tmp_locals_name_383;
        PyObject *tmp_fromlist_name_383;
        PyObject *tmp_level_name_383;
        tmp_name_name_383 = const_str_plain_nick;
        tmp_globals_name_383 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_383 = Py_None;
        tmp_fromlist_name_383 = const_tuple_2ce5e23656e238217c2a6af3020c4756_tuple;
        tmp_level_name_383 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 724;
        tmp_assign_source_651 = IMPORT_MODULE5(tmp_name_name_383, tmp_globals_name_383, tmp_locals_name_383, tmp_fromlist_name_383, tmp_level_name_383);
        if (tmp_assign_source_651 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 724;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_97__module == NULL);
        tmp_import_from_97__module = tmp_assign_source_651;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_652;
        PyObject *tmp_import_name_from_552;
        CHECK_OBJECT(tmp_import_from_97__module);
        tmp_import_name_from_552 = tmp_import_from_97__module;
        if (PyModule_Check(tmp_import_name_from_552)) {
           tmp_assign_source_652 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_552,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NickIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_652 = IMPORT_NAME(tmp_import_name_from_552, const_str_plain_NickIE);
        }

        if (tmp_assign_source_652 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 724;

            goto try_except_handler_97;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NickIE, tmp_assign_source_652);
    }
    {
        PyObject *tmp_assign_source_653;
        PyObject *tmp_import_name_from_553;
        CHECK_OBJECT(tmp_import_from_97__module);
        tmp_import_name_from_553 = tmp_import_from_97__module;
        if (PyModule_Check(tmp_import_name_from_553)) {
           tmp_assign_source_653 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_553,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NickBrIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_653 = IMPORT_NAME(tmp_import_name_from_553, const_str_plain_NickBrIE);
        }

        if (tmp_assign_source_653 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 724;

            goto try_except_handler_97;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NickBrIE, tmp_assign_source_653);
    }
    {
        PyObject *tmp_assign_source_654;
        PyObject *tmp_import_name_from_554;
        CHECK_OBJECT(tmp_import_from_97__module);
        tmp_import_name_from_554 = tmp_import_from_97__module;
        if (PyModule_Check(tmp_import_name_from_554)) {
           tmp_assign_source_654 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_554,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NickDeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_654 = IMPORT_NAME(tmp_import_name_from_554, const_str_plain_NickDeIE);
        }

        if (tmp_assign_source_654 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 724;

            goto try_except_handler_97;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NickDeIE, tmp_assign_source_654);
    }
    {
        PyObject *tmp_assign_source_655;
        PyObject *tmp_import_name_from_555;
        CHECK_OBJECT(tmp_import_from_97__module);
        tmp_import_name_from_555 = tmp_import_from_97__module;
        if (PyModule_Check(tmp_import_name_from_555)) {
           tmp_assign_source_655 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_555,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NickNightIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_655 = IMPORT_NAME(tmp_import_name_from_555, const_str_plain_NickNightIE);
        }

        if (tmp_assign_source_655 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 724;

            goto try_except_handler_97;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NickNightIE, tmp_assign_source_655);
    }
    {
        PyObject *tmp_assign_source_656;
        PyObject *tmp_import_name_from_556;
        CHECK_OBJECT(tmp_import_from_97__module);
        tmp_import_name_from_556 = tmp_import_from_97__module;
        if (PyModule_Check(tmp_import_name_from_556)) {
           tmp_assign_source_656 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_556,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NickRuIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_656 = IMPORT_NAME(tmp_import_name_from_556, const_str_plain_NickRuIE);
        }

        if (tmp_assign_source_656 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 724;

            goto try_except_handler_97;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NickRuIE, tmp_assign_source_656);
    }
    goto try_end_97;
    // Exception handler code:
    try_except_handler_97:;
    exception_keeper_type_97 = exception_type;
    exception_keeper_value_97 = exception_value;
    exception_keeper_tb_97 = exception_tb;
    exception_keeper_lineno_97 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_97__module);
    Py_DECREF(tmp_import_from_97__module);
    tmp_import_from_97__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_97;
    exception_value = exception_keeper_value_97;
    exception_tb = exception_keeper_tb_97;
    exception_lineno = exception_keeper_lineno_97;

    goto frame_exception_exit_1;
    // End of try:
    try_end_97:;
    CHECK_OBJECT(tmp_import_from_97__module);
    Py_DECREF(tmp_import_from_97__module);
    tmp_import_from_97__module = NULL;

    {
        PyObject *tmp_assign_source_657;
        PyObject *tmp_name_name_384;
        PyObject *tmp_globals_name_384;
        PyObject *tmp_locals_name_384;
        PyObject *tmp_fromlist_name_384;
        PyObject *tmp_level_name_384;
        tmp_name_name_384 = const_str_plain_niconico;
        tmp_globals_name_384 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_384 = Py_None;
        tmp_fromlist_name_384 = const_tuple_str_plain_NiconicoIE_str_plain_NiconicoPlaylistIE_tuple;
        tmp_level_name_384 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 731;
        tmp_assign_source_657 = IMPORT_MODULE5(tmp_name_name_384, tmp_globals_name_384, tmp_locals_name_384, tmp_fromlist_name_384, tmp_level_name_384);
        if (tmp_assign_source_657 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 731;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_98__module == NULL);
        tmp_import_from_98__module = tmp_assign_source_657;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_658;
        PyObject *tmp_import_name_from_557;
        CHECK_OBJECT(tmp_import_from_98__module);
        tmp_import_name_from_557 = tmp_import_from_98__module;
        if (PyModule_Check(tmp_import_name_from_557)) {
           tmp_assign_source_658 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_557,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NiconicoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_658 = IMPORT_NAME(tmp_import_name_from_557, const_str_plain_NiconicoIE);
        }

        if (tmp_assign_source_658 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 731;

            goto try_except_handler_98;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NiconicoIE, tmp_assign_source_658);
    }
    {
        PyObject *tmp_assign_source_659;
        PyObject *tmp_import_name_from_558;
        CHECK_OBJECT(tmp_import_from_98__module);
        tmp_import_name_from_558 = tmp_import_from_98__module;
        if (PyModule_Check(tmp_import_name_from_558)) {
           tmp_assign_source_659 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_558,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NiconicoPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_659 = IMPORT_NAME(tmp_import_name_from_558, const_str_plain_NiconicoPlaylistIE);
        }

        if (tmp_assign_source_659 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 731;

            goto try_except_handler_98;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NiconicoPlaylistIE, tmp_assign_source_659);
    }
    goto try_end_98;
    // Exception handler code:
    try_except_handler_98:;
    exception_keeper_type_98 = exception_type;
    exception_keeper_value_98 = exception_value;
    exception_keeper_tb_98 = exception_tb;
    exception_keeper_lineno_98 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_98__module);
    Py_DECREF(tmp_import_from_98__module);
    tmp_import_from_98__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_98;
    exception_value = exception_keeper_value_98;
    exception_tb = exception_keeper_tb_98;
    exception_lineno = exception_keeper_lineno_98;

    goto frame_exception_exit_1;
    // End of try:
    try_end_98:;
    CHECK_OBJECT(tmp_import_from_98__module);
    Py_DECREF(tmp_import_from_98__module);
    tmp_import_from_98__module = NULL;

    {
        PyObject *tmp_assign_source_660;
        PyObject *tmp_import_name_from_559;
        PyObject *tmp_name_name_385;
        PyObject *tmp_globals_name_385;
        PyObject *tmp_locals_name_385;
        PyObject *tmp_fromlist_name_385;
        PyObject *tmp_level_name_385;
        tmp_name_name_385 = const_str_plain_ninecninemedia;
        tmp_globals_name_385 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_385 = Py_None;
        tmp_fromlist_name_385 = const_tuple_str_plain_NineCNineMediaIE_tuple;
        tmp_level_name_385 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 732;
        tmp_import_name_from_559 = IMPORT_MODULE5(tmp_name_name_385, tmp_globals_name_385, tmp_locals_name_385, tmp_fromlist_name_385, tmp_level_name_385);
        if (tmp_import_name_from_559 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 732;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_559)) {
           tmp_assign_source_660 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_559,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NineCNineMediaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_660 = IMPORT_NAME(tmp_import_name_from_559, const_str_plain_NineCNineMediaIE);
        }

        Py_DECREF(tmp_import_name_from_559);
        if (tmp_assign_source_660 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 732;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NineCNineMediaIE, tmp_assign_source_660);
    }
    {
        PyObject *tmp_assign_source_661;
        PyObject *tmp_import_name_from_560;
        PyObject *tmp_name_name_386;
        PyObject *tmp_globals_name_386;
        PyObject *tmp_locals_name_386;
        PyObject *tmp_fromlist_name_386;
        PyObject *tmp_level_name_386;
        tmp_name_name_386 = const_str_plain_ninegag;
        tmp_globals_name_386 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_386 = Py_None;
        tmp_fromlist_name_386 = const_tuple_str_plain_NineGagIE_tuple;
        tmp_level_name_386 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 733;
        tmp_import_name_from_560 = IMPORT_MODULE5(tmp_name_name_386, tmp_globals_name_386, tmp_locals_name_386, tmp_fromlist_name_386, tmp_level_name_386);
        if (tmp_import_name_from_560 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 733;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_560)) {
           tmp_assign_source_661 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_560,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NineGagIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_661 = IMPORT_NAME(tmp_import_name_from_560, const_str_plain_NineGagIE);
        }

        Py_DECREF(tmp_import_name_from_560);
        if (tmp_assign_source_661 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 733;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NineGagIE, tmp_assign_source_661);
    }
    {
        PyObject *tmp_assign_source_662;
        PyObject *tmp_import_name_from_561;
        PyObject *tmp_name_name_387;
        PyObject *tmp_globals_name_387;
        PyObject *tmp_locals_name_387;
        PyObject *tmp_fromlist_name_387;
        PyObject *tmp_level_name_387;
        tmp_name_name_387 = const_str_plain_ninenow;
        tmp_globals_name_387 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_387 = Py_None;
        tmp_fromlist_name_387 = const_tuple_str_plain_NineNowIE_tuple;
        tmp_level_name_387 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 734;
        tmp_import_name_from_561 = IMPORT_MODULE5(tmp_name_name_387, tmp_globals_name_387, tmp_locals_name_387, tmp_fromlist_name_387, tmp_level_name_387);
        if (tmp_import_name_from_561 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 734;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_561)) {
           tmp_assign_source_662 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_561,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NineNowIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_662 = IMPORT_NAME(tmp_import_name_from_561, const_str_plain_NineNowIE);
        }

        Py_DECREF(tmp_import_name_from_561);
        if (tmp_assign_source_662 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 734;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NineNowIE, tmp_assign_source_662);
    }
    {
        PyObject *tmp_assign_source_663;
        PyObject *tmp_import_name_from_562;
        PyObject *tmp_name_name_388;
        PyObject *tmp_globals_name_388;
        PyObject *tmp_locals_name_388;
        PyObject *tmp_fromlist_name_388;
        PyObject *tmp_level_name_388;
        tmp_name_name_388 = const_str_plain_nintendo;
        tmp_globals_name_388 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_388 = Py_None;
        tmp_fromlist_name_388 = const_tuple_str_plain_NintendoIE_tuple;
        tmp_level_name_388 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 735;
        tmp_import_name_from_562 = IMPORT_MODULE5(tmp_name_name_388, tmp_globals_name_388, tmp_locals_name_388, tmp_fromlist_name_388, tmp_level_name_388);
        if (tmp_import_name_from_562 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 735;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_562)) {
           tmp_assign_source_663 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_562,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NintendoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_663 = IMPORT_NAME(tmp_import_name_from_562, const_str_plain_NintendoIE);
        }

        Py_DECREF(tmp_import_name_from_562);
        if (tmp_assign_source_663 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 735;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NintendoIE, tmp_assign_source_663);
    }
    {
        PyObject *tmp_assign_source_664;
        PyObject *tmp_import_name_from_563;
        PyObject *tmp_name_name_389;
        PyObject *tmp_globals_name_389;
        PyObject *tmp_locals_name_389;
        PyObject *tmp_fromlist_name_389;
        PyObject *tmp_level_name_389;
        tmp_name_name_389 = const_str_plain_njpwworld;
        tmp_globals_name_389 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_389 = Py_None;
        tmp_fromlist_name_389 = const_tuple_str_plain_NJPWWorldIE_tuple;
        tmp_level_name_389 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 736;
        tmp_import_name_from_563 = IMPORT_MODULE5(tmp_name_name_389, tmp_globals_name_389, tmp_locals_name_389, tmp_fromlist_name_389, tmp_level_name_389);
        if (tmp_import_name_from_563 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 736;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_563)) {
           tmp_assign_source_664 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_563,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NJPWWorldIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_664 = IMPORT_NAME(tmp_import_name_from_563, const_str_plain_NJPWWorldIE);
        }

        Py_DECREF(tmp_import_name_from_563);
        if (tmp_assign_source_664 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 736;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NJPWWorldIE, tmp_assign_source_664);
    }
    {
        PyObject *tmp_assign_source_665;
        PyObject *tmp_import_name_from_564;
        PyObject *tmp_name_name_390;
        PyObject *tmp_globals_name_390;
        PyObject *tmp_locals_name_390;
        PyObject *tmp_fromlist_name_390;
        PyObject *tmp_level_name_390;
        tmp_name_name_390 = const_str_plain_nobelprize;
        tmp_globals_name_390 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_390 = Py_None;
        tmp_fromlist_name_390 = const_tuple_str_plain_NobelPrizeIE_tuple;
        tmp_level_name_390 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 737;
        tmp_import_name_from_564 = IMPORT_MODULE5(tmp_name_name_390, tmp_globals_name_390, tmp_locals_name_390, tmp_fromlist_name_390, tmp_level_name_390);
        if (tmp_import_name_from_564 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 737;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_564)) {
           tmp_assign_source_665 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_564,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NobelPrizeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_665 = IMPORT_NAME(tmp_import_name_from_564, const_str_plain_NobelPrizeIE);
        }

        Py_DECREF(tmp_import_name_from_564);
        if (tmp_assign_source_665 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 737;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NobelPrizeIE, tmp_assign_source_665);
    }
    {
        PyObject *tmp_assign_source_666;
        PyObject *tmp_import_name_from_565;
        PyObject *tmp_name_name_391;
        PyObject *tmp_globals_name_391;
        PyObject *tmp_locals_name_391;
        PyObject *tmp_fromlist_name_391;
        PyObject *tmp_level_name_391;
        tmp_name_name_391 = const_str_plain_noco;
        tmp_globals_name_391 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_391 = Py_None;
        tmp_fromlist_name_391 = const_tuple_str_plain_NocoIE_tuple;
        tmp_level_name_391 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 738;
        tmp_import_name_from_565 = IMPORT_MODULE5(tmp_name_name_391, tmp_globals_name_391, tmp_locals_name_391, tmp_fromlist_name_391, tmp_level_name_391);
        if (tmp_import_name_from_565 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 738;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_565)) {
           tmp_assign_source_666 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_565,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NocoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_666 = IMPORT_NAME(tmp_import_name_from_565, const_str_plain_NocoIE);
        }

        Py_DECREF(tmp_import_name_from_565);
        if (tmp_assign_source_666 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 738;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NocoIE, tmp_assign_source_666);
    }
    {
        PyObject *tmp_assign_source_667;
        PyObject *tmp_import_name_from_566;
        PyObject *tmp_name_name_392;
        PyObject *tmp_globals_name_392;
        PyObject *tmp_locals_name_392;
        PyObject *tmp_fromlist_name_392;
        PyObject *tmp_level_name_392;
        tmp_name_name_392 = const_str_plain_nonktube;
        tmp_globals_name_392 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_392 = Py_None;
        tmp_fromlist_name_392 = const_tuple_str_plain_NonkTubeIE_tuple;
        tmp_level_name_392 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 739;
        tmp_import_name_from_566 = IMPORT_MODULE5(tmp_name_name_392, tmp_globals_name_392, tmp_locals_name_392, tmp_fromlist_name_392, tmp_level_name_392);
        if (tmp_import_name_from_566 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 739;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_566)) {
           tmp_assign_source_667 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_566,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NonkTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_667 = IMPORT_NAME(tmp_import_name_from_566, const_str_plain_NonkTubeIE);
        }

        Py_DECREF(tmp_import_name_from_566);
        if (tmp_assign_source_667 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 739;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NonkTubeIE, tmp_assign_source_667);
    }
    {
        PyObject *tmp_assign_source_668;
        PyObject *tmp_import_name_from_567;
        PyObject *tmp_name_name_393;
        PyObject *tmp_globals_name_393;
        PyObject *tmp_locals_name_393;
        PyObject *tmp_fromlist_name_393;
        PyObject *tmp_level_name_393;
        tmp_name_name_393 = const_str_plain_noovo;
        tmp_globals_name_393 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_393 = Py_None;
        tmp_fromlist_name_393 = const_tuple_str_plain_NoovoIE_tuple;
        tmp_level_name_393 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 740;
        tmp_import_name_from_567 = IMPORT_MODULE5(tmp_name_name_393, tmp_globals_name_393, tmp_locals_name_393, tmp_fromlist_name_393, tmp_level_name_393);
        if (tmp_import_name_from_567 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 740;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_567)) {
           tmp_assign_source_668 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_567,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NoovoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_668 = IMPORT_NAME(tmp_import_name_from_567, const_str_plain_NoovoIE);
        }

        Py_DECREF(tmp_import_name_from_567);
        if (tmp_assign_source_668 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 740;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NoovoIE, tmp_assign_source_668);
    }
    {
        PyObject *tmp_assign_source_669;
        PyObject *tmp_import_name_from_568;
        PyObject *tmp_name_name_394;
        PyObject *tmp_globals_name_394;
        PyObject *tmp_locals_name_394;
        PyObject *tmp_fromlist_name_394;
        PyObject *tmp_level_name_394;
        tmp_name_name_394 = const_str_plain_normalboots;
        tmp_globals_name_394 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_394 = Py_None;
        tmp_fromlist_name_394 = const_tuple_str_plain_NormalbootsIE_tuple;
        tmp_level_name_394 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 741;
        tmp_import_name_from_568 = IMPORT_MODULE5(tmp_name_name_394, tmp_globals_name_394, tmp_locals_name_394, tmp_fromlist_name_394, tmp_level_name_394);
        if (tmp_import_name_from_568 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 741;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_568)) {
           tmp_assign_source_669 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_568,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NormalbootsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_669 = IMPORT_NAME(tmp_import_name_from_568, const_str_plain_NormalbootsIE);
        }

        Py_DECREF(tmp_import_name_from_568);
        if (tmp_assign_source_669 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 741;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NormalbootsIE, tmp_assign_source_669);
    }
    {
        PyObject *tmp_assign_source_670;
        PyObject *tmp_import_name_from_569;
        PyObject *tmp_name_name_395;
        PyObject *tmp_globals_name_395;
        PyObject *tmp_locals_name_395;
        PyObject *tmp_fromlist_name_395;
        PyObject *tmp_level_name_395;
        tmp_name_name_395 = const_str_plain_nosvideo;
        tmp_globals_name_395 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_395 = Py_None;
        tmp_fromlist_name_395 = const_tuple_str_plain_NosVideoIE_tuple;
        tmp_level_name_395 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 742;
        tmp_import_name_from_569 = IMPORT_MODULE5(tmp_name_name_395, tmp_globals_name_395, tmp_locals_name_395, tmp_fromlist_name_395, tmp_level_name_395);
        if (tmp_import_name_from_569 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 742;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_569)) {
           tmp_assign_source_670 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_569,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NosVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_670 = IMPORT_NAME(tmp_import_name_from_569, const_str_plain_NosVideoIE);
        }

        Py_DECREF(tmp_import_name_from_569);
        if (tmp_assign_source_670 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 742;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NosVideoIE, tmp_assign_source_670);
    }
    {
        PyObject *tmp_assign_source_671;
        PyObject *tmp_name_name_396;
        PyObject *tmp_globals_name_396;
        PyObject *tmp_locals_name_396;
        PyObject *tmp_fromlist_name_396;
        PyObject *tmp_level_name_396;
        tmp_name_name_396 = const_str_plain_nova;
        tmp_globals_name_396 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_396 = Py_None;
        tmp_fromlist_name_396 = const_tuple_str_plain_NovaEmbedIE_str_plain_NovaIE_tuple;
        tmp_level_name_396 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 743;
        tmp_assign_source_671 = IMPORT_MODULE5(tmp_name_name_396, tmp_globals_name_396, tmp_locals_name_396, tmp_fromlist_name_396, tmp_level_name_396);
        if (tmp_assign_source_671 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 743;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_99__module == NULL);
        tmp_import_from_99__module = tmp_assign_source_671;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_672;
        PyObject *tmp_import_name_from_570;
        CHECK_OBJECT(tmp_import_from_99__module);
        tmp_import_name_from_570 = tmp_import_from_99__module;
        if (PyModule_Check(tmp_import_name_from_570)) {
           tmp_assign_source_672 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_570,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NovaEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_672 = IMPORT_NAME(tmp_import_name_from_570, const_str_plain_NovaEmbedIE);
        }

        if (tmp_assign_source_672 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 743;

            goto try_except_handler_99;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NovaEmbedIE, tmp_assign_source_672);
    }
    {
        PyObject *tmp_assign_source_673;
        PyObject *tmp_import_name_from_571;
        CHECK_OBJECT(tmp_import_from_99__module);
        tmp_import_name_from_571 = tmp_import_from_99__module;
        if (PyModule_Check(tmp_import_name_from_571)) {
           tmp_assign_source_673 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_571,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NovaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_673 = IMPORT_NAME(tmp_import_name_from_571, const_str_plain_NovaIE);
        }

        if (tmp_assign_source_673 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 743;

            goto try_except_handler_99;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NovaIE, tmp_assign_source_673);
    }
    goto try_end_99;
    // Exception handler code:
    try_except_handler_99:;
    exception_keeper_type_99 = exception_type;
    exception_keeper_value_99 = exception_value;
    exception_keeper_tb_99 = exception_tb;
    exception_keeper_lineno_99 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_99__module);
    Py_DECREF(tmp_import_from_99__module);
    tmp_import_from_99__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_99;
    exception_value = exception_keeper_value_99;
    exception_tb = exception_keeper_tb_99;
    exception_lineno = exception_keeper_lineno_99;

    goto frame_exception_exit_1;
    // End of try:
    try_end_99:;
    CHECK_OBJECT(tmp_import_from_99__module);
    Py_DECREF(tmp_import_from_99__module);
    tmp_import_from_99__module = NULL;

    {
        PyObject *tmp_assign_source_674;
        PyObject *tmp_name_name_397;
        PyObject *tmp_globals_name_397;
        PyObject *tmp_locals_name_397;
        PyObject *tmp_fromlist_name_397;
        PyObject *tmp_level_name_397;
        tmp_name_name_397 = const_str_plain_nowness;
        tmp_globals_name_397 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_397 = Py_None;
        tmp_fromlist_name_397 = const_tuple_14014ae1493ed31d2938fcbe1505aee6_tuple;
        tmp_level_name_397 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 747;
        tmp_assign_source_674 = IMPORT_MODULE5(tmp_name_name_397, tmp_globals_name_397, tmp_locals_name_397, tmp_fromlist_name_397, tmp_level_name_397);
        if (tmp_assign_source_674 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 747;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_100__module == NULL);
        tmp_import_from_100__module = tmp_assign_source_674;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_675;
        PyObject *tmp_import_name_from_572;
        CHECK_OBJECT(tmp_import_from_100__module);
        tmp_import_name_from_572 = tmp_import_from_100__module;
        if (PyModule_Check(tmp_import_name_from_572)) {
           tmp_assign_source_675 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_572,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NownessIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_675 = IMPORT_NAME(tmp_import_name_from_572, const_str_plain_NownessIE);
        }

        if (tmp_assign_source_675 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 747;

            goto try_except_handler_100;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NownessIE, tmp_assign_source_675);
    }
    {
        PyObject *tmp_assign_source_676;
        PyObject *tmp_import_name_from_573;
        CHECK_OBJECT(tmp_import_from_100__module);
        tmp_import_name_from_573 = tmp_import_from_100__module;
        if (PyModule_Check(tmp_import_name_from_573)) {
           tmp_assign_source_676 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_573,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NownessPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_676 = IMPORT_NAME(tmp_import_name_from_573, const_str_plain_NownessPlaylistIE);
        }

        if (tmp_assign_source_676 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 747;

            goto try_except_handler_100;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NownessPlaylistIE, tmp_assign_source_676);
    }
    {
        PyObject *tmp_assign_source_677;
        PyObject *tmp_import_name_from_574;
        CHECK_OBJECT(tmp_import_from_100__module);
        tmp_import_name_from_574 = tmp_import_from_100__module;
        if (PyModule_Check(tmp_import_name_from_574)) {
           tmp_assign_source_677 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_574,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NownessSeriesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_677 = IMPORT_NAME(tmp_import_name_from_574, const_str_plain_NownessSeriesIE);
        }

        if (tmp_assign_source_677 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 747;

            goto try_except_handler_100;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NownessSeriesIE, tmp_assign_source_677);
    }
    goto try_end_100;
    // Exception handler code:
    try_except_handler_100:;
    exception_keeper_type_100 = exception_type;
    exception_keeper_value_100 = exception_value;
    exception_keeper_tb_100 = exception_tb;
    exception_keeper_lineno_100 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_100__module);
    Py_DECREF(tmp_import_from_100__module);
    tmp_import_from_100__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_100;
    exception_value = exception_keeper_value_100;
    exception_tb = exception_keeper_tb_100;
    exception_lineno = exception_keeper_lineno_100;

    goto frame_exception_exit_1;
    // End of try:
    try_end_100:;
    CHECK_OBJECT(tmp_import_from_100__module);
    Py_DECREF(tmp_import_from_100__module);
    tmp_import_from_100__module = NULL;

    {
        PyObject *tmp_assign_source_678;
        PyObject *tmp_import_name_from_575;
        PyObject *tmp_name_name_398;
        PyObject *tmp_globals_name_398;
        PyObject *tmp_locals_name_398;
        PyObject *tmp_fromlist_name_398;
        PyObject *tmp_level_name_398;
        tmp_name_name_398 = const_str_plain_noz;
        tmp_globals_name_398 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_398 = Py_None;
        tmp_fromlist_name_398 = const_tuple_str_plain_NozIE_tuple;
        tmp_level_name_398 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 752;
        tmp_import_name_from_575 = IMPORT_MODULE5(tmp_name_name_398, tmp_globals_name_398, tmp_locals_name_398, tmp_fromlist_name_398, tmp_level_name_398);
        if (tmp_import_name_from_575 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 752;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_575)) {
           tmp_assign_source_678 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_575,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NozIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_678 = IMPORT_NAME(tmp_import_name_from_575, const_str_plain_NozIE);
        }

        Py_DECREF(tmp_import_name_from_575);
        if (tmp_assign_source_678 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 752;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NozIE, tmp_assign_source_678);
    }
    {
        PyObject *tmp_assign_source_679;
        PyObject *tmp_name_name_399;
        PyObject *tmp_globals_name_399;
        PyObject *tmp_locals_name_399;
        PyObject *tmp_fromlist_name_399;
        PyObject *tmp_level_name_399;
        tmp_name_name_399 = const_str_plain_npo;
        tmp_globals_name_399 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_399 = Py_None;
        tmp_fromlist_name_399 = const_tuple_d49c3f2bd83b0e8de58fd555c54a964d_tuple;
        tmp_level_name_399 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 753;
        tmp_assign_source_679 = IMPORT_MODULE5(tmp_name_name_399, tmp_globals_name_399, tmp_locals_name_399, tmp_fromlist_name_399, tmp_level_name_399);
        if (tmp_assign_source_679 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 753;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_101__module == NULL);
        tmp_import_from_101__module = tmp_assign_source_679;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_680;
        PyObject *tmp_import_name_from_576;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_576 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_576)) {
           tmp_assign_source_680 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_576,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_AndereTijdenIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_680 = IMPORT_NAME(tmp_import_name_from_576, const_str_plain_AndereTijdenIE);
        }

        if (tmp_assign_source_680 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 753;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_AndereTijdenIE, tmp_assign_source_680);
    }
    {
        PyObject *tmp_assign_source_681;
        PyObject *tmp_import_name_from_577;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_577 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_577)) {
           tmp_assign_source_681 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_577,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NPOIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_681 = IMPORT_NAME(tmp_import_name_from_577, const_str_plain_NPOIE);
        }

        if (tmp_assign_source_681 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 753;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NPOIE, tmp_assign_source_681);
    }
    {
        PyObject *tmp_assign_source_682;
        PyObject *tmp_import_name_from_578;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_578 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_578)) {
           tmp_assign_source_682 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_578,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NPOLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_682 = IMPORT_NAME(tmp_import_name_from_578, const_str_plain_NPOLiveIE);
        }

        if (tmp_assign_source_682 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 753;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NPOLiveIE, tmp_assign_source_682);
    }
    {
        PyObject *tmp_assign_source_683;
        PyObject *tmp_import_name_from_579;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_579 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_579)) {
           tmp_assign_source_683 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_579,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NPORadioIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_683 = IMPORT_NAME(tmp_import_name_from_579, const_str_plain_NPORadioIE);
        }

        if (tmp_assign_source_683 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 753;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NPORadioIE, tmp_assign_source_683);
    }
    {
        PyObject *tmp_assign_source_684;
        PyObject *tmp_import_name_from_580;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_580 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_580)) {
           tmp_assign_source_684 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_580,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NPORadioFragmentIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_684 = IMPORT_NAME(tmp_import_name_from_580, const_str_plain_NPORadioFragmentIE);
        }

        if (tmp_assign_source_684 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 753;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NPORadioFragmentIE, tmp_assign_source_684);
    }
    {
        PyObject *tmp_assign_source_685;
        PyObject *tmp_import_name_from_581;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_581 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_581)) {
           tmp_assign_source_685 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_581,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SchoolTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_685 = IMPORT_NAME(tmp_import_name_from_581, const_str_plain_SchoolTVIE);
        }

        if (tmp_assign_source_685 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 753;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SchoolTVIE, tmp_assign_source_685);
    }
    {
        PyObject *tmp_assign_source_686;
        PyObject *tmp_import_name_from_582;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_582 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_582)) {
           tmp_assign_source_686 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_582,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_HetKlokhuisIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_686 = IMPORT_NAME(tmp_import_name_from_582, const_str_plain_HetKlokhuisIE);
        }

        if (tmp_assign_source_686 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 753;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_HetKlokhuisIE, tmp_assign_source_686);
    }
    {
        PyObject *tmp_assign_source_687;
        PyObject *tmp_import_name_from_583;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_583 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_583)) {
           tmp_assign_source_687 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_583,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VPROIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_687 = IMPORT_NAME(tmp_import_name_from_583, const_str_plain_VPROIE);
        }

        if (tmp_assign_source_687 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 753;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VPROIE, tmp_assign_source_687);
    }
    {
        PyObject *tmp_assign_source_688;
        PyObject *tmp_import_name_from_584;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_584 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_584)) {
           tmp_assign_source_688 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_584,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WNLIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_688 = IMPORT_NAME(tmp_import_name_from_584, const_str_plain_WNLIE);
        }

        if (tmp_assign_source_688 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 753;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WNLIE, tmp_assign_source_688);
    }
    goto try_end_101;
    // Exception handler code:
    try_except_handler_101:;
    exception_keeper_type_101 = exception_type;
    exception_keeper_value_101 = exception_value;
    exception_keeper_tb_101 = exception_tb;
    exception_keeper_lineno_101 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_101__module);
    Py_DECREF(tmp_import_from_101__module);
    tmp_import_from_101__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_101;
    exception_value = exception_keeper_value_101;
    exception_tb = exception_keeper_tb_101;
    exception_lineno = exception_keeper_lineno_101;

    goto frame_exception_exit_1;
    // End of try:
    try_end_101:;
    CHECK_OBJECT(tmp_import_from_101__module);
    Py_DECREF(tmp_import_from_101__module);
    tmp_import_from_101__module = NULL;

    {
        PyObject *tmp_assign_source_689;
        PyObject *tmp_import_name_from_585;
        PyObject *tmp_name_name_400;
        PyObject *tmp_globals_name_400;
        PyObject *tmp_locals_name_400;
        PyObject *tmp_fromlist_name_400;
        PyObject *tmp_level_name_400;
        tmp_name_name_400 = const_str_plain_npr;
        tmp_globals_name_400 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_400 = Py_None;
        tmp_fromlist_name_400 = const_tuple_str_plain_NprIE_tuple;
        tmp_level_name_400 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 764;
        tmp_import_name_from_585 = IMPORT_MODULE5(tmp_name_name_400, tmp_globals_name_400, tmp_locals_name_400, tmp_fromlist_name_400, tmp_level_name_400);
        if (tmp_import_name_from_585 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 764;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_585)) {
           tmp_assign_source_689 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_585,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NprIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_689 = IMPORT_NAME(tmp_import_name_from_585, const_str_plain_NprIE);
        }

        Py_DECREF(tmp_import_name_from_585);
        if (tmp_assign_source_689 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 764;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NprIE, tmp_assign_source_689);
    }
    {
        PyObject *tmp_assign_source_690;
        PyObject *tmp_name_name_401;
        PyObject *tmp_globals_name_401;
        PyObject *tmp_locals_name_401;
        PyObject *tmp_fromlist_name_401;
        PyObject *tmp_level_name_401;
        tmp_name_name_401 = const_str_plain_nrk;
        tmp_globals_name_401 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_401 = Py_None;
        tmp_fromlist_name_401 = const_tuple_629cba9d03bdd4023108c80486397be6_tuple;
        tmp_level_name_401 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 765;
        tmp_assign_source_690 = IMPORT_MODULE5(tmp_name_name_401, tmp_globals_name_401, tmp_locals_name_401, tmp_fromlist_name_401, tmp_level_name_401);
        if (tmp_assign_source_690 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 765;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_102__module == NULL);
        tmp_import_from_102__module = tmp_assign_source_690;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_691;
        PyObject *tmp_import_name_from_586;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_586 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_586)) {
           tmp_assign_source_691 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_586,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NRKIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_691 = IMPORT_NAME(tmp_import_name_from_586, const_str_plain_NRKIE);
        }

        if (tmp_assign_source_691 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 765;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NRKIE, tmp_assign_source_691);
    }
    {
        PyObject *tmp_assign_source_692;
        PyObject *tmp_import_name_from_587;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_587 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_587)) {
           tmp_assign_source_692 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_587,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NRKPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_692 = IMPORT_NAME(tmp_import_name_from_587, const_str_plain_NRKPlaylistIE);
        }

        if (tmp_assign_source_692 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 765;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NRKPlaylistIE, tmp_assign_source_692);
    }
    {
        PyObject *tmp_assign_source_693;
        PyObject *tmp_import_name_from_588;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_588 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_588)) {
           tmp_assign_source_693 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_588,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NRKSkoleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_693 = IMPORT_NAME(tmp_import_name_from_588, const_str_plain_NRKSkoleIE);
        }

        if (tmp_assign_source_693 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 765;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NRKSkoleIE, tmp_assign_source_693);
    }
    {
        PyObject *tmp_assign_source_694;
        PyObject *tmp_import_name_from_589;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_589 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_589)) {
           tmp_assign_source_694 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_589,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NRKTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_694 = IMPORT_NAME(tmp_import_name_from_589, const_str_plain_NRKTVIE);
        }

        if (tmp_assign_source_694 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 765;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NRKTVIE, tmp_assign_source_694);
    }
    {
        PyObject *tmp_assign_source_695;
        PyObject *tmp_import_name_from_590;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_590 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_590)) {
           tmp_assign_source_695 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_590,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NRKTVDirekteIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_695 = IMPORT_NAME(tmp_import_name_from_590, const_str_plain_NRKTVDirekteIE);
        }

        if (tmp_assign_source_695 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 765;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NRKTVDirekteIE, tmp_assign_source_695);
    }
    {
        PyObject *tmp_assign_source_696;
        PyObject *tmp_import_name_from_591;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_591 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_591)) {
           tmp_assign_source_696 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_591,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NRKTVEpisodeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_696 = IMPORT_NAME(tmp_import_name_from_591, const_str_plain_NRKTVEpisodeIE);
        }

        if (tmp_assign_source_696 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 765;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NRKTVEpisodeIE, tmp_assign_source_696);
    }
    {
        PyObject *tmp_assign_source_697;
        PyObject *tmp_import_name_from_592;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_592 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_592)) {
           tmp_assign_source_697 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_592,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NRKTVEpisodesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_697 = IMPORT_NAME(tmp_import_name_from_592, const_str_plain_NRKTVEpisodesIE);
        }

        if (tmp_assign_source_697 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 765;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NRKTVEpisodesIE, tmp_assign_source_697);
    }
    {
        PyObject *tmp_assign_source_698;
        PyObject *tmp_import_name_from_593;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_593 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_593)) {
           tmp_assign_source_698 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_593,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NRKTVSeasonIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_698 = IMPORT_NAME(tmp_import_name_from_593, const_str_plain_NRKTVSeasonIE);
        }

        if (tmp_assign_source_698 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 765;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NRKTVSeasonIE, tmp_assign_source_698);
    }
    {
        PyObject *tmp_assign_source_699;
        PyObject *tmp_import_name_from_594;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_594 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_594)) {
           tmp_assign_source_699 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_594,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NRKTVSeriesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_699 = IMPORT_NAME(tmp_import_name_from_594, const_str_plain_NRKTVSeriesIE);
        }

        if (tmp_assign_source_699 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 765;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NRKTVSeriesIE, tmp_assign_source_699);
    }
    goto try_end_102;
    // Exception handler code:
    try_except_handler_102:;
    exception_keeper_type_102 = exception_type;
    exception_keeper_value_102 = exception_value;
    exception_keeper_tb_102 = exception_tb;
    exception_keeper_lineno_102 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_102__module);
    Py_DECREF(tmp_import_from_102__module);
    tmp_import_from_102__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_102;
    exception_value = exception_keeper_value_102;
    exception_tb = exception_keeper_tb_102;
    exception_lineno = exception_keeper_lineno_102;

    goto frame_exception_exit_1;
    // End of try:
    try_end_102:;
    CHECK_OBJECT(tmp_import_from_102__module);
    Py_DECREF(tmp_import_from_102__module);
    tmp_import_from_102__module = NULL;

    {
        PyObject *tmp_assign_source_700;
        PyObject *tmp_import_name_from_595;
        PyObject *tmp_name_name_402;
        PyObject *tmp_globals_name_402;
        PyObject *tmp_locals_name_402;
        PyObject *tmp_fromlist_name_402;
        PyObject *tmp_level_name_402;
        tmp_name_name_402 = const_str_plain_nrl;
        tmp_globals_name_402 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_402 = Py_None;
        tmp_fromlist_name_402 = const_tuple_str_plain_NRLTVIE_tuple;
        tmp_level_name_402 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 776;
        tmp_import_name_from_595 = IMPORT_MODULE5(tmp_name_name_402, tmp_globals_name_402, tmp_locals_name_402, tmp_fromlist_name_402, tmp_level_name_402);
        if (tmp_import_name_from_595 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 776;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_595)) {
           tmp_assign_source_700 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_595,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NRLTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_700 = IMPORT_NAME(tmp_import_name_from_595, const_str_plain_NRLTVIE);
        }

        Py_DECREF(tmp_import_name_from_595);
        if (tmp_assign_source_700 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 776;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NRLTVIE, tmp_assign_source_700);
    }
    {
        PyObject *tmp_assign_source_701;
        PyObject *tmp_import_name_from_596;
        PyObject *tmp_name_name_403;
        PyObject *tmp_globals_name_403;
        PyObject *tmp_locals_name_403;
        PyObject *tmp_fromlist_name_403;
        PyObject *tmp_level_name_403;
        tmp_name_name_403 = const_str_plain_ntvcojp;
        tmp_globals_name_403 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_403 = Py_None;
        tmp_fromlist_name_403 = const_tuple_str_plain_NTVCoJpCUIE_tuple;
        tmp_level_name_403 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 777;
        tmp_import_name_from_596 = IMPORT_MODULE5(tmp_name_name_403, tmp_globals_name_403, tmp_locals_name_403, tmp_fromlist_name_403, tmp_level_name_403);
        if (tmp_import_name_from_596 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 777;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_596)) {
           tmp_assign_source_701 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_596,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NTVCoJpCUIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_701 = IMPORT_NAME(tmp_import_name_from_596, const_str_plain_NTVCoJpCUIE);
        }

        Py_DECREF(tmp_import_name_from_596);
        if (tmp_assign_source_701 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 777;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NTVCoJpCUIE, tmp_assign_source_701);
    }
    {
        PyObject *tmp_assign_source_702;
        PyObject *tmp_import_name_from_597;
        PyObject *tmp_name_name_404;
        PyObject *tmp_globals_name_404;
        PyObject *tmp_locals_name_404;
        PyObject *tmp_fromlist_name_404;
        PyObject *tmp_level_name_404;
        tmp_name_name_404 = const_str_plain_ntvde;
        tmp_globals_name_404 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_404 = Py_None;
        tmp_fromlist_name_404 = const_tuple_str_plain_NTVDeIE_tuple;
        tmp_level_name_404 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 778;
        tmp_import_name_from_597 = IMPORT_MODULE5(tmp_name_name_404, tmp_globals_name_404, tmp_locals_name_404, tmp_fromlist_name_404, tmp_level_name_404);
        if (tmp_import_name_from_597 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 778;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_597)) {
           tmp_assign_source_702 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_597,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NTVDeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_702 = IMPORT_NAME(tmp_import_name_from_597, const_str_plain_NTVDeIE);
        }

        Py_DECREF(tmp_import_name_from_597);
        if (tmp_assign_source_702 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 778;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NTVDeIE, tmp_assign_source_702);
    }
    {
        PyObject *tmp_assign_source_703;
        PyObject *tmp_import_name_from_598;
        PyObject *tmp_name_name_405;
        PyObject *tmp_globals_name_405;
        PyObject *tmp_locals_name_405;
        PyObject *tmp_fromlist_name_405;
        PyObject *tmp_level_name_405;
        tmp_name_name_405 = const_str_plain_ntvru;
        tmp_globals_name_405 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_405 = Py_None;
        tmp_fromlist_name_405 = const_tuple_str_plain_NTVRuIE_tuple;
        tmp_level_name_405 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 779;
        tmp_import_name_from_598 = IMPORT_MODULE5(tmp_name_name_405, tmp_globals_name_405, tmp_locals_name_405, tmp_fromlist_name_405, tmp_level_name_405);
        if (tmp_import_name_from_598 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 779;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_598)) {
           tmp_assign_source_703 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_598,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NTVRuIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_703 = IMPORT_NAME(tmp_import_name_from_598, const_str_plain_NTVRuIE);
        }

        Py_DECREF(tmp_import_name_from_598);
        if (tmp_assign_source_703 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 779;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NTVRuIE, tmp_assign_source_703);
    }
    {
        PyObject *tmp_assign_source_704;
        PyObject *tmp_name_name_406;
        PyObject *tmp_globals_name_406;
        PyObject *tmp_locals_name_406;
        PyObject *tmp_fromlist_name_406;
        PyObject *tmp_level_name_406;
        tmp_name_name_406 = const_str_plain_nytimes;
        tmp_globals_name_406 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_406 = Py_None;
        tmp_fromlist_name_406 = const_tuple_str_plain_NYTimesIE_str_plain_NYTimesArticleIE_tuple;
        tmp_level_name_406 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 780;
        tmp_assign_source_704 = IMPORT_MODULE5(tmp_name_name_406, tmp_globals_name_406, tmp_locals_name_406, tmp_fromlist_name_406, tmp_level_name_406);
        if (tmp_assign_source_704 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 780;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_103__module == NULL);
        tmp_import_from_103__module = tmp_assign_source_704;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_705;
        PyObject *tmp_import_name_from_599;
        CHECK_OBJECT(tmp_import_from_103__module);
        tmp_import_name_from_599 = tmp_import_from_103__module;
        if (PyModule_Check(tmp_import_name_from_599)) {
           tmp_assign_source_705 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_599,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NYTimesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_705 = IMPORT_NAME(tmp_import_name_from_599, const_str_plain_NYTimesIE);
        }

        if (tmp_assign_source_705 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 780;

            goto try_except_handler_103;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NYTimesIE, tmp_assign_source_705);
    }
    {
        PyObject *tmp_assign_source_706;
        PyObject *tmp_import_name_from_600;
        CHECK_OBJECT(tmp_import_from_103__module);
        tmp_import_name_from_600 = tmp_import_from_103__module;
        if (PyModule_Check(tmp_import_name_from_600)) {
           tmp_assign_source_706 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_600,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NYTimesArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_706 = IMPORT_NAME(tmp_import_name_from_600, const_str_plain_NYTimesArticleIE);
        }

        if (tmp_assign_source_706 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 780;

            goto try_except_handler_103;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NYTimesArticleIE, tmp_assign_source_706);
    }
    goto try_end_103;
    // Exception handler code:
    try_except_handler_103:;
    exception_keeper_type_103 = exception_type;
    exception_keeper_value_103 = exception_value;
    exception_keeper_tb_103 = exception_tb;
    exception_keeper_lineno_103 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_103__module);
    Py_DECREF(tmp_import_from_103__module);
    tmp_import_from_103__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_103;
    exception_value = exception_keeper_value_103;
    exception_tb = exception_keeper_tb_103;
    exception_lineno = exception_keeper_lineno_103;

    goto frame_exception_exit_1;
    // End of try:
    try_end_103:;
    CHECK_OBJECT(tmp_import_from_103__module);
    Py_DECREF(tmp_import_from_103__module);
    tmp_import_from_103__module = NULL;

    {
        PyObject *tmp_assign_source_707;
        PyObject *tmp_import_name_from_601;
        PyObject *tmp_name_name_407;
        PyObject *tmp_globals_name_407;
        PyObject *tmp_locals_name_407;
        PyObject *tmp_fromlist_name_407;
        PyObject *tmp_level_name_407;
        tmp_name_name_407 = const_str_plain_nuvid;
        tmp_globals_name_407 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_407 = Py_None;
        tmp_fromlist_name_407 = const_tuple_str_plain_NuvidIE_tuple;
        tmp_level_name_407 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 784;
        tmp_import_name_from_601 = IMPORT_MODULE5(tmp_name_name_407, tmp_globals_name_407, tmp_locals_name_407, tmp_fromlist_name_407, tmp_level_name_407);
        if (tmp_import_name_from_601 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 784;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_601)) {
           tmp_assign_source_707 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_601,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NuvidIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_707 = IMPORT_NAME(tmp_import_name_from_601, const_str_plain_NuvidIE);
        }

        Py_DECREF(tmp_import_name_from_601);
        if (tmp_assign_source_707 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 784;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NuvidIE, tmp_assign_source_707);
    }
    {
        PyObject *tmp_assign_source_708;
        PyObject *tmp_import_name_from_602;
        PyObject *tmp_name_name_408;
        PyObject *tmp_globals_name_408;
        PyObject *tmp_locals_name_408;
        PyObject *tmp_fromlist_name_408;
        PyObject *tmp_level_name_408;
        tmp_name_name_408 = const_str_plain_nzz;
        tmp_globals_name_408 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_408 = Py_None;
        tmp_fromlist_name_408 = const_tuple_str_plain_NZZIE_tuple;
        tmp_level_name_408 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 785;
        tmp_import_name_from_602 = IMPORT_MODULE5(tmp_name_name_408, tmp_globals_name_408, tmp_locals_name_408, tmp_fromlist_name_408, tmp_level_name_408);
        if (tmp_import_name_from_602 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 785;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_602)) {
           tmp_assign_source_708 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_602,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NZZIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_708 = IMPORT_NAME(tmp_import_name_from_602, const_str_plain_NZZIE);
        }

        Py_DECREF(tmp_import_name_from_602);
        if (tmp_assign_source_708 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 785;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NZZIE, tmp_assign_source_708);
    }
    {
        PyObject *tmp_assign_source_709;
        PyObject *tmp_import_name_from_603;
        PyObject *tmp_name_name_409;
        PyObject *tmp_globals_name_409;
        PyObject *tmp_locals_name_409;
        PyObject *tmp_fromlist_name_409;
        PyObject *tmp_level_name_409;
        tmp_name_name_409 = const_str_plain_odatv;
        tmp_globals_name_409 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_409 = Py_None;
        tmp_fromlist_name_409 = const_tuple_str_plain_OdaTVIE_tuple;
        tmp_level_name_409 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 786;
        tmp_import_name_from_603 = IMPORT_MODULE5(tmp_name_name_409, tmp_globals_name_409, tmp_locals_name_409, tmp_fromlist_name_409, tmp_level_name_409);
        if (tmp_import_name_from_603 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 786;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_603)) {
           tmp_assign_source_709 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_603,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OdaTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_709 = IMPORT_NAME(tmp_import_name_from_603, const_str_plain_OdaTVIE);
        }

        Py_DECREF(tmp_import_name_from_603);
        if (tmp_assign_source_709 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 786;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OdaTVIE, tmp_assign_source_709);
    }
    {
        PyObject *tmp_assign_source_710;
        PyObject *tmp_import_name_from_604;
        PyObject *tmp_name_name_410;
        PyObject *tmp_globals_name_410;
        PyObject *tmp_locals_name_410;
        PyObject *tmp_fromlist_name_410;
        PyObject *tmp_level_name_410;
        tmp_name_name_410 = const_str_plain_odnoklassniki;
        tmp_globals_name_410 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_410 = Py_None;
        tmp_fromlist_name_410 = const_tuple_str_plain_OdnoklassnikiIE_tuple;
        tmp_level_name_410 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 787;
        tmp_import_name_from_604 = IMPORT_MODULE5(tmp_name_name_410, tmp_globals_name_410, tmp_locals_name_410, tmp_fromlist_name_410, tmp_level_name_410);
        if (tmp_import_name_from_604 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 787;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_604)) {
           tmp_assign_source_710 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_604,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OdnoklassnikiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_710 = IMPORT_NAME(tmp_import_name_from_604, const_str_plain_OdnoklassnikiIE);
        }

        Py_DECREF(tmp_import_name_from_604);
        if (tmp_assign_source_710 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 787;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OdnoklassnikiIE, tmp_assign_source_710);
    }
    {
        PyObject *tmp_assign_source_711;
        PyObject *tmp_import_name_from_605;
        PyObject *tmp_name_name_411;
        PyObject *tmp_globals_name_411;
        PyObject *tmp_locals_name_411;
        PyObject *tmp_fromlist_name_411;
        PyObject *tmp_level_name_411;
        tmp_name_name_411 = const_str_plain_oktoberfesttv;
        tmp_globals_name_411 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_411 = Py_None;
        tmp_fromlist_name_411 = const_tuple_str_plain_OktoberfestTVIE_tuple;
        tmp_level_name_411 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 788;
        tmp_import_name_from_605 = IMPORT_MODULE5(tmp_name_name_411, tmp_globals_name_411, tmp_locals_name_411, tmp_fromlist_name_411, tmp_level_name_411);
        if (tmp_import_name_from_605 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 788;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_605)) {
           tmp_assign_source_711 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_605,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OktoberfestTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_711 = IMPORT_NAME(tmp_import_name_from_605, const_str_plain_OktoberfestTVIE);
        }

        Py_DECREF(tmp_import_name_from_605);
        if (tmp_assign_source_711 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 788;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OktoberfestTVIE, tmp_assign_source_711);
    }
    {
        PyObject *tmp_assign_source_712;
        PyObject *tmp_import_name_from_606;
        PyObject *tmp_name_name_412;
        PyObject *tmp_globals_name_412;
        PyObject *tmp_locals_name_412;
        PyObject *tmp_fromlist_name_412;
        PyObject *tmp_level_name_412;
        tmp_name_name_412 = const_str_plain_ondemandkorea;
        tmp_globals_name_412 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_412 = Py_None;
        tmp_fromlist_name_412 = const_tuple_str_plain_OnDemandKoreaIE_tuple;
        tmp_level_name_412 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 789;
        tmp_import_name_from_606 = IMPORT_MODULE5(tmp_name_name_412, tmp_globals_name_412, tmp_locals_name_412, tmp_fromlist_name_412, tmp_level_name_412);
        if (tmp_import_name_from_606 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 789;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_606)) {
           tmp_assign_source_712 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_606,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OnDemandKoreaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_712 = IMPORT_NAME(tmp_import_name_from_606, const_str_plain_OnDemandKoreaIE);
        }

        Py_DECREF(tmp_import_name_from_606);
        if (tmp_assign_source_712 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 789;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OnDemandKoreaIE, tmp_assign_source_712);
    }
    {
        PyObject *tmp_assign_source_713;
        PyObject *tmp_name_name_413;
        PyObject *tmp_globals_name_413;
        PyObject *tmp_locals_name_413;
        PyObject *tmp_fromlist_name_413;
        PyObject *tmp_level_name_413;
        tmp_name_name_413 = const_str_plain_onet;
        tmp_globals_name_413 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_413 = Py_None;
        tmp_fromlist_name_413 = const_tuple_facdf595351a0246e6ea09466c3b35a5_tuple;
        tmp_level_name_413 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 790;
        tmp_assign_source_713 = IMPORT_MODULE5(tmp_name_name_413, tmp_globals_name_413, tmp_locals_name_413, tmp_fromlist_name_413, tmp_level_name_413);
        if (tmp_assign_source_713 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 790;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_104__module == NULL);
        tmp_import_from_104__module = tmp_assign_source_713;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_714;
        PyObject *tmp_import_name_from_607;
        CHECK_OBJECT(tmp_import_from_104__module);
        tmp_import_name_from_607 = tmp_import_from_104__module;
        if (PyModule_Check(tmp_import_name_from_607)) {
           tmp_assign_source_714 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_607,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OnetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_714 = IMPORT_NAME(tmp_import_name_from_607, const_str_plain_OnetIE);
        }

        if (tmp_assign_source_714 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 790;

            goto try_except_handler_104;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OnetIE, tmp_assign_source_714);
    }
    {
        PyObject *tmp_assign_source_715;
        PyObject *tmp_import_name_from_608;
        CHECK_OBJECT(tmp_import_from_104__module);
        tmp_import_name_from_608 = tmp_import_from_104__module;
        if (PyModule_Check(tmp_import_name_from_608)) {
           tmp_assign_source_715 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_608,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OnetChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_715 = IMPORT_NAME(tmp_import_name_from_608, const_str_plain_OnetChannelIE);
        }

        if (tmp_assign_source_715 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 790;

            goto try_except_handler_104;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OnetChannelIE, tmp_assign_source_715);
    }
    {
        PyObject *tmp_assign_source_716;
        PyObject *tmp_import_name_from_609;
        CHECK_OBJECT(tmp_import_from_104__module);
        tmp_import_name_from_609 = tmp_import_from_104__module;
        if (PyModule_Check(tmp_import_name_from_609)) {
           tmp_assign_source_716 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_609,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OnetMVPIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_716 = IMPORT_NAME(tmp_import_name_from_609, const_str_plain_OnetMVPIE);
        }

        if (tmp_assign_source_716 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 790;

            goto try_except_handler_104;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OnetMVPIE, tmp_assign_source_716);
    }
    {
        PyObject *tmp_assign_source_717;
        PyObject *tmp_import_name_from_610;
        CHECK_OBJECT(tmp_import_from_104__module);
        tmp_import_name_from_610 = tmp_import_from_104__module;
        if (PyModule_Check(tmp_import_name_from_610)) {
           tmp_assign_source_717 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_610,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OnetPlIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_717 = IMPORT_NAME(tmp_import_name_from_610, const_str_plain_OnetPlIE);
        }

        if (tmp_assign_source_717 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 790;

            goto try_except_handler_104;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OnetPlIE, tmp_assign_source_717);
    }
    goto try_end_104;
    // Exception handler code:
    try_except_handler_104:;
    exception_keeper_type_104 = exception_type;
    exception_keeper_value_104 = exception_value;
    exception_keeper_tb_104 = exception_tb;
    exception_keeper_lineno_104 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_104__module);
    Py_DECREF(tmp_import_from_104__module);
    tmp_import_from_104__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_104;
    exception_value = exception_keeper_value_104;
    exception_tb = exception_keeper_tb_104;
    exception_lineno = exception_keeper_lineno_104;

    goto frame_exception_exit_1;
    // End of try:
    try_end_104:;
    CHECK_OBJECT(tmp_import_from_104__module);
    Py_DECREF(tmp_import_from_104__module);
    tmp_import_from_104__module = NULL;

    {
        PyObject *tmp_assign_source_718;
        PyObject *tmp_import_name_from_611;
        PyObject *tmp_name_name_414;
        PyObject *tmp_globals_name_414;
        PyObject *tmp_locals_name_414;
        PyObject *tmp_fromlist_name_414;
        PyObject *tmp_level_name_414;
        tmp_name_name_414 = const_str_plain_onionstudios;
        tmp_globals_name_414 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_414 = Py_None;
        tmp_fromlist_name_414 = const_tuple_str_plain_OnionStudiosIE_tuple;
        tmp_level_name_414 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 796;
        tmp_import_name_from_611 = IMPORT_MODULE5(tmp_name_name_414, tmp_globals_name_414, tmp_locals_name_414, tmp_fromlist_name_414, tmp_level_name_414);
        if (tmp_import_name_from_611 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 796;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_611)) {
           tmp_assign_source_718 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_611,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OnionStudiosIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_718 = IMPORT_NAME(tmp_import_name_from_611, const_str_plain_OnionStudiosIE);
        }

        Py_DECREF(tmp_import_name_from_611);
        if (tmp_assign_source_718 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 796;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OnionStudiosIE, tmp_assign_source_718);
    }
    {
        PyObject *tmp_assign_source_719;
        PyObject *tmp_name_name_415;
        PyObject *tmp_globals_name_415;
        PyObject *tmp_locals_name_415;
        PyObject *tmp_fromlist_name_415;
        PyObject *tmp_level_name_415;
        tmp_name_name_415 = const_str_plain_ooyala;
        tmp_globals_name_415 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_415 = Py_None;
        tmp_fromlist_name_415 = const_tuple_str_plain_OoyalaIE_str_plain_OoyalaExternalIE_tuple;
        tmp_level_name_415 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 797;
        tmp_assign_source_719 = IMPORT_MODULE5(tmp_name_name_415, tmp_globals_name_415, tmp_locals_name_415, tmp_fromlist_name_415, tmp_level_name_415);
        if (tmp_assign_source_719 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 797;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_105__module == NULL);
        tmp_import_from_105__module = tmp_assign_source_719;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_720;
        PyObject *tmp_import_name_from_612;
        CHECK_OBJECT(tmp_import_from_105__module);
        tmp_import_name_from_612 = tmp_import_from_105__module;
        if (PyModule_Check(tmp_import_name_from_612)) {
           tmp_assign_source_720 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_612,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OoyalaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_720 = IMPORT_NAME(tmp_import_name_from_612, const_str_plain_OoyalaIE);
        }

        if (tmp_assign_source_720 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 797;

            goto try_except_handler_105;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OoyalaIE, tmp_assign_source_720);
    }
    {
        PyObject *tmp_assign_source_721;
        PyObject *tmp_import_name_from_613;
        CHECK_OBJECT(tmp_import_from_105__module);
        tmp_import_name_from_613 = tmp_import_from_105__module;
        if (PyModule_Check(tmp_import_name_from_613)) {
           tmp_assign_source_721 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_613,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OoyalaExternalIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_721 = IMPORT_NAME(tmp_import_name_from_613, const_str_plain_OoyalaExternalIE);
        }

        if (tmp_assign_source_721 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 797;

            goto try_except_handler_105;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OoyalaExternalIE, tmp_assign_source_721);
    }
    goto try_end_105;
    // Exception handler code:
    try_except_handler_105:;
    exception_keeper_type_105 = exception_type;
    exception_keeper_value_105 = exception_value;
    exception_keeper_tb_105 = exception_tb;
    exception_keeper_lineno_105 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_105__module);
    Py_DECREF(tmp_import_from_105__module);
    tmp_import_from_105__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_105;
    exception_value = exception_keeper_value_105;
    exception_tb = exception_keeper_tb_105;
    exception_lineno = exception_keeper_lineno_105;

    goto frame_exception_exit_1;
    // End of try:
    try_end_105:;
    CHECK_OBJECT(tmp_import_from_105__module);
    Py_DECREF(tmp_import_from_105__module);
    tmp_import_from_105__module = NULL;

    {
        PyObject *tmp_assign_source_722;
        PyObject *tmp_import_name_from_614;
        PyObject *tmp_name_name_416;
        PyObject *tmp_globals_name_416;
        PyObject *tmp_locals_name_416;
        PyObject *tmp_fromlist_name_416;
        PyObject *tmp_level_name_416;
        tmp_name_name_416 = const_str_plain_ora;
        tmp_globals_name_416 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_416 = Py_None;
        tmp_fromlist_name_416 = const_tuple_str_plain_OraTVIE_tuple;
        tmp_level_name_416 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 801;
        tmp_import_name_from_614 = IMPORT_MODULE5(tmp_name_name_416, tmp_globals_name_416, tmp_locals_name_416, tmp_fromlist_name_416, tmp_level_name_416);
        if (tmp_import_name_from_614 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 801;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_614)) {
           tmp_assign_source_722 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_614,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OraTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_722 = IMPORT_NAME(tmp_import_name_from_614, const_str_plain_OraTVIE);
        }

        Py_DECREF(tmp_import_name_from_614);
        if (tmp_assign_source_722 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 801;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OraTVIE, tmp_assign_source_722);
    }
    {
        PyObject *tmp_assign_source_723;
        PyObject *tmp_name_name_417;
        PyObject *tmp_globals_name_417;
        PyObject *tmp_locals_name_417;
        PyObject *tmp_fromlist_name_417;
        PyObject *tmp_level_name_417;
        tmp_name_name_417 = const_str_plain_orf;
        tmp_globals_name_417 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_417 = Py_None;
        tmp_fromlist_name_417 = const_tuple_cf267ffc72f8fa0ba408484489eb2a93_tuple;
        tmp_level_name_417 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 802;
        tmp_assign_source_723 = IMPORT_MODULE5(tmp_name_name_417, tmp_globals_name_417, tmp_locals_name_417, tmp_fromlist_name_417, tmp_level_name_417);
        if (tmp_assign_source_723 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_106__module == NULL);
        tmp_import_from_106__module = tmp_assign_source_723;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_724;
        PyObject *tmp_import_name_from_615;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_615 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_615)) {
           tmp_assign_source_724 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_615,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFTVthekIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_724 = IMPORT_NAME(tmp_import_name_from_615, const_str_plain_ORFTVthekIE);
        }

        if (tmp_assign_source_724 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFTVthekIE, tmp_assign_source_724);
    }
    {
        PyObject *tmp_assign_source_725;
        PyObject *tmp_import_name_from_616;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_616 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_616)) {
           tmp_assign_source_725 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_616,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFFM4IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_725 = IMPORT_NAME(tmp_import_name_from_616, const_str_plain_ORFFM4IE);
        }

        if (tmp_assign_source_725 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFFM4IE, tmp_assign_source_725);
    }
    {
        PyObject *tmp_assign_source_726;
        PyObject *tmp_import_name_from_617;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_617 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_617)) {
           tmp_assign_source_726 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_617,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFFM4StoryIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_726 = IMPORT_NAME(tmp_import_name_from_617, const_str_plain_ORFFM4StoryIE);
        }

        if (tmp_assign_source_726 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFFM4StoryIE, tmp_assign_source_726);
    }
    {
        PyObject *tmp_assign_source_727;
        PyObject *tmp_import_name_from_618;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_618 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_618)) {
           tmp_assign_source_727 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_618,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFOE1IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_727 = IMPORT_NAME(tmp_import_name_from_618, const_str_plain_ORFOE1IE);
        }

        if (tmp_assign_source_727 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFOE1IE, tmp_assign_source_727);
    }
    {
        PyObject *tmp_assign_source_728;
        PyObject *tmp_import_name_from_619;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_619 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_619)) {
           tmp_assign_source_728 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_619,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFOE3IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_728 = IMPORT_NAME(tmp_import_name_from_619, const_str_plain_ORFOE3IE);
        }

        if (tmp_assign_source_728 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFOE3IE, tmp_assign_source_728);
    }
    {
        PyObject *tmp_assign_source_729;
        PyObject *tmp_import_name_from_620;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_620 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_620)) {
           tmp_assign_source_729 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_620,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFNOEIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_729 = IMPORT_NAME(tmp_import_name_from_620, const_str_plain_ORFNOEIE);
        }

        if (tmp_assign_source_729 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFNOEIE, tmp_assign_source_729);
    }
    {
        PyObject *tmp_assign_source_730;
        PyObject *tmp_import_name_from_621;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_621 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_621)) {
           tmp_assign_source_730 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_621,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFWIEIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_730 = IMPORT_NAME(tmp_import_name_from_621, const_str_plain_ORFWIEIE);
        }

        if (tmp_assign_source_730 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFWIEIE, tmp_assign_source_730);
    }
    {
        PyObject *tmp_assign_source_731;
        PyObject *tmp_import_name_from_622;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_622 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_622)) {
           tmp_assign_source_731 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_622,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFBGLIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_731 = IMPORT_NAME(tmp_import_name_from_622, const_str_plain_ORFBGLIE);
        }

        if (tmp_assign_source_731 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFBGLIE, tmp_assign_source_731);
    }
    {
        PyObject *tmp_assign_source_732;
        PyObject *tmp_import_name_from_623;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_623 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_623)) {
           tmp_assign_source_732 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_623,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFOOEIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_732 = IMPORT_NAME(tmp_import_name_from_623, const_str_plain_ORFOOEIE);
        }

        if (tmp_assign_source_732 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFOOEIE, tmp_assign_source_732);
    }
    {
        PyObject *tmp_assign_source_733;
        PyObject *tmp_import_name_from_624;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_624 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_624)) {
           tmp_assign_source_733 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_624,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFSTMIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_733 = IMPORT_NAME(tmp_import_name_from_624, const_str_plain_ORFSTMIE);
        }

        if (tmp_assign_source_733 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFSTMIE, tmp_assign_source_733);
    }
    {
        PyObject *tmp_assign_source_734;
        PyObject *tmp_import_name_from_625;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_625 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_625)) {
           tmp_assign_source_734 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_625,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFKTNIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_734 = IMPORT_NAME(tmp_import_name_from_625, const_str_plain_ORFKTNIE);
        }

        if (tmp_assign_source_734 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFKTNIE, tmp_assign_source_734);
    }
    {
        PyObject *tmp_assign_source_735;
        PyObject *tmp_import_name_from_626;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_626 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_626)) {
           tmp_assign_source_735 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_626,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFSBGIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_735 = IMPORT_NAME(tmp_import_name_from_626, const_str_plain_ORFSBGIE);
        }

        if (tmp_assign_source_735 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFSBGIE, tmp_assign_source_735);
    }
    {
        PyObject *tmp_assign_source_736;
        PyObject *tmp_import_name_from_627;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_627 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_627)) {
           tmp_assign_source_736 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_627,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFTIRIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_736 = IMPORT_NAME(tmp_import_name_from_627, const_str_plain_ORFTIRIE);
        }

        if (tmp_assign_source_736 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFTIRIE, tmp_assign_source_736);
    }
    {
        PyObject *tmp_assign_source_737;
        PyObject *tmp_import_name_from_628;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_628 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_628)) {
           tmp_assign_source_737 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_628,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFVBGIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_737 = IMPORT_NAME(tmp_import_name_from_628, const_str_plain_ORFVBGIE);
        }

        if (tmp_assign_source_737 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFVBGIE, tmp_assign_source_737);
    }
    {
        PyObject *tmp_assign_source_738;
        PyObject *tmp_import_name_from_629;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_629 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_629)) {
           tmp_assign_source_738 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_629,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ORFIPTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_738 = IMPORT_NAME(tmp_import_name_from_629, const_str_plain_ORFIPTVIE);
        }

        if (tmp_assign_source_738 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ORFIPTVIE, tmp_assign_source_738);
    }
    goto try_end_106;
    // Exception handler code:
    try_except_handler_106:;
    exception_keeper_type_106 = exception_type;
    exception_keeper_value_106 = exception_value;
    exception_keeper_tb_106 = exception_tb;
    exception_keeper_lineno_106 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_106__module);
    Py_DECREF(tmp_import_from_106__module);
    tmp_import_from_106__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_106;
    exception_value = exception_keeper_value_106;
    exception_tb = exception_keeper_tb_106;
    exception_lineno = exception_keeper_lineno_106;

    goto frame_exception_exit_1;
    // End of try:
    try_end_106:;
    CHECK_OBJECT(tmp_import_from_106__module);
    Py_DECREF(tmp_import_from_106__module);
    tmp_import_from_106__module = NULL;

    {
        PyObject *tmp_assign_source_739;
        PyObject *tmp_import_name_from_630;
        PyObject *tmp_name_name_418;
        PyObject *tmp_globals_name_418;
        PyObject *tmp_locals_name_418;
        PyObject *tmp_fromlist_name_418;
        PyObject *tmp_level_name_418;
        tmp_name_name_418 = const_str_plain_outsidetv;
        tmp_globals_name_418 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_418 = Py_None;
        tmp_fromlist_name_418 = const_tuple_str_plain_OutsideTVIE_tuple;
        tmp_level_name_418 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 819;
        tmp_import_name_from_630 = IMPORT_MODULE5(tmp_name_name_418, tmp_globals_name_418, tmp_locals_name_418, tmp_fromlist_name_418, tmp_level_name_418);
        if (tmp_import_name_from_630 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 819;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_630)) {
           tmp_assign_source_739 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_630,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OutsideTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_739 = IMPORT_NAME(tmp_import_name_from_630, const_str_plain_OutsideTVIE);
        }

        Py_DECREF(tmp_import_name_from_630);
        if (tmp_assign_source_739 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 819;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OutsideTVIE, tmp_assign_source_739);
    }
    {
        PyObject *tmp_assign_source_740;
        PyObject *tmp_name_name_419;
        PyObject *tmp_globals_name_419;
        PyObject *tmp_locals_name_419;
        PyObject *tmp_fromlist_name_419;
        PyObject *tmp_level_name_419;
        tmp_name_name_419 = const_str_plain_packtpub;
        tmp_globals_name_419 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_419 = Py_None;
        tmp_fromlist_name_419 = const_tuple_str_plain_PacktPubIE_str_plain_PacktPubCourseIE_tuple;
        tmp_level_name_419 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 820;
        tmp_assign_source_740 = IMPORT_MODULE5(tmp_name_name_419, tmp_globals_name_419, tmp_locals_name_419, tmp_fromlist_name_419, tmp_level_name_419);
        if (tmp_assign_source_740 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 820;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_107__module == NULL);
        tmp_import_from_107__module = tmp_assign_source_740;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_741;
        PyObject *tmp_import_name_from_631;
        CHECK_OBJECT(tmp_import_from_107__module);
        tmp_import_name_from_631 = tmp_import_from_107__module;
        if (PyModule_Check(tmp_import_name_from_631)) {
           tmp_assign_source_741 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_631,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PacktPubIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_741 = IMPORT_NAME(tmp_import_name_from_631, const_str_plain_PacktPubIE);
        }

        if (tmp_assign_source_741 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 820;

            goto try_except_handler_107;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PacktPubIE, tmp_assign_source_741);
    }
    {
        PyObject *tmp_assign_source_742;
        PyObject *tmp_import_name_from_632;
        CHECK_OBJECT(tmp_import_from_107__module);
        tmp_import_name_from_632 = tmp_import_from_107__module;
        if (PyModule_Check(tmp_import_name_from_632)) {
           tmp_assign_source_742 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_632,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PacktPubCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_742 = IMPORT_NAME(tmp_import_name_from_632, const_str_plain_PacktPubCourseIE);
        }

        if (tmp_assign_source_742 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 820;

            goto try_except_handler_107;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PacktPubCourseIE, tmp_assign_source_742);
    }
    goto try_end_107;
    // Exception handler code:
    try_except_handler_107:;
    exception_keeper_type_107 = exception_type;
    exception_keeper_value_107 = exception_value;
    exception_keeper_tb_107 = exception_tb;
    exception_keeper_lineno_107 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_107__module);
    Py_DECREF(tmp_import_from_107__module);
    tmp_import_from_107__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_107;
    exception_value = exception_keeper_value_107;
    exception_tb = exception_keeper_tb_107;
    exception_lineno = exception_keeper_lineno_107;

    goto frame_exception_exit_1;
    // End of try:
    try_end_107:;
    CHECK_OBJECT(tmp_import_from_107__module);
    Py_DECREF(tmp_import_from_107__module);
    tmp_import_from_107__module = NULL;

    {
        PyObject *tmp_assign_source_743;
        PyObject *tmp_import_name_from_633;
        PyObject *tmp_name_name_420;
        PyObject *tmp_globals_name_420;
        PyObject *tmp_locals_name_420;
        PyObject *tmp_fromlist_name_420;
        PyObject *tmp_level_name_420;
        tmp_name_name_420 = const_str_plain_pandoratv;
        tmp_globals_name_420 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_420 = Py_None;
        tmp_fromlist_name_420 = const_tuple_str_plain_PandoraTVIE_tuple;
        tmp_level_name_420 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 824;
        tmp_import_name_from_633 = IMPORT_MODULE5(tmp_name_name_420, tmp_globals_name_420, tmp_locals_name_420, tmp_fromlist_name_420, tmp_level_name_420);
        if (tmp_import_name_from_633 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 824;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_633)) {
           tmp_assign_source_743 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_633,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PandoraTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_743 = IMPORT_NAME(tmp_import_name_from_633, const_str_plain_PandoraTVIE);
        }

        Py_DECREF(tmp_import_name_from_633);
        if (tmp_assign_source_743 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 824;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PandoraTVIE, tmp_assign_source_743);
    }
    {
        PyObject *tmp_assign_source_744;
        PyObject *tmp_import_name_from_634;
        PyObject *tmp_name_name_421;
        PyObject *tmp_globals_name_421;
        PyObject *tmp_locals_name_421;
        PyObject *tmp_fromlist_name_421;
        PyObject *tmp_level_name_421;
        tmp_name_name_421 = const_str_plain_parliamentliveuk;
        tmp_globals_name_421 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_421 = Py_None;
        tmp_fromlist_name_421 = const_tuple_str_plain_ParliamentLiveUKIE_tuple;
        tmp_level_name_421 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 825;
        tmp_import_name_from_634 = IMPORT_MODULE5(tmp_name_name_421, tmp_globals_name_421, tmp_locals_name_421, tmp_fromlist_name_421, tmp_level_name_421);
        if (tmp_import_name_from_634 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_634)) {
           tmp_assign_source_744 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_634,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ParliamentLiveUKIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_744 = IMPORT_NAME(tmp_import_name_from_634, const_str_plain_ParliamentLiveUKIE);
        }

        Py_DECREF(tmp_import_name_from_634);
        if (tmp_assign_source_744 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ParliamentLiveUKIE, tmp_assign_source_744);
    }
    {
        PyObject *tmp_assign_source_745;
        PyObject *tmp_import_name_from_635;
        PyObject *tmp_name_name_422;
        PyObject *tmp_globals_name_422;
        PyObject *tmp_locals_name_422;
        PyObject *tmp_fromlist_name_422;
        PyObject *tmp_level_name_422;
        tmp_name_name_422 = const_str_plain_patreon;
        tmp_globals_name_422 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_422 = Py_None;
        tmp_fromlist_name_422 = const_tuple_str_plain_PatreonIE_tuple;
        tmp_level_name_422 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 826;
        tmp_import_name_from_635 = IMPORT_MODULE5(tmp_name_name_422, tmp_globals_name_422, tmp_locals_name_422, tmp_fromlist_name_422, tmp_level_name_422);
        if (tmp_import_name_from_635 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 826;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_635)) {
           tmp_assign_source_745 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_635,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PatreonIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_745 = IMPORT_NAME(tmp_import_name_from_635, const_str_plain_PatreonIE);
        }

        Py_DECREF(tmp_import_name_from_635);
        if (tmp_assign_source_745 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 826;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PatreonIE, tmp_assign_source_745);
    }
    {
        PyObject *tmp_assign_source_746;
        PyObject *tmp_import_name_from_636;
        PyObject *tmp_name_name_423;
        PyObject *tmp_globals_name_423;
        PyObject *tmp_locals_name_423;
        PyObject *tmp_fromlist_name_423;
        PyObject *tmp_level_name_423;
        tmp_name_name_423 = const_str_plain_pbs;
        tmp_globals_name_423 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_423 = Py_None;
        tmp_fromlist_name_423 = const_tuple_str_plain_PBSIE_tuple;
        tmp_level_name_423 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 827;
        tmp_import_name_from_636 = IMPORT_MODULE5(tmp_name_name_423, tmp_globals_name_423, tmp_locals_name_423, tmp_fromlist_name_423, tmp_level_name_423);
        if (tmp_import_name_from_636 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 827;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_636)) {
           tmp_assign_source_746 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_636,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PBSIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_746 = IMPORT_NAME(tmp_import_name_from_636, const_str_plain_PBSIE);
        }

        Py_DECREF(tmp_import_name_from_636);
        if (tmp_assign_source_746 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 827;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PBSIE, tmp_assign_source_746);
    }
    {
        PyObject *tmp_assign_source_747;
        PyObject *tmp_import_name_from_637;
        PyObject *tmp_name_name_424;
        PyObject *tmp_globals_name_424;
        PyObject *tmp_locals_name_424;
        PyObject *tmp_fromlist_name_424;
        PyObject *tmp_level_name_424;
        tmp_name_name_424 = const_str_plain_pearvideo;
        tmp_globals_name_424 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_424 = Py_None;
        tmp_fromlist_name_424 = const_tuple_str_plain_PearVideoIE_tuple;
        tmp_level_name_424 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 828;
        tmp_import_name_from_637 = IMPORT_MODULE5(tmp_name_name_424, tmp_globals_name_424, tmp_locals_name_424, tmp_fromlist_name_424, tmp_level_name_424);
        if (tmp_import_name_from_637 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 828;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_637)) {
           tmp_assign_source_747 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_637,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PearVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_747 = IMPORT_NAME(tmp_import_name_from_637, const_str_plain_PearVideoIE);
        }

        Py_DECREF(tmp_import_name_from_637);
        if (tmp_assign_source_747 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 828;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PearVideoIE, tmp_assign_source_747);
    }
    {
        PyObject *tmp_assign_source_748;
        PyObject *tmp_import_name_from_638;
        PyObject *tmp_name_name_425;
        PyObject *tmp_globals_name_425;
        PyObject *tmp_locals_name_425;
        PyObject *tmp_fromlist_name_425;
        PyObject *tmp_level_name_425;
        tmp_name_name_425 = const_str_plain_peertube;
        tmp_globals_name_425 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_425 = Py_None;
        tmp_fromlist_name_425 = const_tuple_str_plain_PeerTubeIE_tuple;
        tmp_level_name_425 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 829;
        tmp_import_name_from_638 = IMPORT_MODULE5(tmp_name_name_425, tmp_globals_name_425, tmp_locals_name_425, tmp_fromlist_name_425, tmp_level_name_425);
        if (tmp_import_name_from_638 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 829;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_638)) {
           tmp_assign_source_748 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_638,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PeerTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_748 = IMPORT_NAME(tmp_import_name_from_638, const_str_plain_PeerTubeIE);
        }

        Py_DECREF(tmp_import_name_from_638);
        if (tmp_assign_source_748 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 829;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PeerTubeIE, tmp_assign_source_748);
    }
    {
        PyObject *tmp_assign_source_749;
        PyObject *tmp_import_name_from_639;
        PyObject *tmp_name_name_426;
        PyObject *tmp_globals_name_426;
        PyObject *tmp_locals_name_426;
        PyObject *tmp_fromlist_name_426;
        PyObject *tmp_level_name_426;
        tmp_name_name_426 = const_str_plain_people;
        tmp_globals_name_426 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_426 = Py_None;
        tmp_fromlist_name_426 = const_tuple_str_plain_PeopleIE_tuple;
        tmp_level_name_426 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 830;
        tmp_import_name_from_639 = IMPORT_MODULE5(tmp_name_name_426, tmp_globals_name_426, tmp_locals_name_426, tmp_fromlist_name_426, tmp_level_name_426);
        if (tmp_import_name_from_639 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 830;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_639)) {
           tmp_assign_source_749 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_639,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PeopleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_749 = IMPORT_NAME(tmp_import_name_from_639, const_str_plain_PeopleIE);
        }

        Py_DECREF(tmp_import_name_from_639);
        if (tmp_assign_source_749 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 830;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PeopleIE, tmp_assign_source_749);
    }
    {
        PyObject *tmp_assign_source_750;
        PyObject *tmp_import_name_from_640;
        PyObject *tmp_name_name_427;
        PyObject *tmp_globals_name_427;
        PyObject *tmp_locals_name_427;
        PyObject *tmp_fromlist_name_427;
        PyObject *tmp_level_name_427;
        tmp_name_name_427 = const_str_plain_performgroup;
        tmp_globals_name_427 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_427 = Py_None;
        tmp_fromlist_name_427 = const_tuple_str_plain_PerformGroupIE_tuple;
        tmp_level_name_427 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 831;
        tmp_import_name_from_640 = IMPORT_MODULE5(tmp_name_name_427, tmp_globals_name_427, tmp_locals_name_427, tmp_fromlist_name_427, tmp_level_name_427);
        if (tmp_import_name_from_640 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 831;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_640)) {
           tmp_assign_source_750 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_640,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PerformGroupIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_750 = IMPORT_NAME(tmp_import_name_from_640, const_str_plain_PerformGroupIE);
        }

        Py_DECREF(tmp_import_name_from_640);
        if (tmp_assign_source_750 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 831;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PerformGroupIE, tmp_assign_source_750);
    }
    {
        PyObject *tmp_assign_source_751;
        PyObject *tmp_name_name_428;
        PyObject *tmp_globals_name_428;
        PyObject *tmp_locals_name_428;
        PyObject *tmp_fromlist_name_428;
        PyObject *tmp_level_name_428;
        tmp_name_name_428 = const_str_plain_periscope;
        tmp_globals_name_428 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_428 = Py_None;
        tmp_fromlist_name_428 = const_tuple_str_plain_PeriscopeIE_str_plain_PeriscopeUserIE_tuple;
        tmp_level_name_428 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 832;
        tmp_assign_source_751 = IMPORT_MODULE5(tmp_name_name_428, tmp_globals_name_428, tmp_locals_name_428, tmp_fromlist_name_428, tmp_level_name_428);
        if (tmp_assign_source_751 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 832;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_108__module == NULL);
        tmp_import_from_108__module = tmp_assign_source_751;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_752;
        PyObject *tmp_import_name_from_641;
        CHECK_OBJECT(tmp_import_from_108__module);
        tmp_import_name_from_641 = tmp_import_from_108__module;
        if (PyModule_Check(tmp_import_name_from_641)) {
           tmp_assign_source_752 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_641,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PeriscopeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_752 = IMPORT_NAME(tmp_import_name_from_641, const_str_plain_PeriscopeIE);
        }

        if (tmp_assign_source_752 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 832;

            goto try_except_handler_108;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PeriscopeIE, tmp_assign_source_752);
    }
    {
        PyObject *tmp_assign_source_753;
        PyObject *tmp_import_name_from_642;
        CHECK_OBJECT(tmp_import_from_108__module);
        tmp_import_name_from_642 = tmp_import_from_108__module;
        if (PyModule_Check(tmp_import_name_from_642)) {
           tmp_assign_source_753 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_642,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PeriscopeUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_753 = IMPORT_NAME(tmp_import_name_from_642, const_str_plain_PeriscopeUserIE);
        }

        if (tmp_assign_source_753 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 832;

            goto try_except_handler_108;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PeriscopeUserIE, tmp_assign_source_753);
    }
    goto try_end_108;
    // Exception handler code:
    try_except_handler_108:;
    exception_keeper_type_108 = exception_type;
    exception_keeper_value_108 = exception_value;
    exception_keeper_tb_108 = exception_tb;
    exception_keeper_lineno_108 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_108__module);
    Py_DECREF(tmp_import_from_108__module);
    tmp_import_from_108__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_108;
    exception_value = exception_keeper_value_108;
    exception_tb = exception_keeper_tb_108;
    exception_lineno = exception_keeper_lineno_108;

    goto frame_exception_exit_1;
    // End of try:
    try_end_108:;
    CHECK_OBJECT(tmp_import_from_108__module);
    Py_DECREF(tmp_import_from_108__module);
    tmp_import_from_108__module = NULL;

    {
        PyObject *tmp_assign_source_754;
        PyObject *tmp_import_name_from_643;
        PyObject *tmp_name_name_429;
        PyObject *tmp_globals_name_429;
        PyObject *tmp_locals_name_429;
        PyObject *tmp_fromlist_name_429;
        PyObject *tmp_level_name_429;
        tmp_name_name_429 = const_str_plain_philharmoniedeparis;
        tmp_globals_name_429 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_429 = Py_None;
        tmp_fromlist_name_429 = const_tuple_str_plain_PhilharmonieDeParisIE_tuple;
        tmp_level_name_429 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 836;
        tmp_import_name_from_643 = IMPORT_MODULE5(tmp_name_name_429, tmp_globals_name_429, tmp_locals_name_429, tmp_fromlist_name_429, tmp_level_name_429);
        if (tmp_import_name_from_643 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 836;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_643)) {
           tmp_assign_source_754 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_643,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PhilharmonieDeParisIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_754 = IMPORT_NAME(tmp_import_name_from_643, const_str_plain_PhilharmonieDeParisIE);
        }

        Py_DECREF(tmp_import_name_from_643);
        if (tmp_assign_source_754 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 836;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PhilharmonieDeParisIE, tmp_assign_source_754);
    }
    {
        PyObject *tmp_assign_source_755;
        PyObject *tmp_import_name_from_644;
        PyObject *tmp_name_name_430;
        PyObject *tmp_globals_name_430;
        PyObject *tmp_locals_name_430;
        PyObject *tmp_fromlist_name_430;
        PyObject *tmp_level_name_430;
        tmp_name_name_430 = const_str_plain_phoenix;
        tmp_globals_name_430 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_430 = Py_None;
        tmp_fromlist_name_430 = const_tuple_str_plain_PhoenixIE_tuple;
        tmp_level_name_430 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 837;
        tmp_import_name_from_644 = IMPORT_MODULE5(tmp_name_name_430, tmp_globals_name_430, tmp_locals_name_430, tmp_fromlist_name_430, tmp_level_name_430);
        if (tmp_import_name_from_644 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 837;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_644)) {
           tmp_assign_source_755 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_644,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PhoenixIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_755 = IMPORT_NAME(tmp_import_name_from_644, const_str_plain_PhoenixIE);
        }

        Py_DECREF(tmp_import_name_from_644);
        if (tmp_assign_source_755 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 837;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PhoenixIE, tmp_assign_source_755);
    }
    {
        PyObject *tmp_assign_source_756;
        PyObject *tmp_import_name_from_645;
        PyObject *tmp_name_name_431;
        PyObject *tmp_globals_name_431;
        PyObject *tmp_locals_name_431;
        PyObject *tmp_fromlist_name_431;
        PyObject *tmp_level_name_431;
        tmp_name_name_431 = const_str_plain_photobucket;
        tmp_globals_name_431 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_431 = Py_None;
        tmp_fromlist_name_431 = const_tuple_str_plain_PhotobucketIE_tuple;
        tmp_level_name_431 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 838;
        tmp_import_name_from_645 = IMPORT_MODULE5(tmp_name_name_431, tmp_globals_name_431, tmp_locals_name_431, tmp_fromlist_name_431, tmp_level_name_431);
        if (tmp_import_name_from_645 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 838;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_645)) {
           tmp_assign_source_756 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_645,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PhotobucketIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_756 = IMPORT_NAME(tmp_import_name_from_645, const_str_plain_PhotobucketIE);
        }

        Py_DECREF(tmp_import_name_from_645);
        if (tmp_assign_source_756 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 838;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PhotobucketIE, tmp_assign_source_756);
    }
    {
        PyObject *tmp_assign_source_757;
        PyObject *tmp_name_name_432;
        PyObject *tmp_globals_name_432;
        PyObject *tmp_locals_name_432;
        PyObject *tmp_fromlist_name_432;
        PyObject *tmp_level_name_432;
        tmp_name_name_432 = const_str_plain_picarto;
        tmp_globals_name_432 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_432 = Py_None;
        tmp_fromlist_name_432 = const_tuple_str_plain_PicartoIE_str_plain_PicartoVodIE_tuple;
        tmp_level_name_432 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 839;
        tmp_assign_source_757 = IMPORT_MODULE5(tmp_name_name_432, tmp_globals_name_432, tmp_locals_name_432, tmp_fromlist_name_432, tmp_level_name_432);
        if (tmp_assign_source_757 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 839;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_109__module == NULL);
        tmp_import_from_109__module = tmp_assign_source_757;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_758;
        PyObject *tmp_import_name_from_646;
        CHECK_OBJECT(tmp_import_from_109__module);
        tmp_import_name_from_646 = tmp_import_from_109__module;
        if (PyModule_Check(tmp_import_name_from_646)) {
           tmp_assign_source_758 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_646,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PicartoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_758 = IMPORT_NAME(tmp_import_name_from_646, const_str_plain_PicartoIE);
        }

        if (tmp_assign_source_758 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 839;

            goto try_except_handler_109;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PicartoIE, tmp_assign_source_758);
    }
    {
        PyObject *tmp_assign_source_759;
        PyObject *tmp_import_name_from_647;
        CHECK_OBJECT(tmp_import_from_109__module);
        tmp_import_name_from_647 = tmp_import_from_109__module;
        if (PyModule_Check(tmp_import_name_from_647)) {
           tmp_assign_source_759 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_647,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PicartoVodIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_759 = IMPORT_NAME(tmp_import_name_from_647, const_str_plain_PicartoVodIE);
        }

        if (tmp_assign_source_759 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 839;

            goto try_except_handler_109;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PicartoVodIE, tmp_assign_source_759);
    }
    goto try_end_109;
    // Exception handler code:
    try_except_handler_109:;
    exception_keeper_type_109 = exception_type;
    exception_keeper_value_109 = exception_value;
    exception_keeper_tb_109 = exception_tb;
    exception_keeper_lineno_109 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_109__module);
    Py_DECREF(tmp_import_from_109__module);
    tmp_import_from_109__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_109;
    exception_value = exception_keeper_value_109;
    exception_tb = exception_keeper_tb_109;
    exception_lineno = exception_keeper_lineno_109;

    goto frame_exception_exit_1;
    // End of try:
    try_end_109:;
    CHECK_OBJECT(tmp_import_from_109__module);
    Py_DECREF(tmp_import_from_109__module);
    tmp_import_from_109__module = NULL;

    {
        PyObject *tmp_assign_source_760;
        PyObject *tmp_import_name_from_648;
        PyObject *tmp_name_name_433;
        PyObject *tmp_globals_name_433;
        PyObject *tmp_locals_name_433;
        PyObject *tmp_fromlist_name_433;
        PyObject *tmp_level_name_433;
        tmp_name_name_433 = const_str_plain_piksel;
        tmp_globals_name_433 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_433 = Py_None;
        tmp_fromlist_name_433 = const_tuple_str_plain_PikselIE_tuple;
        tmp_level_name_433 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 843;
        tmp_import_name_from_648 = IMPORT_MODULE5(tmp_name_name_433, tmp_globals_name_433, tmp_locals_name_433, tmp_fromlist_name_433, tmp_level_name_433);
        if (tmp_import_name_from_648 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 843;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_648)) {
           tmp_assign_source_760 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_648,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PikselIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_760 = IMPORT_NAME(tmp_import_name_from_648, const_str_plain_PikselIE);
        }

        Py_DECREF(tmp_import_name_from_648);
        if (tmp_assign_source_760 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 843;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PikselIE, tmp_assign_source_760);
    }
    {
        PyObject *tmp_assign_source_761;
        PyObject *tmp_import_name_from_649;
        PyObject *tmp_name_name_434;
        PyObject *tmp_globals_name_434;
        PyObject *tmp_locals_name_434;
        PyObject *tmp_fromlist_name_434;
        PyObject *tmp_level_name_434;
        tmp_name_name_434 = const_str_plain_pinkbike;
        tmp_globals_name_434 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_434 = Py_None;
        tmp_fromlist_name_434 = const_tuple_str_plain_PinkbikeIE_tuple;
        tmp_level_name_434 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 844;
        tmp_import_name_from_649 = IMPORT_MODULE5(tmp_name_name_434, tmp_globals_name_434, tmp_locals_name_434, tmp_fromlist_name_434, tmp_level_name_434);
        if (tmp_import_name_from_649 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 844;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_649)) {
           tmp_assign_source_761 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_649,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PinkbikeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_761 = IMPORT_NAME(tmp_import_name_from_649, const_str_plain_PinkbikeIE);
        }

        Py_DECREF(tmp_import_name_from_649);
        if (tmp_assign_source_761 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 844;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PinkbikeIE, tmp_assign_source_761);
    }
    {
        PyObject *tmp_assign_source_762;
        PyObject *tmp_import_name_from_650;
        PyObject *tmp_name_name_435;
        PyObject *tmp_globals_name_435;
        PyObject *tmp_locals_name_435;
        PyObject *tmp_fromlist_name_435;
        PyObject *tmp_level_name_435;
        tmp_name_name_435 = const_str_plain_pladform;
        tmp_globals_name_435 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_435 = Py_None;
        tmp_fromlist_name_435 = const_tuple_str_plain_PladformIE_tuple;
        tmp_level_name_435 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 845;
        tmp_import_name_from_650 = IMPORT_MODULE5(tmp_name_name_435, tmp_globals_name_435, tmp_locals_name_435, tmp_fromlist_name_435, tmp_level_name_435);
        if (tmp_import_name_from_650 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 845;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_650)) {
           tmp_assign_source_762 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_650,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PladformIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_762 = IMPORT_NAME(tmp_import_name_from_650, const_str_plain_PladformIE);
        }

        Py_DECREF(tmp_import_name_from_650);
        if (tmp_assign_source_762 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 845;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PladformIE, tmp_assign_source_762);
    }
    {
        PyObject *tmp_assign_source_763;
        PyObject *tmp_name_name_436;
        PyObject *tmp_globals_name_436;
        PyObject *tmp_locals_name_436;
        PyObject *tmp_fromlist_name_436;
        PyObject *tmp_level_name_436;
        tmp_name_name_436 = const_str_plain_platzi;
        tmp_globals_name_436 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_436 = Py_None;
        tmp_fromlist_name_436 = const_tuple_str_plain_PlatziIE_str_plain_PlatziCourseIE_tuple;
        tmp_level_name_436 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 846;
        tmp_assign_source_763 = IMPORT_MODULE5(tmp_name_name_436, tmp_globals_name_436, tmp_locals_name_436, tmp_fromlist_name_436, tmp_level_name_436);
        if (tmp_assign_source_763 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 846;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_110__module == NULL);
        tmp_import_from_110__module = tmp_assign_source_763;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_764;
        PyObject *tmp_import_name_from_651;
        CHECK_OBJECT(tmp_import_from_110__module);
        tmp_import_name_from_651 = tmp_import_from_110__module;
        if (PyModule_Check(tmp_import_name_from_651)) {
           tmp_assign_source_764 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_651,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PlatziIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_764 = IMPORT_NAME(tmp_import_name_from_651, const_str_plain_PlatziIE);
        }

        if (tmp_assign_source_764 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 846;

            goto try_except_handler_110;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PlatziIE, tmp_assign_source_764);
    }
    {
        PyObject *tmp_assign_source_765;
        PyObject *tmp_import_name_from_652;
        CHECK_OBJECT(tmp_import_from_110__module);
        tmp_import_name_from_652 = tmp_import_from_110__module;
        if (PyModule_Check(tmp_import_name_from_652)) {
           tmp_assign_source_765 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_652,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PlatziCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_765 = IMPORT_NAME(tmp_import_name_from_652, const_str_plain_PlatziCourseIE);
        }

        if (tmp_assign_source_765 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 846;

            goto try_except_handler_110;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PlatziCourseIE, tmp_assign_source_765);
    }
    goto try_end_110;
    // Exception handler code:
    try_except_handler_110:;
    exception_keeper_type_110 = exception_type;
    exception_keeper_value_110 = exception_value;
    exception_keeper_tb_110 = exception_tb;
    exception_keeper_lineno_110 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_110__module);
    Py_DECREF(tmp_import_from_110__module);
    tmp_import_from_110__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_110;
    exception_value = exception_keeper_value_110;
    exception_tb = exception_keeper_tb_110;
    exception_lineno = exception_keeper_lineno_110;

    goto frame_exception_exit_1;
    // End of try:
    try_end_110:;
    CHECK_OBJECT(tmp_import_from_110__module);
    Py_DECREF(tmp_import_from_110__module);
    tmp_import_from_110__module = NULL;

    {
        PyObject *tmp_assign_source_766;
        PyObject *tmp_import_name_from_653;
        PyObject *tmp_name_name_437;
        PyObject *tmp_globals_name_437;
        PyObject *tmp_locals_name_437;
        PyObject *tmp_fromlist_name_437;
        PyObject *tmp_level_name_437;
        tmp_name_name_437 = const_str_plain_playfm;
        tmp_globals_name_437 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_437 = Py_None;
        tmp_fromlist_name_437 = const_tuple_str_plain_PlayFMIE_tuple;
        tmp_level_name_437 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 850;
        tmp_import_name_from_653 = IMPORT_MODULE5(tmp_name_name_437, tmp_globals_name_437, tmp_locals_name_437, tmp_fromlist_name_437, tmp_level_name_437);
        if (tmp_import_name_from_653 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 850;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_653)) {
           tmp_assign_source_766 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_653,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PlayFMIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_766 = IMPORT_NAME(tmp_import_name_from_653, const_str_plain_PlayFMIE);
        }

        Py_DECREF(tmp_import_name_from_653);
        if (tmp_assign_source_766 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 850;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PlayFMIE, tmp_assign_source_766);
    }
    {
        PyObject *tmp_assign_source_767;
        PyObject *tmp_import_name_from_654;
        PyObject *tmp_name_name_438;
        PyObject *tmp_globals_name_438;
        PyObject *tmp_locals_name_438;
        PyObject *tmp_fromlist_name_438;
        PyObject *tmp_level_name_438;
        tmp_name_name_438 = const_str_plain_playplustv;
        tmp_globals_name_438 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_438 = Py_None;
        tmp_fromlist_name_438 = const_tuple_str_plain_PlayPlusTVIE_tuple;
        tmp_level_name_438 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 851;
        tmp_import_name_from_654 = IMPORT_MODULE5(tmp_name_name_438, tmp_globals_name_438, tmp_locals_name_438, tmp_fromlist_name_438, tmp_level_name_438);
        if (tmp_import_name_from_654 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 851;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_654)) {
           tmp_assign_source_767 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_654,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PlayPlusTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_767 = IMPORT_NAME(tmp_import_name_from_654, const_str_plain_PlayPlusTVIE);
        }

        Py_DECREF(tmp_import_name_from_654);
        if (tmp_assign_source_767 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 851;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PlayPlusTVIE, tmp_assign_source_767);
    }
    {
        PyObject *tmp_assign_source_768;
        PyObject *tmp_import_name_from_655;
        PyObject *tmp_name_name_439;
        PyObject *tmp_globals_name_439;
        PyObject *tmp_locals_name_439;
        PyObject *tmp_fromlist_name_439;
        PyObject *tmp_level_name_439;
        tmp_name_name_439 = const_str_plain_plays;
        tmp_globals_name_439 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_439 = Py_None;
        tmp_fromlist_name_439 = const_tuple_str_plain_PlaysTVIE_tuple;
        tmp_level_name_439 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 852;
        tmp_import_name_from_655 = IMPORT_MODULE5(tmp_name_name_439, tmp_globals_name_439, tmp_locals_name_439, tmp_fromlist_name_439, tmp_level_name_439);
        if (tmp_import_name_from_655 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 852;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_655)) {
           tmp_assign_source_768 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_655,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PlaysTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_768 = IMPORT_NAME(tmp_import_name_from_655, const_str_plain_PlaysTVIE);
        }

        Py_DECREF(tmp_import_name_from_655);
        if (tmp_assign_source_768 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 852;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PlaysTVIE, tmp_assign_source_768);
    }
    {
        PyObject *tmp_assign_source_769;
        PyObject *tmp_import_name_from_656;
        PyObject *tmp_name_name_440;
        PyObject *tmp_globals_name_440;
        PyObject *tmp_locals_name_440;
        PyObject *tmp_fromlist_name_440;
        PyObject *tmp_level_name_440;
        tmp_name_name_440 = const_str_plain_playtvak;
        tmp_globals_name_440 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_440 = Py_None;
        tmp_fromlist_name_440 = const_tuple_str_plain_PlaytvakIE_tuple;
        tmp_level_name_440 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 853;
        tmp_import_name_from_656 = IMPORT_MODULE5(tmp_name_name_440, tmp_globals_name_440, tmp_locals_name_440, tmp_fromlist_name_440, tmp_level_name_440);
        if (tmp_import_name_from_656 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 853;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_656)) {
           tmp_assign_source_769 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_656,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PlaytvakIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_769 = IMPORT_NAME(tmp_import_name_from_656, const_str_plain_PlaytvakIE);
        }

        Py_DECREF(tmp_import_name_from_656);
        if (tmp_assign_source_769 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 853;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PlaytvakIE, tmp_assign_source_769);
    }
    {
        PyObject *tmp_assign_source_770;
        PyObject *tmp_import_name_from_657;
        PyObject *tmp_name_name_441;
        PyObject *tmp_globals_name_441;
        PyObject *tmp_locals_name_441;
        PyObject *tmp_fromlist_name_441;
        PyObject *tmp_level_name_441;
        tmp_name_name_441 = const_str_plain_playvid;
        tmp_globals_name_441 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_441 = Py_None;
        tmp_fromlist_name_441 = const_tuple_str_plain_PlayvidIE_tuple;
        tmp_level_name_441 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 854;
        tmp_import_name_from_657 = IMPORT_MODULE5(tmp_name_name_441, tmp_globals_name_441, tmp_locals_name_441, tmp_fromlist_name_441, tmp_level_name_441);
        if (tmp_import_name_from_657 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 854;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_657)) {
           tmp_assign_source_770 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_657,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PlayvidIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_770 = IMPORT_NAME(tmp_import_name_from_657, const_str_plain_PlayvidIE);
        }

        Py_DECREF(tmp_import_name_from_657);
        if (tmp_assign_source_770 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 854;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PlayvidIE, tmp_assign_source_770);
    }
    {
        PyObject *tmp_assign_source_771;
        PyObject *tmp_import_name_from_658;
        PyObject *tmp_name_name_442;
        PyObject *tmp_globals_name_442;
        PyObject *tmp_locals_name_442;
        PyObject *tmp_fromlist_name_442;
        PyObject *tmp_level_name_442;
        tmp_name_name_442 = const_str_plain_playwire;
        tmp_globals_name_442 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_442 = Py_None;
        tmp_fromlist_name_442 = const_tuple_str_plain_PlaywireIE_tuple;
        tmp_level_name_442 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 855;
        tmp_import_name_from_658 = IMPORT_MODULE5(tmp_name_name_442, tmp_globals_name_442, tmp_locals_name_442, tmp_fromlist_name_442, tmp_level_name_442);
        if (tmp_import_name_from_658 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 855;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_658)) {
           tmp_assign_source_771 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_658,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PlaywireIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_771 = IMPORT_NAME(tmp_import_name_from_658, const_str_plain_PlaywireIE);
        }

        Py_DECREF(tmp_import_name_from_658);
        if (tmp_assign_source_771 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 855;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PlaywireIE, tmp_assign_source_771);
    }
    {
        PyObject *tmp_assign_source_772;
        PyObject *tmp_name_name_443;
        PyObject *tmp_globals_name_443;
        PyObject *tmp_locals_name_443;
        PyObject *tmp_fromlist_name_443;
        PyObject *tmp_level_name_443;
        tmp_name_name_443 = const_str_plain_pluralsight;
        tmp_globals_name_443 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_443 = Py_None;
        tmp_fromlist_name_443 = const_tuple_str_plain_PluralsightIE_str_plain_PluralsightCourseIE_tuple;
        tmp_level_name_443 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 856;
        tmp_assign_source_772 = IMPORT_MODULE5(tmp_name_name_443, tmp_globals_name_443, tmp_locals_name_443, tmp_fromlist_name_443, tmp_level_name_443);
        if (tmp_assign_source_772 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 856;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_111__module == NULL);
        tmp_import_from_111__module = tmp_assign_source_772;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_773;
        PyObject *tmp_import_name_from_659;
        CHECK_OBJECT(tmp_import_from_111__module);
        tmp_import_name_from_659 = tmp_import_from_111__module;
        if (PyModule_Check(tmp_import_name_from_659)) {
           tmp_assign_source_773 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_659,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PluralsightIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_773 = IMPORT_NAME(tmp_import_name_from_659, const_str_plain_PluralsightIE);
        }

        if (tmp_assign_source_773 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 856;

            goto try_except_handler_111;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PluralsightIE, tmp_assign_source_773);
    }
    {
        PyObject *tmp_assign_source_774;
        PyObject *tmp_import_name_from_660;
        CHECK_OBJECT(tmp_import_from_111__module);
        tmp_import_name_from_660 = tmp_import_from_111__module;
        if (PyModule_Check(tmp_import_name_from_660)) {
           tmp_assign_source_774 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_660,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PluralsightCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_774 = IMPORT_NAME(tmp_import_name_from_660, const_str_plain_PluralsightCourseIE);
        }

        if (tmp_assign_source_774 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 856;

            goto try_except_handler_111;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PluralsightCourseIE, tmp_assign_source_774);
    }
    goto try_end_111;
    // Exception handler code:
    try_except_handler_111:;
    exception_keeper_type_111 = exception_type;
    exception_keeper_value_111 = exception_value;
    exception_keeper_tb_111 = exception_tb;
    exception_keeper_lineno_111 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_111__module);
    Py_DECREF(tmp_import_from_111__module);
    tmp_import_from_111__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_111;
    exception_value = exception_keeper_value_111;
    exception_tb = exception_keeper_tb_111;
    exception_lineno = exception_keeper_lineno_111;

    goto frame_exception_exit_1;
    // End of try:
    try_end_111:;
    CHECK_OBJECT(tmp_import_from_111__module);
    Py_DECREF(tmp_import_from_111__module);
    tmp_import_from_111__module = NULL;

    {
        PyObject *tmp_assign_source_775;
        PyObject *tmp_import_name_from_661;
        PyObject *tmp_name_name_444;
        PyObject *tmp_globals_name_444;
        PyObject *tmp_locals_name_444;
        PyObject *tmp_fromlist_name_444;
        PyObject *tmp_level_name_444;
        tmp_name_name_444 = const_str_plain_podomatic;
        tmp_globals_name_444 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_444 = Py_None;
        tmp_fromlist_name_444 = const_tuple_str_plain_PodomaticIE_tuple;
        tmp_level_name_444 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 860;
        tmp_import_name_from_661 = IMPORT_MODULE5(tmp_name_name_444, tmp_globals_name_444, tmp_locals_name_444, tmp_fromlist_name_444, tmp_level_name_444);
        if (tmp_import_name_from_661 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 860;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_661)) {
           tmp_assign_source_775 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_661,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PodomaticIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_775 = IMPORT_NAME(tmp_import_name_from_661, const_str_plain_PodomaticIE);
        }

        Py_DECREF(tmp_import_name_from_661);
        if (tmp_assign_source_775 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 860;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PodomaticIE, tmp_assign_source_775);
    }
    {
        PyObject *tmp_assign_source_776;
        PyObject *tmp_import_name_from_662;
        PyObject *tmp_name_name_445;
        PyObject *tmp_globals_name_445;
        PyObject *tmp_locals_name_445;
        PyObject *tmp_fromlist_name_445;
        PyObject *tmp_level_name_445;
        tmp_name_name_445 = const_str_plain_pokemon;
        tmp_globals_name_445 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_445 = Py_None;
        tmp_fromlist_name_445 = const_tuple_str_plain_PokemonIE_tuple;
        tmp_level_name_445 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 861;
        tmp_import_name_from_662 = IMPORT_MODULE5(tmp_name_name_445, tmp_globals_name_445, tmp_locals_name_445, tmp_fromlist_name_445, tmp_level_name_445);
        if (tmp_import_name_from_662 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 861;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_662)) {
           tmp_assign_source_776 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_662,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PokemonIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_776 = IMPORT_NAME(tmp_import_name_from_662, const_str_plain_PokemonIE);
        }

        Py_DECREF(tmp_import_name_from_662);
        if (tmp_assign_source_776 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 861;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PokemonIE, tmp_assign_source_776);
    }
    {
        PyObject *tmp_assign_source_777;
        PyObject *tmp_name_name_446;
        PyObject *tmp_globals_name_446;
        PyObject *tmp_locals_name_446;
        PyObject *tmp_fromlist_name_446;
        PyObject *tmp_level_name_446;
        tmp_name_name_446 = const_str_plain_polskieradio;
        tmp_globals_name_446 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_446 = Py_None;
        tmp_fromlist_name_446 = const_tuple_str_plain_PolskieRadioIE_str_plain_PolskieRadioCategoryIE_tuple;
        tmp_level_name_446 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 862;
        tmp_assign_source_777 = IMPORT_MODULE5(tmp_name_name_446, tmp_globals_name_446, tmp_locals_name_446, tmp_fromlist_name_446, tmp_level_name_446);
        if (tmp_assign_source_777 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 862;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_112__module == NULL);
        tmp_import_from_112__module = tmp_assign_source_777;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_778;
        PyObject *tmp_import_name_from_663;
        CHECK_OBJECT(tmp_import_from_112__module);
        tmp_import_name_from_663 = tmp_import_from_112__module;
        if (PyModule_Check(tmp_import_name_from_663)) {
           tmp_assign_source_778 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_663,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PolskieRadioIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_778 = IMPORT_NAME(tmp_import_name_from_663, const_str_plain_PolskieRadioIE);
        }

        if (tmp_assign_source_778 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 862;

            goto try_except_handler_112;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PolskieRadioIE, tmp_assign_source_778);
    }
    {
        PyObject *tmp_assign_source_779;
        PyObject *tmp_import_name_from_664;
        CHECK_OBJECT(tmp_import_from_112__module);
        tmp_import_name_from_664 = tmp_import_from_112__module;
        if (PyModule_Check(tmp_import_name_from_664)) {
           tmp_assign_source_779 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_664,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PolskieRadioCategoryIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_779 = IMPORT_NAME(tmp_import_name_from_664, const_str_plain_PolskieRadioCategoryIE);
        }

        if (tmp_assign_source_779 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 862;

            goto try_except_handler_112;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PolskieRadioCategoryIE, tmp_assign_source_779);
    }
    goto try_end_112;
    // Exception handler code:
    try_except_handler_112:;
    exception_keeper_type_112 = exception_type;
    exception_keeper_value_112 = exception_value;
    exception_keeper_tb_112 = exception_tb;
    exception_keeper_lineno_112 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_112__module);
    Py_DECREF(tmp_import_from_112__module);
    tmp_import_from_112__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_112;
    exception_value = exception_keeper_value_112;
    exception_tb = exception_keeper_tb_112;
    exception_lineno = exception_keeper_lineno_112;

    goto frame_exception_exit_1;
    // End of try:
    try_end_112:;
    CHECK_OBJECT(tmp_import_from_112__module);
    Py_DECREF(tmp_import_from_112__module);
    tmp_import_from_112__module = NULL;

    {
        PyObject *tmp_assign_source_780;
        PyObject *tmp_import_name_from_665;
        PyObject *tmp_name_name_447;
        PyObject *tmp_globals_name_447;
        PyObject *tmp_locals_name_447;
        PyObject *tmp_fromlist_name_447;
        PyObject *tmp_level_name_447;
        tmp_name_name_447 = const_str_plain_popcorntimes;
        tmp_globals_name_447 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_447 = Py_None;
        tmp_fromlist_name_447 = const_tuple_str_plain_PopcorntimesIE_tuple;
        tmp_level_name_447 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 866;
        tmp_import_name_from_665 = IMPORT_MODULE5(tmp_name_name_447, tmp_globals_name_447, tmp_locals_name_447, tmp_fromlist_name_447, tmp_level_name_447);
        if (tmp_import_name_from_665 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 866;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_665)) {
           tmp_assign_source_780 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_665,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PopcorntimesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_780 = IMPORT_NAME(tmp_import_name_from_665, const_str_plain_PopcorntimesIE);
        }

        Py_DECREF(tmp_import_name_from_665);
        if (tmp_assign_source_780 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 866;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PopcorntimesIE, tmp_assign_source_780);
    }
    {
        PyObject *tmp_assign_source_781;
        PyObject *tmp_import_name_from_666;
        PyObject *tmp_name_name_448;
        PyObject *tmp_globals_name_448;
        PyObject *tmp_locals_name_448;
        PyObject *tmp_fromlist_name_448;
        PyObject *tmp_level_name_448;
        tmp_name_name_448 = const_str_plain_popcorntv;
        tmp_globals_name_448 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_448 = Py_None;
        tmp_fromlist_name_448 = const_tuple_str_plain_PopcornTVIE_tuple;
        tmp_level_name_448 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 867;
        tmp_import_name_from_666 = IMPORT_MODULE5(tmp_name_name_448, tmp_globals_name_448, tmp_locals_name_448, tmp_fromlist_name_448, tmp_level_name_448);
        if (tmp_import_name_from_666 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 867;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_666)) {
           tmp_assign_source_781 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_666,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PopcornTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_781 = IMPORT_NAME(tmp_import_name_from_666, const_str_plain_PopcornTVIE);
        }

        Py_DECREF(tmp_import_name_from_666);
        if (tmp_assign_source_781 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 867;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PopcornTVIE, tmp_assign_source_781);
    }
    {
        PyObject *tmp_assign_source_782;
        PyObject *tmp_import_name_from_667;
        PyObject *tmp_name_name_449;
        PyObject *tmp_globals_name_449;
        PyObject *tmp_locals_name_449;
        PyObject *tmp_fromlist_name_449;
        PyObject *tmp_level_name_449;
        tmp_name_name_449 = const_str_plain_porn91;
        tmp_globals_name_449 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_449 = Py_None;
        tmp_fromlist_name_449 = const_tuple_str_plain_Porn91IE_tuple;
        tmp_level_name_449 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 868;
        tmp_import_name_from_667 = IMPORT_MODULE5(tmp_name_name_449, tmp_globals_name_449, tmp_locals_name_449, tmp_fromlist_name_449, tmp_level_name_449);
        if (tmp_import_name_from_667 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 868;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_667)) {
           tmp_assign_source_782 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_667,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Porn91IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_782 = IMPORT_NAME(tmp_import_name_from_667, const_str_plain_Porn91IE);
        }

        Py_DECREF(tmp_import_name_from_667);
        if (tmp_assign_source_782 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 868;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Porn91IE, tmp_assign_source_782);
    }
    {
        PyObject *tmp_assign_source_783;
        PyObject *tmp_import_name_from_668;
        PyObject *tmp_name_name_450;
        PyObject *tmp_globals_name_450;
        PyObject *tmp_locals_name_450;
        PyObject *tmp_fromlist_name_450;
        PyObject *tmp_level_name_450;
        tmp_name_name_450 = const_str_plain_porncom;
        tmp_globals_name_450 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_450 = Py_None;
        tmp_fromlist_name_450 = const_tuple_str_plain_PornComIE_tuple;
        tmp_level_name_450 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 869;
        tmp_import_name_from_668 = IMPORT_MODULE5(tmp_name_name_450, tmp_globals_name_450, tmp_locals_name_450, tmp_fromlist_name_450, tmp_level_name_450);
        if (tmp_import_name_from_668 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 869;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_668)) {
           tmp_assign_source_783 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_668,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PornComIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_783 = IMPORT_NAME(tmp_import_name_from_668, const_str_plain_PornComIE);
        }

        Py_DECREF(tmp_import_name_from_668);
        if (tmp_assign_source_783 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 869;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PornComIE, tmp_assign_source_783);
    }
    {
        PyObject *tmp_assign_source_784;
        PyObject *tmp_import_name_from_669;
        PyObject *tmp_name_name_451;
        PyObject *tmp_globals_name_451;
        PyObject *tmp_locals_name_451;
        PyObject *tmp_fromlist_name_451;
        PyObject *tmp_level_name_451;
        tmp_name_name_451 = const_str_plain_pornhd;
        tmp_globals_name_451 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_451 = Py_None;
        tmp_fromlist_name_451 = const_tuple_str_plain_PornHdIE_tuple;
        tmp_level_name_451 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 870;
        tmp_import_name_from_669 = IMPORT_MODULE5(tmp_name_name_451, tmp_globals_name_451, tmp_locals_name_451, tmp_fromlist_name_451, tmp_level_name_451);
        if (tmp_import_name_from_669 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 870;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_669)) {
           tmp_assign_source_784 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_669,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PornHdIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_784 = IMPORT_NAME(tmp_import_name_from_669, const_str_plain_PornHdIE);
        }

        Py_DECREF(tmp_import_name_from_669);
        if (tmp_assign_source_784 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 870;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PornHdIE, tmp_assign_source_784);
    }
    {
        PyObject *tmp_assign_source_785;
        PyObject *tmp_name_name_452;
        PyObject *tmp_globals_name_452;
        PyObject *tmp_locals_name_452;
        PyObject *tmp_fromlist_name_452;
        PyObject *tmp_level_name_452;
        tmp_name_name_452 = const_str_plain_pornhub;
        tmp_globals_name_452 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_452 = Py_None;
        tmp_fromlist_name_452 = const_tuple_b905a6975b5cf811cdb9f48650b5e3e3_tuple;
        tmp_level_name_452 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 871;
        tmp_assign_source_785 = IMPORT_MODULE5(tmp_name_name_452, tmp_globals_name_452, tmp_locals_name_452, tmp_fromlist_name_452, tmp_level_name_452);
        if (tmp_assign_source_785 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 871;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_113__module == NULL);
        tmp_import_from_113__module = tmp_assign_source_785;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_786;
        PyObject *tmp_import_name_from_670;
        CHECK_OBJECT(tmp_import_from_113__module);
        tmp_import_name_from_670 = tmp_import_from_113__module;
        if (PyModule_Check(tmp_import_name_from_670)) {
           tmp_assign_source_786 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_670,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PornHubIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_786 = IMPORT_NAME(tmp_import_name_from_670, const_str_plain_PornHubIE);
        }

        if (tmp_assign_source_786 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 871;

            goto try_except_handler_113;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PornHubIE, tmp_assign_source_786);
    }
    {
        PyObject *tmp_assign_source_787;
        PyObject *tmp_import_name_from_671;
        CHECK_OBJECT(tmp_import_from_113__module);
        tmp_import_name_from_671 = tmp_import_from_113__module;
        if (PyModule_Check(tmp_import_name_from_671)) {
           tmp_assign_source_787 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_671,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PornHubUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_787 = IMPORT_NAME(tmp_import_name_from_671, const_str_plain_PornHubUserIE);
        }

        if (tmp_assign_source_787 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 871;

            goto try_except_handler_113;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PornHubUserIE, tmp_assign_source_787);
    }
    {
        PyObject *tmp_assign_source_788;
        PyObject *tmp_import_name_from_672;
        CHECK_OBJECT(tmp_import_from_113__module);
        tmp_import_name_from_672 = tmp_import_from_113__module;
        if (PyModule_Check(tmp_import_name_from_672)) {
           tmp_assign_source_788 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_672,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PornHubPagedVideoListIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_788 = IMPORT_NAME(tmp_import_name_from_672, const_str_plain_PornHubPagedVideoListIE);
        }

        if (tmp_assign_source_788 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 871;

            goto try_except_handler_113;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PornHubPagedVideoListIE, tmp_assign_source_788);
    }
    {
        PyObject *tmp_assign_source_789;
        PyObject *tmp_import_name_from_673;
        CHECK_OBJECT(tmp_import_from_113__module);
        tmp_import_name_from_673 = tmp_import_from_113__module;
        if (PyModule_Check(tmp_import_name_from_673)) {
           tmp_assign_source_789 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_673,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PornHubUserVideosUploadIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_789 = IMPORT_NAME(tmp_import_name_from_673, const_str_plain_PornHubUserVideosUploadIE);
        }

        if (tmp_assign_source_789 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 871;

            goto try_except_handler_113;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PornHubUserVideosUploadIE, tmp_assign_source_789);
    }
    goto try_end_113;
    // Exception handler code:
    try_except_handler_113:;
    exception_keeper_type_113 = exception_type;
    exception_keeper_value_113 = exception_value;
    exception_keeper_tb_113 = exception_tb;
    exception_keeper_lineno_113 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_113__module);
    Py_DECREF(tmp_import_from_113__module);
    tmp_import_from_113__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_113;
    exception_value = exception_keeper_value_113;
    exception_tb = exception_keeper_tb_113;
    exception_lineno = exception_keeper_lineno_113;

    goto frame_exception_exit_1;
    // End of try:
    try_end_113:;
    CHECK_OBJECT(tmp_import_from_113__module);
    Py_DECREF(tmp_import_from_113__module);
    tmp_import_from_113__module = NULL;

    {
        PyObject *tmp_assign_source_790;
        PyObject *tmp_import_name_from_674;
        PyObject *tmp_name_name_453;
        PyObject *tmp_globals_name_453;
        PyObject *tmp_locals_name_453;
        PyObject *tmp_fromlist_name_453;
        PyObject *tmp_level_name_453;
        tmp_name_name_453 = const_str_plain_pornotube;
        tmp_globals_name_453 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_453 = Py_None;
        tmp_fromlist_name_453 = const_tuple_str_plain_PornotubeIE_tuple;
        tmp_level_name_453 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 877;
        tmp_import_name_from_674 = IMPORT_MODULE5(tmp_name_name_453, tmp_globals_name_453, tmp_locals_name_453, tmp_fromlist_name_453, tmp_level_name_453);
        if (tmp_import_name_from_674 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 877;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_674)) {
           tmp_assign_source_790 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_674,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PornotubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_790 = IMPORT_NAME(tmp_import_name_from_674, const_str_plain_PornotubeIE);
        }

        Py_DECREF(tmp_import_name_from_674);
        if (tmp_assign_source_790 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 877;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PornotubeIE, tmp_assign_source_790);
    }
    {
        PyObject *tmp_assign_source_791;
        PyObject *tmp_import_name_from_675;
        PyObject *tmp_name_name_454;
        PyObject *tmp_globals_name_454;
        PyObject *tmp_locals_name_454;
        PyObject *tmp_fromlist_name_454;
        PyObject *tmp_level_name_454;
        tmp_name_name_454 = const_str_plain_pornovoisines;
        tmp_globals_name_454 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_454 = Py_None;
        tmp_fromlist_name_454 = const_tuple_str_plain_PornoVoisinesIE_tuple;
        tmp_level_name_454 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 878;
        tmp_import_name_from_675 = IMPORT_MODULE5(tmp_name_name_454, tmp_globals_name_454, tmp_locals_name_454, tmp_fromlist_name_454, tmp_level_name_454);
        if (tmp_import_name_from_675 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_675)) {
           tmp_assign_source_791 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_675,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PornoVoisinesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_791 = IMPORT_NAME(tmp_import_name_from_675, const_str_plain_PornoVoisinesIE);
        }

        Py_DECREF(tmp_import_name_from_675);
        if (tmp_assign_source_791 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PornoVoisinesIE, tmp_assign_source_791);
    }
    {
        PyObject *tmp_assign_source_792;
        PyObject *tmp_import_name_from_676;
        PyObject *tmp_name_name_455;
        PyObject *tmp_globals_name_455;
        PyObject *tmp_locals_name_455;
        PyObject *tmp_fromlist_name_455;
        PyObject *tmp_level_name_455;
        tmp_name_name_455 = const_str_plain_pornoxo;
        tmp_globals_name_455 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_455 = Py_None;
        tmp_fromlist_name_455 = const_tuple_str_plain_PornoXOIE_tuple;
        tmp_level_name_455 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 879;
        tmp_import_name_from_676 = IMPORT_MODULE5(tmp_name_name_455, tmp_globals_name_455, tmp_locals_name_455, tmp_fromlist_name_455, tmp_level_name_455);
        if (tmp_import_name_from_676 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 879;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_676)) {
           tmp_assign_source_792 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_676,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PornoXOIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_792 = IMPORT_NAME(tmp_import_name_from_676, const_str_plain_PornoXOIE);
        }

        Py_DECREF(tmp_import_name_from_676);
        if (tmp_assign_source_792 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 879;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PornoXOIE, tmp_assign_source_792);
    }
    {
        PyObject *tmp_assign_source_793;
        PyObject *tmp_name_name_456;
        PyObject *tmp_globals_name_456;
        PyObject *tmp_locals_name_456;
        PyObject *tmp_fromlist_name_456;
        PyObject *tmp_level_name_456;
        tmp_name_name_456 = const_str_plain_puhutv;
        tmp_globals_name_456 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_456 = Py_None;
        tmp_fromlist_name_456 = const_tuple_str_plain_PuhuTVIE_str_plain_PuhuTVSerieIE_tuple;
        tmp_level_name_456 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 880;
        tmp_assign_source_793 = IMPORT_MODULE5(tmp_name_name_456, tmp_globals_name_456, tmp_locals_name_456, tmp_fromlist_name_456, tmp_level_name_456);
        if (tmp_assign_source_793 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 880;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_114__module == NULL);
        tmp_import_from_114__module = tmp_assign_source_793;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_794;
        PyObject *tmp_import_name_from_677;
        CHECK_OBJECT(tmp_import_from_114__module);
        tmp_import_name_from_677 = tmp_import_from_114__module;
        if (PyModule_Check(tmp_import_name_from_677)) {
           tmp_assign_source_794 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_677,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PuhuTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_794 = IMPORT_NAME(tmp_import_name_from_677, const_str_plain_PuhuTVIE);
        }

        if (tmp_assign_source_794 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 880;

            goto try_except_handler_114;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PuhuTVIE, tmp_assign_source_794);
    }
    {
        PyObject *tmp_assign_source_795;
        PyObject *tmp_import_name_from_678;
        CHECK_OBJECT(tmp_import_from_114__module);
        tmp_import_name_from_678 = tmp_import_from_114__module;
        if (PyModule_Check(tmp_import_name_from_678)) {
           tmp_assign_source_795 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_678,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PuhuTVSerieIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_795 = IMPORT_NAME(tmp_import_name_from_678, const_str_plain_PuhuTVSerieIE);
        }

        if (tmp_assign_source_795 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 880;

            goto try_except_handler_114;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PuhuTVSerieIE, tmp_assign_source_795);
    }
    goto try_end_114;
    // Exception handler code:
    try_except_handler_114:;
    exception_keeper_type_114 = exception_type;
    exception_keeper_value_114 = exception_value;
    exception_keeper_tb_114 = exception_tb;
    exception_keeper_lineno_114 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_114__module);
    Py_DECREF(tmp_import_from_114__module);
    tmp_import_from_114__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_114;
    exception_value = exception_keeper_value_114;
    exception_tb = exception_keeper_tb_114;
    exception_lineno = exception_keeper_lineno_114;

    goto frame_exception_exit_1;
    // End of try:
    try_end_114:;
    CHECK_OBJECT(tmp_import_from_114__module);
    Py_DECREF(tmp_import_from_114__module);
    tmp_import_from_114__module = NULL;

    {
        PyObject *tmp_assign_source_796;
        PyObject *tmp_import_name_from_679;
        PyObject *tmp_name_name_457;
        PyObject *tmp_globals_name_457;
        PyObject *tmp_locals_name_457;
        PyObject *tmp_fromlist_name_457;
        PyObject *tmp_level_name_457;
        tmp_name_name_457 = const_str_plain_presstv;
        tmp_globals_name_457 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_457 = Py_None;
        tmp_fromlist_name_457 = const_tuple_str_plain_PressTVIE_tuple;
        tmp_level_name_457 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 884;
        tmp_import_name_from_679 = IMPORT_MODULE5(tmp_name_name_457, tmp_globals_name_457, tmp_locals_name_457, tmp_fromlist_name_457, tmp_level_name_457);
        if (tmp_import_name_from_679 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 884;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_679)) {
           tmp_assign_source_796 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_679,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PressTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_796 = IMPORT_NAME(tmp_import_name_from_679, const_str_plain_PressTVIE);
        }

        Py_DECREF(tmp_import_name_from_679);
        if (tmp_assign_source_796 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 884;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PressTVIE, tmp_assign_source_796);
    }
    {
        PyObject *tmp_assign_source_797;
        PyObject *tmp_import_name_from_680;
        PyObject *tmp_name_name_458;
        PyObject *tmp_globals_name_458;
        PyObject *tmp_locals_name_458;
        PyObject *tmp_fromlist_name_458;
        PyObject *tmp_level_name_458;
        tmp_name_name_458 = const_str_plain_prosiebensat1;
        tmp_globals_name_458 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_458 = Py_None;
        tmp_fromlist_name_458 = const_tuple_str_plain_ProSiebenSat1IE_tuple;
        tmp_level_name_458 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 885;
        tmp_import_name_from_680 = IMPORT_MODULE5(tmp_name_name_458, tmp_globals_name_458, tmp_locals_name_458, tmp_fromlist_name_458, tmp_level_name_458);
        if (tmp_import_name_from_680 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 885;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_680)) {
           tmp_assign_source_797 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_680,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ProSiebenSat1IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_797 = IMPORT_NAME(tmp_import_name_from_680, const_str_plain_ProSiebenSat1IE);
        }

        Py_DECREF(tmp_import_name_from_680);
        if (tmp_assign_source_797 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 885;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ProSiebenSat1IE, tmp_assign_source_797);
    }
    {
        PyObject *tmp_assign_source_798;
        PyObject *tmp_import_name_from_681;
        PyObject *tmp_name_name_459;
        PyObject *tmp_globals_name_459;
        PyObject *tmp_locals_name_459;
        PyObject *tmp_fromlist_name_459;
        PyObject *tmp_level_name_459;
        tmp_name_name_459 = const_str_plain_puls4;
        tmp_globals_name_459 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_459 = Py_None;
        tmp_fromlist_name_459 = const_tuple_str_plain_Puls4IE_tuple;
        tmp_level_name_459 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 886;
        tmp_import_name_from_681 = IMPORT_MODULE5(tmp_name_name_459, tmp_globals_name_459, tmp_locals_name_459, tmp_fromlist_name_459, tmp_level_name_459);
        if (tmp_import_name_from_681 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 886;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_681)) {
           tmp_assign_source_798 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_681,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Puls4IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_798 = IMPORT_NAME(tmp_import_name_from_681, const_str_plain_Puls4IE);
        }

        Py_DECREF(tmp_import_name_from_681);
        if (tmp_assign_source_798 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 886;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Puls4IE, tmp_assign_source_798);
    }
    {
        PyObject *tmp_assign_source_799;
        PyObject *tmp_import_name_from_682;
        PyObject *tmp_name_name_460;
        PyObject *tmp_globals_name_460;
        PyObject *tmp_locals_name_460;
        PyObject *tmp_fromlist_name_460;
        PyObject *tmp_level_name_460;
        tmp_name_name_460 = const_str_plain_pyvideo;
        tmp_globals_name_460 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_460 = Py_None;
        tmp_fromlist_name_460 = const_tuple_str_plain_PyvideoIE_tuple;
        tmp_level_name_460 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 887;
        tmp_import_name_from_682 = IMPORT_MODULE5(tmp_name_name_460, tmp_globals_name_460, tmp_locals_name_460, tmp_fromlist_name_460, tmp_level_name_460);
        if (tmp_import_name_from_682 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 887;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_682)) {
           tmp_assign_source_799 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_682,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_PyvideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_799 = IMPORT_NAME(tmp_import_name_from_682, const_str_plain_PyvideoIE);
        }

        Py_DECREF(tmp_import_name_from_682);
        if (tmp_assign_source_799 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 887;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_PyvideoIE, tmp_assign_source_799);
    }
    {
        PyObject *tmp_assign_source_800;
        PyObject *tmp_name_name_461;
        PyObject *tmp_globals_name_461;
        PyObject *tmp_locals_name_461;
        PyObject *tmp_fromlist_name_461;
        PyObject *tmp_level_name_461;
        tmp_name_name_461 = const_str_plain_qqmusic;
        tmp_globals_name_461 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_461 = Py_None;
        tmp_fromlist_name_461 = const_tuple_041a1162a5d0a8642281dec2c46c1c28_tuple;
        tmp_level_name_461 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 888;
        tmp_assign_source_800 = IMPORT_MODULE5(tmp_name_name_461, tmp_globals_name_461, tmp_locals_name_461, tmp_fromlist_name_461, tmp_level_name_461);
        if (tmp_assign_source_800 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 888;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_115__module == NULL);
        tmp_import_from_115__module = tmp_assign_source_800;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_801;
        PyObject *tmp_import_name_from_683;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_683 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_683)) {
           tmp_assign_source_801 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_683,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_QQMusicIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_801 = IMPORT_NAME(tmp_import_name_from_683, const_str_plain_QQMusicIE);
        }

        if (tmp_assign_source_801 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 888;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_QQMusicIE, tmp_assign_source_801);
    }
    {
        PyObject *tmp_assign_source_802;
        PyObject *tmp_import_name_from_684;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_684 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_684)) {
           tmp_assign_source_802 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_684,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_QQMusicSingerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_802 = IMPORT_NAME(tmp_import_name_from_684, const_str_plain_QQMusicSingerIE);
        }

        if (tmp_assign_source_802 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 888;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_QQMusicSingerIE, tmp_assign_source_802);
    }
    {
        PyObject *tmp_assign_source_803;
        PyObject *tmp_import_name_from_685;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_685 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_685)) {
           tmp_assign_source_803 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_685,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_QQMusicAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_803 = IMPORT_NAME(tmp_import_name_from_685, const_str_plain_QQMusicAlbumIE);
        }

        if (tmp_assign_source_803 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 888;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_QQMusicAlbumIE, tmp_assign_source_803);
    }
    {
        PyObject *tmp_assign_source_804;
        PyObject *tmp_import_name_from_686;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_686 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_686)) {
           tmp_assign_source_804 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_686,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_QQMusicToplistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_804 = IMPORT_NAME(tmp_import_name_from_686, const_str_plain_QQMusicToplistIE);
        }

        if (tmp_assign_source_804 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 888;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_QQMusicToplistIE, tmp_assign_source_804);
    }
    {
        PyObject *tmp_assign_source_805;
        PyObject *tmp_import_name_from_687;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_687 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_687)) {
           tmp_assign_source_805 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_687,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_QQMusicPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_805 = IMPORT_NAME(tmp_import_name_from_687, const_str_plain_QQMusicPlaylistIE);
        }

        if (tmp_assign_source_805 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 888;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_QQMusicPlaylistIE, tmp_assign_source_805);
    }
    goto try_end_115;
    // Exception handler code:
    try_except_handler_115:;
    exception_keeper_type_115 = exception_type;
    exception_keeper_value_115 = exception_value;
    exception_keeper_tb_115 = exception_tb;
    exception_keeper_lineno_115 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_115__module);
    Py_DECREF(tmp_import_from_115__module);
    tmp_import_from_115__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_115;
    exception_value = exception_keeper_value_115;
    exception_tb = exception_keeper_tb_115;
    exception_lineno = exception_keeper_lineno_115;

    goto frame_exception_exit_1;
    // End of try:
    try_end_115:;
    CHECK_OBJECT(tmp_import_from_115__module);
    Py_DECREF(tmp_import_from_115__module);
    tmp_import_from_115__module = NULL;

    {
        PyObject *tmp_assign_source_806;
        PyObject *tmp_name_name_462;
        PyObject *tmp_globals_name_462;
        PyObject *tmp_locals_name_462;
        PyObject *tmp_fromlist_name_462;
        PyObject *tmp_level_name_462;
        tmp_name_name_462 = const_str_plain_r7;
        tmp_globals_name_462 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_462 = Py_None;
        tmp_fromlist_name_462 = const_tuple_str_plain_R7IE_str_plain_R7ArticleIE_tuple;
        tmp_level_name_462 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 895;
        tmp_assign_source_806 = IMPORT_MODULE5(tmp_name_name_462, tmp_globals_name_462, tmp_locals_name_462, tmp_fromlist_name_462, tmp_level_name_462);
        if (tmp_assign_source_806 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 895;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_116__module == NULL);
        tmp_import_from_116__module = tmp_assign_source_806;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_807;
        PyObject *tmp_import_name_from_688;
        CHECK_OBJECT(tmp_import_from_116__module);
        tmp_import_name_from_688 = tmp_import_from_116__module;
        if (PyModule_Check(tmp_import_name_from_688)) {
           tmp_assign_source_807 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_688,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_R7IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_807 = IMPORT_NAME(tmp_import_name_from_688, const_str_plain_R7IE);
        }

        if (tmp_assign_source_807 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 895;

            goto try_except_handler_116;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_R7IE, tmp_assign_source_807);
    }
    {
        PyObject *tmp_assign_source_808;
        PyObject *tmp_import_name_from_689;
        CHECK_OBJECT(tmp_import_from_116__module);
        tmp_import_name_from_689 = tmp_import_from_116__module;
        if (PyModule_Check(tmp_import_name_from_689)) {
           tmp_assign_source_808 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_689,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_R7ArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_808 = IMPORT_NAME(tmp_import_name_from_689, const_str_plain_R7ArticleIE);
        }

        if (tmp_assign_source_808 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 895;

            goto try_except_handler_116;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_R7ArticleIE, tmp_assign_source_808);
    }
    goto try_end_116;
    // Exception handler code:
    try_except_handler_116:;
    exception_keeper_type_116 = exception_type;
    exception_keeper_value_116 = exception_value;
    exception_keeper_tb_116 = exception_tb;
    exception_keeper_lineno_116 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_116__module);
    Py_DECREF(tmp_import_from_116__module);
    tmp_import_from_116__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_116;
    exception_value = exception_keeper_value_116;
    exception_tb = exception_keeper_tb_116;
    exception_lineno = exception_keeper_lineno_116;

    goto frame_exception_exit_1;
    // End of try:
    try_end_116:;
    CHECK_OBJECT(tmp_import_from_116__module);
    Py_DECREF(tmp_import_from_116__module);
    tmp_import_from_116__module = NULL;

    {
        PyObject *tmp_assign_source_809;
        PyObject *tmp_name_name_463;
        PyObject *tmp_globals_name_463;
        PyObject *tmp_locals_name_463;
        PyObject *tmp_fromlist_name_463;
        PyObject *tmp_level_name_463;
        tmp_name_name_463 = const_str_plain_radiocanada;
        tmp_globals_name_463 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_463 = Py_None;
        tmp_fromlist_name_463 = const_tuple_str_plain_RadioCanadaIE_str_plain_RadioCanadaAudioVideoIE_tuple;
        tmp_level_name_463 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 899;
        tmp_assign_source_809 = IMPORT_MODULE5(tmp_name_name_463, tmp_globals_name_463, tmp_locals_name_463, tmp_fromlist_name_463, tmp_level_name_463);
        if (tmp_assign_source_809 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 899;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_117__module == NULL);
        tmp_import_from_117__module = tmp_assign_source_809;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_810;
        PyObject *tmp_import_name_from_690;
        CHECK_OBJECT(tmp_import_from_117__module);
        tmp_import_name_from_690 = tmp_import_from_117__module;
        if (PyModule_Check(tmp_import_name_from_690)) {
           tmp_assign_source_810 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_690,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RadioCanadaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_810 = IMPORT_NAME(tmp_import_name_from_690, const_str_plain_RadioCanadaIE);
        }

        if (tmp_assign_source_810 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 899;

            goto try_except_handler_117;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RadioCanadaIE, tmp_assign_source_810);
    }
    {
        PyObject *tmp_assign_source_811;
        PyObject *tmp_import_name_from_691;
        CHECK_OBJECT(tmp_import_from_117__module);
        tmp_import_name_from_691 = tmp_import_from_117__module;
        if (PyModule_Check(tmp_import_name_from_691)) {
           tmp_assign_source_811 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_691,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RadioCanadaAudioVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_811 = IMPORT_NAME(tmp_import_name_from_691, const_str_plain_RadioCanadaAudioVideoIE);
        }

        if (tmp_assign_source_811 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 899;

            goto try_except_handler_117;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RadioCanadaAudioVideoIE, tmp_assign_source_811);
    }
    goto try_end_117;
    // Exception handler code:
    try_except_handler_117:;
    exception_keeper_type_117 = exception_type;
    exception_keeper_value_117 = exception_value;
    exception_keeper_tb_117 = exception_tb;
    exception_keeper_lineno_117 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_117__module);
    Py_DECREF(tmp_import_from_117__module);
    tmp_import_from_117__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_117;
    exception_value = exception_keeper_value_117;
    exception_tb = exception_keeper_tb_117;
    exception_lineno = exception_keeper_lineno_117;

    goto frame_exception_exit_1;
    // End of try:
    try_end_117:;
    CHECK_OBJECT(tmp_import_from_117__module);
    Py_DECREF(tmp_import_from_117__module);
    tmp_import_from_117__module = NULL;

    {
        PyObject *tmp_assign_source_812;
        PyObject *tmp_import_name_from_692;
        PyObject *tmp_name_name_464;
        PyObject *tmp_globals_name_464;
        PyObject *tmp_locals_name_464;
        PyObject *tmp_fromlist_name_464;
        PyObject *tmp_level_name_464;
        tmp_name_name_464 = const_str_plain_radiode;
        tmp_globals_name_464 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_464 = Py_None;
        tmp_fromlist_name_464 = const_tuple_str_plain_RadioDeIE_tuple;
        tmp_level_name_464 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 903;
        tmp_import_name_from_692 = IMPORT_MODULE5(tmp_name_name_464, tmp_globals_name_464, tmp_locals_name_464, tmp_fromlist_name_464, tmp_level_name_464);
        if (tmp_import_name_from_692 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 903;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_692)) {
           tmp_assign_source_812 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_692,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RadioDeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_812 = IMPORT_NAME(tmp_import_name_from_692, const_str_plain_RadioDeIE);
        }

        Py_DECREF(tmp_import_name_from_692);
        if (tmp_assign_source_812 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 903;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RadioDeIE, tmp_assign_source_812);
    }
    {
        PyObject *tmp_assign_source_813;
        PyObject *tmp_import_name_from_693;
        PyObject *tmp_name_name_465;
        PyObject *tmp_globals_name_465;
        PyObject *tmp_locals_name_465;
        PyObject *tmp_fromlist_name_465;
        PyObject *tmp_level_name_465;
        tmp_name_name_465 = const_str_plain_radiojavan;
        tmp_globals_name_465 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_465 = Py_None;
        tmp_fromlist_name_465 = const_tuple_str_plain_RadioJavanIE_tuple;
        tmp_level_name_465 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 904;
        tmp_import_name_from_693 = IMPORT_MODULE5(tmp_name_name_465, tmp_globals_name_465, tmp_locals_name_465, tmp_fromlist_name_465, tmp_level_name_465);
        if (tmp_import_name_from_693 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 904;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_693)) {
           tmp_assign_source_813 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_693,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RadioJavanIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_813 = IMPORT_NAME(tmp_import_name_from_693, const_str_plain_RadioJavanIE);
        }

        Py_DECREF(tmp_import_name_from_693);
        if (tmp_assign_source_813 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 904;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RadioJavanIE, tmp_assign_source_813);
    }
    {
        PyObject *tmp_assign_source_814;
        PyObject *tmp_import_name_from_694;
        PyObject *tmp_name_name_466;
        PyObject *tmp_globals_name_466;
        PyObject *tmp_locals_name_466;
        PyObject *tmp_fromlist_name_466;
        PyObject *tmp_level_name_466;
        tmp_name_name_466 = const_str_plain_radiobremen;
        tmp_globals_name_466 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_466 = Py_None;
        tmp_fromlist_name_466 = const_tuple_str_plain_RadioBremenIE_tuple;
        tmp_level_name_466 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 905;
        tmp_import_name_from_694 = IMPORT_MODULE5(tmp_name_name_466, tmp_globals_name_466, tmp_locals_name_466, tmp_fromlist_name_466, tmp_level_name_466);
        if (tmp_import_name_from_694 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 905;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_694)) {
           tmp_assign_source_814 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_694,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RadioBremenIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_814 = IMPORT_NAME(tmp_import_name_from_694, const_str_plain_RadioBremenIE);
        }

        Py_DECREF(tmp_import_name_from_694);
        if (tmp_assign_source_814 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 905;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RadioBremenIE, tmp_assign_source_814);
    }
    {
        PyObject *tmp_assign_source_815;
        PyObject *tmp_import_name_from_695;
        PyObject *tmp_name_name_467;
        PyObject *tmp_globals_name_467;
        PyObject *tmp_locals_name_467;
        PyObject *tmp_fromlist_name_467;
        PyObject *tmp_level_name_467;
        tmp_name_name_467 = const_str_plain_radiofrance;
        tmp_globals_name_467 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_467 = Py_None;
        tmp_fromlist_name_467 = const_tuple_str_plain_RadioFranceIE_tuple;
        tmp_level_name_467 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 906;
        tmp_import_name_from_695 = IMPORT_MODULE5(tmp_name_name_467, tmp_globals_name_467, tmp_locals_name_467, tmp_fromlist_name_467, tmp_level_name_467);
        if (tmp_import_name_from_695 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 906;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_695)) {
           tmp_assign_source_815 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_695,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RadioFranceIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_815 = IMPORT_NAME(tmp_import_name_from_695, const_str_plain_RadioFranceIE);
        }

        Py_DECREF(tmp_import_name_from_695);
        if (tmp_assign_source_815 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 906;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RadioFranceIE, tmp_assign_source_815);
    }
    {
        PyObject *tmp_assign_source_816;
        PyObject *tmp_name_name_468;
        PyObject *tmp_globals_name_468;
        PyObject *tmp_locals_name_468;
        PyObject *tmp_fromlist_name_468;
        PyObject *tmp_level_name_468;
        tmp_name_name_468 = const_str_plain_rai;
        tmp_globals_name_468 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_468 = Py_None;
        tmp_fromlist_name_468 = const_tuple_96ffb49cf6b140cfca4cdde1e01282ac_tuple;
        tmp_level_name_468 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 907;
        tmp_assign_source_816 = IMPORT_MODULE5(tmp_name_name_468, tmp_globals_name_468, tmp_locals_name_468, tmp_fromlist_name_468, tmp_level_name_468);
        if (tmp_assign_source_816 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 907;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_118__module == NULL);
        tmp_import_from_118__module = tmp_assign_source_816;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_817;
        PyObject *tmp_import_name_from_696;
        CHECK_OBJECT(tmp_import_from_118__module);
        tmp_import_name_from_696 = tmp_import_from_118__module;
        if (PyModule_Check(tmp_import_name_from_696)) {
           tmp_assign_source_817 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_696,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RaiPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_817 = IMPORT_NAME(tmp_import_name_from_696, const_str_plain_RaiPlayIE);
        }

        if (tmp_assign_source_817 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 907;

            goto try_except_handler_118;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RaiPlayIE, tmp_assign_source_817);
    }
    {
        PyObject *tmp_assign_source_818;
        PyObject *tmp_import_name_from_697;
        CHECK_OBJECT(tmp_import_from_118__module);
        tmp_import_name_from_697 = tmp_import_from_118__module;
        if (PyModule_Check(tmp_import_name_from_697)) {
           tmp_assign_source_818 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_697,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RaiPlayLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_818 = IMPORT_NAME(tmp_import_name_from_697, const_str_plain_RaiPlayLiveIE);
        }

        if (tmp_assign_source_818 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 907;

            goto try_except_handler_118;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RaiPlayLiveIE, tmp_assign_source_818);
    }
    {
        PyObject *tmp_assign_source_819;
        PyObject *tmp_import_name_from_698;
        CHECK_OBJECT(tmp_import_from_118__module);
        tmp_import_name_from_698 = tmp_import_from_118__module;
        if (PyModule_Check(tmp_import_name_from_698)) {
           tmp_assign_source_819 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_698,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RaiPlayPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_819 = IMPORT_NAME(tmp_import_name_from_698, const_str_plain_RaiPlayPlaylistIE);
        }

        if (tmp_assign_source_819 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 907;

            goto try_except_handler_118;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RaiPlayPlaylistIE, tmp_assign_source_819);
    }
    {
        PyObject *tmp_assign_source_820;
        PyObject *tmp_import_name_from_699;
        CHECK_OBJECT(tmp_import_from_118__module);
        tmp_import_name_from_699 = tmp_import_from_118__module;
        if (PyModule_Check(tmp_import_name_from_699)) {
           tmp_assign_source_820 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_699,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RaiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_820 = IMPORT_NAME(tmp_import_name_from_699, const_str_plain_RaiIE);
        }

        if (tmp_assign_source_820 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 907;

            goto try_except_handler_118;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RaiIE, tmp_assign_source_820);
    }
    goto try_end_118;
    // Exception handler code:
    try_except_handler_118:;
    exception_keeper_type_118 = exception_type;
    exception_keeper_value_118 = exception_value;
    exception_keeper_tb_118 = exception_tb;
    exception_keeper_lineno_118 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_118__module);
    Py_DECREF(tmp_import_from_118__module);
    tmp_import_from_118__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_118;
    exception_value = exception_keeper_value_118;
    exception_tb = exception_keeper_tb_118;
    exception_lineno = exception_keeper_lineno_118;

    goto frame_exception_exit_1;
    // End of try:
    try_end_118:;
    CHECK_OBJECT(tmp_import_from_118__module);
    Py_DECREF(tmp_import_from_118__module);
    tmp_import_from_118__module = NULL;

    {
        PyObject *tmp_assign_source_821;
        PyObject *tmp_name_name_469;
        PyObject *tmp_globals_name_469;
        PyObject *tmp_locals_name_469;
        PyObject *tmp_fromlist_name_469;
        PyObject *tmp_level_name_469;
        tmp_name_name_469 = const_str_plain_raywenderlich;
        tmp_globals_name_469 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_469 = Py_None;
        tmp_fromlist_name_469 = const_tuple_str_plain_RayWenderlichIE_str_plain_RayWenderlichCourseIE_tuple;
        tmp_level_name_469 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 913;
        tmp_assign_source_821 = IMPORT_MODULE5(tmp_name_name_469, tmp_globals_name_469, tmp_locals_name_469, tmp_fromlist_name_469, tmp_level_name_469);
        if (tmp_assign_source_821 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 913;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_119__module == NULL);
        tmp_import_from_119__module = tmp_assign_source_821;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_822;
        PyObject *tmp_import_name_from_700;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_700 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_700)) {
           tmp_assign_source_822 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_700,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RayWenderlichIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_822 = IMPORT_NAME(tmp_import_name_from_700, const_str_plain_RayWenderlichIE);
        }

        if (tmp_assign_source_822 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 913;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RayWenderlichIE, tmp_assign_source_822);
    }
    {
        PyObject *tmp_assign_source_823;
        PyObject *tmp_import_name_from_701;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_701 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_701)) {
           tmp_assign_source_823 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_701,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RayWenderlichCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_823 = IMPORT_NAME(tmp_import_name_from_701, const_str_plain_RayWenderlichCourseIE);
        }

        if (tmp_assign_source_823 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 913;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RayWenderlichCourseIE, tmp_assign_source_823);
    }
    goto try_end_119;
    // Exception handler code:
    try_except_handler_119:;
    exception_keeper_type_119 = exception_type;
    exception_keeper_value_119 = exception_value;
    exception_keeper_tb_119 = exception_tb;
    exception_keeper_lineno_119 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_119__module);
    Py_DECREF(tmp_import_from_119__module);
    tmp_import_from_119__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_119;
    exception_value = exception_keeper_value_119;
    exception_tb = exception_keeper_tb_119;
    exception_lineno = exception_keeper_lineno_119;

    goto frame_exception_exit_1;
    // End of try:
    try_end_119:;
    CHECK_OBJECT(tmp_import_from_119__module);
    Py_DECREF(tmp_import_from_119__module);
    tmp_import_from_119__module = NULL;

    {
        PyObject *tmp_assign_source_824;
        PyObject *tmp_import_name_from_702;
        PyObject *tmp_name_name_470;
        PyObject *tmp_globals_name_470;
        PyObject *tmp_locals_name_470;
        PyObject *tmp_fromlist_name_470;
        PyObject *tmp_level_name_470;
        tmp_name_name_470 = const_str_plain_rbmaradio;
        tmp_globals_name_470 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_470 = Py_None;
        tmp_fromlist_name_470 = const_tuple_str_plain_RBMARadioIE_tuple;
        tmp_level_name_470 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 917;
        tmp_import_name_from_702 = IMPORT_MODULE5(tmp_name_name_470, tmp_globals_name_470, tmp_locals_name_470, tmp_fromlist_name_470, tmp_level_name_470);
        if (tmp_import_name_from_702 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 917;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_702)) {
           tmp_assign_source_824 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_702,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RBMARadioIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_824 = IMPORT_NAME(tmp_import_name_from_702, const_str_plain_RBMARadioIE);
        }

        Py_DECREF(tmp_import_name_from_702);
        if (tmp_assign_source_824 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 917;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RBMARadioIE, tmp_assign_source_824);
    }
    {
        PyObject *tmp_assign_source_825;
        PyObject *tmp_import_name_from_703;
        PyObject *tmp_name_name_471;
        PyObject *tmp_globals_name_471;
        PyObject *tmp_locals_name_471;
        PyObject *tmp_fromlist_name_471;
        PyObject *tmp_level_name_471;
        tmp_name_name_471 = const_str_plain_rds;
        tmp_globals_name_471 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_471 = Py_None;
        tmp_fromlist_name_471 = const_tuple_str_plain_RDSIE_tuple;
        tmp_level_name_471 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 918;
        tmp_import_name_from_703 = IMPORT_MODULE5(tmp_name_name_471, tmp_globals_name_471, tmp_locals_name_471, tmp_fromlist_name_471, tmp_level_name_471);
        if (tmp_import_name_from_703 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 918;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_703)) {
           tmp_assign_source_825 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_703,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RDSIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_825 = IMPORT_NAME(tmp_import_name_from_703, const_str_plain_RDSIE);
        }

        Py_DECREF(tmp_import_name_from_703);
        if (tmp_assign_source_825 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 918;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RDSIE, tmp_assign_source_825);
    }
    {
        PyObject *tmp_assign_source_826;
        PyObject *tmp_name_name_472;
        PyObject *tmp_globals_name_472;
        PyObject *tmp_locals_name_472;
        PyObject *tmp_fromlist_name_472;
        PyObject *tmp_level_name_472;
        tmp_name_name_472 = const_str_plain_redbulltv;
        tmp_globals_name_472 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_472 = Py_None;
        tmp_fromlist_name_472 = const_tuple_str_plain_RedBullTVIE_str_plain_RedBullTVRrnContentIE_tuple;
        tmp_level_name_472 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 919;
        tmp_assign_source_826 = IMPORT_MODULE5(tmp_name_name_472, tmp_globals_name_472, tmp_locals_name_472, tmp_fromlist_name_472, tmp_level_name_472);
        if (tmp_assign_source_826 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 919;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_120__module == NULL);
        tmp_import_from_120__module = tmp_assign_source_826;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_827;
        PyObject *tmp_import_name_from_704;
        CHECK_OBJECT(tmp_import_from_120__module);
        tmp_import_name_from_704 = tmp_import_from_120__module;
        if (PyModule_Check(tmp_import_name_from_704)) {
           tmp_assign_source_827 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_704,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RedBullTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_827 = IMPORT_NAME(tmp_import_name_from_704, const_str_plain_RedBullTVIE);
        }

        if (tmp_assign_source_827 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 919;

            goto try_except_handler_120;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RedBullTVIE, tmp_assign_source_827);
    }
    {
        PyObject *tmp_assign_source_828;
        PyObject *tmp_import_name_from_705;
        CHECK_OBJECT(tmp_import_from_120__module);
        tmp_import_name_from_705 = tmp_import_from_120__module;
        if (PyModule_Check(tmp_import_name_from_705)) {
           tmp_assign_source_828 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_705,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RedBullTVRrnContentIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_828 = IMPORT_NAME(tmp_import_name_from_705, const_str_plain_RedBullTVRrnContentIE);
        }

        if (tmp_assign_source_828 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 919;

            goto try_except_handler_120;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RedBullTVRrnContentIE, tmp_assign_source_828);
    }
    goto try_end_120;
    // Exception handler code:
    try_except_handler_120:;
    exception_keeper_type_120 = exception_type;
    exception_keeper_value_120 = exception_value;
    exception_keeper_tb_120 = exception_tb;
    exception_keeper_lineno_120 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_120__module);
    Py_DECREF(tmp_import_from_120__module);
    tmp_import_from_120__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_120;
    exception_value = exception_keeper_value_120;
    exception_tb = exception_keeper_tb_120;
    exception_lineno = exception_keeper_lineno_120;

    goto frame_exception_exit_1;
    // End of try:
    try_end_120:;
    CHECK_OBJECT(tmp_import_from_120__module);
    Py_DECREF(tmp_import_from_120__module);
    tmp_import_from_120__module = NULL;

    {
        PyObject *tmp_assign_source_829;
        PyObject *tmp_name_name_473;
        PyObject *tmp_globals_name_473;
        PyObject *tmp_locals_name_473;
        PyObject *tmp_fromlist_name_473;
        PyObject *tmp_level_name_473;
        tmp_name_name_473 = const_str_plain_reddit;
        tmp_globals_name_473 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_473 = Py_None;
        tmp_fromlist_name_473 = const_tuple_str_plain_RedditIE_str_plain_RedditRIE_tuple;
        tmp_level_name_473 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 923;
        tmp_assign_source_829 = IMPORT_MODULE5(tmp_name_name_473, tmp_globals_name_473, tmp_locals_name_473, tmp_fromlist_name_473, tmp_level_name_473);
        if (tmp_assign_source_829 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 923;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_121__module == NULL);
        tmp_import_from_121__module = tmp_assign_source_829;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_830;
        PyObject *tmp_import_name_from_706;
        CHECK_OBJECT(tmp_import_from_121__module);
        tmp_import_name_from_706 = tmp_import_from_121__module;
        if (PyModule_Check(tmp_import_name_from_706)) {
           tmp_assign_source_830 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_706,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RedditIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_830 = IMPORT_NAME(tmp_import_name_from_706, const_str_plain_RedditIE);
        }

        if (tmp_assign_source_830 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 923;

            goto try_except_handler_121;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RedditIE, tmp_assign_source_830);
    }
    {
        PyObject *tmp_assign_source_831;
        PyObject *tmp_import_name_from_707;
        CHECK_OBJECT(tmp_import_from_121__module);
        tmp_import_name_from_707 = tmp_import_from_121__module;
        if (PyModule_Check(tmp_import_name_from_707)) {
           tmp_assign_source_831 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_707,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RedditRIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_831 = IMPORT_NAME(tmp_import_name_from_707, const_str_plain_RedditRIE);
        }

        if (tmp_assign_source_831 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 923;

            goto try_except_handler_121;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RedditRIE, tmp_assign_source_831);
    }
    goto try_end_121;
    // Exception handler code:
    try_except_handler_121:;
    exception_keeper_type_121 = exception_type;
    exception_keeper_value_121 = exception_value;
    exception_keeper_tb_121 = exception_tb;
    exception_keeper_lineno_121 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_121__module);
    Py_DECREF(tmp_import_from_121__module);
    tmp_import_from_121__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_121;
    exception_value = exception_keeper_value_121;
    exception_tb = exception_keeper_tb_121;
    exception_lineno = exception_keeper_lineno_121;

    goto frame_exception_exit_1;
    // End of try:
    try_end_121:;
    CHECK_OBJECT(tmp_import_from_121__module);
    Py_DECREF(tmp_import_from_121__module);
    tmp_import_from_121__module = NULL;

    {
        PyObject *tmp_assign_source_832;
        PyObject *tmp_import_name_from_708;
        PyObject *tmp_name_name_474;
        PyObject *tmp_globals_name_474;
        PyObject *tmp_locals_name_474;
        PyObject *tmp_fromlist_name_474;
        PyObject *tmp_level_name_474;
        tmp_name_name_474 = const_str_plain_redtube;
        tmp_globals_name_474 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_474 = Py_None;
        tmp_fromlist_name_474 = const_tuple_str_plain_RedTubeIE_tuple;
        tmp_level_name_474 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 927;
        tmp_import_name_from_708 = IMPORT_MODULE5(tmp_name_name_474, tmp_globals_name_474, tmp_locals_name_474, tmp_fromlist_name_474, tmp_level_name_474);
        if (tmp_import_name_from_708 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 927;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_708)) {
           tmp_assign_source_832 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_708,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RedTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_832 = IMPORT_NAME(tmp_import_name_from_708, const_str_plain_RedTubeIE);
        }

        Py_DECREF(tmp_import_name_from_708);
        if (tmp_assign_source_832 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 927;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RedTubeIE, tmp_assign_source_832);
    }
    {
        PyObject *tmp_assign_source_833;
        PyObject *tmp_import_name_from_709;
        PyObject *tmp_name_name_475;
        PyObject *tmp_globals_name_475;
        PyObject *tmp_locals_name_475;
        PyObject *tmp_fromlist_name_475;
        PyObject *tmp_level_name_475;
        tmp_name_name_475 = const_str_plain_regiotv;
        tmp_globals_name_475 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_475 = Py_None;
        tmp_fromlist_name_475 = const_tuple_str_plain_RegioTVIE_tuple;
        tmp_level_name_475 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 928;
        tmp_import_name_from_709 = IMPORT_MODULE5(tmp_name_name_475, tmp_globals_name_475, tmp_locals_name_475, tmp_fromlist_name_475, tmp_level_name_475);
        if (tmp_import_name_from_709 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 928;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_709)) {
           tmp_assign_source_833 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_709,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RegioTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_833 = IMPORT_NAME(tmp_import_name_from_709, const_str_plain_RegioTVIE);
        }

        Py_DECREF(tmp_import_name_from_709);
        if (tmp_assign_source_833 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 928;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RegioTVIE, tmp_assign_source_833);
    }
    {
        PyObject *tmp_assign_source_834;
        PyObject *tmp_name_name_476;
        PyObject *tmp_globals_name_476;
        PyObject *tmp_locals_name_476;
        PyObject *tmp_fromlist_name_476;
        PyObject *tmp_level_name_476;
        tmp_name_name_476 = const_str_plain_rentv;
        tmp_globals_name_476 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_476 = Py_None;
        tmp_fromlist_name_476 = const_tuple_str_plain_RENTVIE_str_plain_RENTVArticleIE_tuple;
        tmp_level_name_476 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 929;
        tmp_assign_source_834 = IMPORT_MODULE5(tmp_name_name_476, tmp_globals_name_476, tmp_locals_name_476, tmp_fromlist_name_476, tmp_level_name_476);
        if (tmp_assign_source_834 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 929;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_122__module == NULL);
        tmp_import_from_122__module = tmp_assign_source_834;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_835;
        PyObject *tmp_import_name_from_710;
        CHECK_OBJECT(tmp_import_from_122__module);
        tmp_import_name_from_710 = tmp_import_from_122__module;
        if (PyModule_Check(tmp_import_name_from_710)) {
           tmp_assign_source_835 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_710,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RENTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_835 = IMPORT_NAME(tmp_import_name_from_710, const_str_plain_RENTVIE);
        }

        if (tmp_assign_source_835 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 929;

            goto try_except_handler_122;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RENTVIE, tmp_assign_source_835);
    }
    {
        PyObject *tmp_assign_source_836;
        PyObject *tmp_import_name_from_711;
        CHECK_OBJECT(tmp_import_from_122__module);
        tmp_import_name_from_711 = tmp_import_from_122__module;
        if (PyModule_Check(tmp_import_name_from_711)) {
           tmp_assign_source_836 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_711,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RENTVArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_836 = IMPORT_NAME(tmp_import_name_from_711, const_str_plain_RENTVArticleIE);
        }

        if (tmp_assign_source_836 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 929;

            goto try_except_handler_122;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RENTVArticleIE, tmp_assign_source_836);
    }
    goto try_end_122;
    // Exception handler code:
    try_except_handler_122:;
    exception_keeper_type_122 = exception_type;
    exception_keeper_value_122 = exception_value;
    exception_keeper_tb_122 = exception_tb;
    exception_keeper_lineno_122 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_122__module);
    Py_DECREF(tmp_import_from_122__module);
    tmp_import_from_122__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_122;
    exception_value = exception_keeper_value_122;
    exception_tb = exception_keeper_tb_122;
    exception_lineno = exception_keeper_lineno_122;

    goto frame_exception_exit_1;
    // End of try:
    try_end_122:;
    CHECK_OBJECT(tmp_import_from_122__module);
    Py_DECREF(tmp_import_from_122__module);
    tmp_import_from_122__module = NULL;

    {
        PyObject *tmp_assign_source_837;
        PyObject *tmp_import_name_from_712;
        PyObject *tmp_name_name_477;
        PyObject *tmp_globals_name_477;
        PyObject *tmp_locals_name_477;
        PyObject *tmp_fromlist_name_477;
        PyObject *tmp_level_name_477;
        tmp_name_name_477 = const_str_plain_restudy;
        tmp_globals_name_477 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_477 = Py_None;
        tmp_fromlist_name_477 = const_tuple_str_plain_RestudyIE_tuple;
        tmp_level_name_477 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 933;
        tmp_import_name_from_712 = IMPORT_MODULE5(tmp_name_name_477, tmp_globals_name_477, tmp_locals_name_477, tmp_fromlist_name_477, tmp_level_name_477);
        if (tmp_import_name_from_712 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 933;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_712)) {
           tmp_assign_source_837 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_712,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RestudyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_837 = IMPORT_NAME(tmp_import_name_from_712, const_str_plain_RestudyIE);
        }

        Py_DECREF(tmp_import_name_from_712);
        if (tmp_assign_source_837 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 933;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RestudyIE, tmp_assign_source_837);
    }
    {
        PyObject *tmp_assign_source_838;
        PyObject *tmp_import_name_from_713;
        PyObject *tmp_name_name_478;
        PyObject *tmp_globals_name_478;
        PyObject *tmp_locals_name_478;
        PyObject *tmp_fromlist_name_478;
        PyObject *tmp_level_name_478;
        tmp_name_name_478 = const_str_plain_reuters;
        tmp_globals_name_478 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_478 = Py_None;
        tmp_fromlist_name_478 = const_tuple_str_plain_ReutersIE_tuple;
        tmp_level_name_478 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 934;
        tmp_import_name_from_713 = IMPORT_MODULE5(tmp_name_name_478, tmp_globals_name_478, tmp_locals_name_478, tmp_fromlist_name_478, tmp_level_name_478);
        if (tmp_import_name_from_713 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 934;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_713)) {
           tmp_assign_source_838 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_713,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ReutersIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_838 = IMPORT_NAME(tmp_import_name_from_713, const_str_plain_ReutersIE);
        }

        Py_DECREF(tmp_import_name_from_713);
        if (tmp_assign_source_838 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 934;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ReutersIE, tmp_assign_source_838);
    }
    {
        PyObject *tmp_assign_source_839;
        PyObject *tmp_import_name_from_714;
        PyObject *tmp_name_name_479;
        PyObject *tmp_globals_name_479;
        PyObject *tmp_locals_name_479;
        PyObject *tmp_fromlist_name_479;
        PyObject *tmp_level_name_479;
        tmp_name_name_479 = const_str_plain_reverbnation;
        tmp_globals_name_479 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_479 = Py_None;
        tmp_fromlist_name_479 = const_tuple_str_plain_ReverbNationIE_tuple;
        tmp_level_name_479 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 935;
        tmp_import_name_from_714 = IMPORT_MODULE5(tmp_name_name_479, tmp_globals_name_479, tmp_locals_name_479, tmp_fromlist_name_479, tmp_level_name_479);
        if (tmp_import_name_from_714 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 935;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_714)) {
           tmp_assign_source_839 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_714,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ReverbNationIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_839 = IMPORT_NAME(tmp_import_name_from_714, const_str_plain_ReverbNationIE);
        }

        Py_DECREF(tmp_import_name_from_714);
        if (tmp_assign_source_839 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 935;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ReverbNationIE, tmp_assign_source_839);
    }
    {
        PyObject *tmp_assign_source_840;
        PyObject *tmp_import_name_from_715;
        PyObject *tmp_name_name_480;
        PyObject *tmp_globals_name_480;
        PyObject *tmp_locals_name_480;
        PyObject *tmp_fromlist_name_480;
        PyObject *tmp_level_name_480;
        tmp_name_name_480 = const_str_plain_rice;
        tmp_globals_name_480 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_480 = Py_None;
        tmp_fromlist_name_480 = const_tuple_str_plain_RICEIE_tuple;
        tmp_level_name_480 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 936;
        tmp_import_name_from_715 = IMPORT_MODULE5(tmp_name_name_480, tmp_globals_name_480, tmp_locals_name_480, tmp_fromlist_name_480, tmp_level_name_480);
        if (tmp_import_name_from_715 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 936;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_715)) {
           tmp_assign_source_840 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_715,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RICEIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_840 = IMPORT_NAME(tmp_import_name_from_715, const_str_plain_RICEIE);
        }

        Py_DECREF(tmp_import_name_from_715);
        if (tmp_assign_source_840 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 936;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RICEIE, tmp_assign_source_840);
    }
    {
        PyObject *tmp_assign_source_841;
        PyObject *tmp_import_name_from_716;
        PyObject *tmp_name_name_481;
        PyObject *tmp_globals_name_481;
        PyObject *tmp_locals_name_481;
        PyObject *tmp_fromlist_name_481;
        PyObject *tmp_level_name_481;
        tmp_name_name_481 = const_str_plain_rmcdecouverte;
        tmp_globals_name_481 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_481 = Py_None;
        tmp_fromlist_name_481 = const_tuple_str_plain_RMCDecouverteIE_tuple;
        tmp_level_name_481 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 937;
        tmp_import_name_from_716 = IMPORT_MODULE5(tmp_name_name_481, tmp_globals_name_481, tmp_locals_name_481, tmp_fromlist_name_481, tmp_level_name_481);
        if (tmp_import_name_from_716 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 937;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_716)) {
           tmp_assign_source_841 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_716,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RMCDecouverteIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_841 = IMPORT_NAME(tmp_import_name_from_716, const_str_plain_RMCDecouverteIE);
        }

        Py_DECREF(tmp_import_name_from_716);
        if (tmp_assign_source_841 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 937;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RMCDecouverteIE, tmp_assign_source_841);
    }
    {
        PyObject *tmp_assign_source_842;
        PyObject *tmp_import_name_from_717;
        PyObject *tmp_name_name_482;
        PyObject *tmp_globals_name_482;
        PyObject *tmp_locals_name_482;
        PyObject *tmp_fromlist_name_482;
        PyObject *tmp_level_name_482;
        tmp_name_name_482 = const_str_plain_ro220;
        tmp_globals_name_482 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_482 = Py_None;
        tmp_fromlist_name_482 = const_tuple_str_plain_Ro220IE_tuple;
        tmp_level_name_482 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 938;
        tmp_import_name_from_717 = IMPORT_MODULE5(tmp_name_name_482, tmp_globals_name_482, tmp_locals_name_482, tmp_fromlist_name_482, tmp_level_name_482);
        if (tmp_import_name_from_717 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 938;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_717)) {
           tmp_assign_source_842 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_717,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Ro220IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_842 = IMPORT_NAME(tmp_import_name_from_717, const_str_plain_Ro220IE);
        }

        Py_DECREF(tmp_import_name_from_717);
        if (tmp_assign_source_842 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 938;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Ro220IE, tmp_assign_source_842);
    }
    {
        PyObject *tmp_assign_source_843;
        PyObject *tmp_import_name_from_718;
        PyObject *tmp_name_name_483;
        PyObject *tmp_globals_name_483;
        PyObject *tmp_locals_name_483;
        PyObject *tmp_fromlist_name_483;
        PyObject *tmp_level_name_483;
        tmp_name_name_483 = const_str_plain_rockstargames;
        tmp_globals_name_483 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_483 = Py_None;
        tmp_fromlist_name_483 = const_tuple_str_plain_RockstarGamesIE_tuple;
        tmp_level_name_483 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 939;
        tmp_import_name_from_718 = IMPORT_MODULE5(tmp_name_name_483, tmp_globals_name_483, tmp_locals_name_483, tmp_fromlist_name_483, tmp_level_name_483);
        if (tmp_import_name_from_718 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 939;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_718)) {
           tmp_assign_source_843 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_718,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RockstarGamesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_843 = IMPORT_NAME(tmp_import_name_from_718, const_str_plain_RockstarGamesIE);
        }

        Py_DECREF(tmp_import_name_from_718);
        if (tmp_assign_source_843 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 939;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RockstarGamesIE, tmp_assign_source_843);
    }
    {
        PyObject *tmp_assign_source_844;
        PyObject *tmp_import_name_from_719;
        PyObject *tmp_name_name_484;
        PyObject *tmp_globals_name_484;
        PyObject *tmp_locals_name_484;
        PyObject *tmp_fromlist_name_484;
        PyObject *tmp_level_name_484;
        tmp_name_name_484 = const_str_plain_roosterteeth;
        tmp_globals_name_484 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_484 = Py_None;
        tmp_fromlist_name_484 = const_tuple_str_plain_RoosterTeethIE_tuple;
        tmp_level_name_484 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 940;
        tmp_import_name_from_719 = IMPORT_MODULE5(tmp_name_name_484, tmp_globals_name_484, tmp_locals_name_484, tmp_fromlist_name_484, tmp_level_name_484);
        if (tmp_import_name_from_719 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 940;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_719)) {
           tmp_assign_source_844 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_719,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RoosterTeethIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_844 = IMPORT_NAME(tmp_import_name_from_719, const_str_plain_RoosterTeethIE);
        }

        Py_DECREF(tmp_import_name_from_719);
        if (tmp_assign_source_844 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 940;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RoosterTeethIE, tmp_assign_source_844);
    }
    {
        PyObject *tmp_assign_source_845;
        PyObject *tmp_import_name_from_720;
        PyObject *tmp_name_name_485;
        PyObject *tmp_globals_name_485;
        PyObject *tmp_locals_name_485;
        PyObject *tmp_fromlist_name_485;
        PyObject *tmp_level_name_485;
        tmp_name_name_485 = const_str_plain_rottentomatoes;
        tmp_globals_name_485 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_485 = Py_None;
        tmp_fromlist_name_485 = const_tuple_str_plain_RottenTomatoesIE_tuple;
        tmp_level_name_485 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 941;
        tmp_import_name_from_720 = IMPORT_MODULE5(tmp_name_name_485, tmp_globals_name_485, tmp_locals_name_485, tmp_fromlist_name_485, tmp_level_name_485);
        if (tmp_import_name_from_720 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 941;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_720)) {
           tmp_assign_source_845 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_720,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RottenTomatoesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_845 = IMPORT_NAME(tmp_import_name_from_720, const_str_plain_RottenTomatoesIE);
        }

        Py_DECREF(tmp_import_name_from_720);
        if (tmp_assign_source_845 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 941;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RottenTomatoesIE, tmp_assign_source_845);
    }
    {
        PyObject *tmp_assign_source_846;
        PyObject *tmp_import_name_from_721;
        PyObject *tmp_name_name_486;
        PyObject *tmp_globals_name_486;
        PyObject *tmp_locals_name_486;
        PyObject *tmp_fromlist_name_486;
        PyObject *tmp_level_name_486;
        tmp_name_name_486 = const_str_plain_roxwel;
        tmp_globals_name_486 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_486 = Py_None;
        tmp_fromlist_name_486 = const_tuple_str_plain_RoxwelIE_tuple;
        tmp_level_name_486 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 942;
        tmp_import_name_from_721 = IMPORT_MODULE5(tmp_name_name_486, tmp_globals_name_486, tmp_locals_name_486, tmp_fromlist_name_486, tmp_level_name_486);
        if (tmp_import_name_from_721 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 942;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_721)) {
           tmp_assign_source_846 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_721,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RoxwelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_846 = IMPORT_NAME(tmp_import_name_from_721, const_str_plain_RoxwelIE);
        }

        Py_DECREF(tmp_import_name_from_721);
        if (tmp_assign_source_846 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 942;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RoxwelIE, tmp_assign_source_846);
    }
    {
        PyObject *tmp_assign_source_847;
        PyObject *tmp_import_name_from_722;
        PyObject *tmp_name_name_487;
        PyObject *tmp_globals_name_487;
        PyObject *tmp_locals_name_487;
        PyObject *tmp_fromlist_name_487;
        PyObject *tmp_level_name_487;
        tmp_name_name_487 = const_str_plain_rozhlas;
        tmp_globals_name_487 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_487 = Py_None;
        tmp_fromlist_name_487 = const_tuple_str_plain_RozhlasIE_tuple;
        tmp_level_name_487 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 943;
        tmp_import_name_from_722 = IMPORT_MODULE5(tmp_name_name_487, tmp_globals_name_487, tmp_locals_name_487, tmp_fromlist_name_487, tmp_level_name_487);
        if (tmp_import_name_from_722 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 943;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_722)) {
           tmp_assign_source_847 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_722,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RozhlasIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_847 = IMPORT_NAME(tmp_import_name_from_722, const_str_plain_RozhlasIE);
        }

        Py_DECREF(tmp_import_name_from_722);
        if (tmp_assign_source_847 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 943;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RozhlasIE, tmp_assign_source_847);
    }
    {
        PyObject *tmp_assign_source_848;
        PyObject *tmp_import_name_from_723;
        PyObject *tmp_name_name_488;
        PyObject *tmp_globals_name_488;
        PyObject *tmp_locals_name_488;
        PyObject *tmp_fromlist_name_488;
        PyObject *tmp_level_name_488;
        tmp_name_name_488 = const_str_plain_rtbf;
        tmp_globals_name_488 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_488 = Py_None;
        tmp_fromlist_name_488 = const_tuple_str_plain_RTBFIE_tuple;
        tmp_level_name_488 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 944;
        tmp_import_name_from_723 = IMPORT_MODULE5(tmp_name_name_488, tmp_globals_name_488, tmp_locals_name_488, tmp_fromlist_name_488, tmp_level_name_488);
        if (tmp_import_name_from_723 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 944;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_723)) {
           tmp_assign_source_848 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_723,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTBFIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_848 = IMPORT_NAME(tmp_import_name_from_723, const_str_plain_RTBFIE);
        }

        Py_DECREF(tmp_import_name_from_723);
        if (tmp_assign_source_848 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 944;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTBFIE, tmp_assign_source_848);
    }
    {
        PyObject *tmp_assign_source_849;
        PyObject *tmp_name_name_489;
        PyObject *tmp_globals_name_489;
        PyObject *tmp_locals_name_489;
        PyObject *tmp_fromlist_name_489;
        PyObject *tmp_level_name_489;
        tmp_name_name_489 = const_str_plain_rte;
        tmp_globals_name_489 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_489 = Py_None;
        tmp_fromlist_name_489 = const_tuple_str_plain_RteIE_str_plain_RteRadioIE_tuple;
        tmp_level_name_489 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 945;
        tmp_assign_source_849 = IMPORT_MODULE5(tmp_name_name_489, tmp_globals_name_489, tmp_locals_name_489, tmp_fromlist_name_489, tmp_level_name_489);
        if (tmp_assign_source_849 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 945;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_123__module == NULL);
        tmp_import_from_123__module = tmp_assign_source_849;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_850;
        PyObject *tmp_import_name_from_724;
        CHECK_OBJECT(tmp_import_from_123__module);
        tmp_import_name_from_724 = tmp_import_from_123__module;
        if (PyModule_Check(tmp_import_name_from_724)) {
           tmp_assign_source_850 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_724,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RteIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_850 = IMPORT_NAME(tmp_import_name_from_724, const_str_plain_RteIE);
        }

        if (tmp_assign_source_850 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 945;

            goto try_except_handler_123;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RteIE, tmp_assign_source_850);
    }
    {
        PyObject *tmp_assign_source_851;
        PyObject *tmp_import_name_from_725;
        CHECK_OBJECT(tmp_import_from_123__module);
        tmp_import_name_from_725 = tmp_import_from_123__module;
        if (PyModule_Check(tmp_import_name_from_725)) {
           tmp_assign_source_851 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_725,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RteRadioIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_851 = IMPORT_NAME(tmp_import_name_from_725, const_str_plain_RteRadioIE);
        }

        if (tmp_assign_source_851 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 945;

            goto try_except_handler_123;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RteRadioIE, tmp_assign_source_851);
    }
    goto try_end_123;
    // Exception handler code:
    try_except_handler_123:;
    exception_keeper_type_123 = exception_type;
    exception_keeper_value_123 = exception_value;
    exception_keeper_tb_123 = exception_tb;
    exception_keeper_lineno_123 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_123__module);
    Py_DECREF(tmp_import_from_123__module);
    tmp_import_from_123__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_123;
    exception_value = exception_keeper_value_123;
    exception_tb = exception_keeper_tb_123;
    exception_lineno = exception_keeper_lineno_123;

    goto frame_exception_exit_1;
    // End of try:
    try_end_123:;
    CHECK_OBJECT(tmp_import_from_123__module);
    Py_DECREF(tmp_import_from_123__module);
    tmp_import_from_123__module = NULL;

    {
        PyObject *tmp_assign_source_852;
        PyObject *tmp_import_name_from_726;
        PyObject *tmp_name_name_490;
        PyObject *tmp_globals_name_490;
        PyObject *tmp_locals_name_490;
        PyObject *tmp_fromlist_name_490;
        PyObject *tmp_level_name_490;
        tmp_name_name_490 = const_str_plain_rtlnl;
        tmp_globals_name_490 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_490 = Py_None;
        tmp_fromlist_name_490 = const_tuple_str_plain_RtlNlIE_tuple;
        tmp_level_name_490 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 946;
        tmp_import_name_from_726 = IMPORT_MODULE5(tmp_name_name_490, tmp_globals_name_490, tmp_locals_name_490, tmp_fromlist_name_490, tmp_level_name_490);
        if (tmp_import_name_from_726 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_726)) {
           tmp_assign_source_852 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_726,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RtlNlIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_852 = IMPORT_NAME(tmp_import_name_from_726, const_str_plain_RtlNlIE);
        }

        Py_DECREF(tmp_import_name_from_726);
        if (tmp_assign_source_852 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RtlNlIE, tmp_assign_source_852);
    }
    {
        PyObject *tmp_assign_source_853;
        PyObject *tmp_name_name_491;
        PyObject *tmp_globals_name_491;
        PyObject *tmp_locals_name_491;
        PyObject *tmp_fromlist_name_491;
        PyObject *tmp_level_name_491;
        tmp_name_name_491 = const_str_plain_rtl2;
        tmp_globals_name_491 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_491 = Py_None;
        tmp_fromlist_name_491 = const_tuple_eeb198c74e1e97891e594a95e7a2f944_tuple;
        tmp_level_name_491 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 947;
        tmp_assign_source_853 = IMPORT_MODULE5(tmp_name_name_491, tmp_globals_name_491, tmp_locals_name_491, tmp_fromlist_name_491, tmp_level_name_491);
        if (tmp_assign_source_853 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 947;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_124__module == NULL);
        tmp_import_from_124__module = tmp_assign_source_853;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_854;
        PyObject *tmp_import_name_from_727;
        CHECK_OBJECT(tmp_import_from_124__module);
        tmp_import_name_from_727 = tmp_import_from_124__module;
        if (PyModule_Check(tmp_import_name_from_727)) {
           tmp_assign_source_854 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_727,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTL2IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_854 = IMPORT_NAME(tmp_import_name_from_727, const_str_plain_RTL2IE);
        }

        if (tmp_assign_source_854 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 947;

            goto try_except_handler_124;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTL2IE, tmp_assign_source_854);
    }
    {
        PyObject *tmp_assign_source_855;
        PyObject *tmp_import_name_from_728;
        CHECK_OBJECT(tmp_import_from_124__module);
        tmp_import_name_from_728 = tmp_import_from_124__module;
        if (PyModule_Check(tmp_import_name_from_728)) {
           tmp_assign_source_855 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_728,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTL2YouIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_855 = IMPORT_NAME(tmp_import_name_from_728, const_str_plain_RTL2YouIE);
        }

        if (tmp_assign_source_855 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 947;

            goto try_except_handler_124;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTL2YouIE, tmp_assign_source_855);
    }
    {
        PyObject *tmp_assign_source_856;
        PyObject *tmp_import_name_from_729;
        CHECK_OBJECT(tmp_import_from_124__module);
        tmp_import_name_from_729 = tmp_import_from_124__module;
        if (PyModule_Check(tmp_import_name_from_729)) {
           tmp_assign_source_856 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_729,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTL2YouSeriesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_856 = IMPORT_NAME(tmp_import_name_from_729, const_str_plain_RTL2YouSeriesIE);
        }

        if (tmp_assign_source_856 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 947;

            goto try_except_handler_124;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTL2YouSeriesIE, tmp_assign_source_856);
    }
    goto try_end_124;
    // Exception handler code:
    try_except_handler_124:;
    exception_keeper_type_124 = exception_type;
    exception_keeper_value_124 = exception_value;
    exception_keeper_tb_124 = exception_tb;
    exception_keeper_lineno_124 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_124__module);
    Py_DECREF(tmp_import_from_124__module);
    tmp_import_from_124__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_124;
    exception_value = exception_keeper_value_124;
    exception_tb = exception_keeper_tb_124;
    exception_lineno = exception_keeper_lineno_124;

    goto frame_exception_exit_1;
    // End of try:
    try_end_124:;
    CHECK_OBJECT(tmp_import_from_124__module);
    Py_DECREF(tmp_import_from_124__module);
    tmp_import_from_124__module = NULL;

    {
        PyObject *tmp_assign_source_857;
        PyObject *tmp_import_name_from_730;
        PyObject *tmp_name_name_492;
        PyObject *tmp_globals_name_492;
        PyObject *tmp_locals_name_492;
        PyObject *tmp_fromlist_name_492;
        PyObject *tmp_level_name_492;
        tmp_name_name_492 = const_str_plain_rtp;
        tmp_globals_name_492 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_492 = Py_None;
        tmp_fromlist_name_492 = const_tuple_str_plain_RTPIE_tuple;
        tmp_level_name_492 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 952;
        tmp_import_name_from_730 = IMPORT_MODULE5(tmp_name_name_492, tmp_globals_name_492, tmp_locals_name_492, tmp_fromlist_name_492, tmp_level_name_492);
        if (tmp_import_name_from_730 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 952;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_730)) {
           tmp_assign_source_857 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_730,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTPIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_857 = IMPORT_NAME(tmp_import_name_from_730, const_str_plain_RTPIE);
        }

        Py_DECREF(tmp_import_name_from_730);
        if (tmp_assign_source_857 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 952;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTPIE, tmp_assign_source_857);
    }
    {
        PyObject *tmp_assign_source_858;
        PyObject *tmp_import_name_from_731;
        PyObject *tmp_name_name_493;
        PyObject *tmp_globals_name_493;
        PyObject *tmp_locals_name_493;
        PyObject *tmp_fromlist_name_493;
        PyObject *tmp_level_name_493;
        tmp_name_name_493 = const_str_plain_rts;
        tmp_globals_name_493 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_493 = Py_None;
        tmp_fromlist_name_493 = const_tuple_str_plain_RTSIE_tuple;
        tmp_level_name_493 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 953;
        tmp_import_name_from_731 = IMPORT_MODULE5(tmp_name_name_493, tmp_globals_name_493, tmp_locals_name_493, tmp_fromlist_name_493, tmp_level_name_493);
        if (tmp_import_name_from_731 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 953;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_731)) {
           tmp_assign_source_858 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_731,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTSIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_858 = IMPORT_NAME(tmp_import_name_from_731, const_str_plain_RTSIE);
        }

        Py_DECREF(tmp_import_name_from_731);
        if (tmp_assign_source_858 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 953;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTSIE, tmp_assign_source_858);
    }
    {
        PyObject *tmp_assign_source_859;
        PyObject *tmp_name_name_494;
        PyObject *tmp_globals_name_494;
        PyObject *tmp_locals_name_494;
        PyObject *tmp_fromlist_name_494;
        PyObject *tmp_level_name_494;
        tmp_name_name_494 = const_str_plain_rtve;
        tmp_globals_name_494 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_494 = Py_None;
        tmp_fromlist_name_494 = const_tuple_dfb2abcf7044378b82c50c23596fc9c3_tuple;
        tmp_level_name_494 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 954;
        tmp_assign_source_859 = IMPORT_MODULE5(tmp_name_name_494, tmp_globals_name_494, tmp_locals_name_494, tmp_fromlist_name_494, tmp_level_name_494);
        if (tmp_assign_source_859 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 954;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_125__module == NULL);
        tmp_import_from_125__module = tmp_assign_source_859;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_860;
        PyObject *tmp_import_name_from_732;
        CHECK_OBJECT(tmp_import_from_125__module);
        tmp_import_name_from_732 = tmp_import_from_125__module;
        if (PyModule_Check(tmp_import_name_from_732)) {
           tmp_assign_source_860 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_732,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTVEALaCartaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_860 = IMPORT_NAME(tmp_import_name_from_732, const_str_plain_RTVEALaCartaIE);
        }

        if (tmp_assign_source_860 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 954;

            goto try_except_handler_125;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTVEALaCartaIE, tmp_assign_source_860);
    }
    {
        PyObject *tmp_assign_source_861;
        PyObject *tmp_import_name_from_733;
        CHECK_OBJECT(tmp_import_from_125__module);
        tmp_import_name_from_733 = tmp_import_from_125__module;
        if (PyModule_Check(tmp_import_name_from_733)) {
           tmp_assign_source_861 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_733,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTVELiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_861 = IMPORT_NAME(tmp_import_name_from_733, const_str_plain_RTVELiveIE);
        }

        if (tmp_assign_source_861 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 954;

            goto try_except_handler_125;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTVELiveIE, tmp_assign_source_861);
    }
    {
        PyObject *tmp_assign_source_862;
        PyObject *tmp_import_name_from_734;
        CHECK_OBJECT(tmp_import_from_125__module);
        tmp_import_name_from_734 = tmp_import_from_125__module;
        if (PyModule_Check(tmp_import_name_from_734)) {
           tmp_assign_source_862 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_734,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTVEInfantilIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_862 = IMPORT_NAME(tmp_import_name_from_734, const_str_plain_RTVEInfantilIE);
        }

        if (tmp_assign_source_862 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 954;

            goto try_except_handler_125;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTVEInfantilIE, tmp_assign_source_862);
    }
    {
        PyObject *tmp_assign_source_863;
        PyObject *tmp_import_name_from_735;
        CHECK_OBJECT(tmp_import_from_125__module);
        tmp_import_name_from_735 = tmp_import_from_125__module;
        if (PyModule_Check(tmp_import_name_from_735)) {
           tmp_assign_source_863 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_735,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTVELiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_863 = IMPORT_NAME(tmp_import_name_from_735, const_str_plain_RTVELiveIE);
        }

        if (tmp_assign_source_863 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 954;

            goto try_except_handler_125;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTVELiveIE, tmp_assign_source_863);
    }
    {
        PyObject *tmp_assign_source_864;
        PyObject *tmp_import_name_from_736;
        CHECK_OBJECT(tmp_import_from_125__module);
        tmp_import_name_from_736 = tmp_import_from_125__module;
        if (PyModule_Check(tmp_import_name_from_736)) {
           tmp_assign_source_864 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_736,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTVETelevisionIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_864 = IMPORT_NAME(tmp_import_name_from_736, const_str_plain_RTVETelevisionIE);
        }

        if (tmp_assign_source_864 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 954;

            goto try_except_handler_125;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTVETelevisionIE, tmp_assign_source_864);
    }
    goto try_end_125;
    // Exception handler code:
    try_except_handler_125:;
    exception_keeper_type_125 = exception_type;
    exception_keeper_value_125 = exception_value;
    exception_keeper_tb_125 = exception_tb;
    exception_keeper_lineno_125 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_125__module);
    Py_DECREF(tmp_import_from_125__module);
    tmp_import_from_125__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_125;
    exception_value = exception_keeper_value_125;
    exception_tb = exception_keeper_tb_125;
    exception_lineno = exception_keeper_lineno_125;

    goto frame_exception_exit_1;
    // End of try:
    try_end_125:;
    CHECK_OBJECT(tmp_import_from_125__module);
    Py_DECREF(tmp_import_from_125__module);
    tmp_import_from_125__module = NULL;

    {
        PyObject *tmp_assign_source_865;
        PyObject *tmp_import_name_from_737;
        PyObject *tmp_name_name_495;
        PyObject *tmp_globals_name_495;
        PyObject *tmp_locals_name_495;
        PyObject *tmp_fromlist_name_495;
        PyObject *tmp_level_name_495;
        tmp_name_name_495 = const_str_plain_rtvnh;
        tmp_globals_name_495 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_495 = Py_None;
        tmp_fromlist_name_495 = const_tuple_str_plain_RTVNHIE_tuple;
        tmp_level_name_495 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 955;
        tmp_import_name_from_737 = IMPORT_MODULE5(tmp_name_name_495, tmp_globals_name_495, tmp_locals_name_495, tmp_fromlist_name_495, tmp_level_name_495);
        if (tmp_import_name_from_737 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 955;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_737)) {
           tmp_assign_source_865 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_737,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTVNHIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_865 = IMPORT_NAME(tmp_import_name_from_737, const_str_plain_RTVNHIE);
        }

        Py_DECREF(tmp_import_name_from_737);
        if (tmp_assign_source_865 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 955;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTVNHIE, tmp_assign_source_865);
    }
    {
        PyObject *tmp_assign_source_866;
        PyObject *tmp_import_name_from_738;
        PyObject *tmp_name_name_496;
        PyObject *tmp_globals_name_496;
        PyObject *tmp_locals_name_496;
        PyObject *tmp_fromlist_name_496;
        PyObject *tmp_level_name_496;
        tmp_name_name_496 = const_str_plain_rtvs;
        tmp_globals_name_496 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_496 = Py_None;
        tmp_fromlist_name_496 = const_tuple_str_plain_RTVSIE_tuple;
        tmp_level_name_496 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 956;
        tmp_import_name_from_738 = IMPORT_MODULE5(tmp_name_name_496, tmp_globals_name_496, tmp_locals_name_496, tmp_fromlist_name_496, tmp_level_name_496);
        if (tmp_import_name_from_738 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 956;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_738)) {
           tmp_assign_source_866 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_738,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RTVSIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_866 = IMPORT_NAME(tmp_import_name_from_738, const_str_plain_RTVSIE);
        }

        Py_DECREF(tmp_import_name_from_738);
        if (tmp_assign_source_866 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 956;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RTVSIE, tmp_assign_source_866);
    }
    {
        PyObject *tmp_assign_source_867;
        PyObject *tmp_import_name_from_739;
        PyObject *tmp_name_name_497;
        PyObject *tmp_globals_name_497;
        PyObject *tmp_locals_name_497;
        PyObject *tmp_fromlist_name_497;
        PyObject *tmp_level_name_497;
        tmp_name_name_497 = const_str_plain_ruhd;
        tmp_globals_name_497 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_497 = Py_None;
        tmp_fromlist_name_497 = const_tuple_str_plain_RUHDIE_tuple;
        tmp_level_name_497 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 957;
        tmp_import_name_from_739 = IMPORT_MODULE5(tmp_name_name_497, tmp_globals_name_497, tmp_locals_name_497, tmp_fromlist_name_497, tmp_level_name_497);
        if (tmp_import_name_from_739 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 957;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_739)) {
           tmp_assign_source_867 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_739,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RUHDIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_867 = IMPORT_NAME(tmp_import_name_from_739, const_str_plain_RUHDIE);
        }

        Py_DECREF(tmp_import_name_from_739);
        if (tmp_assign_source_867 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 957;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RUHDIE, tmp_assign_source_867);
    }
    {
        PyObject *tmp_assign_source_868;
        PyObject *tmp_name_name_498;
        PyObject *tmp_globals_name_498;
        PyObject *tmp_locals_name_498;
        PyObject *tmp_fromlist_name_498;
        PyObject *tmp_level_name_498;
        tmp_name_name_498 = const_str_plain_rutube;
        tmp_globals_name_498 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_498 = Py_None;
        tmp_fromlist_name_498 = const_tuple_9c9ca18509f4854e444165cc528c720f_tuple;
        tmp_level_name_498 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 958;
        tmp_assign_source_868 = IMPORT_MODULE5(tmp_name_name_498, tmp_globals_name_498, tmp_locals_name_498, tmp_fromlist_name_498, tmp_level_name_498);
        if (tmp_assign_source_868 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 958;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_126__module == NULL);
        tmp_import_from_126__module = tmp_assign_source_868;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_869;
        PyObject *tmp_import_name_from_740;
        CHECK_OBJECT(tmp_import_from_126__module);
        tmp_import_name_from_740 = tmp_import_from_126__module;
        if (PyModule_Check(tmp_import_name_from_740)) {
           tmp_assign_source_869 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_740,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RutubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_869 = IMPORT_NAME(tmp_import_name_from_740, const_str_plain_RutubeIE);
        }

        if (tmp_assign_source_869 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 958;

            goto try_except_handler_126;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RutubeIE, tmp_assign_source_869);
    }
    {
        PyObject *tmp_assign_source_870;
        PyObject *tmp_import_name_from_741;
        CHECK_OBJECT(tmp_import_from_126__module);
        tmp_import_name_from_741 = tmp_import_from_126__module;
        if (PyModule_Check(tmp_import_name_from_741)) {
           tmp_assign_source_870 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_741,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RutubeChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_870 = IMPORT_NAME(tmp_import_name_from_741, const_str_plain_RutubeChannelIE);
        }

        if (tmp_assign_source_870 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 958;

            goto try_except_handler_126;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RutubeChannelIE, tmp_assign_source_870);
    }
    {
        PyObject *tmp_assign_source_871;
        PyObject *tmp_import_name_from_742;
        CHECK_OBJECT(tmp_import_from_126__module);
        tmp_import_name_from_742 = tmp_import_from_126__module;
        if (PyModule_Check(tmp_import_name_from_742)) {
           tmp_assign_source_871 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_742,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RutubeEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_871 = IMPORT_NAME(tmp_import_name_from_742, const_str_plain_RutubeEmbedIE);
        }

        if (tmp_assign_source_871 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 958;

            goto try_except_handler_126;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RutubeEmbedIE, tmp_assign_source_871);
    }
    {
        PyObject *tmp_assign_source_872;
        PyObject *tmp_import_name_from_743;
        CHECK_OBJECT(tmp_import_from_126__module);
        tmp_import_name_from_743 = tmp_import_from_126__module;
        if (PyModule_Check(tmp_import_name_from_743)) {
           tmp_assign_source_872 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_743,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RutubeMovieIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_872 = IMPORT_NAME(tmp_import_name_from_743, const_str_plain_RutubeMovieIE);
        }

        if (tmp_assign_source_872 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 958;

            goto try_except_handler_126;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RutubeMovieIE, tmp_assign_source_872);
    }
    {
        PyObject *tmp_assign_source_873;
        PyObject *tmp_import_name_from_744;
        CHECK_OBJECT(tmp_import_from_126__module);
        tmp_import_name_from_744 = tmp_import_from_126__module;
        if (PyModule_Check(tmp_import_name_from_744)) {
           tmp_assign_source_873 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_744,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RutubePersonIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_873 = IMPORT_NAME(tmp_import_name_from_744, const_str_plain_RutubePersonIE);
        }

        if (tmp_assign_source_873 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 958;

            goto try_except_handler_126;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RutubePersonIE, tmp_assign_source_873);
    }
    {
        PyObject *tmp_assign_source_874;
        PyObject *tmp_import_name_from_745;
        CHECK_OBJECT(tmp_import_from_126__module);
        tmp_import_name_from_745 = tmp_import_from_126__module;
        if (PyModule_Check(tmp_import_name_from_745)) {
           tmp_assign_source_874 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_745,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RutubePlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_874 = IMPORT_NAME(tmp_import_name_from_745, const_str_plain_RutubePlaylistIE);
        }

        if (tmp_assign_source_874 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 958;

            goto try_except_handler_126;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RutubePlaylistIE, tmp_assign_source_874);
    }
    goto try_end_126;
    // Exception handler code:
    try_except_handler_126:;
    exception_keeper_type_126 = exception_type;
    exception_keeper_value_126 = exception_value;
    exception_keeper_tb_126 = exception_tb;
    exception_keeper_lineno_126 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_126__module);
    Py_DECREF(tmp_import_from_126__module);
    tmp_import_from_126__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_126;
    exception_value = exception_keeper_value_126;
    exception_tb = exception_keeper_tb_126;
    exception_lineno = exception_keeper_lineno_126;

    goto frame_exception_exit_1;
    // End of try:
    try_end_126:;
    CHECK_OBJECT(tmp_import_from_126__module);
    Py_DECREF(tmp_import_from_126__module);
    tmp_import_from_126__module = NULL;

    {
        PyObject *tmp_assign_source_875;
        PyObject *tmp_import_name_from_746;
        PyObject *tmp_name_name_499;
        PyObject *tmp_globals_name_499;
        PyObject *tmp_locals_name_499;
        PyObject *tmp_fromlist_name_499;
        PyObject *tmp_level_name_499;
        tmp_name_name_499 = const_str_plain_rutv;
        tmp_globals_name_499 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_499 = Py_None;
        tmp_fromlist_name_499 = const_tuple_str_plain_RUTVIE_tuple;
        tmp_level_name_499 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 966;
        tmp_import_name_from_746 = IMPORT_MODULE5(tmp_name_name_499, tmp_globals_name_499, tmp_locals_name_499, tmp_fromlist_name_499, tmp_level_name_499);
        if (tmp_import_name_from_746 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 966;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_746)) {
           tmp_assign_source_875 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_746,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RUTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_875 = IMPORT_NAME(tmp_import_name_from_746, const_str_plain_RUTVIE);
        }

        Py_DECREF(tmp_import_name_from_746);
        if (tmp_assign_source_875 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 966;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RUTVIE, tmp_assign_source_875);
    }
    {
        PyObject *tmp_assign_source_876;
        PyObject *tmp_import_name_from_747;
        PyObject *tmp_name_name_500;
        PyObject *tmp_globals_name_500;
        PyObject *tmp_locals_name_500;
        PyObject *tmp_fromlist_name_500;
        PyObject *tmp_level_name_500;
        tmp_name_name_500 = const_str_plain_ruutu;
        tmp_globals_name_500 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_500 = Py_None;
        tmp_fromlist_name_500 = const_tuple_str_plain_RuutuIE_tuple;
        tmp_level_name_500 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 967;
        tmp_import_name_from_747 = IMPORT_MODULE5(tmp_name_name_500, tmp_globals_name_500, tmp_locals_name_500, tmp_fromlist_name_500, tmp_level_name_500);
        if (tmp_import_name_from_747 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 967;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_747)) {
           tmp_assign_source_876 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_747,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RuutuIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_876 = IMPORT_NAME(tmp_import_name_from_747, const_str_plain_RuutuIE);
        }

        Py_DECREF(tmp_import_name_from_747);
        if (tmp_assign_source_876 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 967;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RuutuIE, tmp_assign_source_876);
    }
    {
        PyObject *tmp_assign_source_877;
        PyObject *tmp_import_name_from_748;
        PyObject *tmp_name_name_501;
        PyObject *tmp_globals_name_501;
        PyObject *tmp_locals_name_501;
        PyObject *tmp_fromlist_name_501;
        PyObject *tmp_level_name_501;
        tmp_name_name_501 = const_str_plain_ruv;
        tmp_globals_name_501 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_501 = Py_None;
        tmp_fromlist_name_501 = const_tuple_str_plain_RuvIE_tuple;
        tmp_level_name_501 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 968;
        tmp_import_name_from_748 = IMPORT_MODULE5(tmp_name_name_501, tmp_globals_name_501, tmp_locals_name_501, tmp_fromlist_name_501, tmp_level_name_501);
        if (tmp_import_name_from_748 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 968;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_748)) {
           tmp_assign_source_877 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_748,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_RuvIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_877 = IMPORT_NAME(tmp_import_name_from_748, const_str_plain_RuvIE);
        }

        Py_DECREF(tmp_import_name_from_748);
        if (tmp_assign_source_877 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 968;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_RuvIE, tmp_assign_source_877);
    }
    {
        PyObject *tmp_assign_source_878;
        PyObject *tmp_name_name_502;
        PyObject *tmp_globals_name_502;
        PyObject *tmp_locals_name_502;
        PyObject *tmp_fromlist_name_502;
        PyObject *tmp_level_name_502;
        tmp_name_name_502 = const_str_plain_safari;
        tmp_globals_name_502 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_502 = Py_None;
        tmp_fromlist_name_502 = const_tuple_d31216b8ee642c4f07770d393768d662_tuple;
        tmp_level_name_502 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 969;
        tmp_assign_source_878 = IMPORT_MODULE5(tmp_name_name_502, tmp_globals_name_502, tmp_locals_name_502, tmp_fromlist_name_502, tmp_level_name_502);
        if (tmp_assign_source_878 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 969;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_127__module == NULL);
        tmp_import_from_127__module = tmp_assign_source_878;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_879;
        PyObject *tmp_import_name_from_749;
        CHECK_OBJECT(tmp_import_from_127__module);
        tmp_import_name_from_749 = tmp_import_from_127__module;
        if (PyModule_Check(tmp_import_name_from_749)) {
           tmp_assign_source_879 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_749,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SafariIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_879 = IMPORT_NAME(tmp_import_name_from_749, const_str_plain_SafariIE);
        }

        if (tmp_assign_source_879 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 969;

            goto try_except_handler_127;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SafariIE, tmp_assign_source_879);
    }
    {
        PyObject *tmp_assign_source_880;
        PyObject *tmp_import_name_from_750;
        CHECK_OBJECT(tmp_import_from_127__module);
        tmp_import_name_from_750 = tmp_import_from_127__module;
        if (PyModule_Check(tmp_import_name_from_750)) {
           tmp_assign_source_880 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_750,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SafariApiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_880 = IMPORT_NAME(tmp_import_name_from_750, const_str_plain_SafariApiIE);
        }

        if (tmp_assign_source_880 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 969;

            goto try_except_handler_127;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SafariApiIE, tmp_assign_source_880);
    }
    {
        PyObject *tmp_assign_source_881;
        PyObject *tmp_import_name_from_751;
        CHECK_OBJECT(tmp_import_from_127__module);
        tmp_import_name_from_751 = tmp_import_from_127__module;
        if (PyModule_Check(tmp_import_name_from_751)) {
           tmp_assign_source_881 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_751,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SafariCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_881 = IMPORT_NAME(tmp_import_name_from_751, const_str_plain_SafariCourseIE);
        }

        if (tmp_assign_source_881 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 969;

            goto try_except_handler_127;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SafariCourseIE, tmp_assign_source_881);
    }
    goto try_end_127;
    // Exception handler code:
    try_except_handler_127:;
    exception_keeper_type_127 = exception_type;
    exception_keeper_value_127 = exception_value;
    exception_keeper_tb_127 = exception_tb;
    exception_keeper_lineno_127 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_127__module);
    Py_DECREF(tmp_import_from_127__module);
    tmp_import_from_127__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_127;
    exception_value = exception_keeper_value_127;
    exception_tb = exception_keeper_tb_127;
    exception_lineno = exception_keeper_lineno_127;

    goto frame_exception_exit_1;
    // End of try:
    try_end_127:;
    CHECK_OBJECT(tmp_import_from_127__module);
    Py_DECREF(tmp_import_from_127__module);
    tmp_import_from_127__module = NULL;

    {
        PyObject *tmp_assign_source_882;
        PyObject *tmp_import_name_from_752;
        PyObject *tmp_name_name_503;
        PyObject *tmp_globals_name_503;
        PyObject *tmp_locals_name_503;
        PyObject *tmp_fromlist_name_503;
        PyObject *tmp_level_name_503;
        tmp_name_name_503 = const_str_plain_sapo;
        tmp_globals_name_503 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_503 = Py_None;
        tmp_fromlist_name_503 = const_tuple_str_plain_SapoIE_tuple;
        tmp_level_name_503 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 974;
        tmp_import_name_from_752 = IMPORT_MODULE5(tmp_name_name_503, tmp_globals_name_503, tmp_locals_name_503, tmp_fromlist_name_503, tmp_level_name_503);
        if (tmp_import_name_from_752 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 974;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_752)) {
           tmp_assign_source_882 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_752,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SapoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_882 = IMPORT_NAME(tmp_import_name_from_752, const_str_plain_SapoIE);
        }

        Py_DECREF(tmp_import_name_from_752);
        if (tmp_assign_source_882 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 974;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SapoIE, tmp_assign_source_882);
    }
    {
        PyObject *tmp_assign_source_883;
        PyObject *tmp_import_name_from_753;
        PyObject *tmp_name_name_504;
        PyObject *tmp_globals_name_504;
        PyObject *tmp_locals_name_504;
        PyObject *tmp_fromlist_name_504;
        PyObject *tmp_level_name_504;
        tmp_name_name_504 = const_str_plain_savefrom;
        tmp_globals_name_504 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_504 = Py_None;
        tmp_fromlist_name_504 = const_tuple_str_plain_SaveFromIE_tuple;
        tmp_level_name_504 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 975;
        tmp_import_name_from_753 = IMPORT_MODULE5(tmp_name_name_504, tmp_globals_name_504, tmp_locals_name_504, tmp_fromlist_name_504, tmp_level_name_504);
        if (tmp_import_name_from_753 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 975;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_753)) {
           tmp_assign_source_883 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_753,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SaveFromIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_883 = IMPORT_NAME(tmp_import_name_from_753, const_str_plain_SaveFromIE);
        }

        Py_DECREF(tmp_import_name_from_753);
        if (tmp_assign_source_883 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 975;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SaveFromIE, tmp_assign_source_883);
    }
    {
        PyObject *tmp_assign_source_884;
        PyObject *tmp_import_name_from_754;
        PyObject *tmp_name_name_505;
        PyObject *tmp_globals_name_505;
        PyObject *tmp_locals_name_505;
        PyObject *tmp_fromlist_name_505;
        PyObject *tmp_level_name_505;
        tmp_name_name_505 = const_str_plain_sbs;
        tmp_globals_name_505 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_505 = Py_None;
        tmp_fromlist_name_505 = const_tuple_str_plain_SBSIE_tuple;
        tmp_level_name_505 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 976;
        tmp_import_name_from_754 = IMPORT_MODULE5(tmp_name_name_505, tmp_globals_name_505, tmp_locals_name_505, tmp_fromlist_name_505, tmp_level_name_505);
        if (tmp_import_name_from_754 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 976;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_754)) {
           tmp_assign_source_884 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_754,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SBSIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_884 = IMPORT_NAME(tmp_import_name_from_754, const_str_plain_SBSIE);
        }

        Py_DECREF(tmp_import_name_from_754);
        if (tmp_assign_source_884 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 976;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SBSIE, tmp_assign_source_884);
    }
    {
        PyObject *tmp_assign_source_885;
        PyObject *tmp_import_name_from_755;
        PyObject *tmp_name_name_506;
        PyObject *tmp_globals_name_506;
        PyObject *tmp_locals_name_506;
        PyObject *tmp_fromlist_name_506;
        PyObject *tmp_level_name_506;
        tmp_name_name_506 = const_str_plain_screencast;
        tmp_globals_name_506 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_506 = Py_None;
        tmp_fromlist_name_506 = const_tuple_str_plain_ScreencastIE_tuple;
        tmp_level_name_506 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 977;
        tmp_import_name_from_755 = IMPORT_MODULE5(tmp_name_name_506, tmp_globals_name_506, tmp_locals_name_506, tmp_fromlist_name_506, tmp_level_name_506);
        if (tmp_import_name_from_755 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 977;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_755)) {
           tmp_assign_source_885 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_755,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ScreencastIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_885 = IMPORT_NAME(tmp_import_name_from_755, const_str_plain_ScreencastIE);
        }

        Py_DECREF(tmp_import_name_from_755);
        if (tmp_assign_source_885 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 977;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ScreencastIE, tmp_assign_source_885);
    }
    {
        PyObject *tmp_assign_source_886;
        PyObject *tmp_import_name_from_756;
        PyObject *tmp_name_name_507;
        PyObject *tmp_globals_name_507;
        PyObject *tmp_locals_name_507;
        PyObject *tmp_fromlist_name_507;
        PyObject *tmp_level_name_507;
        tmp_name_name_507 = const_str_plain_screencastomatic;
        tmp_globals_name_507 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_507 = Py_None;
        tmp_fromlist_name_507 = const_tuple_str_plain_ScreencastOMaticIE_tuple;
        tmp_level_name_507 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 978;
        tmp_import_name_from_756 = IMPORT_MODULE5(tmp_name_name_507, tmp_globals_name_507, tmp_locals_name_507, tmp_fromlist_name_507, tmp_level_name_507);
        if (tmp_import_name_from_756 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 978;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_756)) {
           tmp_assign_source_886 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_756,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ScreencastOMaticIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_886 = IMPORT_NAME(tmp_import_name_from_756, const_str_plain_ScreencastOMaticIE);
        }

        Py_DECREF(tmp_import_name_from_756);
        if (tmp_assign_source_886 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 978;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ScreencastOMaticIE, tmp_assign_source_886);
    }
    {
        PyObject *tmp_assign_source_887;
        PyObject *tmp_name_name_508;
        PyObject *tmp_globals_name_508;
        PyObject *tmp_locals_name_508;
        PyObject *tmp_fromlist_name_508;
        PyObject *tmp_level_name_508;
        tmp_name_name_508 = const_str_plain_scrippsnetworks;
        tmp_globals_name_508 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_508 = Py_None;
        tmp_fromlist_name_508 = const_tuple_str_plain_ScrippsNetworksWatchIE_str_plain_ScrippsNetworksIE_tuple;
        tmp_level_name_508 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 979;
        tmp_assign_source_887 = IMPORT_MODULE5(tmp_name_name_508, tmp_globals_name_508, tmp_locals_name_508, tmp_fromlist_name_508, tmp_level_name_508);
        if (tmp_assign_source_887 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 979;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_128__module == NULL);
        tmp_import_from_128__module = tmp_assign_source_887;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_888;
        PyObject *tmp_import_name_from_757;
        CHECK_OBJECT(tmp_import_from_128__module);
        tmp_import_name_from_757 = tmp_import_from_128__module;
        if (PyModule_Check(tmp_import_name_from_757)) {
           tmp_assign_source_888 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_757,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ScrippsNetworksWatchIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_888 = IMPORT_NAME(tmp_import_name_from_757, const_str_plain_ScrippsNetworksWatchIE);
        }

        if (tmp_assign_source_888 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 979;

            goto try_except_handler_128;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ScrippsNetworksWatchIE, tmp_assign_source_888);
    }
    {
        PyObject *tmp_assign_source_889;
        PyObject *tmp_import_name_from_758;
        CHECK_OBJECT(tmp_import_from_128__module);
        tmp_import_name_from_758 = tmp_import_from_128__module;
        if (PyModule_Check(tmp_import_name_from_758)) {
           tmp_assign_source_889 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_758,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ScrippsNetworksIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_889 = IMPORT_NAME(tmp_import_name_from_758, const_str_plain_ScrippsNetworksIE);
        }

        if (tmp_assign_source_889 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 979;

            goto try_except_handler_128;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ScrippsNetworksIE, tmp_assign_source_889);
    }
    goto try_end_128;
    // Exception handler code:
    try_except_handler_128:;
    exception_keeper_type_128 = exception_type;
    exception_keeper_value_128 = exception_value;
    exception_keeper_tb_128 = exception_tb;
    exception_keeper_lineno_128 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_128__module);
    Py_DECREF(tmp_import_from_128__module);
    tmp_import_from_128__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_128;
    exception_value = exception_keeper_value_128;
    exception_tb = exception_keeper_tb_128;
    exception_lineno = exception_keeper_lineno_128;

    goto frame_exception_exit_1;
    // End of try:
    try_end_128:;
    CHECK_OBJECT(tmp_import_from_128__module);
    Py_DECREF(tmp_import_from_128__module);
    tmp_import_from_128__module = NULL;

    {
        PyObject *tmp_assign_source_890;
        PyObject *tmp_name_name_509;
        PyObject *tmp_globals_name_509;
        PyObject *tmp_locals_name_509;
        PyObject *tmp_fromlist_name_509;
        PyObject *tmp_level_name_509;
        tmp_name_name_509 = const_str_plain_scte;
        tmp_globals_name_509 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_509 = Py_None;
        tmp_fromlist_name_509 = const_tuple_str_plain_SCTEIE_str_plain_SCTECourseIE_tuple;
        tmp_level_name_509 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 983;
        tmp_assign_source_890 = IMPORT_MODULE5(tmp_name_name_509, tmp_globals_name_509, tmp_locals_name_509, tmp_fromlist_name_509, tmp_level_name_509);
        if (tmp_assign_source_890 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 983;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_129__module == NULL);
        tmp_import_from_129__module = tmp_assign_source_890;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_891;
        PyObject *tmp_import_name_from_759;
        CHECK_OBJECT(tmp_import_from_129__module);
        tmp_import_name_from_759 = tmp_import_from_129__module;
        if (PyModule_Check(tmp_import_name_from_759)) {
           tmp_assign_source_891 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_759,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SCTEIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_891 = IMPORT_NAME(tmp_import_name_from_759, const_str_plain_SCTEIE);
        }

        if (tmp_assign_source_891 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 983;

            goto try_except_handler_129;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SCTEIE, tmp_assign_source_891);
    }
    {
        PyObject *tmp_assign_source_892;
        PyObject *tmp_import_name_from_760;
        CHECK_OBJECT(tmp_import_from_129__module);
        tmp_import_name_from_760 = tmp_import_from_129__module;
        if (PyModule_Check(tmp_import_name_from_760)) {
           tmp_assign_source_892 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_760,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SCTECourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_892 = IMPORT_NAME(tmp_import_name_from_760, const_str_plain_SCTECourseIE);
        }

        if (tmp_assign_source_892 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 983;

            goto try_except_handler_129;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SCTECourseIE, tmp_assign_source_892);
    }
    goto try_end_129;
    // Exception handler code:
    try_except_handler_129:;
    exception_keeper_type_129 = exception_type;
    exception_keeper_value_129 = exception_value;
    exception_keeper_tb_129 = exception_tb;
    exception_keeper_lineno_129 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_129__module);
    Py_DECREF(tmp_import_from_129__module);
    tmp_import_from_129__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_129;
    exception_value = exception_keeper_value_129;
    exception_tb = exception_keeper_tb_129;
    exception_lineno = exception_keeper_lineno_129;

    goto frame_exception_exit_1;
    // End of try:
    try_end_129:;
    CHECK_OBJECT(tmp_import_from_129__module);
    Py_DECREF(tmp_import_from_129__module);
    tmp_import_from_129__module = NULL;

    {
        PyObject *tmp_assign_source_893;
        PyObject *tmp_import_name_from_761;
        PyObject *tmp_name_name_510;
        PyObject *tmp_globals_name_510;
        PyObject *tmp_locals_name_510;
        PyObject *tmp_fromlist_name_510;
        PyObject *tmp_level_name_510;
        tmp_name_name_510 = const_str_plain_seeker;
        tmp_globals_name_510 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_510 = Py_None;
        tmp_fromlist_name_510 = const_tuple_str_plain_SeekerIE_tuple;
        tmp_level_name_510 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 987;
        tmp_import_name_from_761 = IMPORT_MODULE5(tmp_name_name_510, tmp_globals_name_510, tmp_locals_name_510, tmp_fromlist_name_510, tmp_level_name_510);
        if (tmp_import_name_from_761 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 987;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_761)) {
           tmp_assign_source_893 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_761,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SeekerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_893 = IMPORT_NAME(tmp_import_name_from_761, const_str_plain_SeekerIE);
        }

        Py_DECREF(tmp_import_name_from_761);
        if (tmp_assign_source_893 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 987;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SeekerIE, tmp_assign_source_893);
    }
    {
        PyObject *tmp_assign_source_894;
        PyObject *tmp_import_name_from_762;
        PyObject *tmp_name_name_511;
        PyObject *tmp_globals_name_511;
        PyObject *tmp_locals_name_511;
        PyObject *tmp_fromlist_name_511;
        PyObject *tmp_level_name_511;
        tmp_name_name_511 = const_str_plain_senateisvp;
        tmp_globals_name_511 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_511 = Py_None;
        tmp_fromlist_name_511 = const_tuple_str_plain_SenateISVPIE_tuple;
        tmp_level_name_511 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 988;
        tmp_import_name_from_762 = IMPORT_MODULE5(tmp_name_name_511, tmp_globals_name_511, tmp_locals_name_511, tmp_fromlist_name_511, tmp_level_name_511);
        if (tmp_import_name_from_762 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 988;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_762)) {
           tmp_assign_source_894 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_762,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SenateISVPIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_894 = IMPORT_NAME(tmp_import_name_from_762, const_str_plain_SenateISVPIE);
        }

        Py_DECREF(tmp_import_name_from_762);
        if (tmp_assign_source_894 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 988;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SenateISVPIE, tmp_assign_source_894);
    }
    {
        PyObject *tmp_assign_source_895;
        PyObject *tmp_import_name_from_763;
        PyObject *tmp_name_name_512;
        PyObject *tmp_globals_name_512;
        PyObject *tmp_locals_name_512;
        PyObject *tmp_fromlist_name_512;
        PyObject *tmp_level_name_512;
        tmp_name_name_512 = const_str_plain_sendtonews;
        tmp_globals_name_512 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_512 = Py_None;
        tmp_fromlist_name_512 = const_tuple_str_plain_SendtoNewsIE_tuple;
        tmp_level_name_512 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 989;
        tmp_import_name_from_763 = IMPORT_MODULE5(tmp_name_name_512, tmp_globals_name_512, tmp_locals_name_512, tmp_fromlist_name_512, tmp_level_name_512);
        if (tmp_import_name_from_763 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 989;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_763)) {
           tmp_assign_source_895 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_763,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SendtoNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_895 = IMPORT_NAME(tmp_import_name_from_763, const_str_plain_SendtoNewsIE);
        }

        Py_DECREF(tmp_import_name_from_763);
        if (tmp_assign_source_895 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 989;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SendtoNewsIE, tmp_assign_source_895);
    }
    {
        PyObject *tmp_assign_source_896;
        PyObject *tmp_import_name_from_764;
        PyObject *tmp_name_name_513;
        PyObject *tmp_globals_name_513;
        PyObject *tmp_locals_name_513;
        PyObject *tmp_fromlist_name_513;
        PyObject *tmp_level_name_513;
        tmp_name_name_513 = const_str_plain_servus;
        tmp_globals_name_513 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_513 = Py_None;
        tmp_fromlist_name_513 = const_tuple_str_plain_ServusIE_tuple;
        tmp_level_name_513 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 990;
        tmp_import_name_from_764 = IMPORT_MODULE5(tmp_name_name_513, tmp_globals_name_513, tmp_locals_name_513, tmp_fromlist_name_513, tmp_level_name_513);
        if (tmp_import_name_from_764 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 990;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_764)) {
           tmp_assign_source_896 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_764,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ServusIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_896 = IMPORT_NAME(tmp_import_name_from_764, const_str_plain_ServusIE);
        }

        Py_DECREF(tmp_import_name_from_764);
        if (tmp_assign_source_896 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 990;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ServusIE, tmp_assign_source_896);
    }
    {
        PyObject *tmp_assign_source_897;
        PyObject *tmp_import_name_from_765;
        PyObject *tmp_name_name_514;
        PyObject *tmp_globals_name_514;
        PyObject *tmp_locals_name_514;
        PyObject *tmp_fromlist_name_514;
        PyObject *tmp_level_name_514;
        tmp_name_name_514 = const_str_plain_sevenplus;
        tmp_globals_name_514 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_514 = Py_None;
        tmp_fromlist_name_514 = const_tuple_str_plain_SevenPlusIE_tuple;
        tmp_level_name_514 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 991;
        tmp_import_name_from_765 = IMPORT_MODULE5(tmp_name_name_514, tmp_globals_name_514, tmp_locals_name_514, tmp_fromlist_name_514, tmp_level_name_514);
        if (tmp_import_name_from_765 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 991;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_765)) {
           tmp_assign_source_897 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_765,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SevenPlusIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_897 = IMPORT_NAME(tmp_import_name_from_765, const_str_plain_SevenPlusIE);
        }

        Py_DECREF(tmp_import_name_from_765);
        if (tmp_assign_source_897 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 991;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SevenPlusIE, tmp_assign_source_897);
    }
    {
        PyObject *tmp_assign_source_898;
        PyObject *tmp_import_name_from_766;
        PyObject *tmp_name_name_515;
        PyObject *tmp_globals_name_515;
        PyObject *tmp_locals_name_515;
        PyObject *tmp_fromlist_name_515;
        PyObject *tmp_level_name_515;
        tmp_name_name_515 = const_str_plain_sexu;
        tmp_globals_name_515 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_515 = Py_None;
        tmp_fromlist_name_515 = const_tuple_str_plain_SexuIE_tuple;
        tmp_level_name_515 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 992;
        tmp_import_name_from_766 = IMPORT_MODULE5(tmp_name_name_515, tmp_globals_name_515, tmp_locals_name_515, tmp_fromlist_name_515, tmp_level_name_515);
        if (tmp_import_name_from_766 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 992;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_766)) {
           tmp_assign_source_898 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_766,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SexuIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_898 = IMPORT_NAME(tmp_import_name_from_766, const_str_plain_SexuIE);
        }

        Py_DECREF(tmp_import_name_from_766);
        if (tmp_assign_source_898 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 992;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SexuIE, tmp_assign_source_898);
    }
    {
        PyObject *tmp_assign_source_899;
        PyObject *tmp_name_name_516;
        PyObject *tmp_globals_name_516;
        PyObject *tmp_locals_name_516;
        PyObject *tmp_fromlist_name_516;
        PyObject *tmp_level_name_516;
        tmp_name_name_516 = const_str_plain_seznamzpravy;
        tmp_globals_name_516 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_516 = Py_None;
        tmp_fromlist_name_516 = const_tuple_str_plain_SeznamZpravyIE_str_plain_SeznamZpravyArticleIE_tuple;
        tmp_level_name_516 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 993;
        tmp_assign_source_899 = IMPORT_MODULE5(tmp_name_name_516, tmp_globals_name_516, tmp_locals_name_516, tmp_fromlist_name_516, tmp_level_name_516);
        if (tmp_assign_source_899 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 993;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_130__module == NULL);
        tmp_import_from_130__module = tmp_assign_source_899;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_900;
        PyObject *tmp_import_name_from_767;
        CHECK_OBJECT(tmp_import_from_130__module);
        tmp_import_name_from_767 = tmp_import_from_130__module;
        if (PyModule_Check(tmp_import_name_from_767)) {
           tmp_assign_source_900 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_767,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SeznamZpravyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_900 = IMPORT_NAME(tmp_import_name_from_767, const_str_plain_SeznamZpravyIE);
        }

        if (tmp_assign_source_900 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 993;

            goto try_except_handler_130;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SeznamZpravyIE, tmp_assign_source_900);
    }
    {
        PyObject *tmp_assign_source_901;
        PyObject *tmp_import_name_from_768;
        CHECK_OBJECT(tmp_import_from_130__module);
        tmp_import_name_from_768 = tmp_import_from_130__module;
        if (PyModule_Check(tmp_import_name_from_768)) {
           tmp_assign_source_901 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_768,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SeznamZpravyArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_901 = IMPORT_NAME(tmp_import_name_from_768, const_str_plain_SeznamZpravyArticleIE);
        }

        if (tmp_assign_source_901 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 993;

            goto try_except_handler_130;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SeznamZpravyArticleIE, tmp_assign_source_901);
    }
    goto try_end_130;
    // Exception handler code:
    try_except_handler_130:;
    exception_keeper_type_130 = exception_type;
    exception_keeper_value_130 = exception_value;
    exception_keeper_tb_130 = exception_tb;
    exception_keeper_lineno_130 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_130__module);
    Py_DECREF(tmp_import_from_130__module);
    tmp_import_from_130__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_130;
    exception_value = exception_keeper_value_130;
    exception_tb = exception_keeper_tb_130;
    exception_lineno = exception_keeper_lineno_130;

    goto frame_exception_exit_1;
    // End of try:
    try_end_130:;
    CHECK_OBJECT(tmp_import_from_130__module);
    Py_DECREF(tmp_import_from_130__module);
    tmp_import_from_130__module = NULL;

    {
        PyObject *tmp_assign_source_902;
        PyObject *tmp_name_name_517;
        PyObject *tmp_globals_name_517;
        PyObject *tmp_locals_name_517;
        PyObject *tmp_fromlist_name_517;
        PyObject *tmp_level_name_517;
        tmp_name_name_517 = const_str_plain_shahid;
        tmp_globals_name_517 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_517 = Py_None;
        tmp_fromlist_name_517 = const_tuple_str_plain_ShahidIE_str_plain_ShahidShowIE_tuple;
        tmp_level_name_517 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 997;
        tmp_assign_source_902 = IMPORT_MODULE5(tmp_name_name_517, tmp_globals_name_517, tmp_locals_name_517, tmp_fromlist_name_517, tmp_level_name_517);
        if (tmp_assign_source_902 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 997;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_131__module == NULL);
        tmp_import_from_131__module = tmp_assign_source_902;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_903;
        PyObject *tmp_import_name_from_769;
        CHECK_OBJECT(tmp_import_from_131__module);
        tmp_import_name_from_769 = tmp_import_from_131__module;
        if (PyModule_Check(tmp_import_name_from_769)) {
           tmp_assign_source_903 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_769,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ShahidIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_903 = IMPORT_NAME(tmp_import_name_from_769, const_str_plain_ShahidIE);
        }

        if (tmp_assign_source_903 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 997;

            goto try_except_handler_131;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ShahidIE, tmp_assign_source_903);
    }
    {
        PyObject *tmp_assign_source_904;
        PyObject *tmp_import_name_from_770;
        CHECK_OBJECT(tmp_import_from_131__module);
        tmp_import_name_from_770 = tmp_import_from_131__module;
        if (PyModule_Check(tmp_import_name_from_770)) {
           tmp_assign_source_904 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_770,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ShahidShowIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_904 = IMPORT_NAME(tmp_import_name_from_770, const_str_plain_ShahidShowIE);
        }

        if (tmp_assign_source_904 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 997;

            goto try_except_handler_131;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ShahidShowIE, tmp_assign_source_904);
    }
    goto try_end_131;
    // Exception handler code:
    try_except_handler_131:;
    exception_keeper_type_131 = exception_type;
    exception_keeper_value_131 = exception_value;
    exception_keeper_tb_131 = exception_tb;
    exception_keeper_lineno_131 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_131__module);
    Py_DECREF(tmp_import_from_131__module);
    tmp_import_from_131__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_131;
    exception_value = exception_keeper_value_131;
    exception_tb = exception_keeper_tb_131;
    exception_lineno = exception_keeper_lineno_131;

    goto frame_exception_exit_1;
    // End of try:
    try_end_131:;
    CHECK_OBJECT(tmp_import_from_131__module);
    Py_DECREF(tmp_import_from_131__module);
    tmp_import_from_131__module = NULL;

    {
        PyObject *tmp_assign_source_905;
        PyObject *tmp_name_name_518;
        PyObject *tmp_globals_name_518;
        PyObject *tmp_locals_name_518;
        PyObject *tmp_fromlist_name_518;
        PyObject *tmp_level_name_518;
        tmp_name_name_518 = const_str_plain_shared;
        tmp_globals_name_518 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_518 = Py_None;
        tmp_fromlist_name_518 = const_tuple_str_plain_SharedIE_str_plain_VivoIE_tuple;
        tmp_level_name_518 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1001;
        tmp_assign_source_905 = IMPORT_MODULE5(tmp_name_name_518, tmp_globals_name_518, tmp_locals_name_518, tmp_fromlist_name_518, tmp_level_name_518);
        if (tmp_assign_source_905 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1001;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_132__module == NULL);
        tmp_import_from_132__module = tmp_assign_source_905;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_906;
        PyObject *tmp_import_name_from_771;
        CHECK_OBJECT(tmp_import_from_132__module);
        tmp_import_name_from_771 = tmp_import_from_132__module;
        if (PyModule_Check(tmp_import_name_from_771)) {
           tmp_assign_source_906 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_771,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SharedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_906 = IMPORT_NAME(tmp_import_name_from_771, const_str_plain_SharedIE);
        }

        if (tmp_assign_source_906 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1001;

            goto try_except_handler_132;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SharedIE, tmp_assign_source_906);
    }
    {
        PyObject *tmp_assign_source_907;
        PyObject *tmp_import_name_from_772;
        CHECK_OBJECT(tmp_import_from_132__module);
        tmp_import_name_from_772 = tmp_import_from_132__module;
        if (PyModule_Check(tmp_import_name_from_772)) {
           tmp_assign_source_907 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_772,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VivoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_907 = IMPORT_NAME(tmp_import_name_from_772, const_str_plain_VivoIE);
        }

        if (tmp_assign_source_907 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1001;

            goto try_except_handler_132;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VivoIE, tmp_assign_source_907);
    }
    goto try_end_132;
    // Exception handler code:
    try_except_handler_132:;
    exception_keeper_type_132 = exception_type;
    exception_keeper_value_132 = exception_value;
    exception_keeper_tb_132 = exception_tb;
    exception_keeper_lineno_132 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_132__module);
    Py_DECREF(tmp_import_from_132__module);
    tmp_import_from_132__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_132;
    exception_value = exception_keeper_value_132;
    exception_tb = exception_keeper_tb_132;
    exception_lineno = exception_keeper_lineno_132;

    goto frame_exception_exit_1;
    // End of try:
    try_end_132:;
    CHECK_OBJECT(tmp_import_from_132__module);
    Py_DECREF(tmp_import_from_132__module);
    tmp_import_from_132__module = NULL;

    {
        PyObject *tmp_assign_source_908;
        PyObject *tmp_import_name_from_773;
        PyObject *tmp_name_name_519;
        PyObject *tmp_globals_name_519;
        PyObject *tmp_locals_name_519;
        PyObject *tmp_fromlist_name_519;
        PyObject *tmp_level_name_519;
        tmp_name_name_519 = const_str_plain_showroomlive;
        tmp_globals_name_519 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_519 = Py_None;
        tmp_fromlist_name_519 = const_tuple_str_plain_ShowRoomLiveIE_tuple;
        tmp_level_name_519 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1005;
        tmp_import_name_from_773 = IMPORT_MODULE5(tmp_name_name_519, tmp_globals_name_519, tmp_locals_name_519, tmp_fromlist_name_519, tmp_level_name_519);
        if (tmp_import_name_from_773 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1005;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_773)) {
           tmp_assign_source_908 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_773,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ShowRoomLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_908 = IMPORT_NAME(tmp_import_name_from_773, const_str_plain_ShowRoomLiveIE);
        }

        Py_DECREF(tmp_import_name_from_773);
        if (tmp_assign_source_908 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1005;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ShowRoomLiveIE, tmp_assign_source_908);
    }
    {
        PyObject *tmp_assign_source_909;
        PyObject *tmp_import_name_from_774;
        PyObject *tmp_name_name_520;
        PyObject *tmp_globals_name_520;
        PyObject *tmp_locals_name_520;
        PyObject *tmp_fromlist_name_520;
        PyObject *tmp_level_name_520;
        tmp_name_name_520 = const_str_plain_sina;
        tmp_globals_name_520 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_520 = Py_None;
        tmp_fromlist_name_520 = const_tuple_str_plain_SinaIE_tuple;
        tmp_level_name_520 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1006;
        tmp_import_name_from_774 = IMPORT_MODULE5(tmp_name_name_520, tmp_globals_name_520, tmp_locals_name_520, tmp_fromlist_name_520, tmp_level_name_520);
        if (tmp_import_name_from_774 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1006;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_774)) {
           tmp_assign_source_909 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_774,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SinaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_909 = IMPORT_NAME(tmp_import_name_from_774, const_str_plain_SinaIE);
        }

        Py_DECREF(tmp_import_name_from_774);
        if (tmp_assign_source_909 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1006;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SinaIE, tmp_assign_source_909);
    }
    {
        PyObject *tmp_assign_source_910;
        PyObject *tmp_import_name_from_775;
        PyObject *tmp_name_name_521;
        PyObject *tmp_globals_name_521;
        PyObject *tmp_locals_name_521;
        PyObject *tmp_fromlist_name_521;
        PyObject *tmp_level_name_521;
        tmp_name_name_521 = const_str_plain_sixplay;
        tmp_globals_name_521 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_521 = Py_None;
        tmp_fromlist_name_521 = const_tuple_str_plain_SixPlayIE_tuple;
        tmp_level_name_521 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1007;
        tmp_import_name_from_775 = IMPORT_MODULE5(tmp_name_name_521, tmp_globals_name_521, tmp_locals_name_521, tmp_fromlist_name_521, tmp_level_name_521);
        if (tmp_import_name_from_775 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1007;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_775)) {
           tmp_assign_source_910 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_775,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SixPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_910 = IMPORT_NAME(tmp_import_name_from_775, const_str_plain_SixPlayIE);
        }

        Py_DECREF(tmp_import_name_from_775);
        if (tmp_assign_source_910 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1007;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SixPlayIE, tmp_assign_source_910);
    }
    {
        PyObject *tmp_assign_source_911;
        PyObject *tmp_import_name_from_776;
        PyObject *tmp_name_name_522;
        PyObject *tmp_globals_name_522;
        PyObject *tmp_locals_name_522;
        PyObject *tmp_fromlist_name_522;
        PyObject *tmp_level_name_522;
        tmp_name_name_522 = const_str_plain_skylinewebcams;
        tmp_globals_name_522 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_522 = Py_None;
        tmp_fromlist_name_522 = const_tuple_str_plain_SkylineWebcamsIE_tuple;
        tmp_level_name_522 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1008;
        tmp_import_name_from_776 = IMPORT_MODULE5(tmp_name_name_522, tmp_globals_name_522, tmp_locals_name_522, tmp_fromlist_name_522, tmp_level_name_522);
        if (tmp_import_name_from_776 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1008;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_776)) {
           tmp_assign_source_911 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_776,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SkylineWebcamsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_911 = IMPORT_NAME(tmp_import_name_from_776, const_str_plain_SkylineWebcamsIE);
        }

        Py_DECREF(tmp_import_name_from_776);
        if (tmp_assign_source_911 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1008;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SkylineWebcamsIE, tmp_assign_source_911);
    }
    {
        PyObject *tmp_assign_source_912;
        PyObject *tmp_name_name_523;
        PyObject *tmp_globals_name_523;
        PyObject *tmp_locals_name_523;
        PyObject *tmp_fromlist_name_523;
        PyObject *tmp_level_name_523;
        tmp_name_name_523 = const_str_plain_skynewsarabia;
        tmp_globals_name_523 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_523 = Py_None;
        tmp_fromlist_name_523 = const_tuple_str_plain_SkyNewsArabiaIE_str_plain_SkyNewsArabiaArticleIE_tuple;
        tmp_level_name_523 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1009;
        tmp_assign_source_912 = IMPORT_MODULE5(tmp_name_name_523, tmp_globals_name_523, tmp_locals_name_523, tmp_fromlist_name_523, tmp_level_name_523);
        if (tmp_assign_source_912 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1009;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_133__module == NULL);
        tmp_import_from_133__module = tmp_assign_source_912;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_913;
        PyObject *tmp_import_name_from_777;
        CHECK_OBJECT(tmp_import_from_133__module);
        tmp_import_name_from_777 = tmp_import_from_133__module;
        if (PyModule_Check(tmp_import_name_from_777)) {
           tmp_assign_source_913 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_777,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SkyNewsArabiaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_913 = IMPORT_NAME(tmp_import_name_from_777, const_str_plain_SkyNewsArabiaIE);
        }

        if (tmp_assign_source_913 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1009;

            goto try_except_handler_133;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SkyNewsArabiaIE, tmp_assign_source_913);
    }
    {
        PyObject *tmp_assign_source_914;
        PyObject *tmp_import_name_from_778;
        CHECK_OBJECT(tmp_import_from_133__module);
        tmp_import_name_from_778 = tmp_import_from_133__module;
        if (PyModule_Check(tmp_import_name_from_778)) {
           tmp_assign_source_914 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_778,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SkyNewsArabiaArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_914 = IMPORT_NAME(tmp_import_name_from_778, const_str_plain_SkyNewsArabiaArticleIE);
        }

        if (tmp_assign_source_914 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1009;

            goto try_except_handler_133;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SkyNewsArabiaArticleIE, tmp_assign_source_914);
    }
    goto try_end_133;
    // Exception handler code:
    try_except_handler_133:;
    exception_keeper_type_133 = exception_type;
    exception_keeper_value_133 = exception_value;
    exception_keeper_tb_133 = exception_tb;
    exception_keeper_lineno_133 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_133__module);
    Py_DECREF(tmp_import_from_133__module);
    tmp_import_from_133__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_133;
    exception_value = exception_keeper_value_133;
    exception_tb = exception_keeper_tb_133;
    exception_lineno = exception_keeper_lineno_133;

    goto frame_exception_exit_1;
    // End of try:
    try_end_133:;
    CHECK_OBJECT(tmp_import_from_133__module);
    Py_DECREF(tmp_import_from_133__module);
    tmp_import_from_133__module = NULL;

    {
        PyObject *tmp_assign_source_915;
        PyObject *tmp_name_name_524;
        PyObject *tmp_globals_name_524;
        PyObject *tmp_locals_name_524;
        PyObject *tmp_fromlist_name_524;
        PyObject *tmp_level_name_524;
        tmp_name_name_524 = const_str_plain_sky;
        tmp_globals_name_524 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_524 = Py_None;
        tmp_fromlist_name_524 = const_tuple_str_plain_SkyNewsIE_str_plain_SkySportsIE_tuple;
        tmp_level_name_524 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1013;
        tmp_assign_source_915 = IMPORT_MODULE5(tmp_name_name_524, tmp_globals_name_524, tmp_locals_name_524, tmp_fromlist_name_524, tmp_level_name_524);
        if (tmp_assign_source_915 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1013;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_134__module == NULL);
        tmp_import_from_134__module = tmp_assign_source_915;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_916;
        PyObject *tmp_import_name_from_779;
        CHECK_OBJECT(tmp_import_from_134__module);
        tmp_import_name_from_779 = tmp_import_from_134__module;
        if (PyModule_Check(tmp_import_name_from_779)) {
           tmp_assign_source_916 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_779,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SkyNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_916 = IMPORT_NAME(tmp_import_name_from_779, const_str_plain_SkyNewsIE);
        }

        if (tmp_assign_source_916 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1013;

            goto try_except_handler_134;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SkyNewsIE, tmp_assign_source_916);
    }
    {
        PyObject *tmp_assign_source_917;
        PyObject *tmp_import_name_from_780;
        CHECK_OBJECT(tmp_import_from_134__module);
        tmp_import_name_from_780 = tmp_import_from_134__module;
        if (PyModule_Check(tmp_import_name_from_780)) {
           tmp_assign_source_917 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_780,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SkySportsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_917 = IMPORT_NAME(tmp_import_name_from_780, const_str_plain_SkySportsIE);
        }

        if (tmp_assign_source_917 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1013;

            goto try_except_handler_134;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SkySportsIE, tmp_assign_source_917);
    }
    goto try_end_134;
    // Exception handler code:
    try_except_handler_134:;
    exception_keeper_type_134 = exception_type;
    exception_keeper_value_134 = exception_value;
    exception_keeper_tb_134 = exception_tb;
    exception_keeper_lineno_134 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_134__module);
    Py_DECREF(tmp_import_from_134__module);
    tmp_import_from_134__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_134;
    exception_value = exception_keeper_value_134;
    exception_tb = exception_keeper_tb_134;
    exception_lineno = exception_keeper_lineno_134;

    goto frame_exception_exit_1;
    // End of try:
    try_end_134:;
    CHECK_OBJECT(tmp_import_from_134__module);
    Py_DECREF(tmp_import_from_134__module);
    tmp_import_from_134__module = NULL;

    {
        PyObject *tmp_assign_source_918;
        PyObject *tmp_import_name_from_781;
        PyObject *tmp_name_name_525;
        PyObject *tmp_globals_name_525;
        PyObject *tmp_locals_name_525;
        PyObject *tmp_fromlist_name_525;
        PyObject *tmp_level_name_525;
        tmp_name_name_525 = const_str_plain_slideshare;
        tmp_globals_name_525 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_525 = Py_None;
        tmp_fromlist_name_525 = const_tuple_str_plain_SlideshareIE_tuple;
        tmp_level_name_525 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1017;
        tmp_import_name_from_781 = IMPORT_MODULE5(tmp_name_name_525, tmp_globals_name_525, tmp_locals_name_525, tmp_fromlist_name_525, tmp_level_name_525);
        if (tmp_import_name_from_781 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1017;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_781)) {
           tmp_assign_source_918 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_781,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SlideshareIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_918 = IMPORT_NAME(tmp_import_name_from_781, const_str_plain_SlideshareIE);
        }

        Py_DECREF(tmp_import_name_from_781);
        if (tmp_assign_source_918 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1017;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SlideshareIE, tmp_assign_source_918);
    }
    {
        PyObject *tmp_assign_source_919;
        PyObject *tmp_import_name_from_782;
        PyObject *tmp_name_name_526;
        PyObject *tmp_globals_name_526;
        PyObject *tmp_locals_name_526;
        PyObject *tmp_fromlist_name_526;
        PyObject *tmp_level_name_526;
        tmp_name_name_526 = const_str_plain_slideslive;
        tmp_globals_name_526 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_526 = Py_None;
        tmp_fromlist_name_526 = const_tuple_str_plain_SlidesLiveIE_tuple;
        tmp_level_name_526 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1018;
        tmp_import_name_from_782 = IMPORT_MODULE5(tmp_name_name_526, tmp_globals_name_526, tmp_locals_name_526, tmp_fromlist_name_526, tmp_level_name_526);
        if (tmp_import_name_from_782 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1018;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_782)) {
           tmp_assign_source_919 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_782,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SlidesLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_919 = IMPORT_NAME(tmp_import_name_from_782, const_str_plain_SlidesLiveIE);
        }

        Py_DECREF(tmp_import_name_from_782);
        if (tmp_assign_source_919 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1018;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SlidesLiveIE, tmp_assign_source_919);
    }
    {
        PyObject *tmp_assign_source_920;
        PyObject *tmp_import_name_from_783;
        PyObject *tmp_name_name_527;
        PyObject *tmp_globals_name_527;
        PyObject *tmp_locals_name_527;
        PyObject *tmp_fromlist_name_527;
        PyObject *tmp_level_name_527;
        tmp_name_name_527 = const_str_plain_slutload;
        tmp_globals_name_527 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_527 = Py_None;
        tmp_fromlist_name_527 = const_tuple_str_plain_SlutloadIE_tuple;
        tmp_level_name_527 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1019;
        tmp_import_name_from_783 = IMPORT_MODULE5(tmp_name_name_527, tmp_globals_name_527, tmp_locals_name_527, tmp_fromlist_name_527, tmp_level_name_527);
        if (tmp_import_name_from_783 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1019;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_783)) {
           tmp_assign_source_920 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_783,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SlutloadIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_920 = IMPORT_NAME(tmp_import_name_from_783, const_str_plain_SlutloadIE);
        }

        Py_DECREF(tmp_import_name_from_783);
        if (tmp_assign_source_920 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1019;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SlutloadIE, tmp_assign_source_920);
    }
    {
        PyObject *tmp_assign_source_921;
        PyObject *tmp_name_name_528;
        PyObject *tmp_globals_name_528;
        PyObject *tmp_locals_name_528;
        PyObject *tmp_fromlist_name_528;
        PyObject *tmp_level_name_528;
        tmp_name_name_528 = const_str_plain_smotri;
        tmp_globals_name_528 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_528 = Py_None;
        tmp_fromlist_name_528 = const_tuple_9f56c3829eefc56f82d5c115157a02ff_tuple;
        tmp_level_name_528 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1020;
        tmp_assign_source_921 = IMPORT_MODULE5(tmp_name_name_528, tmp_globals_name_528, tmp_locals_name_528, tmp_fromlist_name_528, tmp_level_name_528);
        if (tmp_assign_source_921 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1020;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_135__module == NULL);
        tmp_import_from_135__module = tmp_assign_source_921;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_922;
        PyObject *tmp_import_name_from_784;
        CHECK_OBJECT(tmp_import_from_135__module);
        tmp_import_name_from_784 = tmp_import_from_135__module;
        if (PyModule_Check(tmp_import_name_from_784)) {
           tmp_assign_source_922 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_784,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SmotriIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_922 = IMPORT_NAME(tmp_import_name_from_784, const_str_plain_SmotriIE);
        }

        if (tmp_assign_source_922 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1020;

            goto try_except_handler_135;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SmotriIE, tmp_assign_source_922);
    }
    {
        PyObject *tmp_assign_source_923;
        PyObject *tmp_import_name_from_785;
        CHECK_OBJECT(tmp_import_from_135__module);
        tmp_import_name_from_785 = tmp_import_from_135__module;
        if (PyModule_Check(tmp_import_name_from_785)) {
           tmp_assign_source_923 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_785,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SmotriCommunityIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_923 = IMPORT_NAME(tmp_import_name_from_785, const_str_plain_SmotriCommunityIE);
        }

        if (tmp_assign_source_923 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1020;

            goto try_except_handler_135;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SmotriCommunityIE, tmp_assign_source_923);
    }
    {
        PyObject *tmp_assign_source_924;
        PyObject *tmp_import_name_from_786;
        CHECK_OBJECT(tmp_import_from_135__module);
        tmp_import_name_from_786 = tmp_import_from_135__module;
        if (PyModule_Check(tmp_import_name_from_786)) {
           tmp_assign_source_924 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_786,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SmotriUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_924 = IMPORT_NAME(tmp_import_name_from_786, const_str_plain_SmotriUserIE);
        }

        if (tmp_assign_source_924 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1020;

            goto try_except_handler_135;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SmotriUserIE, tmp_assign_source_924);
    }
    {
        PyObject *tmp_assign_source_925;
        PyObject *tmp_import_name_from_787;
        CHECK_OBJECT(tmp_import_from_135__module);
        tmp_import_name_from_787 = tmp_import_from_135__module;
        if (PyModule_Check(tmp_import_name_from_787)) {
           tmp_assign_source_925 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_787,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SmotriBroadcastIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_925 = IMPORT_NAME(tmp_import_name_from_787, const_str_plain_SmotriBroadcastIE);
        }

        if (tmp_assign_source_925 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1020;

            goto try_except_handler_135;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SmotriBroadcastIE, tmp_assign_source_925);
    }
    goto try_end_135;
    // Exception handler code:
    try_except_handler_135:;
    exception_keeper_type_135 = exception_type;
    exception_keeper_value_135 = exception_value;
    exception_keeper_tb_135 = exception_tb;
    exception_keeper_lineno_135 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_135__module);
    Py_DECREF(tmp_import_from_135__module);
    tmp_import_from_135__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_135;
    exception_value = exception_keeper_value_135;
    exception_tb = exception_keeper_tb_135;
    exception_lineno = exception_keeper_lineno_135;

    goto frame_exception_exit_1;
    // End of try:
    try_end_135:;
    CHECK_OBJECT(tmp_import_from_135__module);
    Py_DECREF(tmp_import_from_135__module);
    tmp_import_from_135__module = NULL;

    {
        PyObject *tmp_assign_source_926;
        PyObject *tmp_import_name_from_788;
        PyObject *tmp_name_name_529;
        PyObject *tmp_globals_name_529;
        PyObject *tmp_locals_name_529;
        PyObject *tmp_fromlist_name_529;
        PyObject *tmp_level_name_529;
        tmp_name_name_529 = const_str_plain_snotr;
        tmp_globals_name_529 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_529 = Py_None;
        tmp_fromlist_name_529 = const_tuple_str_plain_SnotrIE_tuple;
        tmp_level_name_529 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1026;
        tmp_import_name_from_788 = IMPORT_MODULE5(tmp_name_name_529, tmp_globals_name_529, tmp_locals_name_529, tmp_fromlist_name_529, tmp_level_name_529);
        if (tmp_import_name_from_788 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1026;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_788)) {
           tmp_assign_source_926 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_788,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SnotrIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_926 = IMPORT_NAME(tmp_import_name_from_788, const_str_plain_SnotrIE);
        }

        Py_DECREF(tmp_import_name_from_788);
        if (tmp_assign_source_926 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1026;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SnotrIE, tmp_assign_source_926);
    }
    {
        PyObject *tmp_assign_source_927;
        PyObject *tmp_import_name_from_789;
        PyObject *tmp_name_name_530;
        PyObject *tmp_globals_name_530;
        PyObject *tmp_locals_name_530;
        PyObject *tmp_fromlist_name_530;
        PyObject *tmp_level_name_530;
        tmp_name_name_530 = const_str_plain_sohu;
        tmp_globals_name_530 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_530 = Py_None;
        tmp_fromlist_name_530 = const_tuple_str_plain_SohuIE_tuple;
        tmp_level_name_530 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1027;
        tmp_import_name_from_789 = IMPORT_MODULE5(tmp_name_name_530, tmp_globals_name_530, tmp_locals_name_530, tmp_fromlist_name_530, tmp_level_name_530);
        if (tmp_import_name_from_789 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1027;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_789)) {
           tmp_assign_source_927 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_789,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SohuIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_927 = IMPORT_NAME(tmp_import_name_from_789, const_str_plain_SohuIE);
        }

        Py_DECREF(tmp_import_name_from_789);
        if (tmp_assign_source_927 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1027;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SohuIE, tmp_assign_source_927);
    }
    {
        PyObject *tmp_assign_source_928;
        PyObject *tmp_import_name_from_790;
        PyObject *tmp_name_name_531;
        PyObject *tmp_globals_name_531;
        PyObject *tmp_locals_name_531;
        PyObject *tmp_fromlist_name_531;
        PyObject *tmp_level_name_531;
        tmp_name_name_531 = const_str_plain_sonyliv;
        tmp_globals_name_531 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_531 = Py_None;
        tmp_fromlist_name_531 = const_tuple_str_plain_SonyLIVIE_tuple;
        tmp_level_name_531 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1028;
        tmp_import_name_from_790 = IMPORT_MODULE5(tmp_name_name_531, tmp_globals_name_531, tmp_locals_name_531, tmp_fromlist_name_531, tmp_level_name_531);
        if (tmp_import_name_from_790 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1028;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_790)) {
           tmp_assign_source_928 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_790,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SonyLIVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_928 = IMPORT_NAME(tmp_import_name_from_790, const_str_plain_SonyLIVIE);
        }

        Py_DECREF(tmp_import_name_from_790);
        if (tmp_assign_source_928 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1028;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SonyLIVIE, tmp_assign_source_928);
    }
    {
        PyObject *tmp_assign_source_929;
        PyObject *tmp_name_name_532;
        PyObject *tmp_globals_name_532;
        PyObject *tmp_locals_name_532;
        PyObject *tmp_fromlist_name_532;
        PyObject *tmp_level_name_532;
        tmp_name_name_532 = const_str_plain_soundcloud;
        tmp_globals_name_532 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_532 = Py_None;
        tmp_fromlist_name_532 = const_tuple_8acfa8ff02cc89cec07cbc6382f4ed35_tuple;
        tmp_level_name_532 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1029;
        tmp_assign_source_929 = IMPORT_MODULE5(tmp_name_name_532, tmp_globals_name_532, tmp_locals_name_532, tmp_fromlist_name_532, tmp_level_name_532);
        if (tmp_assign_source_929 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1029;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_136__module == NULL);
        tmp_import_from_136__module = tmp_assign_source_929;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_930;
        PyObject *tmp_import_name_from_791;
        CHECK_OBJECT(tmp_import_from_136__module);
        tmp_import_name_from_791 = tmp_import_from_136__module;
        if (PyModule_Check(tmp_import_name_from_791)) {
           tmp_assign_source_930 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_791,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SoundcloudEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_930 = IMPORT_NAME(tmp_import_name_from_791, const_str_plain_SoundcloudEmbedIE);
        }

        if (tmp_assign_source_930 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1029;

            goto try_except_handler_136;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SoundcloudEmbedIE, tmp_assign_source_930);
    }
    {
        PyObject *tmp_assign_source_931;
        PyObject *tmp_import_name_from_792;
        CHECK_OBJECT(tmp_import_from_136__module);
        tmp_import_name_from_792 = tmp_import_from_136__module;
        if (PyModule_Check(tmp_import_name_from_792)) {
           tmp_assign_source_931 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_792,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SoundcloudIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_931 = IMPORT_NAME(tmp_import_name_from_792, const_str_plain_SoundcloudIE);
        }

        if (tmp_assign_source_931 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1029;

            goto try_except_handler_136;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SoundcloudIE, tmp_assign_source_931);
    }
    {
        PyObject *tmp_assign_source_932;
        PyObject *tmp_import_name_from_793;
        CHECK_OBJECT(tmp_import_from_136__module);
        tmp_import_name_from_793 = tmp_import_from_136__module;
        if (PyModule_Check(tmp_import_name_from_793)) {
           tmp_assign_source_932 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_793,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SoundcloudSetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_932 = IMPORT_NAME(tmp_import_name_from_793, const_str_plain_SoundcloudSetIE);
        }

        if (tmp_assign_source_932 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1029;

            goto try_except_handler_136;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SoundcloudSetIE, tmp_assign_source_932);
    }
    {
        PyObject *tmp_assign_source_933;
        PyObject *tmp_import_name_from_794;
        CHECK_OBJECT(tmp_import_from_136__module);
        tmp_import_name_from_794 = tmp_import_from_136__module;
        if (PyModule_Check(tmp_import_name_from_794)) {
           tmp_assign_source_933 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_794,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SoundcloudUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_933 = IMPORT_NAME(tmp_import_name_from_794, const_str_plain_SoundcloudUserIE);
        }

        if (tmp_assign_source_933 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1029;

            goto try_except_handler_136;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SoundcloudUserIE, tmp_assign_source_933);
    }
    {
        PyObject *tmp_assign_source_934;
        PyObject *tmp_import_name_from_795;
        CHECK_OBJECT(tmp_import_from_136__module);
        tmp_import_name_from_795 = tmp_import_from_136__module;
        if (PyModule_Check(tmp_import_name_from_795)) {
           tmp_assign_source_934 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_795,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SoundcloudTrackStationIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_934 = IMPORT_NAME(tmp_import_name_from_795, const_str_plain_SoundcloudTrackStationIE);
        }

        if (tmp_assign_source_934 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1029;

            goto try_except_handler_136;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SoundcloudTrackStationIE, tmp_assign_source_934);
    }
    {
        PyObject *tmp_assign_source_935;
        PyObject *tmp_import_name_from_796;
        CHECK_OBJECT(tmp_import_from_136__module);
        tmp_import_name_from_796 = tmp_import_from_136__module;
        if (PyModule_Check(tmp_import_name_from_796)) {
           tmp_assign_source_935 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_796,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SoundcloudPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_935 = IMPORT_NAME(tmp_import_name_from_796, const_str_plain_SoundcloudPlaylistIE);
        }

        if (tmp_assign_source_935 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1029;

            goto try_except_handler_136;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SoundcloudPlaylistIE, tmp_assign_source_935);
    }
    {
        PyObject *tmp_assign_source_936;
        PyObject *tmp_import_name_from_797;
        CHECK_OBJECT(tmp_import_from_136__module);
        tmp_import_name_from_797 = tmp_import_from_136__module;
        if (PyModule_Check(tmp_import_name_from_797)) {
           tmp_assign_source_936 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_797,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SoundcloudSearchIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_936 = IMPORT_NAME(tmp_import_name_from_797, const_str_plain_SoundcloudSearchIE);
        }

        if (tmp_assign_source_936 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1029;

            goto try_except_handler_136;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SoundcloudSearchIE, tmp_assign_source_936);
    }
    goto try_end_136;
    // Exception handler code:
    try_except_handler_136:;
    exception_keeper_type_136 = exception_type;
    exception_keeper_value_136 = exception_value;
    exception_keeper_tb_136 = exception_tb;
    exception_keeper_lineno_136 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_136__module);
    Py_DECREF(tmp_import_from_136__module);
    tmp_import_from_136__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_136;
    exception_value = exception_keeper_value_136;
    exception_tb = exception_keeper_tb_136;
    exception_lineno = exception_keeper_lineno_136;

    goto frame_exception_exit_1;
    // End of try:
    try_end_136:;
    CHECK_OBJECT(tmp_import_from_136__module);
    Py_DECREF(tmp_import_from_136__module);
    tmp_import_from_136__module = NULL;

    {
        PyObject *tmp_assign_source_937;
        PyObject *tmp_name_name_533;
        PyObject *tmp_globals_name_533;
        PyObject *tmp_locals_name_533;
        PyObject *tmp_fromlist_name_533;
        PyObject *tmp_level_name_533;
        tmp_name_name_533 = const_str_plain_soundgasm;
        tmp_globals_name_533 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_533 = Py_None;
        tmp_fromlist_name_533 = const_tuple_str_plain_SoundgasmIE_str_plain_SoundgasmProfileIE_tuple;
        tmp_level_name_533 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1038;
        tmp_assign_source_937 = IMPORT_MODULE5(tmp_name_name_533, tmp_globals_name_533, tmp_locals_name_533, tmp_fromlist_name_533, tmp_level_name_533);
        if (tmp_assign_source_937 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1038;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_137__module == NULL);
        tmp_import_from_137__module = tmp_assign_source_937;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_938;
        PyObject *tmp_import_name_from_798;
        CHECK_OBJECT(tmp_import_from_137__module);
        tmp_import_name_from_798 = tmp_import_from_137__module;
        if (PyModule_Check(tmp_import_name_from_798)) {
           tmp_assign_source_938 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_798,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SoundgasmIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_938 = IMPORT_NAME(tmp_import_name_from_798, const_str_plain_SoundgasmIE);
        }

        if (tmp_assign_source_938 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1038;

            goto try_except_handler_137;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SoundgasmIE, tmp_assign_source_938);
    }
    {
        PyObject *tmp_assign_source_939;
        PyObject *tmp_import_name_from_799;
        CHECK_OBJECT(tmp_import_from_137__module);
        tmp_import_name_from_799 = tmp_import_from_137__module;
        if (PyModule_Check(tmp_import_name_from_799)) {
           tmp_assign_source_939 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_799,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SoundgasmProfileIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_939 = IMPORT_NAME(tmp_import_name_from_799, const_str_plain_SoundgasmProfileIE);
        }

        if (tmp_assign_source_939 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1038;

            goto try_except_handler_137;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SoundgasmProfileIE, tmp_assign_source_939);
    }
    goto try_end_137;
    // Exception handler code:
    try_except_handler_137:;
    exception_keeper_type_137 = exception_type;
    exception_keeper_value_137 = exception_value;
    exception_keeper_tb_137 = exception_tb;
    exception_keeper_lineno_137 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_137__module);
    Py_DECREF(tmp_import_from_137__module);
    tmp_import_from_137__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_137;
    exception_value = exception_keeper_value_137;
    exception_tb = exception_keeper_tb_137;
    exception_lineno = exception_keeper_lineno_137;

    goto frame_exception_exit_1;
    // End of try:
    try_end_137:;
    CHECK_OBJECT(tmp_import_from_137__module);
    Py_DECREF(tmp_import_from_137__module);
    tmp_import_from_137__module = NULL;

    {
        PyObject *tmp_assign_source_940;
        PyObject *tmp_name_name_534;
        PyObject *tmp_globals_name_534;
        PyObject *tmp_locals_name_534;
        PyObject *tmp_fromlist_name_534;
        PyObject *tmp_level_name_534;
        tmp_name_name_534 = const_str_plain_southpark;
        tmp_globals_name_534 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_534 = Py_None;
        tmp_fromlist_name_534 = const_tuple_933597edc4f57e04a7617717b06e4514_tuple;
        tmp_level_name_534 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1042;
        tmp_assign_source_940 = IMPORT_MODULE5(tmp_name_name_534, tmp_globals_name_534, tmp_locals_name_534, tmp_fromlist_name_534, tmp_level_name_534);
        if (tmp_assign_source_940 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1042;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_138__module == NULL);
        tmp_import_from_138__module = tmp_assign_source_940;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_941;
        PyObject *tmp_import_name_from_800;
        CHECK_OBJECT(tmp_import_from_138__module);
        tmp_import_name_from_800 = tmp_import_from_138__module;
        if (PyModule_Check(tmp_import_name_from_800)) {
           tmp_assign_source_941 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_800,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SouthParkIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_941 = IMPORT_NAME(tmp_import_name_from_800, const_str_plain_SouthParkIE);
        }

        if (tmp_assign_source_941 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1042;

            goto try_except_handler_138;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SouthParkIE, tmp_assign_source_941);
    }
    {
        PyObject *tmp_assign_source_942;
        PyObject *tmp_import_name_from_801;
        CHECK_OBJECT(tmp_import_from_138__module);
        tmp_import_name_from_801 = tmp_import_from_138__module;
        if (PyModule_Check(tmp_import_name_from_801)) {
           tmp_assign_source_942 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_801,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SouthParkDeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_942 = IMPORT_NAME(tmp_import_name_from_801, const_str_plain_SouthParkDeIE);
        }

        if (tmp_assign_source_942 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1042;

            goto try_except_handler_138;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SouthParkDeIE, tmp_assign_source_942);
    }
    {
        PyObject *tmp_assign_source_943;
        PyObject *tmp_import_name_from_802;
        CHECK_OBJECT(tmp_import_from_138__module);
        tmp_import_name_from_802 = tmp_import_from_138__module;
        if (PyModule_Check(tmp_import_name_from_802)) {
           tmp_assign_source_943 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_802,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SouthParkDkIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_943 = IMPORT_NAME(tmp_import_name_from_802, const_str_plain_SouthParkDkIE);
        }

        if (tmp_assign_source_943 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1042;

            goto try_except_handler_138;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SouthParkDkIE, tmp_assign_source_943);
    }
    {
        PyObject *tmp_assign_source_944;
        PyObject *tmp_import_name_from_803;
        CHECK_OBJECT(tmp_import_from_138__module);
        tmp_import_name_from_803 = tmp_import_from_138__module;
        if (PyModule_Check(tmp_import_name_from_803)) {
           tmp_assign_source_944 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_803,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SouthParkEsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_944 = IMPORT_NAME(tmp_import_name_from_803, const_str_plain_SouthParkEsIE);
        }

        if (tmp_assign_source_944 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1042;

            goto try_except_handler_138;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SouthParkEsIE, tmp_assign_source_944);
    }
    {
        PyObject *tmp_assign_source_945;
        PyObject *tmp_import_name_from_804;
        CHECK_OBJECT(tmp_import_from_138__module);
        tmp_import_name_from_804 = tmp_import_from_138__module;
        if (PyModule_Check(tmp_import_name_from_804)) {
           tmp_assign_source_945 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_804,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SouthParkNlIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_945 = IMPORT_NAME(tmp_import_name_from_804, const_str_plain_SouthParkNlIE);
        }

        if (tmp_assign_source_945 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1042;

            goto try_except_handler_138;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SouthParkNlIE, tmp_assign_source_945);
    }
    goto try_end_138;
    // Exception handler code:
    try_except_handler_138:;
    exception_keeper_type_138 = exception_type;
    exception_keeper_value_138 = exception_value;
    exception_keeper_tb_138 = exception_tb;
    exception_keeper_lineno_138 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_138__module);
    Py_DECREF(tmp_import_from_138__module);
    tmp_import_from_138__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_138;
    exception_value = exception_keeper_value_138;
    exception_tb = exception_keeper_tb_138;
    exception_lineno = exception_keeper_lineno_138;

    goto frame_exception_exit_1;
    // End of try:
    try_end_138:;
    CHECK_OBJECT(tmp_import_from_138__module);
    Py_DECREF(tmp_import_from_138__module);
    tmp_import_from_138__module = NULL;

    {
        PyObject *tmp_assign_source_946;
        PyObject *tmp_name_name_535;
        PyObject *tmp_globals_name_535;
        PyObject *tmp_locals_name_535;
        PyObject *tmp_fromlist_name_535;
        PyObject *tmp_level_name_535;
        tmp_name_name_535 = const_str_plain_spankbang;
        tmp_globals_name_535 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_535 = Py_None;
        tmp_fromlist_name_535 = const_tuple_str_plain_SpankBangIE_str_plain_SpankBangPlaylistIE_tuple;
        tmp_level_name_535 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1049;
        tmp_assign_source_946 = IMPORT_MODULE5(tmp_name_name_535, tmp_globals_name_535, tmp_locals_name_535, tmp_fromlist_name_535, tmp_level_name_535);
        if (tmp_assign_source_946 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1049;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_139__module == NULL);
        tmp_import_from_139__module = tmp_assign_source_946;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_947;
        PyObject *tmp_import_name_from_805;
        CHECK_OBJECT(tmp_import_from_139__module);
        tmp_import_name_from_805 = tmp_import_from_139__module;
        if (PyModule_Check(tmp_import_name_from_805)) {
           tmp_assign_source_947 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_805,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SpankBangIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_947 = IMPORT_NAME(tmp_import_name_from_805, const_str_plain_SpankBangIE);
        }

        if (tmp_assign_source_947 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1049;

            goto try_except_handler_139;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SpankBangIE, tmp_assign_source_947);
    }
    {
        PyObject *tmp_assign_source_948;
        PyObject *tmp_import_name_from_806;
        CHECK_OBJECT(tmp_import_from_139__module);
        tmp_import_name_from_806 = tmp_import_from_139__module;
        if (PyModule_Check(tmp_import_name_from_806)) {
           tmp_assign_source_948 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_806,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SpankBangPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_948 = IMPORT_NAME(tmp_import_name_from_806, const_str_plain_SpankBangPlaylistIE);
        }

        if (tmp_assign_source_948 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1049;

            goto try_except_handler_139;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SpankBangPlaylistIE, tmp_assign_source_948);
    }
    goto try_end_139;
    // Exception handler code:
    try_except_handler_139:;
    exception_keeper_type_139 = exception_type;
    exception_keeper_value_139 = exception_value;
    exception_keeper_tb_139 = exception_tb;
    exception_keeper_lineno_139 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_139__module);
    Py_DECREF(tmp_import_from_139__module);
    tmp_import_from_139__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_139;
    exception_value = exception_keeper_value_139;
    exception_tb = exception_keeper_tb_139;
    exception_lineno = exception_keeper_lineno_139;

    goto frame_exception_exit_1;
    // End of try:
    try_end_139:;
    CHECK_OBJECT(tmp_import_from_139__module);
    Py_DECREF(tmp_import_from_139__module);
    tmp_import_from_139__module = NULL;

    {
        PyObject *tmp_assign_source_949;
        PyObject *tmp_import_name_from_807;
        PyObject *tmp_name_name_536;
        PyObject *tmp_globals_name_536;
        PyObject *tmp_locals_name_536;
        PyObject *tmp_fromlist_name_536;
        PyObject *tmp_level_name_536;
        tmp_name_name_536 = const_str_plain_spankwire;
        tmp_globals_name_536 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_536 = Py_None;
        tmp_fromlist_name_536 = const_tuple_str_plain_SpankwireIE_tuple;
        tmp_level_name_536 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1053;
        tmp_import_name_from_807 = IMPORT_MODULE5(tmp_name_name_536, tmp_globals_name_536, tmp_locals_name_536, tmp_fromlist_name_536, tmp_level_name_536);
        if (tmp_import_name_from_807 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1053;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_807)) {
           tmp_assign_source_949 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_807,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SpankwireIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_949 = IMPORT_NAME(tmp_import_name_from_807, const_str_plain_SpankwireIE);
        }

        Py_DECREF(tmp_import_name_from_807);
        if (tmp_assign_source_949 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1053;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SpankwireIE, tmp_assign_source_949);
    }
    {
        PyObject *tmp_assign_source_950;
        PyObject *tmp_name_name_537;
        PyObject *tmp_globals_name_537;
        PyObject *tmp_locals_name_537;
        PyObject *tmp_fromlist_name_537;
        PyObject *tmp_level_name_537;
        tmp_name_name_537 = const_str_plain_spiegel;
        tmp_globals_name_537 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_537 = Py_None;
        tmp_fromlist_name_537 = const_tuple_str_plain_SpiegelIE_str_plain_SpiegelArticleIE_tuple;
        tmp_level_name_537 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1054;
        tmp_assign_source_950 = IMPORT_MODULE5(tmp_name_name_537, tmp_globals_name_537, tmp_locals_name_537, tmp_fromlist_name_537, tmp_level_name_537);
        if (tmp_assign_source_950 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1054;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_140__module == NULL);
        tmp_import_from_140__module = tmp_assign_source_950;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_951;
        PyObject *tmp_import_name_from_808;
        CHECK_OBJECT(tmp_import_from_140__module);
        tmp_import_name_from_808 = tmp_import_from_140__module;
        if (PyModule_Check(tmp_import_name_from_808)) {
           tmp_assign_source_951 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_808,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SpiegelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_951 = IMPORT_NAME(tmp_import_name_from_808, const_str_plain_SpiegelIE);
        }

        if (tmp_assign_source_951 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1054;

            goto try_except_handler_140;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SpiegelIE, tmp_assign_source_951);
    }
    {
        PyObject *tmp_assign_source_952;
        PyObject *tmp_import_name_from_809;
        CHECK_OBJECT(tmp_import_from_140__module);
        tmp_import_name_from_809 = tmp_import_from_140__module;
        if (PyModule_Check(tmp_import_name_from_809)) {
           tmp_assign_source_952 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_809,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SpiegelArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_952 = IMPORT_NAME(tmp_import_name_from_809, const_str_plain_SpiegelArticleIE);
        }

        if (tmp_assign_source_952 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1054;

            goto try_except_handler_140;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SpiegelArticleIE, tmp_assign_source_952);
    }
    goto try_end_140;
    // Exception handler code:
    try_except_handler_140:;
    exception_keeper_type_140 = exception_type;
    exception_keeper_value_140 = exception_value;
    exception_keeper_tb_140 = exception_tb;
    exception_keeper_lineno_140 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_140__module);
    Py_DECREF(tmp_import_from_140__module);
    tmp_import_from_140__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_140;
    exception_value = exception_keeper_value_140;
    exception_tb = exception_keeper_tb_140;
    exception_lineno = exception_keeper_lineno_140;

    goto frame_exception_exit_1;
    // End of try:
    try_end_140:;
    CHECK_OBJECT(tmp_import_from_140__module);
    Py_DECREF(tmp_import_from_140__module);
    tmp_import_from_140__module = NULL;

    {
        PyObject *tmp_assign_source_953;
        PyObject *tmp_import_name_from_810;
        PyObject *tmp_name_name_538;
        PyObject *tmp_globals_name_538;
        PyObject *tmp_locals_name_538;
        PyObject *tmp_fromlist_name_538;
        PyObject *tmp_level_name_538;
        tmp_name_name_538 = const_str_plain_spiegeltv;
        tmp_globals_name_538 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_538 = Py_None;
        tmp_fromlist_name_538 = const_tuple_str_plain_SpiegeltvIE_tuple;
        tmp_level_name_538 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1055;
        tmp_import_name_from_810 = IMPORT_MODULE5(tmp_name_name_538, tmp_globals_name_538, tmp_locals_name_538, tmp_fromlist_name_538, tmp_level_name_538);
        if (tmp_import_name_from_810 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1055;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_810)) {
           tmp_assign_source_953 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_810,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SpiegeltvIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_953 = IMPORT_NAME(tmp_import_name_from_810, const_str_plain_SpiegeltvIE);
        }

        Py_DECREF(tmp_import_name_from_810);
        if (tmp_assign_source_953 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1055;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SpiegeltvIE, tmp_assign_source_953);
    }
    {
        PyObject *tmp_assign_source_954;
        PyObject *tmp_name_name_539;
        PyObject *tmp_globals_name_539;
        PyObject *tmp_locals_name_539;
        PyObject *tmp_fromlist_name_539;
        PyObject *tmp_level_name_539;
        tmp_name_name_539 = const_str_plain_spike;
        tmp_globals_name_539 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_539 = Py_None;
        tmp_fromlist_name_539 = const_tuple_str_plain_BellatorIE_str_plain_ParamountNetworkIE_tuple;
        tmp_level_name_539 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1056;
        tmp_assign_source_954 = IMPORT_MODULE5(tmp_name_name_539, tmp_globals_name_539, tmp_locals_name_539, tmp_fromlist_name_539, tmp_level_name_539);
        if (tmp_assign_source_954 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1056;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_141__module == NULL);
        tmp_import_from_141__module = tmp_assign_source_954;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_955;
        PyObject *tmp_import_name_from_811;
        CHECK_OBJECT(tmp_import_from_141__module);
        tmp_import_name_from_811 = tmp_import_from_141__module;
        if (PyModule_Check(tmp_import_name_from_811)) {
           tmp_assign_source_955 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_811,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BellatorIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_955 = IMPORT_NAME(tmp_import_name_from_811, const_str_plain_BellatorIE);
        }

        if (tmp_assign_source_955 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1056;

            goto try_except_handler_141;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BellatorIE, tmp_assign_source_955);
    }
    {
        PyObject *tmp_assign_source_956;
        PyObject *tmp_import_name_from_812;
        CHECK_OBJECT(tmp_import_from_141__module);
        tmp_import_name_from_812 = tmp_import_from_141__module;
        if (PyModule_Check(tmp_import_name_from_812)) {
           tmp_assign_source_956 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_812,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ParamountNetworkIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_956 = IMPORT_NAME(tmp_import_name_from_812, const_str_plain_ParamountNetworkIE);
        }

        if (tmp_assign_source_956 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1056;

            goto try_except_handler_141;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ParamountNetworkIE, tmp_assign_source_956);
    }
    goto try_end_141;
    // Exception handler code:
    try_except_handler_141:;
    exception_keeper_type_141 = exception_type;
    exception_keeper_value_141 = exception_value;
    exception_keeper_tb_141 = exception_tb;
    exception_keeper_lineno_141 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_141__module);
    Py_DECREF(tmp_import_from_141__module);
    tmp_import_from_141__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_141;
    exception_value = exception_keeper_value_141;
    exception_tb = exception_keeper_tb_141;
    exception_lineno = exception_keeper_lineno_141;

    goto frame_exception_exit_1;
    // End of try:
    try_end_141:;
    CHECK_OBJECT(tmp_import_from_141__module);
    Py_DECREF(tmp_import_from_141__module);
    tmp_import_from_141__module = NULL;

    {
        PyObject *tmp_assign_source_957;
        PyObject *tmp_import_name_from_813;
        PyObject *tmp_name_name_540;
        PyObject *tmp_globals_name_540;
        PyObject *tmp_locals_name_540;
        PyObject *tmp_fromlist_name_540;
        PyObject *tmp_level_name_540;
        tmp_name_name_540 = const_str_plain_stitcher;
        tmp_globals_name_540 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_540 = Py_None;
        tmp_fromlist_name_540 = const_tuple_str_plain_StitcherIE_tuple;
        tmp_level_name_540 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1060;
        tmp_import_name_from_813 = IMPORT_MODULE5(tmp_name_name_540, tmp_globals_name_540, tmp_locals_name_540, tmp_fromlist_name_540, tmp_level_name_540);
        if (tmp_import_name_from_813 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1060;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_813)) {
           tmp_assign_source_957 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_813,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_StitcherIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_957 = IMPORT_NAME(tmp_import_name_from_813, const_str_plain_StitcherIE);
        }

        Py_DECREF(tmp_import_name_from_813);
        if (tmp_assign_source_957 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1060;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_StitcherIE, tmp_assign_source_957);
    }
    {
        PyObject *tmp_assign_source_958;
        PyObject *tmp_import_name_from_814;
        PyObject *tmp_name_name_541;
        PyObject *tmp_globals_name_541;
        PyObject *tmp_locals_name_541;
        PyObject *tmp_fromlist_name_541;
        PyObject *tmp_level_name_541;
        tmp_name_name_541 = const_str_plain_sport5;
        tmp_globals_name_541 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_541 = Py_None;
        tmp_fromlist_name_541 = const_tuple_str_plain_Sport5IE_tuple;
        tmp_level_name_541 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1061;
        tmp_import_name_from_814 = IMPORT_MODULE5(tmp_name_name_541, tmp_globals_name_541, tmp_locals_name_541, tmp_fromlist_name_541, tmp_level_name_541);
        if (tmp_import_name_from_814 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1061;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_814)) {
           tmp_assign_source_958 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_814,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Sport5IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_958 = IMPORT_NAME(tmp_import_name_from_814, const_str_plain_Sport5IE);
        }

        Py_DECREF(tmp_import_name_from_814);
        if (tmp_assign_source_958 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1061;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Sport5IE, tmp_assign_source_958);
    }
    {
        PyObject *tmp_assign_source_959;
        PyObject *tmp_import_name_from_815;
        PyObject *tmp_name_name_542;
        PyObject *tmp_globals_name_542;
        PyObject *tmp_locals_name_542;
        PyObject *tmp_fromlist_name_542;
        PyObject *tmp_level_name_542;
        tmp_name_name_542 = const_str_plain_sportbox;
        tmp_globals_name_542 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_542 = Py_None;
        tmp_fromlist_name_542 = const_tuple_str_plain_SportBoxIE_tuple;
        tmp_level_name_542 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1062;
        tmp_import_name_from_815 = IMPORT_MODULE5(tmp_name_name_542, tmp_globals_name_542, tmp_locals_name_542, tmp_fromlist_name_542, tmp_level_name_542);
        if (tmp_import_name_from_815 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1062;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_815)) {
           tmp_assign_source_959 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_815,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SportBoxIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_959 = IMPORT_NAME(tmp_import_name_from_815, const_str_plain_SportBoxIE);
        }

        Py_DECREF(tmp_import_name_from_815);
        if (tmp_assign_source_959 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1062;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SportBoxIE, tmp_assign_source_959);
    }
    {
        PyObject *tmp_assign_source_960;
        PyObject *tmp_import_name_from_816;
        PyObject *tmp_name_name_543;
        PyObject *tmp_globals_name_543;
        PyObject *tmp_locals_name_543;
        PyObject *tmp_fromlist_name_543;
        PyObject *tmp_level_name_543;
        tmp_name_name_543 = const_str_plain_sportdeutschland;
        tmp_globals_name_543 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_543 = Py_None;
        tmp_fromlist_name_543 = const_tuple_str_plain_SportDeutschlandIE_tuple;
        tmp_level_name_543 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1063;
        tmp_import_name_from_816 = IMPORT_MODULE5(tmp_name_name_543, tmp_globals_name_543, tmp_locals_name_543, tmp_fromlist_name_543, tmp_level_name_543);
        if (tmp_import_name_from_816 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1063;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_816)) {
           tmp_assign_source_960 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_816,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SportDeutschlandIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_960 = IMPORT_NAME(tmp_import_name_from_816, const_str_plain_SportDeutschlandIE);
        }

        Py_DECREF(tmp_import_name_from_816);
        if (tmp_assign_source_960 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1063;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SportDeutschlandIE, tmp_assign_source_960);
    }
    {
        PyObject *tmp_assign_source_961;
        PyObject *tmp_import_name_from_817;
        PyObject *tmp_name_name_544;
        PyObject *tmp_globals_name_544;
        PyObject *tmp_locals_name_544;
        PyObject *tmp_fromlist_name_544;
        PyObject *tmp_level_name_544;
        tmp_name_name_544 = const_str_plain_springboardplatform;
        tmp_globals_name_544 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_544 = Py_None;
        tmp_fromlist_name_544 = const_tuple_str_plain_SpringboardPlatformIE_tuple;
        tmp_level_name_544 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1064;
        tmp_import_name_from_817 = IMPORT_MODULE5(tmp_name_name_544, tmp_globals_name_544, tmp_locals_name_544, tmp_fromlist_name_544, tmp_level_name_544);
        if (tmp_import_name_from_817 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1064;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_817)) {
           tmp_assign_source_961 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_817,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SpringboardPlatformIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_961 = IMPORT_NAME(tmp_import_name_from_817, const_str_plain_SpringboardPlatformIE);
        }

        Py_DECREF(tmp_import_name_from_817);
        if (tmp_assign_source_961 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1064;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SpringboardPlatformIE, tmp_assign_source_961);
    }
    {
        PyObject *tmp_assign_source_962;
        PyObject *tmp_import_name_from_818;
        PyObject *tmp_name_name_545;
        PyObject *tmp_globals_name_545;
        PyObject *tmp_locals_name_545;
        PyObject *tmp_fromlist_name_545;
        PyObject *tmp_level_name_545;
        tmp_name_name_545 = const_str_plain_sprout;
        tmp_globals_name_545 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_545 = Py_None;
        tmp_fromlist_name_545 = const_tuple_str_plain_SproutIE_tuple;
        tmp_level_name_545 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1065;
        tmp_import_name_from_818 = IMPORT_MODULE5(tmp_name_name_545, tmp_globals_name_545, tmp_locals_name_545, tmp_fromlist_name_545, tmp_level_name_545);
        if (tmp_import_name_from_818 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1065;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_818)) {
           tmp_assign_source_962 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_818,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SproutIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_962 = IMPORT_NAME(tmp_import_name_from_818, const_str_plain_SproutIE);
        }

        Py_DECREF(tmp_import_name_from_818);
        if (tmp_assign_source_962 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1065;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SproutIE, tmp_assign_source_962);
    }
    {
        PyObject *tmp_assign_source_963;
        PyObject *tmp_name_name_546;
        PyObject *tmp_globals_name_546;
        PyObject *tmp_locals_name_546;
        PyObject *tmp_fromlist_name_546;
        PyObject *tmp_level_name_546;
        tmp_name_name_546 = const_str_plain_srgssr;
        tmp_globals_name_546 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_546 = Py_None;
        tmp_fromlist_name_546 = const_tuple_str_plain_SRGSSRIE_str_plain_SRGSSRPlayIE_tuple;
        tmp_level_name_546 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1066;
        tmp_assign_source_963 = IMPORT_MODULE5(tmp_name_name_546, tmp_globals_name_546, tmp_locals_name_546, tmp_fromlist_name_546, tmp_level_name_546);
        if (tmp_assign_source_963 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1066;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_142__module == NULL);
        tmp_import_from_142__module = tmp_assign_source_963;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_964;
        PyObject *tmp_import_name_from_819;
        CHECK_OBJECT(tmp_import_from_142__module);
        tmp_import_name_from_819 = tmp_import_from_142__module;
        if (PyModule_Check(tmp_import_name_from_819)) {
           tmp_assign_source_964 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_819,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SRGSSRIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_964 = IMPORT_NAME(tmp_import_name_from_819, const_str_plain_SRGSSRIE);
        }

        if (tmp_assign_source_964 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1066;

            goto try_except_handler_142;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SRGSSRIE, tmp_assign_source_964);
    }
    {
        PyObject *tmp_assign_source_965;
        PyObject *tmp_import_name_from_820;
        CHECK_OBJECT(tmp_import_from_142__module);
        tmp_import_name_from_820 = tmp_import_from_142__module;
        if (PyModule_Check(tmp_import_name_from_820)) {
           tmp_assign_source_965 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_820,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SRGSSRPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_965 = IMPORT_NAME(tmp_import_name_from_820, const_str_plain_SRGSSRPlayIE);
        }

        if (tmp_assign_source_965 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1066;

            goto try_except_handler_142;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SRGSSRPlayIE, tmp_assign_source_965);
    }
    goto try_end_142;
    // Exception handler code:
    try_except_handler_142:;
    exception_keeper_type_142 = exception_type;
    exception_keeper_value_142 = exception_value;
    exception_keeper_tb_142 = exception_tb;
    exception_keeper_lineno_142 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_142__module);
    Py_DECREF(tmp_import_from_142__module);
    tmp_import_from_142__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_142;
    exception_value = exception_keeper_value_142;
    exception_tb = exception_keeper_tb_142;
    exception_lineno = exception_keeper_lineno_142;

    goto frame_exception_exit_1;
    // End of try:
    try_end_142:;
    CHECK_OBJECT(tmp_import_from_142__module);
    Py_DECREF(tmp_import_from_142__module);
    tmp_import_from_142__module = NULL;

    {
        PyObject *tmp_assign_source_966;
        PyObject *tmp_import_name_from_821;
        PyObject *tmp_name_name_547;
        PyObject *tmp_globals_name_547;
        PyObject *tmp_locals_name_547;
        PyObject *tmp_fromlist_name_547;
        PyObject *tmp_level_name_547;
        tmp_name_name_547 = const_str_plain_srmediathek;
        tmp_globals_name_547 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_547 = Py_None;
        tmp_fromlist_name_547 = const_tuple_str_plain_SRMediathekIE_tuple;
        tmp_level_name_547 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1070;
        tmp_import_name_from_821 = IMPORT_MODULE5(tmp_name_name_547, tmp_globals_name_547, tmp_locals_name_547, tmp_fromlist_name_547, tmp_level_name_547);
        if (tmp_import_name_from_821 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1070;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_821)) {
           tmp_assign_source_966 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_821,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SRMediathekIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_966 = IMPORT_NAME(tmp_import_name_from_821, const_str_plain_SRMediathekIE);
        }

        Py_DECREF(tmp_import_name_from_821);
        if (tmp_assign_source_966 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1070;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SRMediathekIE, tmp_assign_source_966);
    }
    {
        PyObject *tmp_assign_source_967;
        PyObject *tmp_import_name_from_822;
        PyObject *tmp_name_name_548;
        PyObject *tmp_globals_name_548;
        PyObject *tmp_locals_name_548;
        PyObject *tmp_fromlist_name_548;
        PyObject *tmp_level_name_548;
        tmp_name_name_548 = const_str_plain_stanfordoc;
        tmp_globals_name_548 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_548 = Py_None;
        tmp_fromlist_name_548 = const_tuple_str_plain_StanfordOpenClassroomIE_tuple;
        tmp_level_name_548 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1071;
        tmp_import_name_from_822 = IMPORT_MODULE5(tmp_name_name_548, tmp_globals_name_548, tmp_locals_name_548, tmp_fromlist_name_548, tmp_level_name_548);
        if (tmp_import_name_from_822 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1071;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_822)) {
           tmp_assign_source_967 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_822,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_StanfordOpenClassroomIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_967 = IMPORT_NAME(tmp_import_name_from_822, const_str_plain_StanfordOpenClassroomIE);
        }

        Py_DECREF(tmp_import_name_from_822);
        if (tmp_assign_source_967 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1071;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_StanfordOpenClassroomIE, tmp_assign_source_967);
    }
    {
        PyObject *tmp_assign_source_968;
        PyObject *tmp_import_name_from_823;
        PyObject *tmp_name_name_549;
        PyObject *tmp_globals_name_549;
        PyObject *tmp_locals_name_549;
        PyObject *tmp_fromlist_name_549;
        PyObject *tmp_level_name_549;
        tmp_name_name_549 = const_str_plain_steam;
        tmp_globals_name_549 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_549 = Py_None;
        tmp_fromlist_name_549 = const_tuple_str_plain_SteamIE_tuple;
        tmp_level_name_549 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1072;
        tmp_import_name_from_823 = IMPORT_MODULE5(tmp_name_name_549, tmp_globals_name_549, tmp_locals_name_549, tmp_fromlist_name_549, tmp_level_name_549);
        if (tmp_import_name_from_823 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1072;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_823)) {
           tmp_assign_source_968 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_823,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SteamIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_968 = IMPORT_NAME(tmp_import_name_from_823, const_str_plain_SteamIE);
        }

        Py_DECREF(tmp_import_name_from_823);
        if (tmp_assign_source_968 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1072;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SteamIE, tmp_assign_source_968);
    }
    {
        PyObject *tmp_assign_source_969;
        PyObject *tmp_import_name_from_824;
        PyObject *tmp_name_name_550;
        PyObject *tmp_globals_name_550;
        PyObject *tmp_locals_name_550;
        PyObject *tmp_fromlist_name_550;
        PyObject *tmp_level_name_550;
        tmp_name_name_550 = const_str_plain_streamable;
        tmp_globals_name_550 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_550 = Py_None;
        tmp_fromlist_name_550 = const_tuple_str_plain_StreamableIE_tuple;
        tmp_level_name_550 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1073;
        tmp_import_name_from_824 = IMPORT_MODULE5(tmp_name_name_550, tmp_globals_name_550, tmp_locals_name_550, tmp_fromlist_name_550, tmp_level_name_550);
        if (tmp_import_name_from_824 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1073;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_824)) {
           tmp_assign_source_969 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_824,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_StreamableIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_969 = IMPORT_NAME(tmp_import_name_from_824, const_str_plain_StreamableIE);
        }

        Py_DECREF(tmp_import_name_from_824);
        if (tmp_assign_source_969 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1073;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_StreamableIE, tmp_assign_source_969);
    }
    {
        PyObject *tmp_assign_source_970;
        PyObject *tmp_import_name_from_825;
        PyObject *tmp_name_name_551;
        PyObject *tmp_globals_name_551;
        PyObject *tmp_locals_name_551;
        PyObject *tmp_fromlist_name_551;
        PyObject *tmp_level_name_551;
        tmp_name_name_551 = const_str_plain_streamcloud;
        tmp_globals_name_551 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_551 = Py_None;
        tmp_fromlist_name_551 = const_tuple_str_plain_StreamcloudIE_tuple;
        tmp_level_name_551 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1074;
        tmp_import_name_from_825 = IMPORT_MODULE5(tmp_name_name_551, tmp_globals_name_551, tmp_locals_name_551, tmp_fromlist_name_551, tmp_level_name_551);
        if (tmp_import_name_from_825 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1074;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_825)) {
           tmp_assign_source_970 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_825,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_StreamcloudIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_970 = IMPORT_NAME(tmp_import_name_from_825, const_str_plain_StreamcloudIE);
        }

        Py_DECREF(tmp_import_name_from_825);
        if (tmp_assign_source_970 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1074;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_StreamcloudIE, tmp_assign_source_970);
    }
    {
        PyObject *tmp_assign_source_971;
        PyObject *tmp_import_name_from_826;
        PyObject *tmp_name_name_552;
        PyObject *tmp_globals_name_552;
        PyObject *tmp_locals_name_552;
        PyObject *tmp_fromlist_name_552;
        PyObject *tmp_level_name_552;
        tmp_name_name_552 = const_str_plain_streamcz;
        tmp_globals_name_552 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_552 = Py_None;
        tmp_fromlist_name_552 = const_tuple_str_plain_StreamCZIE_tuple;
        tmp_level_name_552 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1075;
        tmp_import_name_from_826 = IMPORT_MODULE5(tmp_name_name_552, tmp_globals_name_552, tmp_locals_name_552, tmp_fromlist_name_552, tmp_level_name_552);
        if (tmp_import_name_from_826 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1075;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_826)) {
           tmp_assign_source_971 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_826,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_StreamCZIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_971 = IMPORT_NAME(tmp_import_name_from_826, const_str_plain_StreamCZIE);
        }

        Py_DECREF(tmp_import_name_from_826);
        if (tmp_assign_source_971 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1075;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_StreamCZIE, tmp_assign_source_971);
    }
    {
        PyObject *tmp_assign_source_972;
        PyObject *tmp_import_name_from_827;
        PyObject *tmp_name_name_553;
        PyObject *tmp_globals_name_553;
        PyObject *tmp_locals_name_553;
        PyObject *tmp_fromlist_name_553;
        PyObject *tmp_level_name_553;
        tmp_name_name_553 = const_str_plain_streetvoice;
        tmp_globals_name_553 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_553 = Py_None;
        tmp_fromlist_name_553 = const_tuple_str_plain_StreetVoiceIE_tuple;
        tmp_level_name_553 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1076;
        tmp_import_name_from_827 = IMPORT_MODULE5(tmp_name_name_553, tmp_globals_name_553, tmp_locals_name_553, tmp_fromlist_name_553, tmp_level_name_553);
        if (tmp_import_name_from_827 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1076;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_827)) {
           tmp_assign_source_972 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_827,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_StreetVoiceIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_972 = IMPORT_NAME(tmp_import_name_from_827, const_str_plain_StreetVoiceIE);
        }

        Py_DECREF(tmp_import_name_from_827);
        if (tmp_assign_source_972 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1076;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_StreetVoiceIE, tmp_assign_source_972);
    }
    {
        PyObject *tmp_assign_source_973;
        PyObject *tmp_import_name_from_828;
        PyObject *tmp_name_name_554;
        PyObject *tmp_globals_name_554;
        PyObject *tmp_locals_name_554;
        PyObject *tmp_fromlist_name_554;
        PyObject *tmp_level_name_554;
        tmp_name_name_554 = const_str_plain_stretchinternet;
        tmp_globals_name_554 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_554 = Py_None;
        tmp_fromlist_name_554 = const_tuple_str_plain_StretchInternetIE_tuple;
        tmp_level_name_554 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1077;
        tmp_import_name_from_828 = IMPORT_MODULE5(tmp_name_name_554, tmp_globals_name_554, tmp_locals_name_554, tmp_fromlist_name_554, tmp_level_name_554);
        if (tmp_import_name_from_828 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1077;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_828)) {
           tmp_assign_source_973 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_828,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_StretchInternetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_973 = IMPORT_NAME(tmp_import_name_from_828, const_str_plain_StretchInternetIE);
        }

        Py_DECREF(tmp_import_name_from_828);
        if (tmp_assign_source_973 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1077;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_StretchInternetIE, tmp_assign_source_973);
    }
    {
        PyObject *tmp_assign_source_974;
        PyObject *tmp_import_name_from_829;
        PyObject *tmp_name_name_555;
        PyObject *tmp_globals_name_555;
        PyObject *tmp_locals_name_555;
        PyObject *tmp_fromlist_name_555;
        PyObject *tmp_level_name_555;
        tmp_name_name_555 = const_str_plain_stv;
        tmp_globals_name_555 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_555 = Py_None;
        tmp_fromlist_name_555 = const_tuple_str_plain_STVPlayerIE_tuple;
        tmp_level_name_555 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1078;
        tmp_import_name_from_829 = IMPORT_MODULE5(tmp_name_name_555, tmp_globals_name_555, tmp_locals_name_555, tmp_fromlist_name_555, tmp_level_name_555);
        if (tmp_import_name_from_829 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1078;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_829)) {
           tmp_assign_source_974 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_829,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_STVPlayerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_974 = IMPORT_NAME(tmp_import_name_from_829, const_str_plain_STVPlayerIE);
        }

        Py_DECREF(tmp_import_name_from_829);
        if (tmp_assign_source_974 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1078;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_STVPlayerIE, tmp_assign_source_974);
    }
    {
        PyObject *tmp_assign_source_975;
        PyObject *tmp_import_name_from_830;
        PyObject *tmp_name_name_556;
        PyObject *tmp_globals_name_556;
        PyObject *tmp_locals_name_556;
        PyObject *tmp_fromlist_name_556;
        PyObject *tmp_level_name_556;
        tmp_name_name_556 = const_str_plain_sunporno;
        tmp_globals_name_556 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_556 = Py_None;
        tmp_fromlist_name_556 = const_tuple_str_plain_SunPornoIE_tuple;
        tmp_level_name_556 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1079;
        tmp_import_name_from_830 = IMPORT_MODULE5(tmp_name_name_556, tmp_globals_name_556, tmp_locals_name_556, tmp_fromlist_name_556, tmp_level_name_556);
        if (tmp_import_name_from_830 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1079;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_830)) {
           tmp_assign_source_975 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_830,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SunPornoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_975 = IMPORT_NAME(tmp_import_name_from_830, const_str_plain_SunPornoIE);
        }

        Py_DECREF(tmp_import_name_from_830);
        if (tmp_assign_source_975 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1079;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SunPornoIE, tmp_assign_source_975);
    }
    {
        PyObject *tmp_assign_source_976;
        PyObject *tmp_name_name_557;
        PyObject *tmp_globals_name_557;
        PyObject *tmp_locals_name_557;
        PyObject *tmp_fromlist_name_557;
        PyObject *tmp_level_name_557;
        tmp_name_name_557 = const_str_plain_sverigesradio;
        tmp_globals_name_557 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_557 = Py_None;
        tmp_fromlist_name_557 = const_tuple_bbc44f72fa920d1d178cc9eff9bce190_tuple;
        tmp_level_name_557 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1080;
        tmp_assign_source_976 = IMPORT_MODULE5(tmp_name_name_557, tmp_globals_name_557, tmp_locals_name_557, tmp_fromlist_name_557, tmp_level_name_557);
        if (tmp_assign_source_976 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1080;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_143__module == NULL);
        tmp_import_from_143__module = tmp_assign_source_976;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_977;
        PyObject *tmp_import_name_from_831;
        CHECK_OBJECT(tmp_import_from_143__module);
        tmp_import_name_from_831 = tmp_import_from_143__module;
        if (PyModule_Check(tmp_import_name_from_831)) {
           tmp_assign_source_977 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_831,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SverigesRadioEpisodeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_977 = IMPORT_NAME(tmp_import_name_from_831, const_str_plain_SverigesRadioEpisodeIE);
        }

        if (tmp_assign_source_977 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1080;

            goto try_except_handler_143;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SverigesRadioEpisodeIE, tmp_assign_source_977);
    }
    {
        PyObject *tmp_assign_source_978;
        PyObject *tmp_import_name_from_832;
        CHECK_OBJECT(tmp_import_from_143__module);
        tmp_import_name_from_832 = tmp_import_from_143__module;
        if (PyModule_Check(tmp_import_name_from_832)) {
           tmp_assign_source_978 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_832,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SverigesRadioPublicationIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_978 = IMPORT_NAME(tmp_import_name_from_832, const_str_plain_SverigesRadioPublicationIE);
        }

        if (tmp_assign_source_978 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1080;

            goto try_except_handler_143;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SverigesRadioPublicationIE, tmp_assign_source_978);
    }
    goto try_end_143;
    // Exception handler code:
    try_except_handler_143:;
    exception_keeper_type_143 = exception_type;
    exception_keeper_value_143 = exception_value;
    exception_keeper_tb_143 = exception_tb;
    exception_keeper_lineno_143 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_143__module);
    Py_DECREF(tmp_import_from_143__module);
    tmp_import_from_143__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_143;
    exception_value = exception_keeper_value_143;
    exception_tb = exception_keeper_tb_143;
    exception_lineno = exception_keeper_lineno_143;

    goto frame_exception_exit_1;
    // End of try:
    try_end_143:;
    CHECK_OBJECT(tmp_import_from_143__module);
    Py_DECREF(tmp_import_from_143__module);
    tmp_import_from_143__module = NULL;

    {
        PyObject *tmp_assign_source_979;
        PyObject *tmp_name_name_558;
        PyObject *tmp_globals_name_558;
        PyObject *tmp_locals_name_558;
        PyObject *tmp_fromlist_name_558;
        PyObject *tmp_level_name_558;
        tmp_name_name_558 = const_str_plain_svt;
        tmp_globals_name_558 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_558 = Py_None;
        tmp_fromlist_name_558 = const_tuple_889e8c67d1452e1e71de7c1727e8ed51_tuple;
        tmp_level_name_558 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1084;
        tmp_assign_source_979 = IMPORT_MODULE5(tmp_name_name_558, tmp_globals_name_558, tmp_locals_name_558, tmp_fromlist_name_558, tmp_level_name_558);
        if (tmp_assign_source_979 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1084;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_144__module == NULL);
        tmp_import_from_144__module = tmp_assign_source_979;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_980;
        PyObject *tmp_import_name_from_833;
        CHECK_OBJECT(tmp_import_from_144__module);
        tmp_import_name_from_833 = tmp_import_from_144__module;
        if (PyModule_Check(tmp_import_name_from_833)) {
           tmp_assign_source_980 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_833,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SVTIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_980 = IMPORT_NAME(tmp_import_name_from_833, const_str_plain_SVTIE);
        }

        if (tmp_assign_source_980 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1084;

            goto try_except_handler_144;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SVTIE, tmp_assign_source_980);
    }
    {
        PyObject *tmp_assign_source_981;
        PyObject *tmp_import_name_from_834;
        CHECK_OBJECT(tmp_import_from_144__module);
        tmp_import_name_from_834 = tmp_import_from_144__module;
        if (PyModule_Check(tmp_import_name_from_834)) {
           tmp_assign_source_981 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_834,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SVTPageIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_981 = IMPORT_NAME(tmp_import_name_from_834, const_str_plain_SVTPageIE);
        }

        if (tmp_assign_source_981 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1084;

            goto try_except_handler_144;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SVTPageIE, tmp_assign_source_981);
    }
    {
        PyObject *tmp_assign_source_982;
        PyObject *tmp_import_name_from_835;
        CHECK_OBJECT(tmp_import_from_144__module);
        tmp_import_name_from_835 = tmp_import_from_144__module;
        if (PyModule_Check(tmp_import_name_from_835)) {
           tmp_assign_source_982 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_835,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SVTPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_982 = IMPORT_NAME(tmp_import_name_from_835, const_str_plain_SVTPlayIE);
        }

        if (tmp_assign_source_982 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1084;

            goto try_except_handler_144;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SVTPlayIE, tmp_assign_source_982);
    }
    {
        PyObject *tmp_assign_source_983;
        PyObject *tmp_import_name_from_836;
        CHECK_OBJECT(tmp_import_from_144__module);
        tmp_import_name_from_836 = tmp_import_from_144__module;
        if (PyModule_Check(tmp_import_name_from_836)) {
           tmp_assign_source_983 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_836,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SVTSeriesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_983 = IMPORT_NAME(tmp_import_name_from_836, const_str_plain_SVTSeriesIE);
        }

        if (tmp_assign_source_983 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1084;

            goto try_except_handler_144;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SVTSeriesIE, tmp_assign_source_983);
    }
    goto try_end_144;
    // Exception handler code:
    try_except_handler_144:;
    exception_keeper_type_144 = exception_type;
    exception_keeper_value_144 = exception_value;
    exception_keeper_tb_144 = exception_tb;
    exception_keeper_lineno_144 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_144__module);
    Py_DECREF(tmp_import_from_144__module);
    tmp_import_from_144__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_144;
    exception_value = exception_keeper_value_144;
    exception_tb = exception_keeper_tb_144;
    exception_lineno = exception_keeper_lineno_144;

    goto frame_exception_exit_1;
    // End of try:
    try_end_144:;
    CHECK_OBJECT(tmp_import_from_144__module);
    Py_DECREF(tmp_import_from_144__module);
    tmp_import_from_144__module = NULL;

    {
        PyObject *tmp_assign_source_984;
        PyObject *tmp_import_name_from_837;
        PyObject *tmp_name_name_559;
        PyObject *tmp_globals_name_559;
        PyObject *tmp_locals_name_559;
        PyObject *tmp_fromlist_name_559;
        PyObject *tmp_level_name_559;
        tmp_name_name_559 = const_str_plain_swrmediathek;
        tmp_globals_name_559 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_559 = Py_None;
        tmp_fromlist_name_559 = const_tuple_str_plain_SWRMediathekIE_tuple;
        tmp_level_name_559 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1090;
        tmp_import_name_from_837 = IMPORT_MODULE5(tmp_name_name_559, tmp_globals_name_559, tmp_locals_name_559, tmp_fromlist_name_559, tmp_level_name_559);
        if (tmp_import_name_from_837 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1090;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_837)) {
           tmp_assign_source_984 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_837,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SWRMediathekIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_984 = IMPORT_NAME(tmp_import_name_from_837, const_str_plain_SWRMediathekIE);
        }

        Py_DECREF(tmp_import_name_from_837);
        if (tmp_assign_source_984 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1090;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SWRMediathekIE, tmp_assign_source_984);
    }
    {
        PyObject *tmp_assign_source_985;
        PyObject *tmp_import_name_from_838;
        PyObject *tmp_name_name_560;
        PyObject *tmp_globals_name_560;
        PyObject *tmp_locals_name_560;
        PyObject *tmp_fromlist_name_560;
        PyObject *tmp_level_name_560;
        tmp_name_name_560 = const_str_plain_syfy;
        tmp_globals_name_560 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_560 = Py_None;
        tmp_fromlist_name_560 = const_tuple_str_plain_SyfyIE_tuple;
        tmp_level_name_560 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1091;
        tmp_import_name_from_838 = IMPORT_MODULE5(tmp_name_name_560, tmp_globals_name_560, tmp_locals_name_560, tmp_fromlist_name_560, tmp_level_name_560);
        if (tmp_import_name_from_838 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1091;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_838)) {
           tmp_assign_source_985 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_838,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SyfyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_985 = IMPORT_NAME(tmp_import_name_from_838, const_str_plain_SyfyIE);
        }

        Py_DECREF(tmp_import_name_from_838);
        if (tmp_assign_source_985 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1091;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SyfyIE, tmp_assign_source_985);
    }
    {
        PyObject *tmp_assign_source_986;
        PyObject *tmp_import_name_from_839;
        PyObject *tmp_name_name_561;
        PyObject *tmp_globals_name_561;
        PyObject *tmp_locals_name_561;
        PyObject *tmp_fromlist_name_561;
        PyObject *tmp_level_name_561;
        tmp_name_name_561 = const_str_plain_sztvhu;
        tmp_globals_name_561 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_561 = Py_None;
        tmp_fromlist_name_561 = const_tuple_str_plain_SztvHuIE_tuple;
        tmp_level_name_561 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1092;
        tmp_import_name_from_839 = IMPORT_MODULE5(tmp_name_name_561, tmp_globals_name_561, tmp_locals_name_561, tmp_fromlist_name_561, tmp_level_name_561);
        if (tmp_import_name_from_839 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1092;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_839)) {
           tmp_assign_source_986 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_839,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SztvHuIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_986 = IMPORT_NAME(tmp_import_name_from_839, const_str_plain_SztvHuIE);
        }

        Py_DECREF(tmp_import_name_from_839);
        if (tmp_assign_source_986 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1092;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SztvHuIE, tmp_assign_source_986);
    }
    {
        PyObject *tmp_assign_source_987;
        PyObject *tmp_name_name_562;
        PyObject *tmp_globals_name_562;
        PyObject *tmp_locals_name_562;
        PyObject *tmp_fromlist_name_562;
        PyObject *tmp_level_name_562;
        tmp_name_name_562 = const_str_plain_tagesschau;
        tmp_globals_name_562 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_562 = Py_None;
        tmp_fromlist_name_562 = const_tuple_str_plain_TagesschauPlayerIE_str_plain_TagesschauIE_tuple;
        tmp_level_name_562 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1093;
        tmp_assign_source_987 = IMPORT_MODULE5(tmp_name_name_562, tmp_globals_name_562, tmp_locals_name_562, tmp_fromlist_name_562, tmp_level_name_562);
        if (tmp_assign_source_987 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1093;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_145__module == NULL);
        tmp_import_from_145__module = tmp_assign_source_987;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_988;
        PyObject *tmp_import_name_from_840;
        CHECK_OBJECT(tmp_import_from_145__module);
        tmp_import_name_from_840 = tmp_import_from_145__module;
        if (PyModule_Check(tmp_import_name_from_840)) {
           tmp_assign_source_988 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_840,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TagesschauPlayerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_988 = IMPORT_NAME(tmp_import_name_from_840, const_str_plain_TagesschauPlayerIE);
        }

        if (tmp_assign_source_988 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1093;

            goto try_except_handler_145;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TagesschauPlayerIE, tmp_assign_source_988);
    }
    {
        PyObject *tmp_assign_source_989;
        PyObject *tmp_import_name_from_841;
        CHECK_OBJECT(tmp_import_from_145__module);
        tmp_import_name_from_841 = tmp_import_from_145__module;
        if (PyModule_Check(tmp_import_name_from_841)) {
           tmp_assign_source_989 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_841,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TagesschauIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_989 = IMPORT_NAME(tmp_import_name_from_841, const_str_plain_TagesschauIE);
        }

        if (tmp_assign_source_989 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1093;

            goto try_except_handler_145;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TagesschauIE, tmp_assign_source_989);
    }
    goto try_end_145;
    // Exception handler code:
    try_except_handler_145:;
    exception_keeper_type_145 = exception_type;
    exception_keeper_value_145 = exception_value;
    exception_keeper_tb_145 = exception_tb;
    exception_keeper_lineno_145 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_145__module);
    Py_DECREF(tmp_import_from_145__module);
    tmp_import_from_145__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_145;
    exception_value = exception_keeper_value_145;
    exception_tb = exception_keeper_tb_145;
    exception_lineno = exception_keeper_lineno_145;

    goto frame_exception_exit_1;
    // End of try:
    try_end_145:;
    CHECK_OBJECT(tmp_import_from_145__module);
    Py_DECREF(tmp_import_from_145__module);
    tmp_import_from_145__module = NULL;

    {
        PyObject *tmp_assign_source_990;
        PyObject *tmp_import_name_from_842;
        PyObject *tmp_name_name_563;
        PyObject *tmp_globals_name_563;
        PyObject *tmp_locals_name_563;
        PyObject *tmp_fromlist_name_563;
        PyObject *tmp_level_name_563;
        tmp_name_name_563 = const_str_plain_tass;
        tmp_globals_name_563 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_563 = Py_None;
        tmp_fromlist_name_563 = const_tuple_str_plain_TassIE_tuple;
        tmp_level_name_563 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1097;
        tmp_import_name_from_842 = IMPORT_MODULE5(tmp_name_name_563, tmp_globals_name_563, tmp_locals_name_563, tmp_fromlist_name_563, tmp_level_name_563);
        if (tmp_import_name_from_842 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1097;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_842)) {
           tmp_assign_source_990 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_842,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TassIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_990 = IMPORT_NAME(tmp_import_name_from_842, const_str_plain_TassIE);
        }

        Py_DECREF(tmp_import_name_from_842);
        if (tmp_assign_source_990 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1097;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TassIE, tmp_assign_source_990);
    }
    {
        PyObject *tmp_assign_source_991;
        PyObject *tmp_import_name_from_843;
        PyObject *tmp_name_name_564;
        PyObject *tmp_globals_name_564;
        PyObject *tmp_locals_name_564;
        PyObject *tmp_fromlist_name_564;
        PyObject *tmp_level_name_564;
        tmp_name_name_564 = const_str_plain_tastytrade;
        tmp_globals_name_564 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_564 = Py_None;
        tmp_fromlist_name_564 = const_tuple_str_plain_TastyTradeIE_tuple;
        tmp_level_name_564 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1098;
        tmp_import_name_from_843 = IMPORT_MODULE5(tmp_name_name_564, tmp_globals_name_564, tmp_locals_name_564, tmp_fromlist_name_564, tmp_level_name_564);
        if (tmp_import_name_from_843 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1098;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_843)) {
           tmp_assign_source_991 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_843,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TastyTradeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_991 = IMPORT_NAME(tmp_import_name_from_843, const_str_plain_TastyTradeIE);
        }

        Py_DECREF(tmp_import_name_from_843);
        if (tmp_assign_source_991 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1098;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TastyTradeIE, tmp_assign_source_991);
    }
    {
        PyObject *tmp_assign_source_992;
        PyObject *tmp_import_name_from_844;
        PyObject *tmp_name_name_565;
        PyObject *tmp_globals_name_565;
        PyObject *tmp_locals_name_565;
        PyObject *tmp_fromlist_name_565;
        PyObject *tmp_level_name_565;
        tmp_name_name_565 = const_str_plain_tbs;
        tmp_globals_name_565 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_565 = Py_None;
        tmp_fromlist_name_565 = const_tuple_str_plain_TBSIE_tuple;
        tmp_level_name_565 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1099;
        tmp_import_name_from_844 = IMPORT_MODULE5(tmp_name_name_565, tmp_globals_name_565, tmp_locals_name_565, tmp_fromlist_name_565, tmp_level_name_565);
        if (tmp_import_name_from_844 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1099;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_844)) {
           tmp_assign_source_992 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_844,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TBSIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_992 = IMPORT_NAME(tmp_import_name_from_844, const_str_plain_TBSIE);
        }

        Py_DECREF(tmp_import_name_from_844);
        if (tmp_assign_source_992 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1099;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TBSIE, tmp_assign_source_992);
    }
    {
        PyObject *tmp_assign_source_993;
        PyObject *tmp_import_name_from_845;
        PyObject *tmp_name_name_566;
        PyObject *tmp_globals_name_566;
        PyObject *tmp_locals_name_566;
        PyObject *tmp_fromlist_name_566;
        PyObject *tmp_level_name_566;
        tmp_name_name_566 = const_str_plain_tdslifeway;
        tmp_globals_name_566 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_566 = Py_None;
        tmp_fromlist_name_566 = const_tuple_str_plain_TDSLifewayIE_tuple;
        tmp_level_name_566 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1100;
        tmp_import_name_from_845 = IMPORT_MODULE5(tmp_name_name_566, tmp_globals_name_566, tmp_locals_name_566, tmp_fromlist_name_566, tmp_level_name_566);
        if (tmp_import_name_from_845 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1100;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_845)) {
           tmp_assign_source_993 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_845,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TDSLifewayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_993 = IMPORT_NAME(tmp_import_name_from_845, const_str_plain_TDSLifewayIE);
        }

        Py_DECREF(tmp_import_name_from_845);
        if (tmp_assign_source_993 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1100;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TDSLifewayIE, tmp_assign_source_993);
    }
    {
        PyObject *tmp_assign_source_994;
        PyObject *tmp_name_name_567;
        PyObject *tmp_globals_name_567;
        PyObject *tmp_locals_name_567;
        PyObject *tmp_fromlist_name_567;
        PyObject *tmp_level_name_567;
        tmp_name_name_567 = const_str_plain_teachable;
        tmp_globals_name_567 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_567 = Py_None;
        tmp_fromlist_name_567 = const_tuple_str_plain_TeachableIE_str_plain_TeachableCourseIE_tuple;
        tmp_level_name_567 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1101;
        tmp_assign_source_994 = IMPORT_MODULE5(tmp_name_name_567, tmp_globals_name_567, tmp_locals_name_567, tmp_fromlist_name_567, tmp_level_name_567);
        if (tmp_assign_source_994 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1101;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_146__module == NULL);
        tmp_import_from_146__module = tmp_assign_source_994;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_995;
        PyObject *tmp_import_name_from_846;
        CHECK_OBJECT(tmp_import_from_146__module);
        tmp_import_name_from_846 = tmp_import_from_146__module;
        if (PyModule_Check(tmp_import_name_from_846)) {
           tmp_assign_source_995 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_846,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeachableIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_995 = IMPORT_NAME(tmp_import_name_from_846, const_str_plain_TeachableIE);
        }

        if (tmp_assign_source_995 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1101;

            goto try_except_handler_146;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeachableIE, tmp_assign_source_995);
    }
    {
        PyObject *tmp_assign_source_996;
        PyObject *tmp_import_name_from_847;
        CHECK_OBJECT(tmp_import_from_146__module);
        tmp_import_name_from_847 = tmp_import_from_146__module;
        if (PyModule_Check(tmp_import_name_from_847)) {
           tmp_assign_source_996 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_847,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeachableCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_996 = IMPORT_NAME(tmp_import_name_from_847, const_str_plain_TeachableCourseIE);
        }

        if (tmp_assign_source_996 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1101;

            goto try_except_handler_146;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeachableCourseIE, tmp_assign_source_996);
    }
    goto try_end_146;
    // Exception handler code:
    try_except_handler_146:;
    exception_keeper_type_146 = exception_type;
    exception_keeper_value_146 = exception_value;
    exception_keeper_tb_146 = exception_tb;
    exception_keeper_lineno_146 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_146__module);
    Py_DECREF(tmp_import_from_146__module);
    tmp_import_from_146__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_146;
    exception_value = exception_keeper_value_146;
    exception_tb = exception_keeper_tb_146;
    exception_lineno = exception_keeper_lineno_146;

    goto frame_exception_exit_1;
    // End of try:
    try_end_146:;
    CHECK_OBJECT(tmp_import_from_146__module);
    Py_DECREF(tmp_import_from_146__module);
    tmp_import_from_146__module = NULL;

    {
        PyObject *tmp_assign_source_997;
        PyObject *tmp_name_name_568;
        PyObject *tmp_globals_name_568;
        PyObject *tmp_locals_name_568;
        PyObject *tmp_fromlist_name_568;
        PyObject *tmp_level_name_568;
        tmp_name_name_568 = const_str_plain_teachertube;
        tmp_globals_name_568 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_568 = Py_None;
        tmp_fromlist_name_568 = const_tuple_str_plain_TeacherTubeIE_str_plain_TeacherTubeUserIE_tuple;
        tmp_level_name_568 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1105;
        tmp_assign_source_997 = IMPORT_MODULE5(tmp_name_name_568, tmp_globals_name_568, tmp_locals_name_568, tmp_fromlist_name_568, tmp_level_name_568);
        if (tmp_assign_source_997 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1105;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_147__module == NULL);
        tmp_import_from_147__module = tmp_assign_source_997;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_998;
        PyObject *tmp_import_name_from_848;
        CHECK_OBJECT(tmp_import_from_147__module);
        tmp_import_name_from_848 = tmp_import_from_147__module;
        if (PyModule_Check(tmp_import_name_from_848)) {
           tmp_assign_source_998 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_848,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeacherTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_998 = IMPORT_NAME(tmp_import_name_from_848, const_str_plain_TeacherTubeIE);
        }

        if (tmp_assign_source_998 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1105;

            goto try_except_handler_147;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeacherTubeIE, tmp_assign_source_998);
    }
    {
        PyObject *tmp_assign_source_999;
        PyObject *tmp_import_name_from_849;
        CHECK_OBJECT(tmp_import_from_147__module);
        tmp_import_name_from_849 = tmp_import_from_147__module;
        if (PyModule_Check(tmp_import_name_from_849)) {
           tmp_assign_source_999 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_849,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeacherTubeUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_999 = IMPORT_NAME(tmp_import_name_from_849, const_str_plain_TeacherTubeUserIE);
        }

        if (tmp_assign_source_999 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1105;

            goto try_except_handler_147;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeacherTubeUserIE, tmp_assign_source_999);
    }
    goto try_end_147;
    // Exception handler code:
    try_except_handler_147:;
    exception_keeper_type_147 = exception_type;
    exception_keeper_value_147 = exception_value;
    exception_keeper_tb_147 = exception_tb;
    exception_keeper_lineno_147 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_147__module);
    Py_DECREF(tmp_import_from_147__module);
    tmp_import_from_147__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_147;
    exception_value = exception_keeper_value_147;
    exception_tb = exception_keeper_tb_147;
    exception_lineno = exception_keeper_lineno_147;

    goto frame_exception_exit_1;
    // End of try:
    try_end_147:;
    CHECK_OBJECT(tmp_import_from_147__module);
    Py_DECREF(tmp_import_from_147__module);
    tmp_import_from_147__module = NULL;

    {
        PyObject *tmp_assign_source_1000;
        PyObject *tmp_import_name_from_850;
        PyObject *tmp_name_name_569;
        PyObject *tmp_globals_name_569;
        PyObject *tmp_locals_name_569;
        PyObject *tmp_fromlist_name_569;
        PyObject *tmp_level_name_569;
        tmp_name_name_569 = const_str_plain_teachingchannel;
        tmp_globals_name_569 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_569 = Py_None;
        tmp_fromlist_name_569 = const_tuple_str_plain_TeachingChannelIE_tuple;
        tmp_level_name_569 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1109;
        tmp_import_name_from_850 = IMPORT_MODULE5(tmp_name_name_569, tmp_globals_name_569, tmp_locals_name_569, tmp_fromlist_name_569, tmp_level_name_569);
        if (tmp_import_name_from_850 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1109;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_850)) {
           tmp_assign_source_1000 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_850,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeachingChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1000 = IMPORT_NAME(tmp_import_name_from_850, const_str_plain_TeachingChannelIE);
        }

        Py_DECREF(tmp_import_name_from_850);
        if (tmp_assign_source_1000 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1109;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeachingChannelIE, tmp_assign_source_1000);
    }
    {
        PyObject *tmp_assign_source_1001;
        PyObject *tmp_import_name_from_851;
        PyObject *tmp_name_name_570;
        PyObject *tmp_globals_name_570;
        PyObject *tmp_locals_name_570;
        PyObject *tmp_fromlist_name_570;
        PyObject *tmp_level_name_570;
        tmp_name_name_570 = const_str_plain_teamcoco;
        tmp_globals_name_570 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_570 = Py_None;
        tmp_fromlist_name_570 = const_tuple_str_plain_TeamcocoIE_tuple;
        tmp_level_name_570 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1110;
        tmp_import_name_from_851 = IMPORT_MODULE5(tmp_name_name_570, tmp_globals_name_570, tmp_locals_name_570, tmp_fromlist_name_570, tmp_level_name_570);
        if (tmp_import_name_from_851 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1110;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_851)) {
           tmp_assign_source_1001 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_851,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeamcocoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1001 = IMPORT_NAME(tmp_import_name_from_851, const_str_plain_TeamcocoIE);
        }

        Py_DECREF(tmp_import_name_from_851);
        if (tmp_assign_source_1001 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1110;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeamcocoIE, tmp_assign_source_1001);
    }
    {
        PyObject *tmp_assign_source_1002;
        PyObject *tmp_import_name_from_852;
        PyObject *tmp_name_name_571;
        PyObject *tmp_globals_name_571;
        PyObject *tmp_locals_name_571;
        PyObject *tmp_fromlist_name_571;
        PyObject *tmp_level_name_571;
        tmp_name_name_571 = const_str_plain_teamtreehouse;
        tmp_globals_name_571 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_571 = Py_None;
        tmp_fromlist_name_571 = const_tuple_str_plain_TeamTreeHouseIE_tuple;
        tmp_level_name_571 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1111;
        tmp_import_name_from_852 = IMPORT_MODULE5(tmp_name_name_571, tmp_globals_name_571, tmp_locals_name_571, tmp_fromlist_name_571, tmp_level_name_571);
        if (tmp_import_name_from_852 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1111;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_852)) {
           tmp_assign_source_1002 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_852,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeamTreeHouseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1002 = IMPORT_NAME(tmp_import_name_from_852, const_str_plain_TeamTreeHouseIE);
        }

        Py_DECREF(tmp_import_name_from_852);
        if (tmp_assign_source_1002 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1111;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeamTreeHouseIE, tmp_assign_source_1002);
    }
    {
        PyObject *tmp_assign_source_1003;
        PyObject *tmp_import_name_from_853;
        PyObject *tmp_name_name_572;
        PyObject *tmp_globals_name_572;
        PyObject *tmp_locals_name_572;
        PyObject *tmp_fromlist_name_572;
        PyObject *tmp_level_name_572;
        tmp_name_name_572 = const_str_plain_techtalks;
        tmp_globals_name_572 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_572 = Py_None;
        tmp_fromlist_name_572 = const_tuple_str_plain_TechTalksIE_tuple;
        tmp_level_name_572 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1112;
        tmp_import_name_from_853 = IMPORT_MODULE5(tmp_name_name_572, tmp_globals_name_572, tmp_locals_name_572, tmp_fromlist_name_572, tmp_level_name_572);
        if (tmp_import_name_from_853 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1112;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_853)) {
           tmp_assign_source_1003 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_853,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TechTalksIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1003 = IMPORT_NAME(tmp_import_name_from_853, const_str_plain_TechTalksIE);
        }

        Py_DECREF(tmp_import_name_from_853);
        if (tmp_assign_source_1003 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1112;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TechTalksIE, tmp_assign_source_1003);
    }
    {
        PyObject *tmp_assign_source_1004;
        PyObject *tmp_import_name_from_854;
        PyObject *tmp_name_name_573;
        PyObject *tmp_globals_name_573;
        PyObject *tmp_locals_name_573;
        PyObject *tmp_fromlist_name_573;
        PyObject *tmp_level_name_573;
        tmp_name_name_573 = const_str_plain_ted;
        tmp_globals_name_573 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_573 = Py_None;
        tmp_fromlist_name_573 = const_tuple_str_plain_TEDIE_tuple;
        tmp_level_name_573 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1113;
        tmp_import_name_from_854 = IMPORT_MODULE5(tmp_name_name_573, tmp_globals_name_573, tmp_locals_name_573, tmp_fromlist_name_573, tmp_level_name_573);
        if (tmp_import_name_from_854 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1113;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_854)) {
           tmp_assign_source_1004 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_854,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TEDIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1004 = IMPORT_NAME(tmp_import_name_from_854, const_str_plain_TEDIE);
        }

        Py_DECREF(tmp_import_name_from_854);
        if (tmp_assign_source_1004 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1113;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TEDIE, tmp_assign_source_1004);
    }
    {
        PyObject *tmp_assign_source_1005;
        PyObject *tmp_import_name_from_855;
        PyObject *tmp_name_name_574;
        PyObject *tmp_globals_name_574;
        PyObject *tmp_locals_name_574;
        PyObject *tmp_fromlist_name_574;
        PyObject *tmp_level_name_574;
        tmp_name_name_574 = const_str_plain_tele5;
        tmp_globals_name_574 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_574 = Py_None;
        tmp_fromlist_name_574 = const_tuple_str_plain_Tele5IE_tuple;
        tmp_level_name_574 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1114;
        tmp_import_name_from_855 = IMPORT_MODULE5(tmp_name_name_574, tmp_globals_name_574, tmp_locals_name_574, tmp_fromlist_name_574, tmp_level_name_574);
        if (tmp_import_name_from_855 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1114;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_855)) {
           tmp_assign_source_1005 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_855,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Tele5IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1005 = IMPORT_NAME(tmp_import_name_from_855, const_str_plain_Tele5IE);
        }

        Py_DECREF(tmp_import_name_from_855);
        if (tmp_assign_source_1005 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1114;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Tele5IE, tmp_assign_source_1005);
    }
    {
        PyObject *tmp_assign_source_1006;
        PyObject *tmp_import_name_from_856;
        PyObject *tmp_name_name_575;
        PyObject *tmp_globals_name_575;
        PyObject *tmp_locals_name_575;
        PyObject *tmp_fromlist_name_575;
        PyObject *tmp_level_name_575;
        tmp_name_name_575 = const_str_plain_tele13;
        tmp_globals_name_575 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_575 = Py_None;
        tmp_fromlist_name_575 = const_tuple_str_plain_Tele13IE_tuple;
        tmp_level_name_575 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1115;
        tmp_import_name_from_856 = IMPORT_MODULE5(tmp_name_name_575, tmp_globals_name_575, tmp_locals_name_575, tmp_fromlist_name_575, tmp_level_name_575);
        if (tmp_import_name_from_856 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1115;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_856)) {
           tmp_assign_source_1006 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_856,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Tele13IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1006 = IMPORT_NAME(tmp_import_name_from_856, const_str_plain_Tele13IE);
        }

        Py_DECREF(tmp_import_name_from_856);
        if (tmp_assign_source_1006 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1115;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Tele13IE, tmp_assign_source_1006);
    }
    {
        PyObject *tmp_assign_source_1007;
        PyObject *tmp_import_name_from_857;
        PyObject *tmp_name_name_576;
        PyObject *tmp_globals_name_576;
        PyObject *tmp_locals_name_576;
        PyObject *tmp_fromlist_name_576;
        PyObject *tmp_level_name_576;
        tmp_name_name_576 = const_str_plain_telebruxelles;
        tmp_globals_name_576 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_576 = Py_None;
        tmp_fromlist_name_576 = const_tuple_str_plain_TeleBruxellesIE_tuple;
        tmp_level_name_576 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1116;
        tmp_import_name_from_857 = IMPORT_MODULE5(tmp_name_name_576, tmp_globals_name_576, tmp_locals_name_576, tmp_fromlist_name_576, tmp_level_name_576);
        if (tmp_import_name_from_857 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1116;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_857)) {
           tmp_assign_source_1007 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_857,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeleBruxellesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1007 = IMPORT_NAME(tmp_import_name_from_857, const_str_plain_TeleBruxellesIE);
        }

        Py_DECREF(tmp_import_name_from_857);
        if (tmp_assign_source_1007 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1116;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeleBruxellesIE, tmp_assign_source_1007);
    }
    {
        PyObject *tmp_assign_source_1008;
        PyObject *tmp_import_name_from_858;
        PyObject *tmp_name_name_577;
        PyObject *tmp_globals_name_577;
        PyObject *tmp_locals_name_577;
        PyObject *tmp_fromlist_name_577;
        PyObject *tmp_level_name_577;
        tmp_name_name_577 = const_str_plain_telecinco;
        tmp_globals_name_577 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_577 = Py_None;
        tmp_fromlist_name_577 = const_tuple_str_plain_TelecincoIE_tuple;
        tmp_level_name_577 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1117;
        tmp_import_name_from_858 = IMPORT_MODULE5(tmp_name_name_577, tmp_globals_name_577, tmp_locals_name_577, tmp_fromlist_name_577, tmp_level_name_577);
        if (tmp_import_name_from_858 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1117;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_858)) {
           tmp_assign_source_1008 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_858,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TelecincoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1008 = IMPORT_NAME(tmp_import_name_from_858, const_str_plain_TelecincoIE);
        }

        Py_DECREF(tmp_import_name_from_858);
        if (tmp_assign_source_1008 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1117;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TelecincoIE, tmp_assign_source_1008);
    }
    {
        PyObject *tmp_assign_source_1009;
        PyObject *tmp_import_name_from_859;
        PyObject *tmp_name_name_578;
        PyObject *tmp_globals_name_578;
        PyObject *tmp_locals_name_578;
        PyObject *tmp_fromlist_name_578;
        PyObject *tmp_level_name_578;
        tmp_name_name_578 = const_str_plain_telegraaf;
        tmp_globals_name_578 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_578 = Py_None;
        tmp_fromlist_name_578 = const_tuple_str_plain_TelegraafIE_tuple;
        tmp_level_name_578 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1118;
        tmp_import_name_from_859 = IMPORT_MODULE5(tmp_name_name_578, tmp_globals_name_578, tmp_locals_name_578, tmp_fromlist_name_578, tmp_level_name_578);
        if (tmp_import_name_from_859 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1118;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_859)) {
           tmp_assign_source_1009 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_859,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TelegraafIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1009 = IMPORT_NAME(tmp_import_name_from_859, const_str_plain_TelegraafIE);
        }

        Py_DECREF(tmp_import_name_from_859);
        if (tmp_assign_source_1009 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1118;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TelegraafIE, tmp_assign_source_1009);
    }
    {
        PyObject *tmp_assign_source_1010;
        PyObject *tmp_import_name_from_860;
        PyObject *tmp_name_name_579;
        PyObject *tmp_globals_name_579;
        PyObject *tmp_locals_name_579;
        PyObject *tmp_fromlist_name_579;
        PyObject *tmp_level_name_579;
        tmp_name_name_579 = const_str_plain_telemb;
        tmp_globals_name_579 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_579 = Py_None;
        tmp_fromlist_name_579 = const_tuple_str_plain_TeleMBIE_tuple;
        tmp_level_name_579 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1119;
        tmp_import_name_from_860 = IMPORT_MODULE5(tmp_name_name_579, tmp_globals_name_579, tmp_locals_name_579, tmp_fromlist_name_579, tmp_level_name_579);
        if (tmp_import_name_from_860 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1119;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_860)) {
           tmp_assign_source_1010 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_860,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeleMBIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1010 = IMPORT_NAME(tmp_import_name_from_860, const_str_plain_TeleMBIE);
        }

        Py_DECREF(tmp_import_name_from_860);
        if (tmp_assign_source_1010 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1119;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeleMBIE, tmp_assign_source_1010);
    }
    {
        PyObject *tmp_assign_source_1011;
        PyObject *tmp_name_name_580;
        PyObject *tmp_globals_name_580;
        PyObject *tmp_locals_name_580;
        PyObject *tmp_fromlist_name_580;
        PyObject *tmp_level_name_580;
        tmp_name_name_580 = const_str_plain_telequebec;
        tmp_globals_name_580 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_580 = Py_None;
        tmp_fromlist_name_580 = const_tuple_a01b8cd5da332ea6788ffb1d2d2da8cc_tuple;
        tmp_level_name_580 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1120;
        tmp_assign_source_1011 = IMPORT_MODULE5(tmp_name_name_580, tmp_globals_name_580, tmp_locals_name_580, tmp_fromlist_name_580, tmp_level_name_580);
        if (tmp_assign_source_1011 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1120;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_148__module == NULL);
        tmp_import_from_148__module = tmp_assign_source_1011;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1012;
        PyObject *tmp_import_name_from_861;
        CHECK_OBJECT(tmp_import_from_148__module);
        tmp_import_name_from_861 = tmp_import_from_148__module;
        if (PyModule_Check(tmp_import_name_from_861)) {
           tmp_assign_source_1012 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_861,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeleQuebecIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1012 = IMPORT_NAME(tmp_import_name_from_861, const_str_plain_TeleQuebecIE);
        }

        if (tmp_assign_source_1012 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1120;

            goto try_except_handler_148;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeleQuebecIE, tmp_assign_source_1012);
    }
    {
        PyObject *tmp_assign_source_1013;
        PyObject *tmp_import_name_from_862;
        CHECK_OBJECT(tmp_import_from_148__module);
        tmp_import_name_from_862 = tmp_import_from_148__module;
        if (PyModule_Check(tmp_import_name_from_862)) {
           tmp_assign_source_1013 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_862,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeleQuebecSquatIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1013 = IMPORT_NAME(tmp_import_name_from_862, const_str_plain_TeleQuebecSquatIE);
        }

        if (tmp_assign_source_1013 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1120;

            goto try_except_handler_148;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeleQuebecSquatIE, tmp_assign_source_1013);
    }
    {
        PyObject *tmp_assign_source_1014;
        PyObject *tmp_import_name_from_863;
        CHECK_OBJECT(tmp_import_from_148__module);
        tmp_import_name_from_863 = tmp_import_from_148__module;
        if (PyModule_Check(tmp_import_name_from_863)) {
           tmp_assign_source_1014 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_863,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeleQuebecEmissionIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1014 = IMPORT_NAME(tmp_import_name_from_863, const_str_plain_TeleQuebecEmissionIE);
        }

        if (tmp_assign_source_1014 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1120;

            goto try_except_handler_148;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeleQuebecEmissionIE, tmp_assign_source_1014);
    }
    {
        PyObject *tmp_assign_source_1015;
        PyObject *tmp_import_name_from_864;
        CHECK_OBJECT(tmp_import_from_148__module);
        tmp_import_name_from_864 = tmp_import_from_148__module;
        if (PyModule_Check(tmp_import_name_from_864)) {
           tmp_assign_source_1015 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_864,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeleQuebecLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1015 = IMPORT_NAME(tmp_import_name_from_864, const_str_plain_TeleQuebecLiveIE);
        }

        if (tmp_assign_source_1015 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1120;

            goto try_except_handler_148;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeleQuebecLiveIE, tmp_assign_source_1015);
    }
    goto try_end_148;
    // Exception handler code:
    try_except_handler_148:;
    exception_keeper_type_148 = exception_type;
    exception_keeper_value_148 = exception_value;
    exception_keeper_tb_148 = exception_tb;
    exception_keeper_lineno_148 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_148__module);
    Py_DECREF(tmp_import_from_148__module);
    tmp_import_from_148__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_148;
    exception_value = exception_keeper_value_148;
    exception_tb = exception_keeper_tb_148;
    exception_lineno = exception_keeper_lineno_148;

    goto frame_exception_exit_1;
    // End of try:
    try_end_148:;
    CHECK_OBJECT(tmp_import_from_148__module);
    Py_DECREF(tmp_import_from_148__module);
    tmp_import_from_148__module = NULL;

    {
        PyObject *tmp_assign_source_1016;
        PyObject *tmp_import_name_from_865;
        PyObject *tmp_name_name_581;
        PyObject *tmp_globals_name_581;
        PyObject *tmp_locals_name_581;
        PyObject *tmp_fromlist_name_581;
        PyObject *tmp_level_name_581;
        tmp_name_name_581 = const_str_plain_teletask;
        tmp_globals_name_581 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_581 = Py_None;
        tmp_fromlist_name_581 = const_tuple_str_plain_TeleTaskIE_tuple;
        tmp_level_name_581 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1126;
        tmp_import_name_from_865 = IMPORT_MODULE5(tmp_name_name_581, tmp_globals_name_581, tmp_locals_name_581, tmp_fromlist_name_581, tmp_level_name_581);
        if (tmp_import_name_from_865 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1126;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_865)) {
           tmp_assign_source_1016 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_865,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TeleTaskIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1016 = IMPORT_NAME(tmp_import_name_from_865, const_str_plain_TeleTaskIE);
        }

        Py_DECREF(tmp_import_name_from_865);
        if (tmp_assign_source_1016 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1126;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TeleTaskIE, tmp_assign_source_1016);
    }
    {
        PyObject *tmp_assign_source_1017;
        PyObject *tmp_import_name_from_866;
        PyObject *tmp_name_name_582;
        PyObject *tmp_globals_name_582;
        PyObject *tmp_locals_name_582;
        PyObject *tmp_fromlist_name_582;
        PyObject *tmp_level_name_582;
        tmp_name_name_582 = const_str_plain_telewebion;
        tmp_globals_name_582 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_582 = Py_None;
        tmp_fromlist_name_582 = const_tuple_str_plain_TelewebionIE_tuple;
        tmp_level_name_582 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1127;
        tmp_import_name_from_866 = IMPORT_MODULE5(tmp_name_name_582, tmp_globals_name_582, tmp_locals_name_582, tmp_fromlist_name_582, tmp_level_name_582);
        if (tmp_import_name_from_866 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1127;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_866)) {
           tmp_assign_source_1017 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_866,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TelewebionIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1017 = IMPORT_NAME(tmp_import_name_from_866, const_str_plain_TelewebionIE);
        }

        Py_DECREF(tmp_import_name_from_866);
        if (tmp_assign_source_1017 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1127;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TelewebionIE, tmp_assign_source_1017);
    }
    {
        PyObject *tmp_assign_source_1018;
        PyObject *tmp_import_name_from_867;
        PyObject *tmp_name_name_583;
        PyObject *tmp_globals_name_583;
        PyObject *tmp_locals_name_583;
        PyObject *tmp_fromlist_name_583;
        PyObject *tmp_level_name_583;
        tmp_name_name_583 = const_str_plain_tennistv;
        tmp_globals_name_583 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_583 = Py_None;
        tmp_fromlist_name_583 = const_tuple_str_plain_TennisTVIE_tuple;
        tmp_level_name_583 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1128;
        tmp_import_name_from_867 = IMPORT_MODULE5(tmp_name_name_583, tmp_globals_name_583, tmp_locals_name_583, tmp_fromlist_name_583, tmp_level_name_583);
        if (tmp_import_name_from_867 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1128;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_867)) {
           tmp_assign_source_1018 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_867,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TennisTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1018 = IMPORT_NAME(tmp_import_name_from_867, const_str_plain_TennisTVIE);
        }

        Py_DECREF(tmp_import_name_from_867);
        if (tmp_assign_source_1018 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1128;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TennisTVIE, tmp_assign_source_1018);
    }
    {
        PyObject *tmp_assign_source_1019;
        PyObject *tmp_import_name_from_868;
        PyObject *tmp_name_name_584;
        PyObject *tmp_globals_name_584;
        PyObject *tmp_locals_name_584;
        PyObject *tmp_fromlist_name_584;
        PyObject *tmp_level_name_584;
        tmp_name_name_584 = const_str_plain_tenplay;
        tmp_globals_name_584 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_584 = Py_None;
        tmp_fromlist_name_584 = const_tuple_str_plain_TenPlayIE_tuple;
        tmp_level_name_584 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1129;
        tmp_import_name_from_868 = IMPORT_MODULE5(tmp_name_name_584, tmp_globals_name_584, tmp_locals_name_584, tmp_fromlist_name_584, tmp_level_name_584);
        if (tmp_import_name_from_868 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1129;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_868)) {
           tmp_assign_source_1019 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_868,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TenPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1019 = IMPORT_NAME(tmp_import_name_from_868, const_str_plain_TenPlayIE);
        }

        Py_DECREF(tmp_import_name_from_868);
        if (tmp_assign_source_1019 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1129;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TenPlayIE, tmp_assign_source_1019);
    }
    {
        PyObject *tmp_assign_source_1020;
        PyObject *tmp_import_name_from_869;
        PyObject *tmp_name_name_585;
        PyObject *tmp_globals_name_585;
        PyObject *tmp_locals_name_585;
        PyObject *tmp_fromlist_name_585;
        PyObject *tmp_level_name_585;
        tmp_name_name_585 = const_str_plain_testurl;
        tmp_globals_name_585 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_585 = Py_None;
        tmp_fromlist_name_585 = const_tuple_str_plain_TestURLIE_tuple;
        tmp_level_name_585 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1130;
        tmp_import_name_from_869 = IMPORT_MODULE5(tmp_name_name_585, tmp_globals_name_585, tmp_locals_name_585, tmp_fromlist_name_585, tmp_level_name_585);
        if (tmp_import_name_from_869 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1130;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_869)) {
           tmp_assign_source_1020 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_869,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TestURLIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1020 = IMPORT_NAME(tmp_import_name_from_869, const_str_plain_TestURLIE);
        }

        Py_DECREF(tmp_import_name_from_869);
        if (tmp_assign_source_1020 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1130;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TestURLIE, tmp_assign_source_1020);
    }
    {
        PyObject *tmp_assign_source_1021;
        PyObject *tmp_import_name_from_870;
        PyObject *tmp_name_name_586;
        PyObject *tmp_globals_name_586;
        PyObject *tmp_locals_name_586;
        PyObject *tmp_fromlist_name_586;
        PyObject *tmp_level_name_586;
        tmp_name_name_586 = const_str_plain_tf1;
        tmp_globals_name_586 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_586 = Py_None;
        tmp_fromlist_name_586 = const_tuple_str_plain_TF1IE_tuple;
        tmp_level_name_586 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1131;
        tmp_import_name_from_870 = IMPORT_MODULE5(tmp_name_name_586, tmp_globals_name_586, tmp_locals_name_586, tmp_fromlist_name_586, tmp_level_name_586);
        if (tmp_import_name_from_870 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1131;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_870)) {
           tmp_assign_source_1021 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_870,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TF1IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1021 = IMPORT_NAME(tmp_import_name_from_870, const_str_plain_TF1IE);
        }

        Py_DECREF(tmp_import_name_from_870);
        if (tmp_assign_source_1021 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1131;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TF1IE, tmp_assign_source_1021);
    }
    {
        PyObject *tmp_assign_source_1022;
        PyObject *tmp_import_name_from_871;
        PyObject *tmp_name_name_587;
        PyObject *tmp_globals_name_587;
        PyObject *tmp_locals_name_587;
        PyObject *tmp_fromlist_name_587;
        PyObject *tmp_level_name_587;
        tmp_name_name_587 = const_str_plain_tfo;
        tmp_globals_name_587 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_587 = Py_None;
        tmp_fromlist_name_587 = const_tuple_str_plain_TFOIE_tuple;
        tmp_level_name_587 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1132;
        tmp_import_name_from_871 = IMPORT_MODULE5(tmp_name_name_587, tmp_globals_name_587, tmp_locals_name_587, tmp_fromlist_name_587, tmp_level_name_587);
        if (tmp_import_name_from_871 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1132;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_871)) {
           tmp_assign_source_1022 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_871,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TFOIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1022 = IMPORT_NAME(tmp_import_name_from_871, const_str_plain_TFOIE);
        }

        Py_DECREF(tmp_import_name_from_871);
        if (tmp_assign_source_1022 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1132;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TFOIE, tmp_assign_source_1022);
    }
    {
        PyObject *tmp_assign_source_1023;
        PyObject *tmp_import_name_from_872;
        PyObject *tmp_name_name_588;
        PyObject *tmp_globals_name_588;
        PyObject *tmp_locals_name_588;
        PyObject *tmp_fromlist_name_588;
        PyObject *tmp_level_name_588;
        tmp_name_name_588 = const_str_plain_theintercept;
        tmp_globals_name_588 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_588 = Py_None;
        tmp_fromlist_name_588 = const_tuple_str_plain_TheInterceptIE_tuple;
        tmp_level_name_588 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1133;
        tmp_import_name_from_872 = IMPORT_MODULE5(tmp_name_name_588, tmp_globals_name_588, tmp_locals_name_588, tmp_fromlist_name_588, tmp_level_name_588);
        if (tmp_import_name_from_872 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1133;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_872)) {
           tmp_assign_source_1023 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_872,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TheInterceptIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1023 = IMPORT_NAME(tmp_import_name_from_872, const_str_plain_TheInterceptIE);
        }

        Py_DECREF(tmp_import_name_from_872);
        if (tmp_assign_source_1023 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1133;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TheInterceptIE, tmp_assign_source_1023);
    }
    {
        PyObject *tmp_assign_source_1024;
        PyObject *tmp_name_name_589;
        PyObject *tmp_globals_name_589;
        PyObject *tmp_locals_name_589;
        PyObject *tmp_fromlist_name_589;
        PyObject *tmp_level_name_589;
        tmp_name_name_589 = const_str_plain_theplatform;
        tmp_globals_name_589 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_589 = Py_None;
        tmp_fromlist_name_589 = const_tuple_str_plain_ThePlatformIE_str_plain_ThePlatformFeedIE_tuple;
        tmp_level_name_589 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1134;
        tmp_assign_source_1024 = IMPORT_MODULE5(tmp_name_name_589, tmp_globals_name_589, tmp_locals_name_589, tmp_fromlist_name_589, tmp_level_name_589);
        if (tmp_assign_source_1024 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1134;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_149__module == NULL);
        tmp_import_from_149__module = tmp_assign_source_1024;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1025;
        PyObject *tmp_import_name_from_873;
        CHECK_OBJECT(tmp_import_from_149__module);
        tmp_import_name_from_873 = tmp_import_from_149__module;
        if (PyModule_Check(tmp_import_name_from_873)) {
           tmp_assign_source_1025 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_873,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ThePlatformIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1025 = IMPORT_NAME(tmp_import_name_from_873, const_str_plain_ThePlatformIE);
        }

        if (tmp_assign_source_1025 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1134;

            goto try_except_handler_149;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ThePlatformIE, tmp_assign_source_1025);
    }
    {
        PyObject *tmp_assign_source_1026;
        PyObject *tmp_import_name_from_874;
        CHECK_OBJECT(tmp_import_from_149__module);
        tmp_import_name_from_874 = tmp_import_from_149__module;
        if (PyModule_Check(tmp_import_name_from_874)) {
           tmp_assign_source_1026 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_874,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ThePlatformFeedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1026 = IMPORT_NAME(tmp_import_name_from_874, const_str_plain_ThePlatformFeedIE);
        }

        if (tmp_assign_source_1026 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1134;

            goto try_except_handler_149;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ThePlatformFeedIE, tmp_assign_source_1026);
    }
    goto try_end_149;
    // Exception handler code:
    try_except_handler_149:;
    exception_keeper_type_149 = exception_type;
    exception_keeper_value_149 = exception_value;
    exception_keeper_tb_149 = exception_tb;
    exception_keeper_lineno_149 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_149__module);
    Py_DECREF(tmp_import_from_149__module);
    tmp_import_from_149__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_149;
    exception_value = exception_keeper_value_149;
    exception_tb = exception_keeper_tb_149;
    exception_lineno = exception_keeper_lineno_149;

    goto frame_exception_exit_1;
    // End of try:
    try_end_149:;
    CHECK_OBJECT(tmp_import_from_149__module);
    Py_DECREF(tmp_import_from_149__module);
    tmp_import_from_149__module = NULL;

    {
        PyObject *tmp_assign_source_1027;
        PyObject *tmp_import_name_from_875;
        PyObject *tmp_name_name_590;
        PyObject *tmp_globals_name_590;
        PyObject *tmp_locals_name_590;
        PyObject *tmp_fromlist_name_590;
        PyObject *tmp_level_name_590;
        tmp_name_name_590 = const_str_plain_thescene;
        tmp_globals_name_590 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_590 = Py_None;
        tmp_fromlist_name_590 = const_tuple_str_plain_TheSceneIE_tuple;
        tmp_level_name_590 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1138;
        tmp_import_name_from_875 = IMPORT_MODULE5(tmp_name_name_590, tmp_globals_name_590, tmp_locals_name_590, tmp_fromlist_name_590, tmp_level_name_590);
        if (tmp_import_name_from_875 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1138;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_875)) {
           tmp_assign_source_1027 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_875,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TheSceneIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1027 = IMPORT_NAME(tmp_import_name_from_875, const_str_plain_TheSceneIE);
        }

        Py_DECREF(tmp_import_name_from_875);
        if (tmp_assign_source_1027 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1138;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TheSceneIE, tmp_assign_source_1027);
    }
    {
        PyObject *tmp_assign_source_1028;
        PyObject *tmp_import_name_from_876;
        PyObject *tmp_name_name_591;
        PyObject *tmp_globals_name_591;
        PyObject *tmp_locals_name_591;
        PyObject *tmp_fromlist_name_591;
        PyObject *tmp_level_name_591;
        tmp_name_name_591 = const_str_plain_thestar;
        tmp_globals_name_591 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_591 = Py_None;
        tmp_fromlist_name_591 = const_tuple_str_plain_TheStarIE_tuple;
        tmp_level_name_591 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1139;
        tmp_import_name_from_876 = IMPORT_MODULE5(tmp_name_name_591, tmp_globals_name_591, tmp_locals_name_591, tmp_fromlist_name_591, tmp_level_name_591);
        if (tmp_import_name_from_876 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1139;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_876)) {
           tmp_assign_source_1028 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_876,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TheStarIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1028 = IMPORT_NAME(tmp_import_name_from_876, const_str_plain_TheStarIE);
        }

        Py_DECREF(tmp_import_name_from_876);
        if (tmp_assign_source_1028 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1139;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TheStarIE, tmp_assign_source_1028);
    }
    {
        PyObject *tmp_assign_source_1029;
        PyObject *tmp_import_name_from_877;
        PyObject *tmp_name_name_592;
        PyObject *tmp_globals_name_592;
        PyObject *tmp_locals_name_592;
        PyObject *tmp_fromlist_name_592;
        PyObject *tmp_level_name_592;
        tmp_name_name_592 = const_str_plain_thesun;
        tmp_globals_name_592 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_592 = Py_None;
        tmp_fromlist_name_592 = const_tuple_str_plain_TheSunIE_tuple;
        tmp_level_name_592 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1140;
        tmp_import_name_from_877 = IMPORT_MODULE5(tmp_name_name_592, tmp_globals_name_592, tmp_locals_name_592, tmp_fromlist_name_592, tmp_level_name_592);
        if (tmp_import_name_from_877 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1140;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_877)) {
           tmp_assign_source_1029 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_877,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TheSunIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1029 = IMPORT_NAME(tmp_import_name_from_877, const_str_plain_TheSunIE);
        }

        Py_DECREF(tmp_import_name_from_877);
        if (tmp_assign_source_1029 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1140;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TheSunIE, tmp_assign_source_1029);
    }
    {
        PyObject *tmp_assign_source_1030;
        PyObject *tmp_import_name_from_878;
        PyObject *tmp_name_name_593;
        PyObject *tmp_globals_name_593;
        PyObject *tmp_locals_name_593;
        PyObject *tmp_fromlist_name_593;
        PyObject *tmp_level_name_593;
        tmp_name_name_593 = const_str_plain_theweatherchannel;
        tmp_globals_name_593 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_593 = Py_None;
        tmp_fromlist_name_593 = const_tuple_str_plain_TheWeatherChannelIE_tuple;
        tmp_level_name_593 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1141;
        tmp_import_name_from_878 = IMPORT_MODULE5(tmp_name_name_593, tmp_globals_name_593, tmp_locals_name_593, tmp_fromlist_name_593, tmp_level_name_593);
        if (tmp_import_name_from_878 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1141;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_878)) {
           tmp_assign_source_1030 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_878,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TheWeatherChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1030 = IMPORT_NAME(tmp_import_name_from_878, const_str_plain_TheWeatherChannelIE);
        }

        Py_DECREF(tmp_import_name_from_878);
        if (tmp_assign_source_1030 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1141;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TheWeatherChannelIE, tmp_assign_source_1030);
    }
    {
        PyObject *tmp_assign_source_1031;
        PyObject *tmp_import_name_from_879;
        PyObject *tmp_name_name_594;
        PyObject *tmp_globals_name_594;
        PyObject *tmp_locals_name_594;
        PyObject *tmp_fromlist_name_594;
        PyObject *tmp_level_name_594;
        tmp_name_name_594 = const_str_plain_thisamericanlife;
        tmp_globals_name_594 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_594 = Py_None;
        tmp_fromlist_name_594 = const_tuple_str_plain_ThisAmericanLifeIE_tuple;
        tmp_level_name_594 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1142;
        tmp_import_name_from_879 = IMPORT_MODULE5(tmp_name_name_594, tmp_globals_name_594, tmp_locals_name_594, tmp_fromlist_name_594, tmp_level_name_594);
        if (tmp_import_name_from_879 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1142;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_879)) {
           tmp_assign_source_1031 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_879,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ThisAmericanLifeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1031 = IMPORT_NAME(tmp_import_name_from_879, const_str_plain_ThisAmericanLifeIE);
        }

        Py_DECREF(tmp_import_name_from_879);
        if (tmp_assign_source_1031 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1142;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ThisAmericanLifeIE, tmp_assign_source_1031);
    }
    {
        PyObject *tmp_assign_source_1032;
        PyObject *tmp_import_name_from_880;
        PyObject *tmp_name_name_595;
        PyObject *tmp_globals_name_595;
        PyObject *tmp_locals_name_595;
        PyObject *tmp_fromlist_name_595;
        PyObject *tmp_level_name_595;
        tmp_name_name_595 = const_str_plain_thisav;
        tmp_globals_name_595 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_595 = Py_None;
        tmp_fromlist_name_595 = const_tuple_str_plain_ThisAVIE_tuple;
        tmp_level_name_595 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1143;
        tmp_import_name_from_880 = IMPORT_MODULE5(tmp_name_name_595, tmp_globals_name_595, tmp_locals_name_595, tmp_fromlist_name_595, tmp_level_name_595);
        if (tmp_import_name_from_880 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1143;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_880)) {
           tmp_assign_source_1032 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_880,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ThisAVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1032 = IMPORT_NAME(tmp_import_name_from_880, const_str_plain_ThisAVIE);
        }

        Py_DECREF(tmp_import_name_from_880);
        if (tmp_assign_source_1032 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1143;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ThisAVIE, tmp_assign_source_1032);
    }
    {
        PyObject *tmp_assign_source_1033;
        PyObject *tmp_import_name_from_881;
        PyObject *tmp_name_name_596;
        PyObject *tmp_globals_name_596;
        PyObject *tmp_locals_name_596;
        PyObject *tmp_fromlist_name_596;
        PyObject *tmp_level_name_596;
        tmp_name_name_596 = const_str_plain_thisoldhouse;
        tmp_globals_name_596 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_596 = Py_None;
        tmp_fromlist_name_596 = const_tuple_str_plain_ThisOldHouseIE_tuple;
        tmp_level_name_596 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1144;
        tmp_import_name_from_881 = IMPORT_MODULE5(tmp_name_name_596, tmp_globals_name_596, tmp_locals_name_596, tmp_fromlist_name_596, tmp_level_name_596);
        if (tmp_import_name_from_881 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1144;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_881)) {
           tmp_assign_source_1033 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_881,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ThisOldHouseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1033 = IMPORT_NAME(tmp_import_name_from_881, const_str_plain_ThisOldHouseIE);
        }

        Py_DECREF(tmp_import_name_from_881);
        if (tmp_assign_source_1033 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1144;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ThisOldHouseIE, tmp_assign_source_1033);
    }
    {
        PyObject *tmp_assign_source_1034;
        PyObject *tmp_import_name_from_882;
        PyObject *tmp_name_name_597;
        PyObject *tmp_globals_name_597;
        PyObject *tmp_locals_name_597;
        PyObject *tmp_fromlist_name_597;
        PyObject *tmp_level_name_597;
        tmp_name_name_597 = const_str_plain_threeqsdn;
        tmp_globals_name_597 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_597 = Py_None;
        tmp_fromlist_name_597 = const_tuple_str_plain_ThreeQSDNIE_tuple;
        tmp_level_name_597 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1145;
        tmp_import_name_from_882 = IMPORT_MODULE5(tmp_name_name_597, tmp_globals_name_597, tmp_locals_name_597, tmp_fromlist_name_597, tmp_level_name_597);
        if (tmp_import_name_from_882 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1145;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_882)) {
           tmp_assign_source_1034 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_882,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ThreeQSDNIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1034 = IMPORT_NAME(tmp_import_name_from_882, const_str_plain_ThreeQSDNIE);
        }

        Py_DECREF(tmp_import_name_from_882);
        if (tmp_assign_source_1034 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1145;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ThreeQSDNIE, tmp_assign_source_1034);
    }
    {
        PyObject *tmp_assign_source_1035;
        PyObject *tmp_name_name_598;
        PyObject *tmp_globals_name_598;
        PyObject *tmp_locals_name_598;
        PyObject *tmp_fromlist_name_598;
        PyObject *tmp_level_name_598;
        tmp_name_name_598 = const_str_plain_tiktok;
        tmp_globals_name_598 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_598 = Py_None;
        tmp_fromlist_name_598 = const_tuple_str_plain_TikTokIE_str_plain_TikTokUserIE_tuple;
        tmp_level_name_598 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1146;
        tmp_assign_source_1035 = IMPORT_MODULE5(tmp_name_name_598, tmp_globals_name_598, tmp_locals_name_598, tmp_fromlist_name_598, tmp_level_name_598);
        if (tmp_assign_source_1035 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1146;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_150__module == NULL);
        tmp_import_from_150__module = tmp_assign_source_1035;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1036;
        PyObject *tmp_import_name_from_883;
        CHECK_OBJECT(tmp_import_from_150__module);
        tmp_import_name_from_883 = tmp_import_from_150__module;
        if (PyModule_Check(tmp_import_name_from_883)) {
           tmp_assign_source_1036 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_883,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TikTokIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1036 = IMPORT_NAME(tmp_import_name_from_883, const_str_plain_TikTokIE);
        }

        if (tmp_assign_source_1036 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1146;

            goto try_except_handler_150;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TikTokIE, tmp_assign_source_1036);
    }
    {
        PyObject *tmp_assign_source_1037;
        PyObject *tmp_import_name_from_884;
        CHECK_OBJECT(tmp_import_from_150__module);
        tmp_import_name_from_884 = tmp_import_from_150__module;
        if (PyModule_Check(tmp_import_name_from_884)) {
           tmp_assign_source_1037 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_884,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TikTokUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1037 = IMPORT_NAME(tmp_import_name_from_884, const_str_plain_TikTokUserIE);
        }

        if (tmp_assign_source_1037 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1146;

            goto try_except_handler_150;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TikTokUserIE, tmp_assign_source_1037);
    }
    goto try_end_150;
    // Exception handler code:
    try_except_handler_150:;
    exception_keeper_type_150 = exception_type;
    exception_keeper_value_150 = exception_value;
    exception_keeper_tb_150 = exception_tb;
    exception_keeper_lineno_150 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_150__module);
    Py_DECREF(tmp_import_from_150__module);
    tmp_import_from_150__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_150;
    exception_value = exception_keeper_value_150;
    exception_tb = exception_keeper_tb_150;
    exception_lineno = exception_keeper_lineno_150;

    goto frame_exception_exit_1;
    // End of try:
    try_end_150:;
    CHECK_OBJECT(tmp_import_from_150__module);
    Py_DECREF(tmp_import_from_150__module);
    tmp_import_from_150__module = NULL;

    {
        PyObject *tmp_assign_source_1038;
        PyObject *tmp_import_name_from_885;
        PyObject *tmp_name_name_599;
        PyObject *tmp_globals_name_599;
        PyObject *tmp_locals_name_599;
        PyObject *tmp_fromlist_name_599;
        PyObject *tmp_level_name_599;
        tmp_name_name_599 = const_str_plain_tinypic;
        tmp_globals_name_599 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_599 = Py_None;
        tmp_fromlist_name_599 = const_tuple_str_plain_TinyPicIE_tuple;
        tmp_level_name_599 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1150;
        tmp_import_name_from_885 = IMPORT_MODULE5(tmp_name_name_599, tmp_globals_name_599, tmp_locals_name_599, tmp_fromlist_name_599, tmp_level_name_599);
        if (tmp_import_name_from_885 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1150;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_885)) {
           tmp_assign_source_1038 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_885,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TinyPicIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1038 = IMPORT_NAME(tmp_import_name_from_885, const_str_plain_TinyPicIE);
        }

        Py_DECREF(tmp_import_name_from_885);
        if (tmp_assign_source_1038 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1150;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TinyPicIE, tmp_assign_source_1038);
    }
    {
        PyObject *tmp_assign_source_1039;
        PyObject *tmp_name_name_600;
        PyObject *tmp_globals_name_600;
        PyObject *tmp_locals_name_600;
        PyObject *tmp_fromlist_name_600;
        PyObject *tmp_level_name_600;
        tmp_name_name_600 = const_str_plain_tmz;
        tmp_globals_name_600 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_600 = Py_None;
        tmp_fromlist_name_600 = const_tuple_str_plain_TMZIE_str_plain_TMZArticleIE_tuple;
        tmp_level_name_600 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1151;
        tmp_assign_source_1039 = IMPORT_MODULE5(tmp_name_name_600, tmp_globals_name_600, tmp_locals_name_600, tmp_fromlist_name_600, tmp_level_name_600);
        if (tmp_assign_source_1039 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1151;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_151__module == NULL);
        tmp_import_from_151__module = tmp_assign_source_1039;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1040;
        PyObject *tmp_import_name_from_886;
        CHECK_OBJECT(tmp_import_from_151__module);
        tmp_import_name_from_886 = tmp_import_from_151__module;
        if (PyModule_Check(tmp_import_name_from_886)) {
           tmp_assign_source_1040 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_886,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TMZIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1040 = IMPORT_NAME(tmp_import_name_from_886, const_str_plain_TMZIE);
        }

        if (tmp_assign_source_1040 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1151;

            goto try_except_handler_151;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TMZIE, tmp_assign_source_1040);
    }
    {
        PyObject *tmp_assign_source_1041;
        PyObject *tmp_import_name_from_887;
        CHECK_OBJECT(tmp_import_from_151__module);
        tmp_import_name_from_887 = tmp_import_from_151__module;
        if (PyModule_Check(tmp_import_name_from_887)) {
           tmp_assign_source_1041 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_887,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TMZArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1041 = IMPORT_NAME(tmp_import_name_from_887, const_str_plain_TMZArticleIE);
        }

        if (tmp_assign_source_1041 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1151;

            goto try_except_handler_151;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TMZArticleIE, tmp_assign_source_1041);
    }
    goto try_end_151;
    // Exception handler code:
    try_except_handler_151:;
    exception_keeper_type_151 = exception_type;
    exception_keeper_value_151 = exception_value;
    exception_keeper_tb_151 = exception_tb;
    exception_keeper_lineno_151 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_151__module);
    Py_DECREF(tmp_import_from_151__module);
    tmp_import_from_151__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_151;
    exception_value = exception_keeper_value_151;
    exception_tb = exception_keeper_tb_151;
    exception_lineno = exception_keeper_lineno_151;

    goto frame_exception_exit_1;
    // End of try:
    try_end_151:;
    CHECK_OBJECT(tmp_import_from_151__module);
    Py_DECREF(tmp_import_from_151__module);
    tmp_import_from_151__module = NULL;

    {
        PyObject *tmp_assign_source_1042;
        PyObject *tmp_name_name_601;
        PyObject *tmp_globals_name_601;
        PyObject *tmp_locals_name_601;
        PyObject *tmp_fromlist_name_601;
        PyObject *tmp_level_name_601;
        tmp_name_name_601 = const_str_plain_tnaflix;
        tmp_globals_name_601 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_601 = Py_None;
        tmp_fromlist_name_601 = const_tuple_30bfc9dcdb5163dc197d85002aa8178a_tuple;
        tmp_level_name_601 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1155;
        tmp_assign_source_1042 = IMPORT_MODULE5(tmp_name_name_601, tmp_globals_name_601, tmp_locals_name_601, tmp_fromlist_name_601, tmp_level_name_601);
        if (tmp_assign_source_1042 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1155;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_152__module == NULL);
        tmp_import_from_152__module = tmp_assign_source_1042;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1043;
        PyObject *tmp_import_name_from_888;
        CHECK_OBJECT(tmp_import_from_152__module);
        tmp_import_name_from_888 = tmp_import_from_152__module;
        if (PyModule_Check(tmp_import_name_from_888)) {
           tmp_assign_source_1043 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_888,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TNAFlixNetworkEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1043 = IMPORT_NAME(tmp_import_name_from_888, const_str_plain_TNAFlixNetworkEmbedIE);
        }

        if (tmp_assign_source_1043 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1155;

            goto try_except_handler_152;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TNAFlixNetworkEmbedIE, tmp_assign_source_1043);
    }
    {
        PyObject *tmp_assign_source_1044;
        PyObject *tmp_import_name_from_889;
        CHECK_OBJECT(tmp_import_from_152__module);
        tmp_import_name_from_889 = tmp_import_from_152__module;
        if (PyModule_Check(tmp_import_name_from_889)) {
           tmp_assign_source_1044 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_889,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TNAFlixIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1044 = IMPORT_NAME(tmp_import_name_from_889, const_str_plain_TNAFlixIE);
        }

        if (tmp_assign_source_1044 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1155;

            goto try_except_handler_152;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TNAFlixIE, tmp_assign_source_1044);
    }
    {
        PyObject *tmp_assign_source_1045;
        PyObject *tmp_import_name_from_890;
        CHECK_OBJECT(tmp_import_from_152__module);
        tmp_import_name_from_890 = tmp_import_from_152__module;
        if (PyModule_Check(tmp_import_name_from_890)) {
           tmp_assign_source_1045 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_890,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EMPFlixIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1045 = IMPORT_NAME(tmp_import_name_from_890, const_str_plain_EMPFlixIE);
        }

        if (tmp_assign_source_1045 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1155;

            goto try_except_handler_152;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EMPFlixIE, tmp_assign_source_1045);
    }
    {
        PyObject *tmp_assign_source_1046;
        PyObject *tmp_import_name_from_891;
        CHECK_OBJECT(tmp_import_from_152__module);
        tmp_import_name_from_891 = tmp_import_from_152__module;
        if (PyModule_Check(tmp_import_name_from_891)) {
           tmp_assign_source_1046 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_891,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MovieFapIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1046 = IMPORT_NAME(tmp_import_name_from_891, const_str_plain_MovieFapIE);
        }

        if (tmp_assign_source_1046 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1155;

            goto try_except_handler_152;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MovieFapIE, tmp_assign_source_1046);
    }
    goto try_end_152;
    // Exception handler code:
    try_except_handler_152:;
    exception_keeper_type_152 = exception_type;
    exception_keeper_value_152 = exception_value;
    exception_keeper_tb_152 = exception_tb;
    exception_keeper_lineno_152 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_152__module);
    Py_DECREF(tmp_import_from_152__module);
    tmp_import_from_152__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_152;
    exception_value = exception_keeper_value_152;
    exception_tb = exception_keeper_tb_152;
    exception_lineno = exception_keeper_lineno_152;

    goto frame_exception_exit_1;
    // End of try:
    try_end_152:;
    CHECK_OBJECT(tmp_import_from_152__module);
    Py_DECREF(tmp_import_from_152__module);
    tmp_import_from_152__module = NULL;

    {
        PyObject *tmp_assign_source_1047;
        PyObject *tmp_import_name_from_892;
        PyObject *tmp_name_name_602;
        PyObject *tmp_globals_name_602;
        PyObject *tmp_locals_name_602;
        PyObject *tmp_fromlist_name_602;
        PyObject *tmp_level_name_602;
        tmp_name_name_602 = const_str_plain_toggle;
        tmp_globals_name_602 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_602 = Py_None;
        tmp_fromlist_name_602 = const_tuple_str_plain_ToggleIE_tuple;
        tmp_level_name_602 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1161;
        tmp_import_name_from_892 = IMPORT_MODULE5(tmp_name_name_602, tmp_globals_name_602, tmp_locals_name_602, tmp_fromlist_name_602, tmp_level_name_602);
        if (tmp_import_name_from_892 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1161;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_892)) {
           tmp_assign_source_1047 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_892,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ToggleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1047 = IMPORT_NAME(tmp_import_name_from_892, const_str_plain_ToggleIE);
        }

        Py_DECREF(tmp_import_name_from_892);
        if (tmp_assign_source_1047 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1161;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ToggleIE, tmp_assign_source_1047);
    }
    {
        PyObject *tmp_assign_source_1048;
        PyObject *tmp_import_name_from_893;
        PyObject *tmp_name_name_603;
        PyObject *tmp_globals_name_603;
        PyObject *tmp_locals_name_603;
        PyObject *tmp_fromlist_name_603;
        PyObject *tmp_level_name_603;
        tmp_name_name_603 = const_str_plain_tonline;
        tmp_globals_name_603 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_603 = Py_None;
        tmp_fromlist_name_603 = const_tuple_str_plain_TOnlineIE_tuple;
        tmp_level_name_603 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1162;
        tmp_import_name_from_893 = IMPORT_MODULE5(tmp_name_name_603, tmp_globals_name_603, tmp_locals_name_603, tmp_fromlist_name_603, tmp_level_name_603);
        if (tmp_import_name_from_893 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1162;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_893)) {
           tmp_assign_source_1048 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_893,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TOnlineIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1048 = IMPORT_NAME(tmp_import_name_from_893, const_str_plain_TOnlineIE);
        }

        Py_DECREF(tmp_import_name_from_893);
        if (tmp_assign_source_1048 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1162;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TOnlineIE, tmp_assign_source_1048);
    }
    {
        PyObject *tmp_assign_source_1049;
        PyObject *tmp_import_name_from_894;
        PyObject *tmp_name_name_604;
        PyObject *tmp_globals_name_604;
        PyObject *tmp_locals_name_604;
        PyObject *tmp_fromlist_name_604;
        PyObject *tmp_level_name_604;
        tmp_name_name_604 = const_str_plain_toongoggles;
        tmp_globals_name_604 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_604 = Py_None;
        tmp_fromlist_name_604 = const_tuple_str_plain_ToonGogglesIE_tuple;
        tmp_level_name_604 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1163;
        tmp_import_name_from_894 = IMPORT_MODULE5(tmp_name_name_604, tmp_globals_name_604, tmp_locals_name_604, tmp_fromlist_name_604, tmp_level_name_604);
        if (tmp_import_name_from_894 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1163;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_894)) {
           tmp_assign_source_1049 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_894,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ToonGogglesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1049 = IMPORT_NAME(tmp_import_name_from_894, const_str_plain_ToonGogglesIE);
        }

        Py_DECREF(tmp_import_name_from_894);
        if (tmp_assign_source_1049 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1163;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ToonGogglesIE, tmp_assign_source_1049);
    }
    {
        PyObject *tmp_assign_source_1050;
        PyObject *tmp_import_name_from_895;
        PyObject *tmp_name_name_605;
        PyObject *tmp_globals_name_605;
        PyObject *tmp_locals_name_605;
        PyObject *tmp_fromlist_name_605;
        PyObject *tmp_level_name_605;
        tmp_name_name_605 = const_str_plain_toutv;
        tmp_globals_name_605 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_605 = Py_None;
        tmp_fromlist_name_605 = const_tuple_str_plain_TouTvIE_tuple;
        tmp_level_name_605 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1164;
        tmp_import_name_from_895 = IMPORT_MODULE5(tmp_name_name_605, tmp_globals_name_605, tmp_locals_name_605, tmp_fromlist_name_605, tmp_level_name_605);
        if (tmp_import_name_from_895 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1164;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_895)) {
           tmp_assign_source_1050 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_895,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TouTvIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1050 = IMPORT_NAME(tmp_import_name_from_895, const_str_plain_TouTvIE);
        }

        Py_DECREF(tmp_import_name_from_895);
        if (tmp_assign_source_1050 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1164;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TouTvIE, tmp_assign_source_1050);
    }
    {
        PyObject *tmp_assign_source_1051;
        PyObject *tmp_name_name_606;
        PyObject *tmp_globals_name_606;
        PyObject *tmp_locals_name_606;
        PyObject *tmp_fromlist_name_606;
        PyObject *tmp_level_name_606;
        tmp_name_name_606 = const_str_plain_toypics;
        tmp_globals_name_606 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_606 = Py_None;
        tmp_fromlist_name_606 = const_tuple_str_plain_ToypicsUserIE_str_plain_ToypicsIE_tuple;
        tmp_level_name_606 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1165;
        tmp_assign_source_1051 = IMPORT_MODULE5(tmp_name_name_606, tmp_globals_name_606, tmp_locals_name_606, tmp_fromlist_name_606, tmp_level_name_606);
        if (tmp_assign_source_1051 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1165;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_153__module == NULL);
        tmp_import_from_153__module = tmp_assign_source_1051;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1052;
        PyObject *tmp_import_name_from_896;
        CHECK_OBJECT(tmp_import_from_153__module);
        tmp_import_name_from_896 = tmp_import_from_153__module;
        if (PyModule_Check(tmp_import_name_from_896)) {
           tmp_assign_source_1052 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_896,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ToypicsUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1052 = IMPORT_NAME(tmp_import_name_from_896, const_str_plain_ToypicsUserIE);
        }

        if (tmp_assign_source_1052 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1165;

            goto try_except_handler_153;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ToypicsUserIE, tmp_assign_source_1052);
    }
    {
        PyObject *tmp_assign_source_1053;
        PyObject *tmp_import_name_from_897;
        CHECK_OBJECT(tmp_import_from_153__module);
        tmp_import_name_from_897 = tmp_import_from_153__module;
        if (PyModule_Check(tmp_import_name_from_897)) {
           tmp_assign_source_1053 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_897,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ToypicsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1053 = IMPORT_NAME(tmp_import_name_from_897, const_str_plain_ToypicsIE);
        }

        if (tmp_assign_source_1053 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1165;

            goto try_except_handler_153;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ToypicsIE, tmp_assign_source_1053);
    }
    goto try_end_153;
    // Exception handler code:
    try_except_handler_153:;
    exception_keeper_type_153 = exception_type;
    exception_keeper_value_153 = exception_value;
    exception_keeper_tb_153 = exception_tb;
    exception_keeper_lineno_153 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_153__module);
    Py_DECREF(tmp_import_from_153__module);
    tmp_import_from_153__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_153;
    exception_value = exception_keeper_value_153;
    exception_tb = exception_keeper_tb_153;
    exception_lineno = exception_keeper_lineno_153;

    goto frame_exception_exit_1;
    // End of try:
    try_end_153:;
    CHECK_OBJECT(tmp_import_from_153__module);
    Py_DECREF(tmp_import_from_153__module);
    tmp_import_from_153__module = NULL;

    {
        PyObject *tmp_assign_source_1054;
        PyObject *tmp_import_name_from_898;
        PyObject *tmp_name_name_607;
        PyObject *tmp_globals_name_607;
        PyObject *tmp_locals_name_607;
        PyObject *tmp_fromlist_name_607;
        PyObject *tmp_level_name_607;
        tmp_name_name_607 = const_str_plain_traileraddict;
        tmp_globals_name_607 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_607 = Py_None;
        tmp_fromlist_name_607 = const_tuple_str_plain_TrailerAddictIE_tuple;
        tmp_level_name_607 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1166;
        tmp_import_name_from_898 = IMPORT_MODULE5(tmp_name_name_607, tmp_globals_name_607, tmp_locals_name_607, tmp_fromlist_name_607, tmp_level_name_607);
        if (tmp_import_name_from_898 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1166;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_898)) {
           tmp_assign_source_1054 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_898,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TrailerAddictIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1054 = IMPORT_NAME(tmp_import_name_from_898, const_str_plain_TrailerAddictIE);
        }

        Py_DECREF(tmp_import_name_from_898);
        if (tmp_assign_source_1054 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1166;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TrailerAddictIE, tmp_assign_source_1054);
    }
    {
        PyObject *tmp_assign_source_1055;
        PyObject *tmp_import_name_from_899;
        PyObject *tmp_name_name_608;
        PyObject *tmp_globals_name_608;
        PyObject *tmp_locals_name_608;
        PyObject *tmp_fromlist_name_608;
        PyObject *tmp_level_name_608;
        tmp_name_name_608 = const_str_plain_trilulilu;
        tmp_globals_name_608 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_608 = Py_None;
        tmp_fromlist_name_608 = const_tuple_str_plain_TriluliluIE_tuple;
        tmp_level_name_608 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1167;
        tmp_import_name_from_899 = IMPORT_MODULE5(tmp_name_name_608, tmp_globals_name_608, tmp_locals_name_608, tmp_fromlist_name_608, tmp_level_name_608);
        if (tmp_import_name_from_899 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1167;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_899)) {
           tmp_assign_source_1055 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_899,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TriluliluIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1055 = IMPORT_NAME(tmp_import_name_from_899, const_str_plain_TriluliluIE);
        }

        Py_DECREF(tmp_import_name_from_899);
        if (tmp_assign_source_1055 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1167;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TriluliluIE, tmp_assign_source_1055);
    }
    {
        PyObject *tmp_assign_source_1056;
        PyObject *tmp_import_name_from_900;
        PyObject *tmp_name_name_609;
        PyObject *tmp_globals_name_609;
        PyObject *tmp_locals_name_609;
        PyObject *tmp_fromlist_name_609;
        PyObject *tmp_level_name_609;
        tmp_name_name_609 = const_str_plain_trunews;
        tmp_globals_name_609 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_609 = Py_None;
        tmp_fromlist_name_609 = const_tuple_str_plain_TruNewsIE_tuple;
        tmp_level_name_609 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1168;
        tmp_import_name_from_900 = IMPORT_MODULE5(tmp_name_name_609, tmp_globals_name_609, tmp_locals_name_609, tmp_fromlist_name_609, tmp_level_name_609);
        if (tmp_import_name_from_900 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1168;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_900)) {
           tmp_assign_source_1056 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_900,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TruNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1056 = IMPORT_NAME(tmp_import_name_from_900, const_str_plain_TruNewsIE);
        }

        Py_DECREF(tmp_import_name_from_900);
        if (tmp_assign_source_1056 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1168;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TruNewsIE, tmp_assign_source_1056);
    }
    {
        PyObject *tmp_assign_source_1057;
        PyObject *tmp_import_name_from_901;
        PyObject *tmp_name_name_610;
        PyObject *tmp_globals_name_610;
        PyObject *tmp_locals_name_610;
        PyObject *tmp_fromlist_name_610;
        PyObject *tmp_level_name_610;
        tmp_name_name_610 = const_str_plain_trutv;
        tmp_globals_name_610 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_610 = Py_None;
        tmp_fromlist_name_610 = const_tuple_str_plain_TruTVIE_tuple;
        tmp_level_name_610 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1169;
        tmp_import_name_from_901 = IMPORT_MODULE5(tmp_name_name_610, tmp_globals_name_610, tmp_locals_name_610, tmp_fromlist_name_610, tmp_level_name_610);
        if (tmp_import_name_from_901 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1169;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_901)) {
           tmp_assign_source_1057 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_901,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TruTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1057 = IMPORT_NAME(tmp_import_name_from_901, const_str_plain_TruTVIE);
        }

        Py_DECREF(tmp_import_name_from_901);
        if (tmp_assign_source_1057 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1169;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TruTVIE, tmp_assign_source_1057);
    }
    {
        PyObject *tmp_assign_source_1058;
        PyObject *tmp_import_name_from_902;
        PyObject *tmp_name_name_611;
        PyObject *tmp_globals_name_611;
        PyObject *tmp_locals_name_611;
        PyObject *tmp_fromlist_name_611;
        PyObject *tmp_level_name_611;
        tmp_name_name_611 = const_str_plain_tube8;
        tmp_globals_name_611 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_611 = Py_None;
        tmp_fromlist_name_611 = const_tuple_str_plain_Tube8IE_tuple;
        tmp_level_name_611 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1170;
        tmp_import_name_from_902 = IMPORT_MODULE5(tmp_name_name_611, tmp_globals_name_611, tmp_locals_name_611, tmp_fromlist_name_611, tmp_level_name_611);
        if (tmp_import_name_from_902 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1170;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_902)) {
           tmp_assign_source_1058 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_902,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Tube8IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1058 = IMPORT_NAME(tmp_import_name_from_902, const_str_plain_Tube8IE);
        }

        Py_DECREF(tmp_import_name_from_902);
        if (tmp_assign_source_1058 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1170;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Tube8IE, tmp_assign_source_1058);
    }
    {
        PyObject *tmp_assign_source_1059;
        PyObject *tmp_import_name_from_903;
        PyObject *tmp_name_name_612;
        PyObject *tmp_globals_name_612;
        PyObject *tmp_locals_name_612;
        PyObject *tmp_fromlist_name_612;
        PyObject *tmp_level_name_612;
        tmp_name_name_612 = const_str_plain_tubitv;
        tmp_globals_name_612 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_612 = Py_None;
        tmp_fromlist_name_612 = const_tuple_str_plain_TubiTvIE_tuple;
        tmp_level_name_612 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1171;
        tmp_import_name_from_903 = IMPORT_MODULE5(tmp_name_name_612, tmp_globals_name_612, tmp_locals_name_612, tmp_fromlist_name_612, tmp_level_name_612);
        if (tmp_import_name_from_903 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1171;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_903)) {
           tmp_assign_source_1059 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_903,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TubiTvIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1059 = IMPORT_NAME(tmp_import_name_from_903, const_str_plain_TubiTvIE);
        }

        Py_DECREF(tmp_import_name_from_903);
        if (tmp_assign_source_1059 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1171;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TubiTvIE, tmp_assign_source_1059);
    }
    {
        PyObject *tmp_assign_source_1060;
        PyObject *tmp_import_name_from_904;
        PyObject *tmp_name_name_613;
        PyObject *tmp_globals_name_613;
        PyObject *tmp_locals_name_613;
        PyObject *tmp_fromlist_name_613;
        PyObject *tmp_level_name_613;
        tmp_name_name_613 = const_str_plain_tumblr;
        tmp_globals_name_613 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_613 = Py_None;
        tmp_fromlist_name_613 = const_tuple_str_plain_TumblrIE_tuple;
        tmp_level_name_613 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1172;
        tmp_import_name_from_904 = IMPORT_MODULE5(tmp_name_name_613, tmp_globals_name_613, tmp_locals_name_613, tmp_fromlist_name_613, tmp_level_name_613);
        if (tmp_import_name_from_904 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1172;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_904)) {
           tmp_assign_source_1060 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_904,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TumblrIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1060 = IMPORT_NAME(tmp_import_name_from_904, const_str_plain_TumblrIE);
        }

        Py_DECREF(tmp_import_name_from_904);
        if (tmp_assign_source_1060 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1172;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TumblrIE, tmp_assign_source_1060);
    }
    {
        PyObject *tmp_assign_source_1061;
        PyObject *tmp_name_name_614;
        PyObject *tmp_globals_name_614;
        PyObject *tmp_locals_name_614;
        PyObject *tmp_fromlist_name_614;
        PyObject *tmp_level_name_614;
        tmp_name_name_614 = const_str_plain_tunein;
        tmp_globals_name_614 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_614 = Py_None;
        tmp_fromlist_name_614 = const_tuple_363b9edf103ddd05ee232683aa4cd757_tuple;
        tmp_level_name_614 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1173;
        tmp_assign_source_1061 = IMPORT_MODULE5(tmp_name_name_614, tmp_globals_name_614, tmp_locals_name_614, tmp_fromlist_name_614, tmp_level_name_614);
        if (tmp_assign_source_1061 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1173;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_154__module == NULL);
        tmp_import_from_154__module = tmp_assign_source_1061;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1062;
        PyObject *tmp_import_name_from_905;
        CHECK_OBJECT(tmp_import_from_154__module);
        tmp_import_name_from_905 = tmp_import_from_154__module;
        if (PyModule_Check(tmp_import_name_from_905)) {
           tmp_assign_source_1062 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_905,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TuneInClipIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1062 = IMPORT_NAME(tmp_import_name_from_905, const_str_plain_TuneInClipIE);
        }

        if (tmp_assign_source_1062 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1173;

            goto try_except_handler_154;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TuneInClipIE, tmp_assign_source_1062);
    }
    {
        PyObject *tmp_assign_source_1063;
        PyObject *tmp_import_name_from_906;
        CHECK_OBJECT(tmp_import_from_154__module);
        tmp_import_name_from_906 = tmp_import_from_154__module;
        if (PyModule_Check(tmp_import_name_from_906)) {
           tmp_assign_source_1063 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_906,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TuneInStationIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1063 = IMPORT_NAME(tmp_import_name_from_906, const_str_plain_TuneInStationIE);
        }

        if (tmp_assign_source_1063 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1173;

            goto try_except_handler_154;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TuneInStationIE, tmp_assign_source_1063);
    }
    {
        PyObject *tmp_assign_source_1064;
        PyObject *tmp_import_name_from_907;
        CHECK_OBJECT(tmp_import_from_154__module);
        tmp_import_name_from_907 = tmp_import_from_154__module;
        if (PyModule_Check(tmp_import_name_from_907)) {
           tmp_assign_source_1064 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_907,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TuneInProgramIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1064 = IMPORT_NAME(tmp_import_name_from_907, const_str_plain_TuneInProgramIE);
        }

        if (tmp_assign_source_1064 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1173;

            goto try_except_handler_154;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TuneInProgramIE, tmp_assign_source_1064);
    }
    {
        PyObject *tmp_assign_source_1065;
        PyObject *tmp_import_name_from_908;
        CHECK_OBJECT(tmp_import_from_154__module);
        tmp_import_name_from_908 = tmp_import_from_154__module;
        if (PyModule_Check(tmp_import_name_from_908)) {
           tmp_assign_source_1065 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_908,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TuneInTopicIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1065 = IMPORT_NAME(tmp_import_name_from_908, const_str_plain_TuneInTopicIE);
        }

        if (tmp_assign_source_1065 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1173;

            goto try_except_handler_154;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TuneInTopicIE, tmp_assign_source_1065);
    }
    {
        PyObject *tmp_assign_source_1066;
        PyObject *tmp_import_name_from_909;
        CHECK_OBJECT(tmp_import_from_154__module);
        tmp_import_name_from_909 = tmp_import_from_154__module;
        if (PyModule_Check(tmp_import_name_from_909)) {
           tmp_assign_source_1066 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_909,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TuneInShortenerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1066 = IMPORT_NAME(tmp_import_name_from_909, const_str_plain_TuneInShortenerIE);
        }

        if (tmp_assign_source_1066 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1173;

            goto try_except_handler_154;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TuneInShortenerIE, tmp_assign_source_1066);
    }
    goto try_end_154;
    // Exception handler code:
    try_except_handler_154:;
    exception_keeper_type_154 = exception_type;
    exception_keeper_value_154 = exception_value;
    exception_keeper_tb_154 = exception_tb;
    exception_keeper_lineno_154 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_154__module);
    Py_DECREF(tmp_import_from_154__module);
    tmp_import_from_154__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_154;
    exception_value = exception_keeper_value_154;
    exception_tb = exception_keeper_tb_154;
    exception_lineno = exception_keeper_lineno_154;

    goto frame_exception_exit_1;
    // End of try:
    try_end_154:;
    CHECK_OBJECT(tmp_import_from_154__module);
    Py_DECREF(tmp_import_from_154__module);
    tmp_import_from_154__module = NULL;

    {
        PyObject *tmp_assign_source_1067;
        PyObject *tmp_import_name_from_910;
        PyObject *tmp_name_name_615;
        PyObject *tmp_globals_name_615;
        PyObject *tmp_locals_name_615;
        PyObject *tmp_fromlist_name_615;
        PyObject *tmp_level_name_615;
        tmp_name_name_615 = const_str_plain_tunepk;
        tmp_globals_name_615 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_615 = Py_None;
        tmp_fromlist_name_615 = const_tuple_str_plain_TunePkIE_tuple;
        tmp_level_name_615 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1180;
        tmp_import_name_from_910 = IMPORT_MODULE5(tmp_name_name_615, tmp_globals_name_615, tmp_locals_name_615, tmp_fromlist_name_615, tmp_level_name_615);
        if (tmp_import_name_from_910 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1180;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_910)) {
           tmp_assign_source_1067 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_910,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TunePkIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1067 = IMPORT_NAME(tmp_import_name_from_910, const_str_plain_TunePkIE);
        }

        Py_DECREF(tmp_import_name_from_910);
        if (tmp_assign_source_1067 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1180;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TunePkIE, tmp_assign_source_1067);
    }
    {
        PyObject *tmp_assign_source_1068;
        PyObject *tmp_import_name_from_911;
        PyObject *tmp_name_name_616;
        PyObject *tmp_globals_name_616;
        PyObject *tmp_locals_name_616;
        PyObject *tmp_fromlist_name_616;
        PyObject *tmp_level_name_616;
        tmp_name_name_616 = const_str_plain_turbo;
        tmp_globals_name_616 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_616 = Py_None;
        tmp_fromlist_name_616 = const_tuple_str_plain_TurboIE_tuple;
        tmp_level_name_616 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1181;
        tmp_import_name_from_911 = IMPORT_MODULE5(tmp_name_name_616, tmp_globals_name_616, tmp_locals_name_616, tmp_fromlist_name_616, tmp_level_name_616);
        if (tmp_import_name_from_911 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1181;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_911)) {
           tmp_assign_source_1068 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_911,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TurboIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1068 = IMPORT_NAME(tmp_import_name_from_911, const_str_plain_TurboIE);
        }

        Py_DECREF(tmp_import_name_from_911);
        if (tmp_assign_source_1068 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1181;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TurboIE, tmp_assign_source_1068);
    }
    {
        PyObject *tmp_assign_source_1069;
        PyObject *tmp_name_name_617;
        PyObject *tmp_globals_name_617;
        PyObject *tmp_locals_name_617;
        PyObject *tmp_fromlist_name_617;
        PyObject *tmp_level_name_617;
        tmp_name_name_617 = const_str_plain_tv2;
        tmp_globals_name_617 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_617 = Py_None;
        tmp_fromlist_name_617 = const_tuple_str_plain_TV2IE_str_plain_TV2ArticleIE_str_plain_KatsomoIE_tuple;
        tmp_level_name_617 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1182;
        tmp_assign_source_1069 = IMPORT_MODULE5(tmp_name_name_617, tmp_globals_name_617, tmp_locals_name_617, tmp_fromlist_name_617, tmp_level_name_617);
        if (tmp_assign_source_1069 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1182;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_155__module == NULL);
        tmp_import_from_155__module = tmp_assign_source_1069;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1070;
        PyObject *tmp_import_name_from_912;
        CHECK_OBJECT(tmp_import_from_155__module);
        tmp_import_name_from_912 = tmp_import_from_155__module;
        if (PyModule_Check(tmp_import_name_from_912)) {
           tmp_assign_source_1070 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_912,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TV2IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1070 = IMPORT_NAME(tmp_import_name_from_912, const_str_plain_TV2IE);
        }

        if (tmp_assign_source_1070 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1182;

            goto try_except_handler_155;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TV2IE, tmp_assign_source_1070);
    }
    {
        PyObject *tmp_assign_source_1071;
        PyObject *tmp_import_name_from_913;
        CHECK_OBJECT(tmp_import_from_155__module);
        tmp_import_name_from_913 = tmp_import_from_155__module;
        if (PyModule_Check(tmp_import_name_from_913)) {
           tmp_assign_source_1071 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_913,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TV2ArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1071 = IMPORT_NAME(tmp_import_name_from_913, const_str_plain_TV2ArticleIE);
        }

        if (tmp_assign_source_1071 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1182;

            goto try_except_handler_155;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TV2ArticleIE, tmp_assign_source_1071);
    }
    {
        PyObject *tmp_assign_source_1072;
        PyObject *tmp_import_name_from_914;
        CHECK_OBJECT(tmp_import_from_155__module);
        tmp_import_name_from_914 = tmp_import_from_155__module;
        if (PyModule_Check(tmp_import_name_from_914)) {
           tmp_assign_source_1072 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_914,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_KatsomoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1072 = IMPORT_NAME(tmp_import_name_from_914, const_str_plain_KatsomoIE);
        }

        if (tmp_assign_source_1072 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1182;

            goto try_except_handler_155;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_KatsomoIE, tmp_assign_source_1072);
    }
    goto try_end_155;
    // Exception handler code:
    try_except_handler_155:;
    exception_keeper_type_155 = exception_type;
    exception_keeper_value_155 = exception_value;
    exception_keeper_tb_155 = exception_tb;
    exception_keeper_lineno_155 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_155__module);
    Py_DECREF(tmp_import_from_155__module);
    tmp_import_from_155__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_155;
    exception_value = exception_keeper_value_155;
    exception_tb = exception_keeper_tb_155;
    exception_lineno = exception_keeper_lineno_155;

    goto frame_exception_exit_1;
    // End of try:
    try_end_155:;
    CHECK_OBJECT(tmp_import_from_155__module);
    Py_DECREF(tmp_import_from_155__module);
    tmp_import_from_155__module = NULL;

    {
        PyObject *tmp_assign_source_1073;
        PyObject *tmp_name_name_618;
        PyObject *tmp_globals_name_618;
        PyObject *tmp_locals_name_618;
        PyObject *tmp_fromlist_name_618;
        PyObject *tmp_level_name_618;
        tmp_name_name_618 = const_str_plain_tv2dk;
        tmp_globals_name_618 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_618 = Py_None;
        tmp_fromlist_name_618 = const_tuple_str_plain_TV2DKIE_str_plain_TV2DKBornholmPlayIE_tuple;
        tmp_level_name_618 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1187;
        tmp_assign_source_1073 = IMPORT_MODULE5(tmp_name_name_618, tmp_globals_name_618, tmp_locals_name_618, tmp_fromlist_name_618, tmp_level_name_618);
        if (tmp_assign_source_1073 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1187;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_156__module == NULL);
        tmp_import_from_156__module = tmp_assign_source_1073;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1074;
        PyObject *tmp_import_name_from_915;
        CHECK_OBJECT(tmp_import_from_156__module);
        tmp_import_name_from_915 = tmp_import_from_156__module;
        if (PyModule_Check(tmp_import_name_from_915)) {
           tmp_assign_source_1074 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_915,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TV2DKIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1074 = IMPORT_NAME(tmp_import_name_from_915, const_str_plain_TV2DKIE);
        }

        if (tmp_assign_source_1074 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1187;

            goto try_except_handler_156;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TV2DKIE, tmp_assign_source_1074);
    }
    {
        PyObject *tmp_assign_source_1075;
        PyObject *tmp_import_name_from_916;
        CHECK_OBJECT(tmp_import_from_156__module);
        tmp_import_name_from_916 = tmp_import_from_156__module;
        if (PyModule_Check(tmp_import_name_from_916)) {
           tmp_assign_source_1075 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_916,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TV2DKBornholmPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1075 = IMPORT_NAME(tmp_import_name_from_916, const_str_plain_TV2DKBornholmPlayIE);
        }

        if (tmp_assign_source_1075 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1187;

            goto try_except_handler_156;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TV2DKBornholmPlayIE, tmp_assign_source_1075);
    }
    goto try_end_156;
    // Exception handler code:
    try_except_handler_156:;
    exception_keeper_type_156 = exception_type;
    exception_keeper_value_156 = exception_value;
    exception_keeper_tb_156 = exception_tb;
    exception_keeper_lineno_156 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_156__module);
    Py_DECREF(tmp_import_from_156__module);
    tmp_import_from_156__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_156;
    exception_value = exception_keeper_value_156;
    exception_tb = exception_keeper_tb_156;
    exception_lineno = exception_keeper_lineno_156;

    goto frame_exception_exit_1;
    // End of try:
    try_end_156:;
    CHECK_OBJECT(tmp_import_from_156__module);
    Py_DECREF(tmp_import_from_156__module);
    tmp_import_from_156__module = NULL;

    {
        PyObject *tmp_assign_source_1076;
        PyObject *tmp_import_name_from_917;
        PyObject *tmp_name_name_619;
        PyObject *tmp_globals_name_619;
        PyObject *tmp_locals_name_619;
        PyObject *tmp_fromlist_name_619;
        PyObject *tmp_level_name_619;
        tmp_name_name_619 = const_str_plain_tv2hu;
        tmp_globals_name_619 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_619 = Py_None;
        tmp_fromlist_name_619 = const_tuple_str_plain_TV2HuIE_tuple;
        tmp_level_name_619 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1191;
        tmp_import_name_from_917 = IMPORT_MODULE5(tmp_name_name_619, tmp_globals_name_619, tmp_locals_name_619, tmp_fromlist_name_619, tmp_level_name_619);
        if (tmp_import_name_from_917 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1191;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_917)) {
           tmp_assign_source_1076 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_917,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TV2HuIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1076 = IMPORT_NAME(tmp_import_name_from_917, const_str_plain_TV2HuIE);
        }

        Py_DECREF(tmp_import_name_from_917);
        if (tmp_assign_source_1076 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1191;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TV2HuIE, tmp_assign_source_1076);
    }
    {
        PyObject *tmp_assign_source_1077;
        PyObject *tmp_import_name_from_918;
        PyObject *tmp_name_name_620;
        PyObject *tmp_globals_name_620;
        PyObject *tmp_locals_name_620;
        PyObject *tmp_fromlist_name_620;
        PyObject *tmp_level_name_620;
        tmp_name_name_620 = const_str_plain_tv4;
        tmp_globals_name_620 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_620 = Py_None;
        tmp_fromlist_name_620 = const_tuple_str_plain_TV4IE_tuple;
        tmp_level_name_620 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1192;
        tmp_import_name_from_918 = IMPORT_MODULE5(tmp_name_name_620, tmp_globals_name_620, tmp_locals_name_620, tmp_fromlist_name_620, tmp_level_name_620);
        if (tmp_import_name_from_918 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1192;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_918)) {
           tmp_assign_source_1077 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_918,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TV4IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1077 = IMPORT_NAME(tmp_import_name_from_918, const_str_plain_TV4IE);
        }

        Py_DECREF(tmp_import_name_from_918);
        if (tmp_assign_source_1077 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1192;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TV4IE, tmp_assign_source_1077);
    }
    {
        PyObject *tmp_assign_source_1078;
        PyObject *tmp_import_name_from_919;
        PyObject *tmp_name_name_621;
        PyObject *tmp_globals_name_621;
        PyObject *tmp_locals_name_621;
        PyObject *tmp_fromlist_name_621;
        PyObject *tmp_level_name_621;
        tmp_name_name_621 = const_str_plain_tv5mondeplus;
        tmp_globals_name_621 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_621 = Py_None;
        tmp_fromlist_name_621 = const_tuple_str_plain_TV5MondePlusIE_tuple;
        tmp_level_name_621 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1193;
        tmp_import_name_from_919 = IMPORT_MODULE5(tmp_name_name_621, tmp_globals_name_621, tmp_locals_name_621, tmp_fromlist_name_621, tmp_level_name_621);
        if (tmp_import_name_from_919 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1193;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_919)) {
           tmp_assign_source_1078 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_919,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TV5MondePlusIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1078 = IMPORT_NAME(tmp_import_name_from_919, const_str_plain_TV5MondePlusIE);
        }

        Py_DECREF(tmp_import_name_from_919);
        if (tmp_assign_source_1078 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1193;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TV5MondePlusIE, tmp_assign_source_1078);
    }
    {
        PyObject *tmp_assign_source_1079;
        PyObject *tmp_import_name_from_920;
        PyObject *tmp_name_name_622;
        PyObject *tmp_globals_name_622;
        PyObject *tmp_locals_name_622;
        PyObject *tmp_fromlist_name_622;
        PyObject *tmp_level_name_622;
        tmp_name_name_622 = const_str_plain_tva;
        tmp_globals_name_622 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_622 = Py_None;
        tmp_fromlist_name_622 = const_tuple_str_plain_TVAIE_tuple;
        tmp_level_name_622 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1194;
        tmp_import_name_from_920 = IMPORT_MODULE5(tmp_name_name_622, tmp_globals_name_622, tmp_locals_name_622, tmp_fromlist_name_622, tmp_level_name_622);
        if (tmp_import_name_from_920 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1194;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_920)) {
           tmp_assign_source_1079 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_920,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVAIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1079 = IMPORT_NAME(tmp_import_name_from_920, const_str_plain_TVAIE);
        }

        Py_DECREF(tmp_import_name_from_920);
        if (tmp_assign_source_1079 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1194;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVAIE, tmp_assign_source_1079);
    }
    {
        PyObject *tmp_assign_source_1080;
        PyObject *tmp_name_name_623;
        PyObject *tmp_globals_name_623;
        PyObject *tmp_locals_name_623;
        PyObject *tmp_fromlist_name_623;
        PyObject *tmp_level_name_623;
        tmp_name_name_623 = const_str_plain_tvanouvelles;
        tmp_globals_name_623 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_623 = Py_None;
        tmp_fromlist_name_623 = const_tuple_str_plain_TVANouvellesIE_str_plain_TVANouvellesArticleIE_tuple;
        tmp_level_name_623 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1195;
        tmp_assign_source_1080 = IMPORT_MODULE5(tmp_name_name_623, tmp_globals_name_623, tmp_locals_name_623, tmp_fromlist_name_623, tmp_level_name_623);
        if (tmp_assign_source_1080 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1195;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_157__module == NULL);
        tmp_import_from_157__module = tmp_assign_source_1080;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1081;
        PyObject *tmp_import_name_from_921;
        CHECK_OBJECT(tmp_import_from_157__module);
        tmp_import_name_from_921 = tmp_import_from_157__module;
        if (PyModule_Check(tmp_import_name_from_921)) {
           tmp_assign_source_1081 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_921,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVANouvellesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1081 = IMPORT_NAME(tmp_import_name_from_921, const_str_plain_TVANouvellesIE);
        }

        if (tmp_assign_source_1081 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1195;

            goto try_except_handler_157;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVANouvellesIE, tmp_assign_source_1081);
    }
    {
        PyObject *tmp_assign_source_1082;
        PyObject *tmp_import_name_from_922;
        CHECK_OBJECT(tmp_import_from_157__module);
        tmp_import_name_from_922 = tmp_import_from_157__module;
        if (PyModule_Check(tmp_import_name_from_922)) {
           tmp_assign_source_1082 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_922,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVANouvellesArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1082 = IMPORT_NAME(tmp_import_name_from_922, const_str_plain_TVANouvellesArticleIE);
        }

        if (tmp_assign_source_1082 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1195;

            goto try_except_handler_157;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVANouvellesArticleIE, tmp_assign_source_1082);
    }
    goto try_end_157;
    // Exception handler code:
    try_except_handler_157:;
    exception_keeper_type_157 = exception_type;
    exception_keeper_value_157 = exception_value;
    exception_keeper_tb_157 = exception_tb;
    exception_keeper_lineno_157 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_157__module);
    Py_DECREF(tmp_import_from_157__module);
    tmp_import_from_157__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_157;
    exception_value = exception_keeper_value_157;
    exception_tb = exception_keeper_tb_157;
    exception_lineno = exception_keeper_lineno_157;

    goto frame_exception_exit_1;
    // End of try:
    try_end_157:;
    CHECK_OBJECT(tmp_import_from_157__module);
    Py_DECREF(tmp_import_from_157__module);
    tmp_import_from_157__module = NULL;

    {
        PyObject *tmp_assign_source_1083;
        PyObject *tmp_name_name_624;
        PyObject *tmp_globals_name_624;
        PyObject *tmp_locals_name_624;
        PyObject *tmp_fromlist_name_624;
        PyObject *tmp_level_name_624;
        tmp_name_name_624 = const_str_plain_tvc;
        tmp_globals_name_624 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_624 = Py_None;
        tmp_fromlist_name_624 = const_tuple_str_plain_TVCIE_str_plain_TVCArticleIE_tuple;
        tmp_level_name_624 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1199;
        tmp_assign_source_1083 = IMPORT_MODULE5(tmp_name_name_624, tmp_globals_name_624, tmp_locals_name_624, tmp_fromlist_name_624, tmp_level_name_624);
        if (tmp_assign_source_1083 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1199;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_158__module == NULL);
        tmp_import_from_158__module = tmp_assign_source_1083;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1084;
        PyObject *tmp_import_name_from_923;
        CHECK_OBJECT(tmp_import_from_158__module);
        tmp_import_name_from_923 = tmp_import_from_158__module;
        if (PyModule_Check(tmp_import_name_from_923)) {
           tmp_assign_source_1084 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_923,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVCIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1084 = IMPORT_NAME(tmp_import_name_from_923, const_str_plain_TVCIE);
        }

        if (tmp_assign_source_1084 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1199;

            goto try_except_handler_158;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVCIE, tmp_assign_source_1084);
    }
    {
        PyObject *tmp_assign_source_1085;
        PyObject *tmp_import_name_from_924;
        CHECK_OBJECT(tmp_import_from_158__module);
        tmp_import_name_from_924 = tmp_import_from_158__module;
        if (PyModule_Check(tmp_import_name_from_924)) {
           tmp_assign_source_1085 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_924,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVCArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1085 = IMPORT_NAME(tmp_import_name_from_924, const_str_plain_TVCArticleIE);
        }

        if (tmp_assign_source_1085 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1199;

            goto try_except_handler_158;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVCArticleIE, tmp_assign_source_1085);
    }
    goto try_end_158;
    // Exception handler code:
    try_except_handler_158:;
    exception_keeper_type_158 = exception_type;
    exception_keeper_value_158 = exception_value;
    exception_keeper_tb_158 = exception_tb;
    exception_keeper_lineno_158 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_158__module);
    Py_DECREF(tmp_import_from_158__module);
    tmp_import_from_158__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_158;
    exception_value = exception_keeper_value_158;
    exception_tb = exception_keeper_tb_158;
    exception_lineno = exception_keeper_lineno_158;

    goto frame_exception_exit_1;
    // End of try:
    try_end_158:;
    CHECK_OBJECT(tmp_import_from_158__module);
    Py_DECREF(tmp_import_from_158__module);
    tmp_import_from_158__module = NULL;

    {
        PyObject *tmp_assign_source_1086;
        PyObject *tmp_import_name_from_925;
        PyObject *tmp_name_name_625;
        PyObject *tmp_globals_name_625;
        PyObject *tmp_locals_name_625;
        PyObject *tmp_fromlist_name_625;
        PyObject *tmp_level_name_625;
        tmp_name_name_625 = const_str_plain_tvigle;
        tmp_globals_name_625 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_625 = Py_None;
        tmp_fromlist_name_625 = const_tuple_str_plain_TvigleIE_tuple;
        tmp_level_name_625 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1203;
        tmp_import_name_from_925 = IMPORT_MODULE5(tmp_name_name_625, tmp_globals_name_625, tmp_locals_name_625, tmp_fromlist_name_625, tmp_level_name_625);
        if (tmp_import_name_from_925 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1203;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_925)) {
           tmp_assign_source_1086 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_925,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TvigleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1086 = IMPORT_NAME(tmp_import_name_from_925, const_str_plain_TvigleIE);
        }

        Py_DECREF(tmp_import_name_from_925);
        if (tmp_assign_source_1086 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1203;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TvigleIE, tmp_assign_source_1086);
    }
    {
        PyObject *tmp_assign_source_1087;
        PyObject *tmp_import_name_from_926;
        PyObject *tmp_name_name_626;
        PyObject *tmp_globals_name_626;
        PyObject *tmp_locals_name_626;
        PyObject *tmp_fromlist_name_626;
        PyObject *tmp_level_name_626;
        tmp_name_name_626 = const_str_plain_tvland;
        tmp_globals_name_626 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_626 = Py_None;
        tmp_fromlist_name_626 = const_tuple_str_plain_TVLandIE_tuple;
        tmp_level_name_626 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1204;
        tmp_import_name_from_926 = IMPORT_MODULE5(tmp_name_name_626, tmp_globals_name_626, tmp_locals_name_626, tmp_fromlist_name_626, tmp_level_name_626);
        if (tmp_import_name_from_926 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1204;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_926)) {
           tmp_assign_source_1087 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_926,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVLandIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1087 = IMPORT_NAME(tmp_import_name_from_926, const_str_plain_TVLandIE);
        }

        Py_DECREF(tmp_import_name_from_926);
        if (tmp_assign_source_1087 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1204;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVLandIE, tmp_assign_source_1087);
    }
    {
        PyObject *tmp_assign_source_1088;
        PyObject *tmp_import_name_from_927;
        PyObject *tmp_name_name_627;
        PyObject *tmp_globals_name_627;
        PyObject *tmp_locals_name_627;
        PyObject *tmp_fromlist_name_627;
        PyObject *tmp_level_name_627;
        tmp_name_name_627 = const_str_plain_tvn24;
        tmp_globals_name_627 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_627 = Py_None;
        tmp_fromlist_name_627 = const_tuple_str_plain_TVN24IE_tuple;
        tmp_level_name_627 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1205;
        tmp_import_name_from_927 = IMPORT_MODULE5(tmp_name_name_627, tmp_globals_name_627, tmp_locals_name_627, tmp_fromlist_name_627, tmp_level_name_627);
        if (tmp_import_name_from_927 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1205;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_927)) {
           tmp_assign_source_1088 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_927,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVN24IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1088 = IMPORT_NAME(tmp_import_name_from_927, const_str_plain_TVN24IE);
        }

        Py_DECREF(tmp_import_name_from_927);
        if (tmp_assign_source_1088 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1205;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVN24IE, tmp_assign_source_1088);
    }
    {
        PyObject *tmp_assign_source_1089;
        PyObject *tmp_import_name_from_928;
        PyObject *tmp_name_name_628;
        PyObject *tmp_globals_name_628;
        PyObject *tmp_locals_name_628;
        PyObject *tmp_fromlist_name_628;
        PyObject *tmp_level_name_628;
        tmp_name_name_628 = const_str_plain_tvnet;
        tmp_globals_name_628 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_628 = Py_None;
        tmp_fromlist_name_628 = const_tuple_str_plain_TVNetIE_tuple;
        tmp_level_name_628 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1206;
        tmp_import_name_from_928 = IMPORT_MODULE5(tmp_name_name_628, tmp_globals_name_628, tmp_locals_name_628, tmp_fromlist_name_628, tmp_level_name_628);
        if (tmp_import_name_from_928 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1206;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_928)) {
           tmp_assign_source_1089 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_928,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVNetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1089 = IMPORT_NAME(tmp_import_name_from_928, const_str_plain_TVNetIE);
        }

        Py_DECREF(tmp_import_name_from_928);
        if (tmp_assign_source_1089 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1206;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVNetIE, tmp_assign_source_1089);
    }
    {
        PyObject *tmp_assign_source_1090;
        PyObject *tmp_import_name_from_929;
        PyObject *tmp_name_name_629;
        PyObject *tmp_globals_name_629;
        PyObject *tmp_locals_name_629;
        PyObject *tmp_fromlist_name_629;
        PyObject *tmp_level_name_629;
        tmp_name_name_629 = const_str_plain_tvnoe;
        tmp_globals_name_629 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_629 = Py_None;
        tmp_fromlist_name_629 = const_tuple_str_plain_TVNoeIE_tuple;
        tmp_level_name_629 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1207;
        tmp_import_name_from_929 = IMPORT_MODULE5(tmp_name_name_629, tmp_globals_name_629, tmp_locals_name_629, tmp_fromlist_name_629, tmp_level_name_629);
        if (tmp_import_name_from_929 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1207;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_929)) {
           tmp_assign_source_1090 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_929,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVNoeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1090 = IMPORT_NAME(tmp_import_name_from_929, const_str_plain_TVNoeIE);
        }

        Py_DECREF(tmp_import_name_from_929);
        if (tmp_assign_source_1090 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1207;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVNoeIE, tmp_assign_source_1090);
    }
    {
        PyObject *tmp_assign_source_1091;
        PyObject *tmp_name_name_630;
        PyObject *tmp_globals_name_630;
        PyObject *tmp_locals_name_630;
        PyObject *tmp_fromlist_name_630;
        PyObject *tmp_level_name_630;
        tmp_name_name_630 = const_str_plain_tvnow;
        tmp_globals_name_630 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_630 = Py_None;
        tmp_fromlist_name_630 = const_tuple_d3bc9f00cff9a92b7716259cb3fefdd2_tuple;
        tmp_level_name_630 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1208;
        tmp_assign_source_1091 = IMPORT_MODULE5(tmp_name_name_630, tmp_globals_name_630, tmp_locals_name_630, tmp_fromlist_name_630, tmp_level_name_630);
        if (tmp_assign_source_1091 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1208;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_159__module == NULL);
        tmp_import_from_159__module = tmp_assign_source_1091;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1092;
        PyObject *tmp_import_name_from_930;
        CHECK_OBJECT(tmp_import_from_159__module);
        tmp_import_name_from_930 = tmp_import_from_159__module;
        if (PyModule_Check(tmp_import_name_from_930)) {
           tmp_assign_source_1092 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_930,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVNowIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1092 = IMPORT_NAME(tmp_import_name_from_930, const_str_plain_TVNowIE);
        }

        if (tmp_assign_source_1092 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1208;

            goto try_except_handler_159;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVNowIE, tmp_assign_source_1092);
    }
    {
        PyObject *tmp_assign_source_1093;
        PyObject *tmp_import_name_from_931;
        CHECK_OBJECT(tmp_import_from_159__module);
        tmp_import_name_from_931 = tmp_import_from_159__module;
        if (PyModule_Check(tmp_import_name_from_931)) {
           tmp_assign_source_1093 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_931,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVNowNewIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1093 = IMPORT_NAME(tmp_import_name_from_931, const_str_plain_TVNowNewIE);
        }

        if (tmp_assign_source_1093 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1208;

            goto try_except_handler_159;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVNowNewIE, tmp_assign_source_1093);
    }
    {
        PyObject *tmp_assign_source_1094;
        PyObject *tmp_import_name_from_932;
        CHECK_OBJECT(tmp_import_from_159__module);
        tmp_import_name_from_932 = tmp_import_from_159__module;
        if (PyModule_Check(tmp_import_name_from_932)) {
           tmp_assign_source_1094 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_932,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVNowSeasonIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1094 = IMPORT_NAME(tmp_import_name_from_932, const_str_plain_TVNowSeasonIE);
        }

        if (tmp_assign_source_1094 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1208;

            goto try_except_handler_159;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVNowSeasonIE, tmp_assign_source_1094);
    }
    {
        PyObject *tmp_assign_source_1095;
        PyObject *tmp_import_name_from_933;
        CHECK_OBJECT(tmp_import_from_159__module);
        tmp_import_name_from_933 = tmp_import_from_159__module;
        if (PyModule_Check(tmp_import_name_from_933)) {
           tmp_assign_source_1095 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_933,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVNowAnnualIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1095 = IMPORT_NAME(tmp_import_name_from_933, const_str_plain_TVNowAnnualIE);
        }

        if (tmp_assign_source_1095 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1208;

            goto try_except_handler_159;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVNowAnnualIE, tmp_assign_source_1095);
    }
    {
        PyObject *tmp_assign_source_1096;
        PyObject *tmp_import_name_from_934;
        CHECK_OBJECT(tmp_import_from_159__module);
        tmp_import_name_from_934 = tmp_import_from_159__module;
        if (PyModule_Check(tmp_import_name_from_934)) {
           tmp_assign_source_1096 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_934,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVNowShowIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1096 = IMPORT_NAME(tmp_import_name_from_934, const_str_plain_TVNowShowIE);
        }

        if (tmp_assign_source_1096 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1208;

            goto try_except_handler_159;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVNowShowIE, tmp_assign_source_1096);
    }
    goto try_end_159;
    // Exception handler code:
    try_except_handler_159:;
    exception_keeper_type_159 = exception_type;
    exception_keeper_value_159 = exception_value;
    exception_keeper_tb_159 = exception_tb;
    exception_keeper_lineno_159 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_159__module);
    Py_DECREF(tmp_import_from_159__module);
    tmp_import_from_159__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_159;
    exception_value = exception_keeper_value_159;
    exception_tb = exception_keeper_tb_159;
    exception_lineno = exception_keeper_lineno_159;

    goto frame_exception_exit_1;
    // End of try:
    try_end_159:;
    CHECK_OBJECT(tmp_import_from_159__module);
    Py_DECREF(tmp_import_from_159__module);
    tmp_import_from_159__module = NULL;

    {
        PyObject *tmp_assign_source_1097;
        PyObject *tmp_name_name_631;
        PyObject *tmp_globals_name_631;
        PyObject *tmp_locals_name_631;
        PyObject *tmp_fromlist_name_631;
        PyObject *tmp_level_name_631;
        tmp_name_name_631 = const_str_plain_tvp;
        tmp_globals_name_631 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_631 = Py_None;
        tmp_fromlist_name_631 = const_tuple_str_plain_TVPEmbedIE_str_plain_TVPIE_str_plain_TVPWebsiteIE_tuple;
        tmp_level_name_631 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1215;
        tmp_assign_source_1097 = IMPORT_MODULE5(tmp_name_name_631, tmp_globals_name_631, tmp_locals_name_631, tmp_fromlist_name_631, tmp_level_name_631);
        if (tmp_assign_source_1097 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1215;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_160__module == NULL);
        tmp_import_from_160__module = tmp_assign_source_1097;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1098;
        PyObject *tmp_import_name_from_935;
        CHECK_OBJECT(tmp_import_from_160__module);
        tmp_import_name_from_935 = tmp_import_from_160__module;
        if (PyModule_Check(tmp_import_name_from_935)) {
           tmp_assign_source_1098 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_935,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVPEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1098 = IMPORT_NAME(tmp_import_name_from_935, const_str_plain_TVPEmbedIE);
        }

        if (tmp_assign_source_1098 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1215;

            goto try_except_handler_160;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVPEmbedIE, tmp_assign_source_1098);
    }
    {
        PyObject *tmp_assign_source_1099;
        PyObject *tmp_import_name_from_936;
        CHECK_OBJECT(tmp_import_from_160__module);
        tmp_import_name_from_936 = tmp_import_from_160__module;
        if (PyModule_Check(tmp_import_name_from_936)) {
           tmp_assign_source_1099 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_936,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVPIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1099 = IMPORT_NAME(tmp_import_name_from_936, const_str_plain_TVPIE);
        }

        if (tmp_assign_source_1099 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1215;

            goto try_except_handler_160;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVPIE, tmp_assign_source_1099);
    }
    {
        PyObject *tmp_assign_source_1100;
        PyObject *tmp_import_name_from_937;
        CHECK_OBJECT(tmp_import_from_160__module);
        tmp_import_name_from_937 = tmp_import_from_160__module;
        if (PyModule_Check(tmp_import_name_from_937)) {
           tmp_assign_source_1100 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_937,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVPWebsiteIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1100 = IMPORT_NAME(tmp_import_name_from_937, const_str_plain_TVPWebsiteIE);
        }

        if (tmp_assign_source_1100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1215;

            goto try_except_handler_160;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVPWebsiteIE, tmp_assign_source_1100);
    }
    goto try_end_160;
    // Exception handler code:
    try_except_handler_160:;
    exception_keeper_type_160 = exception_type;
    exception_keeper_value_160 = exception_value;
    exception_keeper_tb_160 = exception_tb;
    exception_keeper_lineno_160 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_160__module);
    Py_DECREF(tmp_import_from_160__module);
    tmp_import_from_160__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_160;
    exception_value = exception_keeper_value_160;
    exception_tb = exception_keeper_tb_160;
    exception_lineno = exception_keeper_lineno_160;

    goto frame_exception_exit_1;
    // End of try:
    try_end_160:;
    CHECK_OBJECT(tmp_import_from_160__module);
    Py_DECREF(tmp_import_from_160__module);
    tmp_import_from_160__module = NULL;

    {
        PyObject *tmp_assign_source_1101;
        PyObject *tmp_name_name_632;
        PyObject *tmp_globals_name_632;
        PyObject *tmp_locals_name_632;
        PyObject *tmp_fromlist_name_632;
        PyObject *tmp_level_name_632;
        tmp_name_name_632 = const_str_plain_tvplay;
        tmp_globals_name_632 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_632 = Py_None;
        tmp_fromlist_name_632 = const_tuple_ef58271ad2456395f805d453d2e56d92_tuple;
        tmp_level_name_632 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1220;
        tmp_assign_source_1101 = IMPORT_MODULE5(tmp_name_name_632, tmp_globals_name_632, tmp_locals_name_632, tmp_fromlist_name_632, tmp_level_name_632);
        if (tmp_assign_source_1101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1220;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_161__module == NULL);
        tmp_import_from_161__module = tmp_assign_source_1101;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1102;
        PyObject *tmp_import_name_from_938;
        CHECK_OBJECT(tmp_import_from_161__module);
        tmp_import_name_from_938 = tmp_import_from_161__module;
        if (PyModule_Check(tmp_import_name_from_938)) {
           tmp_assign_source_1102 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_938,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1102 = IMPORT_NAME(tmp_import_name_from_938, const_str_plain_TVPlayIE);
        }

        if (tmp_assign_source_1102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1220;

            goto try_except_handler_161;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVPlayIE, tmp_assign_source_1102);
    }
    {
        PyObject *tmp_assign_source_1103;
        PyObject *tmp_import_name_from_939;
        CHECK_OBJECT(tmp_import_from_161__module);
        tmp_import_name_from_939 = tmp_import_from_161__module;
        if (PyModule_Check(tmp_import_name_from_939)) {
           tmp_assign_source_1103 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_939,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ViafreeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1103 = IMPORT_NAME(tmp_import_name_from_939, const_str_plain_ViafreeIE);
        }

        if (tmp_assign_source_1103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1220;

            goto try_except_handler_161;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ViafreeIE, tmp_assign_source_1103);
    }
    {
        PyObject *tmp_assign_source_1104;
        PyObject *tmp_import_name_from_940;
        CHECK_OBJECT(tmp_import_from_161__module);
        tmp_import_name_from_940 = tmp_import_from_161__module;
        if (PyModule_Check(tmp_import_name_from_940)) {
           tmp_assign_source_1104 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_940,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVPlayHomeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1104 = IMPORT_NAME(tmp_import_name_from_940, const_str_plain_TVPlayHomeIE);
        }

        if (tmp_assign_source_1104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1220;

            goto try_except_handler_161;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVPlayHomeIE, tmp_assign_source_1104);
    }
    goto try_end_161;
    // Exception handler code:
    try_except_handler_161:;
    exception_keeper_type_161 = exception_type;
    exception_keeper_value_161 = exception_value;
    exception_keeper_tb_161 = exception_tb;
    exception_keeper_lineno_161 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_161__module);
    Py_DECREF(tmp_import_from_161__module);
    tmp_import_from_161__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_161;
    exception_value = exception_keeper_value_161;
    exception_tb = exception_keeper_tb_161;
    exception_lineno = exception_keeper_lineno_161;

    goto frame_exception_exit_1;
    // End of try:
    try_end_161:;
    CHECK_OBJECT(tmp_import_from_161__module);
    Py_DECREF(tmp_import_from_161__module);
    tmp_import_from_161__module = NULL;

    {
        PyObject *tmp_assign_source_1105;
        PyObject *tmp_import_name_from_941;
        PyObject *tmp_name_name_633;
        PyObject *tmp_globals_name_633;
        PyObject *tmp_locals_name_633;
        PyObject *tmp_fromlist_name_633;
        PyObject *tmp_level_name_633;
        tmp_name_name_633 = const_str_plain_tvplayer;
        tmp_globals_name_633 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_633 = Py_None;
        tmp_fromlist_name_633 = const_tuple_str_plain_TVPlayerIE_tuple;
        tmp_level_name_633 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1225;
        tmp_import_name_from_941 = IMPORT_MODULE5(tmp_name_name_633, tmp_globals_name_633, tmp_locals_name_633, tmp_fromlist_name_633, tmp_level_name_633);
        if (tmp_import_name_from_941 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1225;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_941)) {
           tmp_assign_source_1105 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_941,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TVPlayerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1105 = IMPORT_NAME(tmp_import_name_from_941, const_str_plain_TVPlayerIE);
        }

        Py_DECREF(tmp_import_name_from_941);
        if (tmp_assign_source_1105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1225;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TVPlayerIE, tmp_assign_source_1105);
    }
    {
        PyObject *tmp_assign_source_1106;
        PyObject *tmp_import_name_from_942;
        PyObject *tmp_name_name_634;
        PyObject *tmp_globals_name_634;
        PyObject *tmp_locals_name_634;
        PyObject *tmp_fromlist_name_634;
        PyObject *tmp_level_name_634;
        tmp_name_name_634 = const_str_plain_tweakers;
        tmp_globals_name_634 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_634 = Py_None;
        tmp_fromlist_name_634 = const_tuple_str_plain_TweakersIE_tuple;
        tmp_level_name_634 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1226;
        tmp_import_name_from_942 = IMPORT_MODULE5(tmp_name_name_634, tmp_globals_name_634, tmp_locals_name_634, tmp_fromlist_name_634, tmp_level_name_634);
        if (tmp_import_name_from_942 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1226;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_942)) {
           tmp_assign_source_1106 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_942,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TweakersIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1106 = IMPORT_NAME(tmp_import_name_from_942, const_str_plain_TweakersIE);
        }

        Py_DECREF(tmp_import_name_from_942);
        if (tmp_assign_source_1106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1226;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TweakersIE, tmp_assign_source_1106);
    }
    {
        PyObject *tmp_assign_source_1107;
        PyObject *tmp_import_name_from_943;
        PyObject *tmp_name_name_635;
        PyObject *tmp_globals_name_635;
        PyObject *tmp_locals_name_635;
        PyObject *tmp_fromlist_name_635;
        PyObject *tmp_level_name_635;
        tmp_name_name_635 = const_str_plain_twentyfourvideo;
        tmp_globals_name_635 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_635 = Py_None;
        tmp_fromlist_name_635 = const_tuple_str_plain_TwentyFourVideoIE_tuple;
        tmp_level_name_635 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1227;
        tmp_import_name_from_943 = IMPORT_MODULE5(tmp_name_name_635, tmp_globals_name_635, tmp_locals_name_635, tmp_fromlist_name_635, tmp_level_name_635);
        if (tmp_import_name_from_943 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1227;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_943)) {
           tmp_assign_source_1107 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_943,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwentyFourVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1107 = IMPORT_NAME(tmp_import_name_from_943, const_str_plain_TwentyFourVideoIE);
        }

        Py_DECREF(tmp_import_name_from_943);
        if (tmp_assign_source_1107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1227;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwentyFourVideoIE, tmp_assign_source_1107);
    }
    {
        PyObject *tmp_assign_source_1108;
        PyObject *tmp_import_name_from_944;
        PyObject *tmp_name_name_636;
        PyObject *tmp_globals_name_636;
        PyObject *tmp_locals_name_636;
        PyObject *tmp_fromlist_name_636;
        PyObject *tmp_level_name_636;
        tmp_name_name_636 = const_str_plain_twentymin;
        tmp_globals_name_636 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_636 = Py_None;
        tmp_fromlist_name_636 = const_tuple_str_plain_TwentyMinutenIE_tuple;
        tmp_level_name_636 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1228;
        tmp_import_name_from_944 = IMPORT_MODULE5(tmp_name_name_636, tmp_globals_name_636, tmp_locals_name_636, tmp_fromlist_name_636, tmp_level_name_636);
        if (tmp_import_name_from_944 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1228;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_944)) {
           tmp_assign_source_1108 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_944,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwentyMinutenIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1108 = IMPORT_NAME(tmp_import_name_from_944, const_str_plain_TwentyMinutenIE);
        }

        Py_DECREF(tmp_import_name_from_944);
        if (tmp_assign_source_1108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1228;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwentyMinutenIE, tmp_assign_source_1108);
    }
    {
        PyObject *tmp_assign_source_1109;
        PyObject *tmp_import_name_from_945;
        PyObject *tmp_name_name_637;
        PyObject *tmp_globals_name_637;
        PyObject *tmp_locals_name_637;
        PyObject *tmp_fromlist_name_637;
        PyObject *tmp_level_name_637;
        tmp_name_name_637 = const_str_plain_twentythreevideo;
        tmp_globals_name_637 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_637 = Py_None;
        tmp_fromlist_name_637 = const_tuple_str_plain_TwentyThreeVideoIE_tuple;
        tmp_level_name_637 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1229;
        tmp_import_name_from_945 = IMPORT_MODULE5(tmp_name_name_637, tmp_globals_name_637, tmp_locals_name_637, tmp_fromlist_name_637, tmp_level_name_637);
        if (tmp_import_name_from_945 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1229;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_945)) {
           tmp_assign_source_1109 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_945,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwentyThreeVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1109 = IMPORT_NAME(tmp_import_name_from_945, const_str_plain_TwentyThreeVideoIE);
        }

        Py_DECREF(tmp_import_name_from_945);
        if (tmp_assign_source_1109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1229;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwentyThreeVideoIE, tmp_assign_source_1109);
    }
    {
        PyObject *tmp_assign_source_1110;
        PyObject *tmp_import_name_from_946;
        PyObject *tmp_name_name_638;
        PyObject *tmp_globals_name_638;
        PyObject *tmp_locals_name_638;
        PyObject *tmp_fromlist_name_638;
        PyObject *tmp_level_name_638;
        tmp_name_name_638 = const_str_plain_twitcasting;
        tmp_globals_name_638 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_638 = Py_None;
        tmp_fromlist_name_638 = const_tuple_str_plain_TwitCastingIE_tuple;
        tmp_level_name_638 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1230;
        tmp_import_name_from_946 = IMPORT_MODULE5(tmp_name_name_638, tmp_globals_name_638, tmp_locals_name_638, tmp_fromlist_name_638, tmp_level_name_638);
        if (tmp_import_name_from_946 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1230;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_946)) {
           tmp_assign_source_1110 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_946,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitCastingIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1110 = IMPORT_NAME(tmp_import_name_from_946, const_str_plain_TwitCastingIE);
        }

        Py_DECREF(tmp_import_name_from_946);
        if (tmp_assign_source_1110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1230;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitCastingIE, tmp_assign_source_1110);
    }
    {
        PyObject *tmp_assign_source_1111;
        PyObject *tmp_name_name_639;
        PyObject *tmp_globals_name_639;
        PyObject *tmp_locals_name_639;
        PyObject *tmp_fromlist_name_639;
        PyObject *tmp_level_name_639;
        tmp_name_name_639 = const_str_plain_twitch;
        tmp_globals_name_639 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_639 = Py_None;
        tmp_fromlist_name_639 = const_tuple_1f441f58d4dd7bc04f9929a4d0b9c5be_tuple;
        tmp_level_name_639 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1231;
        tmp_assign_source_1111 = IMPORT_MODULE5(tmp_name_name_639, tmp_globals_name_639, tmp_locals_name_639, tmp_fromlist_name_639, tmp_level_name_639);
        if (tmp_assign_source_1111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_162__module == NULL);
        tmp_import_from_162__module = tmp_assign_source_1111;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1112;
        PyObject *tmp_import_name_from_947;
        CHECK_OBJECT(tmp_import_from_162__module);
        tmp_import_name_from_947 = tmp_import_from_162__module;
        if (PyModule_Check(tmp_import_name_from_947)) {
           tmp_assign_source_1112 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_947,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitchVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1112 = IMPORT_NAME(tmp_import_name_from_947, const_str_plain_TwitchVideoIE);
        }

        if (tmp_assign_source_1112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto try_except_handler_162;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitchVideoIE, tmp_assign_source_1112);
    }
    {
        PyObject *tmp_assign_source_1113;
        PyObject *tmp_import_name_from_948;
        CHECK_OBJECT(tmp_import_from_162__module);
        tmp_import_name_from_948 = tmp_import_from_162__module;
        if (PyModule_Check(tmp_import_name_from_948)) {
           tmp_assign_source_1113 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_948,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitchChapterIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1113 = IMPORT_NAME(tmp_import_name_from_948, const_str_plain_TwitchChapterIE);
        }

        if (tmp_assign_source_1113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto try_except_handler_162;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitchChapterIE, tmp_assign_source_1113);
    }
    {
        PyObject *tmp_assign_source_1114;
        PyObject *tmp_import_name_from_949;
        CHECK_OBJECT(tmp_import_from_162__module);
        tmp_import_name_from_949 = tmp_import_from_162__module;
        if (PyModule_Check(tmp_import_name_from_949)) {
           tmp_assign_source_1114 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_949,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitchVodIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1114 = IMPORT_NAME(tmp_import_name_from_949, const_str_plain_TwitchVodIE);
        }

        if (tmp_assign_source_1114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto try_except_handler_162;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitchVodIE, tmp_assign_source_1114);
    }
    {
        PyObject *tmp_assign_source_1115;
        PyObject *tmp_import_name_from_950;
        CHECK_OBJECT(tmp_import_from_162__module);
        tmp_import_name_from_950 = tmp_import_from_162__module;
        if (PyModule_Check(tmp_import_name_from_950)) {
           tmp_assign_source_1115 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_950,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitchProfileIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1115 = IMPORT_NAME(tmp_import_name_from_950, const_str_plain_TwitchProfileIE);
        }

        if (tmp_assign_source_1115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto try_except_handler_162;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitchProfileIE, tmp_assign_source_1115);
    }
    {
        PyObject *tmp_assign_source_1116;
        PyObject *tmp_import_name_from_951;
        CHECK_OBJECT(tmp_import_from_162__module);
        tmp_import_name_from_951 = tmp_import_from_162__module;
        if (PyModule_Check(tmp_import_name_from_951)) {
           tmp_assign_source_1116 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_951,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitchAllVideosIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1116 = IMPORT_NAME(tmp_import_name_from_951, const_str_plain_TwitchAllVideosIE);
        }

        if (tmp_assign_source_1116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto try_except_handler_162;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitchAllVideosIE, tmp_assign_source_1116);
    }
    {
        PyObject *tmp_assign_source_1117;
        PyObject *tmp_import_name_from_952;
        CHECK_OBJECT(tmp_import_from_162__module);
        tmp_import_name_from_952 = tmp_import_from_162__module;
        if (PyModule_Check(tmp_import_name_from_952)) {
           tmp_assign_source_1117 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_952,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitchUploadsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1117 = IMPORT_NAME(tmp_import_name_from_952, const_str_plain_TwitchUploadsIE);
        }

        if (tmp_assign_source_1117 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto try_except_handler_162;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitchUploadsIE, tmp_assign_source_1117);
    }
    {
        PyObject *tmp_assign_source_1118;
        PyObject *tmp_import_name_from_953;
        CHECK_OBJECT(tmp_import_from_162__module);
        tmp_import_name_from_953 = tmp_import_from_162__module;
        if (PyModule_Check(tmp_import_name_from_953)) {
           tmp_assign_source_1118 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_953,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitchPastBroadcastsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1118 = IMPORT_NAME(tmp_import_name_from_953, const_str_plain_TwitchPastBroadcastsIE);
        }

        if (tmp_assign_source_1118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto try_except_handler_162;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitchPastBroadcastsIE, tmp_assign_source_1118);
    }
    {
        PyObject *tmp_assign_source_1119;
        PyObject *tmp_import_name_from_954;
        CHECK_OBJECT(tmp_import_from_162__module);
        tmp_import_name_from_954 = tmp_import_from_162__module;
        if (PyModule_Check(tmp_import_name_from_954)) {
           tmp_assign_source_1119 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_954,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitchHighlightsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1119 = IMPORT_NAME(tmp_import_name_from_954, const_str_plain_TwitchHighlightsIE);
        }

        if (tmp_assign_source_1119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto try_except_handler_162;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitchHighlightsIE, tmp_assign_source_1119);
    }
    {
        PyObject *tmp_assign_source_1120;
        PyObject *tmp_import_name_from_955;
        CHECK_OBJECT(tmp_import_from_162__module);
        tmp_import_name_from_955 = tmp_import_from_162__module;
        if (PyModule_Check(tmp_import_name_from_955)) {
           tmp_assign_source_1120 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_955,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitchStreamIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1120 = IMPORT_NAME(tmp_import_name_from_955, const_str_plain_TwitchStreamIE);
        }

        if (tmp_assign_source_1120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto try_except_handler_162;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitchStreamIE, tmp_assign_source_1120);
    }
    {
        PyObject *tmp_assign_source_1121;
        PyObject *tmp_import_name_from_956;
        CHECK_OBJECT(tmp_import_from_162__module);
        tmp_import_name_from_956 = tmp_import_from_162__module;
        if (PyModule_Check(tmp_import_name_from_956)) {
           tmp_assign_source_1121 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_956,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitchClipsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1121 = IMPORT_NAME(tmp_import_name_from_956, const_str_plain_TwitchClipsIE);
        }

        if (tmp_assign_source_1121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto try_except_handler_162;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitchClipsIE, tmp_assign_source_1121);
    }
    goto try_end_162;
    // Exception handler code:
    try_except_handler_162:;
    exception_keeper_type_162 = exception_type;
    exception_keeper_value_162 = exception_value;
    exception_keeper_tb_162 = exception_tb;
    exception_keeper_lineno_162 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_162__module);
    Py_DECREF(tmp_import_from_162__module);
    tmp_import_from_162__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_162;
    exception_value = exception_keeper_value_162;
    exception_tb = exception_keeper_tb_162;
    exception_lineno = exception_keeper_lineno_162;

    goto frame_exception_exit_1;
    // End of try:
    try_end_162:;
    CHECK_OBJECT(tmp_import_from_162__module);
    Py_DECREF(tmp_import_from_162__module);
    tmp_import_from_162__module = NULL;

    {
        PyObject *tmp_assign_source_1122;
        PyObject *tmp_name_name_640;
        PyObject *tmp_globals_name_640;
        PyObject *tmp_locals_name_640;
        PyObject *tmp_fromlist_name_640;
        PyObject *tmp_level_name_640;
        tmp_name_name_640 = const_str_plain_twitter;
        tmp_globals_name_640 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_640 = Py_None;
        tmp_fromlist_name_640 = const_tuple_71c9c30cc8ebd744889f26c615b0618c_tuple;
        tmp_level_name_640 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1243;
        tmp_assign_source_1122 = IMPORT_MODULE5(tmp_name_name_640, tmp_globals_name_640, tmp_locals_name_640, tmp_fromlist_name_640, tmp_level_name_640);
        if (tmp_assign_source_1122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1243;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_163__module == NULL);
        tmp_import_from_163__module = tmp_assign_source_1122;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1123;
        PyObject *tmp_import_name_from_957;
        CHECK_OBJECT(tmp_import_from_163__module);
        tmp_import_name_from_957 = tmp_import_from_163__module;
        if (PyModule_Check(tmp_import_name_from_957)) {
           tmp_assign_source_1123 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_957,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitterCardIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1123 = IMPORT_NAME(tmp_import_name_from_957, const_str_plain_TwitterCardIE);
        }

        if (tmp_assign_source_1123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1243;

            goto try_except_handler_163;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitterCardIE, tmp_assign_source_1123);
    }
    {
        PyObject *tmp_assign_source_1124;
        PyObject *tmp_import_name_from_958;
        CHECK_OBJECT(tmp_import_from_163__module);
        tmp_import_name_from_958 = tmp_import_from_163__module;
        if (PyModule_Check(tmp_import_name_from_958)) {
           tmp_assign_source_1124 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_958,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitterIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1124 = IMPORT_NAME(tmp_import_name_from_958, const_str_plain_TwitterIE);
        }

        if (tmp_assign_source_1124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1243;

            goto try_except_handler_163;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitterIE, tmp_assign_source_1124);
    }
    {
        PyObject *tmp_assign_source_1125;
        PyObject *tmp_import_name_from_959;
        CHECK_OBJECT(tmp_import_from_163__module);
        tmp_import_name_from_959 = tmp_import_from_163__module;
        if (PyModule_Check(tmp_import_name_from_959)) {
           tmp_assign_source_1125 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_959,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitterAmplifyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1125 = IMPORT_NAME(tmp_import_name_from_959, const_str_plain_TwitterAmplifyIE);
        }

        if (tmp_assign_source_1125 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1243;

            goto try_except_handler_163;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitterAmplifyIE, tmp_assign_source_1125);
    }
    {
        PyObject *tmp_assign_source_1126;
        PyObject *tmp_import_name_from_960;
        CHECK_OBJECT(tmp_import_from_163__module);
        tmp_import_name_from_960 = tmp_import_from_163__module;
        if (PyModule_Check(tmp_import_name_from_960)) {
           tmp_assign_source_1126 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_960,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_TwitterBroadcastIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1126 = IMPORT_NAME(tmp_import_name_from_960, const_str_plain_TwitterBroadcastIE);
        }

        if (tmp_assign_source_1126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1243;

            goto try_except_handler_163;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_TwitterBroadcastIE, tmp_assign_source_1126);
    }
    goto try_end_163;
    // Exception handler code:
    try_except_handler_163:;
    exception_keeper_type_163 = exception_type;
    exception_keeper_value_163 = exception_value;
    exception_keeper_tb_163 = exception_tb;
    exception_keeper_lineno_163 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_163__module);
    Py_DECREF(tmp_import_from_163__module);
    tmp_import_from_163__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_163;
    exception_value = exception_keeper_value_163;
    exception_tb = exception_keeper_tb_163;
    exception_lineno = exception_keeper_lineno_163;

    goto frame_exception_exit_1;
    // End of try:
    try_end_163:;
    CHECK_OBJECT(tmp_import_from_163__module);
    Py_DECREF(tmp_import_from_163__module);
    tmp_import_from_163__module = NULL;

    {
        PyObject *tmp_assign_source_1127;
        PyObject *tmp_name_name_641;
        PyObject *tmp_globals_name_641;
        PyObject *tmp_locals_name_641;
        PyObject *tmp_fromlist_name_641;
        PyObject *tmp_level_name_641;
        tmp_name_name_641 = const_str_plain_udemy;
        tmp_globals_name_641 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_641 = Py_None;
        tmp_fromlist_name_641 = const_tuple_str_plain_UdemyIE_str_plain_UdemyCourseIE_tuple;
        tmp_level_name_641 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1249;
        tmp_assign_source_1127 = IMPORT_MODULE5(tmp_name_name_641, tmp_globals_name_641, tmp_locals_name_641, tmp_fromlist_name_641, tmp_level_name_641);
        if (tmp_assign_source_1127 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1249;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_164__module == NULL);
        tmp_import_from_164__module = tmp_assign_source_1127;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1128;
        PyObject *tmp_import_name_from_961;
        CHECK_OBJECT(tmp_import_from_164__module);
        tmp_import_name_from_961 = tmp_import_from_164__module;
        if (PyModule_Check(tmp_import_name_from_961)) {
           tmp_assign_source_1128 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_961,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UdemyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1128 = IMPORT_NAME(tmp_import_name_from_961, const_str_plain_UdemyIE);
        }

        if (tmp_assign_source_1128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1249;

            goto try_except_handler_164;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UdemyIE, tmp_assign_source_1128);
    }
    {
        PyObject *tmp_assign_source_1129;
        PyObject *tmp_import_name_from_962;
        CHECK_OBJECT(tmp_import_from_164__module);
        tmp_import_name_from_962 = tmp_import_from_164__module;
        if (PyModule_Check(tmp_import_name_from_962)) {
           tmp_assign_source_1129 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_962,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UdemyCourseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1129 = IMPORT_NAME(tmp_import_name_from_962, const_str_plain_UdemyCourseIE);
        }

        if (tmp_assign_source_1129 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1249;

            goto try_except_handler_164;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UdemyCourseIE, tmp_assign_source_1129);
    }
    goto try_end_164;
    // Exception handler code:
    try_except_handler_164:;
    exception_keeper_type_164 = exception_type;
    exception_keeper_value_164 = exception_value;
    exception_keeper_tb_164 = exception_tb;
    exception_keeper_lineno_164 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_164__module);
    Py_DECREF(tmp_import_from_164__module);
    tmp_import_from_164__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_164;
    exception_value = exception_keeper_value_164;
    exception_tb = exception_keeper_tb_164;
    exception_lineno = exception_keeper_lineno_164;

    goto frame_exception_exit_1;
    // End of try:
    try_end_164:;
    CHECK_OBJECT(tmp_import_from_164__module);
    Py_DECREF(tmp_import_from_164__module);
    tmp_import_from_164__module = NULL;

    {
        PyObject *tmp_assign_source_1130;
        PyObject *tmp_import_name_from_963;
        PyObject *tmp_name_name_642;
        PyObject *tmp_globals_name_642;
        PyObject *tmp_locals_name_642;
        PyObject *tmp_fromlist_name_642;
        PyObject *tmp_level_name_642;
        tmp_name_name_642 = const_str_plain_udn;
        tmp_globals_name_642 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_642 = Py_None;
        tmp_fromlist_name_642 = const_tuple_str_plain_UDNEmbedIE_tuple;
        tmp_level_name_642 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1253;
        tmp_import_name_from_963 = IMPORT_MODULE5(tmp_name_name_642, tmp_globals_name_642, tmp_locals_name_642, tmp_fromlist_name_642, tmp_level_name_642);
        if (tmp_import_name_from_963 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1253;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_963)) {
           tmp_assign_source_1130 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_963,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UDNEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1130 = IMPORT_NAME(tmp_import_name_from_963, const_str_plain_UDNEmbedIE);
        }

        Py_DECREF(tmp_import_name_from_963);
        if (tmp_assign_source_1130 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1253;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UDNEmbedIE, tmp_assign_source_1130);
    }
    {
        PyObject *tmp_assign_source_1131;
        PyObject *tmp_name_name_643;
        PyObject *tmp_globals_name_643;
        PyObject *tmp_locals_name_643;
        PyObject *tmp_fromlist_name_643;
        PyObject *tmp_level_name_643;
        tmp_name_name_643 = const_str_plain_ufctv;
        tmp_globals_name_643 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_643 = Py_None;
        tmp_fromlist_name_643 = const_tuple_str_plain_UFCTVIE_str_plain_UFCArabiaIE_tuple;
        tmp_level_name_643 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1254;
        tmp_assign_source_1131 = IMPORT_MODULE5(tmp_name_name_643, tmp_globals_name_643, tmp_locals_name_643, tmp_fromlist_name_643, tmp_level_name_643);
        if (tmp_assign_source_1131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1254;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_165__module == NULL);
        tmp_import_from_165__module = tmp_assign_source_1131;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1132;
        PyObject *tmp_import_name_from_964;
        CHECK_OBJECT(tmp_import_from_165__module);
        tmp_import_name_from_964 = tmp_import_from_165__module;
        if (PyModule_Check(tmp_import_name_from_964)) {
           tmp_assign_source_1132 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_964,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UFCTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1132 = IMPORT_NAME(tmp_import_name_from_964, const_str_plain_UFCTVIE);
        }

        if (tmp_assign_source_1132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1254;

            goto try_except_handler_165;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UFCTVIE, tmp_assign_source_1132);
    }
    {
        PyObject *tmp_assign_source_1133;
        PyObject *tmp_import_name_from_965;
        CHECK_OBJECT(tmp_import_from_165__module);
        tmp_import_name_from_965 = tmp_import_from_165__module;
        if (PyModule_Check(tmp_import_name_from_965)) {
           tmp_assign_source_1133 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_965,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UFCArabiaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1133 = IMPORT_NAME(tmp_import_name_from_965, const_str_plain_UFCArabiaIE);
        }

        if (tmp_assign_source_1133 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1254;

            goto try_except_handler_165;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UFCArabiaIE, tmp_assign_source_1133);
    }
    goto try_end_165;
    // Exception handler code:
    try_except_handler_165:;
    exception_keeper_type_165 = exception_type;
    exception_keeper_value_165 = exception_value;
    exception_keeper_tb_165 = exception_tb;
    exception_keeper_lineno_165 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_165__module);
    Py_DECREF(tmp_import_from_165__module);
    tmp_import_from_165__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_165;
    exception_value = exception_keeper_value_165;
    exception_tb = exception_keeper_tb_165;
    exception_lineno = exception_keeper_lineno_165;

    goto frame_exception_exit_1;
    // End of try:
    try_end_165:;
    CHECK_OBJECT(tmp_import_from_165__module);
    Py_DECREF(tmp_import_from_165__module);
    tmp_import_from_165__module = NULL;

    {
        PyObject *tmp_assign_source_1134;
        PyObject *tmp_import_name_from_966;
        PyObject *tmp_name_name_644;
        PyObject *tmp_globals_name_644;
        PyObject *tmp_locals_name_644;
        PyObject *tmp_fromlist_name_644;
        PyObject *tmp_level_name_644;
        tmp_name_name_644 = const_str_plain_uktvplay;
        tmp_globals_name_644 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_644 = Py_None;
        tmp_fromlist_name_644 = const_tuple_str_plain_UKTVPlayIE_tuple;
        tmp_level_name_644 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1258;
        tmp_import_name_from_966 = IMPORT_MODULE5(tmp_name_name_644, tmp_globals_name_644, tmp_locals_name_644, tmp_fromlist_name_644, tmp_level_name_644);
        if (tmp_import_name_from_966 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1258;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_966)) {
           tmp_assign_source_1134 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_966,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UKTVPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1134 = IMPORT_NAME(tmp_import_name_from_966, const_str_plain_UKTVPlayIE);
        }

        Py_DECREF(tmp_import_name_from_966);
        if (tmp_assign_source_1134 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1258;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UKTVPlayIE, tmp_assign_source_1134);
    }
    {
        PyObject *tmp_assign_source_1135;
        PyObject *tmp_import_name_from_967;
        PyObject *tmp_name_name_645;
        PyObject *tmp_globals_name_645;
        PyObject *tmp_locals_name_645;
        PyObject *tmp_fromlist_name_645;
        PyObject *tmp_level_name_645;
        tmp_name_name_645 = const_str_plain_digiteka;
        tmp_globals_name_645 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_645 = Py_None;
        tmp_fromlist_name_645 = const_tuple_str_plain_DigitekaIE_tuple;
        tmp_level_name_645 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1259;
        tmp_import_name_from_967 = IMPORT_MODULE5(tmp_name_name_645, tmp_globals_name_645, tmp_locals_name_645, tmp_fromlist_name_645, tmp_level_name_645);
        if (tmp_import_name_from_967 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1259;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_967)) {
           tmp_assign_source_1135 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_967,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DigitekaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1135 = IMPORT_NAME(tmp_import_name_from_967, const_str_plain_DigitekaIE);
        }

        Py_DECREF(tmp_import_name_from_967);
        if (tmp_assign_source_1135 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1259;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DigitekaIE, tmp_assign_source_1135);
    }
    {
        PyObject *tmp_assign_source_1136;
        PyObject *tmp_name_name_646;
        PyObject *tmp_globals_name_646;
        PyObject *tmp_locals_name_646;
        PyObject *tmp_fromlist_name_646;
        PyObject *tmp_level_name_646;
        tmp_name_name_646 = const_str_plain_dlive;
        tmp_globals_name_646 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_646 = Py_None;
        tmp_fromlist_name_646 = const_tuple_str_plain_DLiveVODIE_str_plain_DLiveStreamIE_tuple;
        tmp_level_name_646 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1260;
        tmp_assign_source_1136 = IMPORT_MODULE5(tmp_name_name_646, tmp_globals_name_646, tmp_locals_name_646, tmp_fromlist_name_646, tmp_level_name_646);
        if (tmp_assign_source_1136 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1260;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_166__module == NULL);
        tmp_import_from_166__module = tmp_assign_source_1136;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1137;
        PyObject *tmp_import_name_from_968;
        CHECK_OBJECT(tmp_import_from_166__module);
        tmp_import_name_from_968 = tmp_import_from_166__module;
        if (PyModule_Check(tmp_import_name_from_968)) {
           tmp_assign_source_1137 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_968,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DLiveVODIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1137 = IMPORT_NAME(tmp_import_name_from_968, const_str_plain_DLiveVODIE);
        }

        if (tmp_assign_source_1137 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1260;

            goto try_except_handler_166;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DLiveVODIE, tmp_assign_source_1137);
    }
    {
        PyObject *tmp_assign_source_1138;
        PyObject *tmp_import_name_from_969;
        CHECK_OBJECT(tmp_import_from_166__module);
        tmp_import_name_from_969 = tmp_import_from_166__module;
        if (PyModule_Check(tmp_import_name_from_969)) {
           tmp_assign_source_1138 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_969,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_DLiveStreamIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1138 = IMPORT_NAME(tmp_import_name_from_969, const_str_plain_DLiveStreamIE);
        }

        if (tmp_assign_source_1138 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1260;

            goto try_except_handler_166;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_DLiveStreamIE, tmp_assign_source_1138);
    }
    goto try_end_166;
    // Exception handler code:
    try_except_handler_166:;
    exception_keeper_type_166 = exception_type;
    exception_keeper_value_166 = exception_value;
    exception_keeper_tb_166 = exception_tb;
    exception_keeper_lineno_166 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_166__module);
    Py_DECREF(tmp_import_from_166__module);
    tmp_import_from_166__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_166;
    exception_value = exception_keeper_value_166;
    exception_tb = exception_keeper_tb_166;
    exception_lineno = exception_keeper_lineno_166;

    goto frame_exception_exit_1;
    // End of try:
    try_end_166:;
    CHECK_OBJECT(tmp_import_from_166__module);
    Py_DECREF(tmp_import_from_166__module);
    tmp_import_from_166__module = NULL;

    {
        PyObject *tmp_assign_source_1139;
        PyObject *tmp_import_name_from_970;
        PyObject *tmp_name_name_647;
        PyObject *tmp_globals_name_647;
        PyObject *tmp_locals_name_647;
        PyObject *tmp_fromlist_name_647;
        PyObject *tmp_level_name_647;
        tmp_name_name_647 = const_str_plain_umg;
        tmp_globals_name_647 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_647 = Py_None;
        tmp_fromlist_name_647 = const_tuple_str_plain_UMGDeIE_tuple;
        tmp_level_name_647 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1264;
        tmp_import_name_from_970 = IMPORT_MODULE5(tmp_name_name_647, tmp_globals_name_647, tmp_locals_name_647, tmp_fromlist_name_647, tmp_level_name_647);
        if (tmp_import_name_from_970 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1264;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_970)) {
           tmp_assign_source_1139 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_970,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UMGDeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1139 = IMPORT_NAME(tmp_import_name_from_970, const_str_plain_UMGDeIE);
        }

        Py_DECREF(tmp_import_name_from_970);
        if (tmp_assign_source_1139 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1264;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UMGDeIE, tmp_assign_source_1139);
    }
    {
        PyObject *tmp_assign_source_1140;
        PyObject *tmp_import_name_from_971;
        PyObject *tmp_name_name_648;
        PyObject *tmp_globals_name_648;
        PyObject *tmp_locals_name_648;
        PyObject *tmp_fromlist_name_648;
        PyObject *tmp_level_name_648;
        tmp_name_name_648 = const_str_plain_unistra;
        tmp_globals_name_648 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_648 = Py_None;
        tmp_fromlist_name_648 = const_tuple_str_plain_UnistraIE_tuple;
        tmp_level_name_648 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1265;
        tmp_import_name_from_971 = IMPORT_MODULE5(tmp_name_name_648, tmp_globals_name_648, tmp_locals_name_648, tmp_fromlist_name_648, tmp_level_name_648);
        if (tmp_import_name_from_971 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1265;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_971)) {
           tmp_assign_source_1140 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_971,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UnistraIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1140 = IMPORT_NAME(tmp_import_name_from_971, const_str_plain_UnistraIE);
        }

        Py_DECREF(tmp_import_name_from_971);
        if (tmp_assign_source_1140 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1265;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UnistraIE, tmp_assign_source_1140);
    }
    {
        PyObject *tmp_assign_source_1141;
        PyObject *tmp_import_name_from_972;
        PyObject *tmp_name_name_649;
        PyObject *tmp_globals_name_649;
        PyObject *tmp_locals_name_649;
        PyObject *tmp_fromlist_name_649;
        PyObject *tmp_level_name_649;
        tmp_name_name_649 = const_str_plain_unity;
        tmp_globals_name_649 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_649 = Py_None;
        tmp_fromlist_name_649 = const_tuple_str_plain_UnityIE_tuple;
        tmp_level_name_649 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1266;
        tmp_import_name_from_972 = IMPORT_MODULE5(tmp_name_name_649, tmp_globals_name_649, tmp_locals_name_649, tmp_fromlist_name_649, tmp_level_name_649);
        if (tmp_import_name_from_972 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1266;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_972)) {
           tmp_assign_source_1141 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_972,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UnityIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1141 = IMPORT_NAME(tmp_import_name_from_972, const_str_plain_UnityIE);
        }

        Py_DECREF(tmp_import_name_from_972);
        if (tmp_assign_source_1141 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1266;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UnityIE, tmp_assign_source_1141);
    }
    {
        PyObject *tmp_assign_source_1142;
        PyObject *tmp_import_name_from_973;
        PyObject *tmp_name_name_650;
        PyObject *tmp_globals_name_650;
        PyObject *tmp_locals_name_650;
        PyObject *tmp_fromlist_name_650;
        PyObject *tmp_level_name_650;
        tmp_name_name_650 = const_str_plain_uol;
        tmp_globals_name_650 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_650 = Py_None;
        tmp_fromlist_name_650 = const_tuple_str_plain_UOLIE_tuple;
        tmp_level_name_650 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1267;
        tmp_import_name_from_973 = IMPORT_MODULE5(tmp_name_name_650, tmp_globals_name_650, tmp_locals_name_650, tmp_fromlist_name_650, tmp_level_name_650);
        if (tmp_import_name_from_973 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1267;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_973)) {
           tmp_assign_source_1142 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_973,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UOLIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1142 = IMPORT_NAME(tmp_import_name_from_973, const_str_plain_UOLIE);
        }

        Py_DECREF(tmp_import_name_from_973);
        if (tmp_assign_source_1142 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1267;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UOLIE, tmp_assign_source_1142);
    }
    {
        PyObject *tmp_assign_source_1143;
        PyObject *tmp_name_name_651;
        PyObject *tmp_globals_name_651;
        PyObject *tmp_locals_name_651;
        PyObject *tmp_fromlist_name_651;
        PyObject *tmp_level_name_651;
        tmp_name_name_651 = const_str_plain_uplynk;
        tmp_globals_name_651 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_651 = Py_None;
        tmp_fromlist_name_651 = const_tuple_str_plain_UplynkIE_str_plain_UplynkPreplayIE_tuple;
        tmp_level_name_651 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1268;
        tmp_assign_source_1143 = IMPORT_MODULE5(tmp_name_name_651, tmp_globals_name_651, tmp_locals_name_651, tmp_fromlist_name_651, tmp_level_name_651);
        if (tmp_assign_source_1143 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1268;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_167__module == NULL);
        tmp_import_from_167__module = tmp_assign_source_1143;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1144;
        PyObject *tmp_import_name_from_974;
        CHECK_OBJECT(tmp_import_from_167__module);
        tmp_import_name_from_974 = tmp_import_from_167__module;
        if (PyModule_Check(tmp_import_name_from_974)) {
           tmp_assign_source_1144 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_974,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UplynkIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1144 = IMPORT_NAME(tmp_import_name_from_974, const_str_plain_UplynkIE);
        }

        if (tmp_assign_source_1144 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1268;

            goto try_except_handler_167;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UplynkIE, tmp_assign_source_1144);
    }
    {
        PyObject *tmp_assign_source_1145;
        PyObject *tmp_import_name_from_975;
        CHECK_OBJECT(tmp_import_from_167__module);
        tmp_import_name_from_975 = tmp_import_from_167__module;
        if (PyModule_Check(tmp_import_name_from_975)) {
           tmp_assign_source_1145 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_975,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UplynkPreplayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1145 = IMPORT_NAME(tmp_import_name_from_975, const_str_plain_UplynkPreplayIE);
        }

        if (tmp_assign_source_1145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1268;

            goto try_except_handler_167;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UplynkPreplayIE, tmp_assign_source_1145);
    }
    goto try_end_167;
    // Exception handler code:
    try_except_handler_167:;
    exception_keeper_type_167 = exception_type;
    exception_keeper_value_167 = exception_value;
    exception_keeper_tb_167 = exception_tb;
    exception_keeper_lineno_167 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_167__module);
    Py_DECREF(tmp_import_from_167__module);
    tmp_import_from_167__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_167;
    exception_value = exception_keeper_value_167;
    exception_tb = exception_keeper_tb_167;
    exception_lineno = exception_keeper_lineno_167;

    goto frame_exception_exit_1;
    // End of try:
    try_end_167:;
    CHECK_OBJECT(tmp_import_from_167__module);
    Py_DECREF(tmp_import_from_167__module);
    tmp_import_from_167__module = NULL;

    {
        PyObject *tmp_assign_source_1146;
        PyObject *tmp_import_name_from_976;
        PyObject *tmp_name_name_652;
        PyObject *tmp_globals_name_652;
        PyObject *tmp_locals_name_652;
        PyObject *tmp_fromlist_name_652;
        PyObject *tmp_level_name_652;
        tmp_name_name_652 = const_str_plain_urort;
        tmp_globals_name_652 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_652 = Py_None;
        tmp_fromlist_name_652 = const_tuple_str_plain_UrortIE_tuple;
        tmp_level_name_652 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1272;
        tmp_import_name_from_976 = IMPORT_MODULE5(tmp_name_name_652, tmp_globals_name_652, tmp_locals_name_652, tmp_fromlist_name_652, tmp_level_name_652);
        if (tmp_import_name_from_976 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1272;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_976)) {
           tmp_assign_source_1146 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_976,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UrortIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1146 = IMPORT_NAME(tmp_import_name_from_976, const_str_plain_UrortIE);
        }

        Py_DECREF(tmp_import_name_from_976);
        if (tmp_assign_source_1146 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1272;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UrortIE, tmp_assign_source_1146);
    }
    {
        PyObject *tmp_assign_source_1147;
        PyObject *tmp_import_name_from_977;
        PyObject *tmp_name_name_653;
        PyObject *tmp_globals_name_653;
        PyObject *tmp_locals_name_653;
        PyObject *tmp_fromlist_name_653;
        PyObject *tmp_level_name_653;
        tmp_name_name_653 = const_str_plain_urplay;
        tmp_globals_name_653 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_653 = Py_None;
        tmp_fromlist_name_653 = const_tuple_str_plain_URPlayIE_tuple;
        tmp_level_name_653 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1273;
        tmp_import_name_from_977 = IMPORT_MODULE5(tmp_name_name_653, tmp_globals_name_653, tmp_locals_name_653, tmp_fromlist_name_653, tmp_level_name_653);
        if (tmp_import_name_from_977 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1273;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_977)) {
           tmp_assign_source_1147 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_977,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_URPlayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1147 = IMPORT_NAME(tmp_import_name_from_977, const_str_plain_URPlayIE);
        }

        Py_DECREF(tmp_import_name_from_977);
        if (tmp_assign_source_1147 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1273;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_URPlayIE, tmp_assign_source_1147);
    }
    {
        PyObject *tmp_assign_source_1148;
        PyObject *tmp_import_name_from_978;
        PyObject *tmp_name_name_654;
        PyObject *tmp_globals_name_654;
        PyObject *tmp_locals_name_654;
        PyObject *tmp_fromlist_name_654;
        PyObject *tmp_level_name_654;
        tmp_name_name_654 = const_str_plain_usanetwork;
        tmp_globals_name_654 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_654 = Py_None;
        tmp_fromlist_name_654 = const_tuple_str_plain_USANetworkIE_tuple;
        tmp_level_name_654 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1274;
        tmp_import_name_from_978 = IMPORT_MODULE5(tmp_name_name_654, tmp_globals_name_654, tmp_locals_name_654, tmp_fromlist_name_654, tmp_level_name_654);
        if (tmp_import_name_from_978 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1274;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_978)) {
           tmp_assign_source_1148 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_978,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_USANetworkIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1148 = IMPORT_NAME(tmp_import_name_from_978, const_str_plain_USANetworkIE);
        }

        Py_DECREF(tmp_import_name_from_978);
        if (tmp_assign_source_1148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1274;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_USANetworkIE, tmp_assign_source_1148);
    }
    {
        PyObject *tmp_assign_source_1149;
        PyObject *tmp_import_name_from_979;
        PyObject *tmp_name_name_655;
        PyObject *tmp_globals_name_655;
        PyObject *tmp_locals_name_655;
        PyObject *tmp_fromlist_name_655;
        PyObject *tmp_level_name_655;
        tmp_name_name_655 = const_str_plain_usatoday;
        tmp_globals_name_655 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_655 = Py_None;
        tmp_fromlist_name_655 = const_tuple_str_plain_USATodayIE_tuple;
        tmp_level_name_655 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1275;
        tmp_import_name_from_979 = IMPORT_MODULE5(tmp_name_name_655, tmp_globals_name_655, tmp_locals_name_655, tmp_fromlist_name_655, tmp_level_name_655);
        if (tmp_import_name_from_979 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1275;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_979)) {
           tmp_assign_source_1149 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_979,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_USATodayIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1149 = IMPORT_NAME(tmp_import_name_from_979, const_str_plain_USATodayIE);
        }

        Py_DECREF(tmp_import_name_from_979);
        if (tmp_assign_source_1149 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1275;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_USATodayIE, tmp_assign_source_1149);
    }
    {
        PyObject *tmp_assign_source_1150;
        PyObject *tmp_name_name_656;
        PyObject *tmp_globals_name_656;
        PyObject *tmp_locals_name_656;
        PyObject *tmp_fromlist_name_656;
        PyObject *tmp_level_name_656;
        tmp_name_name_656 = const_str_plain_ustream;
        tmp_globals_name_656 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_656 = Py_None;
        tmp_fromlist_name_656 = const_tuple_str_plain_UstreamIE_str_plain_UstreamChannelIE_tuple;
        tmp_level_name_656 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1276;
        tmp_assign_source_1150 = IMPORT_MODULE5(tmp_name_name_656, tmp_globals_name_656, tmp_locals_name_656, tmp_fromlist_name_656, tmp_level_name_656);
        if (tmp_assign_source_1150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1276;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_168__module == NULL);
        tmp_import_from_168__module = tmp_assign_source_1150;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1151;
        PyObject *tmp_import_name_from_980;
        CHECK_OBJECT(tmp_import_from_168__module);
        tmp_import_name_from_980 = tmp_import_from_168__module;
        if (PyModule_Check(tmp_import_name_from_980)) {
           tmp_assign_source_1151 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_980,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UstreamIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1151 = IMPORT_NAME(tmp_import_name_from_980, const_str_plain_UstreamIE);
        }

        if (tmp_assign_source_1151 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1276;

            goto try_except_handler_168;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UstreamIE, tmp_assign_source_1151);
    }
    {
        PyObject *tmp_assign_source_1152;
        PyObject *tmp_import_name_from_981;
        CHECK_OBJECT(tmp_import_from_168__module);
        tmp_import_name_from_981 = tmp_import_from_168__module;
        if (PyModule_Check(tmp_import_name_from_981)) {
           tmp_assign_source_1152 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_981,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UstreamChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1152 = IMPORT_NAME(tmp_import_name_from_981, const_str_plain_UstreamChannelIE);
        }

        if (tmp_assign_source_1152 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1276;

            goto try_except_handler_168;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UstreamChannelIE, tmp_assign_source_1152);
    }
    goto try_end_168;
    // Exception handler code:
    try_except_handler_168:;
    exception_keeper_type_168 = exception_type;
    exception_keeper_value_168 = exception_value;
    exception_keeper_tb_168 = exception_tb;
    exception_keeper_lineno_168 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_168__module);
    Py_DECREF(tmp_import_from_168__module);
    tmp_import_from_168__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_168;
    exception_value = exception_keeper_value_168;
    exception_tb = exception_keeper_tb_168;
    exception_lineno = exception_keeper_lineno_168;

    goto frame_exception_exit_1;
    // End of try:
    try_end_168:;
    CHECK_OBJECT(tmp_import_from_168__module);
    Py_DECREF(tmp_import_from_168__module);
    tmp_import_from_168__module = NULL;

    {
        PyObject *tmp_assign_source_1153;
        PyObject *tmp_name_name_657;
        PyObject *tmp_globals_name_657;
        PyObject *tmp_locals_name_657;
        PyObject *tmp_fromlist_name_657;
        PyObject *tmp_level_name_657;
        tmp_name_name_657 = const_str_plain_ustudio;
        tmp_globals_name_657 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_657 = Py_None;
        tmp_fromlist_name_657 = const_tuple_str_plain_UstudioIE_str_plain_UstudioEmbedIE_tuple;
        tmp_level_name_657 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1277;
        tmp_assign_source_1153 = IMPORT_MODULE5(tmp_name_name_657, tmp_globals_name_657, tmp_locals_name_657, tmp_fromlist_name_657, tmp_level_name_657);
        if (tmp_assign_source_1153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1277;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_169__module == NULL);
        tmp_import_from_169__module = tmp_assign_source_1153;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1154;
        PyObject *tmp_import_name_from_982;
        CHECK_OBJECT(tmp_import_from_169__module);
        tmp_import_name_from_982 = tmp_import_from_169__module;
        if (PyModule_Check(tmp_import_name_from_982)) {
           tmp_assign_source_1154 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_982,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UstudioIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1154 = IMPORT_NAME(tmp_import_name_from_982, const_str_plain_UstudioIE);
        }

        if (tmp_assign_source_1154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1277;

            goto try_except_handler_169;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UstudioIE, tmp_assign_source_1154);
    }
    {
        PyObject *tmp_assign_source_1155;
        PyObject *tmp_import_name_from_983;
        CHECK_OBJECT(tmp_import_from_169__module);
        tmp_import_name_from_983 = tmp_import_from_169__module;
        if (PyModule_Check(tmp_import_name_from_983)) {
           tmp_assign_source_1155 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_983,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_UstudioEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1155 = IMPORT_NAME(tmp_import_name_from_983, const_str_plain_UstudioEmbedIE);
        }

        if (tmp_assign_source_1155 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1277;

            goto try_except_handler_169;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_UstudioEmbedIE, tmp_assign_source_1155);
    }
    goto try_end_169;
    // Exception handler code:
    try_except_handler_169:;
    exception_keeper_type_169 = exception_type;
    exception_keeper_value_169 = exception_value;
    exception_keeper_tb_169 = exception_tb;
    exception_keeper_lineno_169 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_169__module);
    Py_DECREF(tmp_import_from_169__module);
    tmp_import_from_169__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_169;
    exception_value = exception_keeper_value_169;
    exception_tb = exception_keeper_tb_169;
    exception_lineno = exception_keeper_lineno_169;

    goto frame_exception_exit_1;
    // End of try:
    try_end_169:;
    CHECK_OBJECT(tmp_import_from_169__module);
    Py_DECREF(tmp_import_from_169__module);
    tmp_import_from_169__module = NULL;

    {
        PyObject *tmp_assign_source_1156;
        PyObject *tmp_import_name_from_984;
        PyObject *tmp_name_name_658;
        PyObject *tmp_globals_name_658;
        PyObject *tmp_locals_name_658;
        PyObject *tmp_fromlist_name_658;
        PyObject *tmp_level_name_658;
        tmp_name_name_658 = const_str_plain_varzesh3;
        tmp_globals_name_658 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_658 = Py_None;
        tmp_fromlist_name_658 = const_tuple_str_plain_Varzesh3IE_tuple;
        tmp_level_name_658 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1281;
        tmp_import_name_from_984 = IMPORT_MODULE5(tmp_name_name_658, tmp_globals_name_658, tmp_locals_name_658, tmp_fromlist_name_658, tmp_level_name_658);
        if (tmp_import_name_from_984 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1281;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_984)) {
           tmp_assign_source_1156 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_984,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Varzesh3IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1156 = IMPORT_NAME(tmp_import_name_from_984, const_str_plain_Varzesh3IE);
        }

        Py_DECREF(tmp_import_name_from_984);
        if (tmp_assign_source_1156 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1281;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Varzesh3IE, tmp_assign_source_1156);
    }
    {
        PyObject *tmp_assign_source_1157;
        PyObject *tmp_import_name_from_985;
        PyObject *tmp_name_name_659;
        PyObject *tmp_globals_name_659;
        PyObject *tmp_locals_name_659;
        PyObject *tmp_fromlist_name_659;
        PyObject *tmp_level_name_659;
        tmp_name_name_659 = const_str_plain_vbox7;
        tmp_globals_name_659 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_659 = Py_None;
        tmp_fromlist_name_659 = const_tuple_str_plain_Vbox7IE_tuple;
        tmp_level_name_659 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1282;
        tmp_import_name_from_985 = IMPORT_MODULE5(tmp_name_name_659, tmp_globals_name_659, tmp_locals_name_659, tmp_fromlist_name_659, tmp_level_name_659);
        if (tmp_import_name_from_985 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1282;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_985)) {
           tmp_assign_source_1157 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_985,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Vbox7IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1157 = IMPORT_NAME(tmp_import_name_from_985, const_str_plain_Vbox7IE);
        }

        Py_DECREF(tmp_import_name_from_985);
        if (tmp_assign_source_1157 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1282;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Vbox7IE, tmp_assign_source_1157);
    }
    {
        PyObject *tmp_assign_source_1158;
        PyObject *tmp_import_name_from_986;
        PyObject *tmp_name_name_660;
        PyObject *tmp_globals_name_660;
        PyObject *tmp_locals_name_660;
        PyObject *tmp_fromlist_name_660;
        PyObject *tmp_level_name_660;
        tmp_name_name_660 = const_str_plain_veehd;
        tmp_globals_name_660 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_660 = Py_None;
        tmp_fromlist_name_660 = const_tuple_str_plain_VeeHDIE_tuple;
        tmp_level_name_660 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1283;
        tmp_import_name_from_986 = IMPORT_MODULE5(tmp_name_name_660, tmp_globals_name_660, tmp_locals_name_660, tmp_fromlist_name_660, tmp_level_name_660);
        if (tmp_import_name_from_986 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1283;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_986)) {
           tmp_assign_source_1158 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_986,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VeeHDIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1158 = IMPORT_NAME(tmp_import_name_from_986, const_str_plain_VeeHDIE);
        }

        Py_DECREF(tmp_import_name_from_986);
        if (tmp_assign_source_1158 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1283;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VeeHDIE, tmp_assign_source_1158);
    }
    {
        PyObject *tmp_assign_source_1159;
        PyObject *tmp_import_name_from_987;
        PyObject *tmp_name_name_661;
        PyObject *tmp_globals_name_661;
        PyObject *tmp_locals_name_661;
        PyObject *tmp_fromlist_name_661;
        PyObject *tmp_level_name_661;
        tmp_name_name_661 = const_str_plain_veoh;
        tmp_globals_name_661 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_661 = Py_None;
        tmp_fromlist_name_661 = const_tuple_str_plain_VeohIE_tuple;
        tmp_level_name_661 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1284;
        tmp_import_name_from_987 = IMPORT_MODULE5(tmp_name_name_661, tmp_globals_name_661, tmp_locals_name_661, tmp_fromlist_name_661, tmp_level_name_661);
        if (tmp_import_name_from_987 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1284;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_987)) {
           tmp_assign_source_1159 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_987,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VeohIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1159 = IMPORT_NAME(tmp_import_name_from_987, const_str_plain_VeohIE);
        }

        Py_DECREF(tmp_import_name_from_987);
        if (tmp_assign_source_1159 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1284;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VeohIE, tmp_assign_source_1159);
    }
    {
        PyObject *tmp_assign_source_1160;
        PyObject *tmp_import_name_from_988;
        PyObject *tmp_name_name_662;
        PyObject *tmp_globals_name_662;
        PyObject *tmp_locals_name_662;
        PyObject *tmp_fromlist_name_662;
        PyObject *tmp_level_name_662;
        tmp_name_name_662 = const_str_plain_vesti;
        tmp_globals_name_662 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_662 = Py_None;
        tmp_fromlist_name_662 = const_tuple_str_plain_VestiIE_tuple;
        tmp_level_name_662 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1285;
        tmp_import_name_from_988 = IMPORT_MODULE5(tmp_name_name_662, tmp_globals_name_662, tmp_locals_name_662, tmp_fromlist_name_662, tmp_level_name_662);
        if (tmp_import_name_from_988 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1285;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_988)) {
           tmp_assign_source_1160 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_988,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VestiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1160 = IMPORT_NAME(tmp_import_name_from_988, const_str_plain_VestiIE);
        }

        Py_DECREF(tmp_import_name_from_988);
        if (tmp_assign_source_1160 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1285;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VestiIE, tmp_assign_source_1160);
    }
    {
        PyObject *tmp_assign_source_1161;
        PyObject *tmp_name_name_663;
        PyObject *tmp_globals_name_663;
        PyObject *tmp_locals_name_663;
        PyObject *tmp_fromlist_name_663;
        PyObject *tmp_level_name_663;
        tmp_name_name_663 = const_str_plain_vevo;
        tmp_globals_name_663 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_663 = Py_None;
        tmp_fromlist_name_663 = const_tuple_str_plain_VevoIE_str_plain_VevoPlaylistIE_tuple;
        tmp_level_name_663 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1286;
        tmp_assign_source_1161 = IMPORT_MODULE5(tmp_name_name_663, tmp_globals_name_663, tmp_locals_name_663, tmp_fromlist_name_663, tmp_level_name_663);
        if (tmp_assign_source_1161 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1286;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_170__module == NULL);
        tmp_import_from_170__module = tmp_assign_source_1161;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1162;
        PyObject *tmp_import_name_from_989;
        CHECK_OBJECT(tmp_import_from_170__module);
        tmp_import_name_from_989 = tmp_import_from_170__module;
        if (PyModule_Check(tmp_import_name_from_989)) {
           tmp_assign_source_1162 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_989,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VevoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1162 = IMPORT_NAME(tmp_import_name_from_989, const_str_plain_VevoIE);
        }

        if (tmp_assign_source_1162 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1286;

            goto try_except_handler_170;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VevoIE, tmp_assign_source_1162);
    }
    {
        PyObject *tmp_assign_source_1163;
        PyObject *tmp_import_name_from_990;
        CHECK_OBJECT(tmp_import_from_170__module);
        tmp_import_name_from_990 = tmp_import_from_170__module;
        if (PyModule_Check(tmp_import_name_from_990)) {
           tmp_assign_source_1163 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_990,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VevoPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1163 = IMPORT_NAME(tmp_import_name_from_990, const_str_plain_VevoPlaylistIE);
        }

        if (tmp_assign_source_1163 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1286;

            goto try_except_handler_170;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VevoPlaylistIE, tmp_assign_source_1163);
    }
    goto try_end_170;
    // Exception handler code:
    try_except_handler_170:;
    exception_keeper_type_170 = exception_type;
    exception_keeper_value_170 = exception_value;
    exception_keeper_tb_170 = exception_tb;
    exception_keeper_lineno_170 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_170__module);
    Py_DECREF(tmp_import_from_170__module);
    tmp_import_from_170__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_170;
    exception_value = exception_keeper_value_170;
    exception_tb = exception_keeper_tb_170;
    exception_lineno = exception_keeper_lineno_170;

    goto frame_exception_exit_1;
    // End of try:
    try_end_170:;
    CHECK_OBJECT(tmp_import_from_170__module);
    Py_DECREF(tmp_import_from_170__module);
    tmp_import_from_170__module = NULL;

    {
        PyObject *tmp_assign_source_1164;
        PyObject *tmp_name_name_664;
        PyObject *tmp_globals_name_664;
        PyObject *tmp_locals_name_664;
        PyObject *tmp_fromlist_name_664;
        PyObject *tmp_level_name_664;
        tmp_name_name_664 = const_str_plain_vgtv;
        tmp_globals_name_664 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_664 = Py_None;
        tmp_fromlist_name_664 = const_tuple_2081a921fb965b7ed0955c1edb72f220_tuple;
        tmp_level_name_664 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1290;
        tmp_assign_source_1164 = IMPORT_MODULE5(tmp_name_name_664, tmp_globals_name_664, tmp_locals_name_664, tmp_fromlist_name_664, tmp_level_name_664);
        if (tmp_assign_source_1164 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1290;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_171__module == NULL);
        tmp_import_from_171__module = tmp_assign_source_1164;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1165;
        PyObject *tmp_import_name_from_991;
        CHECK_OBJECT(tmp_import_from_171__module);
        tmp_import_name_from_991 = tmp_import_from_171__module;
        if (PyModule_Check(tmp_import_name_from_991)) {
           tmp_assign_source_1165 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_991,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BTArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1165 = IMPORT_NAME(tmp_import_name_from_991, const_str_plain_BTArticleIE);
        }

        if (tmp_assign_source_1165 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1290;

            goto try_except_handler_171;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BTArticleIE, tmp_assign_source_1165);
    }
    {
        PyObject *tmp_assign_source_1166;
        PyObject *tmp_import_name_from_992;
        CHECK_OBJECT(tmp_import_from_171__module);
        tmp_import_name_from_992 = tmp_import_from_171__module;
        if (PyModule_Check(tmp_import_name_from_992)) {
           tmp_assign_source_1166 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_992,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BTVestlendingenIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1166 = IMPORT_NAME(tmp_import_name_from_992, const_str_plain_BTVestlendingenIE);
        }

        if (tmp_assign_source_1166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1290;

            goto try_except_handler_171;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BTVestlendingenIE, tmp_assign_source_1166);
    }
    {
        PyObject *tmp_assign_source_1167;
        PyObject *tmp_import_name_from_993;
        CHECK_OBJECT(tmp_import_from_171__module);
        tmp_import_name_from_993 = tmp_import_from_171__module;
        if (PyModule_Check(tmp_import_name_from_993)) {
           tmp_assign_source_1167 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_993,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VGTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1167 = IMPORT_NAME(tmp_import_name_from_993, const_str_plain_VGTVIE);
        }

        if (tmp_assign_source_1167 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1290;

            goto try_except_handler_171;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VGTVIE, tmp_assign_source_1167);
    }
    goto try_end_171;
    // Exception handler code:
    try_except_handler_171:;
    exception_keeper_type_171 = exception_type;
    exception_keeper_value_171 = exception_value;
    exception_keeper_tb_171 = exception_tb;
    exception_keeper_lineno_171 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_171__module);
    Py_DECREF(tmp_import_from_171__module);
    tmp_import_from_171__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_171;
    exception_value = exception_keeper_value_171;
    exception_tb = exception_keeper_tb_171;
    exception_lineno = exception_keeper_lineno_171;

    goto frame_exception_exit_1;
    // End of try:
    try_end_171:;
    CHECK_OBJECT(tmp_import_from_171__module);
    Py_DECREF(tmp_import_from_171__module);
    tmp_import_from_171__module = NULL;

    {
        PyObject *tmp_assign_source_1168;
        PyObject *tmp_import_name_from_994;
        PyObject *tmp_name_name_665;
        PyObject *tmp_globals_name_665;
        PyObject *tmp_locals_name_665;
        PyObject *tmp_fromlist_name_665;
        PyObject *tmp_level_name_665;
        tmp_name_name_665 = const_str_plain_vh1;
        tmp_globals_name_665 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_665 = Py_None;
        tmp_fromlist_name_665 = const_tuple_str_plain_VH1IE_tuple;
        tmp_level_name_665 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1295;
        tmp_import_name_from_994 = IMPORT_MODULE5(tmp_name_name_665, tmp_globals_name_665, tmp_locals_name_665, tmp_fromlist_name_665, tmp_level_name_665);
        if (tmp_import_name_from_994 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1295;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_994)) {
           tmp_assign_source_1168 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_994,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VH1IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1168 = IMPORT_NAME(tmp_import_name_from_994, const_str_plain_VH1IE);
        }

        Py_DECREF(tmp_import_name_from_994);
        if (tmp_assign_source_1168 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1295;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VH1IE, tmp_assign_source_1168);
    }
    {
        PyObject *tmp_assign_source_1169;
        PyObject *tmp_name_name_666;
        PyObject *tmp_globals_name_666;
        PyObject *tmp_locals_name_666;
        PyObject *tmp_fromlist_name_666;
        PyObject *tmp_level_name_666;
        tmp_name_name_666 = const_str_plain_vice;
        tmp_globals_name_666 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_666 = Py_None;
        tmp_fromlist_name_666 = const_tuple_fad45eff24f2333f63e9bfaed53c32e6_tuple;
        tmp_level_name_666 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1296;
        tmp_assign_source_1169 = IMPORT_MODULE5(tmp_name_name_666, tmp_globals_name_666, tmp_locals_name_666, tmp_fromlist_name_666, tmp_level_name_666);
        if (tmp_assign_source_1169 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1296;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_172__module == NULL);
        tmp_import_from_172__module = tmp_assign_source_1169;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1170;
        PyObject *tmp_import_name_from_995;
        CHECK_OBJECT(tmp_import_from_172__module);
        tmp_import_name_from_995 = tmp_import_from_172__module;
        if (PyModule_Check(tmp_import_name_from_995)) {
           tmp_assign_source_1170 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_995,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ViceIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1170 = IMPORT_NAME(tmp_import_name_from_995, const_str_plain_ViceIE);
        }

        if (tmp_assign_source_1170 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1296;

            goto try_except_handler_172;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ViceIE, tmp_assign_source_1170);
    }
    {
        PyObject *tmp_assign_source_1171;
        PyObject *tmp_import_name_from_996;
        CHECK_OBJECT(tmp_import_from_172__module);
        tmp_import_name_from_996 = tmp_import_from_172__module;
        if (PyModule_Check(tmp_import_name_from_996)) {
           tmp_assign_source_1171 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_996,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ViceArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1171 = IMPORT_NAME(tmp_import_name_from_996, const_str_plain_ViceArticleIE);
        }

        if (tmp_assign_source_1171 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1296;

            goto try_except_handler_172;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ViceArticleIE, tmp_assign_source_1171);
    }
    {
        PyObject *tmp_assign_source_1172;
        PyObject *tmp_import_name_from_997;
        CHECK_OBJECT(tmp_import_from_172__module);
        tmp_import_name_from_997 = tmp_import_from_172__module;
        if (PyModule_Check(tmp_import_name_from_997)) {
           tmp_assign_source_1172 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_997,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ViceShowIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1172 = IMPORT_NAME(tmp_import_name_from_997, const_str_plain_ViceShowIE);
        }

        if (tmp_assign_source_1172 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1296;

            goto try_except_handler_172;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ViceShowIE, tmp_assign_source_1172);
    }
    goto try_end_172;
    // Exception handler code:
    try_except_handler_172:;
    exception_keeper_type_172 = exception_type;
    exception_keeper_value_172 = exception_value;
    exception_keeper_tb_172 = exception_tb;
    exception_keeper_lineno_172 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_172__module);
    Py_DECREF(tmp_import_from_172__module);
    tmp_import_from_172__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_172;
    exception_value = exception_keeper_value_172;
    exception_tb = exception_keeper_tb_172;
    exception_lineno = exception_keeper_lineno_172;

    goto frame_exception_exit_1;
    // End of try:
    try_end_172:;
    CHECK_OBJECT(tmp_import_from_172__module);
    Py_DECREF(tmp_import_from_172__module);
    tmp_import_from_172__module = NULL;

    {
        PyObject *tmp_assign_source_1173;
        PyObject *tmp_import_name_from_998;
        PyObject *tmp_name_name_667;
        PyObject *tmp_globals_name_667;
        PyObject *tmp_locals_name_667;
        PyObject *tmp_fromlist_name_667;
        PyObject *tmp_level_name_667;
        tmp_name_name_667 = const_str_plain_vidbit;
        tmp_globals_name_667 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_667 = Py_None;
        tmp_fromlist_name_667 = const_tuple_str_plain_VidbitIE_tuple;
        tmp_level_name_667 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1301;
        tmp_import_name_from_998 = IMPORT_MODULE5(tmp_name_name_667, tmp_globals_name_667, tmp_locals_name_667, tmp_fromlist_name_667, tmp_level_name_667);
        if (tmp_import_name_from_998 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1301;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_998)) {
           tmp_assign_source_1173 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_998,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VidbitIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1173 = IMPORT_NAME(tmp_import_name_from_998, const_str_plain_VidbitIE);
        }

        Py_DECREF(tmp_import_name_from_998);
        if (tmp_assign_source_1173 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1301;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VidbitIE, tmp_assign_source_1173);
    }
    {
        PyObject *tmp_assign_source_1174;
        PyObject *tmp_import_name_from_999;
        PyObject *tmp_name_name_668;
        PyObject *tmp_globals_name_668;
        PyObject *tmp_locals_name_668;
        PyObject *tmp_fromlist_name_668;
        PyObject *tmp_level_name_668;
        tmp_name_name_668 = const_str_plain_viddler;
        tmp_globals_name_668 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_668 = Py_None;
        tmp_fromlist_name_668 = const_tuple_str_plain_ViddlerIE_tuple;
        tmp_level_name_668 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1302;
        tmp_import_name_from_999 = IMPORT_MODULE5(tmp_name_name_668, tmp_globals_name_668, tmp_locals_name_668, tmp_fromlist_name_668, tmp_level_name_668);
        if (tmp_import_name_from_999 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1302;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_999)) {
           tmp_assign_source_1174 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_999,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ViddlerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1174 = IMPORT_NAME(tmp_import_name_from_999, const_str_plain_ViddlerIE);
        }

        Py_DECREF(tmp_import_name_from_999);
        if (tmp_assign_source_1174 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1302;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ViddlerIE, tmp_assign_source_1174);
    }
    {
        PyObject *tmp_assign_source_1175;
        PyObject *tmp_import_name_from_1000;
        PyObject *tmp_name_name_669;
        PyObject *tmp_globals_name_669;
        PyObject *tmp_locals_name_669;
        PyObject *tmp_fromlist_name_669;
        PyObject *tmp_level_name_669;
        tmp_name_name_669 = const_str_plain_videa;
        tmp_globals_name_669 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_669 = Py_None;
        tmp_fromlist_name_669 = const_tuple_str_plain_VideaIE_tuple;
        tmp_level_name_669 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1303;
        tmp_import_name_from_1000 = IMPORT_MODULE5(tmp_name_name_669, tmp_globals_name_669, tmp_locals_name_669, tmp_fromlist_name_669, tmp_level_name_669);
        if (tmp_import_name_from_1000 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1303;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1000)) {
           tmp_assign_source_1175 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1000,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VideaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1175 = IMPORT_NAME(tmp_import_name_from_1000, const_str_plain_VideaIE);
        }

        Py_DECREF(tmp_import_name_from_1000);
        if (tmp_assign_source_1175 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1303;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VideaIE, tmp_assign_source_1175);
    }
    {
        PyObject *tmp_assign_source_1176;
        PyObject *tmp_import_name_from_1001;
        PyObject *tmp_name_name_670;
        PyObject *tmp_globals_name_670;
        PyObject *tmp_locals_name_670;
        PyObject *tmp_fromlist_name_670;
        PyObject *tmp_level_name_670;
        tmp_name_name_670 = const_str_plain_videodetective;
        tmp_globals_name_670 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_670 = Py_None;
        tmp_fromlist_name_670 = const_tuple_str_plain_VideoDetectiveIE_tuple;
        tmp_level_name_670 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1304;
        tmp_import_name_from_1001 = IMPORT_MODULE5(tmp_name_name_670, tmp_globals_name_670, tmp_locals_name_670, tmp_fromlist_name_670, tmp_level_name_670);
        if (tmp_import_name_from_1001 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1304;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1001)) {
           tmp_assign_source_1176 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1001,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VideoDetectiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1176 = IMPORT_NAME(tmp_import_name_from_1001, const_str_plain_VideoDetectiveIE);
        }

        Py_DECREF(tmp_import_name_from_1001);
        if (tmp_assign_source_1176 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1304;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VideoDetectiveIE, tmp_assign_source_1176);
    }
    {
        PyObject *tmp_assign_source_1177;
        PyObject *tmp_import_name_from_1002;
        PyObject *tmp_name_name_671;
        PyObject *tmp_globals_name_671;
        PyObject *tmp_locals_name_671;
        PyObject *tmp_fromlist_name_671;
        PyObject *tmp_level_name_671;
        tmp_name_name_671 = const_str_plain_videofyme;
        tmp_globals_name_671 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_671 = Py_None;
        tmp_fromlist_name_671 = const_tuple_str_plain_VideofyMeIE_tuple;
        tmp_level_name_671 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1305;
        tmp_import_name_from_1002 = IMPORT_MODULE5(tmp_name_name_671, tmp_globals_name_671, tmp_locals_name_671, tmp_fromlist_name_671, tmp_level_name_671);
        if (tmp_import_name_from_1002 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1305;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1002)) {
           tmp_assign_source_1177 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1002,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VideofyMeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1177 = IMPORT_NAME(tmp_import_name_from_1002, const_str_plain_VideofyMeIE);
        }

        Py_DECREF(tmp_import_name_from_1002);
        if (tmp_assign_source_1177 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1305;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VideofyMeIE, tmp_assign_source_1177);
    }
    {
        PyObject *tmp_assign_source_1178;
        PyObject *tmp_name_name_672;
        PyObject *tmp_globals_name_672;
        PyObject *tmp_locals_name_672;
        PyObject *tmp_fromlist_name_672;
        PyObject *tmp_level_name_672;
        tmp_name_name_672 = const_str_plain_videomore;
        tmp_globals_name_672 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_672 = Py_None;
        tmp_fromlist_name_672 = const_tuple_f480a63d8cd64d6438a62f2432c0cf37_tuple;
        tmp_level_name_672 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1306;
        tmp_assign_source_1178 = IMPORT_MODULE5(tmp_name_name_672, tmp_globals_name_672, tmp_locals_name_672, tmp_fromlist_name_672, tmp_level_name_672);
        if (tmp_assign_source_1178 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1306;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_173__module == NULL);
        tmp_import_from_173__module = tmp_assign_source_1178;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1179;
        PyObject *tmp_import_name_from_1003;
        CHECK_OBJECT(tmp_import_from_173__module);
        tmp_import_name_from_1003 = tmp_import_from_173__module;
        if (PyModule_Check(tmp_import_name_from_1003)) {
           tmp_assign_source_1179 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1003,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VideomoreIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1179 = IMPORT_NAME(tmp_import_name_from_1003, const_str_plain_VideomoreIE);
        }

        if (tmp_assign_source_1179 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1306;

            goto try_except_handler_173;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VideomoreIE, tmp_assign_source_1179);
    }
    {
        PyObject *tmp_assign_source_1180;
        PyObject *tmp_import_name_from_1004;
        CHECK_OBJECT(tmp_import_from_173__module);
        tmp_import_name_from_1004 = tmp_import_from_173__module;
        if (PyModule_Check(tmp_import_name_from_1004)) {
           tmp_assign_source_1180 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1004,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VideomoreVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1180 = IMPORT_NAME(tmp_import_name_from_1004, const_str_plain_VideomoreVideoIE);
        }

        if (tmp_assign_source_1180 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1306;

            goto try_except_handler_173;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VideomoreVideoIE, tmp_assign_source_1180);
    }
    {
        PyObject *tmp_assign_source_1181;
        PyObject *tmp_import_name_from_1005;
        CHECK_OBJECT(tmp_import_from_173__module);
        tmp_import_name_from_1005 = tmp_import_from_173__module;
        if (PyModule_Check(tmp_import_name_from_1005)) {
           tmp_assign_source_1181 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1005,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VideomoreSeasonIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1181 = IMPORT_NAME(tmp_import_name_from_1005, const_str_plain_VideomoreSeasonIE);
        }

        if (tmp_assign_source_1181 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1306;

            goto try_except_handler_173;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VideomoreSeasonIE, tmp_assign_source_1181);
    }
    goto try_end_173;
    // Exception handler code:
    try_except_handler_173:;
    exception_keeper_type_173 = exception_type;
    exception_keeper_value_173 = exception_value;
    exception_keeper_tb_173 = exception_tb;
    exception_keeper_lineno_173 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_173__module);
    Py_DECREF(tmp_import_from_173__module);
    tmp_import_from_173__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_173;
    exception_value = exception_keeper_value_173;
    exception_tb = exception_keeper_tb_173;
    exception_lineno = exception_keeper_lineno_173;

    goto frame_exception_exit_1;
    // End of try:
    try_end_173:;
    CHECK_OBJECT(tmp_import_from_173__module);
    Py_DECREF(tmp_import_from_173__module);
    tmp_import_from_173__module = NULL;

    {
        PyObject *tmp_assign_source_1182;
        PyObject *tmp_import_name_from_1006;
        PyObject *tmp_name_name_673;
        PyObject *tmp_globals_name_673;
        PyObject *tmp_locals_name_673;
        PyObject *tmp_fromlist_name_673;
        PyObject *tmp_level_name_673;
        tmp_name_name_673 = const_str_plain_videopress;
        tmp_globals_name_673 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_673 = Py_None;
        tmp_fromlist_name_673 = const_tuple_str_plain_VideoPressIE_tuple;
        tmp_level_name_673 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1311;
        tmp_import_name_from_1006 = IMPORT_MODULE5(tmp_name_name_673, tmp_globals_name_673, tmp_locals_name_673, tmp_fromlist_name_673, tmp_level_name_673);
        if (tmp_import_name_from_1006 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1311;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1006)) {
           tmp_assign_source_1182 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1006,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VideoPressIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1182 = IMPORT_NAME(tmp_import_name_from_1006, const_str_plain_VideoPressIE);
        }

        Py_DECREF(tmp_import_name_from_1006);
        if (tmp_assign_source_1182 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1311;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VideoPressIE, tmp_assign_source_1182);
    }
    {
        PyObject *tmp_assign_source_1183;
        PyObject *tmp_import_name_from_1007;
        PyObject *tmp_name_name_674;
        PyObject *tmp_globals_name_674;
        PyObject *tmp_locals_name_674;
        PyObject *tmp_fromlist_name_674;
        PyObject *tmp_level_name_674;
        tmp_name_name_674 = const_str_plain_vidio;
        tmp_globals_name_674 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_674 = Py_None;
        tmp_fromlist_name_674 = const_tuple_str_plain_VidioIE_tuple;
        tmp_level_name_674 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1312;
        tmp_import_name_from_1007 = IMPORT_MODULE5(tmp_name_name_674, tmp_globals_name_674, tmp_locals_name_674, tmp_fromlist_name_674, tmp_level_name_674);
        if (tmp_import_name_from_1007 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1312;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1007)) {
           tmp_assign_source_1183 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1007,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VidioIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1183 = IMPORT_NAME(tmp_import_name_from_1007, const_str_plain_VidioIE);
        }

        Py_DECREF(tmp_import_name_from_1007);
        if (tmp_assign_source_1183 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1312;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VidioIE, tmp_assign_source_1183);
    }
    {
        PyObject *tmp_assign_source_1184;
        PyObject *tmp_import_name_from_1008;
        PyObject *tmp_name_name_675;
        PyObject *tmp_globals_name_675;
        PyObject *tmp_locals_name_675;
        PyObject *tmp_fromlist_name_675;
        PyObject *tmp_level_name_675;
        tmp_name_name_675 = const_str_plain_vidlii;
        tmp_globals_name_675 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_675 = Py_None;
        tmp_fromlist_name_675 = const_tuple_str_plain_VidLiiIE_tuple;
        tmp_level_name_675 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1313;
        tmp_import_name_from_1008 = IMPORT_MODULE5(tmp_name_name_675, tmp_globals_name_675, tmp_locals_name_675, tmp_fromlist_name_675, tmp_level_name_675);
        if (tmp_import_name_from_1008 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1313;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1008)) {
           tmp_assign_source_1184 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1008,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VidLiiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1184 = IMPORT_NAME(tmp_import_name_from_1008, const_str_plain_VidLiiIE);
        }

        Py_DECREF(tmp_import_name_from_1008);
        if (tmp_assign_source_1184 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1313;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VidLiiIE, tmp_assign_source_1184);
    }
    {
        PyObject *tmp_assign_source_1185;
        PyObject *tmp_name_name_676;
        PyObject *tmp_globals_name_676;
        PyObject *tmp_locals_name_676;
        PyObject *tmp_fromlist_name_676;
        PyObject *tmp_level_name_676;
        tmp_name_name_676 = const_str_plain_vidme;
        tmp_globals_name_676 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_676 = Py_None;
        tmp_fromlist_name_676 = const_tuple_2e3741b1e123c8f08abadbbcf9e24e8b_tuple;
        tmp_level_name_676 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1314;
        tmp_assign_source_1185 = IMPORT_MODULE5(tmp_name_name_676, tmp_globals_name_676, tmp_locals_name_676, tmp_fromlist_name_676, tmp_level_name_676);
        if (tmp_assign_source_1185 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1314;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_174__module == NULL);
        tmp_import_from_174__module = tmp_assign_source_1185;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1186;
        PyObject *tmp_import_name_from_1009;
        CHECK_OBJECT(tmp_import_from_174__module);
        tmp_import_name_from_1009 = tmp_import_from_174__module;
        if (PyModule_Check(tmp_import_name_from_1009)) {
           tmp_assign_source_1186 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1009,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VidmeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1186 = IMPORT_NAME(tmp_import_name_from_1009, const_str_plain_VidmeIE);
        }

        if (tmp_assign_source_1186 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1314;

            goto try_except_handler_174;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VidmeIE, tmp_assign_source_1186);
    }
    {
        PyObject *tmp_assign_source_1187;
        PyObject *tmp_import_name_from_1010;
        CHECK_OBJECT(tmp_import_from_174__module);
        tmp_import_name_from_1010 = tmp_import_from_174__module;
        if (PyModule_Check(tmp_import_name_from_1010)) {
           tmp_assign_source_1187 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1010,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VidmeUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1187 = IMPORT_NAME(tmp_import_name_from_1010, const_str_plain_VidmeUserIE);
        }

        if (tmp_assign_source_1187 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1314;

            goto try_except_handler_174;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VidmeUserIE, tmp_assign_source_1187);
    }
    {
        PyObject *tmp_assign_source_1188;
        PyObject *tmp_import_name_from_1011;
        CHECK_OBJECT(tmp_import_from_174__module);
        tmp_import_name_from_1011 = tmp_import_from_174__module;
        if (PyModule_Check(tmp_import_name_from_1011)) {
           tmp_assign_source_1188 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1011,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VidmeUserLikesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1188 = IMPORT_NAME(tmp_import_name_from_1011, const_str_plain_VidmeUserLikesIE);
        }

        if (tmp_assign_source_1188 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1314;

            goto try_except_handler_174;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VidmeUserLikesIE, tmp_assign_source_1188);
    }
    goto try_end_174;
    // Exception handler code:
    try_except_handler_174:;
    exception_keeper_type_174 = exception_type;
    exception_keeper_value_174 = exception_value;
    exception_keeper_tb_174 = exception_tb;
    exception_keeper_lineno_174 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_174__module);
    Py_DECREF(tmp_import_from_174__module);
    tmp_import_from_174__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_174;
    exception_value = exception_keeper_value_174;
    exception_tb = exception_keeper_tb_174;
    exception_lineno = exception_keeper_lineno_174;

    goto frame_exception_exit_1;
    // End of try:
    try_end_174:;
    CHECK_OBJECT(tmp_import_from_174__module);
    Py_DECREF(tmp_import_from_174__module);
    tmp_import_from_174__module = NULL;

    {
        PyObject *tmp_assign_source_1189;
        PyObject *tmp_import_name_from_1012;
        PyObject *tmp_name_name_677;
        PyObject *tmp_globals_name_677;
        PyObject *tmp_locals_name_677;
        PyObject *tmp_fromlist_name_677;
        PyObject *tmp_level_name_677;
        tmp_name_name_677 = const_str_plain_vidzi;
        tmp_globals_name_677 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_677 = Py_None;
        tmp_fromlist_name_677 = const_tuple_str_plain_VidziIE_tuple;
        tmp_level_name_677 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1319;
        tmp_import_name_from_1012 = IMPORT_MODULE5(tmp_name_name_677, tmp_globals_name_677, tmp_locals_name_677, tmp_fromlist_name_677, tmp_level_name_677);
        if (tmp_import_name_from_1012 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1319;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1012)) {
           tmp_assign_source_1189 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1012,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VidziIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1189 = IMPORT_NAME(tmp_import_name_from_1012, const_str_plain_VidziIE);
        }

        Py_DECREF(tmp_import_name_from_1012);
        if (tmp_assign_source_1189 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1319;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VidziIE, tmp_assign_source_1189);
    }
    {
        PyObject *tmp_assign_source_1190;
        PyObject *tmp_name_name_678;
        PyObject *tmp_globals_name_678;
        PyObject *tmp_locals_name_678;
        PyObject *tmp_fromlist_name_678;
        PyObject *tmp_level_name_678;
        tmp_name_name_678 = const_str_plain_vier;
        tmp_globals_name_678 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_678 = Py_None;
        tmp_fromlist_name_678 = const_tuple_str_plain_VierIE_str_plain_VierVideosIE_tuple;
        tmp_level_name_678 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1320;
        tmp_assign_source_1190 = IMPORT_MODULE5(tmp_name_name_678, tmp_globals_name_678, tmp_locals_name_678, tmp_fromlist_name_678, tmp_level_name_678);
        if (tmp_assign_source_1190 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1320;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_175__module == NULL);
        tmp_import_from_175__module = tmp_assign_source_1190;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1191;
        PyObject *tmp_import_name_from_1013;
        CHECK_OBJECT(tmp_import_from_175__module);
        tmp_import_name_from_1013 = tmp_import_from_175__module;
        if (PyModule_Check(tmp_import_name_from_1013)) {
           tmp_assign_source_1191 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1013,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VierIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1191 = IMPORT_NAME(tmp_import_name_from_1013, const_str_plain_VierIE);
        }

        if (tmp_assign_source_1191 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1320;

            goto try_except_handler_175;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VierIE, tmp_assign_source_1191);
    }
    {
        PyObject *tmp_assign_source_1192;
        PyObject *tmp_import_name_from_1014;
        CHECK_OBJECT(tmp_import_from_175__module);
        tmp_import_name_from_1014 = tmp_import_from_175__module;
        if (PyModule_Check(tmp_import_name_from_1014)) {
           tmp_assign_source_1192 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1014,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VierVideosIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1192 = IMPORT_NAME(tmp_import_name_from_1014, const_str_plain_VierVideosIE);
        }

        if (tmp_assign_source_1192 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1320;

            goto try_except_handler_175;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VierVideosIE, tmp_assign_source_1192);
    }
    goto try_end_175;
    // Exception handler code:
    try_except_handler_175:;
    exception_keeper_type_175 = exception_type;
    exception_keeper_value_175 = exception_value;
    exception_keeper_tb_175 = exception_tb;
    exception_keeper_lineno_175 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_175__module);
    Py_DECREF(tmp_import_from_175__module);
    tmp_import_from_175__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_175;
    exception_value = exception_keeper_value_175;
    exception_tb = exception_keeper_tb_175;
    exception_lineno = exception_keeper_lineno_175;

    goto frame_exception_exit_1;
    // End of try:
    try_end_175:;
    CHECK_OBJECT(tmp_import_from_175__module);
    Py_DECREF(tmp_import_from_175__module);
    tmp_import_from_175__module = NULL;

    {
        PyObject *tmp_assign_source_1193;
        PyObject *tmp_name_name_679;
        PyObject *tmp_globals_name_679;
        PyObject *tmp_locals_name_679;
        PyObject *tmp_fromlist_name_679;
        PyObject *tmp_level_name_679;
        tmp_name_name_679 = const_str_plain_viewlift;
        tmp_globals_name_679 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_679 = Py_None;
        tmp_fromlist_name_679 = const_tuple_str_plain_ViewLiftIE_str_plain_ViewLiftEmbedIE_tuple;
        tmp_level_name_679 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1321;
        tmp_assign_source_1193 = IMPORT_MODULE5(tmp_name_name_679, tmp_globals_name_679, tmp_locals_name_679, tmp_fromlist_name_679, tmp_level_name_679);
        if (tmp_assign_source_1193 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1321;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_176__module == NULL);
        tmp_import_from_176__module = tmp_assign_source_1193;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1194;
        PyObject *tmp_import_name_from_1015;
        CHECK_OBJECT(tmp_import_from_176__module);
        tmp_import_name_from_1015 = tmp_import_from_176__module;
        if (PyModule_Check(tmp_import_name_from_1015)) {
           tmp_assign_source_1194 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1015,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ViewLiftIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1194 = IMPORT_NAME(tmp_import_name_from_1015, const_str_plain_ViewLiftIE);
        }

        if (tmp_assign_source_1194 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1321;

            goto try_except_handler_176;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ViewLiftIE, tmp_assign_source_1194);
    }
    {
        PyObject *tmp_assign_source_1195;
        PyObject *tmp_import_name_from_1016;
        CHECK_OBJECT(tmp_import_from_176__module);
        tmp_import_name_from_1016 = tmp_import_from_176__module;
        if (PyModule_Check(tmp_import_name_from_1016)) {
           tmp_assign_source_1195 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1016,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ViewLiftEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1195 = IMPORT_NAME(tmp_import_name_from_1016, const_str_plain_ViewLiftEmbedIE);
        }

        if (tmp_assign_source_1195 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1321;

            goto try_except_handler_176;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ViewLiftEmbedIE, tmp_assign_source_1195);
    }
    goto try_end_176;
    // Exception handler code:
    try_except_handler_176:;
    exception_keeper_type_176 = exception_type;
    exception_keeper_value_176 = exception_value;
    exception_keeper_tb_176 = exception_tb;
    exception_keeper_lineno_176 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_176__module);
    Py_DECREF(tmp_import_from_176__module);
    tmp_import_from_176__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_176;
    exception_value = exception_keeper_value_176;
    exception_tb = exception_keeper_tb_176;
    exception_lineno = exception_keeper_lineno_176;

    goto frame_exception_exit_1;
    // End of try:
    try_end_176:;
    CHECK_OBJECT(tmp_import_from_176__module);
    Py_DECREF(tmp_import_from_176__module);
    tmp_import_from_176__module = NULL;

    {
        PyObject *tmp_assign_source_1196;
        PyObject *tmp_import_name_from_1017;
        PyObject *tmp_name_name_680;
        PyObject *tmp_globals_name_680;
        PyObject *tmp_locals_name_680;
        PyObject *tmp_fromlist_name_680;
        PyObject *tmp_level_name_680;
        tmp_name_name_680 = const_str_plain_viidea;
        tmp_globals_name_680 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_680 = Py_None;
        tmp_fromlist_name_680 = const_tuple_str_plain_ViideaIE_tuple;
        tmp_level_name_680 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1325;
        tmp_import_name_from_1017 = IMPORT_MODULE5(tmp_name_name_680, tmp_globals_name_680, tmp_locals_name_680, tmp_fromlist_name_680, tmp_level_name_680);
        if (tmp_import_name_from_1017 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1325;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1017)) {
           tmp_assign_source_1196 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1017,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ViideaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1196 = IMPORT_NAME(tmp_import_name_from_1017, const_str_plain_ViideaIE);
        }

        Py_DECREF(tmp_import_name_from_1017);
        if (tmp_assign_source_1196 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1325;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ViideaIE, tmp_assign_source_1196);
    }
    {
        PyObject *tmp_assign_source_1197;
        PyObject *tmp_name_name_681;
        PyObject *tmp_globals_name_681;
        PyObject *tmp_locals_name_681;
        PyObject *tmp_fromlist_name_681;
        PyObject *tmp_level_name_681;
        tmp_name_name_681 = const_str_plain_vimeo;
        tmp_globals_name_681 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_681 = Py_None;
        tmp_fromlist_name_681 = const_tuple_341e5ac2e2a7675a6d2b8bec797b18bf_tuple;
        tmp_level_name_681 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1326;
        tmp_assign_source_1197 = IMPORT_MODULE5(tmp_name_name_681, tmp_globals_name_681, tmp_locals_name_681, tmp_fromlist_name_681, tmp_level_name_681);
        if (tmp_assign_source_1197 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_177__module == NULL);
        tmp_import_from_177__module = tmp_assign_source_1197;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1198;
        PyObject *tmp_import_name_from_1018;
        CHECK_OBJECT(tmp_import_from_177__module);
        tmp_import_name_from_1018 = tmp_import_from_177__module;
        if (PyModule_Check(tmp_import_name_from_1018)) {
           tmp_assign_source_1198 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1018,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VimeoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1198 = IMPORT_NAME(tmp_import_name_from_1018, const_str_plain_VimeoIE);
        }

        if (tmp_assign_source_1198 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto try_except_handler_177;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VimeoIE, tmp_assign_source_1198);
    }
    {
        PyObject *tmp_assign_source_1199;
        PyObject *tmp_import_name_from_1019;
        CHECK_OBJECT(tmp_import_from_177__module);
        tmp_import_name_from_1019 = tmp_import_from_177__module;
        if (PyModule_Check(tmp_import_name_from_1019)) {
           tmp_assign_source_1199 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1019,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VimeoAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1199 = IMPORT_NAME(tmp_import_name_from_1019, const_str_plain_VimeoAlbumIE);
        }

        if (tmp_assign_source_1199 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto try_except_handler_177;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VimeoAlbumIE, tmp_assign_source_1199);
    }
    {
        PyObject *tmp_assign_source_1200;
        PyObject *tmp_import_name_from_1020;
        CHECK_OBJECT(tmp_import_from_177__module);
        tmp_import_name_from_1020 = tmp_import_from_177__module;
        if (PyModule_Check(tmp_import_name_from_1020)) {
           tmp_assign_source_1200 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1020,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VimeoChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1200 = IMPORT_NAME(tmp_import_name_from_1020, const_str_plain_VimeoChannelIE);
        }

        if (tmp_assign_source_1200 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto try_except_handler_177;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VimeoChannelIE, tmp_assign_source_1200);
    }
    {
        PyObject *tmp_assign_source_1201;
        PyObject *tmp_import_name_from_1021;
        CHECK_OBJECT(tmp_import_from_177__module);
        tmp_import_name_from_1021 = tmp_import_from_177__module;
        if (PyModule_Check(tmp_import_name_from_1021)) {
           tmp_assign_source_1201 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1021,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VimeoGroupsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1201 = IMPORT_NAME(tmp_import_name_from_1021, const_str_plain_VimeoGroupsIE);
        }

        if (tmp_assign_source_1201 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto try_except_handler_177;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VimeoGroupsIE, tmp_assign_source_1201);
    }
    {
        PyObject *tmp_assign_source_1202;
        PyObject *tmp_import_name_from_1022;
        CHECK_OBJECT(tmp_import_from_177__module);
        tmp_import_name_from_1022 = tmp_import_from_177__module;
        if (PyModule_Check(tmp_import_name_from_1022)) {
           tmp_assign_source_1202 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1022,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VimeoLikesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1202 = IMPORT_NAME(tmp_import_name_from_1022, const_str_plain_VimeoLikesIE);
        }

        if (tmp_assign_source_1202 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto try_except_handler_177;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VimeoLikesIE, tmp_assign_source_1202);
    }
    {
        PyObject *tmp_assign_source_1203;
        PyObject *tmp_import_name_from_1023;
        CHECK_OBJECT(tmp_import_from_177__module);
        tmp_import_name_from_1023 = tmp_import_from_177__module;
        if (PyModule_Check(tmp_import_name_from_1023)) {
           tmp_assign_source_1203 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1023,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VimeoOndemandIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1203 = IMPORT_NAME(tmp_import_name_from_1023, const_str_plain_VimeoOndemandIE);
        }

        if (tmp_assign_source_1203 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto try_except_handler_177;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VimeoOndemandIE, tmp_assign_source_1203);
    }
    {
        PyObject *tmp_assign_source_1204;
        PyObject *tmp_import_name_from_1024;
        CHECK_OBJECT(tmp_import_from_177__module);
        tmp_import_name_from_1024 = tmp_import_from_177__module;
        if (PyModule_Check(tmp_import_name_from_1024)) {
           tmp_assign_source_1204 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1024,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VimeoReviewIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1204 = IMPORT_NAME(tmp_import_name_from_1024, const_str_plain_VimeoReviewIE);
        }

        if (tmp_assign_source_1204 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto try_except_handler_177;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VimeoReviewIE, tmp_assign_source_1204);
    }
    {
        PyObject *tmp_assign_source_1205;
        PyObject *tmp_import_name_from_1025;
        CHECK_OBJECT(tmp_import_from_177__module);
        tmp_import_name_from_1025 = tmp_import_from_177__module;
        if (PyModule_Check(tmp_import_name_from_1025)) {
           tmp_assign_source_1205 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1025,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VimeoUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1205 = IMPORT_NAME(tmp_import_name_from_1025, const_str_plain_VimeoUserIE);
        }

        if (tmp_assign_source_1205 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto try_except_handler_177;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VimeoUserIE, tmp_assign_source_1205);
    }
    {
        PyObject *tmp_assign_source_1206;
        PyObject *tmp_import_name_from_1026;
        CHECK_OBJECT(tmp_import_from_177__module);
        tmp_import_name_from_1026 = tmp_import_from_177__module;
        if (PyModule_Check(tmp_import_name_from_1026)) {
           tmp_assign_source_1206 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1026,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VimeoWatchLaterIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1206 = IMPORT_NAME(tmp_import_name_from_1026, const_str_plain_VimeoWatchLaterIE);
        }

        if (tmp_assign_source_1206 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto try_except_handler_177;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VimeoWatchLaterIE, tmp_assign_source_1206);
    }
    {
        PyObject *tmp_assign_source_1207;
        PyObject *tmp_import_name_from_1027;
        CHECK_OBJECT(tmp_import_from_177__module);
        tmp_import_name_from_1027 = tmp_import_from_177__module;
        if (PyModule_Check(tmp_import_name_from_1027)) {
           tmp_assign_source_1207 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1027,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VHXEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1207 = IMPORT_NAME(tmp_import_name_from_1027, const_str_plain_VHXEmbedIE);
        }

        if (tmp_assign_source_1207 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto try_except_handler_177;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VHXEmbedIE, tmp_assign_source_1207);
    }
    goto try_end_177;
    // Exception handler code:
    try_except_handler_177:;
    exception_keeper_type_177 = exception_type;
    exception_keeper_value_177 = exception_value;
    exception_keeper_tb_177 = exception_tb;
    exception_keeper_lineno_177 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_177__module);
    Py_DECREF(tmp_import_from_177__module);
    tmp_import_from_177__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_177;
    exception_value = exception_keeper_value_177;
    exception_tb = exception_keeper_tb_177;
    exception_lineno = exception_keeper_lineno_177;

    goto frame_exception_exit_1;
    // End of try:
    try_end_177:;
    CHECK_OBJECT(tmp_import_from_177__module);
    Py_DECREF(tmp_import_from_177__module);
    tmp_import_from_177__module = NULL;

    {
        PyObject *tmp_assign_source_1208;
        PyObject *tmp_import_name_from_1028;
        PyObject *tmp_name_name_682;
        PyObject *tmp_globals_name_682;
        PyObject *tmp_locals_name_682;
        PyObject *tmp_fromlist_name_682;
        PyObject *tmp_level_name_682;
        tmp_name_name_682 = const_str_plain_vimple;
        tmp_globals_name_682 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_682 = Py_None;
        tmp_fromlist_name_682 = const_tuple_str_plain_VimpleIE_tuple;
        tmp_level_name_682 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1338;
        tmp_import_name_from_1028 = IMPORT_MODULE5(tmp_name_name_682, tmp_globals_name_682, tmp_locals_name_682, tmp_fromlist_name_682, tmp_level_name_682);
        if (tmp_import_name_from_1028 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1338;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1028)) {
           tmp_assign_source_1208 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1028,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VimpleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1208 = IMPORT_NAME(tmp_import_name_from_1028, const_str_plain_VimpleIE);
        }

        Py_DECREF(tmp_import_name_from_1028);
        if (tmp_assign_source_1208 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1338;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VimpleIE, tmp_assign_source_1208);
    }
    {
        PyObject *tmp_assign_source_1209;
        PyObject *tmp_name_name_683;
        PyObject *tmp_globals_name_683;
        PyObject *tmp_locals_name_683;
        PyObject *tmp_fromlist_name_683;
        PyObject *tmp_level_name_683;
        tmp_name_name_683 = const_str_plain_vine;
        tmp_globals_name_683 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_683 = Py_None;
        tmp_fromlist_name_683 = const_tuple_str_plain_VineIE_str_plain_VineUserIE_tuple;
        tmp_level_name_683 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1339;
        tmp_assign_source_1209 = IMPORT_MODULE5(tmp_name_name_683, tmp_globals_name_683, tmp_locals_name_683, tmp_fromlist_name_683, tmp_level_name_683);
        if (tmp_assign_source_1209 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1339;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_178__module == NULL);
        tmp_import_from_178__module = tmp_assign_source_1209;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1210;
        PyObject *tmp_import_name_from_1029;
        CHECK_OBJECT(tmp_import_from_178__module);
        tmp_import_name_from_1029 = tmp_import_from_178__module;
        if (PyModule_Check(tmp_import_name_from_1029)) {
           tmp_assign_source_1210 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1029,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VineIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1210 = IMPORT_NAME(tmp_import_name_from_1029, const_str_plain_VineIE);
        }

        if (tmp_assign_source_1210 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1339;

            goto try_except_handler_178;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VineIE, tmp_assign_source_1210);
    }
    {
        PyObject *tmp_assign_source_1211;
        PyObject *tmp_import_name_from_1030;
        CHECK_OBJECT(tmp_import_from_178__module);
        tmp_import_name_from_1030 = tmp_import_from_178__module;
        if (PyModule_Check(tmp_import_name_from_1030)) {
           tmp_assign_source_1211 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1030,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VineUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1211 = IMPORT_NAME(tmp_import_name_from_1030, const_str_plain_VineUserIE);
        }

        if (tmp_assign_source_1211 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1339;

            goto try_except_handler_178;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VineUserIE, tmp_assign_source_1211);
    }
    goto try_end_178;
    // Exception handler code:
    try_except_handler_178:;
    exception_keeper_type_178 = exception_type;
    exception_keeper_value_178 = exception_value;
    exception_keeper_tb_178 = exception_tb;
    exception_keeper_lineno_178 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_178__module);
    Py_DECREF(tmp_import_from_178__module);
    tmp_import_from_178__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_178;
    exception_value = exception_keeper_value_178;
    exception_tb = exception_keeper_tb_178;
    exception_lineno = exception_keeper_lineno_178;

    goto frame_exception_exit_1;
    // End of try:
    try_end_178:;
    CHECK_OBJECT(tmp_import_from_178__module);
    Py_DECREF(tmp_import_from_178__module);
    tmp_import_from_178__module = NULL;

    {
        PyObject *tmp_assign_source_1212;
        PyObject *tmp_name_name_684;
        PyObject *tmp_globals_name_684;
        PyObject *tmp_locals_name_684;
        PyObject *tmp_fromlist_name_684;
        PyObject *tmp_level_name_684;
        tmp_name_name_684 = const_str_plain_viki;
        tmp_globals_name_684 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_684 = Py_None;
        tmp_fromlist_name_684 = const_tuple_str_plain_VikiIE_str_plain_VikiChannelIE_tuple;
        tmp_level_name_684 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1343;
        tmp_assign_source_1212 = IMPORT_MODULE5(tmp_name_name_684, tmp_globals_name_684, tmp_locals_name_684, tmp_fromlist_name_684, tmp_level_name_684);
        if (tmp_assign_source_1212 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1343;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_179__module == NULL);
        tmp_import_from_179__module = tmp_assign_source_1212;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1213;
        PyObject *tmp_import_name_from_1031;
        CHECK_OBJECT(tmp_import_from_179__module);
        tmp_import_name_from_1031 = tmp_import_from_179__module;
        if (PyModule_Check(tmp_import_name_from_1031)) {
           tmp_assign_source_1213 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1031,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VikiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1213 = IMPORT_NAME(tmp_import_name_from_1031, const_str_plain_VikiIE);
        }

        if (tmp_assign_source_1213 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1343;

            goto try_except_handler_179;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VikiIE, tmp_assign_source_1213);
    }
    {
        PyObject *tmp_assign_source_1214;
        PyObject *tmp_import_name_from_1032;
        CHECK_OBJECT(tmp_import_from_179__module);
        tmp_import_name_from_1032 = tmp_import_from_179__module;
        if (PyModule_Check(tmp_import_name_from_1032)) {
           tmp_assign_source_1214 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1032,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VikiChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1214 = IMPORT_NAME(tmp_import_name_from_1032, const_str_plain_VikiChannelIE);
        }

        if (tmp_assign_source_1214 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1343;

            goto try_except_handler_179;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VikiChannelIE, tmp_assign_source_1214);
    }
    goto try_end_179;
    // Exception handler code:
    try_except_handler_179:;
    exception_keeper_type_179 = exception_type;
    exception_keeper_value_179 = exception_value;
    exception_keeper_tb_179 = exception_tb;
    exception_keeper_lineno_179 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_179__module);
    Py_DECREF(tmp_import_from_179__module);
    tmp_import_from_179__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_179;
    exception_value = exception_keeper_value_179;
    exception_tb = exception_keeper_tb_179;
    exception_lineno = exception_keeper_lineno_179;

    goto frame_exception_exit_1;
    // End of try:
    try_end_179:;
    CHECK_OBJECT(tmp_import_from_179__module);
    Py_DECREF(tmp_import_from_179__module);
    tmp_import_from_179__module = NULL;

    {
        PyObject *tmp_assign_source_1215;
        PyObject *tmp_import_name_from_1033;
        PyObject *tmp_name_name_685;
        PyObject *tmp_globals_name_685;
        PyObject *tmp_locals_name_685;
        PyObject *tmp_fromlist_name_685;
        PyObject *tmp_level_name_685;
        tmp_name_name_685 = const_str_plain_viqeo;
        tmp_globals_name_685 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_685 = Py_None;
        tmp_fromlist_name_685 = const_tuple_str_plain_ViqeoIE_tuple;
        tmp_level_name_685 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1347;
        tmp_import_name_from_1033 = IMPORT_MODULE5(tmp_name_name_685, tmp_globals_name_685, tmp_locals_name_685, tmp_fromlist_name_685, tmp_level_name_685);
        if (tmp_import_name_from_1033 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1347;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1033)) {
           tmp_assign_source_1215 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1033,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ViqeoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1215 = IMPORT_NAME(tmp_import_name_from_1033, const_str_plain_ViqeoIE);
        }

        Py_DECREF(tmp_import_name_from_1033);
        if (tmp_assign_source_1215 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1347;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ViqeoIE, tmp_assign_source_1215);
    }
    {
        PyObject *tmp_assign_source_1216;
        PyObject *tmp_name_name_686;
        PyObject *tmp_globals_name_686;
        PyObject *tmp_locals_name_686;
        PyObject *tmp_fromlist_name_686;
        PyObject *tmp_level_name_686;
        tmp_name_name_686 = const_str_plain_viu;
        tmp_globals_name_686 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_686 = Py_None;
        tmp_fromlist_name_686 = const_tuple_str_plain_ViuIE_str_plain_ViuPlaylistIE_str_plain_ViuOTTIE_tuple;
        tmp_level_name_686 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1348;
        tmp_assign_source_1216 = IMPORT_MODULE5(tmp_name_name_686, tmp_globals_name_686, tmp_locals_name_686, tmp_fromlist_name_686, tmp_level_name_686);
        if (tmp_assign_source_1216 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1348;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_180__module == NULL);
        tmp_import_from_180__module = tmp_assign_source_1216;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1217;
        PyObject *tmp_import_name_from_1034;
        CHECK_OBJECT(tmp_import_from_180__module);
        tmp_import_name_from_1034 = tmp_import_from_180__module;
        if (PyModule_Check(tmp_import_name_from_1034)) {
           tmp_assign_source_1217 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1034,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ViuIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1217 = IMPORT_NAME(tmp_import_name_from_1034, const_str_plain_ViuIE);
        }

        if (tmp_assign_source_1217 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1348;

            goto try_except_handler_180;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ViuIE, tmp_assign_source_1217);
    }
    {
        PyObject *tmp_assign_source_1218;
        PyObject *tmp_import_name_from_1035;
        CHECK_OBJECT(tmp_import_from_180__module);
        tmp_import_name_from_1035 = tmp_import_from_180__module;
        if (PyModule_Check(tmp_import_name_from_1035)) {
           tmp_assign_source_1218 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1035,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ViuPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1218 = IMPORT_NAME(tmp_import_name_from_1035, const_str_plain_ViuPlaylistIE);
        }

        if (tmp_assign_source_1218 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1348;

            goto try_except_handler_180;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ViuPlaylistIE, tmp_assign_source_1218);
    }
    {
        PyObject *tmp_assign_source_1219;
        PyObject *tmp_import_name_from_1036;
        CHECK_OBJECT(tmp_import_from_180__module);
        tmp_import_name_from_1036 = tmp_import_from_180__module;
        if (PyModule_Check(tmp_import_name_from_1036)) {
           tmp_assign_source_1219 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1036,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ViuOTTIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1219 = IMPORT_NAME(tmp_import_name_from_1036, const_str_plain_ViuOTTIE);
        }

        if (tmp_assign_source_1219 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1348;

            goto try_except_handler_180;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ViuOTTIE, tmp_assign_source_1219);
    }
    goto try_end_180;
    // Exception handler code:
    try_except_handler_180:;
    exception_keeper_type_180 = exception_type;
    exception_keeper_value_180 = exception_value;
    exception_keeper_tb_180 = exception_tb;
    exception_keeper_lineno_180 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_180__module);
    Py_DECREF(tmp_import_from_180__module);
    tmp_import_from_180__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_180;
    exception_value = exception_keeper_value_180;
    exception_tb = exception_keeper_tb_180;
    exception_lineno = exception_keeper_lineno_180;

    goto frame_exception_exit_1;
    // End of try:
    try_end_180:;
    CHECK_OBJECT(tmp_import_from_180__module);
    Py_DECREF(tmp_import_from_180__module);
    tmp_import_from_180__module = NULL;

    {
        PyObject *tmp_assign_source_1220;
        PyObject *tmp_name_name_687;
        PyObject *tmp_globals_name_687;
        PyObject *tmp_locals_name_687;
        PyObject *tmp_fromlist_name_687;
        PyObject *tmp_level_name_687;
        tmp_name_name_687 = const_str_plain_vk;
        tmp_globals_name_687 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_687 = Py_None;
        tmp_fromlist_name_687 = const_tuple_6457496b50b4906b3896cf75be2cfdb3_tuple;
        tmp_level_name_687 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1353;
        tmp_assign_source_1220 = IMPORT_MODULE5(tmp_name_name_687, tmp_globals_name_687, tmp_locals_name_687, tmp_fromlist_name_687, tmp_level_name_687);
        if (tmp_assign_source_1220 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1353;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_181__module == NULL);
        tmp_import_from_181__module = tmp_assign_source_1220;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1221;
        PyObject *tmp_import_name_from_1037;
        CHECK_OBJECT(tmp_import_from_181__module);
        tmp_import_name_from_1037 = tmp_import_from_181__module;
        if (PyModule_Check(tmp_import_name_from_1037)) {
           tmp_assign_source_1221 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1037,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VKIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1221 = IMPORT_NAME(tmp_import_name_from_1037, const_str_plain_VKIE);
        }

        if (tmp_assign_source_1221 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1353;

            goto try_except_handler_181;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VKIE, tmp_assign_source_1221);
    }
    {
        PyObject *tmp_assign_source_1222;
        PyObject *tmp_import_name_from_1038;
        CHECK_OBJECT(tmp_import_from_181__module);
        tmp_import_name_from_1038 = tmp_import_from_181__module;
        if (PyModule_Check(tmp_import_name_from_1038)) {
           tmp_assign_source_1222 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1038,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VKUserVideosIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1222 = IMPORT_NAME(tmp_import_name_from_1038, const_str_plain_VKUserVideosIE);
        }

        if (tmp_assign_source_1222 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1353;

            goto try_except_handler_181;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VKUserVideosIE, tmp_assign_source_1222);
    }
    {
        PyObject *tmp_assign_source_1223;
        PyObject *tmp_import_name_from_1039;
        CHECK_OBJECT(tmp_import_from_181__module);
        tmp_import_name_from_1039 = tmp_import_from_181__module;
        if (PyModule_Check(tmp_import_name_from_1039)) {
           tmp_assign_source_1223 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1039,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VKWallPostIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1223 = IMPORT_NAME(tmp_import_name_from_1039, const_str_plain_VKWallPostIE);
        }

        if (tmp_assign_source_1223 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1353;

            goto try_except_handler_181;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VKWallPostIE, tmp_assign_source_1223);
    }
    goto try_end_181;
    // Exception handler code:
    try_except_handler_181:;
    exception_keeper_type_181 = exception_type;
    exception_keeper_value_181 = exception_value;
    exception_keeper_tb_181 = exception_tb;
    exception_keeper_lineno_181 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_181__module);
    Py_DECREF(tmp_import_from_181__module);
    tmp_import_from_181__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_181;
    exception_value = exception_keeper_value_181;
    exception_tb = exception_keeper_tb_181;
    exception_lineno = exception_keeper_lineno_181;

    goto frame_exception_exit_1;
    // End of try:
    try_end_181:;
    CHECK_OBJECT(tmp_import_from_181__module);
    Py_DECREF(tmp_import_from_181__module);
    tmp_import_from_181__module = NULL;

    {
        PyObject *tmp_assign_source_1224;
        PyObject *tmp_name_name_688;
        PyObject *tmp_globals_name_688;
        PyObject *tmp_locals_name_688;
        PyObject *tmp_fromlist_name_688;
        PyObject *tmp_level_name_688;
        tmp_name_name_688 = const_str_plain_vlive;
        tmp_globals_name_688 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_688 = Py_None;
        tmp_fromlist_name_688 = const_tuple_f5fe873df175fa3a244b569f03c05a7c_tuple;
        tmp_level_name_688 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1358;
        tmp_assign_source_1224 = IMPORT_MODULE5(tmp_name_name_688, tmp_globals_name_688, tmp_locals_name_688, tmp_fromlist_name_688, tmp_level_name_688);
        if (tmp_assign_source_1224 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1358;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_182__module == NULL);
        tmp_import_from_182__module = tmp_assign_source_1224;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1225;
        PyObject *tmp_import_name_from_1040;
        CHECK_OBJECT(tmp_import_from_182__module);
        tmp_import_name_from_1040 = tmp_import_from_182__module;
        if (PyModule_Check(tmp_import_name_from_1040)) {
           tmp_assign_source_1225 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1040,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1225 = IMPORT_NAME(tmp_import_name_from_1040, const_str_plain_VLiveIE);
        }

        if (tmp_assign_source_1225 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1358;

            goto try_except_handler_182;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VLiveIE, tmp_assign_source_1225);
    }
    {
        PyObject *tmp_assign_source_1226;
        PyObject *tmp_import_name_from_1041;
        CHECK_OBJECT(tmp_import_from_182__module);
        tmp_import_name_from_1041 = tmp_import_from_182__module;
        if (PyModule_Check(tmp_import_name_from_1041)) {
           tmp_assign_source_1226 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1041,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VLiveChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1226 = IMPORT_NAME(tmp_import_name_from_1041, const_str_plain_VLiveChannelIE);
        }

        if (tmp_assign_source_1226 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1358;

            goto try_except_handler_182;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VLiveChannelIE, tmp_assign_source_1226);
    }
    {
        PyObject *tmp_assign_source_1227;
        PyObject *tmp_import_name_from_1042;
        CHECK_OBJECT(tmp_import_from_182__module);
        tmp_import_name_from_1042 = tmp_import_from_182__module;
        if (PyModule_Check(tmp_import_name_from_1042)) {
           tmp_assign_source_1227 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1042,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VLivePlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1227 = IMPORT_NAME(tmp_import_name_from_1042, const_str_plain_VLivePlaylistIE);
        }

        if (tmp_assign_source_1227 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1358;

            goto try_except_handler_182;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VLivePlaylistIE, tmp_assign_source_1227);
    }
    goto try_end_182;
    // Exception handler code:
    try_except_handler_182:;
    exception_keeper_type_182 = exception_type;
    exception_keeper_value_182 = exception_value;
    exception_keeper_tb_182 = exception_tb;
    exception_keeper_lineno_182 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_182__module);
    Py_DECREF(tmp_import_from_182__module);
    tmp_import_from_182__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_182;
    exception_value = exception_keeper_value_182;
    exception_tb = exception_keeper_tb_182;
    exception_lineno = exception_keeper_lineno_182;

    goto frame_exception_exit_1;
    // End of try:
    try_end_182:;
    CHECK_OBJECT(tmp_import_from_182__module);
    Py_DECREF(tmp_import_from_182__module);
    tmp_import_from_182__module = NULL;

    {
        PyObject *tmp_assign_source_1228;
        PyObject *tmp_import_name_from_1043;
        PyObject *tmp_name_name_689;
        PyObject *tmp_globals_name_689;
        PyObject *tmp_locals_name_689;
        PyObject *tmp_fromlist_name_689;
        PyObject *tmp_level_name_689;
        tmp_name_name_689 = const_str_plain_vodlocker;
        tmp_globals_name_689 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_689 = Py_None;
        tmp_fromlist_name_689 = const_tuple_str_plain_VodlockerIE_tuple;
        tmp_level_name_689 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1363;
        tmp_import_name_from_1043 = IMPORT_MODULE5(tmp_name_name_689, tmp_globals_name_689, tmp_locals_name_689, tmp_fromlist_name_689, tmp_level_name_689);
        if (tmp_import_name_from_1043 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1363;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1043)) {
           tmp_assign_source_1228 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1043,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VodlockerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1228 = IMPORT_NAME(tmp_import_name_from_1043, const_str_plain_VodlockerIE);
        }

        Py_DECREF(tmp_import_name_from_1043);
        if (tmp_assign_source_1228 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1363;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VodlockerIE, tmp_assign_source_1228);
    }
    {
        PyObject *tmp_assign_source_1229;
        PyObject *tmp_import_name_from_1044;
        PyObject *tmp_name_name_690;
        PyObject *tmp_globals_name_690;
        PyObject *tmp_locals_name_690;
        PyObject *tmp_fromlist_name_690;
        PyObject *tmp_level_name_690;
        tmp_name_name_690 = const_str_plain_vodpl;
        tmp_globals_name_690 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_690 = Py_None;
        tmp_fromlist_name_690 = const_tuple_str_plain_VODPlIE_tuple;
        tmp_level_name_690 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1364;
        tmp_import_name_from_1044 = IMPORT_MODULE5(tmp_name_name_690, tmp_globals_name_690, tmp_locals_name_690, tmp_fromlist_name_690, tmp_level_name_690);
        if (tmp_import_name_from_1044 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1364;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1044)) {
           tmp_assign_source_1229 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1044,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VODPlIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1229 = IMPORT_NAME(tmp_import_name_from_1044, const_str_plain_VODPlIE);
        }

        Py_DECREF(tmp_import_name_from_1044);
        if (tmp_assign_source_1229 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1364;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VODPlIE, tmp_assign_source_1229);
    }
    {
        PyObject *tmp_assign_source_1230;
        PyObject *tmp_import_name_from_1045;
        PyObject *tmp_name_name_691;
        PyObject *tmp_globals_name_691;
        PyObject *tmp_locals_name_691;
        PyObject *tmp_fromlist_name_691;
        PyObject *tmp_level_name_691;
        tmp_name_name_691 = const_str_plain_vodplatform;
        tmp_globals_name_691 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_691 = Py_None;
        tmp_fromlist_name_691 = const_tuple_str_plain_VODPlatformIE_tuple;
        tmp_level_name_691 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1365;
        tmp_import_name_from_1045 = IMPORT_MODULE5(tmp_name_name_691, tmp_globals_name_691, tmp_locals_name_691, tmp_fromlist_name_691, tmp_level_name_691);
        if (tmp_import_name_from_1045 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1365;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1045)) {
           tmp_assign_source_1230 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1045,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VODPlatformIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1230 = IMPORT_NAME(tmp_import_name_from_1045, const_str_plain_VODPlatformIE);
        }

        Py_DECREF(tmp_import_name_from_1045);
        if (tmp_assign_source_1230 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1365;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VODPlatformIE, tmp_assign_source_1230);
    }
    {
        PyObject *tmp_assign_source_1231;
        PyObject *tmp_import_name_from_1046;
        PyObject *tmp_name_name_692;
        PyObject *tmp_globals_name_692;
        PyObject *tmp_locals_name_692;
        PyObject *tmp_fromlist_name_692;
        PyObject *tmp_level_name_692;
        tmp_name_name_692 = const_str_plain_voicerepublic;
        tmp_globals_name_692 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_692 = Py_None;
        tmp_fromlist_name_692 = const_tuple_str_plain_VoiceRepublicIE_tuple;
        tmp_level_name_692 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1366;
        tmp_import_name_from_1046 = IMPORT_MODULE5(tmp_name_name_692, tmp_globals_name_692, tmp_locals_name_692, tmp_fromlist_name_692, tmp_level_name_692);
        if (tmp_import_name_from_1046 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1366;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1046)) {
           tmp_assign_source_1231 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1046,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VoiceRepublicIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1231 = IMPORT_NAME(tmp_import_name_from_1046, const_str_plain_VoiceRepublicIE);
        }

        Py_DECREF(tmp_import_name_from_1046);
        if (tmp_assign_source_1231 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1366;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VoiceRepublicIE, tmp_assign_source_1231);
    }
    {
        PyObject *tmp_assign_source_1232;
        PyObject *tmp_import_name_from_1047;
        PyObject *tmp_name_name_693;
        PyObject *tmp_globals_name_693;
        PyObject *tmp_locals_name_693;
        PyObject *tmp_fromlist_name_693;
        PyObject *tmp_level_name_693;
        tmp_name_name_693 = const_str_plain_voot;
        tmp_globals_name_693 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_693 = Py_None;
        tmp_fromlist_name_693 = const_tuple_str_plain_VootIE_tuple;
        tmp_level_name_693 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1367;
        tmp_import_name_from_1047 = IMPORT_MODULE5(tmp_name_name_693, tmp_globals_name_693, tmp_locals_name_693, tmp_fromlist_name_693, tmp_level_name_693);
        if (tmp_import_name_from_1047 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1367;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1047)) {
           tmp_assign_source_1232 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1047,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VootIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1232 = IMPORT_NAME(tmp_import_name_from_1047, const_str_plain_VootIE);
        }

        Py_DECREF(tmp_import_name_from_1047);
        if (tmp_assign_source_1232 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1367;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VootIE, tmp_assign_source_1232);
    }
    {
        PyObject *tmp_assign_source_1233;
        PyObject *tmp_name_name_694;
        PyObject *tmp_globals_name_694;
        PyObject *tmp_locals_name_694;
        PyObject *tmp_fromlist_name_694;
        PyObject *tmp_level_name_694;
        tmp_name_name_694 = const_str_plain_voxmedia;
        tmp_globals_name_694 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_694 = Py_None;
        tmp_fromlist_name_694 = const_tuple_str_plain_VoxMediaVolumeIE_str_plain_VoxMediaIE_tuple;
        tmp_level_name_694 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1368;
        tmp_assign_source_1233 = IMPORT_MODULE5(tmp_name_name_694, tmp_globals_name_694, tmp_locals_name_694, tmp_fromlist_name_694, tmp_level_name_694);
        if (tmp_assign_source_1233 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1368;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_183__module == NULL);
        tmp_import_from_183__module = tmp_assign_source_1233;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1234;
        PyObject *tmp_import_name_from_1048;
        CHECK_OBJECT(tmp_import_from_183__module);
        tmp_import_name_from_1048 = tmp_import_from_183__module;
        if (PyModule_Check(tmp_import_name_from_1048)) {
           tmp_assign_source_1234 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1048,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VoxMediaVolumeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1234 = IMPORT_NAME(tmp_import_name_from_1048, const_str_plain_VoxMediaVolumeIE);
        }

        if (tmp_assign_source_1234 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1368;

            goto try_except_handler_183;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VoxMediaVolumeIE, tmp_assign_source_1234);
    }
    {
        PyObject *tmp_assign_source_1235;
        PyObject *tmp_import_name_from_1049;
        CHECK_OBJECT(tmp_import_from_183__module);
        tmp_import_name_from_1049 = tmp_import_from_183__module;
        if (PyModule_Check(tmp_import_name_from_1049)) {
           tmp_assign_source_1235 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1049,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VoxMediaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1235 = IMPORT_NAME(tmp_import_name_from_1049, const_str_plain_VoxMediaIE);
        }

        if (tmp_assign_source_1235 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1368;

            goto try_except_handler_183;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VoxMediaIE, tmp_assign_source_1235);
    }
    goto try_end_183;
    // Exception handler code:
    try_except_handler_183:;
    exception_keeper_type_183 = exception_type;
    exception_keeper_value_183 = exception_value;
    exception_keeper_tb_183 = exception_tb;
    exception_keeper_lineno_183 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_183__module);
    Py_DECREF(tmp_import_from_183__module);
    tmp_import_from_183__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_183;
    exception_value = exception_keeper_value_183;
    exception_tb = exception_keeper_tb_183;
    exception_lineno = exception_keeper_lineno_183;

    goto frame_exception_exit_1;
    // End of try:
    try_end_183:;
    CHECK_OBJECT(tmp_import_from_183__module);
    Py_DECREF(tmp_import_from_183__module);
    tmp_import_from_183__module = NULL;

    {
        PyObject *tmp_assign_source_1236;
        PyObject *tmp_import_name_from_1050;
        PyObject *tmp_name_name_695;
        PyObject *tmp_globals_name_695;
        PyObject *tmp_locals_name_695;
        PyObject *tmp_fromlist_name_695;
        PyObject *tmp_level_name_695;
        tmp_name_name_695 = const_str_plain_vrt;
        tmp_globals_name_695 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_695 = Py_None;
        tmp_fromlist_name_695 = const_tuple_str_plain_VRTIE_tuple;
        tmp_level_name_695 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1372;
        tmp_import_name_from_1050 = IMPORT_MODULE5(tmp_name_name_695, tmp_globals_name_695, tmp_locals_name_695, tmp_fromlist_name_695, tmp_level_name_695);
        if (tmp_import_name_from_1050 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1372;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1050)) {
           tmp_assign_source_1236 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1050,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VRTIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1236 = IMPORT_NAME(tmp_import_name_from_1050, const_str_plain_VRTIE);
        }

        Py_DECREF(tmp_import_name_from_1050);
        if (tmp_assign_source_1236 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1372;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VRTIE, tmp_assign_source_1236);
    }
    {
        PyObject *tmp_assign_source_1237;
        PyObject *tmp_import_name_from_1051;
        PyObject *tmp_name_name_696;
        PyObject *tmp_globals_name_696;
        PyObject *tmp_locals_name_696;
        PyObject *tmp_fromlist_name_696;
        PyObject *tmp_level_name_696;
        tmp_name_name_696 = const_str_plain_vrak;
        tmp_globals_name_696 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_696 = Py_None;
        tmp_fromlist_name_696 = const_tuple_str_plain_VrakIE_tuple;
        tmp_level_name_696 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1373;
        tmp_import_name_from_1051 = IMPORT_MODULE5(tmp_name_name_696, tmp_globals_name_696, tmp_locals_name_696, tmp_fromlist_name_696, tmp_level_name_696);
        if (tmp_import_name_from_1051 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1373;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1051)) {
           tmp_assign_source_1237 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1051,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VrakIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1237 = IMPORT_NAME(tmp_import_name_from_1051, const_str_plain_VrakIE);
        }

        Py_DECREF(tmp_import_name_from_1051);
        if (tmp_assign_source_1237 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1373;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VrakIE, tmp_assign_source_1237);
    }
    {
        PyObject *tmp_assign_source_1238;
        PyObject *tmp_name_name_697;
        PyObject *tmp_globals_name_697;
        PyObject *tmp_locals_name_697;
        PyObject *tmp_fromlist_name_697;
        PyObject *tmp_level_name_697;
        tmp_name_name_697 = const_str_plain_vrv;
        tmp_globals_name_697 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_697 = Py_None;
        tmp_fromlist_name_697 = const_tuple_str_plain_VRVIE_str_plain_VRVSeriesIE_tuple;
        tmp_level_name_697 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1374;
        tmp_assign_source_1238 = IMPORT_MODULE5(tmp_name_name_697, tmp_globals_name_697, tmp_locals_name_697, tmp_fromlist_name_697, tmp_level_name_697);
        if (tmp_assign_source_1238 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1374;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_184__module == NULL);
        tmp_import_from_184__module = tmp_assign_source_1238;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1239;
        PyObject *tmp_import_name_from_1052;
        CHECK_OBJECT(tmp_import_from_184__module);
        tmp_import_name_from_1052 = tmp_import_from_184__module;
        if (PyModule_Check(tmp_import_name_from_1052)) {
           tmp_assign_source_1239 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1052,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VRVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1239 = IMPORT_NAME(tmp_import_name_from_1052, const_str_plain_VRVIE);
        }

        if (tmp_assign_source_1239 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1374;

            goto try_except_handler_184;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VRVIE, tmp_assign_source_1239);
    }
    {
        PyObject *tmp_assign_source_1240;
        PyObject *tmp_import_name_from_1053;
        CHECK_OBJECT(tmp_import_from_184__module);
        tmp_import_name_from_1053 = tmp_import_from_184__module;
        if (PyModule_Check(tmp_import_name_from_1053)) {
           tmp_assign_source_1240 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1053,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VRVSeriesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1240 = IMPORT_NAME(tmp_import_name_from_1053, const_str_plain_VRVSeriesIE);
        }

        if (tmp_assign_source_1240 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1374;

            goto try_except_handler_184;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VRVSeriesIE, tmp_assign_source_1240);
    }
    goto try_end_184;
    // Exception handler code:
    try_except_handler_184:;
    exception_keeper_type_184 = exception_type;
    exception_keeper_value_184 = exception_value;
    exception_keeper_tb_184 = exception_tb;
    exception_keeper_lineno_184 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_184__module);
    Py_DECREF(tmp_import_from_184__module);
    tmp_import_from_184__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_184;
    exception_value = exception_keeper_value_184;
    exception_tb = exception_keeper_tb_184;
    exception_lineno = exception_keeper_lineno_184;

    goto frame_exception_exit_1;
    // End of try:
    try_end_184:;
    CHECK_OBJECT(tmp_import_from_184__module);
    Py_DECREF(tmp_import_from_184__module);
    tmp_import_from_184__module = NULL;

    {
        PyObject *tmp_assign_source_1241;
        PyObject *tmp_import_name_from_1054;
        PyObject *tmp_name_name_698;
        PyObject *tmp_globals_name_698;
        PyObject *tmp_locals_name_698;
        PyObject *tmp_fromlist_name_698;
        PyObject *tmp_level_name_698;
        tmp_name_name_698 = const_str_plain_vshare;
        tmp_globals_name_698 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_698 = Py_None;
        tmp_fromlist_name_698 = const_tuple_str_plain_VShareIE_tuple;
        tmp_level_name_698 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1378;
        tmp_import_name_from_1054 = IMPORT_MODULE5(tmp_name_name_698, tmp_globals_name_698, tmp_locals_name_698, tmp_fromlist_name_698, tmp_level_name_698);
        if (tmp_import_name_from_1054 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1378;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1054)) {
           tmp_assign_source_1241 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1054,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VShareIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1241 = IMPORT_NAME(tmp_import_name_from_1054, const_str_plain_VShareIE);
        }

        Py_DECREF(tmp_import_name_from_1054);
        if (tmp_assign_source_1241 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1378;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VShareIE, tmp_assign_source_1241);
    }
    {
        PyObject *tmp_assign_source_1242;
        PyObject *tmp_import_name_from_1055;
        PyObject *tmp_name_name_699;
        PyObject *tmp_globals_name_699;
        PyObject *tmp_locals_name_699;
        PyObject *tmp_fromlist_name_699;
        PyObject *tmp_level_name_699;
        tmp_name_name_699 = const_str_plain_medialaan;
        tmp_globals_name_699 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_699 = Py_None;
        tmp_fromlist_name_699 = const_tuple_str_plain_MedialaanIE_tuple;
        tmp_level_name_699 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1379;
        tmp_import_name_from_1055 = IMPORT_MODULE5(tmp_name_name_699, tmp_globals_name_699, tmp_locals_name_699, tmp_fromlist_name_699, tmp_level_name_699);
        if (tmp_import_name_from_1055 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1379;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1055)) {
           tmp_assign_source_1242 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1055,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MedialaanIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1242 = IMPORT_NAME(tmp_import_name_from_1055, const_str_plain_MedialaanIE);
        }

        Py_DECREF(tmp_import_name_from_1055);
        if (tmp_assign_source_1242 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1379;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MedialaanIE, tmp_assign_source_1242);
    }
    {
        PyObject *tmp_assign_source_1243;
        PyObject *tmp_import_name_from_1056;
        PyObject *tmp_name_name_700;
        PyObject *tmp_globals_name_700;
        PyObject *tmp_locals_name_700;
        PyObject *tmp_fromlist_name_700;
        PyObject *tmp_level_name_700;
        tmp_name_name_700 = const_str_plain_vube;
        tmp_globals_name_700 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_700 = Py_None;
        tmp_fromlist_name_700 = const_tuple_str_plain_VubeIE_tuple;
        tmp_level_name_700 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1380;
        tmp_import_name_from_1056 = IMPORT_MODULE5(tmp_name_name_700, tmp_globals_name_700, tmp_locals_name_700, tmp_fromlist_name_700, tmp_level_name_700);
        if (tmp_import_name_from_1056 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1380;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1056)) {
           tmp_assign_source_1243 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1056,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1243 = IMPORT_NAME(tmp_import_name_from_1056, const_str_plain_VubeIE);
        }

        Py_DECREF(tmp_import_name_from_1056);
        if (tmp_assign_source_1243 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1380;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VubeIE, tmp_assign_source_1243);
    }
    {
        PyObject *tmp_assign_source_1244;
        PyObject *tmp_import_name_from_1057;
        PyObject *tmp_name_name_701;
        PyObject *tmp_globals_name_701;
        PyObject *tmp_locals_name_701;
        PyObject *tmp_fromlist_name_701;
        PyObject *tmp_level_name_701;
        tmp_name_name_701 = const_str_plain_vuclip;
        tmp_globals_name_701 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_701 = Py_None;
        tmp_fromlist_name_701 = const_tuple_str_plain_VuClipIE_tuple;
        tmp_level_name_701 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1381;
        tmp_import_name_from_1057 = IMPORT_MODULE5(tmp_name_name_701, tmp_globals_name_701, tmp_locals_name_701, tmp_fromlist_name_701, tmp_level_name_701);
        if (tmp_import_name_from_1057 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1381;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1057)) {
           tmp_assign_source_1244 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1057,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VuClipIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1244 = IMPORT_NAME(tmp_import_name_from_1057, const_str_plain_VuClipIE);
        }

        Py_DECREF(tmp_import_name_from_1057);
        if (tmp_assign_source_1244 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1381;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VuClipIE, tmp_assign_source_1244);
    }
    {
        PyObject *tmp_assign_source_1245;
        PyObject *tmp_import_name_from_1058;
        PyObject *tmp_name_name_702;
        PyObject *tmp_globals_name_702;
        PyObject *tmp_locals_name_702;
        PyObject *tmp_fromlist_name_702;
        PyObject *tmp_level_name_702;
        tmp_name_name_702 = const_str_plain_vvvvid;
        tmp_globals_name_702 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_702 = Py_None;
        tmp_fromlist_name_702 = const_tuple_str_plain_VVVVIDIE_tuple;
        tmp_level_name_702 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1382;
        tmp_import_name_from_1058 = IMPORT_MODULE5(tmp_name_name_702, tmp_globals_name_702, tmp_locals_name_702, tmp_fromlist_name_702, tmp_level_name_702);
        if (tmp_import_name_from_1058 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1382;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1058)) {
           tmp_assign_source_1245 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1058,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VVVVIDIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1245 = IMPORT_NAME(tmp_import_name_from_1058, const_str_plain_VVVVIDIE);
        }

        Py_DECREF(tmp_import_name_from_1058);
        if (tmp_assign_source_1245 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1382;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VVVVIDIE, tmp_assign_source_1245);
    }
    {
        PyObject *tmp_assign_source_1246;
        PyObject *tmp_import_name_from_1059;
        PyObject *tmp_name_name_703;
        PyObject *tmp_globals_name_703;
        PyObject *tmp_locals_name_703;
        PyObject *tmp_fromlist_name_703;
        PyObject *tmp_level_name_703;
        tmp_name_name_703 = const_str_plain_vyborymos;
        tmp_globals_name_703 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_703 = Py_None;
        tmp_fromlist_name_703 = const_tuple_str_plain_VyboryMosIE_tuple;
        tmp_level_name_703 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1383;
        tmp_import_name_from_1059 = IMPORT_MODULE5(tmp_name_name_703, tmp_globals_name_703, tmp_locals_name_703, tmp_fromlist_name_703, tmp_level_name_703);
        if (tmp_import_name_from_1059 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1383;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1059)) {
           tmp_assign_source_1246 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1059,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VyboryMosIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1246 = IMPORT_NAME(tmp_import_name_from_1059, const_str_plain_VyboryMosIE);
        }

        Py_DECREF(tmp_import_name_from_1059);
        if (tmp_assign_source_1246 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1383;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VyboryMosIE, tmp_assign_source_1246);
    }
    {
        PyObject *tmp_assign_source_1247;
        PyObject *tmp_import_name_from_1060;
        PyObject *tmp_name_name_704;
        PyObject *tmp_globals_name_704;
        PyObject *tmp_locals_name_704;
        PyObject *tmp_fromlist_name_704;
        PyObject *tmp_level_name_704;
        tmp_name_name_704 = const_str_plain_vzaar;
        tmp_globals_name_704 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_704 = Py_None;
        tmp_fromlist_name_704 = const_tuple_str_plain_VzaarIE_tuple;
        tmp_level_name_704 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1384;
        tmp_import_name_from_1060 = IMPORT_MODULE5(tmp_name_name_704, tmp_globals_name_704, tmp_locals_name_704, tmp_fromlist_name_704, tmp_level_name_704);
        if (tmp_import_name_from_1060 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1384;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1060)) {
           tmp_assign_source_1247 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1060,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VzaarIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1247 = IMPORT_NAME(tmp_import_name_from_1060, const_str_plain_VzaarIE);
        }

        Py_DECREF(tmp_import_name_from_1060);
        if (tmp_assign_source_1247 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1384;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VzaarIE, tmp_assign_source_1247);
    }
    {
        PyObject *tmp_assign_source_1248;
        PyObject *tmp_import_name_from_1061;
        PyObject *tmp_name_name_705;
        PyObject *tmp_globals_name_705;
        PyObject *tmp_locals_name_705;
        PyObject *tmp_fromlist_name_705;
        PyObject *tmp_level_name_705;
        tmp_name_name_705 = const_str_plain_wakanim;
        tmp_globals_name_705 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_705 = Py_None;
        tmp_fromlist_name_705 = const_tuple_str_plain_WakanimIE_tuple;
        tmp_level_name_705 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1385;
        tmp_import_name_from_1061 = IMPORT_MODULE5(tmp_name_name_705, tmp_globals_name_705, tmp_locals_name_705, tmp_fromlist_name_705, tmp_level_name_705);
        if (tmp_import_name_from_1061 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1385;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1061)) {
           tmp_assign_source_1248 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1061,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WakanimIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1248 = IMPORT_NAME(tmp_import_name_from_1061, const_str_plain_WakanimIE);
        }

        Py_DECREF(tmp_import_name_from_1061);
        if (tmp_assign_source_1248 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1385;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WakanimIE, tmp_assign_source_1248);
    }
    {
        PyObject *tmp_assign_source_1249;
        PyObject *tmp_import_name_from_1062;
        PyObject *tmp_name_name_706;
        PyObject *tmp_globals_name_706;
        PyObject *tmp_locals_name_706;
        PyObject *tmp_fromlist_name_706;
        PyObject *tmp_level_name_706;
        tmp_name_name_706 = const_str_plain_walla;
        tmp_globals_name_706 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_706 = Py_None;
        tmp_fromlist_name_706 = const_tuple_str_plain_WallaIE_tuple;
        tmp_level_name_706 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1386;
        tmp_import_name_from_1062 = IMPORT_MODULE5(tmp_name_name_706, tmp_globals_name_706, tmp_locals_name_706, tmp_fromlist_name_706, tmp_level_name_706);
        if (tmp_import_name_from_1062 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1386;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1062)) {
           tmp_assign_source_1249 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1062,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WallaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1249 = IMPORT_NAME(tmp_import_name_from_1062, const_str_plain_WallaIE);
        }

        Py_DECREF(tmp_import_name_from_1062);
        if (tmp_assign_source_1249 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1386;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WallaIE, tmp_assign_source_1249);
    }
    {
        PyObject *tmp_assign_source_1250;
        PyObject *tmp_name_name_707;
        PyObject *tmp_globals_name_707;
        PyObject *tmp_locals_name_707;
        PyObject *tmp_fromlist_name_707;
        PyObject *tmp_level_name_707;
        tmp_name_name_707 = const_str_plain_washingtonpost;
        tmp_globals_name_707 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_707 = Py_None;
        tmp_fromlist_name_707 = const_tuple_str_plain_WashingtonPostIE_str_plain_WashingtonPostArticleIE_tuple;
        tmp_level_name_707 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1387;
        tmp_assign_source_1250 = IMPORT_MODULE5(tmp_name_name_707, tmp_globals_name_707, tmp_locals_name_707, tmp_fromlist_name_707, tmp_level_name_707);
        if (tmp_assign_source_1250 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1387;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_185__module == NULL);
        tmp_import_from_185__module = tmp_assign_source_1250;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1251;
        PyObject *tmp_import_name_from_1063;
        CHECK_OBJECT(tmp_import_from_185__module);
        tmp_import_name_from_1063 = tmp_import_from_185__module;
        if (PyModule_Check(tmp_import_name_from_1063)) {
           tmp_assign_source_1251 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1063,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WashingtonPostIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1251 = IMPORT_NAME(tmp_import_name_from_1063, const_str_plain_WashingtonPostIE);
        }

        if (tmp_assign_source_1251 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1387;

            goto try_except_handler_185;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WashingtonPostIE, tmp_assign_source_1251);
    }
    {
        PyObject *tmp_assign_source_1252;
        PyObject *tmp_import_name_from_1064;
        CHECK_OBJECT(tmp_import_from_185__module);
        tmp_import_name_from_1064 = tmp_import_from_185__module;
        if (PyModule_Check(tmp_import_name_from_1064)) {
           tmp_assign_source_1252 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1064,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WashingtonPostArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1252 = IMPORT_NAME(tmp_import_name_from_1064, const_str_plain_WashingtonPostArticleIE);
        }

        if (tmp_assign_source_1252 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1387;

            goto try_except_handler_185;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WashingtonPostArticleIE, tmp_assign_source_1252);
    }
    goto try_end_185;
    // Exception handler code:
    try_except_handler_185:;
    exception_keeper_type_185 = exception_type;
    exception_keeper_value_185 = exception_value;
    exception_keeper_tb_185 = exception_tb;
    exception_keeper_lineno_185 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_185__module);
    Py_DECREF(tmp_import_from_185__module);
    tmp_import_from_185__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_185;
    exception_value = exception_keeper_value_185;
    exception_tb = exception_keeper_tb_185;
    exception_lineno = exception_keeper_lineno_185;

    goto frame_exception_exit_1;
    // End of try:
    try_end_185:;
    CHECK_OBJECT(tmp_import_from_185__module);
    Py_DECREF(tmp_import_from_185__module);
    tmp_import_from_185__module = NULL;

    {
        PyObject *tmp_assign_source_1253;
        PyObject *tmp_import_name_from_1065;
        PyObject *tmp_name_name_708;
        PyObject *tmp_globals_name_708;
        PyObject *tmp_locals_name_708;
        PyObject *tmp_fromlist_name_708;
        PyObject *tmp_level_name_708;
        tmp_name_name_708 = const_str_plain_wat;
        tmp_globals_name_708 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_708 = Py_None;
        tmp_fromlist_name_708 = const_tuple_str_plain_WatIE_tuple;
        tmp_level_name_708 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1391;
        tmp_import_name_from_1065 = IMPORT_MODULE5(tmp_name_name_708, tmp_globals_name_708, tmp_locals_name_708, tmp_fromlist_name_708, tmp_level_name_708);
        if (tmp_import_name_from_1065 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1391;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1065)) {
           tmp_assign_source_1253 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1065,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WatIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1253 = IMPORT_NAME(tmp_import_name_from_1065, const_str_plain_WatIE);
        }

        Py_DECREF(tmp_import_name_from_1065);
        if (tmp_assign_source_1253 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1391;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WatIE, tmp_assign_source_1253);
    }
    {
        PyObject *tmp_assign_source_1254;
        PyObject *tmp_import_name_from_1066;
        PyObject *tmp_name_name_709;
        PyObject *tmp_globals_name_709;
        PyObject *tmp_locals_name_709;
        PyObject *tmp_fromlist_name_709;
        PyObject *tmp_level_name_709;
        tmp_name_name_709 = const_str_plain_watchbox;
        tmp_globals_name_709 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_709 = Py_None;
        tmp_fromlist_name_709 = const_tuple_str_plain_WatchBoxIE_tuple;
        tmp_level_name_709 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1392;
        tmp_import_name_from_1066 = IMPORT_MODULE5(tmp_name_name_709, tmp_globals_name_709, tmp_locals_name_709, tmp_fromlist_name_709, tmp_level_name_709);
        if (tmp_import_name_from_1066 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1392;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1066)) {
           tmp_assign_source_1254 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1066,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WatchBoxIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1254 = IMPORT_NAME(tmp_import_name_from_1066, const_str_plain_WatchBoxIE);
        }

        Py_DECREF(tmp_import_name_from_1066);
        if (tmp_assign_source_1254 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1392;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WatchBoxIE, tmp_assign_source_1254);
    }
    {
        PyObject *tmp_assign_source_1255;
        PyObject *tmp_import_name_from_1067;
        PyObject *tmp_name_name_710;
        PyObject *tmp_globals_name_710;
        PyObject *tmp_locals_name_710;
        PyObject *tmp_fromlist_name_710;
        PyObject *tmp_level_name_710;
        tmp_name_name_710 = const_str_plain_watchindianporn;
        tmp_globals_name_710 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_710 = Py_None;
        tmp_fromlist_name_710 = const_tuple_str_plain_WatchIndianPornIE_tuple;
        tmp_level_name_710 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1393;
        tmp_import_name_from_1067 = IMPORT_MODULE5(tmp_name_name_710, tmp_globals_name_710, tmp_locals_name_710, tmp_fromlist_name_710, tmp_level_name_710);
        if (tmp_import_name_from_1067 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1393;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1067)) {
           tmp_assign_source_1255 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1067,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WatchIndianPornIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1255 = IMPORT_NAME(tmp_import_name_from_1067, const_str_plain_WatchIndianPornIE);
        }

        Py_DECREF(tmp_import_name_from_1067);
        if (tmp_assign_source_1255 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1393;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WatchIndianPornIE, tmp_assign_source_1255);
    }
    {
        PyObject *tmp_assign_source_1256;
        PyObject *tmp_name_name_711;
        PyObject *tmp_globals_name_711;
        PyObject *tmp_locals_name_711;
        PyObject *tmp_fromlist_name_711;
        PyObject *tmp_level_name_711;
        tmp_name_name_711 = const_str_plain_wdr;
        tmp_globals_name_711 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_711 = Py_None;
        tmp_fromlist_name_711 = const_tuple_864b2d6549b75a181d06495da4250c25_tuple;
        tmp_level_name_711 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1394;
        tmp_assign_source_1256 = IMPORT_MODULE5(tmp_name_name_711, tmp_globals_name_711, tmp_locals_name_711, tmp_fromlist_name_711, tmp_level_name_711);
        if (tmp_assign_source_1256 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1394;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_186__module == NULL);
        tmp_import_from_186__module = tmp_assign_source_1256;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1257;
        PyObject *tmp_import_name_from_1068;
        CHECK_OBJECT(tmp_import_from_186__module);
        tmp_import_name_from_1068 = tmp_import_from_186__module;
        if (PyModule_Check(tmp_import_name_from_1068)) {
           tmp_assign_source_1257 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1068,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WDRIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1257 = IMPORT_NAME(tmp_import_name_from_1068, const_str_plain_WDRIE);
        }

        if (tmp_assign_source_1257 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1394;

            goto try_except_handler_186;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WDRIE, tmp_assign_source_1257);
    }
    {
        PyObject *tmp_assign_source_1258;
        PyObject *tmp_import_name_from_1069;
        CHECK_OBJECT(tmp_import_from_186__module);
        tmp_import_name_from_1069 = tmp_import_from_186__module;
        if (PyModule_Check(tmp_import_name_from_1069)) {
           tmp_assign_source_1258 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1069,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WDRPageIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1258 = IMPORT_NAME(tmp_import_name_from_1069, const_str_plain_WDRPageIE);
        }

        if (tmp_assign_source_1258 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1394;

            goto try_except_handler_186;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WDRPageIE, tmp_assign_source_1258);
    }
    {
        PyObject *tmp_assign_source_1259;
        PyObject *tmp_import_name_from_1070;
        CHECK_OBJECT(tmp_import_from_186__module);
        tmp_import_name_from_1070 = tmp_import_from_186__module;
        if (PyModule_Check(tmp_import_name_from_1070)) {
           tmp_assign_source_1259 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1070,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WDRElefantIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1259 = IMPORT_NAME(tmp_import_name_from_1070, const_str_plain_WDRElefantIE);
        }

        if (tmp_assign_source_1259 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1394;

            goto try_except_handler_186;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WDRElefantIE, tmp_assign_source_1259);
    }
    {
        PyObject *tmp_assign_source_1260;
        PyObject *tmp_import_name_from_1071;
        CHECK_OBJECT(tmp_import_from_186__module);
        tmp_import_name_from_1071 = tmp_import_from_186__module;
        if (PyModule_Check(tmp_import_name_from_1071)) {
           tmp_assign_source_1260 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1071,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WDRMobileIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1260 = IMPORT_NAME(tmp_import_name_from_1071, const_str_plain_WDRMobileIE);
        }

        if (tmp_assign_source_1260 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1394;

            goto try_except_handler_186;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WDRMobileIE, tmp_assign_source_1260);
    }
    goto try_end_186;
    // Exception handler code:
    try_except_handler_186:;
    exception_keeper_type_186 = exception_type;
    exception_keeper_value_186 = exception_value;
    exception_keeper_tb_186 = exception_tb;
    exception_keeper_lineno_186 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_186__module);
    Py_DECREF(tmp_import_from_186__module);
    tmp_import_from_186__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_186;
    exception_value = exception_keeper_value_186;
    exception_tb = exception_keeper_tb_186;
    exception_lineno = exception_keeper_lineno_186;

    goto frame_exception_exit_1;
    // End of try:
    try_end_186:;
    CHECK_OBJECT(tmp_import_from_186__module);
    Py_DECREF(tmp_import_from_186__module);
    tmp_import_from_186__module = NULL;

    {
        PyObject *tmp_assign_source_1261;
        PyObject *tmp_name_name_712;
        PyObject *tmp_globals_name_712;
        PyObject *tmp_locals_name_712;
        PyObject *tmp_fromlist_name_712;
        PyObject *tmp_level_name_712;
        tmp_name_name_712 = const_str_plain_webcaster;
        tmp_globals_name_712 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_712 = Py_None;
        tmp_fromlist_name_712 = const_tuple_str_plain_WebcasterIE_str_plain_WebcasterFeedIE_tuple;
        tmp_level_name_712 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1400;
        tmp_assign_source_1261 = IMPORT_MODULE5(tmp_name_name_712, tmp_globals_name_712, tmp_locals_name_712, tmp_fromlist_name_712, tmp_level_name_712);
        if (tmp_assign_source_1261 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1400;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_187__module == NULL);
        tmp_import_from_187__module = tmp_assign_source_1261;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1262;
        PyObject *tmp_import_name_from_1072;
        CHECK_OBJECT(tmp_import_from_187__module);
        tmp_import_name_from_1072 = tmp_import_from_187__module;
        if (PyModule_Check(tmp_import_name_from_1072)) {
           tmp_assign_source_1262 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1072,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WebcasterIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1262 = IMPORT_NAME(tmp_import_name_from_1072, const_str_plain_WebcasterIE);
        }

        if (tmp_assign_source_1262 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1400;

            goto try_except_handler_187;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WebcasterIE, tmp_assign_source_1262);
    }
    {
        PyObject *tmp_assign_source_1263;
        PyObject *tmp_import_name_from_1073;
        CHECK_OBJECT(tmp_import_from_187__module);
        tmp_import_name_from_1073 = tmp_import_from_187__module;
        if (PyModule_Check(tmp_import_name_from_1073)) {
           tmp_assign_source_1263 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1073,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WebcasterFeedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1263 = IMPORT_NAME(tmp_import_name_from_1073, const_str_plain_WebcasterFeedIE);
        }

        if (tmp_assign_source_1263 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1400;

            goto try_except_handler_187;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WebcasterFeedIE, tmp_assign_source_1263);
    }
    goto try_end_187;
    // Exception handler code:
    try_except_handler_187:;
    exception_keeper_type_187 = exception_type;
    exception_keeper_value_187 = exception_value;
    exception_keeper_tb_187 = exception_tb;
    exception_keeper_lineno_187 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_187__module);
    Py_DECREF(tmp_import_from_187__module);
    tmp_import_from_187__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_187;
    exception_value = exception_keeper_value_187;
    exception_tb = exception_keeper_tb_187;
    exception_lineno = exception_keeper_lineno_187;

    goto frame_exception_exit_1;
    // End of try:
    try_end_187:;
    CHECK_OBJECT(tmp_import_from_187__module);
    Py_DECREF(tmp_import_from_187__module);
    tmp_import_from_187__module = NULL;

    {
        PyObject *tmp_assign_source_1264;
        PyObject *tmp_name_name_713;
        PyObject *tmp_globals_name_713;
        PyObject *tmp_locals_name_713;
        PyObject *tmp_fromlist_name_713;
        PyObject *tmp_level_name_713;
        tmp_name_name_713 = const_str_plain_webofstories;
        tmp_globals_name_713 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_713 = Py_None;
        tmp_fromlist_name_713 = const_tuple_str_plain_WebOfStoriesIE_str_plain_WebOfStoriesPlaylistIE_tuple;
        tmp_level_name_713 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1404;
        tmp_assign_source_1264 = IMPORT_MODULE5(tmp_name_name_713, tmp_globals_name_713, tmp_locals_name_713, tmp_fromlist_name_713, tmp_level_name_713);
        if (tmp_assign_source_1264 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1404;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_188__module == NULL);
        tmp_import_from_188__module = tmp_assign_source_1264;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1265;
        PyObject *tmp_import_name_from_1074;
        CHECK_OBJECT(tmp_import_from_188__module);
        tmp_import_name_from_1074 = tmp_import_from_188__module;
        if (PyModule_Check(tmp_import_name_from_1074)) {
           tmp_assign_source_1265 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1074,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WebOfStoriesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1265 = IMPORT_NAME(tmp_import_name_from_1074, const_str_plain_WebOfStoriesIE);
        }

        if (tmp_assign_source_1265 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1404;

            goto try_except_handler_188;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WebOfStoriesIE, tmp_assign_source_1265);
    }
    {
        PyObject *tmp_assign_source_1266;
        PyObject *tmp_import_name_from_1075;
        CHECK_OBJECT(tmp_import_from_188__module);
        tmp_import_name_from_1075 = tmp_import_from_188__module;
        if (PyModule_Check(tmp_import_name_from_1075)) {
           tmp_assign_source_1266 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1075,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WebOfStoriesPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1266 = IMPORT_NAME(tmp_import_name_from_1075, const_str_plain_WebOfStoriesPlaylistIE);
        }

        if (tmp_assign_source_1266 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1404;

            goto try_except_handler_188;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WebOfStoriesPlaylistIE, tmp_assign_source_1266);
    }
    goto try_end_188;
    // Exception handler code:
    try_except_handler_188:;
    exception_keeper_type_188 = exception_type;
    exception_keeper_value_188 = exception_value;
    exception_keeper_tb_188 = exception_tb;
    exception_keeper_lineno_188 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_188__module);
    Py_DECREF(tmp_import_from_188__module);
    tmp_import_from_188__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_188;
    exception_value = exception_keeper_value_188;
    exception_tb = exception_keeper_tb_188;
    exception_lineno = exception_keeper_lineno_188;

    goto frame_exception_exit_1;
    // End of try:
    try_end_188:;
    CHECK_OBJECT(tmp_import_from_188__module);
    Py_DECREF(tmp_import_from_188__module);
    tmp_import_from_188__module = NULL;

    {
        PyObject *tmp_assign_source_1267;
        PyObject *tmp_name_name_714;
        PyObject *tmp_globals_name_714;
        PyObject *tmp_locals_name_714;
        PyObject *tmp_fromlist_name_714;
        PyObject *tmp_level_name_714;
        tmp_name_name_714 = const_str_plain_weibo;
        tmp_globals_name_714 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_714 = Py_None;
        tmp_fromlist_name_714 = const_tuple_str_plain_WeiboIE_str_plain_WeiboMobileIE_tuple;
        tmp_level_name_714 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1408;
        tmp_assign_source_1267 = IMPORT_MODULE5(tmp_name_name_714, tmp_globals_name_714, tmp_locals_name_714, tmp_fromlist_name_714, tmp_level_name_714);
        if (tmp_assign_source_1267 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1408;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_189__module == NULL);
        tmp_import_from_189__module = tmp_assign_source_1267;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1268;
        PyObject *tmp_import_name_from_1076;
        CHECK_OBJECT(tmp_import_from_189__module);
        tmp_import_name_from_1076 = tmp_import_from_189__module;
        if (PyModule_Check(tmp_import_name_from_1076)) {
           tmp_assign_source_1268 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1076,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WeiboIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1268 = IMPORT_NAME(tmp_import_name_from_1076, const_str_plain_WeiboIE);
        }

        if (tmp_assign_source_1268 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1408;

            goto try_except_handler_189;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WeiboIE, tmp_assign_source_1268);
    }
    {
        PyObject *tmp_assign_source_1269;
        PyObject *tmp_import_name_from_1077;
        CHECK_OBJECT(tmp_import_from_189__module);
        tmp_import_name_from_1077 = tmp_import_from_189__module;
        if (PyModule_Check(tmp_import_name_from_1077)) {
           tmp_assign_source_1269 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1077,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WeiboMobileIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1269 = IMPORT_NAME(tmp_import_name_from_1077, const_str_plain_WeiboMobileIE);
        }

        if (tmp_assign_source_1269 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1408;

            goto try_except_handler_189;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WeiboMobileIE, tmp_assign_source_1269);
    }
    goto try_end_189;
    // Exception handler code:
    try_except_handler_189:;
    exception_keeper_type_189 = exception_type;
    exception_keeper_value_189 = exception_value;
    exception_keeper_tb_189 = exception_tb;
    exception_keeper_lineno_189 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_189__module);
    Py_DECREF(tmp_import_from_189__module);
    tmp_import_from_189__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_189;
    exception_value = exception_keeper_value_189;
    exception_tb = exception_keeper_tb_189;
    exception_lineno = exception_keeper_lineno_189;

    goto frame_exception_exit_1;
    // End of try:
    try_end_189:;
    CHECK_OBJECT(tmp_import_from_189__module);
    Py_DECREF(tmp_import_from_189__module);
    tmp_import_from_189__module = NULL;

    {
        PyObject *tmp_assign_source_1270;
        PyObject *tmp_import_name_from_1078;
        PyObject *tmp_name_name_715;
        PyObject *tmp_globals_name_715;
        PyObject *tmp_locals_name_715;
        PyObject *tmp_fromlist_name_715;
        PyObject *tmp_level_name_715;
        tmp_name_name_715 = const_str_plain_weiqitv;
        tmp_globals_name_715 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_715 = Py_None;
        tmp_fromlist_name_715 = const_tuple_str_plain_WeiqiTVIE_tuple;
        tmp_level_name_715 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1412;
        tmp_import_name_from_1078 = IMPORT_MODULE5(tmp_name_name_715, tmp_globals_name_715, tmp_locals_name_715, tmp_fromlist_name_715, tmp_level_name_715);
        if (tmp_import_name_from_1078 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1412;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1078)) {
           tmp_assign_source_1270 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1078,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WeiqiTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1270 = IMPORT_NAME(tmp_import_name_from_1078, const_str_plain_WeiqiTVIE);
        }

        Py_DECREF(tmp_import_name_from_1078);
        if (tmp_assign_source_1270 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1412;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WeiqiTVIE, tmp_assign_source_1270);
    }
    {
        PyObject *tmp_assign_source_1271;
        PyObject *tmp_import_name_from_1079;
        PyObject *tmp_name_name_716;
        PyObject *tmp_globals_name_716;
        PyObject *tmp_locals_name_716;
        PyObject *tmp_fromlist_name_716;
        PyObject *tmp_level_name_716;
        tmp_name_name_716 = const_str_plain_wistia;
        tmp_globals_name_716 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_716 = Py_None;
        tmp_fromlist_name_716 = const_tuple_str_plain_WistiaIE_tuple;
        tmp_level_name_716 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1413;
        tmp_import_name_from_1079 = IMPORT_MODULE5(tmp_name_name_716, tmp_globals_name_716, tmp_locals_name_716, tmp_fromlist_name_716, tmp_level_name_716);
        if (tmp_import_name_from_1079 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1413;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1079)) {
           tmp_assign_source_1271 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1079,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WistiaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1271 = IMPORT_NAME(tmp_import_name_from_1079, const_str_plain_WistiaIE);
        }

        Py_DECREF(tmp_import_name_from_1079);
        if (tmp_assign_source_1271 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1413;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WistiaIE, tmp_assign_source_1271);
    }
    {
        PyObject *tmp_assign_source_1272;
        PyObject *tmp_import_name_from_1080;
        PyObject *tmp_name_name_717;
        PyObject *tmp_globals_name_717;
        PyObject *tmp_locals_name_717;
        PyObject *tmp_fromlist_name_717;
        PyObject *tmp_level_name_717;
        tmp_name_name_717 = const_str_plain_worldstarhiphop;
        tmp_globals_name_717 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_717 = Py_None;
        tmp_fromlist_name_717 = const_tuple_str_plain_WorldStarHipHopIE_tuple;
        tmp_level_name_717 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1414;
        tmp_import_name_from_1080 = IMPORT_MODULE5(tmp_name_name_717, tmp_globals_name_717, tmp_locals_name_717, tmp_fromlist_name_717, tmp_level_name_717);
        if (tmp_import_name_from_1080 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1414;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1080)) {
           tmp_assign_source_1272 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1080,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WorldStarHipHopIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1272 = IMPORT_NAME(tmp_import_name_from_1080, const_str_plain_WorldStarHipHopIE);
        }

        Py_DECREF(tmp_import_name_from_1080);
        if (tmp_assign_source_1272 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1414;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WorldStarHipHopIE, tmp_assign_source_1272);
    }
    {
        PyObject *tmp_assign_source_1273;
        PyObject *tmp_name_name_718;
        PyObject *tmp_globals_name_718;
        PyObject *tmp_locals_name_718;
        PyObject *tmp_fromlist_name_718;
        PyObject *tmp_level_name_718;
        tmp_name_name_718 = const_str_plain_wsj;
        tmp_globals_name_718 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_718 = Py_None;
        tmp_fromlist_name_718 = const_tuple_str_plain_WSJIE_str_plain_WSJArticleIE_tuple;
        tmp_level_name_718 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1415;
        tmp_assign_source_1273 = IMPORT_MODULE5(tmp_name_name_718, tmp_globals_name_718, tmp_locals_name_718, tmp_fromlist_name_718, tmp_level_name_718);
        if (tmp_assign_source_1273 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1415;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_190__module == NULL);
        tmp_import_from_190__module = tmp_assign_source_1273;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1274;
        PyObject *tmp_import_name_from_1081;
        CHECK_OBJECT(tmp_import_from_190__module);
        tmp_import_name_from_1081 = tmp_import_from_190__module;
        if (PyModule_Check(tmp_import_name_from_1081)) {
           tmp_assign_source_1274 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1081,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WSJIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1274 = IMPORT_NAME(tmp_import_name_from_1081, const_str_plain_WSJIE);
        }

        if (tmp_assign_source_1274 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1415;

            goto try_except_handler_190;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WSJIE, tmp_assign_source_1274);
    }
    {
        PyObject *tmp_assign_source_1275;
        PyObject *tmp_import_name_from_1082;
        CHECK_OBJECT(tmp_import_from_190__module);
        tmp_import_name_from_1082 = tmp_import_from_190__module;
        if (PyModule_Check(tmp_import_name_from_1082)) {
           tmp_assign_source_1275 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1082,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WSJArticleIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1275 = IMPORT_NAME(tmp_import_name_from_1082, const_str_plain_WSJArticleIE);
        }

        if (tmp_assign_source_1275 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1415;

            goto try_except_handler_190;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WSJArticleIE, tmp_assign_source_1275);
    }
    goto try_end_190;
    // Exception handler code:
    try_except_handler_190:;
    exception_keeper_type_190 = exception_type;
    exception_keeper_value_190 = exception_value;
    exception_keeper_tb_190 = exception_tb;
    exception_keeper_lineno_190 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_190__module);
    Py_DECREF(tmp_import_from_190__module);
    tmp_import_from_190__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_190;
    exception_value = exception_keeper_value_190;
    exception_tb = exception_keeper_tb_190;
    exception_lineno = exception_keeper_lineno_190;

    goto frame_exception_exit_1;
    // End of try:
    try_end_190:;
    CHECK_OBJECT(tmp_import_from_190__module);
    Py_DECREF(tmp_import_from_190__module);
    tmp_import_from_190__module = NULL;

    {
        PyObject *tmp_assign_source_1276;
        PyObject *tmp_import_name_from_1083;
        PyObject *tmp_name_name_719;
        PyObject *tmp_globals_name_719;
        PyObject *tmp_locals_name_719;
        PyObject *tmp_fromlist_name_719;
        PyObject *tmp_level_name_719;
        tmp_name_name_719 = const_str_plain_wwe;
        tmp_globals_name_719 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_719 = Py_None;
        tmp_fromlist_name_719 = const_tuple_str_plain_WWEIE_tuple;
        tmp_level_name_719 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1419;
        tmp_import_name_from_1083 = IMPORT_MODULE5(tmp_name_name_719, tmp_globals_name_719, tmp_locals_name_719, tmp_fromlist_name_719, tmp_level_name_719);
        if (tmp_import_name_from_1083 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1419;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1083)) {
           tmp_assign_source_1276 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1083,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WWEIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1276 = IMPORT_NAME(tmp_import_name_from_1083, const_str_plain_WWEIE);
        }

        Py_DECREF(tmp_import_name_from_1083);
        if (tmp_assign_source_1276 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1419;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WWEIE, tmp_assign_source_1276);
    }
    {
        PyObject *tmp_assign_source_1277;
        PyObject *tmp_import_name_from_1084;
        PyObject *tmp_name_name_720;
        PyObject *tmp_globals_name_720;
        PyObject *tmp_locals_name_720;
        PyObject *tmp_fromlist_name_720;
        PyObject *tmp_level_name_720;
        tmp_name_name_720 = const_str_plain_xbef;
        tmp_globals_name_720 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_720 = Py_None;
        tmp_fromlist_name_720 = const_tuple_str_plain_XBefIE_tuple;
        tmp_level_name_720 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1420;
        tmp_import_name_from_1084 = IMPORT_MODULE5(tmp_name_name_720, tmp_globals_name_720, tmp_locals_name_720, tmp_fromlist_name_720, tmp_level_name_720);
        if (tmp_import_name_from_1084 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1420;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1084)) {
           tmp_assign_source_1277 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1084,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XBefIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1277 = IMPORT_NAME(tmp_import_name_from_1084, const_str_plain_XBefIE);
        }

        Py_DECREF(tmp_import_name_from_1084);
        if (tmp_assign_source_1277 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1420;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XBefIE, tmp_assign_source_1277);
    }
    {
        PyObject *tmp_assign_source_1278;
        PyObject *tmp_import_name_from_1085;
        PyObject *tmp_name_name_721;
        PyObject *tmp_globals_name_721;
        PyObject *tmp_locals_name_721;
        PyObject *tmp_fromlist_name_721;
        PyObject *tmp_level_name_721;
        tmp_name_name_721 = const_str_plain_xboxclips;
        tmp_globals_name_721 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_721 = Py_None;
        tmp_fromlist_name_721 = const_tuple_str_plain_XboxClipsIE_tuple;
        tmp_level_name_721 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1421;
        tmp_import_name_from_1085 = IMPORT_MODULE5(tmp_name_name_721, tmp_globals_name_721, tmp_locals_name_721, tmp_fromlist_name_721, tmp_level_name_721);
        if (tmp_import_name_from_1085 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1421;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1085)) {
           tmp_assign_source_1278 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1085,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XboxClipsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1278 = IMPORT_NAME(tmp_import_name_from_1085, const_str_plain_XboxClipsIE);
        }

        Py_DECREF(tmp_import_name_from_1085);
        if (tmp_assign_source_1278 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1421;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XboxClipsIE, tmp_assign_source_1278);
    }
    {
        PyObject *tmp_assign_source_1279;
        PyObject *tmp_import_name_from_1086;
        PyObject *tmp_name_name_722;
        PyObject *tmp_globals_name_722;
        PyObject *tmp_locals_name_722;
        PyObject *tmp_fromlist_name_722;
        PyObject *tmp_level_name_722;
        tmp_name_name_722 = const_str_plain_xfileshare;
        tmp_globals_name_722 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_722 = Py_None;
        tmp_fromlist_name_722 = const_tuple_str_plain_XFileShareIE_tuple;
        tmp_level_name_722 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1422;
        tmp_import_name_from_1086 = IMPORT_MODULE5(tmp_name_name_722, tmp_globals_name_722, tmp_locals_name_722, tmp_fromlist_name_722, tmp_level_name_722);
        if (tmp_import_name_from_1086 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1422;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1086)) {
           tmp_assign_source_1279 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1086,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XFileShareIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1279 = IMPORT_NAME(tmp_import_name_from_1086, const_str_plain_XFileShareIE);
        }

        Py_DECREF(tmp_import_name_from_1086);
        if (tmp_assign_source_1279 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1422;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XFileShareIE, tmp_assign_source_1279);
    }
    {
        PyObject *tmp_assign_source_1280;
        PyObject *tmp_name_name_723;
        PyObject *tmp_globals_name_723;
        PyObject *tmp_locals_name_723;
        PyObject *tmp_fromlist_name_723;
        PyObject *tmp_level_name_723;
        tmp_name_name_723 = const_str_plain_xhamster;
        tmp_globals_name_723 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_723 = Py_None;
        tmp_fromlist_name_723 = const_tuple_ece414e04b68e727a8bdc98c860e1642_tuple;
        tmp_level_name_723 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1423;
        tmp_assign_source_1280 = IMPORT_MODULE5(tmp_name_name_723, tmp_globals_name_723, tmp_locals_name_723, tmp_fromlist_name_723, tmp_level_name_723);
        if (tmp_assign_source_1280 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1423;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_191__module == NULL);
        tmp_import_from_191__module = tmp_assign_source_1280;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1281;
        PyObject *tmp_import_name_from_1087;
        CHECK_OBJECT(tmp_import_from_191__module);
        tmp_import_name_from_1087 = tmp_import_from_191__module;
        if (PyModule_Check(tmp_import_name_from_1087)) {
           tmp_assign_source_1281 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1087,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XHamsterIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1281 = IMPORT_NAME(tmp_import_name_from_1087, const_str_plain_XHamsterIE);
        }

        if (tmp_assign_source_1281 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1423;

            goto try_except_handler_191;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XHamsterIE, tmp_assign_source_1281);
    }
    {
        PyObject *tmp_assign_source_1282;
        PyObject *tmp_import_name_from_1088;
        CHECK_OBJECT(tmp_import_from_191__module);
        tmp_import_name_from_1088 = tmp_import_from_191__module;
        if (PyModule_Check(tmp_import_name_from_1088)) {
           tmp_assign_source_1282 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1088,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XHamsterEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1282 = IMPORT_NAME(tmp_import_name_from_1088, const_str_plain_XHamsterEmbedIE);
        }

        if (tmp_assign_source_1282 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1423;

            goto try_except_handler_191;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XHamsterEmbedIE, tmp_assign_source_1282);
    }
    {
        PyObject *tmp_assign_source_1283;
        PyObject *tmp_import_name_from_1089;
        CHECK_OBJECT(tmp_import_from_191__module);
        tmp_import_name_from_1089 = tmp_import_from_191__module;
        if (PyModule_Check(tmp_import_name_from_1089)) {
           tmp_assign_source_1283 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1089,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XHamsterUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1283 = IMPORT_NAME(tmp_import_name_from_1089, const_str_plain_XHamsterUserIE);
        }

        if (tmp_assign_source_1283 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1423;

            goto try_except_handler_191;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XHamsterUserIE, tmp_assign_source_1283);
    }
    goto try_end_191;
    // Exception handler code:
    try_except_handler_191:;
    exception_keeper_type_191 = exception_type;
    exception_keeper_value_191 = exception_value;
    exception_keeper_tb_191 = exception_tb;
    exception_keeper_lineno_191 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_191__module);
    Py_DECREF(tmp_import_from_191__module);
    tmp_import_from_191__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_191;
    exception_value = exception_keeper_value_191;
    exception_tb = exception_keeper_tb_191;
    exception_lineno = exception_keeper_lineno_191;

    goto frame_exception_exit_1;
    // End of try:
    try_end_191:;
    CHECK_OBJECT(tmp_import_from_191__module);
    Py_DECREF(tmp_import_from_191__module);
    tmp_import_from_191__module = NULL;

    {
        PyObject *tmp_assign_source_1284;
        PyObject *tmp_name_name_724;
        PyObject *tmp_globals_name_724;
        PyObject *tmp_locals_name_724;
        PyObject *tmp_fromlist_name_724;
        PyObject *tmp_level_name_724;
        tmp_name_name_724 = const_str_plain_xiami;
        tmp_globals_name_724 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_724 = Py_None;
        tmp_fromlist_name_724 = const_tuple_b5af4c6df96be599322dfab29003f618_tuple;
        tmp_level_name_724 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1428;
        tmp_assign_source_1284 = IMPORT_MODULE5(tmp_name_name_724, tmp_globals_name_724, tmp_locals_name_724, tmp_fromlist_name_724, tmp_level_name_724);
        if (tmp_assign_source_1284 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1428;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_192__module == NULL);
        tmp_import_from_192__module = tmp_assign_source_1284;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1285;
        PyObject *tmp_import_name_from_1090;
        CHECK_OBJECT(tmp_import_from_192__module);
        tmp_import_name_from_1090 = tmp_import_from_192__module;
        if (PyModule_Check(tmp_import_name_from_1090)) {
           tmp_assign_source_1285 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1090,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XiamiSongIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1285 = IMPORT_NAME(tmp_import_name_from_1090, const_str_plain_XiamiSongIE);
        }

        if (tmp_assign_source_1285 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1428;

            goto try_except_handler_192;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XiamiSongIE, tmp_assign_source_1285);
    }
    {
        PyObject *tmp_assign_source_1286;
        PyObject *tmp_import_name_from_1091;
        CHECK_OBJECT(tmp_import_from_192__module);
        tmp_import_name_from_1091 = tmp_import_from_192__module;
        if (PyModule_Check(tmp_import_name_from_1091)) {
           tmp_assign_source_1286 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1091,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XiamiAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1286 = IMPORT_NAME(tmp_import_name_from_1091, const_str_plain_XiamiAlbumIE);
        }

        if (tmp_assign_source_1286 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1428;

            goto try_except_handler_192;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XiamiAlbumIE, tmp_assign_source_1286);
    }
    {
        PyObject *tmp_assign_source_1287;
        PyObject *tmp_import_name_from_1092;
        CHECK_OBJECT(tmp_import_from_192__module);
        tmp_import_name_from_1092 = tmp_import_from_192__module;
        if (PyModule_Check(tmp_import_name_from_1092)) {
           tmp_assign_source_1287 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1092,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XiamiArtistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1287 = IMPORT_NAME(tmp_import_name_from_1092, const_str_plain_XiamiArtistIE);
        }

        if (tmp_assign_source_1287 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1428;

            goto try_except_handler_192;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XiamiArtistIE, tmp_assign_source_1287);
    }
    {
        PyObject *tmp_assign_source_1288;
        PyObject *tmp_import_name_from_1093;
        CHECK_OBJECT(tmp_import_from_192__module);
        tmp_import_name_from_1093 = tmp_import_from_192__module;
        if (PyModule_Check(tmp_import_name_from_1093)) {
           tmp_assign_source_1288 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1093,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XiamiCollectionIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1288 = IMPORT_NAME(tmp_import_name_from_1093, const_str_plain_XiamiCollectionIE);
        }

        if (tmp_assign_source_1288 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1428;

            goto try_except_handler_192;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XiamiCollectionIE, tmp_assign_source_1288);
    }
    goto try_end_192;
    // Exception handler code:
    try_except_handler_192:;
    exception_keeper_type_192 = exception_type;
    exception_keeper_value_192 = exception_value;
    exception_keeper_tb_192 = exception_tb;
    exception_keeper_lineno_192 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_192__module);
    Py_DECREF(tmp_import_from_192__module);
    tmp_import_from_192__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_192;
    exception_value = exception_keeper_value_192;
    exception_tb = exception_keeper_tb_192;
    exception_lineno = exception_keeper_lineno_192;

    goto frame_exception_exit_1;
    // End of try:
    try_end_192:;
    CHECK_OBJECT(tmp_import_from_192__module);
    Py_DECREF(tmp_import_from_192__module);
    tmp_import_from_192__module = NULL;

    {
        PyObject *tmp_assign_source_1289;
        PyObject *tmp_name_name_725;
        PyObject *tmp_globals_name_725;
        PyObject *tmp_locals_name_725;
        PyObject *tmp_fromlist_name_725;
        PyObject *tmp_level_name_725;
        tmp_name_name_725 = const_str_plain_ximalaya;
        tmp_globals_name_725 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_725 = Py_None;
        tmp_fromlist_name_725 = const_tuple_str_plain_XimalayaIE_str_plain_XimalayaAlbumIE_tuple;
        tmp_level_name_725 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1434;
        tmp_assign_source_1289 = IMPORT_MODULE5(tmp_name_name_725, tmp_globals_name_725, tmp_locals_name_725, tmp_fromlist_name_725, tmp_level_name_725);
        if (tmp_assign_source_1289 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1434;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_193__module == NULL);
        tmp_import_from_193__module = tmp_assign_source_1289;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1290;
        PyObject *tmp_import_name_from_1094;
        CHECK_OBJECT(tmp_import_from_193__module);
        tmp_import_name_from_1094 = tmp_import_from_193__module;
        if (PyModule_Check(tmp_import_name_from_1094)) {
           tmp_assign_source_1290 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1094,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XimalayaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1290 = IMPORT_NAME(tmp_import_name_from_1094, const_str_plain_XimalayaIE);
        }

        if (tmp_assign_source_1290 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1434;

            goto try_except_handler_193;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XimalayaIE, tmp_assign_source_1290);
    }
    {
        PyObject *tmp_assign_source_1291;
        PyObject *tmp_import_name_from_1095;
        CHECK_OBJECT(tmp_import_from_193__module);
        tmp_import_name_from_1095 = tmp_import_from_193__module;
        if (PyModule_Check(tmp_import_name_from_1095)) {
           tmp_assign_source_1291 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1095,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XimalayaAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1291 = IMPORT_NAME(tmp_import_name_from_1095, const_str_plain_XimalayaAlbumIE);
        }

        if (tmp_assign_source_1291 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1434;

            goto try_except_handler_193;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XimalayaAlbumIE, tmp_assign_source_1291);
    }
    goto try_end_193;
    // Exception handler code:
    try_except_handler_193:;
    exception_keeper_type_193 = exception_type;
    exception_keeper_value_193 = exception_value;
    exception_keeper_tb_193 = exception_tb;
    exception_keeper_lineno_193 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_193__module);
    Py_DECREF(tmp_import_from_193__module);
    tmp_import_from_193__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_193;
    exception_value = exception_keeper_value_193;
    exception_tb = exception_keeper_tb_193;
    exception_lineno = exception_keeper_lineno_193;

    goto frame_exception_exit_1;
    // End of try:
    try_end_193:;
    CHECK_OBJECT(tmp_import_from_193__module);
    Py_DECREF(tmp_import_from_193__module);
    tmp_import_from_193__module = NULL;

    {
        PyObject *tmp_assign_source_1292;
        PyObject *tmp_import_name_from_1096;
        PyObject *tmp_name_name_726;
        PyObject *tmp_globals_name_726;
        PyObject *tmp_locals_name_726;
        PyObject *tmp_fromlist_name_726;
        PyObject *tmp_level_name_726;
        tmp_name_name_726 = const_str_plain_xminus;
        tmp_globals_name_726 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_726 = Py_None;
        tmp_fromlist_name_726 = const_tuple_str_plain_XMinusIE_tuple;
        tmp_level_name_726 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1438;
        tmp_import_name_from_1096 = IMPORT_MODULE5(tmp_name_name_726, tmp_globals_name_726, tmp_locals_name_726, tmp_fromlist_name_726, tmp_level_name_726);
        if (tmp_import_name_from_1096 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1438;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1096)) {
           tmp_assign_source_1292 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1096,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XMinusIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1292 = IMPORT_NAME(tmp_import_name_from_1096, const_str_plain_XMinusIE);
        }

        Py_DECREF(tmp_import_name_from_1096);
        if (tmp_assign_source_1292 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1438;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XMinusIE, tmp_assign_source_1292);
    }
    {
        PyObject *tmp_assign_source_1293;
        PyObject *tmp_import_name_from_1097;
        PyObject *tmp_name_name_727;
        PyObject *tmp_globals_name_727;
        PyObject *tmp_locals_name_727;
        PyObject *tmp_fromlist_name_727;
        PyObject *tmp_level_name_727;
        tmp_name_name_727 = const_str_plain_xnxx;
        tmp_globals_name_727 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_727 = Py_None;
        tmp_fromlist_name_727 = const_tuple_str_plain_XNXXIE_tuple;
        tmp_level_name_727 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1439;
        tmp_import_name_from_1097 = IMPORT_MODULE5(tmp_name_name_727, tmp_globals_name_727, tmp_locals_name_727, tmp_fromlist_name_727, tmp_level_name_727);
        if (tmp_import_name_from_1097 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1439;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1097)) {
           tmp_assign_source_1293 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1097,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XNXXIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1293 = IMPORT_NAME(tmp_import_name_from_1097, const_str_plain_XNXXIE);
        }

        Py_DECREF(tmp_import_name_from_1097);
        if (tmp_assign_source_1293 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1439;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XNXXIE, tmp_assign_source_1293);
    }
    {
        PyObject *tmp_assign_source_1294;
        PyObject *tmp_import_name_from_1098;
        PyObject *tmp_name_name_728;
        PyObject *tmp_globals_name_728;
        PyObject *tmp_locals_name_728;
        PyObject *tmp_fromlist_name_728;
        PyObject *tmp_level_name_728;
        tmp_name_name_728 = const_str_plain_xstream;
        tmp_globals_name_728 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_728 = Py_None;
        tmp_fromlist_name_728 = const_tuple_str_plain_XstreamIE_tuple;
        tmp_level_name_728 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1440;
        tmp_import_name_from_1098 = IMPORT_MODULE5(tmp_name_name_728, tmp_globals_name_728, tmp_locals_name_728, tmp_fromlist_name_728, tmp_level_name_728);
        if (tmp_import_name_from_1098 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1440;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1098)) {
           tmp_assign_source_1294 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1098,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XstreamIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1294 = IMPORT_NAME(tmp_import_name_from_1098, const_str_plain_XstreamIE);
        }

        Py_DECREF(tmp_import_name_from_1098);
        if (tmp_assign_source_1294 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1440;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XstreamIE, tmp_assign_source_1294);
    }
    {
        PyObject *tmp_assign_source_1295;
        PyObject *tmp_name_name_729;
        PyObject *tmp_globals_name_729;
        PyObject *tmp_locals_name_729;
        PyObject *tmp_fromlist_name_729;
        PyObject *tmp_level_name_729;
        tmp_name_name_729 = const_str_plain_xtube;
        tmp_globals_name_729 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_729 = Py_None;
        tmp_fromlist_name_729 = const_tuple_str_plain_XTubeUserIE_str_plain_XTubeIE_tuple;
        tmp_level_name_729 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1441;
        tmp_assign_source_1295 = IMPORT_MODULE5(tmp_name_name_729, tmp_globals_name_729, tmp_locals_name_729, tmp_fromlist_name_729, tmp_level_name_729);
        if (tmp_assign_source_1295 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_194__module == NULL);
        tmp_import_from_194__module = tmp_assign_source_1295;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1296;
        PyObject *tmp_import_name_from_1099;
        CHECK_OBJECT(tmp_import_from_194__module);
        tmp_import_name_from_1099 = tmp_import_from_194__module;
        if (PyModule_Check(tmp_import_name_from_1099)) {
           tmp_assign_source_1296 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1099,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XTubeUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1296 = IMPORT_NAME(tmp_import_name_from_1099, const_str_plain_XTubeUserIE);
        }

        if (tmp_assign_source_1296 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto try_except_handler_194;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XTubeUserIE, tmp_assign_source_1296);
    }
    {
        PyObject *tmp_assign_source_1297;
        PyObject *tmp_import_name_from_1100;
        CHECK_OBJECT(tmp_import_from_194__module);
        tmp_import_name_from_1100 = tmp_import_from_194__module;
        if (PyModule_Check(tmp_import_name_from_1100)) {
           tmp_assign_source_1297 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1100,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1297 = IMPORT_NAME(tmp_import_name_from_1100, const_str_plain_XTubeIE);
        }

        if (tmp_assign_source_1297 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto try_except_handler_194;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XTubeIE, tmp_assign_source_1297);
    }
    goto try_end_194;
    // Exception handler code:
    try_except_handler_194:;
    exception_keeper_type_194 = exception_type;
    exception_keeper_value_194 = exception_value;
    exception_keeper_tb_194 = exception_tb;
    exception_keeper_lineno_194 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_194__module);
    Py_DECREF(tmp_import_from_194__module);
    tmp_import_from_194__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_194;
    exception_value = exception_keeper_value_194;
    exception_tb = exception_keeper_tb_194;
    exception_lineno = exception_keeper_lineno_194;

    goto frame_exception_exit_1;
    // End of try:
    try_end_194:;
    CHECK_OBJECT(tmp_import_from_194__module);
    Py_DECREF(tmp_import_from_194__module);
    tmp_import_from_194__module = NULL;

    {
        PyObject *tmp_assign_source_1298;
        PyObject *tmp_import_name_from_1101;
        PyObject *tmp_name_name_730;
        PyObject *tmp_globals_name_730;
        PyObject *tmp_locals_name_730;
        PyObject *tmp_fromlist_name_730;
        PyObject *tmp_level_name_730;
        tmp_name_name_730 = const_str_plain_xuite;
        tmp_globals_name_730 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_730 = Py_None;
        tmp_fromlist_name_730 = const_tuple_str_plain_XuiteIE_tuple;
        tmp_level_name_730 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1442;
        tmp_import_name_from_1101 = IMPORT_MODULE5(tmp_name_name_730, tmp_globals_name_730, tmp_locals_name_730, tmp_fromlist_name_730, tmp_level_name_730);
        if (tmp_import_name_from_1101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1442;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1101)) {
           tmp_assign_source_1298 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1101,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XuiteIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1298 = IMPORT_NAME(tmp_import_name_from_1101, const_str_plain_XuiteIE);
        }

        Py_DECREF(tmp_import_name_from_1101);
        if (tmp_assign_source_1298 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1442;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XuiteIE, tmp_assign_source_1298);
    }
    {
        PyObject *tmp_assign_source_1299;
        PyObject *tmp_import_name_from_1102;
        PyObject *tmp_name_name_731;
        PyObject *tmp_globals_name_731;
        PyObject *tmp_locals_name_731;
        PyObject *tmp_fromlist_name_731;
        PyObject *tmp_level_name_731;
        tmp_name_name_731 = const_str_plain_xvideos;
        tmp_globals_name_731 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_731 = Py_None;
        tmp_fromlist_name_731 = const_tuple_str_plain_XVideosIE_tuple;
        tmp_level_name_731 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1443;
        tmp_import_name_from_1102 = IMPORT_MODULE5(tmp_name_name_731, tmp_globals_name_731, tmp_locals_name_731, tmp_fromlist_name_731, tmp_level_name_731);
        if (tmp_import_name_from_1102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1443;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1102)) {
           tmp_assign_source_1299 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1102,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XVideosIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1299 = IMPORT_NAME(tmp_import_name_from_1102, const_str_plain_XVideosIE);
        }

        Py_DECREF(tmp_import_name_from_1102);
        if (tmp_assign_source_1299 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1443;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XVideosIE, tmp_assign_source_1299);
    }
    {
        PyObject *tmp_assign_source_1300;
        PyObject *tmp_import_name_from_1103;
        PyObject *tmp_name_name_732;
        PyObject *tmp_globals_name_732;
        PyObject *tmp_locals_name_732;
        PyObject *tmp_fromlist_name_732;
        PyObject *tmp_level_name_732;
        tmp_name_name_732 = const_str_plain_xxxymovies;
        tmp_globals_name_732 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_732 = Py_None;
        tmp_fromlist_name_732 = const_tuple_str_plain_XXXYMoviesIE_tuple;
        tmp_level_name_732 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1444;
        tmp_import_name_from_1103 = IMPORT_MODULE5(tmp_name_name_732, tmp_globals_name_732, tmp_locals_name_732, tmp_fromlist_name_732, tmp_level_name_732);
        if (tmp_import_name_from_1103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1444;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1103)) {
           tmp_assign_source_1300 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1103,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_XXXYMoviesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1300 = IMPORT_NAME(tmp_import_name_from_1103, const_str_plain_XXXYMoviesIE);
        }

        Py_DECREF(tmp_import_name_from_1103);
        if (tmp_assign_source_1300 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1444;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_XXXYMoviesIE, tmp_assign_source_1300);
    }
    {
        PyObject *tmp_assign_source_1301;
        PyObject *tmp_name_name_733;
        PyObject *tmp_globals_name_733;
        PyObject *tmp_locals_name_733;
        PyObject *tmp_fromlist_name_733;
        PyObject *tmp_level_name_733;
        tmp_name_name_733 = const_str_plain_yahoo;
        tmp_globals_name_733 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_733 = Py_None;
        tmp_fromlist_name_733 = const_tuple_e12de173e3791daa286ee11c5ce2f7e3_tuple;
        tmp_level_name_733 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1445;
        tmp_assign_source_1301 = IMPORT_MODULE5(tmp_name_name_733, tmp_globals_name_733, tmp_locals_name_733, tmp_fromlist_name_733, tmp_level_name_733);
        if (tmp_assign_source_1301 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1445;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_195__module == NULL);
        tmp_import_from_195__module = tmp_assign_source_1301;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1302;
        PyObject *tmp_import_name_from_1104;
        CHECK_OBJECT(tmp_import_from_195__module);
        tmp_import_name_from_1104 = tmp_import_from_195__module;
        if (PyModule_Check(tmp_import_name_from_1104)) {
           tmp_assign_source_1302 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1104,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YahooIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1302 = IMPORT_NAME(tmp_import_name_from_1104, const_str_plain_YahooIE);
        }

        if (tmp_assign_source_1302 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1445;

            goto try_except_handler_195;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YahooIE, tmp_assign_source_1302);
    }
    {
        PyObject *tmp_assign_source_1303;
        PyObject *tmp_import_name_from_1105;
        CHECK_OBJECT(tmp_import_from_195__module);
        tmp_import_name_from_1105 = tmp_import_from_195__module;
        if (PyModule_Check(tmp_import_name_from_1105)) {
           tmp_assign_source_1303 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1105,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YahooSearchIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1303 = IMPORT_NAME(tmp_import_name_from_1105, const_str_plain_YahooSearchIE);
        }

        if (tmp_assign_source_1303 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1445;

            goto try_except_handler_195;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YahooSearchIE, tmp_assign_source_1303);
    }
    {
        PyObject *tmp_assign_source_1304;
        PyObject *tmp_import_name_from_1106;
        CHECK_OBJECT(tmp_import_from_195__module);
        tmp_import_name_from_1106 = tmp_import_from_195__module;
        if (PyModule_Check(tmp_import_name_from_1106)) {
           tmp_assign_source_1304 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1106,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YahooGyaOPlayerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1304 = IMPORT_NAME(tmp_import_name_from_1106, const_str_plain_YahooGyaOPlayerIE);
        }

        if (tmp_assign_source_1304 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1445;

            goto try_except_handler_195;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YahooGyaOPlayerIE, tmp_assign_source_1304);
    }
    {
        PyObject *tmp_assign_source_1305;
        PyObject *tmp_import_name_from_1107;
        CHECK_OBJECT(tmp_import_from_195__module);
        tmp_import_name_from_1107 = tmp_import_from_195__module;
        if (PyModule_Check(tmp_import_name_from_1107)) {
           tmp_assign_source_1305 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1107,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YahooGyaOIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1305 = IMPORT_NAME(tmp_import_name_from_1107, const_str_plain_YahooGyaOIE);
        }

        if (tmp_assign_source_1305 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1445;

            goto try_except_handler_195;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YahooGyaOIE, tmp_assign_source_1305);
    }
    {
        PyObject *tmp_assign_source_1306;
        PyObject *tmp_import_name_from_1108;
        CHECK_OBJECT(tmp_import_from_195__module);
        tmp_import_name_from_1108 = tmp_import_from_195__module;
        if (PyModule_Check(tmp_import_name_from_1108)) {
           tmp_assign_source_1306 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1108,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YahooJapanNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1306 = IMPORT_NAME(tmp_import_name_from_1108, const_str_plain_YahooJapanNewsIE);
        }

        if (tmp_assign_source_1306 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1445;

            goto try_except_handler_195;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YahooJapanNewsIE, tmp_assign_source_1306);
    }
    goto try_end_195;
    // Exception handler code:
    try_except_handler_195:;
    exception_keeper_type_195 = exception_type;
    exception_keeper_value_195 = exception_value;
    exception_keeper_tb_195 = exception_tb;
    exception_keeper_lineno_195 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_195__module);
    Py_DECREF(tmp_import_from_195__module);
    tmp_import_from_195__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_195;
    exception_value = exception_keeper_value_195;
    exception_tb = exception_keeper_tb_195;
    exception_lineno = exception_keeper_lineno_195;

    goto frame_exception_exit_1;
    // End of try:
    try_end_195:;
    CHECK_OBJECT(tmp_import_from_195__module);
    Py_DECREF(tmp_import_from_195__module);
    tmp_import_from_195__module = NULL;

    {
        PyObject *tmp_assign_source_1307;
        PyObject *tmp_import_name_from_1109;
        PyObject *tmp_name_name_734;
        PyObject *tmp_globals_name_734;
        PyObject *tmp_locals_name_734;
        PyObject *tmp_fromlist_name_734;
        PyObject *tmp_level_name_734;
        tmp_name_name_734 = const_str_plain_yandexdisk;
        tmp_globals_name_734 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_734 = Py_None;
        tmp_fromlist_name_734 = const_tuple_str_plain_YandexDiskIE_tuple;
        tmp_level_name_734 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1452;
        tmp_import_name_from_1109 = IMPORT_MODULE5(tmp_name_name_734, tmp_globals_name_734, tmp_locals_name_734, tmp_fromlist_name_734, tmp_level_name_734);
        if (tmp_import_name_from_1109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1452;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1109)) {
           tmp_assign_source_1307 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1109,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YandexDiskIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1307 = IMPORT_NAME(tmp_import_name_from_1109, const_str_plain_YandexDiskIE);
        }

        Py_DECREF(tmp_import_name_from_1109);
        if (tmp_assign_source_1307 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1452;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YandexDiskIE, tmp_assign_source_1307);
    }
    {
        PyObject *tmp_assign_source_1308;
        PyObject *tmp_name_name_735;
        PyObject *tmp_globals_name_735;
        PyObject *tmp_locals_name_735;
        PyObject *tmp_fromlist_name_735;
        PyObject *tmp_level_name_735;
        tmp_name_name_735 = const_str_plain_yandexmusic;
        tmp_globals_name_735 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_735 = Py_None;
        tmp_fromlist_name_735 = const_tuple_8cfda770f0cfc21081f22c8904caa313_tuple;
        tmp_level_name_735 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1453;
        tmp_assign_source_1308 = IMPORT_MODULE5(tmp_name_name_735, tmp_globals_name_735, tmp_locals_name_735, tmp_fromlist_name_735, tmp_level_name_735);
        if (tmp_assign_source_1308 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1453;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_196__module == NULL);
        tmp_import_from_196__module = tmp_assign_source_1308;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1309;
        PyObject *tmp_import_name_from_1110;
        CHECK_OBJECT(tmp_import_from_196__module);
        tmp_import_name_from_1110 = tmp_import_from_196__module;
        if (PyModule_Check(tmp_import_name_from_1110)) {
           tmp_assign_source_1309 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1110,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YandexMusicTrackIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1309 = IMPORT_NAME(tmp_import_name_from_1110, const_str_plain_YandexMusicTrackIE);
        }

        if (tmp_assign_source_1309 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1453;

            goto try_except_handler_196;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YandexMusicTrackIE, tmp_assign_source_1309);
    }
    {
        PyObject *tmp_assign_source_1310;
        PyObject *tmp_import_name_from_1111;
        CHECK_OBJECT(tmp_import_from_196__module);
        tmp_import_name_from_1111 = tmp_import_from_196__module;
        if (PyModule_Check(tmp_import_name_from_1111)) {
           tmp_assign_source_1310 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1111,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YandexMusicAlbumIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1310 = IMPORT_NAME(tmp_import_name_from_1111, const_str_plain_YandexMusicAlbumIE);
        }

        if (tmp_assign_source_1310 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1453;

            goto try_except_handler_196;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YandexMusicAlbumIE, tmp_assign_source_1310);
    }
    {
        PyObject *tmp_assign_source_1311;
        PyObject *tmp_import_name_from_1112;
        CHECK_OBJECT(tmp_import_from_196__module);
        tmp_import_name_from_1112 = tmp_import_from_196__module;
        if (PyModule_Check(tmp_import_name_from_1112)) {
           tmp_assign_source_1311 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1112,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YandexMusicPlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1311 = IMPORT_NAME(tmp_import_name_from_1112, const_str_plain_YandexMusicPlaylistIE);
        }

        if (tmp_assign_source_1311 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1453;

            goto try_except_handler_196;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YandexMusicPlaylistIE, tmp_assign_source_1311);
    }
    goto try_end_196;
    // Exception handler code:
    try_except_handler_196:;
    exception_keeper_type_196 = exception_type;
    exception_keeper_value_196 = exception_value;
    exception_keeper_tb_196 = exception_tb;
    exception_keeper_lineno_196 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_196__module);
    Py_DECREF(tmp_import_from_196__module);
    tmp_import_from_196__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_196;
    exception_value = exception_keeper_value_196;
    exception_tb = exception_keeper_tb_196;
    exception_lineno = exception_keeper_lineno_196;

    goto frame_exception_exit_1;
    // End of try:
    try_end_196:;
    CHECK_OBJECT(tmp_import_from_196__module);
    Py_DECREF(tmp_import_from_196__module);
    tmp_import_from_196__module = NULL;

    {
        PyObject *tmp_assign_source_1312;
        PyObject *tmp_import_name_from_1113;
        PyObject *tmp_name_name_736;
        PyObject *tmp_globals_name_736;
        PyObject *tmp_locals_name_736;
        PyObject *tmp_fromlist_name_736;
        PyObject *tmp_level_name_736;
        tmp_name_name_736 = const_str_plain_yandexvideo;
        tmp_globals_name_736 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_736 = Py_None;
        tmp_fromlist_name_736 = const_tuple_str_plain_YandexVideoIE_tuple;
        tmp_level_name_736 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1458;
        tmp_import_name_from_1113 = IMPORT_MODULE5(tmp_name_name_736, tmp_globals_name_736, tmp_locals_name_736, tmp_fromlist_name_736, tmp_level_name_736);
        if (tmp_import_name_from_1113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1458;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1113)) {
           tmp_assign_source_1312 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1113,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YandexVideoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1312 = IMPORT_NAME(tmp_import_name_from_1113, const_str_plain_YandexVideoIE);
        }

        Py_DECREF(tmp_import_name_from_1113);
        if (tmp_assign_source_1312 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1458;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YandexVideoIE, tmp_assign_source_1312);
    }
    {
        PyObject *tmp_assign_source_1313;
        PyObject *tmp_import_name_from_1114;
        PyObject *tmp_name_name_737;
        PyObject *tmp_globals_name_737;
        PyObject *tmp_locals_name_737;
        PyObject *tmp_fromlist_name_737;
        PyObject *tmp_level_name_737;
        tmp_name_name_737 = const_str_plain_yapfiles;
        tmp_globals_name_737 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_737 = Py_None;
        tmp_fromlist_name_737 = const_tuple_str_plain_YapFilesIE_tuple;
        tmp_level_name_737 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1459;
        tmp_import_name_from_1114 = IMPORT_MODULE5(tmp_name_name_737, tmp_globals_name_737, tmp_locals_name_737, tmp_fromlist_name_737, tmp_level_name_737);
        if (tmp_import_name_from_1114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1459;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1114)) {
           tmp_assign_source_1313 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1114,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YapFilesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1313 = IMPORT_NAME(tmp_import_name_from_1114, const_str_plain_YapFilesIE);
        }

        Py_DECREF(tmp_import_name_from_1114);
        if (tmp_assign_source_1313 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1459;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YapFilesIE, tmp_assign_source_1313);
    }
    {
        PyObject *tmp_assign_source_1314;
        PyObject *tmp_import_name_from_1115;
        PyObject *tmp_name_name_738;
        PyObject *tmp_globals_name_738;
        PyObject *tmp_locals_name_738;
        PyObject *tmp_fromlist_name_738;
        PyObject *tmp_level_name_738;
        tmp_name_name_738 = const_str_plain_yesjapan;
        tmp_globals_name_738 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_738 = Py_None;
        tmp_fromlist_name_738 = const_tuple_str_plain_YesJapanIE_tuple;
        tmp_level_name_738 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1460;
        tmp_import_name_from_1115 = IMPORT_MODULE5(tmp_name_name_738, tmp_globals_name_738, tmp_locals_name_738, tmp_fromlist_name_738, tmp_level_name_738);
        if (tmp_import_name_from_1115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1460;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1115)) {
           tmp_assign_source_1314 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1115,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YesJapanIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1314 = IMPORT_NAME(tmp_import_name_from_1115, const_str_plain_YesJapanIE);
        }

        Py_DECREF(tmp_import_name_from_1115);
        if (tmp_assign_source_1314 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1460;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YesJapanIE, tmp_assign_source_1314);
    }
    {
        PyObject *tmp_assign_source_1315;
        PyObject *tmp_import_name_from_1116;
        PyObject *tmp_name_name_739;
        PyObject *tmp_globals_name_739;
        PyObject *tmp_locals_name_739;
        PyObject *tmp_fromlist_name_739;
        PyObject *tmp_level_name_739;
        tmp_name_name_739 = const_str_plain_yinyuetai;
        tmp_globals_name_739 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_739 = Py_None;
        tmp_fromlist_name_739 = const_tuple_str_plain_YinYueTaiIE_tuple;
        tmp_level_name_739 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1461;
        tmp_import_name_from_1116 = IMPORT_MODULE5(tmp_name_name_739, tmp_globals_name_739, tmp_locals_name_739, tmp_fromlist_name_739, tmp_level_name_739);
        if (tmp_import_name_from_1116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1461;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1116)) {
           tmp_assign_source_1315 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1116,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YinYueTaiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1315 = IMPORT_NAME(tmp_import_name_from_1116, const_str_plain_YinYueTaiIE);
        }

        Py_DECREF(tmp_import_name_from_1116);
        if (tmp_assign_source_1315 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1461;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YinYueTaiIE, tmp_assign_source_1315);
    }
    {
        PyObject *tmp_assign_source_1316;
        PyObject *tmp_import_name_from_1117;
        PyObject *tmp_name_name_740;
        PyObject *tmp_globals_name_740;
        PyObject *tmp_locals_name_740;
        PyObject *tmp_fromlist_name_740;
        PyObject *tmp_level_name_740;
        tmp_name_name_740 = const_str_plain_ynet;
        tmp_globals_name_740 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_740 = Py_None;
        tmp_fromlist_name_740 = const_tuple_str_plain_YnetIE_tuple;
        tmp_level_name_740 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1462;
        tmp_import_name_from_1117 = IMPORT_MODULE5(tmp_name_name_740, tmp_globals_name_740, tmp_locals_name_740, tmp_fromlist_name_740, tmp_level_name_740);
        if (tmp_import_name_from_1117 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1462;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1117)) {
           tmp_assign_source_1316 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1117,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YnetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1316 = IMPORT_NAME(tmp_import_name_from_1117, const_str_plain_YnetIE);
        }

        Py_DECREF(tmp_import_name_from_1117);
        if (tmp_assign_source_1316 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1462;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YnetIE, tmp_assign_source_1316);
    }
    {
        PyObject *tmp_assign_source_1317;
        PyObject *tmp_import_name_from_1118;
        PyObject *tmp_name_name_741;
        PyObject *tmp_globals_name_741;
        PyObject *tmp_locals_name_741;
        PyObject *tmp_fromlist_name_741;
        PyObject *tmp_level_name_741;
        tmp_name_name_741 = const_str_plain_youjizz;
        tmp_globals_name_741 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_741 = Py_None;
        tmp_fromlist_name_741 = const_tuple_str_plain_YouJizzIE_tuple;
        tmp_level_name_741 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1463;
        tmp_import_name_from_1118 = IMPORT_MODULE5(tmp_name_name_741, tmp_globals_name_741, tmp_locals_name_741, tmp_fromlist_name_741, tmp_level_name_741);
        if (tmp_import_name_from_1118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1463;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1118)) {
           tmp_assign_source_1317 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1118,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YouJizzIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1317 = IMPORT_NAME(tmp_import_name_from_1118, const_str_plain_YouJizzIE);
        }

        Py_DECREF(tmp_import_name_from_1118);
        if (tmp_assign_source_1317 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1463;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YouJizzIE, tmp_assign_source_1317);
    }
    {
        PyObject *tmp_assign_source_1318;
        PyObject *tmp_name_name_742;
        PyObject *tmp_globals_name_742;
        PyObject *tmp_locals_name_742;
        PyObject *tmp_fromlist_name_742;
        PyObject *tmp_level_name_742;
        tmp_name_name_742 = const_str_plain_youku;
        tmp_globals_name_742 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_742 = Py_None;
        tmp_fromlist_name_742 = const_tuple_str_plain_YoukuIE_str_plain_YoukuShowIE_tuple;
        tmp_level_name_742 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1464;
        tmp_assign_source_1318 = IMPORT_MODULE5(tmp_name_name_742, tmp_globals_name_742, tmp_locals_name_742, tmp_fromlist_name_742, tmp_level_name_742);
        if (tmp_assign_source_1318 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1464;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_197__module == NULL);
        tmp_import_from_197__module = tmp_assign_source_1318;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1319;
        PyObject *tmp_import_name_from_1119;
        CHECK_OBJECT(tmp_import_from_197__module);
        tmp_import_name_from_1119 = tmp_import_from_197__module;
        if (PyModule_Check(tmp_import_name_from_1119)) {
           tmp_assign_source_1319 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1119,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoukuIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1319 = IMPORT_NAME(tmp_import_name_from_1119, const_str_plain_YoukuIE);
        }

        if (tmp_assign_source_1319 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1464;

            goto try_except_handler_197;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoukuIE, tmp_assign_source_1319);
    }
    {
        PyObject *tmp_assign_source_1320;
        PyObject *tmp_import_name_from_1120;
        CHECK_OBJECT(tmp_import_from_197__module);
        tmp_import_name_from_1120 = tmp_import_from_197__module;
        if (PyModule_Check(tmp_import_name_from_1120)) {
           tmp_assign_source_1320 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1120,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoukuShowIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1320 = IMPORT_NAME(tmp_import_name_from_1120, const_str_plain_YoukuShowIE);
        }

        if (tmp_assign_source_1320 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1464;

            goto try_except_handler_197;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoukuShowIE, tmp_assign_source_1320);
    }
    goto try_end_197;
    // Exception handler code:
    try_except_handler_197:;
    exception_keeper_type_197 = exception_type;
    exception_keeper_value_197 = exception_value;
    exception_keeper_tb_197 = exception_tb;
    exception_keeper_lineno_197 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_197__module);
    Py_DECREF(tmp_import_from_197__module);
    tmp_import_from_197__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_197;
    exception_value = exception_keeper_value_197;
    exception_tb = exception_keeper_tb_197;
    exception_lineno = exception_keeper_lineno_197;

    goto frame_exception_exit_1;
    // End of try:
    try_end_197:;
    CHECK_OBJECT(tmp_import_from_197__module);
    Py_DECREF(tmp_import_from_197__module);
    tmp_import_from_197__module = NULL;

    {
        PyObject *tmp_assign_source_1321;
        PyObject *tmp_name_name_743;
        PyObject *tmp_globals_name_743;
        PyObject *tmp_locals_name_743;
        PyObject *tmp_fromlist_name_743;
        PyObject *tmp_level_name_743;
        tmp_name_name_743 = const_str_plain_younow;
        tmp_globals_name_743 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_743 = Py_None;
        tmp_fromlist_name_743 = const_tuple_cc6c8f0817962c99f8c6ba99274798d3_tuple;
        tmp_level_name_743 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1468;
        tmp_assign_source_1321 = IMPORT_MODULE5(tmp_name_name_743, tmp_globals_name_743, tmp_locals_name_743, tmp_fromlist_name_743, tmp_level_name_743);
        if (tmp_assign_source_1321 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1468;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_198__module == NULL);
        tmp_import_from_198__module = tmp_assign_source_1321;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1322;
        PyObject *tmp_import_name_from_1121;
        CHECK_OBJECT(tmp_import_from_198__module);
        tmp_import_name_from_1121 = tmp_import_from_198__module;
        if (PyModule_Check(tmp_import_name_from_1121)) {
           tmp_assign_source_1322 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1121,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YouNowLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1322 = IMPORT_NAME(tmp_import_name_from_1121, const_str_plain_YouNowLiveIE);
        }

        if (tmp_assign_source_1322 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1468;

            goto try_except_handler_198;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YouNowLiveIE, tmp_assign_source_1322);
    }
    {
        PyObject *tmp_assign_source_1323;
        PyObject *tmp_import_name_from_1122;
        CHECK_OBJECT(tmp_import_from_198__module);
        tmp_import_name_from_1122 = tmp_import_from_198__module;
        if (PyModule_Check(tmp_import_name_from_1122)) {
           tmp_assign_source_1323 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1122,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YouNowChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1323 = IMPORT_NAME(tmp_import_name_from_1122, const_str_plain_YouNowChannelIE);
        }

        if (tmp_assign_source_1323 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1468;

            goto try_except_handler_198;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YouNowChannelIE, tmp_assign_source_1323);
    }
    {
        PyObject *tmp_assign_source_1324;
        PyObject *tmp_import_name_from_1123;
        CHECK_OBJECT(tmp_import_from_198__module);
        tmp_import_name_from_1123 = tmp_import_from_198__module;
        if (PyModule_Check(tmp_import_name_from_1123)) {
           tmp_assign_source_1324 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1123,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YouNowMomentIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1324 = IMPORT_NAME(tmp_import_name_from_1123, const_str_plain_YouNowMomentIE);
        }

        if (tmp_assign_source_1324 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1468;

            goto try_except_handler_198;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YouNowMomentIE, tmp_assign_source_1324);
    }
    goto try_end_198;
    // Exception handler code:
    try_except_handler_198:;
    exception_keeper_type_198 = exception_type;
    exception_keeper_value_198 = exception_value;
    exception_keeper_tb_198 = exception_tb;
    exception_keeper_lineno_198 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_198__module);
    Py_DECREF(tmp_import_from_198__module);
    tmp_import_from_198__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_198;
    exception_value = exception_keeper_value_198;
    exception_tb = exception_keeper_tb_198;
    exception_lineno = exception_keeper_lineno_198;

    goto frame_exception_exit_1;
    // End of try:
    try_end_198:;
    CHECK_OBJECT(tmp_import_from_198__module);
    Py_DECREF(tmp_import_from_198__module);
    tmp_import_from_198__module = NULL;

    {
        PyObject *tmp_assign_source_1325;
        PyObject *tmp_import_name_from_1124;
        PyObject *tmp_name_name_744;
        PyObject *tmp_globals_name_744;
        PyObject *tmp_locals_name_744;
        PyObject *tmp_fromlist_name_744;
        PyObject *tmp_level_name_744;
        tmp_name_name_744 = const_str_plain_youporn;
        tmp_globals_name_744 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_744 = Py_None;
        tmp_fromlist_name_744 = const_tuple_str_plain_YouPornIE_tuple;
        tmp_level_name_744 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1473;
        tmp_import_name_from_1124 = IMPORT_MODULE5(tmp_name_name_744, tmp_globals_name_744, tmp_locals_name_744, tmp_fromlist_name_744, tmp_level_name_744);
        if (tmp_import_name_from_1124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1473;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1124)) {
           tmp_assign_source_1325 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1124,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YouPornIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1325 = IMPORT_NAME(tmp_import_name_from_1124, const_str_plain_YouPornIE);
        }

        Py_DECREF(tmp_import_name_from_1124);
        if (tmp_assign_source_1325 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1473;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YouPornIE, tmp_assign_source_1325);
    }
    {
        PyObject *tmp_assign_source_1326;
        PyObject *tmp_import_name_from_1125;
        PyObject *tmp_name_name_745;
        PyObject *tmp_globals_name_745;
        PyObject *tmp_locals_name_745;
        PyObject *tmp_fromlist_name_745;
        PyObject *tmp_level_name_745;
        tmp_name_name_745 = const_str_plain_yourporn;
        tmp_globals_name_745 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_745 = Py_None;
        tmp_fromlist_name_745 = const_tuple_str_plain_YourPornIE_tuple;
        tmp_level_name_745 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1474;
        tmp_import_name_from_1125 = IMPORT_MODULE5(tmp_name_name_745, tmp_globals_name_745, tmp_locals_name_745, tmp_fromlist_name_745, tmp_level_name_745);
        if (tmp_import_name_from_1125 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1474;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1125)) {
           tmp_assign_source_1326 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1125,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YourPornIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1326 = IMPORT_NAME(tmp_import_name_from_1125, const_str_plain_YourPornIE);
        }

        Py_DECREF(tmp_import_name_from_1125);
        if (tmp_assign_source_1326 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1474;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YourPornIE, tmp_assign_source_1326);
    }
    {
        PyObject *tmp_assign_source_1327;
        PyObject *tmp_import_name_from_1126;
        PyObject *tmp_name_name_746;
        PyObject *tmp_globals_name_746;
        PyObject *tmp_locals_name_746;
        PyObject *tmp_fromlist_name_746;
        PyObject *tmp_level_name_746;
        tmp_name_name_746 = const_str_plain_yourupload;
        tmp_globals_name_746 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_746 = Py_None;
        tmp_fromlist_name_746 = const_tuple_str_plain_YourUploadIE_tuple;
        tmp_level_name_746 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1475;
        tmp_import_name_from_1126 = IMPORT_MODULE5(tmp_name_name_746, tmp_globals_name_746, tmp_locals_name_746, tmp_fromlist_name_746, tmp_level_name_746);
        if (tmp_import_name_from_1126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1475;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1126)) {
           tmp_assign_source_1327 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1126,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YourUploadIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1327 = IMPORT_NAME(tmp_import_name_from_1126, const_str_plain_YourUploadIE);
        }

        Py_DECREF(tmp_import_name_from_1126);
        if (tmp_assign_source_1327 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1475;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YourUploadIE, tmp_assign_source_1327);
    }
    {
        PyObject *tmp_assign_source_1328;
        PyObject *tmp_name_name_747;
        PyObject *tmp_globals_name_747;
        PyObject *tmp_locals_name_747;
        PyObject *tmp_fromlist_name_747;
        PyObject *tmp_level_name_747;
        tmp_name_name_747 = const_str_plain_youtube;
        tmp_globals_name_747 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_747 = Py_None;
        tmp_fromlist_name_747 = const_tuple_90bbd168c1bbaaf0402ba25ddfb1df3f_tuple;
        tmp_level_name_747 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1476;
        tmp_assign_source_1328 = IMPORT_MODULE5(tmp_name_name_747, tmp_globals_name_747, tmp_locals_name_747, tmp_fromlist_name_747, tmp_level_name_747);
        if (tmp_assign_source_1328 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_199__module == NULL);
        tmp_import_from_199__module = tmp_assign_source_1328;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1329;
        PyObject *tmp_import_name_from_1127;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1127 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1127)) {
           tmp_assign_source_1329 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1127,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1329 = IMPORT_NAME(tmp_import_name_from_1127, const_str_plain_YoutubeIE);
        }

        if (tmp_assign_source_1329 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeIE, tmp_assign_source_1329);
    }
    {
        PyObject *tmp_assign_source_1330;
        PyObject *tmp_import_name_from_1128;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1128 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1128)) {
           tmp_assign_source_1330 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1128,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1330 = IMPORT_NAME(tmp_import_name_from_1128, const_str_plain_YoutubeChannelIE);
        }

        if (tmp_assign_source_1330 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeChannelIE, tmp_assign_source_1330);
    }
    {
        PyObject *tmp_assign_source_1331;
        PyObject *tmp_import_name_from_1129;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1129 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1129)) {
           tmp_assign_source_1331 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1129,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeFavouritesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1331 = IMPORT_NAME(tmp_import_name_from_1129, const_str_plain_YoutubeFavouritesIE);
        }

        if (tmp_assign_source_1331 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeFavouritesIE, tmp_assign_source_1331);
    }
    {
        PyObject *tmp_assign_source_1332;
        PyObject *tmp_import_name_from_1130;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1130 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1130)) {
           tmp_assign_source_1332 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1130,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeHistoryIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1332 = IMPORT_NAME(tmp_import_name_from_1130, const_str_plain_YoutubeHistoryIE);
        }

        if (tmp_assign_source_1332 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeHistoryIE, tmp_assign_source_1332);
    }
    {
        PyObject *tmp_assign_source_1333;
        PyObject *tmp_import_name_from_1131;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1131 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1131)) {
           tmp_assign_source_1333 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1131,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1333 = IMPORT_NAME(tmp_import_name_from_1131, const_str_plain_YoutubeLiveIE);
        }

        if (tmp_assign_source_1333 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeLiveIE, tmp_assign_source_1333);
    }
    {
        PyObject *tmp_assign_source_1334;
        PyObject *tmp_import_name_from_1132;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1132 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1132)) {
           tmp_assign_source_1334 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1132,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubePlaylistIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1334 = IMPORT_NAME(tmp_import_name_from_1132, const_str_plain_YoutubePlaylistIE);
        }

        if (tmp_assign_source_1334 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubePlaylistIE, tmp_assign_source_1334);
    }
    {
        PyObject *tmp_assign_source_1335;
        PyObject *tmp_import_name_from_1133;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1133 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1133)) {
           tmp_assign_source_1335 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1133,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubePlaylistsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1335 = IMPORT_NAME(tmp_import_name_from_1133, const_str_plain_YoutubePlaylistsIE);
        }

        if (tmp_assign_source_1335 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubePlaylistsIE, tmp_assign_source_1335);
    }
    {
        PyObject *tmp_assign_source_1336;
        PyObject *tmp_import_name_from_1134;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1134 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1134)) {
           tmp_assign_source_1336 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1134,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeRecommendedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1336 = IMPORT_NAME(tmp_import_name_from_1134, const_str_plain_YoutubeRecommendedIE);
        }

        if (tmp_assign_source_1336 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeRecommendedIE, tmp_assign_source_1336);
    }
    {
        PyObject *tmp_assign_source_1337;
        PyObject *tmp_import_name_from_1135;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1135 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1135)) {
           tmp_assign_source_1337 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1135,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeSearchDateIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1337 = IMPORT_NAME(tmp_import_name_from_1135, const_str_plain_YoutubeSearchDateIE);
        }

        if (tmp_assign_source_1337 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeSearchDateIE, tmp_assign_source_1337);
    }
    {
        PyObject *tmp_assign_source_1338;
        PyObject *tmp_import_name_from_1136;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1136 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1136)) {
           tmp_assign_source_1338 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1136,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeSearchIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1338 = IMPORT_NAME(tmp_import_name_from_1136, const_str_plain_YoutubeSearchIE);
        }

        if (tmp_assign_source_1338 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeSearchIE, tmp_assign_source_1338);
    }
    {
        PyObject *tmp_assign_source_1339;
        PyObject *tmp_import_name_from_1137;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1137 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1137)) {
           tmp_assign_source_1339 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1137,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeSearchURLIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1339 = IMPORT_NAME(tmp_import_name_from_1137, const_str_plain_YoutubeSearchURLIE);
        }

        if (tmp_assign_source_1339 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeSearchURLIE, tmp_assign_source_1339);
    }
    {
        PyObject *tmp_assign_source_1340;
        PyObject *tmp_import_name_from_1138;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1138 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1138)) {
           tmp_assign_source_1340 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1138,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeShowIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1340 = IMPORT_NAME(tmp_import_name_from_1138, const_str_plain_YoutubeShowIE);
        }

        if (tmp_assign_source_1340 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeShowIE, tmp_assign_source_1340);
    }
    {
        PyObject *tmp_assign_source_1341;
        PyObject *tmp_import_name_from_1139;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1139 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1139)) {
           tmp_assign_source_1341 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1139,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeSubscriptionsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1341 = IMPORT_NAME(tmp_import_name_from_1139, const_str_plain_YoutubeSubscriptionsIE);
        }

        if (tmp_assign_source_1341 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeSubscriptionsIE, tmp_assign_source_1341);
    }
    {
        PyObject *tmp_assign_source_1342;
        PyObject *tmp_import_name_from_1140;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1140 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1140)) {
           tmp_assign_source_1342 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1140,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeTruncatedIDIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1342 = IMPORT_NAME(tmp_import_name_from_1140, const_str_plain_YoutubeTruncatedIDIE);
        }

        if (tmp_assign_source_1342 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeTruncatedIDIE, tmp_assign_source_1342);
    }
    {
        PyObject *tmp_assign_source_1343;
        PyObject *tmp_import_name_from_1141;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1141 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1141)) {
           tmp_assign_source_1343 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1141,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeTruncatedURLIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1343 = IMPORT_NAME(tmp_import_name_from_1141, const_str_plain_YoutubeTruncatedURLIE);
        }

        if (tmp_assign_source_1343 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeTruncatedURLIE, tmp_assign_source_1343);
    }
    {
        PyObject *tmp_assign_source_1344;
        PyObject *tmp_import_name_from_1142;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1142 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1142)) {
           tmp_assign_source_1344 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1142,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeUserIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1344 = IMPORT_NAME(tmp_import_name_from_1142, const_str_plain_YoutubeUserIE);
        }

        if (tmp_assign_source_1344 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeUserIE, tmp_assign_source_1344);
    }
    {
        PyObject *tmp_assign_source_1345;
        PyObject *tmp_import_name_from_1143;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1143 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1143)) {
           tmp_assign_source_1345 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1143,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_YoutubeWatchLaterIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1345 = IMPORT_NAME(tmp_import_name_from_1143, const_str_plain_YoutubeWatchLaterIE);
        }

        if (tmp_assign_source_1345 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1476;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_YoutubeWatchLaterIE, tmp_assign_source_1345);
    }
    goto try_end_199;
    // Exception handler code:
    try_except_handler_199:;
    exception_keeper_type_199 = exception_type;
    exception_keeper_value_199 = exception_value;
    exception_keeper_tb_199 = exception_tb;
    exception_keeper_lineno_199 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_199__module);
    Py_DECREF(tmp_import_from_199__module);
    tmp_import_from_199__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_199;
    exception_value = exception_keeper_value_199;
    exception_tb = exception_keeper_tb_199;
    exception_lineno = exception_keeper_lineno_199;

    goto frame_exception_exit_1;
    // End of try:
    try_end_199:;
    CHECK_OBJECT(tmp_import_from_199__module);
    Py_DECREF(tmp_import_from_199__module);
    tmp_import_from_199__module = NULL;

    {
        PyObject *tmp_assign_source_1346;
        PyObject *tmp_import_name_from_1144;
        PyObject *tmp_name_name_748;
        PyObject *tmp_globals_name_748;
        PyObject *tmp_locals_name_748;
        PyObject *tmp_fromlist_name_748;
        PyObject *tmp_level_name_748;
        tmp_name_name_748 = const_str_plain_zapiks;
        tmp_globals_name_748 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_748 = Py_None;
        tmp_fromlist_name_748 = const_tuple_str_plain_ZapiksIE_tuple;
        tmp_level_name_748 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1495;
        tmp_import_name_from_1144 = IMPORT_MODULE5(tmp_name_name_748, tmp_globals_name_748, tmp_locals_name_748, tmp_fromlist_name_748, tmp_level_name_748);
        if (tmp_import_name_from_1144 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1495;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1144)) {
           tmp_assign_source_1346 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1144,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ZapiksIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1346 = IMPORT_NAME(tmp_import_name_from_1144, const_str_plain_ZapiksIE);
        }

        Py_DECREF(tmp_import_name_from_1144);
        if (tmp_assign_source_1346 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1495;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ZapiksIE, tmp_assign_source_1346);
    }
    {
        PyObject *tmp_assign_source_1347;
        PyObject *tmp_import_name_from_1145;
        PyObject *tmp_name_name_749;
        PyObject *tmp_globals_name_749;
        PyObject *tmp_locals_name_749;
        PyObject *tmp_fromlist_name_749;
        PyObject *tmp_level_name_749;
        tmp_name_name_749 = const_str_plain_zaq1;
        tmp_globals_name_749 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_749 = Py_None;
        tmp_fromlist_name_749 = const_tuple_str_plain_Zaq1IE_tuple;
        tmp_level_name_749 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1496;
        tmp_import_name_from_1145 = IMPORT_MODULE5(tmp_name_name_749, tmp_globals_name_749, tmp_locals_name_749, tmp_fromlist_name_749, tmp_level_name_749);
        if (tmp_import_name_from_1145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1496;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1145)) {
           tmp_assign_source_1347 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1145,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_Zaq1IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1347 = IMPORT_NAME(tmp_import_name_from_1145, const_str_plain_Zaq1IE);
        }

        Py_DECREF(tmp_import_name_from_1145);
        if (tmp_assign_source_1347 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1496;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_Zaq1IE, tmp_assign_source_1347);
    }
    {
        PyObject *tmp_assign_source_1348;
        PyObject *tmp_name_name_750;
        PyObject *tmp_globals_name_750;
        PyObject *tmp_locals_name_750;
        PyObject *tmp_fromlist_name_750;
        PyObject *tmp_level_name_750;
        tmp_name_name_750 = const_str_plain_zattoo;
        tmp_globals_name_750 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_750 = Py_None;
        tmp_fromlist_name_750 = const_tuple_7cdc0b7cabf93227f1cf3eddbc89be56_tuple;
        tmp_level_name_750 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1497;
        tmp_assign_source_1348 = IMPORT_MODULE5(tmp_name_name_750, tmp_globals_name_750, tmp_locals_name_750, tmp_fromlist_name_750, tmp_level_name_750);
        if (tmp_assign_source_1348 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_200__module == NULL);
        tmp_import_from_200__module = tmp_assign_source_1348;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1349;
        PyObject *tmp_import_name_from_1146;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1146 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1146)) {
           tmp_assign_source_1349 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1146,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_BBVTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1349 = IMPORT_NAME(tmp_import_name_from_1146, const_str_plain_BBVTVIE);
        }

        if (tmp_assign_source_1349 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_BBVTVIE, tmp_assign_source_1349);
    }
    {
        PyObject *tmp_assign_source_1350;
        PyObject *tmp_import_name_from_1147;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1147 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1147)) {
           tmp_assign_source_1350 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1147,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EinsUndEinsTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1350 = IMPORT_NAME(tmp_import_name_from_1147, const_str_plain_EinsUndEinsTVIE);
        }

        if (tmp_assign_source_1350 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EinsUndEinsTVIE, tmp_assign_source_1350);
    }
    {
        PyObject *tmp_assign_source_1351;
        PyObject *tmp_import_name_from_1148;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1148 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1148)) {
           tmp_assign_source_1351 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1148,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_EWETVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1351 = IMPORT_NAME(tmp_import_name_from_1148, const_str_plain_EWETVIE);
        }

        if (tmp_assign_source_1351 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_EWETVIE, tmp_assign_source_1351);
    }
    {
        PyObject *tmp_assign_source_1352;
        PyObject *tmp_import_name_from_1149;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1149 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1149)) {
           tmp_assign_source_1352 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1149,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_GlattvisionTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1352 = IMPORT_NAME(tmp_import_name_from_1149, const_str_plain_GlattvisionTVIE);
        }

        if (tmp_assign_source_1352 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_GlattvisionTVIE, tmp_assign_source_1352);
    }
    {
        PyObject *tmp_assign_source_1353;
        PyObject *tmp_import_name_from_1150;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1150 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1150)) {
           tmp_assign_source_1353 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1150,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MNetTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1353 = IMPORT_NAME(tmp_import_name_from_1150, const_str_plain_MNetTVIE);
        }

        if (tmp_assign_source_1353 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MNetTVIE, tmp_assign_source_1353);
    }
    {
        PyObject *tmp_assign_source_1354;
        PyObject *tmp_import_name_from_1151;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1151 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1151)) {
           tmp_assign_source_1354 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1151,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_MyVisionTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1354 = IMPORT_NAME(tmp_import_name_from_1151, const_str_plain_MyVisionTVIE);
        }

        if (tmp_assign_source_1354 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_MyVisionTVIE, tmp_assign_source_1354);
    }
    {
        PyObject *tmp_assign_source_1355;
        PyObject *tmp_import_name_from_1152;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1152 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1152)) {
           tmp_assign_source_1355 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1152,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_NetPlusIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1355 = IMPORT_NAME(tmp_import_name_from_1152, const_str_plain_NetPlusIE);
        }

        if (tmp_assign_source_1355 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_NetPlusIE, tmp_assign_source_1355);
    }
    {
        PyObject *tmp_assign_source_1356;
        PyObject *tmp_import_name_from_1153;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1153 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1153)) {
           tmp_assign_source_1356 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1153,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_OsnatelTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1356 = IMPORT_NAME(tmp_import_name_from_1153, const_str_plain_OsnatelTVIE);
        }

        if (tmp_assign_source_1356 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_OsnatelTVIE, tmp_assign_source_1356);
    }
    {
        PyObject *tmp_assign_source_1357;
        PyObject *tmp_import_name_from_1154;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1154 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1154)) {
           tmp_assign_source_1357 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1154,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_QuantumTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1357 = IMPORT_NAME(tmp_import_name_from_1154, const_str_plain_QuantumTVIE);
        }

        if (tmp_assign_source_1357 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_QuantumTVIE, tmp_assign_source_1357);
    }
    {
        PyObject *tmp_assign_source_1358;
        PyObject *tmp_import_name_from_1155;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1155 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1155)) {
           tmp_assign_source_1358 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1155,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_QuicklineIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1358 = IMPORT_NAME(tmp_import_name_from_1155, const_str_plain_QuicklineIE);
        }

        if (tmp_assign_source_1358 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_QuicklineIE, tmp_assign_source_1358);
    }
    {
        PyObject *tmp_assign_source_1359;
        PyObject *tmp_import_name_from_1156;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1156 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1156)) {
           tmp_assign_source_1359 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1156,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_QuicklineLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1359 = IMPORT_NAME(tmp_import_name_from_1156, const_str_plain_QuicklineLiveIE);
        }

        if (tmp_assign_source_1359 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_QuicklineLiveIE, tmp_assign_source_1359);
    }
    {
        PyObject *tmp_assign_source_1360;
        PyObject *tmp_import_name_from_1157;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1157 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1157)) {
           tmp_assign_source_1360 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1157,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SaltTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1360 = IMPORT_NAME(tmp_import_name_from_1157, const_str_plain_SaltTVIE);
        }

        if (tmp_assign_source_1360 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SaltTVIE, tmp_assign_source_1360);
    }
    {
        PyObject *tmp_assign_source_1361;
        PyObject *tmp_import_name_from_1158;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1158 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1158)) {
           tmp_assign_source_1361 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1158,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_SAKTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1361 = IMPORT_NAME(tmp_import_name_from_1158, const_str_plain_SAKTVIE);
        }

        if (tmp_assign_source_1361 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_SAKTVIE, tmp_assign_source_1361);
    }
    {
        PyObject *tmp_assign_source_1362;
        PyObject *tmp_import_name_from_1159;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1159 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1159)) {
           tmp_assign_source_1362 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1159,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_VTXTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1362 = IMPORT_NAME(tmp_import_name_from_1159, const_str_plain_VTXTVIE);
        }

        if (tmp_assign_source_1362 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_VTXTVIE, tmp_assign_source_1362);
    }
    {
        PyObject *tmp_assign_source_1363;
        PyObject *tmp_import_name_from_1160;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1160 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1160)) {
           tmp_assign_source_1363 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1160,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_WalyTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1363 = IMPORT_NAME(tmp_import_name_from_1160, const_str_plain_WalyTVIE);
        }

        if (tmp_assign_source_1363 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_WalyTVIE, tmp_assign_source_1363);
    }
    {
        PyObject *tmp_assign_source_1364;
        PyObject *tmp_import_name_from_1161;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1161 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1161)) {
           tmp_assign_source_1364 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1161,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ZattooIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1364 = IMPORT_NAME(tmp_import_name_from_1161, const_str_plain_ZattooIE);
        }

        if (tmp_assign_source_1364 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ZattooIE, tmp_assign_source_1364);
    }
    {
        PyObject *tmp_assign_source_1365;
        PyObject *tmp_import_name_from_1162;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1162 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1162)) {
           tmp_assign_source_1365 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1162,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ZattooLiveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1365 = IMPORT_NAME(tmp_import_name_from_1162, const_str_plain_ZattooLiveIE);
        }

        if (tmp_assign_source_1365 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ZattooLiveIE, tmp_assign_source_1365);
    }
    goto try_end_200;
    // Exception handler code:
    try_except_handler_200:;
    exception_keeper_type_200 = exception_type;
    exception_keeper_value_200 = exception_value;
    exception_keeper_tb_200 = exception_tb;
    exception_keeper_lineno_200 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_200__module);
    Py_DECREF(tmp_import_from_200__module);
    tmp_import_from_200__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_200;
    exception_value = exception_keeper_value_200;
    exception_tb = exception_keeper_tb_200;
    exception_lineno = exception_keeper_lineno_200;

    goto frame_exception_exit_1;
    // End of try:
    try_end_200:;
    CHECK_OBJECT(tmp_import_from_200__module);
    Py_DECREF(tmp_import_from_200__module);
    tmp_import_from_200__module = NULL;

    {
        PyObject *tmp_assign_source_1366;
        PyObject *tmp_name_name_751;
        PyObject *tmp_globals_name_751;
        PyObject *tmp_locals_name_751;
        PyObject *tmp_fromlist_name_751;
        PyObject *tmp_level_name_751;
        tmp_name_name_751 = const_str_plain_zdf;
        tmp_globals_name_751 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_751 = Py_None;
        tmp_fromlist_name_751 = const_tuple_str_plain_ZDFIE_str_plain_ZDFChannelIE_tuple;
        tmp_level_name_751 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1516;
        tmp_assign_source_1366 = IMPORT_MODULE5(tmp_name_name_751, tmp_globals_name_751, tmp_locals_name_751, tmp_fromlist_name_751, tmp_level_name_751);
        if (tmp_assign_source_1366 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1516;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_201__module == NULL);
        tmp_import_from_201__module = tmp_assign_source_1366;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1367;
        PyObject *tmp_import_name_from_1163;
        CHECK_OBJECT(tmp_import_from_201__module);
        tmp_import_name_from_1163 = tmp_import_from_201__module;
        if (PyModule_Check(tmp_import_name_from_1163)) {
           tmp_assign_source_1367 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1163,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ZDFIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1367 = IMPORT_NAME(tmp_import_name_from_1163, const_str_plain_ZDFIE);
        }

        if (tmp_assign_source_1367 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1516;

            goto try_except_handler_201;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ZDFIE, tmp_assign_source_1367);
    }
    {
        PyObject *tmp_assign_source_1368;
        PyObject *tmp_import_name_from_1164;
        CHECK_OBJECT(tmp_import_from_201__module);
        tmp_import_name_from_1164 = tmp_import_from_201__module;
        if (PyModule_Check(tmp_import_name_from_1164)) {
           tmp_assign_source_1368 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1164,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ZDFChannelIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1368 = IMPORT_NAME(tmp_import_name_from_1164, const_str_plain_ZDFChannelIE);
        }

        if (tmp_assign_source_1368 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1516;

            goto try_except_handler_201;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ZDFChannelIE, tmp_assign_source_1368);
    }
    goto try_end_201;
    // Exception handler code:
    try_except_handler_201:;
    exception_keeper_type_201 = exception_type;
    exception_keeper_value_201 = exception_value;
    exception_keeper_tb_201 = exception_tb;
    exception_keeper_lineno_201 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_201__module);
    Py_DECREF(tmp_import_from_201__module);
    tmp_import_from_201__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_201;
    exception_value = exception_keeper_value_201;
    exception_tb = exception_keeper_tb_201;
    exception_lineno = exception_keeper_lineno_201;

    goto frame_exception_exit_1;
    // End of try:
    try_end_201:;
    CHECK_OBJECT(tmp_import_from_201__module);
    Py_DECREF(tmp_import_from_201__module);
    tmp_import_from_201__module = NULL;

    {
        PyObject *tmp_assign_source_1369;
        PyObject *tmp_import_name_from_1165;
        PyObject *tmp_name_name_752;
        PyObject *tmp_globals_name_752;
        PyObject *tmp_locals_name_752;
        PyObject *tmp_fromlist_name_752;
        PyObject *tmp_level_name_752;
        tmp_name_name_752 = const_str_plain_zingmp3;
        tmp_globals_name_752 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_752 = Py_None;
        tmp_fromlist_name_752 = const_tuple_str_plain_ZingMp3IE_tuple;
        tmp_level_name_752 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1517;
        tmp_import_name_from_1165 = IMPORT_MODULE5(tmp_name_name_752, tmp_globals_name_752, tmp_locals_name_752, tmp_fromlist_name_752, tmp_level_name_752);
        if (tmp_import_name_from_1165 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1517;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1165)) {
           tmp_assign_source_1369 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1165,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ZingMp3IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1369 = IMPORT_NAME(tmp_import_name_from_1165, const_str_plain_ZingMp3IE);
        }

        Py_DECREF(tmp_import_name_from_1165);
        if (tmp_assign_source_1369 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1517;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ZingMp3IE, tmp_assign_source_1369);
    }
    {
        PyObject *tmp_assign_source_1370;
        PyObject *tmp_import_name_from_1166;
        PyObject *tmp_name_name_753;
        PyObject *tmp_globals_name_753;
        PyObject *tmp_locals_name_753;
        PyObject *tmp_fromlist_name_753;
        PyObject *tmp_level_name_753;
        tmp_name_name_753 = const_str_plain_zype;
        tmp_globals_name_753 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_name_753 = Py_None;
        tmp_fromlist_name_753 = const_tuple_str_plain_ZypeIE_tuple;
        tmp_level_name_753 = const_int_pos_1;
        frame_a46a74f8c2267393b45d276505dd66c4->m_frame.f_lineno = 1518;
        tmp_import_name_from_1166 = IMPORT_MODULE5(tmp_name_name_753, tmp_globals_name_753, tmp_locals_name_753, tmp_fromlist_name_753, tmp_level_name_753);
        if (tmp_import_name_from_1166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1518;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1166)) {
           tmp_assign_source_1370 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1166,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                const_str_plain_ZypeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_1370 = IMPORT_NAME(tmp_import_name_from_1166, const_str_plain_ZypeIE);
        }

        Py_DECREF(tmp_import_name_from_1166);
        if (tmp_assign_source_1370 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1518;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain_ZypeIE, tmp_assign_source_1370);
    }

    // Restore frame exception if necessary.
#if 0
    RESTORE_FRAME_EXCEPTION(frame_a46a74f8c2267393b45d276505dd66c4);
#endif
    popFrameStack();

    assertFrameObject(frame_a46a74f8c2267393b45d276505dd66c4);

    goto frame_no_exception_1;

    frame_exception_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_a46a74f8c2267393b45d276505dd66c4);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_a46a74f8c2267393b45d276505dd66c4, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_a46a74f8c2267393b45d276505dd66c4->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_a46a74f8c2267393b45d276505dd66c4, exception_lineno);
    }

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto module_exception_exit;

    frame_no_exception_1:;

    return module_youtube_dl$extractor$extractors;
    module_exception_exit:
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);
    return NULL;
}
