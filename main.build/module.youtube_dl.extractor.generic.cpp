/* Generated code for Python module 'youtube_dl.extractor.generic'
 * created by Nuitka version 0.6.8.4
 *
 * This code is in part copyright 2020 Kay Hayen.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "nuitka/prelude.h"

#include "__helpers.h"

/* The "_module_youtube_dl$extractor$generic" is a Python object pointer of module type.
 *
 * Note: For full compatibility with CPython, every module variable access
 * needs to go through it except for cases where the module cannot possibly
 * have changed in the mean time.
 */

PyObject *module_youtube_dl$extractor$generic;
PyDictObject *moduledict_youtube_dl$extractor$generic;

/* The declarations of module constants used, if any. */
static PyObject *const_str_digest_b4b3723a7dabc92e957ddcca682fb5a8;
extern PyObject *const_str_plain_RUTVIE;
extern PyObject *const_str_plain_XHamsterEmbedIE;
static PyObject *const_str_plain_20170606;
static PyObject *const_str_digest_2fac52354ec096260ad88b54129f6f00;
extern PyObject *const_str_plain_SVTIE;
static PyObject *const_str_digest_4c5829c0a4e6ab83f5b52c2563c01efc;
extern PyObject *const_str_plain_encode;
static PyObject *const_str_digest_d72184c364975ff440231821d8e4fccb;
static PyObject *const_str_digest_c96da6aceb1f887f1a07d97f4c681ccc;
extern PyObject *const_str_plain_only_matching;
extern PyObject *const_str_plain_unescapeHTML;
extern PyObject *const_str_plain_threeqsdn;
extern PyObject *const_tuple_str_plain_ViqeoIE_tuple;
static PyObject *const_tuple_str_digest_4a53c7f0857c88d26e91c1cf106674e9_tuple;
extern PyObject *const_str_plain_TwentyMinutenIE;
extern PyObject *const_dict_7f784dd3d97b14f8a092c7056e4a88ae;
static PyObject *const_dict_7520dad2c937c7fc824668a6011f97dc;
extern PyObject *const_str_plain_NBCSportsVPlayer;
extern PyObject *const_str_plain_drtuber;
extern PyObject *const_str_plain_duration;
extern PyObject *const_tuple_str_digest_6d6a615162e89eb148ba9bf8dbfc06d3_str_empty_tuple;
extern PyObject *const_str_plain_start;
static PyObject *const_dict_51dfb4457cc0e6aad77a3b5ec2094695;
static PyObject *const_dict_fa46eeaffa7a91e8b1322ea42ff9ff66;
static PyObject *const_tuple_str_plain_RtmpIE_tuple;
extern PyObject *const_str_plain___debug__;
static PyObject *const_str_digest_d37e36c65db61201e2a67f0c53a8be04;
extern PyObject *const_str_plain_rutube;
extern PyObject *const_str_plain__VALID_URL;
static PyObject *const_str_digest_e632862d6d50dcb7eec91d80d30b64c1;
extern PyObject *const_str_plain_20141120;
extern PyObject *const_str_plain_jwplatform;
extern PyObject *const_str_plain_anvato;
static PyObject *const_dict_6a43a35da9de15c3e254c8821cf7d008;
static PyObject *const_list_str_plain_DailyMail_list;
static PyObject *const_dict_1674a7848a1f8093e517b96f639bb30b;
static PyObject *const_str_digest_791955d87fda05583efc2b17b2970e84;
static PyObject *const_str_digest_a6c2dffd08ac7f8c3aafe807b8900450;
static PyObject *const_str_digest_4e6ec0a9fab7915c6779e736ed4930bc;
static PyObject *const_dict_1a1329465257032bd7a750fa66e6a7f8;
static PyObject *const_str_plain_vpath;
extern PyObject *const_str_plain_url_transparent;
static PyObject *const_str_digest_cb2fd3125dd0a81d282bc227f8fe2069;
static PyObject *const_str_digest_4f3e88e7930c961656d17a69aac78eed;
static PyObject *const_dict_1ae01ad7cf5471cbb1d1123c619743cc;
extern PyObject *const_str_plain_APAIE;
extern PyObject *const_str_plain_ViceIE;
extern PyObject *const_str_plain_expected;
static PyObject *const_dict_4bd331e39989f460d046fd3852a172be;
static PyObject *const_str_digest_8d6dc8e24057e57717f46e488d09036a;
static PyObject *const_str_digest_aef3fb0bc082634b4f30f315f7ee5e10;
static PyObject *const_dict_b7b2b152cf16c75a2ae880c28ebb1b06;
static PyObject *const_str_digest_0cd5171bb15c3f298dec92b403311dc1;
static PyObject *const_dict_d820768e364ca345d457d2877702b614;
static PyObject *const_dict_5d5c4b8daf9b28c539e9e8a80024e7d8;
extern PyObject *const_int_0;
extern PyObject *const_tuple_str_plain_MediasetIE_tuple;
static PyObject *const_dict_3ff43d7f21fa9e04cb95faa1e70d5067;
static PyObject *const_list_str_plain_Viddler_list;
static PyObject *const_dict_83492c93d6769ea317bcab9791912fa4;
extern PyObject *const_str_plain_note;
static PyObject *const_str_digest_dac91ed6515ffe17d9afa8fc898870cc;
static PyObject *const_str_plain_20160627;
static PyObject *const_dict_f84b2a3597a968e8f6c3c0ccf92e77a3;
extern PyObject *const_str_plain_playlist_from_matches;
static PyObject *const_dict_20fe770948dc49b950b9d46399e61e86;
static PyObject *const_dict_af75163ec61c339465cb29448b26598e;
static PyObject *const_dict_bd33cb4224d5993140f7cad747932c49;
static PyObject *const_str_digest_956af89fee9eb58d00eb81ed218ee0e3;
extern PyObject *const_int_pos_4;
extern PyObject *const_str_plain_orderedSet;
static PyObject *const_dict_45b031c387bada7e8d887760a2c0154d;
static PyObject *const_str_digest_7d810257f8131bc421f2d36cd94776de;
static PyObject *const_str_digest_8a28631be02f56a8f9d75bbeb9e5389a;
static PyObject *const_str_digest_7a1d954614524c953f0e6729f6da7eca;
static PyObject *const_dict_49bfd386de3590b8539fed3628bdb804;
static PyObject *const_str_digest_7104f10ee7f0d10f5b0ecf3be8c7f761;
extern PyObject *const_str_plain_MangomoloLive;
static PyObject *const_dict_841daa731af2cdee60e4ef4dbc3dae24;
extern PyObject *const_str_plain_embed_token;
static PyObject *const_str_digest_8ae1885f5a79400eae879375c0db144b;
static PyObject *const_dict_83a0f6699a28066ac8d63e53b392da56;
static PyObject *const_dict_3c161d66ffe02888084fe50e004c5b88;
static PyObject *const_str_digest_808c0b0da4bfe0750d54ada38d7d3310;
static PyObject *const_dict_1b8e90e8344362c4d9a9573632391572;
static PyObject *const_str_digest_fe98100ba76574ce453b2d10c5553544;
static PyObject *const_dict_c5c7f4f6f8c55b9b79710e4b917668c5;
static PyObject *const_str_plain_20171122;
static PyObject *const_str_digest_74d01def66293c04a797c788fcd6d66b;
static PyObject *const_str_digest_dcec1d79168ad2734eb42950bc346d17;
extern PyObject *const_str_plain_find;
extern PyObject *const_str_plain_playlist;
static PyObject *const_dict_2bc2ada2d4f0ec3c3705fe835697fe00;
static PyObject *const_str_digest_5ba495d9df3fb420e93eec3efa42d5d5;
extern PyObject *const_str_plain_instagram;
static PyObject *const_dict_6dfcb47a9fcb9d30527435a267652e47;
static PyObject *const_str_digest_9e80e937e330f097dbda5d746bbc9808;
extern PyObject *const_tuple_str_plain_PikselIE_tuple;
extern PyObject *const_str_plain___file__;
static PyObject *const_str_plain_07448641;
static PyObject *const_str_digest_30d75a2497a8bdc614e4ecdd0ee1d4da;
static PyObject *const_dict_77cc90086a31ff1832822ff7be32ccbe;
static PyObject *const_dict_9e65411165a4af514cda08a733cec2ea;
extern PyObject *const_str_plain_redtube;
extern PyObject *const_str_plain_LimelightBaseIE;
extern PyObject *const_str_plain_sanitized_Request;
extern PyObject *const_str_plain_read;
static PyObject *const_str_plain_a47372ee61b39a7b90287094d447d94e;
extern PyObject *const_str_plain_NexxEmbedIE;
extern PyObject *const_int_pos_33;
static PyObject *const_str_digest_7a3d28f061b3c74e909cf55df8526fca;
static PyObject *const_str_plain_NBCNews;
static PyObject *const_str_digest_571f4307fda27f238e807650bd4ce313;
extern PyObject *const_str_plain_0f64ce6;
static PyObject *const_str_digest_ada636c8275574036b9f0936e996dcbf;
extern PyObject *const_str_plain_UrlReferrer;
static PyObject *const_str_digest_4a8afc75ab923c9e074925090dc0022e;
static PyObject *const_tuple_str_plain_PornHubIE_tuple;
extern PyObject *const_str_plain_xpath_text;
extern PyObject *const_str_digest_c17f72dfbfead5020b880ad5af8b007d;
extern PyObject *const_tuple_str_plain_force_generic_extractor_false_tuple;
static PyObject *const_str_digest_d072056fe22d297c08a1c8ae9b8fd043;
static PyObject *const_str_plain_ca00a040364b5b439230e7ebfd02c4e9;
static PyObject *const_dict_4ceb852aa0137e18f701c17704250d3a;
static PyObject *const_str_digest_916068a12c1c29a43b3ba2c46efbd966;
static PyObject *const_str_digest_520655d8a19a5e25cc58a833ac53fbde;
extern PyObject *const_str_plain_e;
static PyObject *const_dict_e99f4b2dbc7ffeb936cdad99e826bd5b;
static PyObject *const_str_digest_22c49b3ccd72d3ca0b59da218d5ababd;
extern PyObject *const_str_plain_groupdict;
extern PyObject *const_str_plain_error;
static PyObject *const_str_digest_28df388abf1bf3d0a80e4498506d54c2;
extern PyObject *const_str_plain_mpd_id;
static PyObject *const_str_plain_95d035dc5c8a401588e9c0e6bd1e9c92;
extern PyObject *const_str_plain_ExpressenIE;
static PyObject *const_str_digest_dbd5fca7d01509846205c373257c4e19;
static PyObject *const_dict_5ac0c17afd85cad1b07f581c41b79e48;
extern PyObject *const_str_plain_NexxIE;
extern PyObject *const_str_plain_mtv;
static PyObject *const_dict_b6854f20e8f87db3a30a64c459493552;
static PyObject *const_str_plain_20130904;
extern PyObject *const_str_digest_7a2d943bcd947d9a84529c7e4cb0115c;
extern PyObject *const_str_plain_KalturaIE;
static PyObject *const_str_digest_89c2f1e75b55b1873508abc45e296765;
static PyObject *const_dict_2312ed6c2b122d5992bf11bce9e5c434;
extern PyObject *const_str_plain_mpd_base_url;
extern PyObject *const_str_plain_text;
static PyObject *const_str_digest_d16a76ff3433599b3d11b7abc309b9a8;
static PyObject *const_dict_159b41e52d8a3d6a5f5694c0a3fc169a;
extern PyObject *const_str_plain_origin;
extern PyObject *const_str_plain_f4m;
extern PyObject *const_str_digest_75fd71b1edada749c2ef7ac810062295;
static PyObject *const_str_digest_89d34ddfe5eb1cdfae3fe7ec053d1e5e;
extern PyObject *const_tuple_str_plain_ArkenaIE_tuple;
extern PyObject *const_str_plain_wistia;
static PyObject *const_str_digest_b50658aff13b7adbd3c9f6130b8e5081;
extern PyObject *const_str_plain_VideomoreIE;
extern PyObject *const_str_plain_flac;
extern PyObject *const_str_plain_playlist_title;
static PyObject *const_str_digest_f7f53a31fabe8b05a913af447cd9aee4;
static PyObject *const_str_digest_f2ed562d581c4f32fea2797ec98624e1;
static PyObject *const_tuple_str_plain_TNAFlixNetworkEmbedIE_tuple;
extern PyObject *const_str_chr_47;
static PyObject *const_str_plain_3519514;
extern PyObject *const_str_plain_sys;
static PyObject *const_str_plain_Heather;
static PyObject *const_str_digest_84aecec1a04fe2ddef8b86ebbd61f3c8;
extern PyObject *const_str_plain_doc;
extern PyObject *const_str_plain_jpg;
extern PyObject *const_str_plain__extract_f4m_formats;
extern PyObject *const_str_digest_c302d77cd6a8cf91b717e4abfdedb2eb;
static PyObject *const_str_plain_582306;
extern PyObject *const_str_plain__search_json_ld;
static PyObject *const_int_pos_1265032391;
static PyObject *const_int_pos_1432816365;
static PyObject *const_str_digest_d9cb76daf72fd2e2d329c70d82e2ab52;
extern PyObject *const_tuple_str_plain_RedTubeIE_tuple;
static PyObject *const_dict_7fefa860ff2fc3f7c2c3682466e8bda2;
static PyObject *const_str_digest_0c03fd27c3babeccd333152db321a801;
extern PyObject *const_tuple_str_plain_ThePlatformIE_tuple;
static PyObject *const_dict_442775758a6faeac18793ba5c8ef4db1;
static PyObject *const_str_digest_5adc41b43b6b664ab16f36a102551a56;
extern PyObject *const_str_plain_live;
extern PyObject *const_str_empty;
extern PyObject *const_str_plain_ViewLiftEmbedIE;
static PyObject *const_dict_7c17bc28a66d65c08fc842a388468051;
static PyObject *const_str_plain_2b35148fcf48da41c9fb4591650784f3;
static PyObject *const_str_digest_1e3f0fe701d436457a685da6c8ddbafc;
extern PyObject *const_str_plain_view_count;
static PyObject *const_str_digest_1e7994a66f4cdf34edc87136750d7ba2;
static PyObject *const_str_digest_c8146b1189aa1a23c73b36a4400a118a;
extern PyObject *const_tuple_str_plain_CloudflareStreamIE_tuple;
extern PyObject *const_str_plain_TeachableIE;
static PyObject *const_dict_dcad60b1d78df1778b10219548813094;
extern PyObject *const_str_plain_20121011;
static PyObject *const_dict_cbfb26133f12b4632df64aed552a2011;
static PyObject *const_list_str_digest_def4b6a20227ee3aa9d0578ed6dbbee7_list;
extern PyObject *const_str_plain_group;
extern PyObject *const_tuple_str_plain_DigitekaIE_tuple;
static PyObject *const_str_digest_a7edaad7542c521e7e811863d1fc6ea7;
static PyObject *const_str_digest_dc2932479b6f5cbbb510334fae5ffea8;
static PyObject *const_tuple_str_plain_LimelightBaseIE_tuple;
static PyObject *const_str_plain_43254897;
static PyObject *const_dict_0c5a3ef8dc91e1ea20d0cb663d8fb41a;
extern PyObject *const_tuple_str_plain_title_tuple;
static PyObject *const_dict_ab8e598e7705f158b3ff2381fea3c4e6;
static PyObject *const_str_plain_O0c5JcKT;
static PyObject *const_str_digest_85aef3d90ac27f89c0d20151fca510a2;
extern PyObject *const_str_digest_7c06a402579f6f9d9db7f3e04da983fc;
extern PyObject *const_str_plain_extend;
static PyObject *const_dict_b28ab674c28220303d06a21f26fee41c;
static PyObject *const_str_digest_4a53c7f0857c88d26e91c1cf106674e9;
static PyObject *const_str_digest_cfb5c345775ba3fe1daefa3325bf1bfe;
static PyObject *const_str_plain_Vidme;
extern PyObject *const_tuple_str_plain_InfoExtractor_tuple;
extern PyObject *const_str_plain_FiveMin;
static PyObject *const_str_digest_aceccf9cf56f33faf84d20297bfe3995;
static PyObject *const_str_plain_HuffPost;
static PyObject *const_float_45_115;
static PyObject *const_str_digest_6b57e372ef691a0d1517bd7036101142;
static PyObject *const_dict_4e2834f61d5e87c5e3ab996cca10e0f6;
static PyObject *const_int_pos_1389118457;
static PyObject *const_str_plain_20150528;
static PyObject *const_str_digest_7195907a0f031cb8f55e43f447b3ee2b;
extern PyObject *const_str_plain_ZypeIE;
static PyObject *const_dict_bf07fa821cc5e6557db9bf90599a4e53;
static PyObject *const_str_digest_ba229a637e36b1d1aedba9e1b2dd0eb5;
extern PyObject *const_str_plain_Vine;
static PyObject *const_str_plain_1c7141f46c;
static PyObject *const_dict_ec15fac3750b0f6b5006a6072c76558e;
static PyObject *const_tuple_str_plain_Refresh_tuple;
static PyObject *const_str_digest_d6ed4e64285dd706c071b428dcab173c;
static PyObject *const_str_plain_UDNEmbed;
static PyObject *const_dict_f14e496c81bf6af19ef81a77fdc4150a;
static PyObject *const_str_plain_ln7x1qSThw4k;
static PyObject *const_str_digest_92b850c91a3e8d5ad8648ee4afd7a65b;
extern PyObject *const_str_plain_CondeNast;
extern PyObject *const_str_plain_spankwire;
static PyObject *const_str_digest_8fcc8c74a47c977b199f7a943d65dbed;
static PyObject *const_str_plain_trailer;
static PyObject *const_dict_c1764b915459e2c441bc0915f6faca75;
static PyObject *const_dict_a5cacdfcd132753f3a32d470f328e573;
static PyObject *const_tuple_str_plain_RutubeIE_tuple;
static PyObject *const_str_digest_74355befb7c8f471a38db904e1aa4fec;
static PyObject *const_str_digest_4e0eb0514bb6768205329ad97d931943;
static PyObject *const_dict_91a58bffe473ae611c11fca34d2486c2;
extern PyObject *const_str_plain_ThreeQSDNIE;
static PyObject *const_str_plain_20100201;
static PyObject *const_str_digest_b61991f5765e310812d90fe1cd647bc8;
static PyObject *const_str_digest_37d33b5e68ebcf4d73d3a1270c5f8ba3;
static PyObject *const_int_pos_51690;
extern PyObject *const_str_plain___class__;
static PyObject *const_str_digest_62aa584a40c070550f3f5483b9606c05;
static PyObject *const_str_plain_5123ea6d5e5a7;
extern PyObject *const_str_plain_channel9;
extern PyObject *const_str_plain__og_search_title;
static PyObject *const_str_plain_Ivi;
static PyObject *const_dict_246bd26c2aa9c765a7a2d7071296b413;
static PyObject *const_str_digest_2feb6dc7fb4356f311194710de2b0ca6;
static PyObject *const_dict_ab76d6da01cba08ac45e0b071f26a573;
static PyObject *const_str_digest_649f44f2dfe45332566422a99b6f329e;
static PyObject *const_dict_0ea5f75e75e10e7b9648682aedd616c1;
static PyObject *const_dict_c32ce3171e2ef2db3b1ad7fbf51f7916;
extern PyObject *const_str_digest_1f107b5592452b1ca3d9912cb6908233;
static PyObject *const_str_digest_13de43b7f840f63d8edc0c4ccfb0e6f7;
static PyObject *const_str_digest_49a804859efab8d836782f1c78f87a4f;
static PyObject *const_dict_5835e3865c2990f3c74d45eacc431ed0;
static PyObject *const_str_digest_960c739865a0f6299bca1db2f2883499;
static PyObject *const_dict_e6421e8d12634dbb0763c502c9cd38dd;
extern PyObject *const_str_plain_OdnoklassnikiIE;
static PyObject *const_str_plain_4238694884001;
static PyObject *const_str_plain_5348741021001;
extern PyObject *const_tuple_str_digest_f959083ad25b7fea14c6935536fbaa5d_tuple;
extern PyObject *const_tuple_str_digest_20861594150da1e43b5ee3f86b9deef6_tuple;
static PyObject *const_dict_cf9b9bec2ed8b8ed20680ff82121b2f9;
static PyObject *const_str_digest_da678cc3bee0f64d91d07688cd513abf;
static PyObject *const_str_plain_home;
static PyObject *const_dict_a198d26e74ac150af684642a38fd4349;
static PyObject *const_dict_c4727d1b37562a12e3bc7c7116f5997d;
static PyObject *const_dict_36925fc0cfcf75d54f121e0648d24135;
static PyObject *const_dict_30c00b7d5776426067ac91b773d09d66;
static PyObject *const_dict_256481bf8b71e02775f2c00088b5570b;
static PyObject *const_str_digest_a4d674d4cd12d0c31489346eb58380ef;
static PyObject *const_str_digest_072671c863ae6b2a235496904644eacb;
extern PyObject *const_str_plain_link;
static PyObject *const_str_digest_4ea6ee14b746f425108af009ad74f61d;
static PyObject *const_dict_0b937cbc442f8ba49f40207a491b38db;
extern PyObject *const_str_plain_yapfiles;
static PyObject *const_str_digest_c87444f5bac9321956454177db57c27f;
static PyObject *const_str_digest_2a57aadc4f6d6cf7eb4ee9cab3ad2e22;
extern PyObject *const_str_digest_ff5e3b1ae0d95ffe8b3d72657a27de19;
static PyObject *const_str_digest_68dbcc8f80dec12fa6319a64ac92217f;
static PyObject *const_str_digest_509998e5cd3037bcfb61fb0010ebd395;
static PyObject *const_str_digest_99d3cc114e2ca7a68745061711ba0b65;
static PyObject *const_dict_3e6c73a91f7281279beaa30b9b4f58e0;
extern PyObject *const_str_plain_description;
extern PyObject *const_str_plain__parse_html5_media_entries;
static PyObject *const_str_digest_7f6a7c1185e417650e2229f8bcc72531;
static PyObject *const_str_plain_3377616;
extern PyObject *const_str_plain_BrightcoveNewIE;
extern PyObject *const_str_plain_videomore;
extern PyObject *const_str_plain_IE_DESC;
static PyObject *const_dict_a498adea70e82ff7846fd3c9bc037af0;
extern PyObject *const_str_plain_ext;
static PyObject *const_str_digest_f4a5b0ca1fa25e02d56bcf316882615b;
static PyObject *const_str_plain_776940;
static PyObject *const_dict_faea4c42db136aac95e911fa911bb28d;
extern PyObject *const_str_plain_hls;
extern PyObject *const_str_plain_xspf;
static PyObject *const_dict_55f8c8da502ae867b40119b5e8e7d10f;
extern PyObject *const_str_plain_dbtv;
static PyObject *const_str_plain_4191638492001;
extern PyObject *const_tuple_str_plain_PladformIE_tuple;
static PyObject *const_str_digest_889e5f7e1e225877d5d0c909903fd5c1;
static PyObject *const_str_digest_45b51688119744629578c3459dacefe4;
extern PyObject *const_str_plain__parse_smil;
extern PyObject *const_str_plain_match;
extern PyObject *const_str_plain_float_or_none;
static PyObject *const_list_str_digest_44cee31d4210eb2478c8340eb248bcd5_list;
extern PyObject *const_str_plain_skip;
extern PyObject *const_str_plain__extract_rss;
static PyObject *const_tuple_str_plain_TuneInBaseIE_tuple;
static PyObject *const_str_digest_e98911021ce3515e49059cb736f0043f;
static PyObject *const_str_digest_d1bd8db22baf56a37bf699e8e6b9535b;
static PyObject *const_str_plain_Refresh;
extern PyObject *const_str_plain_UDNEmbedIE;
extern PyObject *const_tuple_str_digest_13971ae58b983978540cbb4bbf3b1360_tuple;
static PyObject *const_str_plain_ArteTVEmbed;
extern PyObject *const_str_plain_smotri;
extern PyObject *const_tuple_str_plain_ExpressenIE_tuple;
static PyObject *const_str_digest_9cad8cfdc7508a9054804e23f9a16eba;
extern PyObject *const_str_plain__parse_xspf;
static PyObject *const_dict_5eb7ac0263b8272916eed171669de9ec;
static PyObject *const_str_digest_07f7896c2310e41d42a628c023b59dbb;
static PyObject *const_str_digest_a3473a08eefedd57d3731509f04ba32a;
static PyObject *const_dict_3f73dcef41a3932dd3e0de08c10bc2e0;
extern PyObject *const_tuple_str_plain_JWPlatformIE_tuple;
static PyObject *const_str_digest_5ed2409dc23fd2bdcdbc401e0038b531;
extern PyObject *const_dict_5a4b43d9442068c8ed68fb42270f3fd3;
static PyObject *const_str_plain_OcobLTqC;
static PyObject *const_dict_09df46e309378c6aab4c5ab547b02b5c;
static PyObject *const_str_digest_9c9ed98b20a386498761f9e86753a4be;
static PyObject *const_str_digest_c595f6f93916a253473e0d776fa2ca8d;
static PyObject *const_int_pos_1435711927;
extern PyObject *const_str_plain_unicode_literals;
extern PyObject *const_str_plain_params;
static PyObject *const_dict_3282e540260e22113498e5a30ea902b0;
extern PyObject *const_dict_d86ae6d9cc5bf51b4834b1d52ac321cd;
extern PyObject *const_str_plain__extract_smil_formats;
static PyObject *const_tuple_str_plain_ViewLiftEmbedIE_tuple;
static PyObject *const_str_plain_20150228;
extern PyObject *const_str_plain_springboardplatform;
extern PyObject *const_tuple_str_plain_Vbox7IE_tuple;
static PyObject *const_str_plain_523629;
static PyObject *const_dict_2635a05b88280f90e836758bf32eab74;
static PyObject *const_int_pos_1465431544;
extern PyObject *const_str_plain_add_header;
static PyObject *const_dict_2c72d15872a83757552ca44de097f52a;
extern PyObject *const_str_plain_channel_id;
static PyObject *const_dict_30706ccff06497f2ee5a14895cdc0485;
static PyObject *const_str_digest_3858d150b8df8f6d8d7ca03e67a41489;
static PyObject *const_str_digest_246955df4287268046c0b7e4d9ec87c1;
extern PyObject *const_int_pos_7;
extern PyObject *const_str_plain_nbc;
static PyObject *const_str_digest_6eb173931ebfdf236dd8548b4e24ccd7;
extern PyObject *const_str_plain_m3u8_native;
static PyObject *const_str_digest_db5aa34d961100e7e37734b09961ebd8;
extern PyObject *const_tuple_str_plain_WistiaIE_tuple;
static PyObject *const_str_plain_HNTXWDXV9Is;
extern PyObject *const_str_plain_headers;
static PyObject *const_str_plain_20141112;
extern PyObject *const_str_plain___spec__;
static PyObject *const_str_digest_5276f0f6f31d9150609eb3d935cc501f;
extern PyObject *const_str_plain__parse_f4m_formats;
extern PyObject *const_dict_2acf241f96a3de208b696e1b98ebdbba;
extern PyObject *const_str_plain___name__;
extern PyObject *const_str_digest_09d979674cea5c89c2f840e40b09685e;
extern PyObject *const_str_plain_peertube;
static PyObject *const_str_digest_3a1635c71a49e07692d9963a5c663628;
static PyObject *const_str_digest_2c309a0c322fa657cf9f91f322f7694b;
static PyObject *const_dict_eb3282732a410b274b084b5f7ff4ff5c;
extern PyObject *const_str_plain_vimeo;
static PyObject *const_str_plain_166dd577b433b4d4ebfee10b0824d8ff;
extern PyObject *const_dict_5c956f9cfdbfe5f24721c922f7f4ac27;
static PyObject *const_str_digest_50a60b1f89af5bed0c37664b605add7c;
static PyObject *const_str_plain_BrightcoveLegacy;
extern PyObject *const_int_pos_512;
extern PyObject *const_int_pos_5;
extern PyObject *const_str_plain_43662b577c018ad707a63766462b1e87;
static PyObject *const_str_plain_vext;
static PyObject *const_str_digest_eb10a11d5bc38c7cbfb0ae9a17583cea;
extern PyObject *const_str_plain_utils;
static PyObject *const_dict_11a1778f75725ce1871c3e10f2ea1615;
extern PyObject *const_tuple_str_plain_DBTVIE_tuple;
extern PyObject *const_tuple_str_plain_VimeoIE_tuple;
static PyObject *const_str_plain_playlist_desc_el;
static PyObject *const_tuple_str_plain_error_str_plain_fixup_error_tuple;
static PyObject *const_str_digest_a1c65eab274a05715bd3c92243898845;
static PyObject *const_str_digest_3ce9edd9c2d0e54820fa0fc2da9d8baa;
static PyObject *const_int_pos_694;
static PyObject *const_dict_91569421bae847bc7c76a5fb6e40b828;
static PyObject *const_str_digest_db224856e028c9bb20c392f576ebbf8f;
extern PyObject *const_str_plain_20141126;
static PyObject *const_dict_dd4f2625f01e2a0fcd478add993a37b0;
static PyObject *const_str_digest_5258d09fd398d42cc27019de9d5ea3f1;
static PyObject *const_str_digest_43a59acb3111c87b0f852afd459d9150;
static PyObject *const_str_digest_23f0424c0aede0055dd05e70af894a44;
static PyObject *const_str_plain_8707641;
extern PyObject *const_str_plain_generic;
extern PyObject *const_str_plain_endswith;
static PyObject *const_str_digest_4e5643a46f3b363134949bf79b638724;
static PyObject *const_str_digest_b0cbaaa570a1dfd4f7894ba6d7e72161;
static PyObject *const_dict_5e005be8cf4935e987038e39dba5717c;
static PyObject *const_dict_a74a30cbc8750aaba5de34650bae7e09;
static PyObject *const_str_digest_05db319212c8687c297d6b4c443b8605;
static PyObject *const_dict_f6daba7139c94abd41b35f4175718498;
static PyObject *const_tuple_str_plain_to_generic_tuple;
static PyObject *const_tuple_str_plain_MTVServicesEmbeddedIE_tuple;
static PyObject *const_list_str_plain_301_list;
extern PyObject *const_str_plain__real_extract;
static PyObject *const_dict_b7f6b41d944a6e262bb19b9f3bfe92e3;
extern PyObject *const_str_plain_formats;
extern PyObject *const_str_plain_videos;
extern PyObject *const_str_plain_TVCIE;
static PyObject *const_dict_945b2e27a8fdb4912ac6485714f084ea;
static PyObject *const_tuple_str_plain_TeachableIE_tuple;
static PyObject *const_str_digest_8014710ca7439e3d687ba3ff75c44cea;
extern PyObject *const_str_digest_923641aa3d650ad84876342b290d6098;
static PyObject *const_str_plain_20170712;
static PyObject *const_str_digest_0d2d848a967cc77faa795088cb2e7a1e;
static PyObject *const_dict_ef0e72767d500c832e069aca383f42ee;
static PyObject *const_dict_afd84ca9fc566b6f438f79d84c007112;
static PyObject *const_dict_c3274d7e171935c58179768facb06b85;
static PyObject *const_str_digest_921616c76e63d01864e0b5bc16b2bd01;
static PyObject *const_str_plain_31c9291ab41fac05471db4e73aa11717;
extern PyObject *const_str_plain_playlist_result;
extern PyObject *const_str_digest_820c8b396edbe8218f9ff1ecdcbfa7bb;
extern PyObject *const_str_plain_PladformIE;
extern PyObject *const_tuple_str_digest_e35f1d8c90f5f611269c11fa74846100_tuple;
static PyObject *const_dict_c315cb62c0f5ec09e9dafbc3a1d07d68;
static PyObject *const_str_digest_d027f4adb63c7ea8a5f2882a40ce715a;
extern PyObject *const_tuple_str_plain_SpringboardPlatformIE_tuple;
static PyObject *const_str_digest_c5dad1c31f87fd5bea92c2418dd40f69;
extern PyObject *const_str_plain_geturl;
extern PyObject *const_str_plain_replace;
extern PyObject *const_str_plain_expected_warnings;
static PyObject *const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple;
static PyObject *const_int_pos_1488769918;
extern PyObject *const_str_plain_ViqeoIE;
extern PyObject *const_str_digest_fcf040720b88d60da4ce975010c44a3a;
static PyObject *const_str_digest_9ea218cd7a7e7a013efa5a839bf5d1ad;
static PyObject *const_dict_7100b4bc7a73e7204f2a5993fa2a32d2;
static PyObject *const_str_plain_4ccbebe5f36706d85221f204d7eb5913;
static PyObject *const_str_digest_d0e8ec79cdf9c712ed79ec93e5603d8a;
static PyObject *const_str_digest_a309aabe62050b877ae94ae006c51a16;
extern PyObject *const_str_digest_f658007037b29943eaba7a74040a02a4;
extern PyObject *const_str_plain_2456;
static PyObject *const_dict_5db648690ff2334a2161d9e5675a7ff5;
extern PyObject *const_str_plain_MTVServicesEmbeddedIE;
extern PyObject *const_str_plain_errnote;
extern PyObject *const_str_plain__extract_xspf_playlist;
extern PyObject *const_str_digest_bfef9bdba76d375d4e508d0aae4cb642;
static PyObject *const_str_plain_XHamsterEmbed;
static PyObject *const_dict_f82b765f74491ca4c68ce97c2d06ee15;
extern PyObject *const_str_plain_to_screen;
static PyObject *const_dict_c3150b43c4e1c1f55dde9b7749937b87;
extern PyObject *const_tuple_str_plain_VideaIE_tuple;
extern PyObject *const_str_plain_expressen;
extern PyObject *const_tuple_int_pos_3_int_0_tuple;
static PyObject *const_str_digest_0cab677b50e8ef49aa95ba8139a43d0f;
static PyObject *const_str_plain_20150220;
static PyObject *const_str_digest_0a9cfa0f350468c7282063ef2b61a6d7;
static PyObject *const_str_digest_d1b6ede8c08033ced88856fee6878355;
extern PyObject *const_str_plain_fatal;
extern PyObject *const_str_plain__parse_mpd_formats;
extern PyObject *const_str_plain_webpage;
static PyObject *const_str_digest_4da7655e75d3d75fdfe546f4ac5a0810;
static PyObject *const_dict_e59e35a0f06f1a6b4cef85355f563466;
extern PyObject *const_str_plain_foxnews;
static PyObject *const_dict_ccf59e832d8e20a337d688736af13867;
extern PyObject *const_str_plain_filter;
static PyObject *const_str_digest_e48a4367407bfa6634de13c77fd874a7;
extern PyObject *const_str_plain__TESTS;
extern PyObject *const_tuple_int_pos_1_tuple;
static PyObject *const_str_digest_58ca4fa7e7e23de81c8bbc4202c4c25e;
extern PyObject *const_tuple_str_plain_ThreeQSDNIE_tuple;
static PyObject *const_str_digest_8b1b8cd487af2fb535d9a9bafda9171b;
extern PyObject *const_str_plain_lower;
extern PyObject *const_str_plain___orig_bases__;
static PyObject *const_dict_393040dfb005ddc95639c78a1f6b48e3;
static PyObject *const_tuple_str_plain_SVTIE_tuple;
extern PyObject *const_str_plain_it;
extern PyObject *const_str_plain_urlparse;
static PyObject *const_str_plain_kps1;
static PyObject *const_str_plain_aecd089f55b1cb5a59032cb049d3a356;
extern PyObject *const_str_plain_n;
static PyObject *const_str_digest_7b3089742c377011efe5a7b967feac98;
static PyObject *const_dict_6e33b1cf7ef946706005d7b11221abce;
static PyObject *const_int_pos_1474354800;
static PyObject *const_str_digest_aadb6107b8084906223622cea0ad4aaa;
extern PyObject *const_str_plain_googledrive;
static PyObject *const_str_digest_4fc092d6545a8ca876e8f6a3fccc45b5;
extern PyObject *const_str_plain_timestamp;
extern PyObject *const_str_plain__search_regex;
extern PyObject *const_str_plain_viewlift;
static PyObject *const_tuple_str_plain_mpegurl_tuple;
static PyObject *const_str_digest_d22c32ab3ee7a987b59d886a989b2143;
static PyObject *const_str_digest_0b6b2bd1e4f601cf0261a680365c23c4;
static PyObject *const_str_plain_MTVServicesEmbedded;
extern PyObject *const_str_plain_rpartition;
extern PyObject *const_str_plain_mp3;
extern PyObject *const_str_plain__search_iframe_url;
static PyObject *const_dict_f1a19df5e0ff334dbc74caec0acde171;
static PyObject *const_str_plain_3326530_hq;
extern PyObject *const_str_plain_vcodec;
static PyObject *const_str_digest_5435d7f0d6ef45be44b2ef5a40d89dca;
static PyObject *const_dict_15307652e4809fba24d555585c478e4c;
extern PyObject *const_tuple_str_plain_format_id_tuple;
extern PyObject *const_str_digest_022f0fe19c76db2b4709c7278d953927;
extern PyObject *const_str_plain__download_xml;
extern PyObject *const_str_plain_decode;
extern PyObject *const_str_plain_ArkenaIE;
static PyObject *const_str_plain_118046;
extern PyObject *const_str_plain__og_search_description;
static PyObject *const_str_digest_5c683438ff38f48cb123d7e50ca812da;
static PyObject *const_str_digest_f3dd9bb810bab78a40fa56e67b2b6ba5;
static PyObject *const_tuple_str_plain_ec_tuple;
static PyObject *const_str_plain_IMG_5786;
static PyObject *const_str_digest_d41bb0f47c76ba5cccb1379bca98b38a;
static PyObject *const_str_plain_418921;
extern PyObject *const_str_plain_SpringboardPlatformIE;
static PyObject *const_str_plain_Tvigle;
static PyObject *const_str_plain_DailyMail;
extern PyObject *const_str_plain_limelight;
extern PyObject *const_str_plain_washingtonpost;
extern PyObject *const_str_plain_theplatform;
static PyObject *const_str_digest_664888bdf3e5842ba734e10bd30a7780;
static PyObject *const_str_plain_playlist_desc;
extern PyObject *const_str_plain_GoogleDriveIE;
extern PyObject *const_str_plain_20150126;
extern PyObject *const_str_plain_v;
extern PyObject *const_str_plain_tunein;
static PyObject *const_str_digest_dc97e4858160452b7c1499837aba0a88;
static PyObject *const_tuple_2410a945b7a9c18c09b4bdb4b7baf173_tuple;
extern PyObject *const_str_plain_ThePlatformIE;
static PyObject *const_str_digest_76400fef6f1bd19b69e7de19b0ec0862;
extern PyObject *const_tuple_str_digest_923641aa3d650ad84876342b290d6098_tuple;
extern PyObject *const_str_plain__rta_search;
static PyObject *const_dict_d2c5544aca2fa366bfb880c3f6edb98a;
extern PyObject *const_str_plain_shell;
static PyObject *const_str_digest_b3d0da1cc878ae9af441eb53fbbcc497;
extern PyObject *const_str_digest_5a61248508ad5ccd11e82f155deb0ceb;
static PyObject *const_str_digest_c220897a8766025cba7cb4bc2a153ad7;
static PyObject *const_str_digest_de9efc8e28e76c1e887a7bbdc848eee6;
static PyObject *const_str_digest_904e3199c44508e5ceb2e64fae72c2a6;
extern PyObject *const_str_plain_vice;
extern PyObject *const_dict_00568b7486a38fa8bec47d8cf331317e;
static PyObject *const_str_digest_411d9b323c28c23b6a536f3244f71089;
extern PyObject *const_str_plain_FacebookIE;
extern PyObject *const_str_plain_opus;
static PyObject *const_dict_e27b95402f9cadc0d176fc2375b8c7cf;
static PyObject *const_tuple_str_digest_7d4c3598dac00d3e7208489ebb5ceaa4_tuple;
static PyObject *const_dict_8ff1e1c4e79095474dbc9fba1737a55d;
extern PyObject *const_str_plain_ustream;
static PyObject *const_dict_b384620a920db6c17ac8171d704f5300;
static PyObject *const_str_digest_d515ca44891c29602fcc0394d0c87105;
static PyObject *const_str_digest_b57e8723d1194a884babfbe117dc2c46;
extern PyObject *const_str_plain_info_dict;
static PyObject *const_str_plain_0_izeg5utt;
static PyObject *const_str_plain_13601338388002;
extern PyObject *const_tuple_str_plain_UstreamIE_tuple;
static PyObject *const_str_plain_83645793;
extern PyObject *const_tuple_str_plain_FacebookIE_tuple;
extern PyObject *const_str_plain_MediasiteIE;
static PyObject *const_dict_124ac211d9a96ffa6e0f88f703a7a0d5;
static PyObject *const_dict_75c871eb084b50441d81798f9f9f64c1;
static PyObject *const_dict_ebea30a7dd34fe05bfa0fd36982c79c4;
static PyObject *const_dict_bd3fd1e812fda54806b6710c4c9ce206;
static PyObject *const_str_digest_ba13b7ad4f4c53b99c5f194088ca1b82;
static PyObject *const_dict_57ba96e6428c3dcab4dbd037a234bdcb;
extern PyObject *const_str_plain_scheme;
extern PyObject *const_str_plain_20170909;
static PyObject *const_str_plain_546363;
static PyObject *const_str_digest_fbd016808a6730dfebef63b3e6ae0427;
extern PyObject *const_str_plain_4719370;
static PyObject *const_str_digest_a9e070e261cd21953461f5232a0604b1;
static PyObject *const_dict_69b1720c46d789fd6771efa984f170bb;
static PyObject *const_dict_8361f3245198b57f780389dd8d47f451;
static PyObject *const_tuple_str_plain_FoxNewsIE_tuple;
static PyObject *const_str_digest_04cca4c2ae94bd3ba8cdab47d06b676e;
static PyObject *const_str_digest_9c28658d0670e464df592e3110c28075;
extern PyObject *const_str_plain_TED;
static PyObject *const_str_digest_1aa0a7dc1ce44981e2834c790db8c801;
static PyObject *const_str_digest_4adb0fef073fa59d61d6cd9dfc73c660;
static PyObject *const_str_plain_filter_video;
static PyObject *const_str_digest_e2b24128969bbce524ed3d17a3014531;
extern PyObject *const_str_plain_YoutubeIE;
extern PyObject *const_str_plain_udn;
extern PyObject *const_str_plain_format_id;
static PyObject *const_str_digest_fc03a5c6130c13869d0eee16167c3aa8;
extern PyObject *const_str_plain_InstagramIE;
extern PyObject *const_tuple_str_plain_DailyMailIE_tuple;
static PyObject *const_dict_0df94e8bdf8467ea341f7fcb29ebf603;
extern PyObject *const_str_plain_VShareIE;
extern PyObject *const_str_plain__find_jwplayer_data;
static PyObject *const_dict_fe7d1a9a312858a6bdcdabe6f34612c4;
extern PyObject *const_str_plain_LimelightMedia;
static PyObject *const_str_digest_3b7b205a0d35611b3d64608361b89c3c;
extern PyObject *const_str_plain_thumbnail;
extern PyObject *const_str_plain_uploader;
static PyObject *const_str_digest_f0e0db11654fd75cef8196a67f33bf16;
extern PyObject *const_tuple_str_plain_JojIE_tuple;
static PyObject *const_dict_8e601ccf1fa573b445f26b6c79ea222a;
static PyObject *const_tuple_str_plain_MofosexEmbedIE_tuple;
static PyObject *const_dict_67ff8b8f2fb8a32c23a5c587bf563e5d;
static PyObject *const_str_plain_sbv;
static PyObject *const_str_digest_4fe2196d61160fd0101c232fad18f8ce;
static PyObject *const_str_digest_646cab054c98d280e01f46870ebca9f4;
static PyObject *const_tuple_str_digest_1e7994a66f4cdf34edc87136750d7ba2_tuple;
extern PyObject *const_tuple_str_plain_APAIE_tuple;
extern PyObject *const_str_plain_video;
static PyObject *const_str_digest_f876970bac726ed574f0c96d3053998c;
extern PyObject *const_str_plain_SenateISVPIE;
static PyObject *const_str_digest_f358f9b52cd0b6b17a14a5478e18d4d6;
static PyObject *const_str_plain_SmoothStreamingMedia;
static PyObject *const_str_digest_ecfa95abc89d4e471894a6dc2561c099;
extern PyObject *const_str_plain_RedTubeIE;
static PyObject *const_int_pos_153;
static PyObject *const_dict_ee0c9edf86b4dce6e1be03b53f9d9a5d;
static PyObject *const_str_plain_2765128793001;
static PyObject *const_str_digest_f15716102597abdf7de41dfcd6b3431e;
extern PyObject *const_str_digest_7adeca30b7b0036238fce206fdd2d21c;
static PyObject *const_str_plain_53501be369702d3275860000;
static PyObject *const_dict_4a7e9bb92d541b81db21ee76e5d1a64d;
extern PyObject *const_dict_103060a01178013f42f2e88af81fc8c9;
static PyObject *const_str_digest_678f4ae502d7cd16f14c3268ef633e54;
static PyObject *const_str_digest_69933bee8838c861cb7f5a9a6378c15f;
static PyObject *const_dict_5a8a540a9d2a0aff79de5243bfa3575c;
static PyObject *const_dict_3c138da28b9b33d0b9690973b73b406b;
static PyObject *const_str_digest_9b6498c7244e07818fb3ef2e4cf65182;
static PyObject *const_str_plain_20150314;
extern PyObject *const_str_plain_InfoExtractor;
static PyObject *const_str_digest_ede1c04eead6c05b89baf894ee2f54e0;
extern PyObject *const_str_plain_xspf_url;
extern PyObject *const_str_plain_senateisvp;
extern PyObject *const_str_plain___module__;
static PyObject *const_str_digest_484908b0752bdf0b572089871b158ab0;
static PyObject *const_str_digest_83a204fa078f44b3dd1dd2c5bd48839f;
static PyObject *const_dict_c74ff3f2b81274bd090b08ce5514b368;
static PyObject *const_str_digest_4710613304fba18930d021e540a59efc;
extern PyObject *const_str_plain_update;
extern PyObject *const_tuple_str_plain_OoyalaIE_tuple;
static PyObject *const_int_pos_1511366290;
static PyObject *const_str_digest_351f365ebf58f977a34c02040a191f26;
static PyObject *const_str_digest_7fc34d4fa9e98fa10f83630a4be355ff;
static PyObject *const_str_plain_9d65602bf31c6e20014319c7d07fba27;
static PyObject *const_str_digest_60d7cdddc990ec7a07ca9b050c92901c;
static PyObject *const_str_digest_11035f4bc30944276976e2005045c167;
extern PyObject *const_str_plain_RtmpIE;
static PyObject *const_str_digest_341cae9353737844b9aa98513326b9d3;
extern PyObject *const_str_plain_FoxNewsIE;
extern PyObject *const_str_digest_7cbe5c28112cefbaa9df054ae1ed49f3;
static PyObject *const_dict_d89cf07bf8dae60ab63e55bd2ca1add4;
static PyObject *const_dict_b8375f50e1918ad78acb3e7eb3915f0e;
extern PyObject *const_tuple_str_plain_ZypeIE_tuple;
extern PyObject *const_str_plain_get;
static PyObject *const_list_str_plain_LimelightMedia_list;
static PyObject *const_str_digest_256498294869c5f2c9ee1b194f7ccbe5;
extern PyObject *const_str_plain_referrer;
extern PyObject *const_str_plain_KNOWN_EXTENSIONS;
static PyObject *const_str_plain_20150405;
static PyObject *const_str_plain_1731611;
extern PyObject *const_tuple_str_plain_type_tuple;
static PyObject *const_tuple_str_plain_urls_str_plain_check_video_tuple;
static PyObject *const_str_digest_c55ab86c0b74b6d6fab4c0f05657eac2;
extern PyObject *const_str_plain_pornhub;
static PyObject *const_dict_005c30125e8a38a6502d60ede62c7abb;
extern PyObject *const_str_plain_tag;
extern PyObject *const_str_plain_Youtube;
static PyObject *const_str_digest_6f407eb39a152fc9bd38bfd253eaa89c;
static PyObject *const_dict_a7463e2d19cb9302d945bf378f94478d;
extern PyObject *const_str_plain__sort_formats;
static PyObject *const_tuple_str_digest_74d01def66293c04a797c788fcd6d66b_tuple;
static PyObject *const_dict_8724e667445f73ae99333d63c57d00ec;
static PyObject *const_str_plain_StreetKitchen;
static PyObject *const_dict_2fe1591230469133f38b6fc4fc437e6c;
static PyObject *const_str_digest_e6a5cde769d6a22376e13987d9c1fc16;
extern PyObject *const_str_plain_sub;
static PyObject *const_str_digest_96946c2a8a6b6651536077dbe9e3707f;
extern PyObject *const_int_pos_6;
static PyObject *const_dict_4ab0e0e550e46281a4fb1f99312bd4e9;
static PyObject *const_tuple_9d15fc37bc470d072487a89614b4e7cf_tuple;
extern PyObject *const_str_plain__url_for_embed_code;
static PyObject *const_str_digest_3272416ec1801b8822dbc6c8ca92c59b;
static PyObject *const_tuple_str_plain_self_str_plain_new_url_tuple;
extern PyObject *const_str_plain_expected_type;
static PyObject *const_str_digest_1a4bdd5a263046bdb3d714c6c5696a43;
static PyObject *const_str_plain_300346;
static PyObject *const_tuple_str_digest_c17f72dfbfead5020b880ad5af8b007d_str_chr_42_tuple;
static PyObject *const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple;
static PyObject *const_dict_58b32bb87180a71581bf561c3e8af028;
static PyObject *const_str_digest_5782880173d4c750538f91d551b6cfb5;
extern PyObject *const_str_plain_SpankwireIE;
extern PyObject *const_str_plain__request_webpage;
static PyObject *const_str_plain_20141029;
static PyObject *const_str_digest_c407adae327df95277cbd5bb490baf53;
extern PyObject *const_str_plain_rutv;
static PyObject *const_dict_dac39445a32092e03345e51a6dd0e2d9;
extern PyObject *const_str_plain_src;
extern PyObject *const_str_plain_int;
static PyObject *const_str_digest_8b8d822d535de06ce941217de34d72b3;
extern PyObject *const_str_plain_mediasite_url;
static PyObject *const_dict_26d87b6c5c23e26c44d81e5bda679802;
static PyObject *const_str_digest_2d31fe9d770cf57c1cef12e7b5fdc3ae;
static PyObject *const_str_digest_deafb7529bb4e7c49a944532889e060a;
static PyObject *const_str_digest_21ac1d9d980bddd397974398f7c8cb31;
extern PyObject *const_tuple_str_plain_DailymotionIE_tuple;
static PyObject *const_str_plain_FunnyOrDie;
extern PyObject *const_str_plain_OoyalaIE;
static PyObject *const_tuple_546ea94692a283bd5e4cbc890563b122_tuple;
extern PyObject *const_tuple_str_plain_XFileShareIE_tuple;
static PyObject *const_dict_7ac3856d1dbc0be299b1217d5aaa1d3e;
static PyObject *const_str_digest_276c49eca271480d4bce3bce07ef4e6e;
static PyObject *const_dict_0599059b638b8af59bec196e5fa7ef54;
static PyObject *const_str_digest_baccba840ce144ab9cc73ff456981b89;
extern PyObject *const_str_plain_WashingtonPostIE;
extern PyObject *const_str_plain_vbox7;
static PyObject *const_str_digest_11c9384b95fa8e500e16f745f1c8d450;
extern PyObject *const_str_plain_IndavideoEmbedIE;
static PyObject *const_dict_32d9dec00a802b8702519f1dbe268cee;
static PyObject *const_str_digest_b663a0986e64a0200dd248deb51f7a26;
static PyObject *const_str_digest_666b9b87049afe9242ad532e0311a551;
static PyObject *const_str_plain_fbcde74f534176ecb015849146dd3aee;
static PyObject *const_str_digest_cc9681cdcb6d799e19451982649c751e;
static PyObject *const_dict_7143384c27ef78862c881b65da6baea6;
static PyObject *const_str_digest_cad9f56542a7f67a043d0a648f532fa5;
static PyObject *const_str_digest_129811641a2de7670e633d32e6009481;
extern PyObject *const_str_plain_xfileshare;
static PyObject *const_str_digest_462d7fb7109912b879e6ebddb200e3ae;
extern PyObject *const_str_plain_search;
extern PyObject *const_str_plain_vurl;
extern PyObject *const_str_chr_58;
extern PyObject *const_str_plain_Yahoo;
extern PyObject *const_str_plain_playlist_count;
extern PyObject *const_str_angle_listcomp;
static PyObject *const_str_digest_331af8d3e10a0a6f8005bb1e0f575bfa;
extern PyObject *const_str_plain_ie;
static PyObject *const_dict_1c26823b73362cc7cb21bf1c93cbf3eb;
extern PyObject *const_tuple_str_plain_BrightcoveLegacyIE_str_plain_BrightcoveNewIE_tuple;
extern PyObject *const_str_plain_teachable;
extern PyObject *const_str_plain_YouPornIE;
extern PyObject *const_str_plain_upload_date;
extern PyObject *const_str_plain_dailymail;
static PyObject *const_tuple_str_plain_sharevideos_mobj_tuple;
extern PyObject *const_str_plain_BBCCoUk;
static PyObject *const_dict_6c14397ecb968f079218ba6228a92f7f;
extern PyObject *const_str_plain_apa;
static PyObject *const_str_digest_053dbc254acabeab5c744963d3509762;
static PyObject *const_str_digest_6daf3912c56459a470d6394fe7bf46c5;
static PyObject *const_dict_e29dc7960585731f61087a925860691c;
static PyObject *const_str_digest_afcbdcf5978dcc4bd3b43a7eda927dba;
static PyObject *const_str_plain_20140720;
static PyObject *const_dict_244bd57da1cd3e12e544dee0f420d742;
extern PyObject *const_tuple_str_plain_MegaphoneIE_tuple;
static PyObject *const_dict_308a837c5f400ac4932d4adccf1ab5fc;
static PyObject *const_list_str_digest_74d01def66293c04a797c788fcd6d66b_list;
static PyObject *const_str_digest_a20ea9802bc478affb5905988eab0644;
extern PyObject *const_str_plain__parse_jwplayer_data;
static PyObject *const_str_digest_ff63732c492715753f6b994174a3b4ba;
static PyObject *const_dict_42523c163507013b83edbefdb324eebe;
static PyObject *const_str_plain_3414141473001;
extern PyObject *const_dict_empty;
static PyObject *const_str_digest_b4916cd7db2de998ba33e5a187c5eac7;
static PyObject *const_str_plain_20140522;
static PyObject *const_str_plain_7e3919d9d2620b89e3e00bec7fe8c9d4;
static PyObject *const_str_plain_Cinchcast;
static PyObject *const_str_digest_839c6e533c3814af73f6a4e9a4c951ca;
extern PyObject *const_str_plain_m3u8_id;
static PyObject *const_str_plain_url_n;
extern PyObject *const_str_plain__og_search_thumbnail;
static PyObject *const_str_digest_41644f223f801f4f090caa9170614f54;
static PyObject *const_dict_8dc44cd9d7bf4ed40fc797f103e46c92;
extern PyObject *const_str_plain_default;
static PyObject *const_str_digest_aab9d51a9c34390179657a1b6bd12873;
extern PyObject *const_str_plain_compat_urlparse;
static PyObject *const_str_digest_fe419a827a713135b1f1d0446a6175ab;
static PyObject *const_str_plain_brazilwtf;
extern PyObject *const_str_chr_42;
static PyObject *const_tuple_str_plain_TVCIE_tuple;
extern PyObject *const_str_plain_video_id;
extern PyObject *const_tuple_str_plain_SportBoxIE_tuple;
static PyObject *const_list_3665cfddc96e8b9e82ab0769adc12468_list;
static PyObject *const_tuple_str_plain_x_str_plain_url_tuple;
static PyObject *const_str_plain_ca1aef97695ef2c1d6973256a57e5252;
static PyObject *const_str_digest_750604cf9e856415b3a0231d87de7080;
extern PyObject *const_str_plain_SportBoxIE;
static PyObject *const_dict_5a07e632e6e25b7b994d75854741261f;
static PyObject *const_dict_45baae835044282b4f603abb435fb259;
extern PyObject *const_str_plain_VideoPressIE;
static PyObject *const_dict_57ffedba433d661c8155f7a0ce2bd979;
static PyObject *const_str_digest_25ff87f1273cc58df289898cc5704c4e;
extern PyObject *const_str_plain_webcaster;
extern PyObject *const_str_angle_genexpr;
extern PyObject *const_tuple_str_plain_test_false_tuple;
static PyObject *const_list_str_digest_db5aa34d961100e7e37734b09961ebd8_list;
static PyObject *const_str_digest_01f74ac7b6e9c63e20b751474e10b6a8;
static PyObject *const_str_plain_uPDB5I9wfp8;
extern PyObject *const_str_plain_path;
static PyObject *const_dict_5afb5a68864481ce70ddc8acdf5302bf;
extern PyObject *const_tuple_str_plain_GoogleDriveIE_tuple;
static PyObject *const_str_digest_520cadf436f8d1744052d5c630320221;
extern PyObject *const_str_plain_xml;
extern PyObject *const_tuple_str_plain_CondeNastIE_tuple;
static PyObject *const_str_digest_09cc91ecb449feff268401d4a69c32a3;
extern PyObject *const_str_digest_591ee7e7bb5353ace4cff3139464ac60;
extern PyObject *const_str_plain_pladform;
static PyObject *const_str_plain_GoogleDrive;
static PyObject *const_str_digest_717e77e1f43ab03767cdc28ed64030a3;
extern PyObject *const_tuple_str_digest_883533b6944e8c03ddb76c0588addd56_str_chr_47_tuple;
extern PyObject *const_str_plain_NBCSportsVPlayerIE;
extern PyObject *const_str_plain_DailyMailIE;
extern PyObject *const_str_plain_playlist_mincount;
static PyObject *const_dict_506a4c3c2c20181d0ad3de023f4a7917;
static PyObject *const_str_digest_c80fb00149ec80cb3a7122cc90a436b9;
static PyObject *const_str_digest_f5b54149aba1930e8e04fca3dd897ab4;
extern PyObject *const_tuple_str_plain_url_tuple;
extern PyObject *const_tuple_int_0_tuple;
extern PyObject *const_str_digest_6d6a615162e89eb148ba9bf8dbfc06d3;
static PyObject *const_str_digest_01c80e1ae2dae3e14f99f8fbbe960bed;
static PyObject *const_str_digest_00e935d054d1c7cd9b587ad3983c8f78;
extern PyObject *const_str_plain_False;
static PyObject *const_str_digest_013bdd894eabb6c967142337242ca65d;
extern PyObject *const_str_digest_c075052d723d6707083e869a0e3659bb;
static PyObject *const_float_238_231;
static PyObject *const_dict_7a7bcbbf7e312a798eb6266106c820cc;
static PyObject *const_str_plain_mZlp2ctYIUEB;
extern PyObject *const_str_plain_nexx;
static PyObject *const_str_plain_20140107;
extern PyObject *const_str_plain_m3u8;
static PyObject *const_str_digest_62f34091c9182df1bc98a69001f177e2;
extern PyObject *const_str_plain_master;
extern PyObject *const_str_plain_youtube;
extern PyObject *const_str_plain_mofosex;
extern PyObject *const_str_digest_883533b6944e8c03ddb76c0588addd56;
static PyObject *const_tuple_str_digest_351f365ebf58f977a34c02040a191f26_tuple;
static PyObject *const_str_plain_1495629;
static PyObject *const_dict_503c652d92534f70bea68c6fab6b3869;
static PyObject *const_str_digest_d52895b93a70b4387ed148b16c93de27;
extern PyObject *const_tuple_str_plain_EaglePlatformIE_tuple;
extern PyObject *const_str_plain_location;
static PyObject *const_str_digest_4953fb1045fe3bd50b5af98734199477;
extern PyObject *const_str_plain_12820;
extern PyObject *const_str_digest_dce73292f74345a14978019773fa3414;
static PyObject *const_dict_68642f5094bafa94be00f1dda6d5048f;
static PyObject *const_dict_dcf226a5ac7a02c877a399cbb0a5486c;
static PyObject *const_dict_618e213ebf6ba12449005c36664de3d4;
extern PyObject *const_tuple_str_plain_AnvatoIE_tuple;
static PyObject *const_tuple_str_plain_mediasite_url_str_plain_self_str_plain_url_tuple;
extern PyObject *const_str_digest_7b4ab9554f01430322d641bf54ab540f;
extern PyObject *const_str_plain_kaltura;
static PyObject *const_str_digest_8c7e405ed5c7a8ae8b48d3a52a60d929;
static PyObject *const_dict_513f0061f46ebec8e61c46ca6b2cc626;
extern PyObject *const_str_plain_determine_ext;
static PyObject *const_str_digest_3ddec3bf80efb35210b8e3700002b9a4;
extern PyObject *const_str_plain_m4v;
extern PyObject *const_str_plain___prepare__;
static PyObject *const_str_plain_mpegurl;
extern PyObject *const_str_plain_Tube8IE;
static PyObject *const_str_digest_43b8524617521f1df696df0226831089;
extern PyObject *const_str_digest_0d25277cb690620921ea9198bc861230;
static PyObject *const_dict_8d4c6822cbc7c8439af163369961aef5;
extern PyObject *const_str_plain_ExtractorError;
static PyObject *const_str_digest_ae39c020b5b208245be0c24eeebc91c5;
static PyObject *const_str_digest_7396b32c3485b21a3d23736fffc8c66d;
static PyObject *const_str_plain_52809;
extern PyObject *const_str_plain__parse_ism_formats;
extern PyObject *const_str_plain_format;
extern PyObject *const_str_plain_piksel;
extern PyObject *const_str_plain_startswith;
static PyObject *const_str_digest_773415dabe48530088265222a9332351;
static PyObject *const_str_digest_9df396bea03127e151c9b63e79d78571;
static PyObject *const_str_plain_VODPlatform;
extern PyObject *const_str_plain__extract_embed_url;
static PyObject *const_str_digest_4181b6dccbd40891619f68b0fe24fd72;
extern PyObject *const_str_plain_4d03aad9;
extern PyObject *const_str_plain_js;
static PyObject *const_dict_5827c5ecc400c49109f32a62882db2a0;
extern PyObject *const_str_plain_index;
static PyObject *const_str_plain_1969;
static PyObject *const_str_digest_1f49ba0a22bad0a56fa61845fe390c77;
static PyObject *const_str_digest_afd28eb72950765a0b260d2981bd1f47;
extern PyObject *const_tuple_str_plain_id_tuple;
extern PyObject *const_dict_f95321192b139e241e1ec13397bf5b8f;
static PyObject *const_str_digest_af6f85ece0c6d931e7d5535be904caf3;
extern PyObject *const_str_plain_arkena;
static PyObject *const_dict_f28b1338da9c65b9f19c9788ff1c95d7;
static PyObject *const_str_plain__extract_camtasia;
extern PyObject *const_tuple_str_plain_VzaarIE_tuple;
static PyObject *const_str_digest_485ef83d50f4f5761a1cc743af42acc6;
extern PyObject *const_str_plain_MyviIE;
static PyObject *const_dict_5959d3e31d31b263192b3ae745700eae;
extern PyObject *const_str_plain_force_generic_extractor;
extern PyObject *const_str_digest_20861594150da1e43b5ee3f86b9deef6;
static PyObject *const_dict_eb224df8d5ef5ac47b6b90a951bfa8e5;
static PyObject *const_str_digest_b0a8399900fe504369be8f7cf7946144;
extern PyObject *const_str_plain___qualname__;
extern PyObject *const_str_plain_default_search;
static PyObject *const_str_digest_5d0bb8ff7e72b874c046a562a27c5b38;
static PyObject *const_str_plain_3235767654;
static PyObject *const_str_digest_56864188a0f8a80ce9c9762928597737;
static PyObject *const_dict_2cfc1643764e0d2592d0aaf22121ea70;
extern PyObject *const_str_plain_tube8;
static PyObject *const_str_digest_b39c4cc8a986d0cdf9fa2f61eec08aad;
static PyObject *const_str_digest_52a7b133d111f2a941b45da04e44e84b;
static PyObject *const_dict_d1fa03127b4e84f03afd8a5b457ed908;
static PyObject *const_str_plain_9b3d5bee0a8740bf70dfd29d3ea43541;
static PyObject *const_tuple_str_plain_NBCSportsVPlayerIE_tuple;
static PyObject *const_str_digest_7ddfc093104a9d475b08ee23c95071af;
extern PyObject *const_int_pos_1504915200;
static PyObject *const_dict_1fe16c657718faf9dec40bf6ffabb204;
static PyObject *const_str_plain_MLB;
extern PyObject *const_str_plain_sportbox;
static PyObject *const_str_digest_af1659fd528373a2f74f3f0c6d3ee346;
static PyObject *const_str_digest_f66cc928508aedbc3feb56178b807ca2;
static PyObject *const_dict_f8013f47fd259d4dd121a7bf90ef86b7;
extern PyObject *const_str_plain_splitext;
extern PyObject *const_str_plain___getitem__;
static PyObject *const_str_digest_7a91cc728e3ced74ce334201df4a563d;
extern PyObject *const_str_plain_finditer;
extern PyObject *const_str_plain__extract_mpd_formats;
static PyObject *const_str_digest_b97444c8a766a55d4a29f56341efba4c;
static PyObject *const_tuple_str_plain_MediasiteIE_tuple;
extern PyObject *const_str_plain_Vbox7IE;
extern PyObject *const_str_plain_MofosexEmbedIE;
static PyObject *const_dict_aa903b1ae77fc27ae8f899569d2ed8db;
static PyObject *const_dict_bb67b1f334927b1a46c88dc2eb85a8e8;
extern PyObject *const_tuple_str_plain_src_tuple;
static PyObject *const_tuple_str_plain_WebcasterFeedIE_tuple;
extern PyObject *const_str_plain_ThePlatform;
extern PyObject *const_int_pos_1422285291;
static PyObject *const_str_digest_5a195c91b3d3890b8e56da2ae8084def;
static PyObject *const_list_str_plain_Bandcamp_list;
static PyObject *const_dict_cfc44552b489b0d33d0ad611affd1e3c;
static PyObject *const_dict_86e7a046cb8b5da69df2290d5147f0a9;
static PyObject *const_str_digest_a3b5196b9a9782afc8951a726799d6be;
extern PyObject *const_tuple_str_plain_channel_id_tuple;
static PyObject *const_str_digest_d26e9268cc408b66c6e8ba12a5a365a8;
static PyObject *const_str_digest_04a6c1ff4b0117f2145a4a2b897e99c3;
extern PyObject *const_str_plain_VideoObject;
static PyObject *const_str_plain_7141703;
static PyObject *const_str_digest_7e8a60923abc4630e2a7687c1b1e9c84;
static PyObject *const_dict_0a111ea4a92e4e384e4c83333336fb8b;
extern PyObject *const_str_plain_unified_strdate;
static PyObject *const_str_digest_401bcf178a57c03ec8078ac84544f649;
extern PyObject *const_str_plain_SBS;
static PyObject *const_str_digest_2b4456f1220f3e3cbd65ec68a24a44cf;
extern PyObject *const_str_plain_cloudflarestream;
static PyObject *const_dict_d1523e47a2414a18c456bd8967cf858a;
static PyObject *const_tuple_str_plain_vurl_str_plain_vpath_str_plain_vext_tuple;
static PyObject *const_dict_5c00478bf329eea84dfaab82c3ee0b17;
static PyObject *const_str_plain_fd2060e988c326991037b9aff9df21a6;
static PyObject *const_str_digest_c206fb303f8fed2e30b9aafc59072ca0;
static PyObject *const_str_digest_56fd89dc62196c6e470fda567438b174;
extern PyObject *const_str_digest_166b2b4060c9b8da4c48f6e0994484e5;
extern PyObject *const_str_plain_md5;
extern PyObject *const_str_plain_has_location;
static PyObject *const_str_digest_9d2ab6b07447d5593a22cf1c42dbd243;
static PyObject *const_str_plain_Mrj4DVp2zeA;
static PyObject *const_str_plain_NationalArchives08;
extern PyObject *const_str_digest_f959083ad25b7fea14c6935536fbaa5d;
static PyObject *const_str_digest_5a18aa2216b00181f856225638506404;
extern PyObject *const_int_pos_100;
extern PyObject *const_tuple_str_plain_KalturaIE_tuple;
static PyObject *const_str_plain_3101154703001;
static PyObject *const_str_plain_marker;
static PyObject *const_str_plain_20150701;
extern PyObject *const_str_plain_WebcasterFeedIE;
extern PyObject *const_str_plain_youporn;
static PyObject *const_tuple_str_plain_bc_url_str_plain_url_tuple;
static PyObject *const_str_plain_720642;
extern PyObject *const_str_plain_Channel9IE;
extern PyObject *const_str_plain_PikselIE;
static PyObject *const_int_pos_1432744860;
static PyObject *const_dict_d67cb766c5ba26fcc1153273e2d8b5f9;
extern PyObject *const_str_plain_YapFilesIE;
static PyObject *const_dict_1f9dcb80a2a6024a12f9c1b23ec8497e;
extern PyObject *const_str_plain_vshare;
static PyObject *const_str_digest_18be51949fb981c6385b0ff6322e6c7e;
static PyObject *const_dict_f4d056e9d2fa491b8d2b112505bb1b00;
extern PyObject *const_str_plain_AnvatoIE;
extern PyObject *const_str_plain_DBTVIE;
extern PyObject *const_str_plain_facebook;
extern PyObject *const_str_plain__webpage_read_content;
extern PyObject *const_tuple_str_plain_Tube8IE_tuple;
static PyObject *const_int_pos_1428207000;
extern PyObject *const_str_plain_DigitekaIE;
static PyObject *const_str_digest_fd43f707714d01c0a23f4a9ae8dd5281;
extern PyObject *const_str_plain_next_url;
static PyObject *const_dict_9bf0813705bf18a0ba3aceb07a479869;
static PyObject *const_str_plain_730m_DandD_1901_512k;
static PyObject *const_str_digest_5522f5ad0a40c4966a58aaca1c645404;
static PyObject *const_str_plain_996642;
static PyObject *const_dict_aa2672704ec12fb38e690f1c910de404;
static PyObject *const_str_plain_20160219;
static PyObject *const_str_plain_getchildren;
static PyObject *const_str_digest_b1c9870470c2d1b049d716886d22caf7;
static PyObject *const_dict_cf76d0a0c71a278a270fa2222a2bf8af;
extern PyObject *const_str_plain_xspf_base_url;
static PyObject *const_str_plain_106351;
extern PyObject *const_str_plain_MediasetIE;
extern PyObject *const_str_plain__extract_brightcove_urls;
static PyObject *const_dict_b659489fe3f7ecb7dd6f389b41a457f1;
static PyObject *const_str_plain_55304;
extern PyObject *const_str_plain_IE_NAME;
static PyObject *const_str_digest_6806a8b226136d0452125dd29f684443;
static PyObject *const_int_pos_3382;
static PyObject *const_int_pos_1321158993;
static PyObject *const_dict_14a82dc3a5b15f78132374e685cc36b7;
extern PyObject *const_str_plain_new_url;
static PyObject *const_str_digest_4223bdd4b691126a28bdfc608096b212;
static PyObject *const_str_digest_cebfe743bd3c2d265c2cceae81f216d7;
static PyObject *const_str_digest_52b38cce399b0a360bfd6a0bdcd00eb5;
extern PyObject *const_str_plain_odnoklassniki;
static PyObject *const_str_plain_65fdff94098e4a607385a60c5177c638;
extern PyObject *const_str_plain_suitable;
static PyObject *const_str_plain_204146;
static PyObject *const_str_digest_382ae421333cfa58a9c91ea607a1241a;
extern PyObject *const_str_plain_xhamster;
extern PyObject *const_str_plain_CondeNastIE;
static PyObject *const_str_plain_2baf4ddd70f697d94b1c18cf796d5107;
extern PyObject *const_str_plain_x;
static PyObject *const_str_digest_3a5fa19d928f520273ea6bd728611910;
static PyObject *const_str_digest_27ba9e1a3fe18880d149333f9f10df72;
static PyObject *const_str_digest_3f7eacafba628f0250bf953b5f24031e;
extern PyObject *const_str_plain_indavideo;
static PyObject *const_str_digest_31f2b69e5f8b1ddb0fec680e041b3203;
static PyObject *const_str_plain_SVT;
extern PyObject *const_str_plain_hds;
static PyObject *const_str_digest_ed263cba5fe67faebdc1e8a2fd773505;
static PyObject *const_str_digest_63a99d65ced556dfdbf619945660d900;
static PyObject *const_str_digest_1cd0374c268f8ce53810bc6d92186019;
static PyObject *const_dict_0dcecd0b14ec4ee7e8a60a0f131687ba;
extern PyObject *const_tuple_str_chr_47_tuple;
extern PyObject *const_dict_731182991c03073ec6717908ca52acfe;
extern PyObject *const_str_digest_def4b6a20227ee3aa9d0578ed6dbbee7;
extern PyObject *const_str_plain_rss;
static PyObject *const_tuple_str_plain_WashingtonPostIE_tuple;
static PyObject *const_str_plain_showthread;
static PyObject *const_bytes_digest_ee7a0fa75fbea109a316dc00e1bb7d31;
extern PyObject *const_str_plain__generic_id;
static PyObject *const_str_plain_sharevideos_mobj;
extern PyObject *const_dict_6dc2f89fb2b035a2c0a0ed28a753f1c8;
static PyObject *const_int_pos_1426330212;
static PyObject *const_str_digest_4f04b8f9ceff13e751c81418590b10f1;
static PyObject *const_str_digest_1d3469e8bdddf4ea4e52337d4bf22433;
static PyObject *const_tuple_int_pos_512_tuple;
extern PyObject *const_tuple_str_plain_p_tuple;
static PyObject *const_dict_1aaa6d27d5bee55815e5492b79c41d2e;
extern PyObject *const_str_plain_UstreamIE;
extern PyObject *const_str_plain_is_html;
static PyObject *const_str_plain_8RUoRhRi;
extern PyObject *const_str_plain_metaclass;
static PyObject *const_str_plain_20121217;
extern PyObject *const_tuple_str_plain___class___tuple;
static PyObject *const_str_digest_97c033399fc2d1bfe8bafdf9065a0a65;
static PyObject *const_str_digest_ac0eaa2abf4939e99bb12e6f15e7f437;
extern PyObject *const_str_plain_JojIE;
static PyObject *const_str_digest_579ac868ba47ae8fa211e3d8eabaf4df;
extern PyObject *const_str_plain_joj;
static PyObject *const_str_digest_cbb1d41598e8653cb66a364e42b8b668;
static PyObject *const_str_digest_b3b4d0a6d35ee3a1e0fb82f97ac4bf3b;
extern PyObject *const_str_plain_20170228;
static PyObject *const_dict_e0f0b3cf9b2fd72dc2c143982644ac46;
static PyObject *const_str_plain_lwYWYxYzE6V5uJMjNGyKtwwiw9ZJD7t2;
extern PyObject *const_str_plain_BrightcoveLegacyIE;
static PyObject *const_str_digest_b76e7384af5d2400333e99d931c93740;
extern PyObject *const_str_plain_videopress;
extern PyObject *const_str_plain_RUTV;
static PyObject *const_dict_dda21c4ebe6bc9bcbf17196dc6f43565;
extern PyObject *const_str_plain_mediasite;
static PyObject *const_tuple_bytes_digest_ee7a0fa75fbea109a316dc00e1bb7d31_tuple;
static PyObject *const_str_plain_90227f51a80c4d8f86c345a7fa62bd9a1d;
extern PyObject *const_str_dot;
extern PyObject *const_tuple_str_plain_YoutubeIE_tuple;
static PyObject *const_tuple_str_plain_XHamsterEmbedIE_tuple;
static PyObject *const_str_plain_100183293;
extern PyObject *const_str_plain_smuggle_url;
static PyObject *const_tuple_str_plain_ViceIE_tuple;
static PyObject *const_str_digest_d3ee5dade447dce6f320554b72a353c2;
static PyObject *const_float_43_276;
static PyObject *const_str_plain_camtasia_url;
static PyObject *const_str_plain_x_dtl_oa_LettermanliftPR_160608;
extern PyObject *const_str_plain_webm;
extern PyObject *const_tuple_str_plain_KinjaEmbedIE_tuple;
extern PyObject *const_str_plain_title;
static PyObject *const_dict_e0502ef49b973b3354e226f366a11e97;
static PyObject *const_dict_4f88c4419bd3067df7afd0c2b7d12a04;
extern PyObject *const_str_plain_Smotri;
static PyObject *const_dict_3f527ebc9f849d93fae8430b9f1577a1;
extern PyObject *const_tuple_str_plain_x_tuple;
static PyObject *const_str_plain_MTE3MjUtMzQ2MzA;
extern PyObject *const_str_plain_20160409;
static PyObject *const_str_digest_643bffb2efe33aa3a9168a616ca4d291;
extern PyObject *const_str_plain_compat_urllib_parse_unquote;
extern PyObject *const_str_plain_Kaltura;
static PyObject *const_str_digest_e719158d59fe228db86365a44548f2fe;
static PyObject *const_str_plain_301;
static PyObject *const_str_plain_Mpora;
static PyObject *const_tuple_13d590ea092fa42be1e64cc339c00486_tuple;
static PyObject *const_str_digest_f85471a580313ddcc0efc6ec19d283c1;
extern PyObject *const_str_plain_getter;
extern PyObject *const_str_plain_mpd;
static PyObject *const_str_plain_20160920;
static PyObject *const_str_digest_bb7fc2e745fe5a6c3f9fac3a33ddf461;
static PyObject *const_str_digest_d3f6b8d28bf0260ba4ca2ea9679731cf;
static PyObject *const_str_plain_Championat;
static PyObject *const_str_digest_2f4c11a78d1e18f6f4768bf3996a197c;
extern PyObject *const_str_plain_KinjaEmbedIE;
extern PyObject *const_str_angle_lambda;
extern PyObject *const_str_plain_CloudflareStreamIE;
extern PyObject *const_str_plain__downloader;
extern PyObject *const_tuple_str_plain_VideoPressIE_tuple;
static PyObject *const_dict_f9165eb7de202cdec4eb276e86232628;
extern PyObject *const_str_plain_RutubeIE;
static PyObject *const_dict_d4de7335ae873e8ab4b138fbc0170032;
extern PyObject *const_str_plain_provider_video_id;
extern PyObject *const_str_plain_url_result;
static PyObject *const_str_digest_7374ef404ed881df70f9dc411fbc913d;
static PyObject *const_dict_20aafb0bee453df99a08899b67a97bd1;
extern PyObject *const_str_plain_WistiaIE;
static PyObject *const_str_plain_Forcing;
extern PyObject *const_str_plain_viqeo;
static PyObject *const_str_plain_67d406c2bcb6af27fa886f31aa934bbe;
extern PyObject *const_dict_8fc357692d32e37b18c1bc5cb8987ab4;
static PyObject *const_str_digest_0985fc36097213607309c35d0ec0c2da;
extern PyObject *const_str_plain_entries;
static PyObject *const_str_plain_128c42e68b13950268b648275386fc74;
extern PyObject *const_int_pos_3;
static PyObject *const_str_digest_af66209f81c52df35c6cdeff00a82e0b;
static PyObject *const_str_plain_149298443_480_16c25b74_2;
static PyObject *const_str_digest_0fadfe3a753cc56195cbf19c803f7bbd;
static PyObject *const_str_digest_5a00f5d95a03f170ef20040a176ecb65;
extern PyObject *const_str_digest_548f8d37f9a611777eb26a7105ecad09;
static PyObject *const_str_plain_20160211;
static PyObject *const_str_digest_8bad55672edab8788b2b155e66279c68;
static PyObject *const_str_plain_CNRV;
static PyObject *const_dict_de123e51bfb6402429dcc2a6c79e54d8;
static PyObject *const_dict_9bea9a3b2145a4e23828693d060f2287;
static PyObject *const_dict_587681dc055fea13b3d1fc7252bcdb01;
static PyObject *const_str_digest_115775ef851b3b85d3f75f698bc8827d;
static PyObject *const_str_plain_0ba9446db037002366bab3b3eb30c88c;
static PyObject *const_str_digest_1c22cd8f63a41d042901b8375145a078;
extern PyObject *const_str_plain_soundcloud;
static PyObject *const_str_digest_86b2d5cff1c01e77903039370fb194f6;
static PyObject *const_str_plain_20160609;
extern PyObject *const_str_plain__proto_relative_url;
extern PyObject *const_str_plain_to_generic;
extern PyObject *const_str_plain_TVC;
extern PyObject *const_str_plain_transform_source;
static PyObject *const_str_digest_cdaebcbaa470328363d642a9f013648a;
extern PyObject *const_str_digest_a4d2c749144754fcad3c1b2f9e5cb89a;
extern PyObject *const_str_plain_compat_str;
extern PyObject *const_dict_ba8b4a712990d1847d0cff50227bd4b0;
static PyObject *const_str_digest_d8bba3ffd12a88faf7395d220959f9e7;
static PyObject *const_dict_cf81e7e9ebb41d788b565fa01c2a2d91;
static PyObject *const_str_digest_8e22557a8823fce88ecf6fa34760b223;
static PyObject *const_dict_812074b9e19d1bb916534f3cb0655447;
extern PyObject *const_str_plain__extract_url;
static PyObject *const_str_plain_PremierMedia;
extern PyObject *const_str_digest_8e721306d124e81b476c7f612ce7e5bd;
extern PyObject *const_str_plain_os;
static PyObject *const_str_plain_20150212;
extern PyObject *const_str_plain_UnsupportedError;
static PyObject *const_str_digest_d88d4406522891a6185ec5cd40eb4b02;
extern PyObject *const_str_digest_95afe3ca724e4f6bd0a36c6bcad05ca4;
static PyObject *const_str_digest_c4f1ae659530f125bf36e6b8fa6ae276;
static PyObject *const_str_digest_47851f556650841c19c27e25c3e65a22;
static PyObject *const_str_digest_186095e807bf67f9dd418ab453d8e7aa;
static PyObject *const_str_plain_20150527;
extern PyObject *const_str_plain_eagleplatform;
static PyObject *const_tuple_str_digest_022f0fe19c76db2b4709c7278d953927_tuple;
extern PyObject *const_str_plain_str;
extern PyObject *const_str_plain_liveleak;
extern PyObject *const_str_plain_none;
static PyObject *const_dict_4563d5a3b181fa5f839d58c6b168f899;
extern PyObject *const_str_digest_2f7c86a3ce14ba5f3ccb67288827cfd1;
static PyObject *const_str_digest_bdd1040bd599f6db5a9a4e627f2913ad;
extern PyObject *const_str_plain_source_url;
extern PyObject *const_str_plain_VideaIE;
static PyObject *const_str_plain_20150127;
static PyObject *const_str_plain_check_video;
extern PyObject *const_int_pos_8;
static PyObject *const_str_digest_10027c8f8698faa600dd838c5a3a9765;
static PyObject *const_str_digest_a134433850cf92dc37d22f57dfe99c73;
static PyObject *const_str_plain_GENOCIDE8GENERAL10;
static PyObject *const_str_plain_1_sgtvehim;
extern PyObject *const_str_plain_DrTuberIE;
extern PyObject *const_str_digest_67dfb4290afed002a8c00e24399ef525;
static PyObject *const_str_digest_34f682065933eadc3e905e51a2a7f5a9;
extern PyObject *const_str_plain_require_title;
static PyObject *const_str_plain_d16797741b560b485194eddda8121b48;
extern PyObject *const_str_plain__parse_json;
extern PyObject *const_str_plain__PROTOCOL_RELATIVE_VALID_URL;
static PyObject *const_int_pos_1496758379;
static PyObject *const_str_digest_caaf8f8bff1cc1e9db4fd0f281603e22;
extern PyObject *const_tuple_str_plain_VideomoreIE_tuple;
static PyObject *const_str_plain_1693903;
extern PyObject *const_str_plain_mimetype2ext;
static PyObject *const_str_plain_850bfe45417ddf221288c88a0cffe2e2;
extern PyObject *const_str_plain_compat_xml_parse_error;
static PyObject *const_str_digest_f2f806139f3fc1040ff9bbc4786c2761;
extern PyObject *const_str_plain_myvi;
static PyObject *const_str_digest_78da0eda9632527c9d8496c73502f3b2;
static PyObject *const_str_plain_vMDE4NzI1Mjgt690b;
static PyObject *const_str_digest_719925a1c37957d4004ddd32134153d9;
static PyObject *const_str_digest_952ee742c749947abd133d5dd0de1279;
static PyObject *const_str_plain_Lake8737;
extern PyObject *const_list_str_plain_Ooyala_list;
extern PyObject *const_str_plain_type;
static PyObject *const_str_digest_5410dadbf139a3ebaaca05f7840d1ea0;
static PyObject *const_str_digest_d7ed58b3c04a920864a5c498ccd27efc;
static PyObject *const_str_plain_AdobeTVVideo;
static PyObject *const_str_digest_5e427f09dc1d291c26333eb2b055caa1;
extern PyObject *const_str_plain___cached__;
static PyObject *const_str_digest_a89cf82e9fe002181910ed4ed3dc414e;
static PyObject *const_str_plain_FacilitatorTraining2017;
static PyObject *const_str_digest_29bcbb79266cfdb11ae763605d9c5a61;
static PyObject *const_str_digest_c0ee58de9ccdbb9368430ebef2b135f1;
extern PyObject *const_str_plain_zype;
extern PyObject *const_str_plain_basename;
static PyObject *const_str_digest_4f6696cbb4d3e8e6a0fdba371a79c653;
extern PyObject *const_int_pos_1;
static PyObject *const_int_pos_1516100691;
static PyObject *const_dict_66bdd8a6c9feba7af52023501761493b;
static PyObject *const_dict_2ce3f9016d9fda35fff4b4a904e83499;
static PyObject *const_str_digest_4625cec5f72a1c34b9b492590b104201;
extern PyObject *const_str_plain_attrib;
extern PyObject *const_tuple_str_plain_TwentyMinutenIE_tuple;
static PyObject *const_str_plain_watch;
static PyObject *const_dict_9e314f1f9408fe5892db84472ef46495;
static PyObject *const_str_plain_fb973ecf6e4a78a67453647444222983;
extern PyObject *const_str_plain_url;
static PyObject *const_list_str_plain_BrightcoveLegacy_list;
static PyObject *const_dict_8bf89aa2ba50d1b1fc31af95155a3a67;
static PyObject *const_dict_7d93bac4f02ec5c8c985a78b970e1d00;
static PyObject *const_str_digest_ffe5f7236c4fc6d8e9b7de7ec484fc8c;
static PyObject *const_int_pos_1355743100;
static PyObject *const_str_plain_1754168231264132;
static PyObject *const_str_digest_aad76067a611c01421c5f2383aedf015;
static PyObject *const_tuple_str_plain_auto_str_plain_auto_warning_str_plain_fixup_error_tuple;
static PyObject *const_str_digest_59dd2ba57ca71f90190de4216c2ca190;
static PyObject *const_dict_16faaed806dd3a4d7baf6d1950c115fb;
static PyObject *const_str_digest_8adc2b276326eb1aed172e8607dfd1a4;
extern PyObject *const_str_plain_common;
static PyObject *const_str_plain_govtaff020316;
static PyObject *const_int_pos_1349922600;
extern PyObject *const_str_plain_age_limit;
static PyObject *const_dict_37feab975f6ff54d32872cd454c17460;
static PyObject *const_str_digest_2febe8e93923d08edeca3ff81438e8b8;
static PyObject *const_tuple_str_plain_SoundcloudEmbedIE_tuple;
static PyObject *const_str_digest_29e20f5f99cdc48067e0af1a503dedab;
extern PyObject *const_str_digest_f0bb395bf74b9c3e33319f5b568ed927;
extern PyObject *const_int_pos_11;
static PyObject *const_str_digest_1d7a20a0c795a31ad3fe40498b9539b3;
static PyObject *const_str_digest_d203052c7d15c99d7bd7e72f3a55cb32;
extern PyObject *const_str_plain_VimeoIE;
static PyObject *const_str_digest_7a6ecaa8d26ec8dcbd42e8dce09f0f28;
static PyObject *const_str_digest_c6e20411519a52445bdc585943170b8c;
extern PyObject *const_str_plain_SmotriIE;
static PyObject *const_dict_9bf38821cff0dc0f55aa818d618170f1;
extern PyObject *const_str_plain_is_live;
static PyObject *const_tuple_str_plain_default_search_tuple;
static PyObject *const_str_digest_5c92716ec3863c7f03388b6758051e46;
static PyObject *const_dict_1e4f491b99d2d15f33bc6a102801a00f;
static PyObject *const_str_digest_72ec5e7259a3569a72c167c27fed89c3;
static PyObject *const_str_plain_7619da8c820e835bef21a1efa2a0fc71;
static PyObject *const_str_digest_e21303836992ada73e4d3ad6e82e9ef0;
static PyObject *const_dict_0c0935d6d67310b6180de4a7724fef1d;
extern PyObject *const_tuple_str_plain_RUTVIE_tuple;
static PyObject *const_str_digest_b5b9120ca5fffd923ebb031586355f4a;
static PyObject *const_dict_09ed8ace76875fb1bba066261375a8e0;
extern PyObject *const_str_plain_Referer;
static PyObject *const_dict_d8bbfd1f1830a5ca80fcaf9e8afbef31;
extern PyObject *const_int_pos_216;
static PyObject *const_str_plain_enclosure_nodes;
static PyObject *const_dict_86f9ab7d453a404b963b778878f608a5;
static PyObject *const_str_plain_20180116;
static PyObject *const_str_plain_35871;
extern PyObject *const_tuple_str_plain_PeerTubeIE_tuple;
extern PyObject *const_str_plain__build_url_result;
static PyObject *const_str_plain_PocoyoBrazil;
static PyObject *const_str_digest_dd7c15d75c1792e76b02978d1bbfc351;
extern PyObject *const_str_plain_p;
static PyObject *const_str_plain_4b57baab2e30d6eb3a6a09f0ba57ef53;
extern PyObject *const_str_plain_merge_dicts;
extern PyObject *const_tuple_str_plain_video_id_tuple;
static PyObject *const_dict_6b5e983084919d72299aea32133c212f;
static PyObject *const_dict_8cda6ebd2f5da4ac26677331ba665850;
static PyObject *const_dict_ab73814b5059c75f78dae785252c54ad;
extern PyObject *const_str_plain_enumerate;
extern PyObject *const_str_plain_bc_url;
static PyObject *const_str_plain_clickhole;
extern PyObject *const_str_plain_dash;
extern PyObject *const_str_plain_report_extraction;
extern PyObject *const_str_plain_vl14062007715967;
static PyObject *const_str_digest_28d7d5128a57e6e442673c619a1dc0cd;
extern PyObject *const_str_plain_BrightcoveNew;
static PyObject *const_dict_ef59b7966f06c8b8d45d32367e79a62a;
extern PyObject *const_str_plain_unsmuggle_url;
static PyObject *const_str_digest_8af58cf9c18e715a57a70b467aa40cc4;
static PyObject *const_str_plain_b68d276de422ab07ee1d49388103f457;
static PyObject *const_dict_1f19876f4e4ccf61b7580dd7d745ee81;
extern PyObject *const_str_plain__html_search_meta;
extern PyObject *const_tuple_str_plain_YapFilesIE_tuple;
static PyObject *const_str_digest_70954b237e8a2f7faead6a050144b050;
static PyObject *const_str_digest_a0410b74db762d58f8495984651e71fc;
static PyObject *const_str_digest_4101a64072cf00c72bdae7876063954d;
static PyObject *const_str_plain_Zapiks;
static PyObject *const_str_digest_d850de6bd1a159dcf4855b156dddd344;
static PyObject *const_str_digest_82d9f56bf8f7a5e6ee5ae06e31d6c9ed;
extern PyObject *const_str_plain_ooyala;
extern PyObject *const_int_pos_18;
static PyObject *const_str_digest_830288f919c00be894ae2e57a03a81cf;
extern PyObject *const_str_plain_PeerTubeIE;
static PyObject *const_str_plain_2eb_1496309988;
static PyObject *const_str_digest_0d807ca51abbb4307fc901afdc70694b;
static PyObject *const_str_digest_a4fcf7a56351a360a298011e3cb8faf3;
extern PyObject *const_str_plain_onionstudios;
extern PyObject *const_dict_a963d82ead3eee96783c188d5867b151;
extern PyObject *const_tuple_str_plain_SpankwireIE_tuple;
static PyObject *const_dict_8d3ceea641d3499822d928f488b7e90e;
static PyObject *const_str_digest_3ee4b9e7ca16d981e01287fa0a53166f;
static PyObject *const_str_plain_67864563;
extern PyObject *const_str_plain_VK;
static PyObject *const_dict_e57dc9b04246ac135226d14533c5b3c9;
extern PyObject *const_str_plain_swf;
extern PyObject *const_str_plain_ie_key;
static PyObject *const_dict_158c6c97ba3f4e2d51cc7826b0e21a5d;
extern PyObject *const_dict_673e5af07ae788f0a1f0e33feceb3562;
extern PyObject *const_str_plain_entry_protocol;
extern PyObject *const_tuple_str_plain_IndavideoEmbedIE_tuple;
extern PyObject *const_list_str_plain_Youtube_list;
extern PyObject *const_str_plain_findall;
static PyObject *const_dict_e1dc256fef4ba6a2a626ed30f33fbbee;
extern PyObject *const_str_plain_commonprotocols;
static PyObject *const_str_plain_fileset_node;
extern PyObject *const_str_plain_twentymin;
extern PyObject *const_str_plain_EMBED_URL;
static PyObject *const_str_digest_6c6c4e8f55c4633cd88992b851c67d4a;
static PyObject *const_dict_8a778a17d6e07c2c910977ade18b345c;
static PyObject *const_str_digest_fca34eac04644723c4b3e3c93ed7f6f6;
extern PyObject *const_str_plain_extract_flat;
static PyObject *const_str_digest_01b24fbfa33c2fa0f71fba31886b8ac2;
static PyObject *const_str_digest_9259f566ae8c457fd5c353feae3d9e71;
static PyObject *const_str_plain_20100513;
static PyObject *const_str_digest_69df7459c65f6d20f17c665551a09329;
extern PyObject *const_str_plain_EaglePlatform;
extern PyObject *const_str_plain_compat;
static PyObject *const_str_digest_f26ec0316899d320cd382fad9a535241;
static PyObject *const_dict_53d81317748f5c716715eca7691db4f5;
static PyObject *const_str_digest_4f871a607ad5ba2a29210aec9e90effc;
static PyObject *const_dict_7808b908da7ba7b4e49d7922ca77b637;
extern PyObject *const_str_plain_uploader_id;
static PyObject *const_str_plain_auto_warning;
static PyObject *const_tuple_str_plain_MyviIE_tuple;
extern PyObject *const_str_plain_SoundcloudEmbedIE;
static PyObject *const_str_plain_cc00413936695987e8de148b67d14f1d;
static PyObject *const_int_pos_1499890639;
extern PyObject *const_tuple_str_digest_c075052d723d6707083e869a0e3659bb_tuple;
extern PyObject *const_str_plain_HEADRequest;
extern PyObject *const_str_plain_test;
extern PyObject *const_str_plain__generic_title;
static PyObject *const_str_digest_2d1fbc37599614a2cb9c91716d9e90fd;
static PyObject *const_str_digest_619ff3b88f711dfb20c36f8b310ded3c;
extern PyObject *const_str_plain_js_to_json;
static PyObject *const_str_digest_44cee31d4210eb2478c8340eb248bcd5;
static PyObject *const_dict_6db4d233108219ea71720814dfb76768;
static PyObject *const_str_plain_fb8c70b0b515e5037981a2492099aab8;
static PyObject *const_str_digest_8e8ea0009f3da1a18fab312f5ab36db4;
extern PyObject *const_str_plain_prefix;
extern PyObject *const_str_plain_id;
extern PyObject *const_str_plain_GenericIE;
static PyObject *const_dict_b8cd04d0c593e1df5425eac9a217501b;
static PyObject *const_dict_05eac665a73b08deff51515b0106b188;
static PyObject *const_str_plain_report_following_redirect;
extern PyObject *const_str_plain_add_ie;
extern PyObject *const_str_plain_png;
static PyObject *const_str_plain_85b90ccc9d73b4acd9138d3af4c27f89;
static PyObject *const_str_digest_a9a8ff1b3a274c3b7f86d9dd4e88a5c8;
extern PyObject *const_str_plain_report_warning;
static PyObject *const_dict_76c5d644ce2c2d07cfc28ede6033b821;
extern PyObject *const_tuple_str_plain_SenateISVPIE_tuple;
extern PyObject *const_str_plain_re;
extern PyObject *const_str_plain___doc__;
extern PyObject *const_str_plain_flv;
static PyObject *const_str_digest_173a9273bd85ee8e5017b424fde15069;
extern PyObject *const_str_plain_audio;
extern PyObject *const_str_plain_bestvideo;
extern PyObject *const_tuple_str_plain_OnionStudiosIE_tuple;
extern PyObject *const_str_digest_b9c4baf879ebd882d40843df3a4dead7;
static PyObject *const_dict_deacca5558dc6b932e957e44a8e0b0d5;
static PyObject *const_dict_3a07c4b407b7402a7704e307b4fad271;
extern PyObject *const_str_plain_skip_download;
static PyObject *const_dict_a41bd0977dbf2013fb41bd6648231231;
extern PyObject *const_str_plain_5b400b834b32992a310622b9;
static PyObject *const_str_digest_0d79fbd9914c0afe99b4b75f771f226d;
extern PyObject *const_str_plain_mp4;
static PyObject *const_str_digest_0b4c8bd718727c10c3d8dc06ecb756c9;
static PyObject *const_str_plain_874_1459135191;
static PyObject *const_str_digest_aa00e9de76eac7ed562a936d8dab5cad;
extern PyObject *const_tuple_str_plain_NexxIE_str_plain_NexxEmbedIE_tuple;
static PyObject *const_str_digest_7d4c3598dac00d3e7208489ebb5ceaa4;
extern PyObject *const_str_plain_http_scheme;
extern PyObject *const_str_plain_kinja;
static PyObject *const_dict_fe7ff11f9b7312675f537b45c463e65c;
extern PyObject *const_tuple_empty;
static PyObject *const_dict_a3a6d1dce85d3923079433597904d18a;
extern PyObject *const_tuple_str_plain_Channel9IE_tuple;
extern PyObject *const_str_plain_append;
static PyObject *const_str_digest_b12259ec94e5f05444e586fc479b3312;
extern PyObject *const_str_plain_VzaarIE;
extern PyObject *const_str_plain_radio;
static PyObject *const_dict_3ee0e666e23ecf4712326ed7acf4713c;
static PyObject *const_dict_770e770bcf6d5e911e30c88b40d7baaf;
static PyObject *const_tuple_str_digest_072671c863ae6b2a235496904644eacb_tuple;
static PyObject *const_dict_f7af3df677ec8bafb7314102c67b4102;
static PyObject *const_int_pos_1455216756;
static PyObject *const_str_plain_1aa589c675898ae6d37a17913cf68d66;
static PyObject *const_str_digest_c6379db96003143d580b48637aca01cd;
extern PyObject *const_str_plain_list;
static PyObject *const_str_plain_ec;
extern PyObject *const_str_plain__extract_urls;
extern PyObject *const_str_plain_content;
static PyObject *const_str_digest_48621dfff9487dce0082bb89d155e6a8;
extern PyObject *const_str_plain_TNAFlixNetworkEmbedIE;
extern PyObject *const_str_plain_brightcove;
extern PyObject *const_str_plain_direct;
extern PyObject *const_str_plain__html_search_regex;
extern PyObject *const_str_digest_0df17ce0ff30bda2ad28671f2a170d3a;
extern PyObject *const_str_plain__type;
extern PyObject *const_str_plain_TuneInBaseIE;
extern PyObject *const_tuple_str_plain_YouPornIE_tuple;
extern PyObject *const_str_plain_XFileShareIE;
extern PyObject *const_str_plain_vzaar;
static PyObject *const_str_plain_ba0dfe966fa007657bd1443ee672db0f;
static PyObject *const_str_plain_599637780109885;
extern PyObject *const_tuple_str_plain_formats_tuple;
extern PyObject *const_str_plain_JWPlatformIE;
static PyObject *const_dict_8c1e63b551b46815c631b7f157f50ed9;
extern PyObject *const_str_plain_srt;
static PyObject *const_str_digest_ee03d8d8c0569912daf745e884cd0d18;
static PyObject *const_str_plain_20170306;
static PyObject *const_tuple_str_plain_LiveLeakIE_tuple;
static PyObject *const_str_digest_c51171831e0b12acfa03019ee9e09c39;
static PyObject *const_str_digest_44465d6c9f3a2e2c13bf1f29eb45205d;
static PyObject *const_str_digest_51cfa020bce4622f273b35ae169f50be;
extern PyObject *const_tuple_str_plain_VShareIE_tuple;
static PyObject *const_str_digest_b5a1a4d7d423b2d571e1e56d56c3641f;
extern PyObject *const_tuple_str_plain_DrTuberIE_tuple;
static PyObject *const_str_digest_833131cd07330d794f7b57dbe6ee947f;
extern PyObject *const_str_plain_PornHubIE;
extern PyObject *const_str_digest_e35f1d8c90f5f611269c11fa74846100;
static PyObject *const_str_digest_b43871a3840e7bd19bb7ffa84720575e;
extern PyObject *const_str_plain_17b39f55b5497ae8b59f5fbce8e35886;
extern PyObject *const_str_plain_version_info;
extern PyObject *const_str_plain_urls;
static PyObject *const_dict_97f030436eb0aff6d3920bf8ee689d73;
static PyObject *const_str_plain_skiplagged;
static PyObject *const_str_digest_7e110108202d9affaecdce433acc8a81;
extern PyObject *const_str_plain_deadspin;
static PyObject *const_str_plain_b96f2f71b359a8ecd05ce4e1daa72365;
static PyObject *const_str_plain_video_1637;
static PyObject *const_str_digest_d9efa1f2663e208bea651535be14c91c;
static PyObject *const_dict_e80f79fdfb35cbe89298d0b260a3ffc2;
static PyObject *const_dict_41e2465ea8d4085a54a7cb240132a5f7;
extern PyObject *const_str_plain_MangomoloVideo;
extern PyObject *const_str_plain_smil;
extern PyObject *const_str_angle_metaclass;
extern PyObject *const_str_plain_Livestream;
extern PyObject *const_str_digest_13971ae58b983978540cbb4bbf3b1360;
static PyObject *const_str_plain_20111113;
static PyObject *const_str_digest_a36c2584a7d0864024a219606f03759c;
static PyObject *const_dict_673553b92e9cd1e345bab11cdd87a24b;
static PyObject *const_str_digest_52cc6e1c20008d855d194d42f5ead113;
static PyObject *const_str_plain_M_Pallante;
static PyObject *const_dict_091661da725c4af3cf59f4518773df7e;
static PyObject *const_str_digest_4843be23efbea327cea4e2afeddb2d71;
static PyObject *const_str_digest_b5061698744415402217ae7720992509;
extern PyObject *const_dict_da4dc749a7069297c823d7f85176bfe7;
static PyObject *const_str_plain_Bandcamp;
extern PyObject *const_str_plain_force_videoid;
static PyObject *const_str_plain_keyscenarios;
static PyObject *const_float_135_427;
extern PyObject *const_str_plain_auto;
extern PyObject *const_str_plain_svt;
extern PyObject *const_str_plain_mediaset;
static PyObject *const_str_plain_1_a52wc67y;
static PyObject *const_str_digest_c2637ab011d8896ca260d34879e31c58;
static PyObject *const_dict_7a30bbd914a2d9271368f53a124fec98;
extern PyObject *const_str_plain_digiteka;
static PyObject *const_str_plain_RtlNl;
extern PyObject *const_str_plain_SenateISVP;
extern PyObject *const_str_plain_dailymotion;
extern PyObject *const_str_plain__extract_m3u8_formats;
static PyObject *const_tuple_str_plain_v_str_plain_url_tuple;
static PyObject *const_str_plain_Viddler;
static PyObject *const_dict_04f9079ded28c3cff2c606520226e6ca;
static PyObject *const_str_plain_174391317;
extern PyObject *const_str_digest_3e08729614c90ec16d6f660d7c6ef3e9;
static PyObject *const_str_digest_80e2d41c8ac9c07d4ff70d1ba5811b2b;
static PyObject *const_str_digest_5c69a255cc4250e6f3479de171015495;
static PyObject *const_str_plain_10153467542406923;
static PyObject *const_str_plain_Aparat;
extern PyObject *const_list_str_plain_Kaltura_list;
extern PyObject *const_str_plain_tvc;
static PyObject *const_str_digest_078172ba3872c52c76029ef96cd9c65d;
extern PyObject *const_str_plain_domain;
static PyObject *const_dict_d2ba95af0f57274daea281fb8d80b8da;
extern PyObject *const_str_plain_compat_etree_fromstring;
static PyObject *const_str_digest_2d9fcc3f11381d55d43a98d4c3ae9440;
static PyObject *const_dict_84cee2f3e7ec1b1542728e470a7b7af7;
extern PyObject *const_str_plain_mpd_url;
extern PyObject *const_str_plain_base_url;
static PyObject *const_str_digest_491c18d4d47656c019d7944769adc6f4;
static PyObject *const_str_plain_123537347;
extern PyObject *const_float_248_667;
extern PyObject *const_str_plain_condenast;
static PyObject *const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple;
extern PyObject *const_str_digest_43ad8896fc2ad39e8862bf58566b7fed;
static PyObject *const_tuple_str_plain_SmotriIE_tuple;
static PyObject *const_str_plain_camtasia_cfg;
static PyObject *const_str_digest_5b416f060edfac558bf18ca7f883b387;
extern PyObject *const_str_plain_videa;
static PyObject *const_str_plain_18e820ec3f;
static PyObject *const_tuple_str_plain_InstagramIE_tuple;
static PyObject *const_str_digest_7c58bc025430cd6cdbe7998edc1a7ca2;
static PyObject *const_str_digest_ad04ecc2f40a66b61669771ec688c6a1;
extern PyObject *const_str_plain_vtt;
static PyObject *const_dict_bd1a3bb0c4e82bfff31213a38a1bb735;
extern PyObject *const_tuple_str_plain_UDNEmbedIE_tuple;
extern PyObject *const_str_plain_Ooyala;
static PyObject *const_str_digest_dd2b6af39fc217505d5d0efaff0770b9;
extern PyObject *const_str_plain_LiveLeakIE;
static PyObject *const_str_digest_ca21b7ff9c1f278753a25452fdc66594;
extern PyObject *const_str_plain_MegaphoneIE;
static PyObject *const_dict_07edbb3bd7c7cb5d708715efbbbccada;
static PyObject *const_str_plain_06e53103ca9aa;
static PyObject *const_str_digest_1038c0f27a8afd2c08f3a9b1bf55437e;
static PyObject *const_dict_dd6195d898ffe076b2451324397419e8;
static PyObject *const_str_digest_b47a0c057aca084c5936c1235b35295f;
extern PyObject *const_str_plain_urljoin;
extern PyObject *const_str_plain_EaglePlatformIE;
extern PyObject *const_str_plain_DailymotionIE;
static PyObject *const_dict_4a9e5c1db849774c1c607ad5359d998a;
static PyObject *const_str_digest_8e09b1fdfb38c833f0deb9021e1c5037;
static PyObject *const_str_plain_BwY2RxaTrTkslxOfcan0UCf0YqyvWysJ;
extern PyObject *const_str_plain_OnionStudiosIE;
static PyObject *const_str_plain_fixup_error;
static PyObject *const_str_digest_eb61eb10bf41fb2cbd5d9c37de0190be;
extern PyObject *const_str_plain_megaphone;
extern PyObject *const_str_plain_tnaflix;
static PyObject *const_str_digest_d2e9ee6102ea07daaac012117ae75048;
static PyObject *const_dict_4d7169b31049ca45eb10d4bf08a2ef51;
static PyObject *const_str_digest_aa1537fad7c7e4a0e3e84063b40c1a3b;
extern PyObject *const_str_plain_self;
extern PyObject *const_tuple_str_plain_OdnoklassnikiIE_tuple;
static PyObject *const_str_digest_423e211c1c6873a103500b98498ae7be;
static PyObject *const_str_digest_48b4640e8f813310a9000d652628c00a;
static PyObject *const_dict_54a1b80ecf1a2a1519164aa6e6b96a36;
extern PyObject *const_int_pos_2;
static PyObject *const_str_digest_02123b2042f2b9cd5c0d6cc87c9c34a7;
extern PyObject *const_str_plain_ttml;
static PyObject *module_filename_obj;

/* Indicator if this modules private constants were created yet. */
static bool constants_created = false;

/* Function to create module private constants. */
static void createModuleConstants(void) {
    const_str_digest_b4b3723a7dabc92e957ddcca682fb5a8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1192286 ], 16, 0);
    const_str_plain_20170606 = UNSTREAM_STRING_ASCII(&constant_bin[ 1263327 ], 8, 0);
    const_str_digest_2fac52354ec096260ad88b54129f6f00 = UNSTREAM_STRING_ASCII(&constant_bin[ 1263335 ], 62, 0);
    const_str_digest_4c5829c0a4e6ab83f5b52c2563c01efc = UNSTREAM_STRING_ASCII(&constant_bin[ 1263397 ], 36, 0);
    const_str_digest_d72184c364975ff440231821d8e4fccb = UNSTREAM_STRING_ASCII(&constant_bin[ 1263433 ], 40, 0);
    const_str_digest_c96da6aceb1f887f1a07d97f4c681ccc = UNSTREAM_STRING(&constant_bin[ 1263473 ], 72, 0);
    const_tuple_str_digest_4a53c7f0857c88d26e91c1cf106674e9_tuple = PyTuple_New(1);
    const_str_digest_4a53c7f0857c88d26e91c1cf106674e9 = UNSTREAM_STRING_ASCII(&constant_bin[ 1263545 ], 24, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_4a53c7f0857c88d26e91c1cf106674e9_tuple, 0, const_str_digest_4a53c7f0857c88d26e91c1cf106674e9); Py_INCREF(const_str_digest_4a53c7f0857c88d26e91c1cf106674e9);
    const_dict_7520dad2c937c7fc824668a6011f97dc = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1263569 ], 929);
    const_dict_51dfb4457cc0e6aad77a3b5ec2094695 = _PyDict_NewPresized( 7 );
    const_str_plain_x_dtl_oa_LettermanliftPR_160608 = UNSTREAM_STRING_ASCII(&constant_bin[ 1264498 ], 31, 1);
    PyDict_SetItem(const_dict_51dfb4457cc0e6aad77a3b5ec2094695, const_str_plain_id, const_str_plain_x_dtl_oa_LettermanliftPR_160608);
    PyDict_SetItem(const_dict_51dfb4457cc0e6aad77a3b5ec2094695, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_b57e8723d1194a884babfbe117dc2c46 = UNSTREAM_STRING_ASCII(&constant_bin[ 1264529 ], 26, 0);
    PyDict_SetItem(const_dict_51dfb4457cc0e6aad77a3b5ec2094695, const_str_plain_title, const_str_digest_b57e8723d1194a884babfbe117dc2c46);
    const_str_digest_99d3cc114e2ca7a68745061711ba0b65 = UNSTREAM_STRING_ASCII(&constant_bin[ 1264555 ], 142, 0);
    PyDict_SetItem(const_dict_51dfb4457cc0e6aad77a3b5ec2094695, const_str_plain_description, const_str_digest_99d3cc114e2ca7a68745061711ba0b65);
    const_str_plain_20160609 = UNSTREAM_STRING_ASCII(&constant_bin[ 1264697 ], 8, 0);
    PyDict_SetItem(const_dict_51dfb4457cc0e6aad77a3b5ec2094695, const_str_plain_upload_date, const_str_plain_20160609);
    const_int_pos_1465431544 = PyLong_FromUnsignedLong(1465431544ul);
    PyDict_SetItem(const_dict_51dfb4457cc0e6aad77a3b5ec2094695, const_str_plain_timestamp, const_int_pos_1465431544);
    const_str_digest_4e5643a46f3b363134949bf79b638724 = UNSTREAM_STRING_ASCII(&constant_bin[ 1264705 ], 9, 0);
    PyDict_SetItem(const_dict_51dfb4457cc0e6aad77a3b5ec2094695, const_str_plain_uploader, const_str_digest_4e5643a46f3b363134949bf79b638724);
    assert(PyDict_Size(const_dict_51dfb4457cc0e6aad77a3b5ec2094695) == 7);
    const_dict_fa46eeaffa7a91e8b1322ea42ff9ff66 = _PyDict_NewPresized( 3 );
    const_str_digest_f4a5b0ca1fa25e02d56bcf316882615b = UNSTREAM_STRING_ASCII(&constant_bin[ 1264714 ], 51, 0);
    PyDict_SetItem(const_dict_fa46eeaffa7a91e8b1322ea42ff9ff66, const_str_plain_url, const_str_digest_f4a5b0ca1fa25e02d56bcf316882615b);
    const_dict_20fe770948dc49b950b9d46399e61e86 = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_20fe770948dc49b950b9d46399e61e86, const_str_plain_id, const_str_plain_hds);
    PyDict_SetItem(const_dict_20fe770948dc49b950b9d46399e61e86, const_str_plain_ext, const_str_plain_flv);
    PyDict_SetItem(const_dict_20fe770948dc49b950b9d46399e61e86, const_str_plain_title, const_str_plain_hds);
    PyDict_SetItem(const_dict_20fe770948dc49b950b9d46399e61e86, const_str_plain_formats, const_str_digest_09d979674cea5c89c2f840e40b09685e);
    assert(PyDict_Size(const_dict_20fe770948dc49b950b9d46399e61e86) == 4);
    PyDict_SetItem(const_dict_fa46eeaffa7a91e8b1322ea42ff9ff66, const_str_plain_info_dict, const_dict_20fe770948dc49b950b9d46399e61e86);
    PyDict_SetItem(const_dict_fa46eeaffa7a91e8b1322ea42ff9ff66, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_fa46eeaffa7a91e8b1322ea42ff9ff66) == 3);
    const_tuple_str_plain_RtmpIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RtmpIE_tuple, 0, const_str_plain_RtmpIE); Py_INCREF(const_str_plain_RtmpIE);
    const_str_digest_d37e36c65db61201e2a67f0c53a8be04 = UNSTREAM_STRING_ASCII(&constant_bin[ 1264765 ], 36, 0);
    const_str_digest_e632862d6d50dcb7eec91d80d30b64c1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1264801 ], 41, 0);
    const_dict_6a43a35da9de15c3e254c8821cf7d008 = _PyDict_NewPresized( 1 );
    const_str_plain_RtlNl = UNSTREAM_STRING_ASCII(&constant_bin[ 1264842 ], 5, 1);
    PyDict_SetItem(const_dict_6a43a35da9de15c3e254c8821cf7d008, const_str_plain_ie, const_str_plain_RtlNl);
    assert(PyDict_Size(const_dict_6a43a35da9de15c3e254c8821cf7d008) == 1);
    const_list_str_plain_DailyMail_list = PyList_New(1);
    const_str_plain_DailyMail = UNSTREAM_STRING_ASCII(&constant_bin[ 40368 ], 9, 1);
    PyList_SET_ITEM(const_list_str_plain_DailyMail_list, 0, const_str_plain_DailyMail); Py_INCREF(const_str_plain_DailyMail);
    const_dict_1674a7848a1f8093e517b96f639bb30b = _PyDict_NewPresized( 4 );
    const_str_digest_2feb6dc7fb4356f311194710de2b0ca6 = UNSTREAM_STRING_ASCII(&constant_bin[ 1264847 ], 84, 0);
    PyDict_SetItem(const_dict_1674a7848a1f8093e517b96f639bb30b, const_str_plain_url, const_str_digest_2feb6dc7fb4356f311194710de2b0ca6);
    const_dict_4ceb852aa0137e18f701c17704250d3a = _PyDict_NewPresized( 5 );
    const_str_digest_1cd0374c268f8ce53810bc6d92186019 = UNSTREAM_STRING_ASCII(&constant_bin[ 1264931 ], 32, 0);
    PyDict_SetItem(const_dict_4ceb852aa0137e18f701c17704250d3a, const_str_plain_id, const_str_digest_1cd0374c268f8ce53810bc6d92186019);
    PyDict_SetItem(const_dict_4ceb852aa0137e18f701c17704250d3a, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_ffe5f7236c4fc6d8e9b7de7ec484fc8c = UNSTREAM_STRING_ASCII(&constant_bin[ 1264963 ], 40, 0);
    PyDict_SetItem(const_dict_4ceb852aa0137e18f701c17704250d3a, const_str_plain_title, const_str_digest_ffe5f7236c4fc6d8e9b7de7ec484fc8c);
    const_str_digest_b5b9120ca5fffd923ebb031586355f4a = UNSTREAM_STRING_ASCII(&constant_bin[ 1265003 ], 83, 0);
    PyDict_SetItem(const_dict_4ceb852aa0137e18f701c17704250d3a, const_str_plain_description, const_str_digest_b5b9120ca5fffd923ebb031586355f4a);
    const_float_135_427 = UNSTREAM_FLOAT(&constant_bin[ 1265086 ]);
    PyDict_SetItem(const_dict_4ceb852aa0137e18f701c17704250d3a, const_str_plain_duration, const_float_135_427);
    assert(PyDict_Size(const_dict_4ceb852aa0137e18f701c17704250d3a) == 5);
    PyDict_SetItem(const_dict_1674a7848a1f8093e517b96f639bb30b, const_str_plain_info_dict, const_dict_4ceb852aa0137e18f701c17704250d3a);
    PyDict_SetItem(const_dict_1674a7848a1f8093e517b96f639bb30b, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    const_str_digest_3b7b205a0d35611b3d64608361b89c3c = UNSTREAM_STRING_ASCII(&constant_bin[ 1265094 ], 13, 0);
    PyDict_SetItem(const_dict_1674a7848a1f8093e517b96f639bb30b, const_str_plain_skip, const_str_digest_3b7b205a0d35611b3d64608361b89c3c);
    assert(PyDict_Size(const_dict_1674a7848a1f8093e517b96f639bb30b) == 4);
    const_str_digest_791955d87fda05583efc2b17b2970e84 = UNSTREAM_STRING_ASCII(&constant_bin[ 1265107 ], 33, 0);
    const_str_digest_a6c2dffd08ac7f8c3aafe807b8900450 = UNSTREAM_STRING_ASCII(&constant_bin[ 1265140 ], 24, 0);
    const_str_digest_4e6ec0a9fab7915c6779e736ed4930bc = UNSTREAM_STRING_ASCII(&constant_bin[ 1265164 ], 36, 0);
    const_dict_1a1329465257032bd7a750fa66e6a7f8 = _PyDict_NewPresized( 5 );
    PyDict_SetItem(const_dict_1a1329465257032bd7a750fa66e6a7f8, const_str_plain_id, const_str_plain_videos);
    PyDict_SetItem(const_dict_1a1329465257032bd7a750fa66e6a7f8, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_5ed2409dc23fd2bdcdbc401e0038b531 = UNSTREAM_STRING_ASCII(&constant_bin[ 1265200 ], 22, 0);
    PyDict_SetItem(const_dict_1a1329465257032bd7a750fa66e6a7f8, const_str_plain_title, const_str_digest_5ed2409dc23fd2bdcdbc401e0038b531);
    const_str_digest_341cae9353737844b9aa98513326b9d3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1265222 ], 77, 0);
    PyDict_SetItem(const_dict_1a1329465257032bd7a750fa66e6a7f8, const_str_plain_description, const_str_digest_341cae9353737844b9aa98513326b9d3);
    PyDict_SetItem(const_dict_1a1329465257032bd7a750fa66e6a7f8, const_str_plain_thumbnail, const_str_digest_a4d2c749144754fcad3c1b2f9e5cb89a);
    assert(PyDict_Size(const_dict_1a1329465257032bd7a750fa66e6a7f8) == 5);
    const_str_plain_vpath = UNSTREAM_STRING_ASCII(&constant_bin[ 1265299 ], 5, 1);
    const_str_digest_cb2fd3125dd0a81d282bc227f8fe2069 = UNSTREAM_STRING(&constant_bin[ 1265304 ], 58, 0);
    const_str_digest_4f3e88e7930c961656d17a69aac78eed = UNSTREAM_STRING_ASCII(&constant_bin[ 1265362 ], 53, 0);
    const_dict_1ae01ad7cf5471cbb1d1123c619743cc = _PyDict_NewPresized( 4 );
    const_str_plain_149298443_480_16c25b74_2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1265415 ], 24, 0);
    PyDict_SetItem(const_dict_1ae01ad7cf5471cbb1d1123c619743cc, const_str_plain_id, const_str_plain_149298443_480_16c25b74_2);
    PyDict_SetItem(const_dict_1ae01ad7cf5471cbb1d1123c619743cc, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_4adb0fef073fa59d61d6cd9dfc73c660 = UNSTREAM_STRING_ASCII(&constant_bin[ 1265439 ], 27, 0);
    PyDict_SetItem(const_dict_1ae01ad7cf5471cbb1d1123c619743cc, const_str_plain_title, const_str_digest_4adb0fef073fa59d61d6cd9dfc73c660);
    const_str_digest_5258d09fd398d42cc27019de9d5ea3f1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1265466 ], 12, 0);
    PyDict_SetItem(const_dict_1ae01ad7cf5471cbb1d1123c619743cc, const_str_plain_uploader, const_str_digest_5258d09fd398d42cc27019de9d5ea3f1);
    assert(PyDict_Size(const_dict_1ae01ad7cf5471cbb1d1123c619743cc) == 4);
    const_dict_4bd331e39989f460d046fd3852a172be = _PyDict_NewPresized( 2 );
    const_str_digest_7a3d28f061b3c74e909cf55df8526fca = UNSTREAM_STRING_ASCII(&constant_bin[ 1265478 ], 59, 0);
    PyDict_SetItem(const_dict_4bd331e39989f460d046fd3852a172be, const_str_plain_url, const_str_digest_7a3d28f061b3c74e909cf55df8526fca);
    PyDict_SetItem(const_dict_4bd331e39989f460d046fd3852a172be, const_str_plain_only_matching, Py_True);
    assert(PyDict_Size(const_dict_4bd331e39989f460d046fd3852a172be) == 2);
    const_str_digest_8d6dc8e24057e57717f46e488d09036a = UNSTREAM_STRING_ASCII(&constant_bin[ 1265537 ], 79, 0);
    const_str_digest_aef3fb0bc082634b4f30f315f7ee5e10 = UNSTREAM_STRING_ASCII(&constant_bin[ 1265616 ], 105, 0);
    const_dict_b7b2b152cf16c75a2ae880c28ebb1b06 = _PyDict_NewPresized( 4 );
    const_str_plain_7141703 = UNSTREAM_STRING_ASCII(&constant_bin[ 1039266 ], 7, 0);
    PyDict_SetItem(const_dict_b7b2b152cf16c75a2ae880c28ebb1b06, const_str_plain_id, const_str_plain_7141703);
    PyDict_SetItem(const_dict_b7b2b152cf16c75a2ae880c28ebb1b06, const_str_plain_ext, const_str_plain_mp3);
    PyDict_SetItem(const_dict_b7b2b152cf16c75a2ae880c28ebb1b06, const_str_plain_upload_date, const_str_plain_20141126);
    const_str_digest_8ae1885f5a79400eae879375c0db144b = UNSTREAM_STRING_ASCII(&constant_bin[ 1265721 ], 43, 0);
    PyDict_SetItem(const_dict_b7b2b152cf16c75a2ae880c28ebb1b06, const_str_plain_title, const_str_digest_8ae1885f5a79400eae879375c0db144b);
    assert(PyDict_Size(const_dict_b7b2b152cf16c75a2ae880c28ebb1b06) == 4);
    const_str_digest_0cd5171bb15c3f298dec92b403311dc1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1265764 ], 411, 0);
    const_dict_d820768e364ca345d457d2877702b614 = _PyDict_NewPresized( 5 );
    const_str_plain_2eb_1496309988 = UNSTREAM_STRING_ASCII(&constant_bin[ 1266175 ], 14, 0);
    PyDict_SetItem(const_dict_d820768e364ca345d457d2877702b614, const_str_plain_id, const_str_plain_2eb_1496309988);
    PyDict_SetItem(const_dict_d820768e364ca345d457d2877702b614, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_a309aabe62050b877ae94ae006c51a16 = UNSTREAM_STRING_ASCII(&constant_bin[ 1266189 ], 41, 0);
    PyDict_SetItem(const_dict_d820768e364ca345d457d2877702b614, const_str_plain_title, const_str_digest_a309aabe62050b877ae94ae006c51a16);
    const_str_digest_5e427f09dc1d291c26333eb2b055caa1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1266230 ], 36, 0);
    PyDict_SetItem(const_dict_d820768e364ca345d457d2877702b614, const_str_plain_description, const_str_digest_5e427f09dc1d291c26333eb2b055caa1);
    const_str_plain_brazilwtf = UNSTREAM_STRING_ASCII(&constant_bin[ 1266266 ], 9, 1);
    PyDict_SetItem(const_dict_d820768e364ca345d457d2877702b614, const_str_plain_uploader, const_str_plain_brazilwtf);
    assert(PyDict_Size(const_dict_d820768e364ca345d457d2877702b614) == 5);
    const_dict_5d5c4b8daf9b28c539e9e8a80024e7d8 = _PyDict_NewPresized( 5 );
    PyDict_SetItem(const_dict_5d5c4b8daf9b28c539e9e8a80024e7d8, const_str_plain_id, const_str_plain_index);
    PyDict_SetItem(const_dict_5d5c4b8daf9b28c539e9e8a80024e7d8, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_5d5c4b8daf9b28c539e9e8a80024e7d8, const_str_plain_title, const_str_plain_index);
    const_str_plain_20140720 = UNSTREAM_STRING_ASCII(&constant_bin[ 1266275 ], 8, 0);
    PyDict_SetItem(const_dict_5d5c4b8daf9b28c539e9e8a80024e7d8, const_str_plain_upload_date, const_str_plain_20140720);
    const_str_digest_2d9fcc3f11381d55d43a98d4c3ae9440 = UNSTREAM_STRING_ASCII(&constant_bin[ 1266283 ], 11, 0);
    PyDict_SetItem(const_dict_5d5c4b8daf9b28c539e9e8a80024e7d8, const_str_plain_formats, const_str_digest_2d9fcc3f11381d55d43a98d4c3ae9440);
    assert(PyDict_Size(const_dict_5d5c4b8daf9b28c539e9e8a80024e7d8) == 5);
    const_dict_3ff43d7f21fa9e04cb95faa1e70d5067 = _PyDict_NewPresized( 2 );
    const_str_digest_dac91ed6515ffe17d9afa8fc898870cc = UNSTREAM_STRING_ASCII(&constant_bin[ 1266294 ], 70, 0);
    PyDict_SetItem(const_dict_3ff43d7f21fa9e04cb95faa1e70d5067, const_str_plain_url, const_str_digest_dac91ed6515ffe17d9afa8fc898870cc);
    const_dict_c74ff3f2b81274bd090b08ce5514b368 = _PyDict_NewPresized( 7 );
    const_str_plain_8RUoRhRi = UNSTREAM_STRING_ASCII(&constant_bin[ 1110296 ], 8, 0);
    PyDict_SetItem(const_dict_c74ff3f2b81274bd090b08ce5514b368, const_str_plain_id, const_str_plain_8RUoRhRi);
    PyDict_SetItem(const_dict_c74ff3f2b81274bd090b08ce5514b368, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_619ff3b88f711dfb20c36f8b310ded3c = UNSTREAM_STRING_ASCII(&constant_bin[ 1110349 ], 77, 0);
    PyDict_SetItem(const_dict_c74ff3f2b81274bd090b08ce5514b368, const_str_plain_title, const_str_digest_619ff3b88f711dfb20c36f8b310ded3c);
    const_str_digest_664888bdf3e5842ba734e10bd30a7780 = UNSTREAM_STRING_ASCII(&constant_bin[ 1110441 ], 36, 0);
    PyDict_SetItem(const_dict_c74ff3f2b81274bd090b08ce5514b368, const_str_plain_description, const_str_digest_664888bdf3e5842ba734e10bd30a7780);
    const_int_pos_1428207000 = PyLong_FromUnsignedLong(1428207000ul);
    PyDict_SetItem(const_dict_c74ff3f2b81274bd090b08ce5514b368, const_str_plain_timestamp, const_int_pos_1428207000);
    const_str_plain_20150405 = UNSTREAM_STRING_ASCII(&constant_bin[ 1110541 ], 8, 0);
    PyDict_SetItem(const_dict_c74ff3f2b81274bd090b08ce5514b368, const_str_plain_upload_date, const_str_plain_20150405);
    const_str_plain_Heather = UNSTREAM_STRING_ASCII(&constant_bin[ 1110561 ], 7, 1);
    PyDict_SetItem(const_dict_c74ff3f2b81274bd090b08ce5514b368, const_str_plain_uploader, const_str_plain_Heather);
    assert(PyDict_Size(const_dict_c74ff3f2b81274bd090b08ce5514b368) == 7);
    PyDict_SetItem(const_dict_3ff43d7f21fa9e04cb95faa1e70d5067, const_str_plain_info_dict, const_dict_c74ff3f2b81274bd090b08ce5514b368);
    assert(PyDict_Size(const_dict_3ff43d7f21fa9e04cb95faa1e70d5067) == 2);
    const_list_str_plain_Viddler_list = PyList_New(1);
    const_str_plain_Viddler = UNSTREAM_STRING_ASCII(&constant_bin[ 1266364 ], 7, 1);
    PyList_SET_ITEM(const_list_str_plain_Viddler_list, 0, const_str_plain_Viddler); Py_INCREF(const_str_plain_Viddler);
    const_dict_83492c93d6769ea317bcab9791912fa4 = _PyDict_NewPresized( 1 );
    PyDict_SetItem(const_dict_83492c93d6769ea317bcab9791912fa4, const_str_plain_ie, const_str_plain_BBCCoUk);
    assert(PyDict_Size(const_dict_83492c93d6769ea317bcab9791912fa4) == 1);
    const_str_plain_20160627 = UNSTREAM_STRING_ASCII(&constant_bin[ 1239105 ], 8, 0);
    const_dict_f84b2a3597a968e8f6c3c0ccf92e77a3 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1266371 ], 371);
    const_dict_af75163ec61c339465cb29448b26598e = _PyDict_NewPresized( 3 );
    const_str_digest_382ae421333cfa58a9c91ea607a1241a = UNSTREAM_STRING_ASCII(&constant_bin[ 1266742 ], 68, 0);
    PyDict_SetItem(const_dict_af75163ec61c339465cb29448b26598e, const_str_plain_url, const_str_digest_382ae421333cfa58a9c91ea607a1241a);
    const_str_plain_a47372ee61b39a7b90287094d447d94e = UNSTREAM_STRING_ASCII(&constant_bin[ 1266810 ], 32, 1);
    PyDict_SetItem(const_dict_af75163ec61c339465cb29448b26598e, const_str_plain_md5, const_str_plain_a47372ee61b39a7b90287094d447d94e);
    const_dict_2bc2ada2d4f0ec3c3705fe835697fe00 = _PyDict_NewPresized( 3 );
    const_str_plain_10153467542406923 = UNSTREAM_STRING_ASCII(&constant_bin[ 1266842 ], 17, 0);
    PyDict_SetItem(const_dict_2bc2ada2d4f0ec3c3705fe835697fe00, const_str_plain_id, const_str_plain_10153467542406923);
    PyDict_SetItem(const_dict_2bc2ada2d4f0ec3c3705fe835697fe00, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_28df388abf1bf3d0a80e4498506d54c2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1266859 ], 33, 0);
    PyDict_SetItem(const_dict_2bc2ada2d4f0ec3c3705fe835697fe00, const_str_plain_title, const_str_digest_28df388abf1bf3d0a80e4498506d54c2);
    assert(PyDict_Size(const_dict_2bc2ada2d4f0ec3c3705fe835697fe00) == 3);
    PyDict_SetItem(const_dict_af75163ec61c339465cb29448b26598e, const_str_plain_info_dict, const_dict_2bc2ada2d4f0ec3c3705fe835697fe00);
    assert(PyDict_Size(const_dict_af75163ec61c339465cb29448b26598e) == 3);
    const_dict_bd33cb4224d5993140f7cad747932c49 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1266892 ], 365);
    const_str_digest_956af89fee9eb58d00eb81ed218ee0e3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1267257 ], 73, 0);
    const_dict_45b031c387bada7e8d887760a2c0154d = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1267330 ], 274);
    const_str_digest_7d810257f8131bc421f2d36cd94776de = UNSTREAM_STRING(&constant_bin[ 1267604 ], 34, 0);
    const_str_digest_8a28631be02f56a8f9d75bbeb9e5389a = UNSTREAM_STRING_ASCII(&constant_bin[ 1267638 ], 64, 0);
    const_str_digest_7a1d954614524c953f0e6729f6da7eca = UNSTREAM_STRING_ASCII(&constant_bin[ 1267702 ], 36, 0);
    const_dict_49bfd386de3590b8539fed3628bdb804 = _PyDict_NewPresized( 3 );
    const_str_digest_afd28eb72950765a0b260d2981bd1f47 = UNSTREAM_STRING_ASCII(&constant_bin[ 1267738 ], 71, 0);
    PyDict_SetItem(const_dict_49bfd386de3590b8539fed3628bdb804, const_str_plain_url, const_str_digest_afd28eb72950765a0b260d2981bd1f47);
    const_dict_8bf89aa2ba50d1b1fc31af95155a3a67 = _PyDict_NewPresized( 4 );
    const_str_digest_520655d8a19a5e25cc58a833ac53fbde = UNSTREAM_STRING_ASCII(&constant_bin[ 1267792 ], 12, 0);
    PyDict_SetItem(const_dict_8bf89aa2ba50d1b1fc31af95155a3a67, const_str_plain_id, const_str_digest_520655d8a19a5e25cc58a833ac53fbde);
    PyDict_SetItem(const_dict_8bf89aa2ba50d1b1fc31af95155a3a67, const_str_plain_ext, const_str_plain_flv);
    PyDict_SetItem(const_dict_8bf89aa2ba50d1b1fc31af95155a3a67, const_str_plain_title, const_str_digest_520655d8a19a5e25cc58a833ac53fbde);
    PyDict_SetItem(const_dict_8bf89aa2ba50d1b1fc31af95155a3a67, const_str_plain_formats, const_str_digest_09d979674cea5c89c2f840e40b09685e);
    assert(PyDict_Size(const_dict_8bf89aa2ba50d1b1fc31af95155a3a67) == 4);
    PyDict_SetItem(const_dict_49bfd386de3590b8539fed3628bdb804, const_str_plain_info_dict, const_dict_8bf89aa2ba50d1b1fc31af95155a3a67);
    PyDict_SetItem(const_dict_49bfd386de3590b8539fed3628bdb804, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_49bfd386de3590b8539fed3628bdb804) == 3);
    const_str_digest_7104f10ee7f0d10f5b0ecf3be8c7f761 = UNSTREAM_STRING(&constant_bin[ 1267809 ], 12, 0);
    const_dict_841daa731af2cdee60e4ef4dbc3dae24 = _PyDict_NewPresized( 2 );
    const_str_digest_571f4307fda27f238e807650bd4ce313 = UNSTREAM_STRING_ASCII(&constant_bin[ 1267821 ], 20, 0);
    PyDict_SetItem(const_dict_841daa731af2cdee60e4ef4dbc3dae24, const_str_plain_id, const_str_digest_571f4307fda27f238e807650bd4ce313);
    const_str_digest_f26ec0316899d320cd382fad9a535241 = UNSTREAM_STRING_ASCII(&constant_bin[ 1267841 ], 20, 0);
    PyDict_SetItem(const_dict_841daa731af2cdee60e4ef4dbc3dae24, const_str_plain_title, const_str_digest_f26ec0316899d320cd382fad9a535241);
    assert(PyDict_Size(const_dict_841daa731af2cdee60e4ef4dbc3dae24) == 2);
    const_dict_83a0f6699a28066ac8d63e53b392da56 = _PyDict_NewPresized( 7 );
    PyDict_SetItem(const_dict_83a0f6699a28066ac8d63e53b392da56, const_str_plain_id, const_str_plain_5b400b834b32992a310622b9);
    PyDict_SetItem(const_dict_83a0f6699a28066ac8d63e53b392da56, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_83a0f6699a28066ac8d63e53b392da56, const_str_plain_title, const_str_digest_43ad8896fc2ad39e8862bf58566b7fed);
    PyDict_SetItem(const_dict_83a0f6699a28066ac8d63e53b392da56, const_str_plain_thumbnail, const_str_digest_166b2b4060c9b8da4c48f6e0994484e5);
    PyDict_SetItem(const_dict_83a0f6699a28066ac8d63e53b392da56, const_str_plain_description, const_str_digest_7cbe5c28112cefbaa9df054ae1ed49f3);
    PyDict_SetItem(const_dict_83a0f6699a28066ac8d63e53b392da56, const_str_plain_upload_date, const_str_plain_20170909);
    PyDict_SetItem(const_dict_83a0f6699a28066ac8d63e53b392da56, const_str_plain_timestamp, const_int_pos_1504915200);
    assert(PyDict_Size(const_dict_83a0f6699a28066ac8d63e53b392da56) == 7);
    const_dict_3c161d66ffe02888084fe50e004c5b88 = _PyDict_NewPresized( 3 );
    const_str_digest_5435d7f0d6ef45be44b2ef5a40d89dca = UNSTREAM_STRING_ASCII(&constant_bin[ 1267861 ], 33, 0);
    PyDict_SetItem(const_dict_3c161d66ffe02888084fe50e004c5b88, const_str_plain_url, const_str_digest_5435d7f0d6ef45be44b2ef5a40d89dca);
    const_dict_e1dc256fef4ba6a2a626ed30f33fbbee = _PyDict_NewPresized( 2 );
    const_str_plain_home = UNSTREAM_STRING_ASCII(&constant_bin[ 752075 ], 4, 1);
    PyDict_SetItem(const_dict_e1dc256fef4ba6a2a626ed30f33fbbee, const_str_plain_id, const_str_plain_home);
    const_str_digest_5b416f060edfac558bf18ca7f883b387 = UNSTREAM_STRING(&constant_bin[ 1267894 ], 52, 0);
    PyDict_SetItem(const_dict_e1dc256fef4ba6a2a626ed30f33fbbee, const_str_plain_title, const_str_digest_5b416f060edfac558bf18ca7f883b387);
    assert(PyDict_Size(const_dict_e1dc256fef4ba6a2a626ed30f33fbbee) == 2);
    PyDict_SetItem(const_dict_3c161d66ffe02888084fe50e004c5b88, const_str_plain_info_dict, const_dict_e1dc256fef4ba6a2a626ed30f33fbbee);
    PyDict_SetItem(const_dict_3c161d66ffe02888084fe50e004c5b88, const_str_plain_playlist_count, const_int_pos_2);
    assert(PyDict_Size(const_dict_3c161d66ffe02888084fe50e004c5b88) == 3);
    const_str_digest_808c0b0da4bfe0750d54ada38d7d3310 = UNSTREAM_STRING_ASCII(&constant_bin[ 1267946 ], 14, 0);
    const_dict_1b8e90e8344362c4d9a9573632391572 = _PyDict_NewPresized( 3 );
    const_str_digest_9c28658d0670e464df592e3110c28075 = UNSTREAM_STRING_ASCII(&constant_bin[ 1267960 ], 48, 0);
    PyDict_SetItem(const_dict_1b8e90e8344362c4d9a9573632391572, const_str_plain_url, const_str_digest_9c28658d0670e464df592e3110c28075);
    const_dict_5eb7ac0263b8272916eed171669de9ec = _PyDict_NewPresized( 5 );
    const_str_plain_3377616 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268008 ], 7, 0);
    PyDict_SetItem(const_dict_5eb7ac0263b8272916eed171669de9ec, const_str_plain_id, const_str_plain_3377616);
    PyDict_SetItem(const_dict_5eb7ac0263b8272916eed171669de9ec, const_str_plain_ext, const_str_plain_mp3);
    const_str_digest_48b4640e8f813310a9000d652628c00a = UNSTREAM_STRING_ASCII(&constant_bin[ 1268015 ], 92, 0);
    PyDict_SetItem(const_dict_5eb7ac0263b8272916eed171669de9ec, const_str_plain_title, const_str_digest_48b4640e8f813310a9000d652628c00a);
    const_str_digest_ee03d8d8c0569912daf745e884cd0d18 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268107 ], 36, 0);
    PyDict_SetItem(const_dict_5eb7ac0263b8272916eed171669de9ec, const_str_plain_description, const_str_digest_ee03d8d8c0569912daf745e884cd0d18);
    const_str_plain_20150220 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268143 ], 8, 0);
    PyDict_SetItem(const_dict_5eb7ac0263b8272916eed171669de9ec, const_str_plain_upload_date, const_str_plain_20150220);
    assert(PyDict_Size(const_dict_5eb7ac0263b8272916eed171669de9ec) == 5);
    PyDict_SetItem(const_dict_1b8e90e8344362c4d9a9573632391572, const_str_plain_info_dict, const_dict_5eb7ac0263b8272916eed171669de9ec);
    const_str_digest_9c9ed98b20a386498761f9e86753a4be = UNSTREAM_STRING_ASCII(&constant_bin[ 1268151 ], 64, 0);
    PyDict_SetItem(const_dict_1b8e90e8344362c4d9a9573632391572, const_str_plain_skip, const_str_digest_9c9ed98b20a386498761f9e86753a4be);
    assert(PyDict_Size(const_dict_1b8e90e8344362c4d9a9573632391572) == 3);
    const_str_digest_fe98100ba76574ce453b2d10c5553544 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268215 ], 76, 0);
    const_dict_c5c7f4f6f8c55b9b79710e4b917668c5 = _PyDict_NewPresized( 3 );
    const_str_plain_55304 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268291 ], 5, 0);
    PyDict_SetItem(const_dict_c5c7f4f6f8c55b9b79710e4b917668c5, const_str_plain_id, const_str_plain_55304);
    PyDict_SetItem(const_dict_c5c7f4f6f8c55b9b79710e4b917668c5, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_078172ba3872c52c76029ef96cd9c65d = UNSTREAM_STRING(&constant_bin[ 1268296 ], 41, 0);
    PyDict_SetItem(const_dict_c5c7f4f6f8c55b9b79710e4b917668c5, const_str_plain_title, const_str_digest_078172ba3872c52c76029ef96cd9c65d);
    assert(PyDict_Size(const_dict_c5c7f4f6f8c55b9b79710e4b917668c5) == 3);
    const_str_plain_20171122 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268337 ], 8, 0);
    const_str_digest_74d01def66293c04a797c788fcd6d66b = UNSTREAM_STRING_ASCII(&constant_bin[ 1268345 ], 55, 0);
    const_str_digest_dcec1d79168ad2734eb42950bc346d17 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268400 ], 50, 0);
    const_str_digest_5ba495d9df3fb420e93eec3efa42d5d5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268450 ], 44, 0);
    const_dict_6dfcb47a9fcb9d30527435a267652e47 = _PyDict_NewPresized( 3 );
    const_str_digest_28d7d5128a57e6e442673c619a1dc0cd = UNSTREAM_STRING_ASCII(&constant_bin[ 1268494 ], 70, 0);
    PyDict_SetItem(const_dict_6dfcb47a9fcb9d30527435a267652e47, const_str_plain_url, const_str_digest_28d7d5128a57e6e442673c619a1dc0cd);
    const_str_plain_2baf4ddd70f697d94b1c18cf796d5107 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268564 ], 32, 0);
    PyDict_SetItem(const_dict_6dfcb47a9fcb9d30527435a267652e47, const_str_plain_md5, const_str_plain_2baf4ddd70f697d94b1c18cf796d5107);
    const_dict_e27b95402f9cadc0d176fc2375b8c7cf = _PyDict_NewPresized( 4 );
    const_str_plain_06e53103ca9aa = UNSTREAM_STRING_ASCII(&constant_bin[ 1268596 ], 13, 0);
    PyDict_SetItem(const_dict_e27b95402f9cadc0d176fc2375b8c7cf, const_str_plain_id, const_str_plain_06e53103ca9aa);
    PyDict_SetItem(const_dict_e27b95402f9cadc0d176fc2375b8c7cf, const_str_plain_ext, const_str_plain_flv);
    PyDict_SetItem(const_dict_e27b95402f9cadc0d176fc2375b8c7cf, const_str_plain_title, const_str_digest_dcec1d79168ad2734eb42950bc346d17);
    const_str_digest_7e8a60923abc4630e2a7687c1b1e9c84 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268609 ], 14, 0);
    PyDict_SetItem(const_dict_e27b95402f9cadc0d176fc2375b8c7cf, const_str_plain_description, const_str_digest_7e8a60923abc4630e2a7687c1b1e9c84);
    assert(PyDict_Size(const_dict_e27b95402f9cadc0d176fc2375b8c7cf) == 4);
    PyDict_SetItem(const_dict_6dfcb47a9fcb9d30527435a267652e47, const_str_plain_info_dict, const_dict_e27b95402f9cadc0d176fc2375b8c7cf);
    assert(PyDict_Size(const_dict_6dfcb47a9fcb9d30527435a267652e47) == 3);
    const_str_digest_9e80e937e330f097dbda5d746bbc9808 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268623 ], 37, 0);
    const_str_plain_07448641 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268660 ], 8, 0);
    const_str_digest_30d75a2497a8bdc614e4ecdd0ee1d4da = UNSTREAM_STRING_ASCII(&constant_bin[ 1268668 ], 12, 0);
    const_dict_77cc90086a31ff1832822ff7be32ccbe = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_77cc90086a31ff1832822ff7be32ccbe, const_str_plain_id, const_str_plain_content);
    PyDict_SetItem(const_dict_77cc90086a31ff1832822ff7be32ccbe, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_77cc90086a31ff1832822ff7be32ccbe, const_str_plain_title, const_str_plain_content);
    const_str_digest_5c69a255cc4250e6f3479de171015495 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268680 ], 10, 0);
    PyDict_SetItem(const_dict_77cc90086a31ff1832822ff7be32ccbe, const_str_plain_formats, const_str_digest_5c69a255cc4250e6f3479de171015495);
    assert(PyDict_Size(const_dict_77cc90086a31ff1832822ff7be32ccbe) == 4);
    const_dict_9e65411165a4af514cda08a733cec2ea = _PyDict_NewPresized( 3 );
    const_str_digest_0b6b2bd1e4f601cf0261a680365c23c4 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268690 ], 27, 0);
    PyDict_SetItem(const_dict_9e65411165a4af514cda08a733cec2ea, const_str_plain_url, const_str_digest_0b6b2bd1e4f601cf0261a680365c23c4);
    const_dict_0a111ea4a92e4e384e4c83333336fb8b = _PyDict_NewPresized( 3 );
    const_str_plain_123537347 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268717 ], 9, 0);
    PyDict_SetItem(const_dict_0a111ea4a92e4e384e4c83333336fb8b, const_str_plain_id, const_str_plain_123537347);
    PyDict_SetItem(const_dict_0a111ea4a92e4e384e4c83333336fb8b, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_c5dad1c31f87fd5bea92c2418dd40f69 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268726 ], 54, 0);
    PyDict_SetItem(const_dict_0a111ea4a92e4e384e4c83333336fb8b, const_str_plain_title, const_str_digest_c5dad1c31f87fd5bea92c2418dd40f69);
    assert(PyDict_Size(const_dict_0a111ea4a92e4e384e4c83333336fb8b) == 3);
    PyDict_SetItem(const_dict_9e65411165a4af514cda08a733cec2ea, const_str_plain_info_dict, const_dict_0a111ea4a92e4e384e4c83333336fb8b);
    PyDict_SetItem(const_dict_9e65411165a4af514cda08a733cec2ea, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_9e65411165a4af514cda08a733cec2ea) == 3);
    const_str_plain_NBCNews = UNSTREAM_STRING_ASCII(&constant_bin[ 1268780 ], 7, 1);
    const_str_digest_ada636c8275574036b9f0936e996dcbf = UNSTREAM_STRING_ASCII(&constant_bin[ 1268787 ], 31, 0);
    const_str_digest_4a8afc75ab923c9e074925090dc0022e = UNSTREAM_STRING_ASCII(&constant_bin[ 1268818 ], 115, 0);
    const_tuple_str_plain_PornHubIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_PornHubIE_tuple, 0, const_str_plain_PornHubIE); Py_INCREF(const_str_plain_PornHubIE);
    const_str_digest_d072056fe22d297c08a1c8ae9b8fd043 = UNSTREAM_STRING_ASCII(&constant_bin[ 1268933 ], 112, 0);
    const_str_plain_ca00a040364b5b439230e7ebfd02c4e9 = UNSTREAM_STRING_ASCII(&constant_bin[ 1269045 ], 32, 1);
    const_str_digest_916068a12c1c29a43b3ba2c46efbd966 = UNSTREAM_STRING_ASCII(&constant_bin[ 1269077 ], 90, 0);
    const_dict_e99f4b2dbc7ffeb936cdad99e826bd5b = _PyDict_NewPresized( 3 );
    const_str_plain_31c9291ab41fac05471db4e73aa11717 = UNSTREAM_STRING_ASCII(&constant_bin[ 1047309 ], 32, 0);
    PyDict_SetItem(const_dict_e99f4b2dbc7ffeb936cdad99e826bd5b, const_str_plain_id, const_str_plain_31c9291ab41fac05471db4e73aa11717);
    PyDict_SetItem(const_dict_e99f4b2dbc7ffeb936cdad99e826bd5b, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_e99f4b2dbc7ffeb936cdad99e826bd5b, const_str_plain_title, const_str_plain_31c9291ab41fac05471db4e73aa11717);
    assert(PyDict_Size(const_dict_e99f4b2dbc7ffeb936cdad99e826bd5b) == 3);
    const_str_digest_22c49b3ccd72d3ca0b59da218d5ababd = UNSTREAM_STRING_ASCII(&constant_bin[ 1269167 ], 58, 0);
    const_str_plain_95d035dc5c8a401588e9c0e6bd1e9c92 = UNSTREAM_STRING_ASCII(&constant_bin[ 1269225 ], 32, 0);
    const_str_digest_dbd5fca7d01509846205c373257c4e19 = UNSTREAM_STRING(&constant_bin[ 1269257 ], 131, 0);
    const_dict_5ac0c17afd85cad1b07f581c41b79e48 = _PyDict_NewPresized( 3 );
    const_str_digest_d9cb76daf72fd2e2d329c70d82e2ab52 = UNSTREAM_STRING_ASCII(&constant_bin[ 1269388 ], 41, 0);
    PyDict_SetItem(const_dict_5ac0c17afd85cad1b07f581c41b79e48, const_str_plain_url, const_str_digest_d9cb76daf72fd2e2d329c70d82e2ab52);
    const_dict_7fefa860ff2fc3f7c2c3682466e8bda2 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_7fefa860ff2fc3f7c2c3682466e8bda2, const_str_plain_id, const_str_digest_d9cb76daf72fd2e2d329c70d82e2ab52);
    PyDict_SetItem(const_dict_7fefa860ff2fc3f7c2c3682466e8bda2, const_str_plain_title, const_str_digest_b4b3723a7dabc92e957ddcca682fb5a8);
    const_str_digest_9ea218cd7a7e7a013efa5a839bf5d1ad = UNSTREAM_STRING_ASCII(&constant_bin[ 1269429 ], 41, 0);
    PyDict_SetItem(const_dict_7fefa860ff2fc3f7c2c3682466e8bda2, const_str_plain_description, const_str_digest_9ea218cd7a7e7a013efa5a839bf5d1ad);
    assert(PyDict_Size(const_dict_7fefa860ff2fc3f7c2c3682466e8bda2) == 3);
    PyDict_SetItem(const_dict_5ac0c17afd85cad1b07f581c41b79e48, const_str_plain_info_dict, const_dict_7fefa860ff2fc3f7c2c3682466e8bda2);
    PyDict_SetItem(const_dict_5ac0c17afd85cad1b07f581c41b79e48, const_str_plain_playlist_mincount, const_int_pos_11);
    assert(PyDict_Size(const_dict_5ac0c17afd85cad1b07f581c41b79e48) == 3);
    const_dict_b6854f20e8f87db3a30a64c459493552 = _PyDict_NewPresized( 2 );
    const_str_digest_053dbc254acabeab5c744963d3509762 = UNSTREAM_STRING_ASCII(&constant_bin[ 1269470 ], 73, 0);
    PyDict_SetItem(const_dict_b6854f20e8f87db3a30a64c459493552, const_str_plain_url, const_str_digest_053dbc254acabeab5c744963d3509762);
    const_dict_54a1b80ecf1a2a1519164aa6e6b96a36 = _PyDict_NewPresized( 3 );
    const_str_plain_118046 = UNSTREAM_STRING_ASCII(&constant_bin[ 1269543 ], 6, 0);
    PyDict_SetItem(const_dict_54a1b80ecf1a2a1519164aa6e6b96a36, const_str_plain_id, const_str_plain_118046);
    PyDict_SetItem(const_dict_54a1b80ecf1a2a1519164aa6e6b96a36, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_11c9384b95fa8e500e16f745f1c8d450 = UNSTREAM_STRING(&constant_bin[ 1269549 ], 44, 0);
    PyDict_SetItem(const_dict_54a1b80ecf1a2a1519164aa6e6b96a36, const_str_plain_title, const_str_digest_11c9384b95fa8e500e16f745f1c8d450);
    assert(PyDict_Size(const_dict_54a1b80ecf1a2a1519164aa6e6b96a36) == 3);
    PyDict_SetItem(const_dict_b6854f20e8f87db3a30a64c459493552, const_str_plain_info_dict, const_dict_54a1b80ecf1a2a1519164aa6e6b96a36);
    assert(PyDict_Size(const_dict_b6854f20e8f87db3a30a64c459493552) == 2);
    const_str_plain_20130904 = UNSTREAM_STRING_ASCII(&constant_bin[ 1269593 ], 8, 0);
    const_str_digest_89c2f1e75b55b1873508abc45e296765 = UNSTREAM_STRING(&constant_bin[ 1269601 ], 24, 0);
    const_dict_2312ed6c2b122d5992bf11bce9e5c434 = _PyDict_NewPresized( 1 );
    const_str_plain_XHamsterEmbed = UNSTREAM_STRING_ASCII(&constant_bin[ 40645 ], 13, 1);
    PyDict_SetItem(const_dict_2312ed6c2b122d5992bf11bce9e5c434, const_str_plain_ie, const_str_plain_XHamsterEmbed);
    assert(PyDict_Size(const_dict_2312ed6c2b122d5992bf11bce9e5c434) == 1);
    const_str_digest_d16a76ff3433599b3d11b7abc309b9a8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1269625 ], 74, 0);
    const_dict_159b41e52d8a3d6a5f5694c0a3fc169a = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1269699 ], 582);
    const_str_digest_89d34ddfe5eb1cdfae3fe7ec053d1e5e = UNSTREAM_STRING_ASCII(&constant_bin[ 1270281 ], 29, 0);
    const_str_digest_b50658aff13b7adbd3c9f6130b8e5081 = UNSTREAM_STRING(&constant_bin[ 1270310 ], 56, 0);
    const_str_digest_f7f53a31fabe8b05a913af447cd9aee4 = UNSTREAM_STRING_ASCII(&constant_bin[ 1270366 ], 81, 0);
    const_str_digest_f2ed562d581c4f32fea2797ec98624e1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1270447 ], 36, 0);
    const_tuple_str_plain_TNAFlixNetworkEmbedIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TNAFlixNetworkEmbedIE_tuple, 0, const_str_plain_TNAFlixNetworkEmbedIE); Py_INCREF(const_str_plain_TNAFlixNetworkEmbedIE);
    const_str_plain_3519514 = UNSTREAM_STRING_ASCII(&constant_bin[ 1270483 ], 7, 0);
    const_str_digest_84aecec1a04fe2ddef8b86ebbd61f3c8 = UNSTREAM_STRING(&constant_bin[ 1270490 ], 43, 0);
    const_str_plain_582306 = UNSTREAM_STRING_ASCII(&constant_bin[ 1174766 ], 6, 0);
    const_int_pos_1265032391 = PyLong_FromUnsignedLong(1265032391ul);
    const_int_pos_1432816365 = PyLong_FromUnsignedLong(1432816365ul);
    const_str_digest_0c03fd27c3babeccd333152db321a801 = UNSTREAM_STRING_ASCII(&constant_bin[ 1270533 ], 193, 0);
    const_dict_442775758a6faeac18793ba5c8ef4db1 = _PyDict_NewPresized( 4 );
    const_str_plain_1495629 = UNSTREAM_STRING_ASCII(&constant_bin[ 1270726 ], 7, 0);
    PyDict_SetItem(const_dict_442775758a6faeac18793ba5c8ef4db1, const_str_plain_id, const_str_plain_1495629);
    PyDict_SetItem(const_dict_442775758a6faeac18793ba5c8ef4db1, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_29e20f5f99cdc48067e0af1a503dedab = UNSTREAM_STRING_ASCII(&constant_bin[ 1270733 ], 61, 0);
    PyDict_SetItem(const_dict_442775758a6faeac18793ba5c8ef4db1, const_str_plain_title, const_str_digest_29e20f5f99cdc48067e0af1a503dedab);
    const_str_digest_d26e9268cc408b66c6e8ba12a5a365a8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1270794 ], 36, 0);
    PyDict_SetItem(const_dict_442775758a6faeac18793ba5c8ef4db1, const_str_plain_description, const_str_digest_d26e9268cc408b66c6e8ba12a5a365a8);
    assert(PyDict_Size(const_dict_442775758a6faeac18793ba5c8ef4db1) == 4);
    const_str_digest_5adc41b43b6b664ab16f36a102551a56 = UNSTREAM_STRING_ASCII(&constant_bin[ 1270830 ], 21, 0);
    const_dict_7c17bc28a66d65c08fc842a388468051 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1270851 ], 315);
    const_str_plain_2b35148fcf48da41c9fb4591650784f3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1271166 ], 32, 0);
    const_str_digest_1e3f0fe701d436457a685da6c8ddbafc = UNSTREAM_STRING_ASCII(&constant_bin[ 1271198 ], 34, 0);
    const_str_digest_1e7994a66f4cdf34edc87136750d7ba2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1271232 ], 11, 0);
    const_str_digest_c8146b1189aa1a23c73b36a4400a118a = UNSTREAM_STRING_ASCII(&constant_bin[ 1271243 ], 42, 0);
    const_dict_dcad60b1d78df1778b10219548813094 = _PyDict_NewPresized( 3 );
    const_str_digest_01f74ac7b6e9c63e20b751474e10b6a8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1271285 ], 91, 0);
    PyDict_SetItem(const_dict_dcad60b1d78df1778b10219548813094, const_str_plain_url, const_str_digest_01f74ac7b6e9c63e20b751474e10b6a8);
    PyDict_SetItem(const_dict_dcad60b1d78df1778b10219548813094, const_str_plain_md5, const_str_plain_2b35148fcf48da41c9fb4591650784f3);
    const_dict_5c00478bf329eea84dfaab82c3ee0b17 = _PyDict_NewPresized( 6 );
    const_str_plain_5348741021001 = UNSTREAM_STRING_ASCII(&constant_bin[ 1271376 ], 13, 0);
    PyDict_SetItem(const_dict_5c00478bf329eea84dfaab82c3ee0b17, const_str_plain_id, const_str_plain_5348741021001);
    PyDict_SetItem(const_dict_5c00478bf329eea84dfaab82c3ee0b17, const_str_plain_ext, const_str_plain_mp4);
    const_str_plain_20170306 = UNSTREAM_STRING_ASCII(&constant_bin[ 1271389 ], 8, 0);
    PyDict_SetItem(const_dict_5c00478bf329eea84dfaab82c3ee0b17, const_str_plain_upload_date, const_str_plain_20170306);
    const_str_plain_4191638492001 = UNSTREAM_STRING_ASCII(&constant_bin[ 1271397 ], 13, 0);
    PyDict_SetItem(const_dict_5c00478bf329eea84dfaab82c3ee0b17, const_str_plain_uploader_id, const_str_plain_4191638492001);
    const_int_pos_1488769918 = PyLong_FromUnsignedLong(1488769918ul);
    PyDict_SetItem(const_dict_5c00478bf329eea84dfaab82c3ee0b17, const_str_plain_timestamp, const_int_pos_1488769918);
    const_str_digest_f0e0db11654fd75cef8196a67f33bf16 = UNSTREAM_STRING_ASCII(&constant_bin[ 1271410 ], 60, 0);
    PyDict_SetItem(const_dict_5c00478bf329eea84dfaab82c3ee0b17, const_str_plain_title, const_str_digest_f0e0db11654fd75cef8196a67f33bf16);
    assert(PyDict_Size(const_dict_5c00478bf329eea84dfaab82c3ee0b17) == 6);
    PyDict_SetItem(const_dict_dcad60b1d78df1778b10219548813094, const_str_plain_info_dict, const_dict_5c00478bf329eea84dfaab82c3ee0b17);
    assert(PyDict_Size(const_dict_dcad60b1d78df1778b10219548813094) == 3);
    const_dict_cbfb26133f12b4632df64aed552a2011 = _PyDict_NewPresized( 2 );
    const_str_plain_showthread = UNSTREAM_STRING_ASCII(&constant_bin[ 1271470 ], 10, 1);
    PyDict_SetItem(const_dict_cbfb26133f12b4632df64aed552a2011, const_str_plain_id, const_str_plain_showthread);
    const_str_digest_9cad8cfdc7508a9054804e23f9a16eba = UNSTREAM_STRING_ASCII(&constant_bin[ 1271480 ], 66, 0);
    PyDict_SetItem(const_dict_cbfb26133f12b4632df64aed552a2011, const_str_plain_title, const_str_digest_9cad8cfdc7508a9054804e23f9a16eba);
    assert(PyDict_Size(const_dict_cbfb26133f12b4632df64aed552a2011) == 2);
    const_list_str_digest_def4b6a20227ee3aa9d0578ed6dbbee7_list = PyList_New(1);
    PyList_SET_ITEM(const_list_str_digest_def4b6a20227ee3aa9d0578ed6dbbee7_list, 0, const_str_digest_def4b6a20227ee3aa9d0578ed6dbbee7); Py_INCREF(const_str_digest_def4b6a20227ee3aa9d0578ed6dbbee7);
    const_str_digest_a7edaad7542c521e7e811863d1fc6ea7 = UNSTREAM_STRING_ASCII(&constant_bin[ 1271546 ], 36, 0);
    const_str_digest_dc2932479b6f5cbbb510334fae5ffea8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1271582 ], 46, 0);
    const_tuple_str_plain_LimelightBaseIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LimelightBaseIE_tuple, 0, const_str_plain_LimelightBaseIE); Py_INCREF(const_str_plain_LimelightBaseIE);
    const_str_plain_43254897 = UNSTREAM_STRING_ASCII(&constant_bin[ 1271628 ], 8, 0);
    const_dict_0c5a3ef8dc91e1ea20d0cb663d8fb41a = _PyDict_NewPresized( 4 );
    const_str_digest_4223bdd4b691126a28bdfc608096b212 = UNSTREAM_STRING_ASCII(&constant_bin[ 1271636 ], 172, 0);
    PyDict_SetItem(const_dict_0c5a3ef8dc91e1ea20d0cb663d8fb41a, const_str_plain_url, const_str_digest_4223bdd4b691126a28bdfc608096b212);
    PyDict_SetItem(const_dict_0c5a3ef8dc91e1ea20d0cb663d8fb41a, const_str_plain_info_dict, const_dict_77cc90086a31ff1832822ff7be32ccbe);
    PyDict_SetItem(const_dict_0c5a3ef8dc91e1ea20d0cb663d8fb41a, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    PyDict_SetItem(const_dict_0c5a3ef8dc91e1ea20d0cb663d8fb41a, const_str_plain_skip, const_str_digest_7adeca30b7b0036238fce206fdd2d21c);
    assert(PyDict_Size(const_dict_0c5a3ef8dc91e1ea20d0cb663d8fb41a) == 4);
    const_dict_ab8e598e7705f158b3ff2381fea3c4e6 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1271808 ], 547);
    const_str_plain_O0c5JcKT = UNSTREAM_STRING_ASCII(&constant_bin[ 1272355 ], 8, 1);
    const_str_digest_85aef3d90ac27f89c0d20151fca510a2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1272363 ], 62, 0);
    const_dict_b28ab674c28220303d06a21f26fee41c = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1272425 ], 282);
    const_str_digest_cfb5c345775ba3fe1daefa3325bf1bfe = UNSTREAM_STRING_ASCII(&constant_bin[ 1272707 ], 69, 0);
    const_str_plain_Vidme = UNSTREAM_STRING_ASCII(&constant_bin[ 51179 ], 5, 1);
    const_str_digest_aceccf9cf56f33faf84d20297bfe3995 = UNSTREAM_STRING_ASCII(&constant_bin[ 1272776 ], 81, 0);
    const_str_plain_HuffPost = UNSTREAM_STRING_ASCII(&constant_bin[ 1272857 ], 8, 1);
    const_float_45_115 = UNSTREAM_FLOAT(&constant_bin[ 1272865 ]);
    const_str_digest_6b57e372ef691a0d1517bd7036101142 = UNSTREAM_STRING_ASCII(&constant_bin[ 1272873 ], 83, 0);
    const_dict_4e2834f61d5e87c5e3ab996cca10e0f6 = _PyDict_NewPresized( 3 );
    const_str_digest_62aa584a40c070550f3f5483b9606c05 = UNSTREAM_STRING_ASCII(&constant_bin[ 1272956 ], 86, 0);
    PyDict_SetItem(const_dict_4e2834f61d5e87c5e3ab996cca10e0f6, const_str_plain_url, const_str_digest_62aa584a40c070550f3f5483b9606c05);
    const_dict_8361f3245198b57f780389dd8d47f451 = _PyDict_NewPresized( 4 );
    const_str_plain_18e820ec3f = UNSTREAM_STRING_ASCII(&constant_bin[ 1273042 ], 10, 0);
    PyDict_SetItem(const_dict_8361f3245198b57f780389dd8d47f451, const_str_plain_id, const_str_plain_18e820ec3f);
    PyDict_SetItem(const_dict_8361f3245198b57f780389dd8d47f451, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_904e3199c44508e5ceb2e64fae72c2a6 = UNSTREAM_STRING_ASCII(&constant_bin[ 1273052 ], 64, 0);
    PyDict_SetItem(const_dict_8361f3245198b57f780389dd8d47f451, const_str_plain_title, const_str_digest_904e3199c44508e5ceb2e64fae72c2a6);
    const_str_digest_6f407eb39a152fc9bd38bfd253eaa89c = UNSTREAM_STRING_ASCII(&constant_bin[ 1273116 ], 105, 0);
    PyDict_SetItem(const_dict_8361f3245198b57f780389dd8d47f451, const_str_plain_description, const_str_digest_6f407eb39a152fc9bd38bfd253eaa89c);
    assert(PyDict_Size(const_dict_8361f3245198b57f780389dd8d47f451) == 4);
    PyDict_SetItem(const_dict_4e2834f61d5e87c5e3ab996cca10e0f6, const_str_plain_info_dict, const_dict_8361f3245198b57f780389dd8d47f451);
    const_list_str_plain_301_list = PyList_New(1);
    const_str_plain_301 = UNSTREAM_STRING_ASCII(&constant_bin[ 604041 ], 3, 0);
    PyList_SET_ITEM(const_list_str_plain_301_list, 0, const_str_plain_301); Py_INCREF(const_str_plain_301);
    PyDict_SetItem(const_dict_4e2834f61d5e87c5e3ab996cca10e0f6, const_str_plain_expected_warnings, const_list_str_plain_301_list);
    assert(PyDict_Size(const_dict_4e2834f61d5e87c5e3ab996cca10e0f6) == 3);
    const_int_pos_1389118457 = PyLong_FromUnsignedLong(1389118457ul);
    const_str_plain_20150528 = UNSTREAM_STRING_ASCII(&constant_bin[ 908532 ], 8, 0);
    const_str_digest_7195907a0f031cb8f55e43f447b3ee2b = UNSTREAM_STRING_ASCII(&constant_bin[ 1273221 ], 36, 0);
    const_dict_bf07fa821cc5e6557db9bf90599a4e53 = _PyDict_NewPresized( 2 );
    const_str_digest_2b4456f1220f3e3cbd65ec68a24a44cf = UNSTREAM_STRING_ASCII(&constant_bin[ 1273257 ], 112, 0);
    PyDict_SetItem(const_dict_bf07fa821cc5e6557db9bf90599a4e53, const_str_plain_url, const_str_digest_2b4456f1220f3e3cbd65ec68a24a44cf);
    const_dict_68642f5094bafa94be00f1dda6d5048f = _PyDict_NewPresized( 7 );
    const_str_plain_MTE3MjUtMzQ2MzA = UNSTREAM_STRING_ASCII(&constant_bin[ 1110627 ], 15, 1);
    PyDict_SetItem(const_dict_68642f5094bafa94be00f1dda6d5048f, const_str_plain_id, const_str_plain_MTE3MjUtMzQ2MzA);
    PyDict_SetItem(const_dict_68642f5094bafa94be00f1dda6d5048f, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_74355befb7c8f471a38db904e1aa4fec = UNSTREAM_STRING_ASCII(&constant_bin[ 1273369 ], 36, 0);
    PyDict_SetItem(const_dict_68642f5094bafa94be00f1dda6d5048f, const_str_plain_title, const_str_digest_74355befb7c8f471a38db904e1aa4fec);
    const_str_digest_7b3089742c377011efe5a7b967feac98 = UNSTREAM_STRING_ASCII(&constant_bin[ 1273405 ], 36, 0);
    PyDict_SetItem(const_dict_68642f5094bafa94be00f1dda6d5048f, const_str_plain_description, const_str_digest_7b3089742c377011efe5a7b967feac98);
    PyDict_SetItem(const_dict_68642f5094bafa94be00f1dda6d5048f, const_str_plain_timestamp, const_int_pos_1265032391);
    const_str_plain_20100201 = UNSTREAM_STRING_ASCII(&constant_bin[ 1273441 ], 8, 0);
    PyDict_SetItem(const_dict_68642f5094bafa94be00f1dda6d5048f, const_str_plain_upload_date, const_str_plain_20100201);
    PyDict_SetItem(const_dict_68642f5094bafa94be00f1dda6d5048f, const_str_plain_uploader, const_str_plain_Heather);
    assert(PyDict_Size(const_dict_68642f5094bafa94be00f1dda6d5048f) == 7);
    PyDict_SetItem(const_dict_bf07fa821cc5e6557db9bf90599a4e53, const_str_plain_info_dict, const_dict_68642f5094bafa94be00f1dda6d5048f);
    assert(PyDict_Size(const_dict_bf07fa821cc5e6557db9bf90599a4e53) == 2);
    const_str_digest_ba229a637e36b1d1aedba9e1b2dd0eb5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1273449 ], 45, 0);
    const_str_plain_1c7141f46c = UNSTREAM_STRING_ASCII(&constant_bin[ 1273494 ], 10, 0);
    const_dict_ec15fac3750b0f6b5006a6072c76558e = _PyDict_NewPresized( 3 );
    const_str_digest_d22c32ab3ee7a987b59d886a989b2143 = UNSTREAM_STRING_ASCII(&constant_bin[ 1273504 ], 56, 0);
    PyDict_SetItem(const_dict_ec15fac3750b0f6b5006a6072c76558e, const_str_plain_url, const_str_digest_d22c32ab3ee7a987b59d886a989b2143);
    const_str_plain_fb973ecf6e4a78a67453647444222983 = UNSTREAM_STRING_ASCII(&constant_bin[ 1273560 ], 32, 1);
    PyDict_SetItem(const_dict_ec15fac3750b0f6b5006a6072c76558e, const_str_plain_md5, const_str_plain_fb973ecf6e4a78a67453647444222983);
    const_dict_f7af3df677ec8bafb7314102c67b4102 = _PyDict_NewPresized( 5 );
    const_str_plain_3414141473001 = UNSTREAM_STRING_ASCII(&constant_bin[ 1273592 ], 13, 0);
    PyDict_SetItem(const_dict_f7af3df677ec8bafb7314102c67b4102, const_str_plain_id, const_str_plain_3414141473001);
    PyDict_SetItem(const_dict_f7af3df677ec8bafb7314102c67b4102, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_f7af3df677ec8bafb7314102c67b4102, const_str_plain_title, const_str_digest_b50658aff13b7adbd3c9f6130b8e5081);
    const_str_digest_d7ed58b3c04a920864a5c498ccd27efc = UNSTREAM_STRING(&constant_bin[ 1273605 ], 68, 0);
    PyDict_SetItem(const_dict_f7af3df677ec8bafb7314102c67b4102, const_str_plain_description, const_str_digest_d7ed58b3c04a920864a5c498ccd27efc);
    const_str_plain_Championat = UNSTREAM_STRING_ASCII(&constant_bin[ 1273673 ], 10, 1);
    PyDict_SetItem(const_dict_f7af3df677ec8bafb7314102c67b4102, const_str_plain_uploader, const_str_plain_Championat);
    assert(PyDict_Size(const_dict_f7af3df677ec8bafb7314102c67b4102) == 5);
    PyDict_SetItem(const_dict_ec15fac3750b0f6b5006a6072c76558e, const_str_plain_info_dict, const_dict_f7af3df677ec8bafb7314102c67b4102);
    assert(PyDict_Size(const_dict_ec15fac3750b0f6b5006a6072c76558e) == 3);
    const_tuple_str_plain_Refresh_tuple = PyTuple_New(1);
    const_str_plain_Refresh = UNSTREAM_STRING_ASCII(&constant_bin[ 1273683 ], 7, 1);
    PyTuple_SET_ITEM(const_tuple_str_plain_Refresh_tuple, 0, const_str_plain_Refresh); Py_INCREF(const_str_plain_Refresh);
    const_str_digest_d6ed4e64285dd706c071b428dcab173c = UNSTREAM_STRING_ASCII(&constant_bin[ 1273690 ], 22, 0);
    const_str_plain_UDNEmbed = UNSTREAM_STRING_ASCII(&constant_bin[ 41298 ], 8, 1);
    const_dict_f14e496c81bf6af19ef81a77fdc4150a = _PyDict_NewPresized( 3 );
    const_str_digest_6eb173931ebfdf236dd8548b4e24ccd7 = UNSTREAM_STRING_ASCII(&constant_bin[ 1273712 ], 60, 0);
    PyDict_SetItem(const_dict_f14e496c81bf6af19ef81a77fdc4150a, const_str_plain_url, const_str_digest_6eb173931ebfdf236dd8548b4e24ccd7);
    const_dict_8724e667445f73ae99333d63c57d00ec = _PyDict_NewPresized( 4 );
    const_str_plain_video_1637 = UNSTREAM_STRING_ASCII(&constant_bin[ 1273758 ], 10, 1);
    PyDict_SetItem(const_dict_8724e667445f73ae99333d63c57d00ec, const_str_plain_id, const_str_plain_video_1637);
    PyDict_SetItem(const_dict_8724e667445f73ae99333d63c57d00ec, const_str_plain_ext, const_str_plain_flv);
    PyDict_SetItem(const_dict_8724e667445f73ae99333d63c57d00ec, const_str_plain_title, const_str_plain_video_1637);
    PyDict_SetItem(const_dict_8724e667445f73ae99333d63c57d00ec, const_str_plain_formats, const_str_digest_0df17ce0ff30bda2ad28671f2a170d3a);
    assert(PyDict_Size(const_dict_8724e667445f73ae99333d63c57d00ec) == 4);
    PyDict_SetItem(const_dict_f14e496c81bf6af19ef81a77fdc4150a, const_str_plain_info_dict, const_dict_8724e667445f73ae99333d63c57d00ec);
    PyDict_SetItem(const_dict_f14e496c81bf6af19ef81a77fdc4150a, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_f14e496c81bf6af19ef81a77fdc4150a) == 3);
    const_str_plain_ln7x1qSThw4k = UNSTREAM_STRING_ASCII(&constant_bin[ 1273772 ], 12, 1);
    const_str_digest_92b850c91a3e8d5ad8648ee4afd7a65b = UNSTREAM_STRING_ASCII(&constant_bin[ 1273784 ], 45, 0);
    const_str_digest_8fcc8c74a47c977b199f7a943d65dbed = UNSTREAM_STRING_ASCII(&constant_bin[ 1273829 ], 46, 0);
    const_str_plain_trailer = UNSTREAM_STRING_ASCII(&constant_bin[ 894427 ], 7, 1);
    const_dict_c1764b915459e2c441bc0915f6faca75 = _PyDict_NewPresized( 4 );
    const_str_plain_730m_DandD_1901_512k = UNSTREAM_STRING_ASCII(&constant_bin[ 1273875 ], 20, 0);
    PyDict_SetItem(const_dict_c1764b915459e2c441bc0915f6faca75, const_str_plain_id, const_str_plain_730m_DandD_1901_512k);
    PyDict_SetItem(const_dict_c1764b915459e2c441bc0915f6faca75, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_01c80e1ae2dae3e14f99f8fbbe960bed = UNSTREAM_STRING_ASCII(&constant_bin[ 825001 ], 14, 0);
    PyDict_SetItem(const_dict_c1764b915459e2c441bc0915f6faca75, const_str_plain_uploader, const_str_digest_01c80e1ae2dae3e14f99f8fbbe960bed);
    const_str_digest_a9e070e261cd21953461f5232a0604b1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1273895 ], 101, 0);
    PyDict_SetItem(const_dict_c1764b915459e2c441bc0915f6faca75, const_str_plain_title, const_str_digest_a9e070e261cd21953461f5232a0604b1);
    assert(PyDict_Size(const_dict_c1764b915459e2c441bc0915f6faca75) == 4);
    const_dict_a5cacdfcd132753f3a32d470f328e573 = _PyDict_NewPresized( 3 );
    const_str_digest_dd2b6af39fc217505d5d0efaff0770b9 = UNSTREAM_STRING_ASCII(&constant_bin[ 1273996 ], 55, 0);
    PyDict_SetItem(const_dict_a5cacdfcd132753f3a32d470f328e573, const_str_plain_url, const_str_digest_dd2b6af39fc217505d5d0efaff0770b9);
    const_dict_bd1a3bb0c4e82bfff31213a38a1bb735 = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_bd1a3bb0c4e82bfff31213a38a1bb735, const_str_plain_id, const_str_plain_master);
    PyDict_SetItem(const_dict_bd1a3bb0c4e82bfff31213a38a1bb735, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_bd1a3bb0c4e82bfff31213a38a1bb735, const_str_plain_title, const_str_digest_cb2fd3125dd0a81d282bc227f8fe2069);
    const_str_digest_3a5fa19d928f520273ea6bd728611910 = UNSTREAM_STRING_ASCII(&constant_bin[ 1274003 ], 10, 0);
    PyDict_SetItem(const_dict_bd1a3bb0c4e82bfff31213a38a1bb735, const_str_plain_uploader, const_str_digest_3a5fa19d928f520273ea6bd728611910);
    assert(PyDict_Size(const_dict_bd1a3bb0c4e82bfff31213a38a1bb735) == 4);
    PyDict_SetItem(const_dict_a5cacdfcd132753f3a32d470f328e573, const_str_plain_info_dict, const_dict_bd1a3bb0c4e82bfff31213a38a1bb735);
    PyDict_SetItem(const_dict_a5cacdfcd132753f3a32d470f328e573, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_a5cacdfcd132753f3a32d470f328e573) == 3);
    const_tuple_str_plain_RutubeIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_RutubeIE_tuple, 0, const_str_plain_RutubeIE); Py_INCREF(const_str_plain_RutubeIE);
    const_str_digest_4e0eb0514bb6768205329ad97d931943 = UNSTREAM_STRING_ASCII(&constant_bin[ 1274051 ], 38, 0);
    const_dict_91a58bffe473ae611c11fca34d2486c2 = _PyDict_NewPresized( 2 );
    const_str_digest_da678cc3bee0f64d91d07688cd513abf = UNSTREAM_STRING_ASCII(&constant_bin[ 1274089 ], 56, 0);
    PyDict_SetItem(const_dict_91a58bffe473ae611c11fca34d2486c2, const_str_plain_url, const_str_digest_da678cc3bee0f64d91d07688cd513abf);
    PyDict_SetItem(const_dict_91a58bffe473ae611c11fca34d2486c2, const_str_plain_info_dict, const_dict_1ae01ad7cf5471cbb1d1123c619743cc);
    assert(PyDict_Size(const_dict_91a58bffe473ae611c11fca34d2486c2) == 2);
    const_str_digest_b61991f5765e310812d90fe1cd647bc8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1274145 ], 95, 0);
    const_str_digest_37d33b5e68ebcf4d73d3a1270c5f8ba3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1274240 ], 98, 0);
    const_int_pos_51690 = PyLong_FromUnsignedLong(51690ul);
    const_str_plain_5123ea6d5e5a7 = UNSTREAM_STRING_ASCII(&constant_bin[ 1274338 ], 13, 0);
    const_str_plain_Ivi = UNSTREAM_STRING_ASCII(&constant_bin[ 43260 ], 3, 1);
    const_dict_246bd26c2aa9c765a7a2d7071296b413 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_246bd26c2aa9c765a7a2d7071296b413, const_str_plain_id, const_str_digest_d37e36c65db61201e2a67f0c53a8be04);
    PyDict_SetItem(const_dict_246bd26c2aa9c765a7a2d7071296b413, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_8e8ea0009f3da1a18fab312f5ab36db4 = UNSTREAM_STRING_ASCII(&constant_bin[ 1274351 ], 13, 0);
    PyDict_SetItem(const_dict_246bd26c2aa9c765a7a2d7071296b413, const_str_plain_title, const_str_digest_8e8ea0009f3da1a18fab312f5ab36db4);
    assert(PyDict_Size(const_dict_246bd26c2aa9c765a7a2d7071296b413) == 3);
    const_dict_ab76d6da01cba08ac45e0b071f26a573 = _PyDict_NewPresized( 3 );
    const_str_digest_18be51949fb981c6385b0ff6322e6c7e = UNSTREAM_STRING_ASCII(&constant_bin[ 1274364 ], 54, 0);
    PyDict_SetItem(const_dict_ab76d6da01cba08ac45e0b071f26a573, const_str_plain_url, const_str_digest_18be51949fb981c6385b0ff6322e6c7e);
    const_str_plain_85b90ccc9d73b4acd9138d3af4c27f89 = UNSTREAM_STRING_ASCII(&constant_bin[ 1274418 ], 32, 0);
    PyDict_SetItem(const_dict_ab76d6da01cba08ac45e0b071f26a573, const_str_plain_md5, const_str_plain_85b90ccc9d73b4acd9138d3af4c27f89);
    const_dict_d1523e47a2414a18c456bd8967cf858a = _PyDict_NewPresized( 4 );
    const_str_plain_13601338388002 = UNSTREAM_STRING_ASCII(&constant_bin[ 1274450 ], 14, 0);
    PyDict_SetItem(const_dict_d1523e47a2414a18c456bd8967cf858a, const_str_plain_id, const_str_plain_13601338388002);
    PyDict_SetItem(const_dict_d1523e47a2414a18c456bd8967cf858a, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_c6e20411519a52445bdc585943170b8c = UNSTREAM_STRING_ASCII(&constant_bin[ 1274371 ], 13, 0);
    PyDict_SetItem(const_dict_d1523e47a2414a18c456bd8967cf858a, const_str_plain_uploader, const_str_digest_c6e20411519a52445bdc585943170b8c);
    const_str_digest_5c92716ec3863c7f03388b6758051e46 = UNSTREAM_STRING(&constant_bin[ 1274464 ], 21, 0);
    PyDict_SetItem(const_dict_d1523e47a2414a18c456bd8967cf858a, const_str_plain_title, const_str_digest_5c92716ec3863c7f03388b6758051e46);
    assert(PyDict_Size(const_dict_d1523e47a2414a18c456bd8967cf858a) == 4);
    PyDict_SetItem(const_dict_ab76d6da01cba08ac45e0b071f26a573, const_str_plain_info_dict, const_dict_d1523e47a2414a18c456bd8967cf858a);
    assert(PyDict_Size(const_dict_ab76d6da01cba08ac45e0b071f26a573) == 3);
    const_str_digest_649f44f2dfe45332566422a99b6f329e = UNSTREAM_STRING_ASCII(&constant_bin[ 1274485 ], 36, 0);
    const_dict_0ea5f75e75e10e7b9648682aedd616c1 = _PyDict_NewPresized( 4 );
    const_str_digest_af6f85ece0c6d931e7d5535be904caf3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1274521 ], 49, 0);
    PyDict_SetItem(const_dict_0ea5f75e75e10e7b9648682aedd616c1, const_str_plain_url, const_str_digest_af6f85ece0c6d931e7d5535be904caf3);
    const_str_plain_b68d276de422ab07ee1d49388103f457 = UNSTREAM_STRING_ASCII(&constant_bin[ 1274570 ], 32, 1);
    PyDict_SetItem(const_dict_0ea5f75e75e10e7b9648682aedd616c1, const_str_plain_md5, const_str_plain_b68d276de422ab07ee1d49388103f457);
    const_dict_770e770bcf6d5e911e30c88b40d7baaf = _PyDict_NewPresized( 3 );
    const_str_plain_83645793 = UNSTREAM_STRING_ASCII(&constant_bin[ 1274555 ], 8, 0);
    PyDict_SetItem(const_dict_770e770bcf6d5e911e30c88b40d7baaf, const_str_plain_id, const_str_plain_83645793);
    const_str_digest_0d2d848a967cc77faa795088cb2e7a1e = UNSTREAM_STRING_ASCII(&constant_bin[ 1274602 ], 23, 0);
    PyDict_SetItem(const_dict_770e770bcf6d5e911e30c88b40d7baaf, const_str_plain_title, const_str_digest_0d2d848a967cc77faa795088cb2e7a1e);
    PyDict_SetItem(const_dict_770e770bcf6d5e911e30c88b40d7baaf, const_str_plain_ext, const_str_plain_mp4);
    assert(PyDict_Size(const_dict_770e770bcf6d5e911e30c88b40d7baaf) == 3);
    PyDict_SetItem(const_dict_0ea5f75e75e10e7b9648682aedd616c1, const_str_plain_info_dict, const_dict_770e770bcf6d5e911e30c88b40d7baaf);
    const_str_digest_cdaebcbaa470328363d642a9f013648a = UNSTREAM_STRING_ASCII(&constant_bin[ 1274625 ], 46, 0);
    PyDict_SetItem(const_dict_0ea5f75e75e10e7b9648682aedd616c1, const_str_plain_skip, const_str_digest_cdaebcbaa470328363d642a9f013648a);
    assert(PyDict_Size(const_dict_0ea5f75e75e10e7b9648682aedd616c1) == 4);
    const_dict_c32ce3171e2ef2db3b1ad7fbf51f7916 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1274671 ], 375);
    const_str_digest_13de43b7f840f63d8edc0c4ccfb0e6f7 = UNSTREAM_STRING_ASCII(&constant_bin[ 1275046 ], 66, 0);
    const_str_digest_49a804859efab8d836782f1c78f87a4f = UNSTREAM_STRING_ASCII(&constant_bin[ 1275112 ], 77, 0);
    const_dict_5835e3865c2990f3c74d45eacc431ed0 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_5835e3865c2990f3c74d45eacc431ed0, const_str_plain_url, const_str_digest_e632862d6d50dcb7eec91d80d30b64c1);
    const_str_plain_ba0dfe966fa007657bd1443ee672db0f = UNSTREAM_STRING_ASCII(&constant_bin[ 1275189 ], 32, 1);
    PyDict_SetItem(const_dict_5835e3865c2990f3c74d45eacc431ed0, const_str_plain_md5, const_str_plain_ba0dfe966fa007657bd1443ee672db0f);
    const_dict_5db648690ff2334a2161d9e5675a7ff5 = _PyDict_NewPresized( 3 );
    const_str_plain_53501be369702d3275860000 = UNSTREAM_STRING_ASCII(&constant_bin[ 1275221 ], 24, 0);
    PyDict_SetItem(const_dict_5db648690ff2334a2161d9e5675a7ff5, const_str_plain_id, const_str_plain_53501be369702d3275860000);
    PyDict_SetItem(const_dict_5db648690ff2334a2161d9e5675a7ff5, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_7e110108202d9affaecdce433acc8a81 = UNSTREAM_STRING(&constant_bin[ 1275245 ], 50, 0);
    PyDict_SetItem(const_dict_5db648690ff2334a2161d9e5675a7ff5, const_str_plain_title, const_str_digest_7e110108202d9affaecdce433acc8a81);
    assert(PyDict_Size(const_dict_5db648690ff2334a2161d9e5675a7ff5) == 3);
    PyDict_SetItem(const_dict_5835e3865c2990f3c74d45eacc431ed0, const_str_plain_info_dict, const_dict_5db648690ff2334a2161d9e5675a7ff5);
    assert(PyDict_Size(const_dict_5835e3865c2990f3c74d45eacc431ed0) == 3);
    const_str_digest_960c739865a0f6299bca1db2f2883499 = UNSTREAM_STRING_ASCII(&constant_bin[ 1275295 ], 36, 0);
    const_dict_e6421e8d12634dbb0763c502c9cd38dd = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_e6421e8d12634dbb0763c502c9cd38dd, const_str_plain_url, const_str_digest_85aef3d90ac27f89c0d20151fca510a2);
    PyDict_SetItem(const_dict_e6421e8d12634dbb0763c502c9cd38dd, const_str_plain_playlist_mincount, const_int_pos_5);
    PyDict_SetItem(const_dict_e6421e8d12634dbb0763c502c9cd38dd, const_str_plain_info_dict, const_dict_841daa731af2cdee60e4ef4dbc3dae24);
    assert(PyDict_Size(const_dict_e6421e8d12634dbb0763c502c9cd38dd) == 3);
    const_str_plain_4238694884001 = UNSTREAM_STRING_ASCII(&constant_bin[ 1275331 ], 13, 0);
    const_dict_cf9b9bec2ed8b8ed20680ff82121b2f9 = _PyDict_NewPresized( 5 );
    const_str_plain_204146 = UNSTREAM_STRING_ASCII(&constant_bin[ 1275344 ], 6, 0);
    PyDict_SetItem(const_dict_cf9b9bec2ed8b8ed20680ff82121b2f9, const_str_plain_id, const_str_plain_204146);
    PyDict_SetItem(const_dict_cf9b9bec2ed8b8ed20680ff82121b2f9, const_str_plain_ext, const_str_plain_mp3);
    const_str_plain_CNRV = UNSTREAM_STRING_ASCII(&constant_bin[ 1275350 ], 4, 1);
    PyDict_SetItem(const_dict_cf9b9bec2ed8b8ed20680ff82121b2f9, const_str_plain_title, const_str_plain_CNRV);
    const_str_digest_773415dabe48530088265222a9332351 = UNSTREAM_STRING_ASCII(&constant_bin[ 1275354 ], 13, 0);
    PyDict_SetItem(const_dict_cf9b9bec2ed8b8ed20680ff82121b2f9, const_str_plain_location, const_str_digest_773415dabe48530088265222a9332351);
    PyDict_SetItem(const_dict_cf9b9bec2ed8b8ed20680ff82121b2f9, const_str_plain_is_live, Py_True);
    assert(PyDict_Size(const_dict_cf9b9bec2ed8b8ed20680ff82121b2f9) == 5);
    const_dict_a198d26e74ac150af684642a38fd4349 = _PyDict_NewPresized( 2 );
    const_str_digest_82d9f56bf8f7a5e6ee5ae06e31d6c9ed = UNSTREAM_STRING_ASCII(&constant_bin[ 1275367 ], 63, 0);
    PyDict_SetItem(const_dict_a198d26e74ac150af684642a38fd4349, const_str_plain_id, const_str_digest_82d9f56bf8f7a5e6ee5ae06e31d6c9ed);
    const_str_digest_0d807ca51abbb4307fc901afdc70694b = UNSTREAM_STRING_ASCII(&constant_bin[ 1275430 ], 80, 0);
    PyDict_SetItem(const_dict_a198d26e74ac150af684642a38fd4349, const_str_plain_title, const_str_digest_0d807ca51abbb4307fc901afdc70694b);
    assert(PyDict_Size(const_dict_a198d26e74ac150af684642a38fd4349) == 2);
    const_dict_c4727d1b37562a12e3bc7c7116f5997d = _PyDict_NewPresized( 3 );
    const_str_plain_vMDE4NzI1Mjgt690b = UNSTREAM_STRING_ASCII(&constant_bin[ 1275510 ], 17, 1);
    PyDict_SetItem(const_dict_c4727d1b37562a12e3bc7c7116f5997d, const_str_plain_id, const_str_plain_vMDE4NzI1Mjgt690b);
    PyDict_SetItem(const_dict_c4727d1b37562a12e3bc7c7116f5997d, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_c4727d1b37562a12e3bc7c7116f5997d, const_str_plain_title, const_str_digest_7104f10ee7f0d10f5b0ecf3be8c7f761);
    assert(PyDict_Size(const_dict_c4727d1b37562a12e3bc7c7116f5997d) == 3);
    const_dict_36925fc0cfcf75d54f121e0648d24135 = _PyDict_NewPresized( 2 );
    const_str_plain_FacilitatorTraining2017 = UNSTREAM_STRING_ASCII(&constant_bin[ 1275527 ], 23, 1);
    PyDict_SetItem(const_dict_36925fc0cfcf75d54f121e0648d24135, const_str_plain_id, const_str_plain_FacilitatorTraining2017);
    const_str_digest_62f34091c9182df1bc98a69001f177e2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1275550 ], 25, 0);
    PyDict_SetItem(const_dict_36925fc0cfcf75d54f121e0648d24135, const_str_plain_title, const_str_digest_62f34091c9182df1bc98a69001f177e2);
    assert(PyDict_Size(const_dict_36925fc0cfcf75d54f121e0648d24135) == 2);
    const_dict_30c00b7d5776426067ac91b773d09d66 = _PyDict_NewPresized( 7 );
    const_str_plain_uPDB5I9wfp8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1275575 ], 11, 1);
    PyDict_SetItem(const_dict_30c00b7d5776426067ac91b773d09d66, const_str_plain_id, const_str_plain_uPDB5I9wfp8);
    PyDict_SetItem(const_dict_30c00b7d5776426067ac91b773d09d66, const_str_plain_ext, const_str_plain_webm);
    const_str_digest_fe419a827a713135b1f1d0446a6175ab = UNSTREAM_STRING(&constant_bin[ 1275586 ], 78, 0);
    PyDict_SetItem(const_dict_30c00b7d5776426067ac91b773d09d66, const_str_plain_title, const_str_digest_fe419a827a713135b1f1d0446a6175ab);
    PyDict_SetItem(const_dict_30c00b7d5776426067ac91b773d09d66, const_str_plain_description, const_str_digest_4c5829c0a4e6ab83f5b52c2563c01efc);
    const_str_plain_20160219 = UNSTREAM_STRING_ASCII(&constant_bin[ 1005019 ], 8, 0);
    PyDict_SetItem(const_dict_30c00b7d5776426067ac91b773d09d66, const_str_plain_upload_date, const_str_plain_20160219);
    PyDict_SetItem(const_dict_30c00b7d5776426067ac91b773d09d66, const_str_plain_uploader, const_str_digest_89c2f1e75b55b1873508abc45e296765);
    const_str_plain_PocoyoBrazil = UNSTREAM_STRING_ASCII(&constant_bin[ 1275664 ], 12, 1);
    PyDict_SetItem(const_dict_30c00b7d5776426067ac91b773d09d66, const_str_plain_uploader_id, const_str_plain_PocoyoBrazil);
    assert(PyDict_Size(const_dict_30c00b7d5776426067ac91b773d09d66) == 7);
    const_dict_256481bf8b71e02775f2c00088b5570b = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1275676 ], 763);
    const_str_digest_a4d674d4cd12d0c31489346eb58380ef = UNSTREAM_STRING(&constant_bin[ 1276439 ], 80, 0);
    const_str_digest_072671c863ae6b2a235496904644eacb = UNSTREAM_STRING_ASCII(&constant_bin[ 1276519 ], 5, 0);
    const_str_digest_4ea6ee14b746f425108af009ad74f61d = UNSTREAM_STRING_ASCII(&constant_bin[ 1276524 ], 69, 0);
    const_dict_0b937cbc442f8ba49f40207a491b38db = _PyDict_NewPresized( 2 );
    const_str_digest_f66cc928508aedbc3feb56178b807ca2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1276593 ], 79, 0);
    PyDict_SetItem(const_dict_0b937cbc442f8ba49f40207a491b38db, const_str_plain_url, const_str_digest_f66cc928508aedbc3feb56178b807ca2);
    PyDict_SetItem(const_dict_0b937cbc442f8ba49f40207a491b38db, const_str_plain_info_dict, const_dict_246bd26c2aa9c765a7a2d7071296b413);
    assert(PyDict_Size(const_dict_0b937cbc442f8ba49f40207a491b38db) == 2);
    const_str_digest_c87444f5bac9321956454177db57c27f = UNSTREAM_STRING_ASCII(&constant_bin[ 1276672 ], 36, 0);
    const_str_digest_2a57aadc4f6d6cf7eb4ee9cab3ad2e22 = UNSTREAM_STRING_ASCII(&constant_bin[ 1276708 ], 36, 0);
    const_str_digest_68dbcc8f80dec12fa6319a64ac92217f = UNSTREAM_STRING_ASCII(&constant_bin[ 1276744 ], 29, 0);
    const_str_digest_509998e5cd3037bcfb61fb0010ebd395 = UNSTREAM_STRING_ASCII(&constant_bin[ 1276773 ], 31, 0);
    const_dict_3e6c73a91f7281279beaa30b9b4f58e0 = _PyDict_NewPresized( 5 );
    const_str_plain_OcobLTqC = UNSTREAM_STRING_ASCII(&constant_bin[ 1276804 ], 8, 1);
    PyDict_SetItem(const_dict_3e6c73a91f7281279beaa30b9b4f58e0, const_str_plain_id, const_str_plain_OcobLTqC);
    PyDict_SetItem(const_dict_3e6c73a91f7281279beaa30b9b4f58e0, const_str_plain_ext, const_str_plain_m4v);
    const_str_plain_IMG_5786 = UNSTREAM_STRING_ASCII(&constant_bin[ 1276812 ], 8, 1);
    PyDict_SetItem(const_dict_3e6c73a91f7281279beaa30b9b4f58e0, const_str_plain_title, const_str_plain_IMG_5786);
    const_int_pos_1435711927 = PyLong_FromUnsignedLong(1435711927ul);
    PyDict_SetItem(const_dict_3e6c73a91f7281279beaa30b9b4f58e0, const_str_plain_timestamp, const_int_pos_1435711927);
    const_str_plain_20150701 = UNSTREAM_STRING_ASCII(&constant_bin[ 1276820 ], 8, 0);
    PyDict_SetItem(const_dict_3e6c73a91f7281279beaa30b9b4f58e0, const_str_plain_upload_date, const_str_plain_20150701);
    assert(PyDict_Size(const_dict_3e6c73a91f7281279beaa30b9b4f58e0) == 5);
    const_str_digest_7f6a7c1185e417650e2229f8bcc72531 = UNSTREAM_STRING_ASCII(&constant_bin[ 1276828 ], 80, 0);
    const_dict_a498adea70e82ff7846fd3c9bc037af0 = _PyDict_NewPresized( 3 );
    const_str_digest_4f871a607ad5ba2a29210aec9e90effc = UNSTREAM_STRING_ASCII(&constant_bin[ 1276908 ], 63, 0);
    PyDict_SetItem(const_dict_a498adea70e82ff7846fd3c9bc037af0, const_str_plain_url, const_str_digest_4f871a607ad5ba2a29210aec9e90effc);
    const_dict_04f9079ded28c3cff2c606520226e6ca = _PyDict_NewPresized( 6 );
    const_str_plain_0_izeg5utt = UNSTREAM_STRING_ASCII(&constant_bin[ 1276971 ], 10, 0);
    PyDict_SetItem(const_dict_04f9079ded28c3cff2c606520226e6ca, const_str_plain_id, const_str_plain_0_izeg5utt);
    PyDict_SetItem(const_dict_04f9079ded28c3cff2c606520226e6ca, const_str_plain_ext, const_str_plain_mp4);
    const_str_plain_35871 = UNSTREAM_STRING_ASCII(&constant_bin[ 1276981 ], 5, 0);
    PyDict_SetItem(const_dict_04f9079ded28c3cff2c606520226e6ca, const_str_plain_title, const_str_plain_35871);
    const_int_pos_1355743100 = PyLong_FromUnsignedLong(1355743100ul);
    PyDict_SetItem(const_dict_04f9079ded28c3cff2c606520226e6ca, const_str_plain_timestamp, const_int_pos_1355743100);
    const_str_plain_20121217 = UNSTREAM_STRING_ASCII(&constant_bin[ 1276986 ], 8, 0);
    PyDict_SetItem(const_dict_04f9079ded28c3cff2c606520226e6ca, const_str_plain_upload_date, const_str_plain_20121217);
    const_str_digest_643bffb2efe33aa3a9168a616ca4d291 = UNSTREAM_STRING_ASCII(&constant_bin[ 1276994 ], 19, 0);
    PyDict_SetItem(const_dict_04f9079ded28c3cff2c606520226e6ca, const_str_plain_uploader_id, const_str_digest_643bffb2efe33aa3a9168a616ca4d291);
    assert(PyDict_Size(const_dict_04f9079ded28c3cff2c606520226e6ca) == 6);
    PyDict_SetItem(const_dict_a498adea70e82ff7846fd3c9bc037af0, const_str_plain_info_dict, const_dict_04f9079ded28c3cff2c606520226e6ca);
    PyDict_SetItem(const_dict_a498adea70e82ff7846fd3c9bc037af0, const_str_plain_add_ie, const_list_str_plain_Kaltura_list);
    assert(PyDict_Size(const_dict_a498adea70e82ff7846fd3c9bc037af0) == 3);
    const_str_plain_776940 = UNSTREAM_STRING_ASCII(&constant_bin[ 1277013 ], 6, 0);
    const_dict_faea4c42db136aac95e911fa911bb28d = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_faea4c42db136aac95e911fa911bb28d, const_str_plain_note, const_str_digest_1e3f0fe701d436457a685da6c8ddbafc);
    const_str_digest_6daf3912c56459a470d6394fe7bf46c5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1277019 ], 41, 0);
    PyDict_SetItem(const_dict_faea4c42db136aac95e911fa911bb28d, const_str_plain_errnote, const_str_digest_6daf3912c56459a470d6394fe7bf46c5);
    assert(PyDict_Size(const_dict_faea4c42db136aac95e911fa911bb28d) == 2);
    const_dict_55f8c8da502ae867b40119b5e8e7d10f = _PyDict_NewPresized( 7 );
    const_str_plain_Mrj4DVp2zeA = UNSTREAM_STRING_ASCII(&constant_bin[ 1277060 ], 11, 1);
    PyDict_SetItem(const_dict_55f8c8da502ae867b40119b5e8e7d10f, const_str_plain_id, const_str_plain_Mrj4DVp2zeA);
    PyDict_SetItem(const_dict_55f8c8da502ae867b40119b5e8e7d10f, const_str_plain_ext, const_str_plain_mp4);
    const_str_plain_20150212 = UNSTREAM_STRING_ASCII(&constant_bin[ 1219731 ], 8, 0);
    PyDict_SetItem(const_dict_55f8c8da502ae867b40119b5e8e7d10f, const_str_plain_upload_date, const_str_plain_20150212);
    PyDict_SetItem(const_dict_55f8c8da502ae867b40119b5e8e7d10f, const_str_plain_uploader, const_str_digest_a6c2dffd08ac7f8c3aafe807b8900450);
    PyDict_SetItem(const_dict_55f8c8da502ae867b40119b5e8e7d10f, const_str_plain_description, const_str_digest_4e6ec0a9fab7915c6779e736ed4930bc);
    const_str_plain_NationalArchives08 = UNSTREAM_STRING_ASCII(&constant_bin[ 1277071 ], 18, 1);
    PyDict_SetItem(const_dict_55f8c8da502ae867b40119b5e8e7d10f, const_str_plain_uploader_id, const_str_plain_NationalArchives08);
    const_str_digest_ca21b7ff9c1f278753a25452fdc66594 = UNSTREAM_STRING(&constant_bin[ 1277089 ], 67, 0);
    PyDict_SetItem(const_dict_55f8c8da502ae867b40119b5e8e7d10f, const_str_plain_title, const_str_digest_ca21b7ff9c1f278753a25452fdc66594);
    assert(PyDict_Size(const_dict_55f8c8da502ae867b40119b5e8e7d10f) == 7);
    const_str_digest_889e5f7e1e225877d5d0c909903fd5c1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1277156 ], 21, 0);
    const_str_digest_45b51688119744629578c3459dacefe4 = UNSTREAM_STRING_ASCII(&constant_bin[ 1277177 ], 36, 0);
    const_list_str_digest_44cee31d4210eb2478c8340eb248bcd5_list = PyList_New(1);
    const_str_digest_44cee31d4210eb2478c8340eb248bcd5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1277213 ], 36, 0);
    PyList_SET_ITEM(const_list_str_digest_44cee31d4210eb2478c8340eb248bcd5_list, 0, const_str_digest_44cee31d4210eb2478c8340eb248bcd5); Py_INCREF(const_str_digest_44cee31d4210eb2478c8340eb248bcd5);
    const_tuple_str_plain_TuneInBaseIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TuneInBaseIE_tuple, 0, const_str_plain_TuneInBaseIE); Py_INCREF(const_str_plain_TuneInBaseIE);
    const_str_digest_e98911021ce3515e49059cb736f0043f = UNSTREAM_STRING_ASCII(&constant_bin[ 1277249 ], 27, 0);
    const_str_digest_d1bd8db22baf56a37bf699e8e6b9535b = UNSTREAM_STRING_ASCII(&constant_bin[ 1277276 ], 27, 0);
    const_str_plain_ArteTVEmbed = UNSTREAM_STRING_ASCII(&constant_bin[ 909769 ], 11, 1);
    const_str_digest_07f7896c2310e41d42a628c023b59dbb = UNSTREAM_STRING_ASCII(&constant_bin[ 1277303 ], 37, 0);
    const_str_digest_a3473a08eefedd57d3731509f04ba32a = UNSTREAM_STRING_ASCII(&constant_bin[ 1277340 ], 18, 0);
    const_dict_3f73dcef41a3932dd3e0de08c10bc2e0 = _PyDict_NewPresized( 3 );
    const_str_digest_646cab054c98d280e01f46870ebca9f4 = UNSTREAM_STRING_ASCII(&constant_bin[ 1277358 ], 35, 0);
    PyDict_SetItem(const_dict_3f73dcef41a3932dd3e0de08c10bc2e0, const_str_plain_url, const_str_digest_646cab054c98d280e01f46870ebca9f4);
    const_dict_cf76d0a0c71a278a270fa2222a2bf8af = _PyDict_NewPresized( 7 );
    const_str_plain_100183293 = UNSTREAM_STRING_ASCII(&constant_bin[ 1277393 ], 9, 0);
    PyDict_SetItem(const_dict_cf76d0a0c71a278a270fa2222a2bf8af, const_str_plain_id, const_str_plain_100183293);
    PyDict_SetItem(const_dict_cf76d0a0c71a278a270fa2222a2bf8af, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_3272416ec1801b8822dbc6c8ca92c59b = UNSTREAM_STRING(&constant_bin[ 1277402 ], 72, 0);
    PyDict_SetItem(const_dict_cf76d0a0c71a278a270fa2222a2bf8af, const_str_plain_title, const_str_digest_3272416ec1801b8822dbc6c8ca92c59b);
    PyDict_SetItem(const_dict_cf76d0a0c71a278a270fa2222a2bf8af, const_str_plain_description, const_str_digest_dbd5fca7d01509846205c373257c4e19);
    PyDict_SetItem(const_dict_cf76d0a0c71a278a270fa2222a2bf8af, const_str_plain_thumbnail, const_str_digest_a4d2c749144754fcad3c1b2f9e5cb89a);
    const_int_pos_694 = PyLong_FromUnsignedLong(694ul);
    PyDict_SetItem(const_dict_cf76d0a0c71a278a270fa2222a2bf8af, const_str_plain_duration, const_int_pos_694);
    PyDict_SetItem(const_dict_cf76d0a0c71a278a270fa2222a2bf8af, const_str_plain_age_limit, const_int_0);
    assert(PyDict_Size(const_dict_cf76d0a0c71a278a270fa2222a2bf8af) == 7);
    PyDict_SetItem(const_dict_3f73dcef41a3932dd3e0de08c10bc2e0, const_str_plain_info_dict, const_dict_cf76d0a0c71a278a270fa2222a2bf8af);
    PyDict_SetItem(const_dict_3f73dcef41a3932dd3e0de08c10bc2e0, const_str_plain_skip, const_str_digest_7b4ab9554f01430322d641bf54ab540f);
    assert(PyDict_Size(const_dict_3f73dcef41a3932dd3e0de08c10bc2e0) == 3);
    const_dict_09df46e309378c6aab4c5ab547b02b5c = _PyDict_NewPresized( 3 );
    const_str_digest_d9efa1f2663e208bea651535be14c91c = UNSTREAM_STRING_ASCII(&constant_bin[ 1277474 ], 49, 0);
    PyDict_SetItem(const_dict_09df46e309378c6aab4c5ab547b02b5c, const_str_plain_url, const_str_digest_d9efa1f2663e208bea651535be14c91c);
    const_str_plain_7e3919d9d2620b89e3e00bec7fe8c9d4 = UNSTREAM_STRING_ASCII(&constant_bin[ 1277523 ], 32, 0);
    PyDict_SetItem(const_dict_09df46e309378c6aab4c5ab547b02b5c, const_str_plain_md5, const_str_plain_7e3919d9d2620b89e3e00bec7fe8c9d4);
    const_dict_f82b765f74491ca4c68ce97c2d06ee15 = _PyDict_NewPresized( 3 );
    const_str_plain_8707641 = UNSTREAM_STRING_ASCII(&constant_bin[ 1277555 ], 7, 0);
    PyDict_SetItem(const_dict_f82b765f74491ca4c68ce97c2d06ee15, const_str_plain_id, const_str_plain_8707641);
    PyDict_SetItem(const_dict_f82b765f74491ca4c68ce97c2d06ee15, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_51cfa020bce4622f273b35ae169f50be = UNSTREAM_STRING_ASCII(&constant_bin[ 1277562 ], 50, 0);
    PyDict_SetItem(const_dict_f82b765f74491ca4c68ce97c2d06ee15, const_str_plain_title, const_str_digest_51cfa020bce4622f273b35ae169f50be);
    assert(PyDict_Size(const_dict_f82b765f74491ca4c68ce97c2d06ee15) == 3);
    PyDict_SetItem(const_dict_09df46e309378c6aab4c5ab547b02b5c, const_str_plain_info_dict, const_dict_f82b765f74491ca4c68ce97c2d06ee15);
    assert(PyDict_Size(const_dict_09df46e309378c6aab4c5ab547b02b5c) == 3);
    const_str_digest_c595f6f93916a253473e0d776fa2ca8d = UNSTREAM_STRING_ASCII(&constant_bin[ 1277612 ], 16, 0);
    const_dict_3282e540260e22113498e5a30ea902b0 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1277628 ], 330);
    const_tuple_str_plain_ViewLiftEmbedIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ViewLiftEmbedIE_tuple, 0, const_str_plain_ViewLiftEmbedIE); Py_INCREF(const_str_plain_ViewLiftEmbedIE);
    const_str_plain_20150228 = UNSTREAM_STRING_ASCII(&constant_bin[ 1277958 ], 8, 0);
    const_str_plain_523629 = UNSTREAM_STRING_ASCII(&constant_bin[ 1277966 ], 6, 0);
    const_dict_2635a05b88280f90e836758bf32eab74 = _PyDict_NewPresized( 1 );
    PyDict_SetItem(const_dict_2635a05b88280f90e836758bf32eab74, const_str_plain_ie, const_str_plain_ThePlatform);
    assert(PyDict_Size(const_dict_2635a05b88280f90e836758bf32eab74) == 1);
    const_dict_2c72d15872a83757552ca44de097f52a = _PyDict_NewPresized( 4 );
    const_str_digest_aa1537fad7c7e4a0e3e84063b40c1a3b = UNSTREAM_STRING_ASCII(&constant_bin[ 1277972 ], 49, 0);
    PyDict_SetItem(const_dict_2c72d15872a83757552ca44de097f52a, const_str_plain_url, const_str_digest_aa1537fad7c7e4a0e3e84063b40c1a3b);
    const_dict_5a8a540a9d2a0aff79de5243bfa3575c = _PyDict_NewPresized( 5 );
    PyDict_SetItem(const_dict_5a8a540a9d2a0aff79de5243bfa3575c, const_str_plain_id, const_str_plain_shell);
    PyDict_SetItem(const_dict_5a8a540a9d2a0aff79de5243bfa3575c, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_70954b237e8a2f7faead6a050144b050 = UNSTREAM_STRING(&constant_bin[ 1278021 ], 106, 0);
    PyDict_SetItem(const_dict_5a8a540a9d2a0aff79de5243bfa3575c, const_str_plain_title, const_str_digest_70954b237e8a2f7faead6a050144b050);
    PyDict_SetItem(const_dict_5a8a540a9d2a0aff79de5243bfa3575c, const_str_plain_description, const_str_digest_a7edaad7542c521e7e811863d1fc6ea7);
    PyDict_SetItem(const_dict_5a8a540a9d2a0aff79de5243bfa3575c, const_str_plain_thumbnail, const_str_digest_a4d2c749144754fcad3c1b2f9e5cb89a);
    assert(PyDict_Size(const_dict_5a8a540a9d2a0aff79de5243bfa3575c) == 5);
    PyDict_SetItem(const_dict_2c72d15872a83757552ca44de097f52a, const_str_plain_info_dict, const_dict_5a8a540a9d2a0aff79de5243bfa3575c);
    PyDict_SetItem(const_dict_2c72d15872a83757552ca44de097f52a, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    PyDict_SetItem(const_dict_2c72d15872a83757552ca44de097f52a, const_str_plain_expected_warnings, const_list_str_digest_def4b6a20227ee3aa9d0578ed6dbbee7_list);
    assert(PyDict_Size(const_dict_2c72d15872a83757552ca44de097f52a) == 4);
    const_dict_30706ccff06497f2ee5a14895cdc0485 = _PyDict_NewPresized( 7 );
    PyDict_SetItem(const_dict_30706ccff06497f2ee5a14895cdc0485, const_str_plain_id, const_str_plain_ln7x1qSThw4k);
    PyDict_SetItem(const_dict_30706ccff06497f2ee5a14895cdc0485, const_str_plain_ext, const_str_plain_flv);
    const_str_digest_25ff87f1273cc58df289898cc5704c4e = UNSTREAM_STRING_ASCII(&constant_bin[ 1278127 ], 46, 0);
    PyDict_SetItem(const_dict_30706ccff06497f2ee5a14895cdc0485, const_str_plain_title, const_str_digest_25ff87f1273cc58df289898cc5704c4e);
    PyDict_SetItem(const_dict_30706ccff06497f2ee5a14895cdc0485, const_str_plain_description, const_str_digest_7a1d954614524c953f0e6729f6da7eca);
    PyDict_SetItem(const_dict_30706ccff06497f2ee5a14895cdc0485, const_str_plain_uploader, const_str_digest_67dfb4290afed002a8c00e24399ef525);
    const_str_plain_20140107 = UNSTREAM_STRING_ASCII(&constant_bin[ 1278173 ], 8, 0);
    PyDict_SetItem(const_dict_30706ccff06497f2ee5a14895cdc0485, const_str_plain_upload_date, const_str_plain_20140107);
    PyDict_SetItem(const_dict_30706ccff06497f2ee5a14895cdc0485, const_str_plain_timestamp, const_int_pos_1389118457);
    assert(PyDict_Size(const_dict_30706ccff06497f2ee5a14895cdc0485) == 7);
    const_str_digest_3858d150b8df8f6d8d7ca03e67a41489 = UNSTREAM_STRING_ASCII(&constant_bin[ 908292 ], 36, 0);
    const_str_digest_246955df4287268046c0b7e4d9ec87c1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1278181 ], 56, 0);
    const_str_digest_db5aa34d961100e7e37734b09961ebd8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1278237 ], 89, 0);
    const_str_plain_HNTXWDXV9Is = UNSTREAM_STRING_ASCII(&constant_bin[ 1278326 ], 11, 1);
    const_str_plain_20141112 = UNSTREAM_STRING_ASCII(&constant_bin[ 1278337 ], 8, 0);
    const_str_digest_5276f0f6f31d9150609eb3d935cc501f = UNSTREAM_STRING_ASCII(&constant_bin[ 1278345 ], 45, 0);
    const_str_digest_3a1635c71a49e07692d9963a5c663628 = UNSTREAM_STRING_ASCII(&constant_bin[ 1278390 ], 90, 0);
    const_str_digest_2c309a0c322fa657cf9f91f322f7694b = UNSTREAM_STRING_ASCII(&constant_bin[ 1278480 ], 98, 0);
    const_dict_eb3282732a410b274b084b5f7ff4ff5c = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1278578 ], 334);
    const_str_plain_166dd577b433b4d4ebfee10b0824d8ff = UNSTREAM_STRING_ASCII(&constant_bin[ 1278912 ], 32, 0);
    const_str_digest_50a60b1f89af5bed0c37664b605add7c = UNSTREAM_STRING_ASCII(&constant_bin[ 1278944 ], 52, 0);
    const_str_plain_BrightcoveLegacy = UNSTREAM_STRING_ASCII(&constant_bin[ 40266 ], 16, 1);
    const_str_plain_vext = UNSTREAM_STRING_ASCII(&constant_bin[ 1278996 ], 4, 1);
    const_str_digest_eb10a11d5bc38c7cbfb0ae9a17583cea = UNSTREAM_STRING_ASCII(&constant_bin[ 1279000 ], 36, 0);
    const_dict_11a1778f75725ce1871c3e10f2ea1615 = _PyDict_NewPresized( 4 );
    const_list_str_plain_BrightcoveLegacy_list = PyList_New(1);
    PyList_SET_ITEM(const_list_str_plain_BrightcoveLegacy_list, 0, const_str_plain_BrightcoveLegacy); Py_INCREF(const_str_plain_BrightcoveLegacy);
    PyDict_SetItem(const_dict_11a1778f75725ce1871c3e10f2ea1615, const_str_plain_add_ie, const_list_str_plain_BrightcoveLegacy_list);
    const_str_digest_1c22cd8f63a41d042901b8375145a078 = UNSTREAM_STRING_ASCII(&constant_bin[ 1279036 ], 92, 0);
    PyDict_SetItem(const_dict_11a1778f75725ce1871c3e10f2ea1615, const_str_plain_url, const_str_digest_1c22cd8f63a41d042901b8375145a078);
    const_dict_97f030436eb0aff6d3920bf8ee689d73 = _PyDict_NewPresized( 5 );
    const_str_plain_2765128793001 = UNSTREAM_STRING_ASCII(&constant_bin[ 1279128 ], 13, 0);
    PyDict_SetItem(const_dict_97f030436eb0aff6d3920bf8ee689d73, const_str_plain_id, const_str_plain_2765128793001);
    PyDict_SetItem(const_dict_97f030436eb0aff6d3920bf8ee689d73, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_ad04ecc2f40a66b61669771ec688c6a1 = UNSTREAM_STRING(&constant_bin[ 1279141 ], 42, 0);
    PyDict_SetItem(const_dict_97f030436eb0aff6d3920bf8ee689d73, const_str_plain_title, const_str_digest_ad04ecc2f40a66b61669771ec688c6a1);
    PyDict_SetItem(const_dict_97f030436eb0aff6d3920bf8ee689d73, const_str_plain_description, const_str_digest_2a57aadc4f6d6cf7eb4ee9cab3ad2e22);
    const_str_digest_c55ab86c0b74b6d6fab4c0f05657eac2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1267151 ], 12, 0);
    PyDict_SetItem(const_dict_97f030436eb0aff6d3920bf8ee689d73, const_str_plain_uploader, const_str_digest_c55ab86c0b74b6d6fab4c0f05657eac2);
    assert(PyDict_Size(const_dict_97f030436eb0aff6d3920bf8ee689d73) == 5);
    PyDict_SetItem(const_dict_11a1778f75725ce1871c3e10f2ea1615, const_str_plain_info_dict, const_dict_97f030436eb0aff6d3920bf8ee689d73);
    PyDict_SetItem(const_dict_11a1778f75725ce1871c3e10f2ea1615, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_11a1778f75725ce1871c3e10f2ea1615) == 4);
    const_str_plain_playlist_desc_el = UNSTREAM_STRING_ASCII(&constant_bin[ 1279183 ], 16, 1);
    const_tuple_str_plain_error_str_plain_fixup_error_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_error_str_plain_fixup_error_tuple, 0, const_str_plain_error); Py_INCREF(const_str_plain_error);
    const_str_plain_fixup_error = UNSTREAM_STRING_ASCII(&constant_bin[ 1279199 ], 11, 1);
    PyTuple_SET_ITEM(const_tuple_str_plain_error_str_plain_fixup_error_tuple, 1, const_str_plain_fixup_error); Py_INCREF(const_str_plain_fixup_error);
    const_str_digest_a1c65eab274a05715bd3c92243898845 = UNSTREAM_STRING_ASCII(&constant_bin[ 1279210 ], 213, 0);
    const_str_digest_3ce9edd9c2d0e54820fa0fc2da9d8baa = UNSTREAM_STRING_ASCII(&constant_bin[ 1279423 ], 20, 0);
    const_dict_91569421bae847bc7c76a5fb6e40b828 = _PyDict_NewPresized( 6 );
    const_str_plain_1754168231264132 = UNSTREAM_STRING_ASCII(&constant_bin[ 1279443 ], 16, 0);
    PyDict_SetItem(const_dict_91569421bae847bc7c76a5fb6e40b828, const_str_plain_id, const_str_plain_1754168231264132);
    PyDict_SetItem(const_dict_91569421bae847bc7c76a5fb6e40b828, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_115775ef851b3b85d3f75f698bc8827d = UNSTREAM_STRING_ASCII(&constant_bin[ 1279459 ], 80, 0);
    PyDict_SetItem(const_dict_91569421bae847bc7c76a5fb6e40b828, const_str_plain_title, const_str_digest_115775ef851b3b85d3f75f698bc8827d);
    const_str_digest_276c49eca271480d4bce3bce07ef4e6e = UNSTREAM_STRING_ASCII(&constant_bin[ 1279539 ], 24, 0);
    PyDict_SetItem(const_dict_91569421bae847bc7c76a5fb6e40b828, const_str_plain_uploader, const_str_digest_276c49eca271480d4bce3bce07ef4e6e);
    const_int_pos_1496758379 = PyLong_FromUnsignedLong(1496758379ul);
    PyDict_SetItem(const_dict_91569421bae847bc7c76a5fb6e40b828, const_str_plain_timestamp, const_int_pos_1496758379);
    PyDict_SetItem(const_dict_91569421bae847bc7c76a5fb6e40b828, const_str_plain_upload_date, const_str_plain_20170606);
    assert(PyDict_Size(const_dict_91569421bae847bc7c76a5fb6e40b828) == 6);
    const_str_digest_db224856e028c9bb20c392f576ebbf8f = UNSTREAM_STRING_ASCII(&constant_bin[ 1279563 ], 18, 0);
    const_dict_dd4f2625f01e2a0fcd478add993a37b0 = _PyDict_NewPresized( 6 );
    const_str_plain_mZlp2ctYIUEB = UNSTREAM_STRING_ASCII(&constant_bin[ 1279581 ], 12, 1);
    PyDict_SetItem(const_dict_dd4f2625f01e2a0fcd478add993a37b0, const_str_plain_id, const_str_plain_mZlp2ctYIUEB);
    PyDict_SetItem(const_dict_dd4f2625f01e2a0fcd478add993a37b0, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_72ec5e7259a3569a72c167c27fed89c3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1279593 ], 29, 0);
    PyDict_SetItem(const_dict_dd4f2625f01e2a0fcd478add993a37b0, const_str_plain_title, const_str_digest_72ec5e7259a3569a72c167c27fed89c3);
    PyDict_SetItem(const_dict_dd4f2625f01e2a0fcd478add993a37b0, const_str_plain_description, const_str_digest_c87444f5bac9321956454177db57c27f);
    PyDict_SetItem(const_dict_dd4f2625f01e2a0fcd478add993a37b0, const_str_plain_thumbnail, const_str_digest_a4d2c749144754fcad3c1b2f9e5cb89a);
    PyDict_SetItem(const_dict_dd4f2625f01e2a0fcd478add993a37b0, const_str_plain_duration, const_int_pos_33);
    assert(PyDict_Size(const_dict_dd4f2625f01e2a0fcd478add993a37b0) == 6);
    const_str_digest_43a59acb3111c87b0f852afd459d9150 = UNSTREAM_STRING_ASCII(&constant_bin[ 1279622 ], 54, 0);
    const_str_digest_23f0424c0aede0055dd05e70af894a44 = UNSTREAM_STRING_ASCII(&constant_bin[ 1279676 ], 74, 0);
    const_str_digest_b0cbaaa570a1dfd4f7894ba6d7e72161 = UNSTREAM_STRING_ASCII(&constant_bin[ 1279750 ], 44, 0);
    const_dict_5e005be8cf4935e987038e39dba5717c = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1279794 ], 333);
    const_dict_a74a30cbc8750aaba5de34650bae7e09 = _PyDict_NewPresized( 2 );
    const_str_digest_9259f566ae8c457fd5c353feae3d9e71 = UNSTREAM_STRING_ASCII(&constant_bin[ 1280127 ], 73, 0);
    PyDict_SetItem(const_dict_a74a30cbc8750aaba5de34650bae7e09, const_str_plain_url, const_str_digest_9259f566ae8c457fd5c353feae3d9e71);
    const_dict_393040dfb005ddc95639c78a1f6b48e3 = _PyDict_NewPresized( 5 );
    PyDict_SetItem(const_dict_393040dfb005ddc95639c78a1f6b48e3, const_str_plain_id, const_str_plain_4238694884001);
    PyDict_SetItem(const_dict_393040dfb005ddc95639c78a1f6b48e3, const_str_plain_ext, const_str_plain_flv);
    const_str_digest_6806a8b226136d0452125dd29f684443 = UNSTREAM_STRING_ASCII(&constant_bin[ 1280200 ], 30, 0);
    PyDict_SetItem(const_dict_393040dfb005ddc95639c78a1f6b48e3, const_str_plain_title, const_str_digest_6806a8b226136d0452125dd29f684443);
    PyDict_SetItem(const_dict_393040dfb005ddc95639c78a1f6b48e3, const_str_plain_description, const_str_digest_6806a8b226136d0452125dd29f684443);
    PyDict_SetItem(const_dict_393040dfb005ddc95639c78a1f6b48e3, const_str_plain_duration, const_int_pos_51690);
    assert(PyDict_Size(const_dict_393040dfb005ddc95639c78a1f6b48e3) == 5);
    PyDict_SetItem(const_dict_a74a30cbc8750aaba5de34650bae7e09, const_str_plain_info_dict, const_dict_393040dfb005ddc95639c78a1f6b48e3);
    assert(PyDict_Size(const_dict_a74a30cbc8750aaba5de34650bae7e09) == 2);
    const_str_digest_05db319212c8687c297d6b4c443b8605 = UNSTREAM_STRING_ASCII(&constant_bin[ 1280230 ], 410, 0);
    const_dict_f6daba7139c94abd41b35f4175718498 = _PyDict_NewPresized( 3 );
    const_str_plain_govtaff020316 = UNSTREAM_STRING_ASCII(&constant_bin[ 1280640 ], 13, 1);
    PyDict_SetItem(const_dict_f6daba7139c94abd41b35f4175718498, const_str_plain_id, const_str_plain_govtaff020316);
    PyDict_SetItem(const_dict_f6daba7139c94abd41b35f4175718498, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_f15716102597abdf7de41dfcd6b3431e = UNSTREAM_STRING_ASCII(&constant_bin[ 1280653 ], 30, 0);
    PyDict_SetItem(const_dict_f6daba7139c94abd41b35f4175718498, const_str_plain_title, const_str_digest_f15716102597abdf7de41dfcd6b3431e);
    assert(PyDict_Size(const_dict_f6daba7139c94abd41b35f4175718498) == 3);
    const_tuple_str_plain_to_generic_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_to_generic_tuple, 0, const_str_plain_to_generic); Py_INCREF(const_str_plain_to_generic);
    const_tuple_str_plain_MTVServicesEmbeddedIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MTVServicesEmbeddedIE_tuple, 0, const_str_plain_MTVServicesEmbeddedIE); Py_INCREF(const_str_plain_MTVServicesEmbeddedIE);
    const_dict_b7f6b41d944a6e262bb19b9f3bfe92e3 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1280683 ], 474);
    const_dict_945b2e27a8fdb4912ac6485714f084ea = _PyDict_NewPresized( 3 );
    const_str_digest_c4f1ae659530f125bf36e6b8fa6ae276 = UNSTREAM_STRING_ASCII(&constant_bin[ 1281157 ], 63, 0);
    PyDict_SetItem(const_dict_945b2e27a8fdb4912ac6485714f084ea, const_str_plain_url, const_str_digest_c4f1ae659530f125bf36e6b8fa6ae276);
    PyDict_SetItem(const_dict_945b2e27a8fdb4912ac6485714f084ea, const_str_plain_info_dict, const_dict_dd4f2625f01e2a0fcd478add993a37b0);
    PyDict_SetItem(const_dict_945b2e27a8fdb4912ac6485714f084ea, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_945b2e27a8fdb4912ac6485714f084ea) == 3);
    const_tuple_str_plain_TeachableIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TeachableIE_tuple, 0, const_str_plain_TeachableIE); Py_INCREF(const_str_plain_TeachableIE);
    const_str_digest_8014710ca7439e3d687ba3ff75c44cea = UNSTREAM_STRING_ASCII(&constant_bin[ 1281220 ], 88, 0);
    const_str_plain_20170712 = UNSTREAM_STRING_ASCII(&constant_bin[ 1281308 ], 8, 0);
    const_dict_ef0e72767d500c832e069aca383f42ee = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_ef0e72767d500c832e069aca383f42ee, const_str_plain_url, const_str_digest_f7f53a31fabe8b05a913af447cd9aee4);
    const_dict_fe7ff11f9b7312675f537b45c463e65c = _PyDict_NewPresized( 5 );
    PyDict_SetItem(const_dict_fe7ff11f9b7312675f537b45c463e65c, const_str_plain_id, const_str_digest_f2ed562d581c4f32fea2797ec98624e1);
    PyDict_SetItem(const_dict_fe7ff11f9b7312675f537b45c463e65c, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_aad76067a611c01421c5f2383aedf015 = UNSTREAM_STRING(&constant_bin[ 1281316 ], 54, 0);
    PyDict_SetItem(const_dict_fe7ff11f9b7312675f537b45c463e65c, const_str_plain_title, const_str_digest_aad76067a611c01421c5f2383aedf015);
    PyDict_SetItem(const_dict_fe7ff11f9b7312675f537b45c463e65c, const_str_plain_thumbnail, const_str_digest_a4d2c749144754fcad3c1b2f9e5cb89a);
    const_int_pos_153 = PyLong_FromUnsignedLong(153ul);
    PyDict_SetItem(const_dict_fe7ff11f9b7312675f537b45c463e65c, const_str_plain_duration, const_int_pos_153);
    assert(PyDict_Size(const_dict_fe7ff11f9b7312675f537b45c463e65c) == 5);
    PyDict_SetItem(const_dict_ef0e72767d500c832e069aca383f42ee, const_str_plain_info_dict, const_dict_fe7ff11f9b7312675f537b45c463e65c);
    assert(PyDict_Size(const_dict_ef0e72767d500c832e069aca383f42ee) == 2);
    const_dict_afd84ca9fc566b6f438f79d84c007112 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1281370 ], 344);
    const_dict_c3274d7e171935c58179768facb06b85 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1281714 ], 305);
    const_str_digest_921616c76e63d01864e0b5bc16b2bd01 = UNSTREAM_STRING_ASCII(&constant_bin[ 1282019 ], 60, 0);
    const_dict_c315cb62c0f5ec09e9dafbc3a1d07d68 = _PyDict_NewPresized( 3 );
    const_str_digest_1d7a20a0c795a31ad3fe40498b9539b3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1282079 ], 61, 0);
    PyDict_SetItem(const_dict_c315cb62c0f5ec09e9dafbc3a1d07d68, const_str_plain_url, const_str_digest_1d7a20a0c795a31ad3fe40498b9539b3);
    const_dict_9bf0813705bf18a0ba3aceb07a479869 = _PyDict_NewPresized( 4 );
    const_str_plain_lwYWYxYzE6V5uJMjNGyKtwwiw9ZJD7t2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1282140 ], 32, 1);
    PyDict_SetItem(const_dict_9bf0813705bf18a0ba3aceb07a479869, const_str_plain_id, const_str_plain_lwYWYxYzE6V5uJMjNGyKtwwiw9ZJD7t2);
    PyDict_SetItem(const_dict_9bf0813705bf18a0ba3aceb07a479869, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_d3ee5dade447dce6f320554b72a353c2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1282172 ], 33, 0);
    PyDict_SetItem(const_dict_9bf0813705bf18a0ba3aceb07a479869, const_str_plain_title, const_str_digest_d3ee5dade447dce6f320554b72a353c2);
    const_float_43_276 = UNSTREAM_FLOAT(&constant_bin[ 1282205 ]);
    PyDict_SetItem(const_dict_9bf0813705bf18a0ba3aceb07a479869, const_str_plain_duration, const_float_43_276);
    assert(PyDict_Size(const_dict_9bf0813705bf18a0ba3aceb07a479869) == 4);
    PyDict_SetItem(const_dict_c315cb62c0f5ec09e9dafbc3a1d07d68, const_str_plain_info_dict, const_dict_9bf0813705bf18a0ba3aceb07a479869);
    PyDict_SetItem(const_dict_c315cb62c0f5ec09e9dafbc3a1d07d68, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_c315cb62c0f5ec09e9dafbc3a1d07d68) == 3);
    const_str_digest_d027f4adb63c7ea8a5f2882a40ce715a = UNSTREAM_STRING_ASCII(&constant_bin[ 1282213 ], 43, 0);
    const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple = PyTuple_New(10);
    PyTuple_SET_ITEM(const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple, 0, const_str_plain_swf); Py_INCREF(const_str_plain_swf);
    PyTuple_SET_ITEM(const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple, 1, const_str_plain_png); Py_INCREF(const_str_plain_png);
    PyTuple_SET_ITEM(const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple, 2, const_str_plain_jpg); Py_INCREF(const_str_plain_jpg);
    PyTuple_SET_ITEM(const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple, 3, const_str_plain_srt); Py_INCREF(const_str_plain_srt);
    const_str_plain_sbv = UNSTREAM_STRING_ASCII(&constant_bin[ 1282256 ], 3, 1);
    PyTuple_SET_ITEM(const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple, 4, const_str_plain_sbv); Py_INCREF(const_str_plain_sbv);
    PyTuple_SET_ITEM(const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple, 5, const_str_plain_sub); Py_INCREF(const_str_plain_sub);
    PyTuple_SET_ITEM(const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple, 6, const_str_plain_vtt); Py_INCREF(const_str_plain_vtt);
    PyTuple_SET_ITEM(const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple, 7, const_str_plain_ttml); Py_INCREF(const_str_plain_ttml);
    PyTuple_SET_ITEM(const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple, 8, const_str_plain_js); Py_INCREF(const_str_plain_js);
    PyTuple_SET_ITEM(const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple, 9, const_str_plain_xml); Py_INCREF(const_str_plain_xml);
    const_dict_7100b4bc7a73e7204f2a5993fa2a32d2 = _PyDict_NewPresized( 7 );
    const_str_digest_34f682065933eadc3e905e51a2a7f5a9 = UNSTREAM_STRING_ASCII(&constant_bin[ 1282259 ], 36, 0);
    PyDict_SetItem(const_dict_7100b4bc7a73e7204f2a5993fa2a32d2, const_str_plain_id, const_str_digest_34f682065933eadc3e905e51a2a7f5a9);
    PyDict_SetItem(const_dict_7100b4bc7a73e7204f2a5993fa2a32d2, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_b97444c8a766a55d4a29f56341efba4c = UNSTREAM_STRING(&constant_bin[ 1282295 ], 68, 0);
    PyDict_SetItem(const_dict_7100b4bc7a73e7204f2a5993fa2a32d2, const_str_plain_title, const_str_digest_b97444c8a766a55d4a29f56341efba4c);
    const_str_digest_80e2d41c8ac9c07d4ff70d1ba5811b2b = UNSTREAM_STRING(&constant_bin[ 1282363 ], 169, 0);
    PyDict_SetItem(const_dict_7100b4bc7a73e7204f2a5993fa2a32d2, const_str_plain_description, const_str_digest_80e2d41c8ac9c07d4ff70d1ba5811b2b);
    const_int_pos_1455216756 = PyLong_FromUnsignedLong(1455216756ul);
    PyDict_SetItem(const_dict_7100b4bc7a73e7204f2a5993fa2a32d2, const_str_plain_timestamp, const_int_pos_1455216756);
    const_str_digest_485ef83d50f4f5761a1cc743af42acc6 = UNSTREAM_STRING_ASCII(&constant_bin[ 1282440 ], 19, 0);
    PyDict_SetItem(const_dict_7100b4bc7a73e7204f2a5993fa2a32d2, const_str_plain_uploader, const_str_digest_485ef83d50f4f5761a1cc743af42acc6);
    const_str_plain_20160211 = UNSTREAM_STRING_ASCII(&constant_bin[ 1282532 ], 8, 0);
    PyDict_SetItem(const_dict_7100b4bc7a73e7204f2a5993fa2a32d2, const_str_plain_upload_date, const_str_plain_20160211);
    assert(PyDict_Size(const_dict_7100b4bc7a73e7204f2a5993fa2a32d2) == 7);
    const_str_plain_4ccbebe5f36706d85221f204d7eb5913 = UNSTREAM_STRING_ASCII(&constant_bin[ 1282540 ], 32, 0);
    const_str_digest_d0e8ec79cdf9c712ed79ec93e5603d8a = UNSTREAM_STRING_ASCII(&constant_bin[ 1282572 ], 36, 0);
    const_dict_c3150b43c4e1c1f55dde9b7749937b87 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1282608 ], 391);
    const_str_digest_0cab677b50e8ef49aa95ba8139a43d0f = UNSTREAM_STRING_ASCII(&constant_bin[ 1282999 ], 48, 0);
    const_str_digest_0a9cfa0f350468c7282063ef2b61a6d7 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283047 ], 25, 0);
    const_str_digest_d1b6ede8c08033ced88856fee6878355 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283072 ], 49, 0);
    const_str_digest_4da7655e75d3d75fdfe546f4ac5a0810 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283121 ], 61, 0);
    const_dict_e59e35a0f06f1a6b4cef85355f563466 = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_e59e35a0f06f1a6b4cef85355f563466, const_str_plain_url, const_str_digest_9e80e937e330f097dbda5d746bbc9808);
    const_dict_9e314f1f9408fe5892db84472ef46495 = _PyDict_NewPresized( 5 );
    PyDict_SetItem(const_dict_9e314f1f9408fe5892db84472ef46495, const_str_plain_id, const_str_plain_95d035dc5c8a401588e9c0e6bd1e9c92);
    PyDict_SetItem(const_dict_9e314f1f9408fe5892db84472ef46495, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_9e314f1f9408fe5892db84472ef46495, const_str_plain_title, const_str_plain_07448641);
    const_int_pos_1499890639 = PyLong_FromUnsignedLong(1499890639ul);
    PyDict_SetItem(const_dict_9e314f1f9408fe5892db84472ef46495, const_str_plain_timestamp, const_int_pos_1499890639);
    PyDict_SetItem(const_dict_9e314f1f9408fe5892db84472ef46495, const_str_plain_upload_date, const_str_plain_20170712);
    assert(PyDict_Size(const_dict_9e314f1f9408fe5892db84472ef46495) == 5);
    PyDict_SetItem(const_dict_e59e35a0f06f1a6b4cef85355f563466, const_str_plain_info_dict, const_dict_9e314f1f9408fe5892db84472ef46495);
    PyDict_SetItem(const_dict_e59e35a0f06f1a6b4cef85355f563466, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    const_list_str_plain_LimelightMedia_list = PyList_New(1);
    PyList_SET_ITEM(const_list_str_plain_LimelightMedia_list, 0, const_str_plain_LimelightMedia); Py_INCREF(const_str_plain_LimelightMedia);
    PyDict_SetItem(const_dict_e59e35a0f06f1a6b4cef85355f563466, const_str_plain_add_ie, const_list_str_plain_LimelightMedia_list);
    assert(PyDict_Size(const_dict_e59e35a0f06f1a6b4cef85355f563466) == 4);
    const_dict_ccf59e832d8e20a337d688736af13867 = _PyDict_NewPresized( 6 );
    const_str_plain_1731611 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283182 ], 7, 0);
    PyDict_SetItem(const_dict_ccf59e832d8e20a337d688736af13867, const_str_plain_id, const_str_plain_1731611);
    PyDict_SetItem(const_dict_ccf59e832d8e20a337d688736af13867, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_ccf59e832d8e20a337d688736af13867, const_str_plain_title, const_str_digest_5ba495d9df3fb420e93eec3efa42d5d5);
    PyDict_SetItem(const_dict_ccf59e832d8e20a337d688736af13867, const_str_plain_description, const_str_digest_d0e8ec79cdf9c712ed79ec93e5603d8a);
    const_int_pos_1516100691 = PyLong_FromUnsignedLong(1516100691ul);
    PyDict_SetItem(const_dict_ccf59e832d8e20a337d688736af13867, const_str_plain_timestamp, const_int_pos_1516100691);
    const_str_plain_20180116 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283189 ], 8, 0);
    PyDict_SetItem(const_dict_ccf59e832d8e20a337d688736af13867, const_str_plain_upload_date, const_str_plain_20180116);
    assert(PyDict_Size(const_dict_ccf59e832d8e20a337d688736af13867) == 6);
    const_str_digest_e48a4367407bfa6634de13c77fd874a7 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283197 ], 37, 0);
    const_str_digest_58ca4fa7e7e23de81c8bbc4202c4c25e = UNSTREAM_STRING_ASCII(&constant_bin[ 1283234 ], 72, 0);
    const_str_digest_8b1b8cd487af2fb535d9a9bafda9171b = UNSTREAM_STRING_ASCII(&constant_bin[ 1283306 ], 10, 0);
    const_tuple_str_plain_SVTIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SVTIE_tuple, 0, const_str_plain_SVTIE); Py_INCREF(const_str_plain_SVTIE);
    const_str_plain_kps1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283316 ], 4, 1);
    const_str_plain_aecd089f55b1cb5a59032cb049d3a356 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283320 ], 32, 1);
    const_dict_6e33b1cf7ef946706005d7b11221abce = _PyDict_NewPresized( 3 );
    const_str_digest_b3b4d0a6d35ee3a1e0fb82f97ac4bf3b = UNSTREAM_STRING_ASCII(&constant_bin[ 1283352 ], 102, 0);
    PyDict_SetItem(const_dict_6e33b1cf7ef946706005d7b11221abce, const_str_plain_url, const_str_digest_b3b4d0a6d35ee3a1e0fb82f97ac4bf3b);
    const_dict_0c0935d6d67310b6180de4a7724fef1d = _PyDict_NewPresized( 2 );
    const_str_plain_52809 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283449 ], 5, 0);
    PyDict_SetItem(const_dict_0c0935d6d67310b6180de4a7724fef1d, const_str_plain_id, const_str_plain_52809);
    PyDict_SetItem(const_dict_0c0935d6d67310b6180de4a7724fef1d, const_str_plain_title, const_str_digest_a4d674d4cd12d0c31489346eb58380ef);
    assert(PyDict_Size(const_dict_0c0935d6d67310b6180de4a7724fef1d) == 2);
    PyDict_SetItem(const_dict_6e33b1cf7ef946706005d7b11221abce, const_str_plain_info_dict, const_dict_0c0935d6d67310b6180de4a7724fef1d);
    PyDict_SetItem(const_dict_6e33b1cf7ef946706005d7b11221abce, const_str_plain_playlist_mincount, const_int_pos_7);
    assert(PyDict_Size(const_dict_6e33b1cf7ef946706005d7b11221abce) == 3);
    const_int_pos_1474354800 = PyLong_FromUnsignedLong(1474354800ul);
    const_str_digest_aadb6107b8084906223622cea0ad4aaa = UNSTREAM_STRING_ASCII(&constant_bin[ 1283454 ], 55, 0);
    const_str_digest_4fc092d6545a8ca876e8f6a3fccc45b5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283509 ], 40, 0);
    const_tuple_str_plain_mpegurl_tuple = PyTuple_New(1);
    const_str_plain_mpegurl = UNSTREAM_STRING_ASCII(&constant_bin[ 1283549 ], 7, 1);
    PyTuple_SET_ITEM(const_tuple_str_plain_mpegurl_tuple, 0, const_str_plain_mpegurl); Py_INCREF(const_str_plain_mpegurl);
    const_str_plain_MTVServicesEmbedded = UNSTREAM_STRING_ASCII(&constant_bin[ 41078 ], 19, 1);
    const_dict_f1a19df5e0ff334dbc74caec0acde171 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1283556 ], 284);
    const_str_plain_3326530_hq = UNSTREAM_STRING_ASCII(&constant_bin[ 1283840 ], 10, 0);
    const_dict_15307652e4809fba24d555585c478e4c = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_15307652e4809fba24d555585c478e4c, const_str_plain_url, const_str_digest_4a8afc75ab923c9e074925090dc0022e);
    PyDict_SetItem(const_dict_15307652e4809fba24d555585c478e4c, const_str_plain_md5, const_str_plain_43662b577c018ad707a63766462b1e87);
    PyDict_SetItem(const_dict_15307652e4809fba24d555585c478e4c, const_str_plain_info_dict, const_dict_7f784dd3d97b14f8a092c7056e4a88ae);
    assert(PyDict_Size(const_dict_15307652e4809fba24d555585c478e4c) == 3);
    const_str_digest_5c683438ff38f48cb123d7e50ca812da = UNSTREAM_STRING_ASCII(&constant_bin[ 1283850 ], 114, 0);
    const_str_digest_f3dd9bb810bab78a40fa56e67b2b6ba5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283964 ], 9, 0);
    const_tuple_str_plain_ec_tuple = PyTuple_New(1);
    const_str_plain_ec = UNSTREAM_STRING_ASCII(&constant_bin[ 290 ], 2, 1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ec_tuple, 0, const_str_plain_ec); Py_INCREF(const_str_plain_ec);
    const_str_digest_d41bb0f47c76ba5cccb1379bca98b38a = UNSTREAM_STRING_ASCII(&constant_bin[ 1283973 ], 98, 0);
    const_str_plain_418921 = UNSTREAM_STRING_ASCII(&constant_bin[ 1276766 ], 6, 0);
    const_str_plain_Tvigle = UNSTREAM_STRING_ASCII(&constant_bin[ 1284071 ], 6, 1);
    const_str_plain_playlist_desc = UNSTREAM_STRING_ASCII(&constant_bin[ 944300 ], 13, 1);
    const_str_digest_dc97e4858160452b7c1499837aba0a88 = UNSTREAM_STRING_ASCII(&constant_bin[ 1284077 ], 123, 0);
    const_tuple_2410a945b7a9c18c09b4bdb4b7baf173_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_2410a945b7a9c18c09b4bdb4b7baf173_tuple, 0, const_str_digest_b9c4baf879ebd882d40843df3a4dead7); Py_INCREF(const_str_digest_b9c4baf879ebd882d40843df3a4dead7);
    const_str_plain_marker = UNSTREAM_STRING_ASCII(&constant_bin[ 17856 ], 6, 1);
    PyTuple_SET_ITEM(const_tuple_2410a945b7a9c18c09b4bdb4b7baf173_tuple, 1, const_str_plain_marker); Py_INCREF(const_str_plain_marker);
    PyTuple_SET_ITEM(const_tuple_2410a945b7a9c18c09b4bdb4b7baf173_tuple, 2, const_str_plain_webpage); Py_INCREF(const_str_plain_webpage);
    const_str_digest_76400fef6f1bd19b69e7de19b0ec0862 = UNSTREAM_STRING_ASCII(&constant_bin[ 1284200 ], 67, 0);
    const_dict_d2c5544aca2fa366bfb880c3f6edb98a = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_d2c5544aca2fa366bfb880c3f6edb98a, const_str_plain_id, const_str_plain_776940);
    PyDict_SetItem(const_dict_d2c5544aca2fa366bfb880c3f6edb98a, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_d2c5544aca2fa366bfb880c3f6edb98a, const_str_plain_title, const_str_digest_c96da6aceb1f887f1a07d97f4c681ccc);
    const_str_digest_fbd016808a6730dfebef63b3e6ae0427 = UNSTREAM_STRING_ASCII(&constant_bin[ 1284267 ], 36, 0);
    PyDict_SetItem(const_dict_d2c5544aca2fa366bfb880c3f6edb98a, const_str_plain_description, const_str_digest_fbd016808a6730dfebef63b3e6ae0427);
    assert(PyDict_Size(const_dict_d2c5544aca2fa366bfb880c3f6edb98a) == 4);
    const_str_digest_b3d0da1cc878ae9af441eb53fbbcc497 = UNSTREAM_STRING_ASCII(&constant_bin[ 1284303 ], 12, 0);
    const_str_digest_c220897a8766025cba7cb4bc2a153ad7 = UNSTREAM_STRING_ASCII(&constant_bin[ 1284315 ], 41, 0);
    const_str_digest_de9efc8e28e76c1e887a7bbdc848eee6 = UNSTREAM_STRING_ASCII(&constant_bin[ 1284356 ], 28, 0);
    const_str_digest_411d9b323c28c23b6a536f3244f71089 = UNSTREAM_STRING_ASCII(&constant_bin[ 1284384 ], 52, 0);
    const_tuple_str_digest_7d4c3598dac00d3e7208489ebb5ceaa4_tuple = PyTuple_New(1);
    const_str_digest_7d4c3598dac00d3e7208489ebb5ceaa4 = UNSTREAM_STRING_ASCII(&constant_bin[ 1284436 ], 13, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_7d4c3598dac00d3e7208489ebb5ceaa4_tuple, 0, const_str_digest_7d4c3598dac00d3e7208489ebb5ceaa4); Py_INCREF(const_str_digest_7d4c3598dac00d3e7208489ebb5ceaa4);
    const_dict_8ff1e1c4e79095474dbc9fba1737a55d = _PyDict_NewPresized( 4 );
    const_str_digest_7a91cc728e3ced74ce334201df4a563d = UNSTREAM_STRING_ASCII(&constant_bin[ 1284449 ], 149, 0);
    PyDict_SetItem(const_dict_8ff1e1c4e79095474dbc9fba1737a55d, const_str_plain_url, const_str_digest_7a91cc728e3ced74ce334201df4a563d);
    PyDict_SetItem(const_dict_8ff1e1c4e79095474dbc9fba1737a55d, const_str_plain_info_dict, const_dict_cbfb26133f12b4632df64aed552a2011);
    PyDict_SetItem(const_dict_8ff1e1c4e79095474dbc9fba1737a55d, const_str_plain_playlist_mincount, const_int_pos_7);
    PyDict_SetItem(const_dict_8ff1e1c4e79095474dbc9fba1737a55d, const_str_plain_skip, const_str_digest_d6ed4e64285dd706c071b428dcab173c);
    assert(PyDict_Size(const_dict_8ff1e1c4e79095474dbc9fba1737a55d) == 4);
    const_dict_b384620a920db6c17ac8171d704f5300 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1284598 ], 277);
    const_str_digest_d515ca44891c29602fcc0394d0c87105 = UNSTREAM_STRING_ASCII(&constant_bin[ 1284875 ], 43, 0);
    const_dict_124ac211d9a96ffa6e0f88f703a7a0d5 = _PyDict_NewPresized( 5 );
    const_str_digest_aab9d51a9c34390179657a1b6bd12873 = UNSTREAM_STRING_ASCII(&constant_bin[ 1281283 ], 21, 0);
    PyDict_SetItem(const_dict_124ac211d9a96ffa6e0f88f703a7a0d5, const_str_plain_id, const_str_digest_aab9d51a9c34390179657a1b6bd12873);
    PyDict_SetItem(const_dict_124ac211d9a96ffa6e0f88f703a7a0d5, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_124ac211d9a96ffa6e0f88f703a7a0d5, const_str_plain_title, const_str_digest_aab9d51a9c34390179657a1b6bd12873);
    PyDict_SetItem(const_dict_124ac211d9a96ffa6e0f88f703a7a0d5, const_str_plain_formats, const_str_digest_8b1b8cd487af2fb535d9a9bafda9171b);
    PyDict_SetItem(const_dict_124ac211d9a96ffa6e0f88f703a7a0d5, const_str_plain_upload_date, const_str_plain_20130904);
    assert(PyDict_Size(const_dict_124ac211d9a96ffa6e0f88f703a7a0d5) == 5);
    const_dict_75c871eb084b50441d81798f9f9f64c1 = _PyDict_NewPresized( 5 );
    PyDict_SetItem(const_dict_75c871eb084b50441d81798f9f9f64c1, const_str_plain_id, const_str_plain_3326530_hq);
    PyDict_SetItem(const_dict_75c871eb084b50441d81798f9f9f64c1, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_4710613304fba18930d021e540a59efc = UNSTREAM_STRING_ASCII(&constant_bin[ 1284918 ], 17, 0);
    PyDict_SetItem(const_dict_75c871eb084b50441d81798f9f9f64c1, const_str_plain_title, const_str_digest_4710613304fba18930d021e540a59efc);
    const_str_digest_a20ea9802bc478affb5905988eab0644 = UNSTREAM_STRING_ASCII(&constant_bin[ 1284935 ], 12, 0);
    PyDict_SetItem(const_dict_75c871eb084b50441d81798f9f9f64c1, const_str_plain_uploader, const_str_digest_a20ea9802bc478affb5905988eab0644);
    PyDict_SetItem(const_dict_75c871eb084b50441d81798f9f9f64c1, const_str_plain_age_limit, const_int_pos_18);
    assert(PyDict_Size(const_dict_75c871eb084b50441d81798f9f9f64c1) == 5);
    const_dict_ebea30a7dd34fe05bfa0fd36982c79c4 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1284947 ], 392);
    const_dict_bd3fd1e812fda54806b6710c4c9ce206 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1285339 ], 444);
    const_str_digest_ba13b7ad4f4c53b99c5f194088ca1b82 = UNSTREAM_STRING_ASCII(&constant_bin[ 1285783 ], 8, 0);
    const_dict_57ba96e6428c3dcab4dbd037a234bdcb = _PyDict_NewPresized( 3 );
    const_str_digest_5a18aa2216b00181f856225638506404 = UNSTREAM_STRING_ASCII(&constant_bin[ 1285791 ], 49, 0);
    PyDict_SetItem(const_dict_57ba96e6428c3dcab4dbd037a234bdcb, const_str_plain_url, const_str_digest_5a18aa2216b00181f856225638506404);
    const_str_plain_65fdff94098e4a607385a60c5177c638 = UNSTREAM_STRING_ASCII(&constant_bin[ 1285840 ], 32, 0);
    PyDict_SetItem(const_dict_57ba96e6428c3dcab4dbd037a234bdcb, const_str_plain_md5, const_str_plain_65fdff94098e4a607385a60c5177c638);
    const_dict_0599059b638b8af59bec196e5fa7ef54 = _PyDict_NewPresized( 5 );
    const_str_plain_1969 = UNSTREAM_STRING_ASCII(&constant_bin[ 1237516 ], 4, 0);
    PyDict_SetItem(const_dict_0599059b638b8af59bec196e5fa7ef54, const_str_plain_id, const_str_plain_1969);
    PyDict_SetItem(const_dict_0599059b638b8af59bec196e5fa7ef54, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_0599059b638b8af59bec196e5fa7ef54, const_str_plain_title, const_str_digest_649f44f2dfe45332566422a99b6f329e);
    const_str_digest_52cc6e1c20008d855d194d42f5ead113 = UNSTREAM_STRING_ASCII(&constant_bin[ 1285872 ], 18, 0);
    PyDict_SetItem(const_dict_0599059b638b8af59bec196e5fa7ef54, const_str_plain_uploader, const_str_digest_52cc6e1c20008d855d194d42f5ead113);
    const_str_digest_b4916cd7db2de998ba33e5a187c5eac7 = UNSTREAM_STRING_ASCII(&constant_bin[ 1285890 ], 36, 0);
    PyDict_SetItem(const_dict_0599059b638b8af59bec196e5fa7ef54, const_str_plain_description, const_str_digest_b4916cd7db2de998ba33e5a187c5eac7);
    assert(PyDict_Size(const_dict_0599059b638b8af59bec196e5fa7ef54) == 5);
    PyDict_SetItem(const_dict_57ba96e6428c3dcab4dbd037a234bdcb, const_str_plain_info_dict, const_dict_0599059b638b8af59bec196e5fa7ef54);
    assert(PyDict_Size(const_dict_57ba96e6428c3dcab4dbd037a234bdcb) == 3);
    const_str_plain_546363 = UNSTREAM_STRING_ASCII(&constant_bin[ 1285926 ], 6, 0);
    const_dict_69b1720c46d789fd6771efa984f170bb = _PyDict_NewPresized( 7 );
    const_str_plain_9b3d5bee0a8740bf70dfd29d3ea43541 = UNSTREAM_STRING_ASCII(&constant_bin[ 1285932 ], 32, 0);
    PyDict_SetItem(const_dict_69b1720c46d789fd6771efa984f170bb, const_str_plain_id, const_str_plain_9b3d5bee0a8740bf70dfd29d3ea43541);
    PyDict_SetItem(const_dict_69b1720c46d789fd6771efa984f170bb, const_str_plain_ext, const_str_plain_flv);
    const_str_digest_cebfe743bd3c2d265c2cceae81f216d7 = UNSTREAM_STRING(&constant_bin[ 1285964 ], 34, 0);
    PyDict_SetItem(const_dict_69b1720c46d789fd6771efa984f170bb, const_str_plain_title, const_str_digest_cebfe743bd3c2d265c2cceae81f216d7);
    const_str_digest_5a195c91b3d3890b8e56da2ae8084def = UNSTREAM_STRING_ASCII(&constant_bin[ 1285998 ], 36, 0);
    PyDict_SetItem(const_dict_69b1720c46d789fd6771efa984f170bb, const_str_plain_description, const_str_digest_5a195c91b3d3890b8e56da2ae8084def);
    const_str_digest_60d7cdddc990ec7a07ca9b050c92901c = UNSTREAM_STRING(&constant_bin[ 1285964 ], 18, 0);
    PyDict_SetItem(const_dict_69b1720c46d789fd6771efa984f170bb, const_str_plain_uploader, const_str_digest_60d7cdddc990ec7a07ca9b050c92901c);
    PyDict_SetItem(const_dict_69b1720c46d789fd6771efa984f170bb, const_str_plain_upload_date, const_str_plain_20170228);
    const_str_plain_996642 = UNSTREAM_STRING_ASCII(&constant_bin[ 1286034 ], 6, 0);
    PyDict_SetItem(const_dict_69b1720c46d789fd6771efa984f170bb, const_str_plain_uploader_id, const_str_plain_996642);
    assert(PyDict_Size(const_dict_69b1720c46d789fd6771efa984f170bb) == 7);
    const_tuple_str_plain_FoxNewsIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_FoxNewsIE_tuple, 0, const_str_plain_FoxNewsIE); Py_INCREF(const_str_plain_FoxNewsIE);
    const_str_digest_04cca4c2ae94bd3ba8cdab47d06b676e = UNSTREAM_STRING_ASCII(&constant_bin[ 1286040 ], 11, 0);
    const_str_digest_1aa0a7dc1ce44981e2834c790db8c801 = UNSTREAM_STRING_ASCII(&constant_bin[ 1286051 ], 11, 0);
    const_str_plain_filter_video = UNSTREAM_STRING_ASCII(&constant_bin[ 1286062 ], 12, 1);
    const_str_digest_e2b24128969bbce524ed3d17a3014531 = UNSTREAM_STRING_ASCII(&constant_bin[ 1286074 ], 44, 0);
    const_str_digest_fc03a5c6130c13869d0eee16167c3aa8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1286118 ], 23, 0);
    const_dict_0df94e8bdf8467ea341f7fcb29ebf603 = _PyDict_NewPresized( 2 );
    const_str_digest_520cadf436f8d1744052d5c630320221 = UNSTREAM_STRING_ASCII(&constant_bin[ 1286141 ], 12, 0);
    PyDict_SetItem(const_dict_0df94e8bdf8467ea341f7fcb29ebf603, const_str_plain_id, const_str_digest_520cadf436f8d1744052d5c630320221);
    PyDict_SetItem(const_dict_0df94e8bdf8467ea341f7fcb29ebf603, const_str_plain_title, const_str_digest_ada636c8275574036b9f0936e996dcbf);
    assert(PyDict_Size(const_dict_0df94e8bdf8467ea341f7fcb29ebf603) == 2);
    const_dict_fe7d1a9a312858a6bdcdabe6f34612c4 = _PyDict_NewPresized( 7 );
    const_str_plain_1_sgtvehim = UNSTREAM_STRING_ASCII(&constant_bin[ 1286153 ], 10, 0);
    PyDict_SetItem(const_dict_fe7d1a9a312858a6bdcdabe6f34612c4, const_str_plain_id, const_str_plain_1_sgtvehim);
    PyDict_SetItem(const_dict_fe7d1a9a312858a6bdcdabe6f34612c4, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_a0410b74db762d58f8495984651e71fc = UNSTREAM_STRING_ASCII(&constant_bin[ 1286163 ], 55, 0);
    PyDict_SetItem(const_dict_fe7d1a9a312858a6bdcdabe6f34612c4, const_str_plain_title, const_str_digest_a0410b74db762d58f8495984651e71fc);
    PyDict_SetItem(const_dict_fe7d1a9a312858a6bdcdabe6f34612c4, const_str_plain_description, const_str_digest_7195907a0f031cb8f55e43f447b3ee2b);
    const_int_pos_1321158993 = PyLong_FromUnsignedLong(1321158993ul);
    PyDict_SetItem(const_dict_fe7d1a9a312858a6bdcdabe6f34612c4, const_str_plain_timestamp, const_int_pos_1321158993);
    const_str_plain_20111113 = UNSTREAM_STRING_ASCII(&constant_bin[ 1286218 ], 8, 0);
    PyDict_SetItem(const_dict_fe7d1a9a312858a6bdcdabe6f34612c4, const_str_plain_upload_date, const_str_plain_20111113);
    PyDict_SetItem(const_dict_fe7d1a9a312858a6bdcdabe6f34612c4, const_str_plain_uploader_id, const_str_plain_kps1);
    assert(PyDict_Size(const_dict_fe7d1a9a312858a6bdcdabe6f34612c4) == 7);
    const_dict_8e601ccf1fa573b445f26b6c79ea222a = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1286226 ], 540);
    const_tuple_str_plain_MofosexEmbedIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MofosexEmbedIE_tuple, 0, const_str_plain_MofosexEmbedIE); Py_INCREF(const_str_plain_MofosexEmbedIE);
    const_dict_67ff8b8f2fb8a32c23a5c587bf563e5d = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1286766 ], 448);
    const_str_digest_4fe2196d61160fd0101c232fad18f8ce = UNSTREAM_STRING_ASCII(&constant_bin[ 1287214 ], 42, 0);
    const_tuple_str_digest_1e7994a66f4cdf34edc87136750d7ba2_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_1e7994a66f4cdf34edc87136750d7ba2_tuple, 0, const_str_digest_1e7994a66f4cdf34edc87136750d7ba2); Py_INCREF(const_str_digest_1e7994a66f4cdf34edc87136750d7ba2);
    const_str_digest_f876970bac726ed574f0c96d3053998c = UNSTREAM_STRING_ASCII(&constant_bin[ 1287256 ], 67, 0);
    const_str_digest_f358f9b52cd0b6b17a14a5478e18d4d6 = UNSTREAM_STRING_ASCII(&constant_bin[ 1287323 ], 36, 0);
    const_str_plain_SmoothStreamingMedia = UNSTREAM_STRING_ASCII(&constant_bin[ 1287359 ], 20, 1);
    const_str_digest_ecfa95abc89d4e471894a6dc2561c099 = UNSTREAM_STRING_ASCII(&constant_bin[ 1287379 ], 78, 0);
    const_dict_ee0c9edf86b4dce6e1be03b53f9d9a5d = _PyDict_NewPresized( 3 );
    const_str_digest_9b6498c7244e07818fb3ef2e4cf65182 = UNSTREAM_STRING_ASCII(&constant_bin[ 1287457 ], 79, 0);
    PyDict_SetItem(const_dict_ee0c9edf86b4dce6e1be03b53f9d9a5d, const_str_plain_url, const_str_digest_9b6498c7244e07818fb3ef2e4cf65182);
    const_str_plain_9d65602bf31c6e20014319c7d07fba27 = UNSTREAM_STRING_ASCII(&constant_bin[ 1287536 ], 32, 0);
    PyDict_SetItem(const_dict_ee0c9edf86b4dce6e1be03b53f9d9a5d, const_str_plain_md5, const_str_plain_9d65602bf31c6e20014319c7d07fba27);
    const_dict_53d81317748f5c716715eca7691db4f5 = _PyDict_NewPresized( 5 );
    PyDict_SetItem(const_dict_53d81317748f5c716715eca7691db4f5, const_str_plain_id, const_str_plain_5123ea6d5e5a7);
    PyDict_SetItem(const_dict_53d81317748f5c716715eca7691db4f5, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_53d81317748f5c716715eca7691db4f5, const_str_plain_age_limit, const_int_pos_18);
    const_str_digest_bdd1040bd599f6db5a9a4e627f2913ad = UNSTREAM_STRING_ASCII(&constant_bin[ 1287464 ], 18, 0);
    PyDict_SetItem(const_dict_53d81317748f5c716715eca7691db4f5, const_str_plain_uploader, const_str_digest_bdd1040bd599f6db5a9a4e627f2913ad);
    const_str_digest_c0ee58de9ccdbb9368430ebef2b135f1 = UNSTREAM_STRING_ASCII(&constant_bin[ 1287568 ], 55, 0);
    PyDict_SetItem(const_dict_53d81317748f5c716715eca7691db4f5, const_str_plain_title, const_str_digest_c0ee58de9ccdbb9368430ebef2b135f1);
    assert(PyDict_Size(const_dict_53d81317748f5c716715eca7691db4f5) == 5);
    PyDict_SetItem(const_dict_ee0c9edf86b4dce6e1be03b53f9d9a5d, const_str_plain_info_dict, const_dict_53d81317748f5c716715eca7691db4f5);
    assert(PyDict_Size(const_dict_ee0c9edf86b4dce6e1be03b53f9d9a5d) == 3);
    const_dict_4a7e9bb92d541b81db21ee76e5d1a64d = _PyDict_NewPresized( 2 );
    const_str_digest_3f7eacafba628f0250bf953b5f24031e = UNSTREAM_STRING_ASCII(&constant_bin[ 1287623 ], 74, 0);
    PyDict_SetItem(const_dict_4a7e9bb92d541b81db21ee76e5d1a64d, const_str_plain_url, const_str_digest_3f7eacafba628f0250bf953b5f24031e);
    const_dict_8dc44cd9d7bf4ed40fc797f103e46c92 = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_8dc44cd9d7bf4ed40fc797f103e46c92, const_str_plain_id, const_str_digest_d72184c364975ff440231821d8e4fccb);
    PyDict_SetItem(const_dict_8dc44cd9d7bf4ed40fc797f103e46c92, const_str_plain_ext, const_str_plain_m4v);
    PyDict_SetItem(const_dict_8dc44cd9d7bf4ed40fc797f103e46c92, const_str_plain_upload_date, const_str_plain_20150228);
    PyDict_SetItem(const_dict_8dc44cd9d7bf4ed40fc797f103e46c92, const_str_plain_title, const_str_digest_d72184c364975ff440231821d8e4fccb);
    assert(PyDict_Size(const_dict_8dc44cd9d7bf4ed40fc797f103e46c92) == 4);
    PyDict_SetItem(const_dict_4a7e9bb92d541b81db21ee76e5d1a64d, const_str_plain_info_dict, const_dict_8dc44cd9d7bf4ed40fc797f103e46c92);
    assert(PyDict_Size(const_dict_4a7e9bb92d541b81db21ee76e5d1a64d) == 2);
    const_str_digest_678f4ae502d7cd16f14c3268ef633e54 = UNSTREAM_STRING_ASCII(&constant_bin[ 1287697 ], 35, 0);
    const_str_digest_69933bee8838c861cb7f5a9a6378c15f = UNSTREAM_STRING_ASCII(&constant_bin[ 1287732 ], 73, 0);
    const_dict_3c138da28b9b33d0b9690973b73b406b = _PyDict_NewPresized( 5 );
    const_str_digest_c80fb00149ec80cb3a7122cc90a436b9 = UNSTREAM_STRING_ASCII(&constant_bin[ 1287805 ], 24, 0);
    PyDict_SetItem(const_dict_3c138da28b9b33d0b9690973b73b406b, const_str_plain_url, const_str_digest_c80fb00149ec80cb3a7122cc90a436b9);
    const_str_plain_0ba9446db037002366bab3b3eb30c88c = UNSTREAM_STRING_ASCII(&constant_bin[ 1287829 ], 32, 0);
    PyDict_SetItem(const_dict_3c138da28b9b33d0b9690973b73b406b, const_str_plain_md5, const_str_plain_0ba9446db037002366bab3b3eb30c88c);
    const_dict_58b32bb87180a71581bf561c3e8af028 = _PyDict_NewPresized( 5 );
    const_str_plain_3101154703001 = UNSTREAM_STRING_ASCII(&constant_bin[ 1287861 ], 13, 0);
    PyDict_SetItem(const_dict_58b32bb87180a71581bf561c3e8af028, const_str_plain_id, const_str_plain_3101154703001);
    PyDict_SetItem(const_dict_58b32bb87180a71581bf561c3e8af028, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_8bad55672edab8788b2b155e66279c68 = UNSTREAM_STRING_ASCII(&constant_bin[ 1287874 ], 14, 0);
    PyDict_SetItem(const_dict_58b32bb87180a71581bf561c3e8af028, const_str_plain_title, const_str_digest_8bad55672edab8788b2b155e66279c68);
    PyDict_SetItem(const_dict_58b32bb87180a71581bf561c3e8af028, const_str_plain_uploader, const_str_digest_1aa0a7dc1ce44981e2834c790db8c801);
    PyDict_SetItem(const_dict_58b32bb87180a71581bf561c3e8af028, const_str_plain_description, const_str_digest_0c03fd27c3babeccd333152db321a801);
    assert(PyDict_Size(const_dict_58b32bb87180a71581bf561c3e8af028) == 5);
    PyDict_SetItem(const_dict_3c138da28b9b33d0b9690973b73b406b, const_str_plain_info_dict, const_dict_58b32bb87180a71581bf561c3e8af028);
    PyDict_SetItem(const_dict_3c138da28b9b33d0b9690973b73b406b, const_str_plain_add_ie, const_list_str_plain_BrightcoveLegacy_list);
    PyDict_SetItem(const_dict_3c138da28b9b33d0b9690973b73b406b, const_str_plain_skip, const_str_digest_7adeca30b7b0036238fce206fdd2d21c);
    assert(PyDict_Size(const_dict_3c138da28b9b33d0b9690973b73b406b) == 5);
    const_str_plain_20150314 = UNSTREAM_STRING_ASCII(&constant_bin[ 1287888 ], 8, 0);
    const_str_digest_ede1c04eead6c05b89baf894ee2f54e0 = UNSTREAM_STRING_ASCII(&constant_bin[ 1287896 ], 65, 0);
    const_str_digest_484908b0752bdf0b572089871b158ab0 = UNSTREAM_STRING_ASCII(&constant_bin[ 1287961 ], 52, 0);
    const_str_digest_83a204fa078f44b3dd1dd2c5bd48839f = UNSTREAM_STRING_ASCII(&constant_bin[ 1288013 ], 40, 0);
    const_int_pos_1511366290 = PyLong_FromUnsignedLong(1511366290ul);
    const_str_digest_351f365ebf58f977a34c02040a191f26 = UNSTREAM_STRING_ASCII(&constant_bin[ 1288053 ], 54, 0);
    const_str_digest_7fc34d4fa9e98fa10f83630a4be355ff = UNSTREAM_STRING_ASCII(&constant_bin[ 1288107 ], 22, 0);
    const_str_digest_11035f4bc30944276976e2005045c167 = UNSTREAM_STRING_ASCII(&constant_bin[ 1288129 ], 18, 0);
    const_dict_d89cf07bf8dae60ab63e55bd2ca1add4 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_d89cf07bf8dae60ab63e55bd2ca1add4, const_str_plain_url, const_str_digest_8fcc8c74a47c977b199f7a943d65dbed);
    const_str_plain_67d406c2bcb6af27fa886f31aa934bbe = UNSTREAM_STRING_ASCII(&constant_bin[ 1288147 ], 32, 0);
    PyDict_SetItem(const_dict_d89cf07bf8dae60ab63e55bd2ca1add4, const_str_plain_md5, const_str_plain_67d406c2bcb6af27fa886f31aa934bbe);
    const_dict_1fe16c657718faf9dec40bf6ffabb204 = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_1fe16c657718faf9dec40bf6ffabb204, const_str_plain_id, const_str_plain_trailer);
    PyDict_SetItem(const_dict_1fe16c657718faf9dec40bf6ffabb204, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_1fe16c657718faf9dec40bf6ffabb204, const_str_plain_title, const_str_plain_trailer);
    const_str_plain_20100513 = UNSTREAM_STRING_ASCII(&constant_bin[ 1288179 ], 8, 0);
    PyDict_SetItem(const_dict_1fe16c657718faf9dec40bf6ffabb204, const_str_plain_upload_date, const_str_plain_20100513);
    assert(PyDict_Size(const_dict_1fe16c657718faf9dec40bf6ffabb204) == 4);
    PyDict_SetItem(const_dict_d89cf07bf8dae60ab63e55bd2ca1add4, const_str_plain_info_dict, const_dict_1fe16c657718faf9dec40bf6ffabb204);
    assert(PyDict_Size(const_dict_d89cf07bf8dae60ab63e55bd2ca1add4) == 3);
    const_dict_b8375f50e1918ad78acb3e7eb3915f0e = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1288187 ], 329);
    const_str_digest_256498294869c5f2c9ee1b194f7ccbe5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1288516 ], 80, 0);
    const_tuple_str_plain_urls_str_plain_check_video_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_urls_str_plain_check_video_tuple, 0, const_str_plain_urls); Py_INCREF(const_str_plain_urls);
    const_str_plain_check_video = UNSTREAM_STRING_ASCII(&constant_bin[ 1286107 ], 11, 1);
    PyTuple_SET_ITEM(const_tuple_str_plain_urls_str_plain_check_video_tuple, 1, const_str_plain_check_video); Py_INCREF(const_str_plain_check_video);
    const_dict_005c30125e8a38a6502d60ede62c7abb = _PyDict_NewPresized( 3 );
    const_str_digest_a89cf82e9fe002181910ed4ed3dc414e = UNSTREAM_STRING_ASCII(&constant_bin[ 1288596 ], 49, 0);
    PyDict_SetItem(const_dict_005c30125e8a38a6502d60ede62c7abb, const_str_plain_url, const_str_digest_a89cf82e9fe002181910ed4ed3dc414e);
    PyDict_SetItem(const_dict_005c30125e8a38a6502d60ede62c7abb, const_str_plain_md5, const_str_plain_17b39f55b5497ae8b59f5fbce8e35886);
    PyDict_SetItem(const_dict_005c30125e8a38a6502d60ede62c7abb, const_str_plain_info_dict, const_dict_da4dc749a7069297c823d7f85176bfe7);
    assert(PyDict_Size(const_dict_005c30125e8a38a6502d60ede62c7abb) == 3);
    const_dict_a7463e2d19cb9302d945bf378f94478d = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_a7463e2d19cb9302d945bf378f94478d, const_str_plain_url, const_str_digest_23f0424c0aede0055dd05e70af894a44);
    const_dict_42523c163507013b83edbefdb324eebe = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_42523c163507013b83edbefdb324eebe, const_str_plain_id, const_str_plain_43254897);
    const_str_digest_c2637ab011d8896ca260d34879e31c58 = UNSTREAM_STRING(&constant_bin[ 1288645 ], 78, 0);
    PyDict_SetItem(const_dict_42523c163507013b83edbefdb324eebe, const_str_plain_title, const_str_digest_c2637ab011d8896ca260d34879e31c58);
    assert(PyDict_Size(const_dict_42523c163507013b83edbefdb324eebe) == 2);
    PyDict_SetItem(const_dict_a7463e2d19cb9302d945bf378f94478d, const_str_plain_info_dict, const_dict_42523c163507013b83edbefdb324eebe);
    PyDict_SetItem(const_dict_a7463e2d19cb9302d945bf378f94478d, const_str_plain_playlist_mincount, const_int_pos_3);
    assert(PyDict_Size(const_dict_a7463e2d19cb9302d945bf378f94478d) == 3);
    const_tuple_str_digest_74d01def66293c04a797c788fcd6d66b_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_74d01def66293c04a797c788fcd6d66b_tuple, 0, const_str_digest_74d01def66293c04a797c788fcd6d66b); Py_INCREF(const_str_digest_74d01def66293c04a797c788fcd6d66b);
    const_str_plain_StreetKitchen = UNSTREAM_STRING_ASCII(&constant_bin[ 1288723 ], 13, 1);
    const_dict_2fe1591230469133f38b6fc4fc437e6c = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_2fe1591230469133f38b6fc4fc437e6c, const_str_plain_id, const_str_plain_418921);
    PyDict_SetItem(const_dict_2fe1591230469133f38b6fc4fc437e6c, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_331af8d3e10a0a6f8005bb1e0f575bfa = UNSTREAM_STRING(&constant_bin[ 1288736 ], 86, 0);
    PyDict_SetItem(const_dict_2fe1591230469133f38b6fc4fc437e6c, const_str_plain_title, const_str_digest_331af8d3e10a0a6f8005bb1e0f575bfa);
    assert(PyDict_Size(const_dict_2fe1591230469133f38b6fc4fc437e6c) == 3);
    const_str_digest_e6a5cde769d6a22376e13987d9c1fc16 = UNSTREAM_STRING_ASCII(&constant_bin[ 1288822 ], 36, 0);
    const_str_digest_96946c2a8a6b6651536077dbe9e3707f = UNSTREAM_STRING_ASCII(&constant_bin[ 1288858 ], 36, 0);
    const_dict_4ab0e0e550e46281a4fb1f99312bd4e9 = _PyDict_NewPresized( 2 );
    const_str_digest_5d0bb8ff7e72b874c046a562a27c5b38 = UNSTREAM_STRING_ASCII(&constant_bin[ 1288894 ], 68, 0);
    PyDict_SetItem(const_dict_4ab0e0e550e46281a4fb1f99312bd4e9, const_str_plain_url, const_str_digest_5d0bb8ff7e72b874c046a562a27c5b38);
    PyDict_SetItem(const_dict_4ab0e0e550e46281a4fb1f99312bd4e9, const_str_plain_only_matching, Py_True);
    assert(PyDict_Size(const_dict_4ab0e0e550e46281a4fb1f99312bd4e9) == 2);
    const_tuple_9d15fc37bc470d072487a89614b4e7cf_tuple = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1288962 ], 1765);
    const_tuple_str_plain_self_str_plain_new_url_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_new_url_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_str_plain_self_str_plain_new_url_tuple, 1, const_str_plain_new_url); Py_INCREF(const_str_plain_new_url);
    const_str_digest_1a4bdd5a263046bdb3d714c6c5696a43 = UNSTREAM_STRING_ASCII(&constant_bin[ 1290727 ], 65, 0);
    const_str_plain_300346 = UNSTREAM_STRING_ASCII(&constant_bin[ 1290792 ], 6, 0);
    const_tuple_str_digest_c17f72dfbfead5020b880ad5af8b007d_str_chr_42_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_digest_c17f72dfbfead5020b880ad5af8b007d_str_chr_42_tuple, 0, const_str_digest_c17f72dfbfead5020b880ad5af8b007d); Py_INCREF(const_str_digest_c17f72dfbfead5020b880ad5af8b007d);
    PyTuple_SET_ITEM(const_tuple_str_digest_c17f72dfbfead5020b880ad5af8b007d_str_chr_42_tuple, 1, const_str_chr_42); Py_INCREF(const_str_chr_42);
    const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple = PyTuple_New(17);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 0, const_str_plain_determine_ext); Py_INCREF(const_str_plain_determine_ext);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 1, const_str_plain_ExtractorError); Py_INCREF(const_str_plain_ExtractorError);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 2, const_str_plain_float_or_none); Py_INCREF(const_str_plain_float_or_none);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 3, const_str_plain_HEADRequest); Py_INCREF(const_str_plain_HEADRequest);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 4, const_str_plain_is_html); Py_INCREF(const_str_plain_is_html);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 5, const_str_plain_js_to_json); Py_INCREF(const_str_plain_js_to_json);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 6, const_str_plain_KNOWN_EXTENSIONS); Py_INCREF(const_str_plain_KNOWN_EXTENSIONS);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 7, const_str_plain_merge_dicts); Py_INCREF(const_str_plain_merge_dicts);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 8, const_str_plain_mimetype2ext); Py_INCREF(const_str_plain_mimetype2ext);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 9, const_str_plain_orderedSet); Py_INCREF(const_str_plain_orderedSet);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 10, const_str_plain_sanitized_Request); Py_INCREF(const_str_plain_sanitized_Request);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 11, const_str_plain_smuggle_url); Py_INCREF(const_str_plain_smuggle_url);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 12, const_str_plain_unescapeHTML); Py_INCREF(const_str_plain_unescapeHTML);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 13, const_str_plain_unified_strdate); Py_INCREF(const_str_plain_unified_strdate);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 14, const_str_plain_unsmuggle_url); Py_INCREF(const_str_plain_unsmuggle_url);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 15, const_str_plain_UnsupportedError); Py_INCREF(const_str_plain_UnsupportedError);
    PyTuple_SET_ITEM(const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple, 16, const_str_plain_xpath_text); Py_INCREF(const_str_plain_xpath_text);
    const_str_digest_5782880173d4c750538f91d551b6cfb5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1290798 ], 46, 0);
    const_str_plain_20141029 = UNSTREAM_STRING_ASCII(&constant_bin[ 1290844 ], 8, 0);
    const_str_digest_c407adae327df95277cbd5bb490baf53 = UNSTREAM_STRING_ASCII(&constant_bin[ 1290852 ], 104, 0);
    const_dict_dac39445a32092e03345e51a6dd0e2d9 = _PyDict_NewPresized( 4 );
    const_str_digest_1038c0f27a8afd2c08f3a9b1bf55437e = UNSTREAM_STRING_ASCII(&constant_bin[ 1290956 ], 100, 0);
    PyDict_SetItem(const_dict_dac39445a32092e03345e51a6dd0e2d9, const_str_plain_url, const_str_digest_1038c0f27a8afd2c08f3a9b1bf55437e);
    PyDict_SetItem(const_dict_dac39445a32092e03345e51a6dd0e2d9, const_str_plain_info_dict, const_dict_0df94e8bdf8467ea341f7fcb29ebf603);
    PyDict_SetItem(const_dict_dac39445a32092e03345e51a6dd0e2d9, const_str_plain_playlist_count, const_int_pos_3);
    const_dict_506a4c3c2c20181d0ad3de023f4a7917 = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_506a4c3c2c20181d0ad3de023f4a7917, const_str_plain_extract_flat, Py_False);
    PyDict_SetItem(const_dict_506a4c3c2c20181d0ad3de023f4a7917, const_str_plain_skip_download, Py_True);
    assert(PyDict_Size(const_dict_506a4c3c2c20181d0ad3de023f4a7917) == 2);
    PyDict_SetItem(const_dict_dac39445a32092e03345e51a6dd0e2d9, const_str_plain_params, const_dict_506a4c3c2c20181d0ad3de023f4a7917);
    assert(PyDict_Size(const_dict_dac39445a32092e03345e51a6dd0e2d9) == 4);
    const_str_digest_8b8d822d535de06ce941217de34d72b3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1291056 ], 49, 0);
    const_dict_26d87b6c5c23e26c44d81e5bda679802 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_26d87b6c5c23e26c44d81e5bda679802, const_str_plain_url, const_str_digest_aadb6107b8084906223622cea0ad4aaa);
    const_dict_76c5d644ce2c2d07cfc28ede6033b821 = _PyDict_NewPresized( 4 );
    const_str_plain_watch = UNSTREAM_STRING_ASCII(&constant_bin[ 719638 ], 5, 1);
    PyDict_SetItem(const_dict_76c5d644ce2c2d07cfc28ede6033b821, const_str_plain_id, const_str_plain_watch);
    PyDict_SetItem(const_dict_76c5d644ce2c2d07cfc28ede6033b821, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_e21303836992ada73e4d3ad6e82e9ef0 = UNSTREAM_STRING_ASCII(&constant_bin[ 1291105 ], 25, 0);
    PyDict_SetItem(const_dict_76c5d644ce2c2d07cfc28ede6033b821, const_str_plain_title, const_str_digest_e21303836992ada73e4d3ad6e82e9ef0);
    PyDict_SetItem(const_dict_76c5d644ce2c2d07cfc28ede6033b821, const_str_plain_description, const_str_digest_eb10a11d5bc38c7cbfb0ae9a17583cea);
    assert(PyDict_Size(const_dict_76c5d644ce2c2d07cfc28ede6033b821) == 4);
    PyDict_SetItem(const_dict_26d87b6c5c23e26c44d81e5bda679802, const_str_plain_info_dict, const_dict_76c5d644ce2c2d07cfc28ede6033b821);
    PyDict_SetItem(const_dict_26d87b6c5c23e26c44d81e5bda679802, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_26d87b6c5c23e26c44d81e5bda679802) == 3);
    const_str_digest_2d31fe9d770cf57c1cef12e7b5fdc3ae = UNSTREAM_STRING_ASCII(&constant_bin[ 1291130 ], 54, 0);
    const_str_digest_deafb7529bb4e7c49a944532889e060a = UNSTREAM_STRING_ASCII(&constant_bin[ 1291184 ], 41, 0);
    const_str_digest_21ac1d9d980bddd397974398f7c8cb31 = UNSTREAM_STRING_ASCII(&constant_bin[ 1291225 ], 47, 0);
    const_str_plain_FunnyOrDie = UNSTREAM_STRING_ASCII(&constant_bin[ 1291272 ], 10, 1);
    const_tuple_546ea94692a283bd5e4cbc890563b122_tuple = PyTuple_New(5);
    PyTuple_SET_ITEM(const_tuple_546ea94692a283bd5e4cbc890563b122_tuple, 0, const_str_plain_compat_etree_fromstring); Py_INCREF(const_str_plain_compat_etree_fromstring);
    PyTuple_SET_ITEM(const_tuple_546ea94692a283bd5e4cbc890563b122_tuple, 1, const_str_plain_compat_str); Py_INCREF(const_str_plain_compat_str);
    PyTuple_SET_ITEM(const_tuple_546ea94692a283bd5e4cbc890563b122_tuple, 2, const_str_plain_compat_urllib_parse_unquote); Py_INCREF(const_str_plain_compat_urllib_parse_unquote);
    PyTuple_SET_ITEM(const_tuple_546ea94692a283bd5e4cbc890563b122_tuple, 3, const_str_plain_compat_urlparse); Py_INCREF(const_str_plain_compat_urlparse);
    PyTuple_SET_ITEM(const_tuple_546ea94692a283bd5e4cbc890563b122_tuple, 4, const_str_plain_compat_xml_parse_error); Py_INCREF(const_str_plain_compat_xml_parse_error);
    const_dict_7ac3856d1dbc0be299b1217d5aaa1d3e = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_7ac3856d1dbc0be299b1217d5aaa1d3e, const_str_plain_id, const_str_plain_1c7141f46c);
    PyDict_SetItem(const_dict_7ac3856d1dbc0be299b1217d5aaa1d3e, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_27ba9e1a3fe18880d149333f9f10df72 = UNSTREAM_STRING(&constant_bin[ 1291282 ], 113, 0);
    PyDict_SetItem(const_dict_7ac3856d1dbc0be299b1217d5aaa1d3e, const_str_plain_title, const_str_digest_27ba9e1a3fe18880d149333f9f10df72);
    assert(PyDict_Size(const_dict_7ac3856d1dbc0be299b1217d5aaa1d3e) == 3);
    const_str_digest_baccba840ce144ab9cc73ff456981b89 = UNSTREAM_STRING_ASCII(&constant_bin[ 1291395 ], 115, 0);
    const_dict_32d9dec00a802b8702519f1dbe268cee = _PyDict_NewPresized( 8 );
    const_str_plain_1693903 = UNSTREAM_STRING_ASCII(&constant_bin[ 1291510 ], 7, 0);
    PyDict_SetItem(const_dict_32d9dec00a802b8702519f1dbe268cee, const_str_plain_id, const_str_plain_1693903);
    PyDict_SetItem(const_dict_32d9dec00a802b8702519f1dbe268cee, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_32d9dec00a802b8702519f1dbe268cee, const_str_plain_title, const_str_digest_7d810257f8131bc421f2d36cd94776de);
    PyDict_SetItem(const_dict_32d9dec00a802b8702519f1dbe268cee, const_str_plain_description, const_str_digest_f358f9b52cd0b6b17a14a5478e18d4d6);
    const_int_pos_1426330212 = PyLong_FromUnsignedLong(1426330212ul);
    PyDict_SetItem(const_dict_32d9dec00a802b8702519f1dbe268cee, const_str_plain_timestamp, const_int_pos_1426330212);
    PyDict_SetItem(const_dict_32d9dec00a802b8702519f1dbe268cee, const_str_plain_upload_date, const_str_plain_20150314);
    PyDict_SetItem(const_dict_32d9dec00a802b8702519f1dbe268cee, const_str_plain_uploader, const_str_plain_StreetKitchen);
    PyDict_SetItem(const_dict_32d9dec00a802b8702519f1dbe268cee, const_str_plain_uploader_id, const_str_plain_546363);
    assert(PyDict_Size(const_dict_32d9dec00a802b8702519f1dbe268cee) == 8);
    const_str_digest_b663a0986e64a0200dd248deb51f7a26 = UNSTREAM_STRING_ASCII(&constant_bin[ 1291517 ], 38, 0);
    const_str_digest_666b9b87049afe9242ad532e0311a551 = UNSTREAM_STRING_ASCII(&constant_bin[ 1291555 ], 198, 0);
    const_str_plain_fbcde74f534176ecb015849146dd3aee = UNSTREAM_STRING_ASCII(&constant_bin[ 1291753 ], 32, 1);
    const_str_digest_cc9681cdcb6d799e19451982649c751e = UNSTREAM_STRING(&constant_bin[ 1291785 ], 39, 0);
    const_dict_7143384c27ef78862c881b65da6baea6 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1291824 ], 389);
    const_str_digest_cad9f56542a7f67a043d0a648f532fa5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292213 ], 86, 0);
    const_str_digest_129811641a2de7670e633d32e6009481 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292299 ], 36, 0);
    const_str_digest_462d7fb7109912b879e6ebddb200e3ae = UNSTREAM_STRING_ASCII(&constant_bin[ 1292335 ], 78, 0);
    const_dict_1c26823b73362cc7cb21bf1c93cbf3eb = _PyDict_NewPresized( 6 );
    const_str_plain_174391317 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292413 ], 9, 0);
    PyDict_SetItem(const_dict_1c26823b73362cc7cb21bf1c93cbf3eb, const_str_plain_id, const_str_plain_174391317);
    PyDict_SetItem(const_dict_1c26823b73362cc7cb21bf1c93cbf3eb, const_str_plain_ext, const_str_plain_mp3);
    const_str_digest_b12259ec94e5f05444e586fc479b3312 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292422 ], 36, 0);
    PyDict_SetItem(const_dict_1c26823b73362cc7cb21bf1c93cbf3eb, const_str_plain_description, const_str_digest_b12259ec94e5f05444e586fc479b3312);
    const_str_digest_719925a1c37957d4004ddd32134153d9 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292458 ], 15, 0);
    PyDict_SetItem(const_dict_1c26823b73362cc7cb21bf1c93cbf3eb, const_str_plain_uploader, const_str_digest_719925a1c37957d4004ddd32134153d9);
    PyDict_SetItem(const_dict_1c26823b73362cc7cb21bf1c93cbf3eb, const_str_plain_title, const_str_digest_de9efc8e28e76c1e887a7bbdc848eee6);
    PyDict_SetItem(const_dict_1c26823b73362cc7cb21bf1c93cbf3eb, const_str_plain_upload_date, const_str_plain_20141029);
    assert(PyDict_Size(const_dict_1c26823b73362cc7cb21bf1c93cbf3eb) == 6);
    const_tuple_str_plain_sharevideos_mobj_tuple = PyTuple_New(1);
    const_str_plain_sharevideos_mobj = UNSTREAM_STRING_ASCII(&constant_bin[ 1292473 ], 16, 1);
    PyTuple_SET_ITEM(const_tuple_str_plain_sharevideos_mobj_tuple, 0, const_str_plain_sharevideos_mobj); Py_INCREF(const_str_plain_sharevideos_mobj);
    const_dict_6c14397ecb968f079218ba6228a92f7f = _PyDict_NewPresized( 3 );
    const_str_digest_ff63732c492715753f6b994174a3b4ba = UNSTREAM_STRING_ASCII(&constant_bin[ 1292489 ], 53, 0);
    PyDict_SetItem(const_dict_6c14397ecb968f079218ba6228a92f7f, const_str_plain_url, const_str_digest_ff63732c492715753f6b994174a3b4ba);
    PyDict_SetItem(const_dict_6c14397ecb968f079218ba6228a92f7f, const_str_plain_info_dict, const_dict_d2c5544aca2fa366bfb880c3f6edb98a);
    PyDict_SetItem(const_dict_6c14397ecb968f079218ba6228a92f7f, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_6c14397ecb968f079218ba6228a92f7f) == 3);
    const_dict_e29dc7960585731f61087a925860691c = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_e29dc7960585731f61087a925860691c, const_str_plain_url, const_str_digest_50a60b1f89af5bed0c37664b605add7c);
    PyDict_SetItem(const_dict_e29dc7960585731f61087a925860691c, const_str_plain_info_dict, const_dict_c1764b915459e2c441bc0915f6faca75);
    assert(PyDict_Size(const_dict_e29dc7960585731f61087a925860691c) == 2);
    const_str_digest_afcbdcf5978dcc4bd3b43a7eda927dba = UNSTREAM_STRING_ASCII(&constant_bin[ 1292542 ], 13, 0);
    const_dict_244bd57da1cd3e12e544dee0f420d742 = _PyDict_NewPresized( 4 );
    const_str_plain_67864563 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292555 ], 8, 0);
    PyDict_SetItem(const_dict_244bd57da1cd3e12e544dee0f420d742, const_str_plain_id, const_str_plain_67864563);
    PyDict_SetItem(const_dict_244bd57da1cd3e12e544dee0f420d742, const_str_plain_ext, const_str_plain_flv);
    PyDict_SetItem(const_dict_244bd57da1cd3e12e544dee0f420d742, const_str_plain_upload_date, const_str_plain_20141112);
    const_str_digest_31f2b69e5f8b1ddb0fec680e041b3203 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292563 ], 35, 0);
    PyDict_SetItem(const_dict_244bd57da1cd3e12e544dee0f420d742, const_str_plain_title, const_str_digest_31f2b69e5f8b1ddb0fec680e041b3203);
    assert(PyDict_Size(const_dict_244bd57da1cd3e12e544dee0f420d742) == 4);
    const_dict_308a837c5f400ac4932d4adccf1ab5fc = _PyDict_NewPresized( 3 );
    const_str_digest_8e09b1fdfb38c833f0deb9021e1c5037 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292598 ], 87, 0);
    PyDict_SetItem(const_dict_308a837c5f400ac4932d4adccf1ab5fc, const_str_plain_url, const_str_digest_8e09b1fdfb38c833f0deb9021e1c5037);
    const_dict_3a07c4b407b7402a7704e307b4fad271 = _PyDict_NewPresized( 3 );
    const_str_digest_52b38cce399b0a360bfd6a0bdcd00eb5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292626 ], 58, 0);
    PyDict_SetItem(const_dict_3a07c4b407b7402a7704e307b4fad271, const_str_plain_id, const_str_digest_52b38cce399b0a360bfd6a0bdcd00eb5);
    PyDict_SetItem(const_dict_3a07c4b407b7402a7704e307b4fad271, const_str_plain_title, const_str_digest_dc2932479b6f5cbbb510334fae5ffea8);
    PyDict_SetItem(const_dict_3a07c4b407b7402a7704e307b4fad271, const_str_plain_description, const_str_digest_45b51688119744629578c3459dacefe4);
    assert(PyDict_Size(const_dict_3a07c4b407b7402a7704e307b4fad271) == 3);
    PyDict_SetItem(const_dict_308a837c5f400ac4932d4adccf1ab5fc, const_str_plain_info_dict, const_dict_3a07c4b407b7402a7704e307b4fad271);
    PyDict_SetItem(const_dict_308a837c5f400ac4932d4adccf1ab5fc, const_str_plain_playlist_mincount, const_int_pos_4);
    assert(PyDict_Size(const_dict_308a837c5f400ac4932d4adccf1ab5fc) == 3);
    const_list_str_digest_74d01def66293c04a797c788fcd6d66b_list = PyList_New(1);
    PyList_SET_ITEM(const_list_str_digest_74d01def66293c04a797c788fcd6d66b_list, 0, const_str_digest_74d01def66293c04a797c788fcd6d66b); Py_INCREF(const_str_digest_74d01def66293c04a797c788fcd6d66b);
    const_str_plain_20140522 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292685 ], 8, 0);
    const_str_plain_Cinchcast = UNSTREAM_STRING_ASCII(&constant_bin[ 1038960 ], 9, 1);
    const_str_digest_839c6e533c3814af73f6a4e9a4c951ca = UNSTREAM_STRING_ASCII(&constant_bin[ 1292693 ], 67, 0);
    const_str_plain_url_n = UNSTREAM_STRING_ASCII(&constant_bin[ 1292760 ], 5, 1);
    const_str_digest_41644f223f801f4f090caa9170614f54 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292765 ], 17, 0);
    const_tuple_str_plain_TVCIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_TVCIE_tuple, 0, const_str_plain_TVCIE); Py_INCREF(const_str_plain_TVCIE);
    const_list_3665cfddc96e8b9e82ab0769adc12468_list = PyList_New(2);
    PyList_SET_ITEM(const_list_3665cfddc96e8b9e82ab0769adc12468_list, 0, const_str_digest_3ce9edd9c2d0e54820fa0fc2da9d8baa); Py_INCREF(const_str_digest_3ce9edd9c2d0e54820fa0fc2da9d8baa);
    const_str_digest_e719158d59fe228db86365a44548f2fe = UNSTREAM_STRING_ASCII(&constant_bin[ 1292782 ], 16, 0);
    PyList_SET_ITEM(const_list_3665cfddc96e8b9e82ab0769adc12468_list, 1, const_str_digest_e719158d59fe228db86365a44548f2fe); Py_INCREF(const_str_digest_e719158d59fe228db86365a44548f2fe);
    const_tuple_str_plain_x_str_plain_url_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_x_str_plain_url_tuple, 0, const_str_plain_x); Py_INCREF(const_str_plain_x);
    PyTuple_SET_ITEM(const_tuple_str_plain_x_str_plain_url_tuple, 1, const_str_plain_url); Py_INCREF(const_str_plain_url);
    const_str_plain_ca1aef97695ef2c1d6973256a57e5252 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292798 ], 32, 1);
    const_str_digest_750604cf9e856415b3a0231d87de7080 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292830 ], 27, 0);
    const_dict_5a07e632e6e25b7b994d75854741261f = _PyDict_NewPresized( 5 );
    PyDict_SetItem(const_dict_5a07e632e6e25b7b994d75854741261f, const_str_plain_url, const_str_digest_4da7655e75d3d75fdfe546f4ac5a0810);
    const_str_plain_128c42e68b13950268b648275386fc74 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292857 ], 32, 0);
    PyDict_SetItem(const_dict_5a07e632e6e25b7b994d75854741261f, const_str_plain_md5, const_str_plain_128c42e68b13950268b648275386fc74);
    const_dict_4a9e5c1db849774c1c607ad5359d998a = _PyDict_NewPresized( 4 );
    const_str_digest_0b4c8bd718727c10c3d8dc06ecb756c9 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283146 ], 31, 0);
    PyDict_SetItem(const_dict_4a9e5c1db849774c1c607ad5359d998a, const_str_plain_id, const_str_digest_0b4c8bd718727c10c3d8dc06ecb756c9);
    PyDict_SetItem(const_dict_4a9e5c1db849774c1c607ad5359d998a, const_str_plain_ext, const_str_plain_flac);
    PyDict_SetItem(const_dict_4a9e5c1db849774c1c607ad5359d998a, const_str_plain_title, const_str_digest_0b4c8bd718727c10c3d8dc06ecb756c9);
    PyDict_SetItem(const_dict_4a9e5c1db849774c1c607ad5359d998a, const_str_plain_upload_date, const_str_plain_20140522);
    assert(PyDict_Size(const_dict_4a9e5c1db849774c1c607ad5359d998a) == 4);
    PyDict_SetItem(const_dict_5a07e632e6e25b7b994d75854741261f, const_str_plain_info_dict, const_dict_4a9e5c1db849774c1c607ad5359d998a);
    PyDict_SetItem(const_dict_5a07e632e6e25b7b994d75854741261f, const_str_plain_expected_warnings, const_list_str_digest_74d01def66293c04a797c788fcd6d66b_list);
    PyDict_SetItem(const_dict_5a07e632e6e25b7b994d75854741261f, const_str_plain_skip, const_str_digest_04cca4c2ae94bd3ba8cdab47d06b676e);
    assert(PyDict_Size(const_dict_5a07e632e6e25b7b994d75854741261f) == 5);
    const_dict_45baae835044282b4f603abb435fb259 = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_45baae835044282b4f603abb435fb259, const_str_plain_url, const_str_digest_cad9f56542a7f67a043d0a648f532fa5);
    const_dict_ab73814b5059c75f78dae785252c54ad = _PyDict_NewPresized( 8 );
    const_str_plain_106351 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292889 ], 6, 0);
    PyDict_SetItem(const_dict_ab73814b5059c75f78dae785252c54ad, const_str_plain_id, const_str_plain_106351);
    PyDict_SetItem(const_dict_ab73814b5059c75f78dae785252c54ad, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_f85471a580313ddcc0efc6ec19d283c1 = UNSTREAM_STRING(&constant_bin[ 1292895 ], 70, 0);
    PyDict_SetItem(const_dict_ab73814b5059c75f78dae785252c54ad, const_str_plain_title, const_str_digest_f85471a580313ddcc0efc6ec19d283c1);
    const_str_digest_d850de6bd1a159dcf4855b156dddd344 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292965 ], 26, 0);
    PyDict_SetItem(const_dict_ab73814b5059c75f78dae785252c54ad, const_str_plain_description, const_str_digest_d850de6bd1a159dcf4855b156dddd344);
    PyDict_SetItem(const_dict_ab73814b5059c75f78dae785252c54ad, const_str_plain_thumbnail, const_str_digest_f0bb395bf74b9c3e33319f5b568ed927);
    const_str_plain_clickhole = UNSTREAM_STRING_ASCII(&constant_bin[ 1292224 ], 9, 1);
    PyDict_SetItem(const_dict_ab73814b5059c75f78dae785252c54ad, const_str_plain_uploader, const_str_plain_clickhole);
    const_str_plain_20150527 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292991 ], 8, 0);
    PyDict_SetItem(const_dict_ab73814b5059c75f78dae785252c54ad, const_str_plain_upload_date, const_str_plain_20150527);
    const_int_pos_1432744860 = PyLong_FromUnsignedLong(1432744860ul);
    PyDict_SetItem(const_dict_ab73814b5059c75f78dae785252c54ad, const_str_plain_timestamp, const_int_pos_1432744860);
    assert(PyDict_Size(const_dict_ab73814b5059c75f78dae785252c54ad) == 8);
    PyDict_SetItem(const_dict_45baae835044282b4f603abb435fb259, const_str_plain_info_dict, const_dict_ab73814b5059c75f78dae785252c54ad);
    assert(PyDict_Size(const_dict_45baae835044282b4f603abb435fb259) == 2);
    const_dict_57ffedba433d661c8155f7a0ce2bd979 = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_57ffedba433d661c8155f7a0ce2bd979, const_str_plain_default, const_dict_empty);
    PyDict_SetItem(const_dict_57ffedba433d661c8155f7a0ce2bd979, const_str_plain_expected_type, const_str_plain_VideoObject);
    assert(PyDict_Size(const_dict_57ffedba433d661c8155f7a0ce2bd979) == 2);
    const_list_str_digest_db5aa34d961100e7e37734b09961ebd8_list = PyList_New(1);
    PyList_SET_ITEM(const_list_str_digest_db5aa34d961100e7e37734b09961ebd8_list, 0, const_str_digest_db5aa34d961100e7e37734b09961ebd8); Py_INCREF(const_str_digest_db5aa34d961100e7e37734b09961ebd8);
    const_dict_5afb5a68864481ce70ddc8acdf5302bf = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_5afb5a68864481ce70ddc8acdf5302bf, const_str_plain_url, const_str_digest_d515ca44891c29602fcc0394d0c87105);
    PyDict_SetItem(const_dict_5afb5a68864481ce70ddc8acdf5302bf, const_str_plain_info_dict, const_dict_cf9b9bec2ed8b8ed20680ff82121b2f9);
    PyDict_SetItem(const_dict_5afb5a68864481ce70ddc8acdf5302bf, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_5afb5a68864481ce70ddc8acdf5302bf) == 3);
    const_str_digest_09cc91ecb449feff268401d4a69c32a3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1292999 ], 132, 0);
    const_str_plain_GoogleDrive = UNSTREAM_STRING_ASCII(&constant_bin[ 41263 ], 11, 1);
    const_str_digest_717e77e1f43ab03767cdc28ed64030a3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1293131 ], 45, 0);
    const_str_digest_f5b54149aba1930e8e04fca3dd897ab4 = UNSTREAM_STRING_ASCII(&constant_bin[ 1293176 ], 56, 0);
    const_str_digest_00e935d054d1c7cd9b587ad3983c8f78 = UNSTREAM_STRING_ASCII(&constant_bin[ 1293232 ], 48, 0);
    const_str_digest_013bdd894eabb6c967142337242ca65d = UNSTREAM_STRING_ASCII(&constant_bin[ 1293280 ], 48, 0);
    const_float_238_231 = UNSTREAM_FLOAT(&constant_bin[ 1293328 ]);
    const_dict_7a7bcbbf7e312a798eb6266106c820cc = _PyDict_NewPresized( 4 );
    const_str_plain_3235767654 = UNSTREAM_STRING_ASCII(&constant_bin[ 1293336 ], 10, 0);
    PyDict_SetItem(const_dict_7a7bcbbf7e312a798eb6266106c820cc, const_str_plain_id, const_str_plain_3235767654);
    PyDict_SetItem(const_dict_7a7bcbbf7e312a798eb6266106c820cc, const_str_plain_ext, const_str_plain_mp3);
    const_str_digest_86b2d5cff1c01e77903039370fb194f6 = UNSTREAM_STRING_ASCII(&constant_bin[ 1293346 ], 13, 0);
    PyDict_SetItem(const_dict_7a7bcbbf7e312a798eb6266106c820cc, const_str_plain_title, const_str_digest_86b2d5cff1c01e77903039370fb194f6);
    const_str_plain_M_Pallante = UNSTREAM_STRING_ASCII(&constant_bin[ 1293359 ], 10, 1);
    PyDict_SetItem(const_dict_7a7bcbbf7e312a798eb6266106c820cc, const_str_plain_uploader, const_str_plain_M_Pallante);
    assert(PyDict_Size(const_dict_7a7bcbbf7e312a798eb6266106c820cc) == 4);
    const_tuple_str_digest_351f365ebf58f977a34c02040a191f26_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_351f365ebf58f977a34c02040a191f26_tuple, 0, const_str_digest_351f365ebf58f977a34c02040a191f26); Py_INCREF(const_str_digest_351f365ebf58f977a34c02040a191f26);
    const_dict_503c652d92534f70bea68c6fab6b3869 = _PyDict_NewPresized( 3 );
    const_str_plain_599637780109885 = UNSTREAM_STRING_ASCII(&constant_bin[ 1276789 ], 15, 0);
    PyDict_SetItem(const_dict_503c652d92534f70bea68c6fab6b3869, const_str_plain_id, const_str_plain_599637780109885);
    PyDict_SetItem(const_dict_503c652d92534f70bea68c6fab6b3869, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_503c652d92534f70bea68c6fab6b3869, const_str_plain_title, const_str_digest_509998e5cd3037bcfb61fb0010ebd395);
    assert(PyDict_Size(const_dict_503c652d92534f70bea68c6fab6b3869) == 3);
    const_str_digest_d52895b93a70b4387ed148b16c93de27 = UNSTREAM_STRING_ASCII(&constant_bin[ 1293369 ], 27, 0);
    const_str_digest_4953fb1045fe3bd50b5af98734199477 = UNSTREAM_STRING_ASCII(&constant_bin[ 1293396 ], 72, 0);
    const_dict_dcf226a5ac7a02c877a399cbb0a5486c = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_dcf226a5ac7a02c877a399cbb0a5486c, const_str_plain_url, const_str_digest_956af89fee9eb58d00eb81ed218ee0e3);
    PyDict_SetItem(const_dict_dcf226a5ac7a02c877a399cbb0a5486c, const_str_plain_md5, const_str_plain_fbcde74f534176ecb015849146dd3aee);
    PyDict_SetItem(const_dict_dcf226a5ac7a02c877a399cbb0a5486c, const_str_plain_info_dict, const_dict_503c652d92534f70bea68c6fab6b3869);
    assert(PyDict_Size(const_dict_dcf226a5ac7a02c877a399cbb0a5486c) == 3);
    const_dict_618e213ebf6ba12449005c36664de3d4 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_618e213ebf6ba12449005c36664de3d4, const_str_plain_url, const_str_digest_c407adae327df95277cbd5bb490baf53);
    PyDict_SetItem(const_dict_618e213ebf6ba12449005c36664de3d4, const_str_plain_info_dict, const_dict_a198d26e74ac150af684642a38fd4349);
    PyDict_SetItem(const_dict_618e213ebf6ba12449005c36664de3d4, const_str_plain_playlist_mincount, const_int_pos_2);
    assert(PyDict_Size(const_dict_618e213ebf6ba12449005c36664de3d4) == 3);
    const_tuple_str_plain_mediasite_url_str_plain_self_str_plain_url_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_mediasite_url_str_plain_self_str_plain_url_tuple, 0, const_str_plain_mediasite_url); Py_INCREF(const_str_plain_mediasite_url);
    PyTuple_SET_ITEM(const_tuple_str_plain_mediasite_url_str_plain_self_str_plain_url_tuple, 1, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_str_plain_mediasite_url_str_plain_self_str_plain_url_tuple, 2, const_str_plain_url); Py_INCREF(const_str_plain_url);
    const_str_digest_8c7e405ed5c7a8ae8b48d3a52a60d929 = UNSTREAM_STRING_ASCII(&constant_bin[ 1293468 ], 67, 0);
    const_dict_513f0061f46ebec8e61c46ca6b2cc626 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1293535 ], 332);
    const_str_digest_3ddec3bf80efb35210b8e3700002b9a4 = UNSTREAM_STRING_ASCII(&constant_bin[ 1293867 ], 74, 0);
    const_str_digest_43b8524617521f1df696df0226831089 = UNSTREAM_STRING_ASCII(&constant_bin[ 1293941 ], 33, 0);
    const_dict_8d4c6822cbc7c8439af163369961aef5 = _PyDict_NewPresized( 3 );
    const_str_digest_b43871a3840e7bd19bb7ffa84720575e = UNSTREAM_STRING_ASCII(&constant_bin[ 1293974 ], 45, 0);
    PyDict_SetItem(const_dict_8d4c6822cbc7c8439af163369961aef5, const_str_plain_url, const_str_digest_b43871a3840e7bd19bb7ffa84720575e);
    PyDict_SetItem(const_dict_8d4c6822cbc7c8439af163369961aef5, const_str_plain_info_dict, const_dict_36925fc0cfcf75d54f121e0648d24135);
    PyDict_SetItem(const_dict_8d4c6822cbc7c8439af163369961aef5, const_str_plain_playlist_mincount, const_int_pos_5);
    assert(PyDict_Size(const_dict_8d4c6822cbc7c8439af163369961aef5) == 3);
    const_str_digest_ae39c020b5b208245be0c24eeebc91c5 = UNSTREAM_STRING_ASCII(&constant_bin[ 1294019 ], 108, 0);
    const_str_digest_7396b32c3485b21a3d23736fffc8c66d = UNSTREAM_STRING_ASCII(&constant_bin[ 1294127 ], 48, 0);
    const_str_digest_9df396bea03127e151c9b63e79d78571 = UNSTREAM_STRING_ASCII(&constant_bin[ 1294175 ], 140, 0);
    const_str_plain_VODPlatform = UNSTREAM_STRING_ASCII(&constant_bin[ 1294315 ], 11, 1);
    const_str_digest_4181b6dccbd40891619f68b0fe24fd72 = UNSTREAM_STRING(&constant_bin[ 1294326 ], 40, 0);
    const_dict_5827c5ecc400c49109f32a62882db2a0 = _PyDict_NewPresized( 2 );
    const_str_digest_579ac868ba47ae8fa211e3d8eabaf4df = UNSTREAM_STRING_ASCII(&constant_bin[ 1294366 ], 48, 0);
    PyDict_SetItem(const_dict_5827c5ecc400c49109f32a62882db2a0, const_str_plain_id, const_str_digest_579ac868ba47ae8fa211e3d8eabaf4df);
    PyDict_SetItem(const_dict_5827c5ecc400c49109f32a62882db2a0, const_str_plain_title, const_str_digest_84aecec1a04fe2ddef8b86ebbd61f3c8);
    assert(PyDict_Size(const_dict_5827c5ecc400c49109f32a62882db2a0) == 2);
    const_str_digest_1f49ba0a22bad0a56fa61845fe390c77 = UNSTREAM_STRING(&constant_bin[ 1294414 ], 85, 0);
    const_dict_f28b1338da9c65b9f19c9788ff1c95d7 = _PyDict_NewPresized( 3 );
    const_str_plain_720642 = UNSTREAM_STRING_ASCII(&constant_bin[ 1294499 ], 6, 0);
    PyDict_SetItem(const_dict_f28b1338da9c65b9f19c9788ff1c95d7, const_str_plain_id, const_str_plain_720642);
    PyDict_SetItem(const_dict_f28b1338da9c65b9f19c9788ff1c95d7, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_f28b1338da9c65b9f19c9788ff1c95d7, const_str_plain_title, const_str_digest_1f49ba0a22bad0a56fa61845fe390c77);
    assert(PyDict_Size(const_dict_f28b1338da9c65b9f19c9788ff1c95d7) == 3);
    const_str_plain__extract_camtasia = UNSTREAM_STRING_ASCII(&constant_bin[ 1277259 ], 17, 1);
    const_dict_5959d3e31d31b263192b3ae745700eae = _PyDict_NewPresized( 4 );
    const_str_digest_b39c4cc8a986d0cdf9fa2f61eec08aad = UNSTREAM_STRING_ASCII(&constant_bin[ 1294505 ], 95, 0);
    PyDict_SetItem(const_dict_5959d3e31d31b263192b3ae745700eae, const_str_plain_url, const_str_digest_b39c4cc8a986d0cdf9fa2f61eec08aad);
    PyDict_SetItem(const_dict_5959d3e31d31b263192b3ae745700eae, const_str_plain_info_dict, const_dict_442775758a6faeac18793ba5c8ef4db1);
    PyDict_SetItem(const_dict_5959d3e31d31b263192b3ae745700eae, const_str_plain_add_ie, const_list_str_plain_DailyMail_list);
    PyDict_SetItem(const_dict_5959d3e31d31b263192b3ae745700eae, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_5959d3e31d31b263192b3ae745700eae) == 4);
    const_dict_eb224df8d5ef5ac47b6b90a951bfa8e5 = _PyDict_NewPresized( 5 );
    const_str_digest_44465d6c9f3a2e2c13bf1f29eb45205d = UNSTREAM_STRING_ASCII(&constant_bin[ 1294600 ], 33, 0);
    PyDict_SetItem(const_dict_eb224df8d5ef5ac47b6b90a951bfa8e5, const_str_plain_url, const_str_digest_44465d6c9f3a2e2c13bf1f29eb45205d);
    const_str_plain_fd2060e988c326991037b9aff9df21a6 = UNSTREAM_STRING_ASCII(&constant_bin[ 1294633 ], 32, 1);
    PyDict_SetItem(const_dict_eb224df8d5ef5ac47b6b90a951bfa8e5, const_str_plain_md5, const_str_plain_fd2060e988c326991037b9aff9df21a6);
    const_dict_b8cd04d0c593e1df5425eac9a217501b = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_b8cd04d0c593e1df5425eac9a217501b, const_str_plain_id, const_str_plain_300346);
    PyDict_SetItem(const_dict_b8cd04d0c593e1df5425eac9a217501b, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_b8cd04d0c593e1df5425eac9a217501b, const_str_plain_title, const_str_digest_4181b6dccbd40891619f68b0fe24fd72);
    PyDict_SetItem(const_dict_b8cd04d0c593e1df5425eac9a217501b, const_str_plain_thumbnail, const_str_digest_a4d2c749144754fcad3c1b2f9e5cb89a);
    assert(PyDict_Size(const_dict_b8cd04d0c593e1df5425eac9a217501b) == 4);
    PyDict_SetItem(const_dict_eb224df8d5ef5ac47b6b90a951bfa8e5, const_str_plain_info_dict, const_dict_b8cd04d0c593e1df5425eac9a217501b);
    PyDict_SetItem(const_dict_eb224df8d5ef5ac47b6b90a951bfa8e5, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    PyDict_SetItem(const_dict_eb224df8d5ef5ac47b6b90a951bfa8e5, const_str_plain_expected_warnings, const_list_str_digest_44cee31d4210eb2478c8340eb248bcd5_list);
    assert(PyDict_Size(const_dict_eb224df8d5ef5ac47b6b90a951bfa8e5) == 5);
    const_str_digest_b0a8399900fe504369be8f7cf7946144 = UNSTREAM_STRING_ASCII(&constant_bin[ 1294665 ], 35, 0);
    const_str_digest_56864188a0f8a80ce9c9762928597737 = UNSTREAM_STRING_ASCII(&constant_bin[ 1294700 ], 67, 0);
    const_dict_2cfc1643764e0d2592d0aaf22121ea70 = _PyDict_NewPresized( 4 );
    const_str_plain_BwY2RxaTrTkslxOfcan0UCf0YqyvWysJ = UNSTREAM_STRING_ASCII(&constant_bin[ 1294767 ], 32, 1);
    PyDict_SetItem(const_dict_2cfc1643764e0d2592d0aaf22121ea70, const_str_plain_id, const_str_plain_BwY2RxaTrTkslxOfcan0UCf0YqyvWysJ);
    PyDict_SetItem(const_dict_2cfc1643764e0d2592d0aaf22121ea70, const_str_plain_ext, const_str_plain_mp4);
    const_str_digest_8e22557a8823fce88ecf6fa34760b223 = UNSTREAM_STRING_ASCII(&constant_bin[ 1294799 ], 19, 0);
    PyDict_SetItem(const_dict_2cfc1643764e0d2592d0aaf22121ea70, const_str_plain_title, const_str_digest_8e22557a8823fce88ecf6fa34760b223);
    PyDict_SetItem(const_dict_2cfc1643764e0d2592d0aaf22121ea70, const_str_plain_duration, const_float_238_231);
    assert(PyDict_Size(const_dict_2cfc1643764e0d2592d0aaf22121ea70) == 4);
    const_str_digest_52a7b133d111f2a941b45da04e44e84b = UNSTREAM_STRING_ASCII(&constant_bin[ 927696 ], 64, 0);
    const_dict_d1fa03127b4e84f03afd8a5b457ed908 = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_d1fa03127b4e84f03afd8a5b457ed908, const_str_plain_url, const_str_digest_8014710ca7439e3d687ba3ff75c44cea);
    const_str_plain_4b57baab2e30d6eb3a6a09f0ba57ef53 = UNSTREAM_STRING_ASCII(&constant_bin[ 1294818 ], 32, 0);
    PyDict_SetItem(const_dict_d1fa03127b4e84f03afd8a5b457ed908, const_str_plain_md5, const_str_plain_4b57baab2e30d6eb3a6a09f0ba57ef53);
    PyDict_SetItem(const_dict_d1fa03127b4e84f03afd8a5b457ed908, const_str_plain_info_dict, const_dict_124ac211d9a96ffa6e0f88f703a7a0d5);
    PyDict_SetItem(const_dict_d1fa03127b4e84f03afd8a5b457ed908, const_str_plain_params, const_dict_673e5af07ae788f0a1f0e33feceb3562);
    assert(PyDict_Size(const_dict_d1fa03127b4e84f03afd8a5b457ed908) == 4);
    const_tuple_str_plain_NBCSportsVPlayerIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_NBCSportsVPlayerIE_tuple, 0, const_str_plain_NBCSportsVPlayerIE); Py_INCREF(const_str_plain_NBCSportsVPlayerIE);
    const_str_digest_7ddfc093104a9d475b08ee23c95071af = UNSTREAM_STRING_ASCII(&constant_bin[ 1294850 ], 76, 0);
    const_str_plain_MLB = UNSTREAM_STRING_ASCII(&constant_bin[ 943955 ], 3, 1);
    const_str_digest_af1659fd528373a2f74f3f0c6d3ee346 = UNSTREAM_STRING_ASCII(&constant_bin[ 1294926 ], 44, 0);
    const_dict_f8013f47fd259d4dd121a7bf90ef86b7 = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_f8013f47fd259d4dd121a7bf90ef86b7, const_str_plain_id, const_str_plain_live);
    PyDict_SetItem(const_dict_f8013f47fd259d4dd121a7bf90ef86b7, const_str_plain_ext, const_str_plain_flv);
    const_str_digest_56fd89dc62196c6e470fda567438b174 = UNSTREAM_STRING_ASCII(&constant_bin[ 1294970 ], 51, 0);
    PyDict_SetItem(const_dict_f8013f47fd259d4dd121a7bf90ef86b7, const_str_plain_title, const_str_digest_56fd89dc62196c6e470fda567438b174);
    const_str_digest_3ee4b9e7ca16d981e01287fa0a53166f = UNSTREAM_STRING_ASCII(&constant_bin[ 1287704 ], 15, 0);
    PyDict_SetItem(const_dict_f8013f47fd259d4dd121a7bf90ef86b7, const_str_plain_uploader, const_str_digest_3ee4b9e7ca16d981e01287fa0a53166f);
    assert(PyDict_Size(const_dict_f8013f47fd259d4dd121a7bf90ef86b7) == 4);
    const_tuple_str_plain_MediasiteIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MediasiteIE_tuple, 0, const_str_plain_MediasiteIE); Py_INCREF(const_str_plain_MediasiteIE);
    const_dict_aa903b1ae77fc27ae8f899569d2ed8db = _PyDict_NewPresized( 5 );
    const_str_plain_874_1459135191 = UNSTREAM_STRING_ASCII(&constant_bin[ 1295021 ], 14, 0);
    PyDict_SetItem(const_dict_aa903b1ae77fc27ae8f899569d2ed8db, const_str_plain_id, const_str_plain_874_1459135191);
    PyDict_SetItem(const_dict_aa903b1ae77fc27ae8f899569d2ed8db, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_aa903b1ae77fc27ae8f899569d2ed8db, const_str_plain_title, const_str_digest_013bdd894eabb6c967142337242ca65d);
    const_str_digest_c206fb303f8fed2e30b9aafc59072ca0 = UNSTREAM_STRING_ASCII(&constant_bin[ 1295035 ], 29, 0);
    PyDict_SetItem(const_dict_aa903b1ae77fc27ae8f899569d2ed8db, const_str_plain_description, const_str_digest_c206fb303f8fed2e30b9aafc59072ca0);
    const_str_plain_Lake8737 = UNSTREAM_STRING_ASCII(&constant_bin[ 1295064 ], 8, 1);
    PyDict_SetItem(const_dict_aa903b1ae77fc27ae8f899569d2ed8db, const_str_plain_uploader, const_str_plain_Lake8737);
    assert(PyDict_Size(const_dict_aa903b1ae77fc27ae8f899569d2ed8db) == 5);
    const_dict_bb67b1f334927b1a46c88dc2eb85a8e8 = _PyDict_NewPresized( 3 );
    const_str_digest_dd7c15d75c1792e76b02978d1bbfc351 = UNSTREAM_STRING_ASCII(&constant_bin[ 1295072 ], 106, 0);
    PyDict_SetItem(const_dict_bb67b1f334927b1a46c88dc2eb85a8e8, const_str_plain_url, const_str_digest_dd7c15d75c1792e76b02978d1bbfc351);
    PyDict_SetItem(const_dict_bb67b1f334927b1a46c88dc2eb85a8e8, const_str_plain_md5, const_str_plain_aecd089f55b1cb5a59032cb049d3a356);
    const_dict_a41bd0977dbf2013fb41bd6648231231 = _PyDict_NewPresized( 6 );
    const_str_plain_90227f51a80c4d8f86c345a7fa62bd9a1d = UNSTREAM_STRING_ASCII(&constant_bin[ 1295178 ], 34, 0);
    PyDict_SetItem(const_dict_a41bd0977dbf2013fb41bd6648231231, const_str_plain_id, const_str_plain_90227f51a80c4d8f86c345a7fa62bd9a1d);
    PyDict_SetItem(const_dict_a41bd0977dbf2013fb41bd6648231231, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_a41bd0977dbf2013fb41bd6648231231, const_str_plain_title, const_str_digest_484908b0752bdf0b572089871b158ab0);
    const_str_digest_02123b2042f2b9cd5c0d6cc87c9c34a7 = UNSTREAM_STRING_ASCII(&constant_bin[ 1295212 ], 36, 0);
    PyDict_SetItem(const_dict_a41bd0977dbf2013fb41bd6648231231, const_str_plain_description, const_str_digest_02123b2042f2b9cd5c0d6cc87c9c34a7);
    PyDict_SetItem(const_dict_a41bd0977dbf2013fb41bd6648231231, const_str_plain_timestamp, const_int_pos_1474354800);
    const_str_plain_20160920 = UNSTREAM_STRING_ASCII(&constant_bin[ 1295248 ], 8, 0);
    PyDict_SetItem(const_dict_a41bd0977dbf2013fb41bd6648231231, const_str_plain_upload_date, const_str_plain_20160920);
    assert(PyDict_Size(const_dict_a41bd0977dbf2013fb41bd6648231231) == 6);
    PyDict_SetItem(const_dict_bb67b1f334927b1a46c88dc2eb85a8e8, const_str_plain_info_dict, const_dict_a41bd0977dbf2013fb41bd6648231231);
    assert(PyDict_Size(const_dict_bb67b1f334927b1a46c88dc2eb85a8e8) == 3);
    const_tuple_str_plain_WebcasterFeedIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_WebcasterFeedIE_tuple, 0, const_str_plain_WebcasterFeedIE); Py_INCREF(const_str_plain_WebcasterFeedIE);
    const_list_str_plain_Bandcamp_list = PyList_New(1);
    const_str_plain_Bandcamp = UNSTREAM_STRING_ASCII(&constant_bin[ 35604 ], 8, 1);
    PyList_SET_ITEM(const_list_str_plain_Bandcamp_list, 0, const_str_plain_Bandcamp); Py_INCREF(const_str_plain_Bandcamp);
    const_dict_cfc44552b489b0d33d0ad611affd1e3c = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_cfc44552b489b0d33d0ad611affd1e3c, const_str_plain_url, const_str_digest_deafb7529bb4e7c49a944532889e060a);
    PyDict_SetItem(const_dict_cfc44552b489b0d33d0ad611affd1e3c, const_str_plain_info_dict, const_dict_5d5c4b8daf9b28c539e9e8a80024e7d8);
    PyDict_SetItem(const_dict_cfc44552b489b0d33d0ad611affd1e3c, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    PyDict_SetItem(const_dict_cfc44552b489b0d33d0ad611affd1e3c, const_str_plain_skip, const_str_digest_7adeca30b7b0036238fce206fdd2d21c);
    assert(PyDict_Size(const_dict_cfc44552b489b0d33d0ad611affd1e3c) == 4);
    const_dict_86e7a046cb8b5da69df2290d5147f0a9 = _PyDict_NewPresized( 4 );
    const_str_digest_5522f5ad0a40c4966a58aaca1c645404 = UNSTREAM_STRING_ASCII(&constant_bin[ 1295256 ], 90, 0);
    PyDict_SetItem(const_dict_86e7a046cb8b5da69df2290d5147f0a9, const_str_plain_url, const_str_digest_5522f5ad0a40c4966a58aaca1c645404);
    PyDict_SetItem(const_dict_86e7a046cb8b5da69df2290d5147f0a9, const_str_plain_md5, const_str_plain_4ccbebe5f36706d85221f204d7eb5913);
    const_dict_b659489fe3f7ecb7dd6f389b41a457f1 = _PyDict_NewPresized( 5 );
    PyDict_SetItem(const_dict_b659489fe3f7ecb7dd6f389b41a457f1, const_str_plain_url, const_str_digest_5522f5ad0a40c4966a58aaca1c645404);
    const_str_digest_4f6696cbb4d3e8e6a0fdba371a79c653 = UNSTREAM_STRING_ASCII(&constant_bin[ 1295311 ], 30, 0);
    PyDict_SetItem(const_dict_b659489fe3f7ecb7dd6f389b41a457f1, const_str_plain_id, const_str_digest_4f6696cbb4d3e8e6a0fdba371a79c653);
    PyDict_SetItem(const_dict_b659489fe3f7ecb7dd6f389b41a457f1, const_str_plain_ext, const_str_plain_webm);
    PyDict_SetItem(const_dict_b659489fe3f7ecb7dd6f389b41a457f1, const_str_plain_title, const_str_digest_4f6696cbb4d3e8e6a0fdba371a79c653);
    PyDict_SetItem(const_dict_b659489fe3f7ecb7dd6f389b41a457f1, const_str_plain_upload_date, const_str_plain_20141120);
    assert(PyDict_Size(const_dict_b659489fe3f7ecb7dd6f389b41a457f1) == 5);
    PyDict_SetItem(const_dict_86e7a046cb8b5da69df2290d5147f0a9, const_str_plain_info_dict, const_dict_b659489fe3f7ecb7dd6f389b41a457f1);
    PyDict_SetItem(const_dict_86e7a046cb8b5da69df2290d5147f0a9, const_str_plain_expected_warnings, const_list_str_digest_74d01def66293c04a797c788fcd6d66b_list);
    assert(PyDict_Size(const_dict_86e7a046cb8b5da69df2290d5147f0a9) == 4);
    const_str_digest_a3b5196b9a9782afc8951a726799d6be = UNSTREAM_STRING_ASCII(&constant_bin[ 1295346 ], 43, 0);
    const_str_digest_04a6c1ff4b0117f2145a4a2b897e99c3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1265580 ], 31, 0);
    const_str_digest_401bcf178a57c03ec8078ac84544f649 = UNSTREAM_STRING_ASCII(&constant_bin[ 1295389 ], 60, 0);
    const_tuple_str_plain_vurl_str_plain_vpath_str_plain_vext_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_vurl_str_plain_vpath_str_plain_vext_tuple, 0, const_str_plain_vurl); Py_INCREF(const_str_plain_vurl);
    PyTuple_SET_ITEM(const_tuple_str_plain_vurl_str_plain_vpath_str_plain_vext_tuple, 1, const_str_plain_vpath); Py_INCREF(const_str_plain_vpath);
    PyTuple_SET_ITEM(const_tuple_str_plain_vurl_str_plain_vpath_str_plain_vext_tuple, 2, const_str_plain_vext); Py_INCREF(const_str_plain_vext);
    const_str_digest_9d2ab6b07447d5593a22cf1c42dbd243 = UNSTREAM_STRING_ASCII(&constant_bin[ 1295449 ], 88, 0);
    const_tuple_str_plain_bc_url_str_plain_url_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_bc_url_str_plain_url_tuple, 0, const_str_plain_bc_url); Py_INCREF(const_str_plain_bc_url);
    PyTuple_SET_ITEM(const_tuple_str_plain_bc_url_str_plain_url_tuple, 1, const_str_plain_url); Py_INCREF(const_str_plain_url);
    const_dict_d67cb766c5ba26fcc1153273e2d8b5f9 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1295537 ], 278);
    const_dict_1f9dcb80a2a6024a12f9c1b23ec8497e = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_1f9dcb80a2a6024a12f9c1b23ec8497e, const_str_plain_url, const_str_digest_aceccf9cf56f33faf84d20297bfe3995);
    const_dict_3ee0e666e23ecf4712326ed7acf4713c = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_3ee0e666e23ecf4712326ed7acf4713c, const_str_plain_id, const_str_plain_4719370);
    PyDict_SetItem(const_dict_3ee0e666e23ecf4712326ed7acf4713c, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_3ee0e666e23ecf4712326ed7acf4713c, const_str_plain_title, const_str_digest_960c739865a0f6299bca1db2f2883499);
    PyDict_SetItem(const_dict_3ee0e666e23ecf4712326ed7acf4713c, const_str_plain_formats, const_str_digest_0df17ce0ff30bda2ad28671f2a170d3a);
    assert(PyDict_Size(const_dict_3ee0e666e23ecf4712326ed7acf4713c) == 4);
    PyDict_SetItem(const_dict_1f9dcb80a2a6024a12f9c1b23ec8497e, const_str_plain_info_dict, const_dict_3ee0e666e23ecf4712326ed7acf4713c);
    PyDict_SetItem(const_dict_1f9dcb80a2a6024a12f9c1b23ec8497e, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_1f9dcb80a2a6024a12f9c1b23ec8497e) == 3);
    const_dict_f4d056e9d2fa491b8d2b112505bb1b00 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1295815 ], 360);
    const_str_digest_fd43f707714d01c0a23f4a9ae8dd5281 = UNSTREAM_STRING_ASCII(&constant_bin[ 1296175 ], 13, 0);
    const_dict_aa2672704ec12fb38e690f1c910de404 = _PyDict_NewPresized( 2 );
    const_str_digest_833131cd07330d794f7b57dbe6ee947f = UNSTREAM_STRING_ASCII(&constant_bin[ 1296188 ], 106, 0);
    PyDict_SetItem(const_dict_aa2672704ec12fb38e690f1c910de404, const_str_plain_url, const_str_digest_833131cd07330d794f7b57dbe6ee947f);
    PyDict_SetItem(const_dict_aa2672704ec12fb38e690f1c910de404, const_str_plain_info_dict, const_dict_55f8c8da502ae867b40119b5e8e7d10f);
    assert(PyDict_Size(const_dict_aa2672704ec12fb38e690f1c910de404) == 2);
    const_str_plain_getchildren = UNSTREAM_STRING_ASCII(&constant_bin[ 1296294 ], 11, 1);
    const_str_digest_b1c9870470c2d1b049d716886d22caf7 = UNSTREAM_STRING_ASCII(&constant_bin[ 1296305 ], 62, 0);
    const_int_pos_3382 = PyLong_FromUnsignedLong(3382ul);
    const_dict_14a82dc3a5b15f78132374e685cc36b7 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_14a82dc3a5b15f78132374e685cc36b7, const_str_plain_url, const_str_digest_76400fef6f1bd19b69e7de19b0ec0862);
    PyDict_SetItem(const_dict_14a82dc3a5b15f78132374e685cc36b7, const_str_plain_md5, const_str_plain_ca1aef97695ef2c1d6973256a57e5252);
    const_dict_8c1e63b551b46815c631b7f157f50ed9 = _PyDict_NewPresized( 6 );
    PyDict_SetItem(const_dict_8c1e63b551b46815c631b7f157f50ed9, const_str_plain_id, const_str_digest_96946c2a8a6b6651536077dbe9e3707f);
    PyDict_SetItem(const_dict_8c1e63b551b46815c631b7f157f50ed9, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_8c1e63b551b46815c631b7f157f50ed9, const_str_plain_title, const_str_digest_2fac52354ec096260ad88b54129f6f00);
    PyDict_SetItem(const_dict_8c1e63b551b46815c631b7f157f50ed9, const_str_plain_description, const_str_digest_246955df4287268046c0b7e4d9ec87c1);
    const_int_pos_1349922600 = PyLong_FromUnsignedLong(1349922600ul);
    PyDict_SetItem(const_dict_8c1e63b551b46815c631b7f157f50ed9, const_str_plain_timestamp, const_int_pos_1349922600);
    PyDict_SetItem(const_dict_8c1e63b551b46815c631b7f157f50ed9, const_str_plain_upload_date, const_str_plain_20121011);
    assert(PyDict_Size(const_dict_8c1e63b551b46815c631b7f157f50ed9) == 6);
    PyDict_SetItem(const_dict_14a82dc3a5b15f78132374e685cc36b7, const_str_plain_info_dict, const_dict_8c1e63b551b46815c631b7f157f50ed9);
    assert(PyDict_Size(const_dict_14a82dc3a5b15f78132374e685cc36b7) == 3);
    const_str_plain_SVT = UNSTREAM_STRING_ASCII(&constant_bin[ 40464 ], 3, 1);
    const_str_digest_ed263cba5fe67faebdc1e8a2fd773505 = UNSTREAM_STRING_ASCII(&constant_bin[ 1296367 ], 106, 0);
    const_str_digest_63a99d65ced556dfdbf619945660d900 = UNSTREAM_STRING_ASCII(&constant_bin[ 1296473 ], 94, 0);
    const_dict_0dcecd0b14ec4ee7e8a60a0f131687ba = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1296567 ], 341);
    const_tuple_str_plain_WashingtonPostIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_WashingtonPostIE_tuple, 0, const_str_plain_WashingtonPostIE); Py_INCREF(const_str_plain_WashingtonPostIE);
    const_bytes_digest_ee7a0fa75fbea109a316dc00e1bb7d31 = UNSTREAM_BYTES(&constant_bin[ 1296908 ], 7);
    const_str_digest_4f04b8f9ceff13e751c81418590b10f1 = UNSTREAM_STRING_ASCII(&constant_bin[ 908478 ], 23, 0);
    const_str_digest_1d3469e8bdddf4ea4e52337d4bf22433 = UNSTREAM_STRING_ASCII(&constant_bin[ 1076471 ], 14, 0);
    const_tuple_int_pos_512_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_int_pos_512_tuple, 0, const_int_pos_512); Py_INCREF(const_int_pos_512);
    const_dict_1aaa6d27d5bee55815e5492b79c41d2e = _PyDict_NewPresized( 6 );
    PyDict_SetItem(const_dict_1aaa6d27d5bee55815e5492b79c41d2e, const_str_plain_id, const_str_plain_HNTXWDXV9Is);
    PyDict_SetItem(const_dict_1aaa6d27d5bee55815e5492b79c41d2e, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_1aaa6d27d5bee55815e5492b79c41d2e, const_str_plain_title, const_str_digest_b663a0986e64a0200dd248deb51f7a26);
    PyDict_SetItem(const_dict_1aaa6d27d5bee55815e5492b79c41d2e, const_str_plain_upload_date, const_str_plain_20160627);
    const_str_plain_GENOCIDE8GENERAL10 = UNSTREAM_STRING_ASCII(&constant_bin[ 1296915 ], 18, 1);
    PyDict_SetItem(const_dict_1aaa6d27d5bee55815e5492b79c41d2e, const_str_plain_uploader_id, const_str_plain_GENOCIDE8GENERAL10);
    const_str_digest_bb7fc2e745fe5a6c3f9fac3a33ddf461 = UNSTREAM_STRING_ASCII(&constant_bin[ 1296933 ], 11, 0);
    PyDict_SetItem(const_dict_1aaa6d27d5bee55815e5492b79c41d2e, const_str_plain_uploader, const_str_digest_bb7fc2e745fe5a6c3f9fac3a33ddf461);
    assert(PyDict_Size(const_dict_1aaa6d27d5bee55815e5492b79c41d2e) == 6);
    const_str_digest_97c033399fc2d1bfe8bafdf9065a0a65 = UNSTREAM_STRING_ASCII(&constant_bin[ 1296944 ], 41, 0);
    const_str_digest_ac0eaa2abf4939e99bb12e6f15e7f437 = UNSTREAM_STRING_ASCII(&constant_bin[ 1271243 ], 23, 0);
    const_str_digest_cbb1d41598e8653cb66a364e42b8b668 = UNSTREAM_STRING_ASCII(&constant_bin[ 1296985 ], 72, 0);
    const_dict_e0f0b3cf9b2fd72dc2c143982644ac46 = _PyDict_NewPresized( 7 );
    PyDict_SetItem(const_dict_e0f0b3cf9b2fd72dc2c143982644ac46, const_str_plain_id, const_str_digest_3858d150b8df8f6d8d7ca03e67a41489);
    PyDict_SetItem(const_dict_e0f0b3cf9b2fd72dc2c143982644ac46, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_e0f0b3cf9b2fd72dc2c143982644ac46, const_str_plain_title, const_str_digest_95afe3ca724e4f6bd0a36c6bcad05ca4);
    PyDict_SetItem(const_dict_e0f0b3cf9b2fd72dc2c143982644ac46, const_str_plain_description, const_str_digest_4f04b8f9ceff13e751c81418590b10f1);
    PyDict_SetItem(const_dict_e0f0b3cf9b2fd72dc2c143982644ac46, const_str_plain_timestamp, const_int_pos_1432816365);
    PyDict_SetItem(const_dict_e0f0b3cf9b2fd72dc2c143982644ac46, const_str_plain_upload_date, const_str_plain_20150528);
    PyDict_SetItem(const_dict_e0f0b3cf9b2fd72dc2c143982644ac46, const_str_plain_is_live, Py_False);
    assert(PyDict_Size(const_dict_e0f0b3cf9b2fd72dc2c143982644ac46) == 7);
    const_str_digest_b76e7384af5d2400333e99d931c93740 = UNSTREAM_STRING_ASCII(&constant_bin[ 1297057 ], 87, 0);
    const_dict_dda21c4ebe6bc9bcbf17196dc6f43565 = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_dda21c4ebe6bc9bcbf17196dc6f43565, const_str_plain_add_ie, const_list_str_plain_Bandcamp_list);
    PyDict_SetItem(const_dict_dda21c4ebe6bc9bcbf17196dc6f43565, const_str_plain_url, const_str_digest_4fc092d6545a8ca876e8f6a3fccc45b5);
    PyDict_SetItem(const_dict_dda21c4ebe6bc9bcbf17196dc6f43565, const_str_plain_info_dict, const_dict_7a7bcbbf7e312a798eb6266106c820cc);
    PyDict_SetItem(const_dict_dda21c4ebe6bc9bcbf17196dc6f43565, const_str_plain_skip, const_str_digest_52a7b133d111f2a941b45da04e44e84b);
    assert(PyDict_Size(const_dict_dda21c4ebe6bc9bcbf17196dc6f43565) == 4);
    const_tuple_bytes_digest_ee7a0fa75fbea109a316dc00e1bb7d31_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_bytes_digest_ee7a0fa75fbea109a316dc00e1bb7d31_tuple, 0, const_bytes_digest_ee7a0fa75fbea109a316dc00e1bb7d31); Py_INCREF(const_bytes_digest_ee7a0fa75fbea109a316dc00e1bb7d31);
    const_tuple_str_plain_XHamsterEmbedIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_XHamsterEmbedIE_tuple, 0, const_str_plain_XHamsterEmbedIE); Py_INCREF(const_str_plain_XHamsterEmbedIE);
    const_tuple_str_plain_ViceIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_ViceIE_tuple, 0, const_str_plain_ViceIE); Py_INCREF(const_str_plain_ViceIE);
    const_str_plain_camtasia_url = UNSTREAM_STRING_ASCII(&constant_bin[ 1297144 ], 12, 1);
    const_dict_e0502ef49b973b3354e226f366a11e97 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_e0502ef49b973b3354e226f366a11e97, const_str_plain_url, const_str_digest_41644f223f801f4f090caa9170614f54);
    const_dict_dd6195d898ffe076b2451324397419e8 = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_dd6195d898ffe076b2451324397419e8, const_str_plain_id, const_str_plain_viqeo);
    const_str_digest_7374ef404ed881df70f9dc411fbc913d = UNSTREAM_STRING_ASCII(&constant_bin[ 1297156 ], 22, 0);
    PyDict_SetItem(const_dict_dd6195d898ffe076b2451324397419e8, const_str_plain_title, const_str_digest_7374ef404ed881df70f9dc411fbc913d);
    assert(PyDict_Size(const_dict_dd6195d898ffe076b2451324397419e8) == 2);
    PyDict_SetItem(const_dict_e0502ef49b973b3354e226f366a11e97, const_str_plain_info_dict, const_dict_dd6195d898ffe076b2451324397419e8);
    PyDict_SetItem(const_dict_e0502ef49b973b3354e226f366a11e97, const_str_plain_playlist_count, const_int_pos_6);
    assert(PyDict_Size(const_dict_e0502ef49b973b3354e226f366a11e97) == 3);
    const_dict_4f88c4419bd3067df7afd0c2b7d12a04 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_4f88c4419bd3067df7afd0c2b7d12a04, const_str_plain_url, const_str_digest_8d6dc8e24057e57717f46e488d09036a);
    const_dict_7d93bac4f02ec5c8c985a78b970e1d00 = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_7d93bac4f02ec5c8c985a78b970e1d00, const_str_plain_id, const_str_digest_04a6c1ff4b0117f2145a4a2b897e99c3);
    PyDict_SetItem(const_dict_7d93bac4f02ec5c8c985a78b970e1d00, const_str_plain_title, const_str_digest_cc9681cdcb6d799e19451982649c751e);
    assert(PyDict_Size(const_dict_7d93bac4f02ec5c8c985a78b970e1d00) == 2);
    PyDict_SetItem(const_dict_4f88c4419bd3067df7afd0c2b7d12a04, const_str_plain_info_dict, const_dict_7d93bac4f02ec5c8c985a78b970e1d00);
    PyDict_SetItem(const_dict_4f88c4419bd3067df7afd0c2b7d12a04, const_str_plain_playlist_count, const_int_pos_8);
    assert(PyDict_Size(const_dict_4f88c4419bd3067df7afd0c2b7d12a04) == 3);
    const_dict_3f527ebc9f849d93fae8430b9f1577a1 = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_3f527ebc9f849d93fae8430b9f1577a1, const_str_plain_url, const_str_digest_0cab677b50e8ef49aa95ba8139a43d0f);
    PyDict_SetItem(const_dict_3f527ebc9f849d93fae8430b9f1577a1, const_str_plain_info_dict, const_dict_1a1329465257032bd7a750fa66e6a7f8);
    assert(PyDict_Size(const_dict_3f527ebc9f849d93fae8430b9f1577a1) == 2);
    const_str_plain_Mpora = UNSTREAM_STRING_ASCII(&constant_bin[ 1297178 ], 5, 1);
    const_tuple_13d590ea092fa42be1e64cc339c00486_tuple = PyTuple_New(11);
    PyTuple_SET_ITEM(const_tuple_13d590ea092fa42be1e64cc339c00486_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_13d590ea092fa42be1e64cc339c00486_tuple, 1, const_str_plain_url); Py_INCREF(const_str_plain_url);
    PyTuple_SET_ITEM(const_tuple_13d590ea092fa42be1e64cc339c00486_tuple, 2, const_str_plain_video_id); Py_INCREF(const_str_plain_video_id);
    PyTuple_SET_ITEM(const_tuple_13d590ea092fa42be1e64cc339c00486_tuple, 3, const_str_plain_webpage); Py_INCREF(const_str_plain_webpage);
    const_str_plain_camtasia_cfg = UNSTREAM_STRING_ASCII(&constant_bin[ 1297183 ], 12, 1);
    PyTuple_SET_ITEM(const_tuple_13d590ea092fa42be1e64cc339c00486_tuple, 4, const_str_plain_camtasia_cfg); Py_INCREF(const_str_plain_camtasia_cfg);
    PyTuple_SET_ITEM(const_tuple_13d590ea092fa42be1e64cc339c00486_tuple, 5, const_str_plain_title); Py_INCREF(const_str_plain_title);
    PyTuple_SET_ITEM(const_tuple_13d590ea092fa42be1e64cc339c00486_tuple, 6, const_str_plain_camtasia_url); Py_INCREF(const_str_plain_camtasia_url);
    const_str_plain_fileset_node = UNSTREAM_STRING_ASCII(&constant_bin[ 1297195 ], 12, 1);
    PyTuple_SET_ITEM(const_tuple_13d590ea092fa42be1e64cc339c00486_tuple, 7, const_str_plain_fileset_node); Py_INCREF(const_str_plain_fileset_node);
    PyTuple_SET_ITEM(const_tuple_13d590ea092fa42be1e64cc339c00486_tuple, 8, const_str_plain_entries); Py_INCREF(const_str_plain_entries);
    PyTuple_SET_ITEM(const_tuple_13d590ea092fa42be1e64cc339c00486_tuple, 9, const_str_plain_n); Py_INCREF(const_str_plain_n);
    PyTuple_SET_ITEM(const_tuple_13d590ea092fa42be1e64cc339c00486_tuple, 10, const_str_plain_url_n); Py_INCREF(const_str_plain_url_n);
    const_str_digest_d3f6b8d28bf0260ba4ca2ea9679731cf = UNSTREAM_STRING_ASCII(&constant_bin[ 1297207 ], 60, 0);
    const_str_digest_2f4c11a78d1e18f6f4768bf3996a197c = UNSTREAM_STRING_ASCII(&constant_bin[ 1297267 ], 42, 0);
    const_dict_f9165eb7de202cdec4eb276e86232628 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_f9165eb7de202cdec4eb276e86232628, const_str_plain_url, const_str_digest_68dbcc8f80dec12fa6319a64ac92217f);
    const_str_plain_cc00413936695987e8de148b67d14f1d = UNSTREAM_STRING_ASCII(&constant_bin[ 1297309 ], 32, 1);
    PyDict_SetItem(const_dict_f9165eb7de202cdec4eb276e86232628, const_str_plain_md5, const_str_plain_cc00413936695987e8de148b67d14f1d);
    PyDict_SetItem(const_dict_f9165eb7de202cdec4eb276e86232628, const_str_plain_info_dict, const_dict_2fe1591230469133f38b6fc4fc437e6c);
    assert(PyDict_Size(const_dict_f9165eb7de202cdec4eb276e86232628) == 3);
    const_dict_d4de7335ae873e8ab4b138fbc0170032 = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_d4de7335ae873e8ab4b138fbc0170032, const_str_plain_url, const_str_digest_fc03a5c6130c13869d0eee16167c3aa8);
    const_dict_07edbb3bd7c7cb5d708715efbbbccada = _PyDict_NewPresized( 2 );
    const_str_plain_skiplagged = UNSTREAM_STRING_ASCII(&constant_bin[ 1286126 ], 10, 1);
    PyDict_SetItem(const_dict_07edbb3bd7c7cb5d708715efbbbccada, const_str_plain_id, const_str_plain_skiplagged);
    PyDict_SetItem(const_dict_07edbb3bd7c7cb5d708715efbbbccada, const_str_plain_title, const_str_digest_21ac1d9d980bddd397974398f7c8cb31);
    assert(PyDict_Size(const_dict_07edbb3bd7c7cb5d708715efbbbccada) == 2);
    PyDict_SetItem(const_dict_d4de7335ae873e8ab4b138fbc0170032, const_str_plain_info_dict, const_dict_07edbb3bd7c7cb5d708715efbbbccada);
    PyDict_SetItem(const_dict_d4de7335ae873e8ab4b138fbc0170032, const_str_plain_playlist_mincount, const_int_pos_1);
    PyDict_SetItem(const_dict_d4de7335ae873e8ab4b138fbc0170032, const_str_plain_add_ie, const_list_str_plain_Youtube_list);
    assert(PyDict_Size(const_dict_d4de7335ae873e8ab4b138fbc0170032) == 4);
    const_dict_20aafb0bee453df99a08899b67a97bd1 = _PyDict_NewPresized( 5 );
    PyDict_SetItem(const_dict_20aafb0bee453df99a08899b67a97bd1, const_str_plain_id, const_str_plain_3519514);
    PyDict_SetItem(const_dict_20aafb0bee453df99a08899b67a97bd1, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_20aafb0bee453df99a08899b67a97bd1, const_str_plain_title, const_str_digest_c220897a8766025cba7cb4bc2a153ad7);
    const_str_digest_fca34eac04644723c4b3e3c93ed7f6f6 = UNSTREAM_STRING_ASCII(&constant_bin[ 1297341 ], 21, 0);
    PyDict_SetItem(const_dict_20aafb0bee453df99a08899b67a97bd1, const_str_plain_thumbnail, const_str_digest_fca34eac04644723c4b3e3c93ed7f6f6);
    PyDict_SetItem(const_dict_20aafb0bee453df99a08899b67a97bd1, const_str_plain_duration, const_float_45_115);
    assert(PyDict_Size(const_dict_20aafb0bee453df99a08899b67a97bd1) == 5);
    const_str_plain_Forcing = UNSTREAM_STRING_ASCII(&constant_bin[ 1297362 ], 7, 1);
    const_str_digest_0985fc36097213607309c35d0ec0c2da = UNSTREAM_STRING_ASCII(&constant_bin[ 1297369 ], 85, 0);
    const_str_digest_af66209f81c52df35c6cdeff00a82e0b = UNSTREAM_STRING_ASCII(&constant_bin[ 1297454 ], 106, 0);
    const_str_digest_0fadfe3a753cc56195cbf19c803f7bbd = UNSTREAM_STRING_ASCII(&constant_bin[ 1297560 ], 80, 0);
    const_str_digest_5a00f5d95a03f170ef20040a176ecb65 = UNSTREAM_STRING_ASCII(&constant_bin[ 1297640 ], 79, 0);
    const_dict_de123e51bfb6402429dcc2a6c79e54d8 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1297719 ], 366);
    const_dict_9bea9a3b2145a4e23828693d060f2287 = _PyDict_NewPresized( 3 );
    const_str_digest_f2f806139f3fc1040ff9bbc4786c2761 = UNSTREAM_STRING_ASCII(&constant_bin[ 1298085 ], 63, 0);
    PyDict_SetItem(const_dict_9bea9a3b2145a4e23828693d060f2287, const_str_plain_url, const_str_digest_f2f806139f3fc1040ff9bbc4786c2761);
    const_dict_d2ba95af0f57274daea281fb8d80b8da = _PyDict_NewPresized( 2 );
    const_str_plain_keyscenarios = UNSTREAM_STRING_ASCII(&constant_bin[ 1298131 ], 12, 1);
    PyDict_SetItem(const_dict_d2ba95af0f57274daea281fb8d80b8da, const_str_plain_id, const_str_plain_keyscenarios);
    PyDict_SetItem(const_dict_d2ba95af0f57274daea281fb8d80b8da, const_str_plain_title, const_str_digest_b0cbaaa570a1dfd4f7894ba6d7e72161);
    assert(PyDict_Size(const_dict_d2ba95af0f57274daea281fb8d80b8da) == 2);
    PyDict_SetItem(const_dict_9bea9a3b2145a4e23828693d060f2287, const_str_plain_info_dict, const_dict_d2ba95af0f57274daea281fb8d80b8da);
    PyDict_SetItem(const_dict_9bea9a3b2145a4e23828693d060f2287, const_str_plain_playlist_count, const_int_pos_4);
    assert(PyDict_Size(const_dict_9bea9a3b2145a4e23828693d060f2287) == 3);
    const_dict_587681dc055fea13b3d1fc7252bcdb01 = _PyDict_NewPresized( 3 );
    const_str_digest_4625cec5f72a1c34b9b492590b104201 = UNSTREAM_STRING_ASCII(&constant_bin[ 1298148 ], 82, 0);
    PyDict_SetItem(const_dict_587681dc055fea13b3d1fc7252bcdb01, const_str_plain_url, const_str_digest_4625cec5f72a1c34b9b492590b104201);
    PyDict_SetItem(const_dict_587681dc055fea13b3d1fc7252bcdb01, const_str_plain_info_dict, const_dict_fe7d1a9a312858a6bdcdabe6f34612c4);
    PyDict_SetItem(const_dict_587681dc055fea13b3d1fc7252bcdb01, const_str_plain_add_ie, const_list_str_plain_Kaltura_list);
    assert(PyDict_Size(const_dict_587681dc055fea13b3d1fc7252bcdb01) == 3);
    const_str_digest_d8bba3ffd12a88faf7395d220959f9e7 = UNSTREAM_STRING_ASCII(&constant_bin[ 1298230 ], 101, 0);
    const_dict_cf81e7e9ebb41d788b565fa01c2a2d91 = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_cf81e7e9ebb41d788b565fa01c2a2d91, const_str_plain_url, const_str_digest_666b9b87049afe9242ad532e0311a551);
    PyDict_SetItem(const_dict_cf81e7e9ebb41d788b565fa01c2a2d91, const_str_plain_info_dict, const_dict_c5c7f4f6f8c55b9b79710e4b917668c5);
    assert(PyDict_Size(const_dict_cf81e7e9ebb41d788b565fa01c2a2d91) == 2);
    const_dict_812074b9e19d1bb916534f3cb0655447 = _PyDict_NewPresized( 1 );
    PyDict_SetItem(const_dict_812074b9e19d1bb916534f3cb0655447, const_str_plain_ie, const_str_plain_MTVServicesEmbedded);
    assert(PyDict_Size(const_dict_812074b9e19d1bb916534f3cb0655447) == 1);
    const_str_plain_PremierMedia = UNSTREAM_STRING_ASCII(&constant_bin[ 1298331 ], 12, 1);
    const_str_digest_d88d4406522891a6185ec5cd40eb4b02 = UNSTREAM_STRING_ASCII(&constant_bin[ 1298343 ], 64, 0);
    const_str_digest_47851f556650841c19c27e25c3e65a22 = UNSTREAM_STRING_ASCII(&constant_bin[ 1298407 ], 41, 0);
    const_str_digest_186095e807bf67f9dd418ab453d8e7aa = UNSTREAM_STRING_ASCII(&constant_bin[ 1298448 ], 108, 0);
    const_tuple_str_digest_022f0fe19c76db2b4709c7278d953927_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_022f0fe19c76db2b4709c7278d953927_tuple, 0, const_str_digest_022f0fe19c76db2b4709c7278d953927); Py_INCREF(const_str_digest_022f0fe19c76db2b4709c7278d953927);
    const_dict_4563d5a3b181fa5f839d58c6b168f899 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1298556 ], 317);
    const_str_plain_20150127 = UNSTREAM_STRING_ASCII(&constant_bin[ 1298873 ], 8, 0);
    const_str_digest_10027c8f8698faa600dd838c5a3a9765 = UNSTREAM_STRING_ASCII(&constant_bin[ 1298881 ], 81, 0);
    const_str_digest_a134433850cf92dc37d22f57dfe99c73 = UNSTREAM_STRING_ASCII(&constant_bin[ 1298962 ], 67, 0);
    const_str_plain_d16797741b560b485194eddda8121b48 = UNSTREAM_STRING_ASCII(&constant_bin[ 1299029 ], 32, 1);
    const_str_digest_caaf8f8bff1cc1e9db4fd0f281603e22 = UNSTREAM_STRING_ASCII(&constant_bin[ 1299061 ], 97, 0);
    const_str_plain_850bfe45417ddf221288c88a0cffe2e2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1299158 ], 32, 0);
    const_str_digest_78da0eda9632527c9d8496c73502f3b2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1299190 ], 94, 0);
    const_str_digest_952ee742c749947abd133d5dd0de1279 = UNSTREAM_STRING_ASCII(&constant_bin[ 1299284 ], 86, 0);
    const_str_digest_5410dadbf139a3ebaaca05f7840d1ea0 = UNSTREAM_STRING_ASCII(&constant_bin[ 1299370 ], 62, 0);
    const_str_plain_AdobeTVVideo = UNSTREAM_STRING_ASCII(&constant_bin[ 856417 ], 12, 1);
    const_str_digest_29bcbb79266cfdb11ae763605d9c5a61 = UNSTREAM_STRING_ASCII(&constant_bin[ 1299432 ], 7, 0);
    const_dict_66bdd8a6c9feba7af52023501761493b = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1299439 ], 424);
    const_dict_2ce3f9016d9fda35fff4b4a904e83499 = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_2ce3f9016d9fda35fff4b4a904e83499, const_str_plain_id, const_str_plain_523629);
    PyDict_SetItem(const_dict_2ce3f9016d9fda35fff4b4a904e83499, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_2ce3f9016d9fda35fff4b4a904e83499, const_str_plain_title, const_str_digest_2f4c11a78d1e18f6f4768bf3996a197c);
    PyDict_SetItem(const_dict_2ce3f9016d9fda35fff4b4a904e83499, const_str_plain_description, const_str_digest_e6a5cde769d6a22376e13987d9c1fc16);
    assert(PyDict_Size(const_dict_2ce3f9016d9fda35fff4b4a904e83499) == 4);
    const_tuple_str_plain_auto_str_plain_auto_warning_str_plain_fixup_error_tuple = PyTuple_New(3);
    PyTuple_SET_ITEM(const_tuple_str_plain_auto_str_plain_auto_warning_str_plain_fixup_error_tuple, 0, const_str_plain_auto); Py_INCREF(const_str_plain_auto);
    const_str_plain_auto_warning = UNSTREAM_STRING_ASCII(&constant_bin[ 1299863 ], 12, 1);
    PyTuple_SET_ITEM(const_tuple_str_plain_auto_str_plain_auto_warning_str_plain_fixup_error_tuple, 1, const_str_plain_auto_warning); Py_INCREF(const_str_plain_auto_warning);
    PyTuple_SET_ITEM(const_tuple_str_plain_auto_str_plain_auto_warning_str_plain_fixup_error_tuple, 2, const_str_plain_fixup_error); Py_INCREF(const_str_plain_fixup_error);
    const_str_digest_59dd2ba57ca71f90190de4216c2ca190 = UNSTREAM_STRING_ASCII(&constant_bin[ 1299875 ], 108, 0);
    const_dict_16faaed806dd3a4d7baf6d1950c115fb = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_16faaed806dd3a4d7baf6d1950c115fb, const_str_plain_url, const_str_digest_b76e7384af5d2400333e99d931c93740);
    PyDict_SetItem(const_dict_16faaed806dd3a4d7baf6d1950c115fb, const_str_plain_info_dict, const_dict_244bd57da1cd3e12e544dee0f420d742);
    assert(PyDict_Size(const_dict_16faaed806dd3a4d7baf6d1950c115fb) == 2);
    const_str_digest_8adc2b276326eb1aed172e8607dfd1a4 = UNSTREAM_STRING_ASCII(&constant_bin[ 1299983 ], 108, 0);
    const_dict_37feab975f6ff54d32872cd454c17460 = _PyDict_NewPresized( 3 );
    const_str_digest_b47a0c057aca084c5936c1235b35295f = UNSTREAM_STRING_ASCII(&constant_bin[ 1300091 ], 129, 0);
    PyDict_SetItem(const_dict_37feab975f6ff54d32872cd454c17460, const_str_plain_url, const_str_digest_b47a0c057aca084c5936c1235b35295f);
    PyDict_SetItem(const_dict_37feab975f6ff54d32872cd454c17460, const_str_plain_info_dict, const_dict_91569421bae847bc7c76a5fb6e40b828);
    PyDict_SetItem(const_dict_37feab975f6ff54d32872cd454c17460, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_37feab975f6ff54d32872cd454c17460) == 3);
    const_str_digest_2febe8e93923d08edeca3ff81438e8b8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1300220 ], 37, 0);
    const_tuple_str_plain_SoundcloudEmbedIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SoundcloudEmbedIE_tuple, 0, const_str_plain_SoundcloudEmbedIE); Py_INCREF(const_str_plain_SoundcloudEmbedIE);
    const_str_digest_d203052c7d15c99d7bd7e72f3a55cb32 = UNSTREAM_STRING_ASCII(&constant_bin[ 1300257 ], 97, 0);
    const_str_digest_7a6ecaa8d26ec8dcbd42e8dce09f0f28 = UNSTREAM_STRING_ASCII(&constant_bin[ 1300354 ], 35, 0);
    const_dict_9bf38821cff0dc0f55aa818d618170f1 = _PyDict_NewPresized( 5 );
    const_str_digest_173a9273bd85ee8e5017b424fde15069 = UNSTREAM_STRING_ASCII(&constant_bin[ 1300389 ], 18, 0);
    PyDict_SetItem(const_dict_9bf38821cff0dc0f55aa818d618170f1, const_str_plain_id, const_str_digest_173a9273bd85ee8e5017b424fde15069);
    PyDict_SetItem(const_dict_9bf38821cff0dc0f55aa818d618170f1, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_9bf38821cff0dc0f55aa818d618170f1, const_str_plain_title, const_str_digest_4e0eb0514bb6768205329ad97d931943);
    const_str_digest_0d79fbd9914c0afe99b4b75f771f226d = UNSTREAM_STRING_ASCII(&constant_bin[ 1300407 ], 36, 0);
    PyDict_SetItem(const_dict_9bf38821cff0dc0f55aa818d618170f1, const_str_plain_description, const_str_digest_0d79fbd9914c0afe99b4b75f771f226d);
    PyDict_SetItem(const_dict_9bf38821cff0dc0f55aa818d618170f1, const_str_plain_upload_date, const_str_plain_20160409);
    assert(PyDict_Size(const_dict_9bf38821cff0dc0f55aa818d618170f1) == 5);
    const_tuple_str_plain_default_search_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_default_search_tuple, 0, const_str_plain_default_search); Py_INCREF(const_str_plain_default_search);
    const_dict_1e4f491b99d2d15f33bc6a102801a00f = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_1e4f491b99d2d15f33bc6a102801a00f, const_str_plain_url, const_str_digest_916068a12c1c29a43b3ba2c46efbd966);
    PyDict_SetItem(const_dict_1e4f491b99d2d15f33bc6a102801a00f, const_str_plain_info_dict, const_dict_20aafb0bee453df99a08899b67a97bd1);
    assert(PyDict_Size(const_dict_1e4f491b99d2d15f33bc6a102801a00f) == 2);
    const_str_plain_7619da8c820e835bef21a1efa2a0fc71 = UNSTREAM_STRING_ASCII(&constant_bin[ 1300443 ], 32, 0);
    const_dict_09ed8ace76875fb1bba066261375a8e0 = _PyDict_NewPresized( 6 );
    PyDict_SetItem(const_dict_09ed8ace76875fb1bba066261375a8e0, const_str_plain_id, const_str_plain_4d03aad9);
    PyDict_SetItem(const_dict_09ed8ace76875fb1bba066261375a8e0, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_09ed8ace76875fb1bba066261375a8e0, const_str_plain_uploader, const_str_plain_deadspin);
    PyDict_SetItem(const_dict_09ed8ace76875fb1bba066261375a8e0, const_str_plain_title, const_str_digest_591ee7e7bb5353ace4cff3139464ac60);
    PyDict_SetItem(const_dict_09ed8ace76875fb1bba066261375a8e0, const_str_plain_timestamp, const_int_pos_1422285291);
    PyDict_SetItem(const_dict_09ed8ace76875fb1bba066261375a8e0, const_str_plain_upload_date, const_str_plain_20150126);
    assert(PyDict_Size(const_dict_09ed8ace76875fb1bba066261375a8e0) == 6);
    const_dict_d8bbfd1f1830a5ca80fcaf9e8afbef31 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1300475 ], 318);
    const_str_plain_enclosure_nodes = UNSTREAM_STRING_ASCII(&constant_bin[ 1300793 ], 15, 1);
    const_dict_86f9ab7d453a404b963b778878f608a5 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1300808 ], 360);
    const_dict_6b5e983084919d72299aea32133c212f = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_6b5e983084919d72299aea32133c212f, const_str_plain_url, const_str_digest_b61991f5765e310812d90fe1cd647bc8);
    PyDict_SetItem(const_dict_6b5e983084919d72299aea32133c212f, const_str_plain_info_dict, const_dict_30706ccff06497f2ee5a14895cdc0485);
    PyDict_SetItem(const_dict_6b5e983084919d72299aea32133c212f, const_str_plain_skip, const_str_digest_c595f6f93916a253473e0d776fa2ca8d);
    assert(PyDict_Size(const_dict_6b5e983084919d72299aea32133c212f) == 3);
    const_dict_8cda6ebd2f5da4ac26677331ba665850 = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_8cda6ebd2f5da4ac26677331ba665850, const_str_plain_url, const_str_digest_b0a8399900fe504369be8f7cf7946144);
    const_dict_8d3ceea641d3499822d928f488b7e90e = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_8d3ceea641d3499822d928f488b7e90e, const_str_plain_id, const_str_plain_radio);
    PyDict_SetItem(const_dict_8d3ceea641d3499822d928f488b7e90e, const_str_plain_ext, const_str_plain_opus);
    PyDict_SetItem(const_dict_8d3ceea641d3499822d928f488b7e90e, const_str_plain_title, const_str_plain_radio);
    assert(PyDict_Size(const_dict_8d3ceea641d3499822d928f488b7e90e) == 3);
    PyDict_SetItem(const_dict_8cda6ebd2f5da4ac26677331ba665850, const_str_plain_info_dict, const_dict_8d3ceea641d3499822d928f488b7e90e);
    PyDict_SetItem(const_dict_8cda6ebd2f5da4ac26677331ba665850, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    PyDict_SetItem(const_dict_8cda6ebd2f5da4ac26677331ba665850, const_str_plain_expected_warnings, const_list_3665cfddc96e8b9e82ab0769adc12468_list);
    assert(PyDict_Size(const_dict_8cda6ebd2f5da4ac26677331ba665850) == 4);
    const_dict_ef59b7966f06c8b8d45d32367e79a62a = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1301168 ], 551);
    const_str_digest_8af58cf9c18e715a57a70b467aa40cc4 = UNSTREAM_STRING_ASCII(&constant_bin[ 1283205 ], 28, 0);
    const_dict_1f19876f4e4ccf61b7580dd7d745ee81 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1301719 ], 300);
    const_str_digest_4101a64072cf00c72bdae7876063954d = UNSTREAM_STRING_ASCII(&constant_bin[ 1302019 ], 24, 0);
    const_str_plain_Zapiks = UNSTREAM_STRING_ASCII(&constant_bin[ 1302043 ], 6, 1);
    const_str_digest_830288f919c00be894ae2e57a03a81cf = UNSTREAM_STRING_ASCII(&constant_bin[ 1302049 ], 77, 0);
    const_str_digest_a4fcf7a56351a360a298011e3cb8faf3 = UNSTREAM_STRING_ASCII(&constant_bin[ 1302126 ], 50, 0);
    const_dict_e57dc9b04246ac135226d14533c5b3c9 = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1302176 ], 330);
    const_dict_158c6c97ba3f4e2d51cc7826b0e21a5d = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_158c6c97ba3f4e2d51cc7826b0e21a5d, const_str_plain_url, const_str_digest_5410dadbf139a3ebaaca05f7840d1ea0);
    PyDict_SetItem(const_dict_158c6c97ba3f4e2d51cc7826b0e21a5d, const_str_plain_md5, const_str_plain_d16797741b560b485194eddda8121b48);
    PyDict_SetItem(const_dict_158c6c97ba3f4e2d51cc7826b0e21a5d, const_str_plain_info_dict, const_dict_1aaa6d27d5bee55815e5492b79c41d2e);
    assert(PyDict_Size(const_dict_158c6c97ba3f4e2d51cc7826b0e21a5d) == 3);
    const_str_digest_6c6c4e8f55c4633cd88992b851c67d4a = UNSTREAM_STRING_ASCII(&constant_bin[ 1302506 ], 27, 0);
    const_dict_8a778a17d6e07c2c910977ade18b345c = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_8a778a17d6e07c2c910977ade18b345c, const_str_plain_url, const_str_digest_7f6a7c1185e417650e2229f8bcc72531);
    const_str_plain_1aa589c675898ae6d37a17913cf68d66 = UNSTREAM_STRING_ASCII(&constant_bin[ 1302533 ], 32, 0);
    PyDict_SetItem(const_dict_8a778a17d6e07c2c910977ade18b345c, const_str_plain_md5, const_str_plain_1aa589c675898ae6d37a17913cf68d66);
    PyDict_SetItem(const_dict_8a778a17d6e07c2c910977ade18b345c, const_str_plain_info_dict, const_dict_51dfb4457cc0e6aad77a3b5ec2094695);
    assert(PyDict_Size(const_dict_8a778a17d6e07c2c910977ade18b345c) == 3);
    const_str_digest_01b24fbfa33c2fa0f71fba31886b8ac2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1302565 ], 43, 0);
    const_str_digest_69df7459c65f6d20f17c665551a09329 = UNSTREAM_STRING_ASCII(&constant_bin[ 1302608 ], 89, 0);
    const_dict_7808b908da7ba7b4e49d7922ca77b637 = _PyDict_NewPresized( 5 );
    PyDict_SetItem(const_dict_7808b908da7ba7b4e49d7922ca77b637, const_str_plain_id, const_str_plain_O0c5JcKT);
    PyDict_SetItem(const_dict_7808b908da7ba7b4e49d7922ca77b637, const_str_plain_ext, const_str_plain_mp4);
    PyDict_SetItem(const_dict_7808b908da7ba7b4e49d7922ca77b637, const_str_plain_upload_date, const_str_plain_20171122);
    PyDict_SetItem(const_dict_7808b908da7ba7b4e49d7922ca77b637, const_str_plain_timestamp, const_int_pos_1511366290);
    PyDict_SetItem(const_dict_7808b908da7ba7b4e49d7922ca77b637, const_str_plain_title, const_str_digest_78da0eda9632527c9d8496c73502f3b2);
    assert(PyDict_Size(const_dict_7808b908da7ba7b4e49d7922ca77b637) == 5);
    const_tuple_str_plain_MyviIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_MyviIE_tuple, 0, const_str_plain_MyviIE); Py_INCREF(const_str_plain_MyviIE);
    const_str_digest_2d1fbc37599614a2cb9c91716d9e90fd = UNSTREAM_STRING_ASCII(&constant_bin[ 1302697 ], 251, 0);
    const_dict_6db4d233108219ea71720814dfb76768 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_6db4d233108219ea71720814dfb76768, const_str_plain_url, const_str_digest_952ee742c749947abd133d5dd0de1279);
    PyDict_SetItem(const_dict_6db4d233108219ea71720814dfb76768, const_str_plain_info_dict, const_dict_09ed8ace76875fb1bba066261375a8e0);
    PyDict_SetItem(const_dict_6db4d233108219ea71720814dfb76768, const_str_plain_add_ie, const_list_str_plain_Viddler_list);
    assert(PyDict_Size(const_dict_6db4d233108219ea71720814dfb76768) == 3);
    const_str_plain_fb8c70b0b515e5037981a2492099aab8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1302948 ], 32, 1);
    const_dict_05eac665a73b08deff51515b0106b188 = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_05eac665a73b08deff51515b0106b188, const_str_plain_url, const_str_digest_830288f919c00be894ae2e57a03a81cf);
    PyDict_SetItem(const_dict_05eac665a73b08deff51515b0106b188, const_str_plain_info_dict, const_dict_b7b2b152cf16c75a2ae880c28ebb1b06);
    assert(PyDict_Size(const_dict_05eac665a73b08deff51515b0106b188) == 2);
    const_str_plain_report_following_redirect = UNSTREAM_STRING_ASCII(&constant_bin[ 1302980 ], 25, 1);
    const_str_digest_a9a8ff1b3a274c3b7f86d9dd4e88a5c8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1303005 ], 110, 0);
    const_dict_deacca5558dc6b932e957e44a8e0b0d5 = _PyDict_NewPresized( 1 );
    PyDict_SetItem(const_dict_deacca5558dc6b932e957e44a8e0b0d5, const_str_plain_default, const_str_plain_video);
    assert(PyDict_Size(const_dict_deacca5558dc6b932e957e44a8e0b0d5) == 1);
    const_str_digest_aa00e9de76eac7ed562a936d8dab5cad = UNSTREAM_STRING_ASCII(&constant_bin[ 1303115 ], 56, 0);
    const_dict_a3a6d1dce85d3923079433597904d18a = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_a3a6d1dce85d3923079433597904d18a, const_str_plain_id, const_str_digest_5782880173d4c750538f91d551b6cfb5);
    PyDict_SetItem(const_dict_a3a6d1dce85d3923079433597904d18a, const_str_plain_description, const_str_digest_13de43b7f840f63d8edc0c4ccfb0e6f7);
    PyDict_SetItem(const_dict_a3a6d1dce85d3923079433597904d18a, const_str_plain_title, const_str_digest_808c0b0da4bfe0750d54ada38d7d3310);
    assert(PyDict_Size(const_dict_a3a6d1dce85d3923079433597904d18a) == 3);
    const_tuple_str_digest_072671c863ae6b2a235496904644eacb_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_072671c863ae6b2a235496904644eacb_tuple, 0, const_str_digest_072671c863ae6b2a235496904644eacb); Py_INCREF(const_str_digest_072671c863ae6b2a235496904644eacb);
    const_str_digest_c6379db96003143d580b48637aca01cd = UNSTREAM_STRING_ASCII(&constant_bin[ 1303171 ], 31, 0);
    const_str_digest_48621dfff9487dce0082bb89d155e6a8 = UNSTREAM_STRING_ASCII(&constant_bin[ 1303202 ], 40, 0);
    const_tuple_str_plain_LiveLeakIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_LiveLeakIE_tuple, 0, const_str_plain_LiveLeakIE); Py_INCREF(const_str_plain_LiveLeakIE);
    const_str_digest_c51171831e0b12acfa03019ee9e09c39 = UNSTREAM_STRING_ASCII(&constant_bin[ 1303242 ], 48, 0);
    const_str_digest_b5a1a4d7d423b2d571e1e56d56c3641f = UNSTREAM_STRING_ASCII(&constant_bin[ 1303290 ], 35, 0);
    const_str_plain_b96f2f71b359a8ecd05ce4e1daa72365 = UNSTREAM_STRING_ASCII(&constant_bin[ 908344 ], 32, 1);
    const_dict_e80f79fdfb35cbe89298d0b260a3ffc2 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_e80f79fdfb35cbe89298d0b260a3ffc2, const_str_plain_url, const_str_digest_5782880173d4c750538f91d551b6cfb5);
    PyDict_SetItem(const_dict_e80f79fdfb35cbe89298d0b260a3ffc2, const_str_plain_info_dict, const_dict_a3a6d1dce85d3923079433597904d18a);
    PyDict_SetItem(const_dict_e80f79fdfb35cbe89298d0b260a3ffc2, const_str_plain_playlist_mincount, const_int_pos_100);
    assert(PyDict_Size(const_dict_e80f79fdfb35cbe89298d0b260a3ffc2) == 3);
    const_dict_41e2465ea8d4085a54a7cb240132a5f7 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_41e2465ea8d4085a54a7cb240132a5f7, const_str_plain_url, const_str_digest_ecfa95abc89d4e471894a6dc2561c099);
    PyDict_SetItem(const_dict_41e2465ea8d4085a54a7cb240132a5f7, const_str_plain_md5, const_str_plain_850bfe45417ddf221288c88a0cffe2e2);
    PyDict_SetItem(const_dict_41e2465ea8d4085a54a7cb240132a5f7, const_str_plain_info_dict, const_dict_9bf38821cff0dc0f55aa818d618170f1);
    assert(PyDict_Size(const_dict_41e2465ea8d4085a54a7cb240132a5f7) == 3);
    const_str_digest_a36c2584a7d0864024a219606f03759c = UNSTREAM_STRING_ASCII(&constant_bin[ 1303325 ], 62, 0);
    const_dict_673553b92e9cd1e345bab11cdd87a24b = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 1303387 ], 425);
    const_dict_091661da725c4af3cf59f4518773df7e = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_091661da725c4af3cf59f4518773df7e, const_str_plain_url, const_str_digest_186095e807bf67f9dd418ab453d8e7aa);
    PyDict_SetItem(const_dict_091661da725c4af3cf59f4518773df7e, const_str_plain_md5, const_str_plain_166dd577b433b4d4ebfee10b0824d8ff);
    PyDict_SetItem(const_dict_091661da725c4af3cf59f4518773df7e, const_str_plain_info_dict, const_dict_2cfc1643764e0d2592d0aaf22121ea70);
    PyDict_SetItem(const_dict_091661da725c4af3cf59f4518773df7e, const_str_plain_add_ie, const_list_str_plain_Ooyala_list);
    assert(PyDict_Size(const_dict_091661da725c4af3cf59f4518773df7e) == 4);
    const_str_digest_4843be23efbea327cea4e2afeddb2d71 = UNSTREAM_STRING_ASCII(&constant_bin[ 1303812 ], 102, 0);
    const_str_digest_b5061698744415402217ae7720992509 = UNSTREAM_STRING_ASCII(&constant_bin[ 1303914 ], 135, 0);
    const_str_plain_1_a52wc67y = UNSTREAM_STRING_ASCII(&constant_bin[ 1304049 ], 10, 0);
    const_dict_7a30bbd914a2d9271368f53a124fec98 = _PyDict_NewPresized( 2 );
    PyDict_SetItem(const_dict_7a30bbd914a2d9271368f53a124fec98, const_str_plain_url, const_str_digest_d8bba3ffd12a88faf7395d220959f9e7);
    PyDict_SetItem(const_dict_7a30bbd914a2d9271368f53a124fec98, const_str_plain_info_dict, const_dict_1c26823b73362cc7cb21bf1c93cbf3eb);
    assert(PyDict_Size(const_dict_7a30bbd914a2d9271368f53a124fec98) == 2);
    const_tuple_str_plain_v_str_plain_url_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_v_str_plain_url_tuple, 0, const_str_plain_v); Py_INCREF(const_str_plain_v);
    PyTuple_SET_ITEM(const_tuple_str_plain_v_str_plain_url_tuple, 1, const_str_plain_url); Py_INCREF(const_str_plain_url);
    const_str_plain_Aparat = UNSTREAM_STRING_ASCII(&constant_bin[ 896858 ], 6, 1);
    const_dict_84cee2f3e7ec1b1542728e470a7b7af7 = _PyDict_NewPresized( 3 );
    PyDict_SetItem(const_dict_84cee2f3e7ec1b1542728e470a7b7af7, const_str_plain_url, const_str_digest_4fe2196d61160fd0101c232fad18f8ce);
    PyDict_SetItem(const_dict_84cee2f3e7ec1b1542728e470a7b7af7, const_str_plain_info_dict, const_dict_75c871eb084b50441d81798f9f9f64c1);
    PyDict_SetItem(const_dict_84cee2f3e7ec1b1542728e470a7b7af7, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    assert(PyDict_Size(const_dict_84cee2f3e7ec1b1542728e470a7b7af7) == 3);
    const_str_digest_491c18d4d47656c019d7944769adc6f4 = UNSTREAM_STRING_ASCII(&constant_bin[ 1304059 ], 26, 0);
    const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple = PyTuple_New(12);
    PyTuple_SET_ITEM(const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 0, const_str_plain_self); Py_INCREF(const_str_plain_self);
    PyTuple_SET_ITEM(const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 1, const_str_plain_url); Py_INCREF(const_str_plain_url);
    PyTuple_SET_ITEM(const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 2, const_str_plain_video_id); Py_INCREF(const_str_plain_video_id);
    PyTuple_SET_ITEM(const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 3, const_str_plain_doc); Py_INCREF(const_str_plain_doc);
    PyTuple_SET_ITEM(const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 4, const_str_plain_playlist_title); Py_INCREF(const_str_plain_playlist_title);
    PyTuple_SET_ITEM(const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 5, const_str_plain_playlist_desc_el); Py_INCREF(const_str_plain_playlist_desc_el);
    PyTuple_SET_ITEM(const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 6, const_str_plain_playlist_desc); Py_INCREF(const_str_plain_playlist_desc);
    PyTuple_SET_ITEM(const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 7, const_str_plain_entries); Py_INCREF(const_str_plain_entries);
    PyTuple_SET_ITEM(const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 8, const_str_plain_it); Py_INCREF(const_str_plain_it);
    PyTuple_SET_ITEM(const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 9, const_str_plain_next_url); Py_INCREF(const_str_plain_next_url);
    PyTuple_SET_ITEM(const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 10, const_str_plain_enclosure_nodes); Py_INCREF(const_str_plain_enclosure_nodes);
    PyTuple_SET_ITEM(const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 11, const_str_plain_e); Py_INCREF(const_str_plain_e);
    const_tuple_str_plain_SmotriIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_SmotriIE_tuple, 0, const_str_plain_SmotriIE); Py_INCREF(const_str_plain_SmotriIE);
    const_tuple_str_plain_InstagramIE_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_InstagramIE_tuple, 0, const_str_plain_InstagramIE); Py_INCREF(const_str_plain_InstagramIE);
    const_str_digest_7c58bc025430cd6cdbe7998edc1a7ca2 = UNSTREAM_STRING_ASCII(&constant_bin[ 1304085 ], 113, 0);
    const_str_digest_eb61eb10bf41fb2cbd5d9c37de0190be = UNSTREAM_STRING_ASCII(&constant_bin[ 1304198 ], 205, 0);
    const_str_digest_d2e9ee6102ea07daaac012117ae75048 = UNSTREAM_STRING_ASCII(&constant_bin[ 1304403 ], 70, 0);
    const_dict_4d7169b31049ca45eb10d4bf08a2ef51 = _PyDict_NewPresized( 4 );
    PyDict_SetItem(const_dict_4d7169b31049ca45eb10d4bf08a2ef51, const_str_plain_url, const_str_digest_678f4ae502d7cd16f14c3268ef633e54);
    PyDict_SetItem(const_dict_4d7169b31049ca45eb10d4bf08a2ef51, const_str_plain_info_dict, const_dict_f8013f47fd259d4dd121a7bf90ef86b7);
    PyDict_SetItem(const_dict_4d7169b31049ca45eb10d4bf08a2ef51, const_str_plain_params, const_dict_103060a01178013f42f2e88af81fc8c9);
    PyDict_SetItem(const_dict_4d7169b31049ca45eb10d4bf08a2ef51, const_str_plain_skip, const_str_digest_cbb1d41598e8653cb66a364e42b8b668);
    assert(PyDict_Size(const_dict_4d7169b31049ca45eb10d4bf08a2ef51) == 4);
    const_str_digest_423e211c1c6873a103500b98498ae7be = UNSTREAM_STRING_ASCII(&constant_bin[ 1304473 ], 92, 0);

    constants_created = true;
}

/* Function to verify module private constants for non-corruption. */
#ifndef __NUITKA_NO_ASSERT__
void checkModuleConstants_youtube_dl$extractor$generic(void) {
    // The module may not have been used at all, then ignore this.
    if (constants_created == false) return;


}
#endif

// The module code objects.
static PyCodeObject *codeobj_68f90d7bf2732be80a8d164ed576613c;
static PyCodeObject *codeobj_4c70c88356b0fb9d4a3dd58a849b0642;
static PyCodeObject *codeobj_bce15dbada415b4cdcbfe2249cce1bdd;
static PyCodeObject *codeobj_3943c14c5d97169024667e799ac3ac3a;
static PyCodeObject *codeobj_9811a08735b5729ea311d36d3bfec6d7;
static PyCodeObject *codeobj_2e6fce68bec58b8e8ce4ab7c949b6c7b;
static PyCodeObject *codeobj_acbe8c5acfe725e077275ac87310d183;
static PyCodeObject *codeobj_f98e57c7a414f9b0600dcc8317d1b08b;
static PyCodeObject *codeobj_3ab031b717f0bb18aadf670f3dc4389c;
static PyCodeObject *codeobj_0aeec350a7dfbe2e690d0521ad144459;
static PyCodeObject *codeobj_336043124f5c4cc3ccd5b77a6f1df793;
static PyCodeObject *codeobj_6328b4bab88dd0e6cbb41542fa16574c;
static PyCodeObject *codeobj_f3a23ede05cb422eef81ccbe7998b9c8;
static PyCodeObject *codeobj_ae0fee46d2d491a9a1a436f870d90824;
static PyCodeObject *codeobj_f35e523b22fdc434a86020ac591654ba;
static PyCodeObject *codeobj_7c61bbcffe721ed073454972ff58907e;
static PyCodeObject *codeobj_f9c5d67c8b6ddd2beae1c0d9ea3dabc1;

static void createModuleCodeObjects(void) {
    module_filename_obj = const_str_digest_af66209f81c52df35c6cdeff00a82e0b;
    codeobj_68f90d7bf2732be80a8d164ed576613c = MAKE_CODEOBJECT(module_filename_obj, 2452, CO_GENERATOR | CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_angle_genexpr, const_tuple_2410a945b7a9c18c09b4bdb4b7baf173_tuple, 1, 0, 0);
    codeobj_4c70c88356b0fb9d4a3dd58a849b0642 = MAKE_CODEOBJECT(module_filename_obj, 2543, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_angle_lambda, const_tuple_str_plain_p_tuple, 1, 0, 0);
    codeobj_bce15dbada415b4cdcbfe2249cce1bdd = MAKE_CODEOBJECT(module_filename_obj, 2628, CO_OPTIMIZED | CO_NEWLOCALS | CO_FUTURE_UNICODE_LITERALS, const_str_angle_lambda, const_tuple_str_plain_v_str_plain_url_tuple, 1, 0, 0);
    codeobj_3943c14c5d97169024667e799ac3ac3a = MAKE_CODEOBJECT(module_filename_obj, 2432, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_angle_lambda, const_tuple_str_plain_x_tuple, 1, 0, 0);
    codeobj_9811a08735b5729ea311d36d3bfec6d7 = MAKE_CODEOBJECT(module_filename_obj, 2490, CO_OPTIMIZED | CO_NEWLOCALS | CO_FUTURE_UNICODE_LITERALS, const_str_angle_lambda, const_tuple_str_plain_x_str_plain_url_tuple, 1, 0, 0);
    codeobj_2e6fce68bec58b8e8ce4ab7c949b6c7b = MAKE_CODEOBJECT(module_filename_obj, 2860, CO_OPTIMIZED | CO_NEWLOCALS | CO_FUTURE_UNICODE_LITERALS, const_str_angle_lambda, const_tuple_str_plain_x_str_plain_url_tuple, 1, 0, 0);
    codeobj_acbe8c5acfe725e077275ac87310d183 = MAKE_CODEOBJECT(module_filename_obj, 2472, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_angle_listcomp, const_tuple_str_plain_bc_url_str_plain_url_tuple, 1, 0, 0);
    codeobj_f98e57c7a414f9b0600dcc8317d1b08b = MAKE_CODEOBJECT(module_filename_obj, 3142, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_angle_listcomp, const_tuple_str_plain_mediasite_url_str_plain_self_str_plain_url_tuple, 1, 0, 0);
    codeobj_3ab031b717f0bb18aadf670f3dc4389c = MAKE_CODEOBJECT(module_filename_obj, 3194, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_angle_listcomp, const_tuple_str_plain_sharevideos_mobj_tuple, 1, 0, 0);
    codeobj_0aeec350a7dfbe2e690d0521ad144459 = MAKE_CODEOBJECT(module_filename_obj, 1, CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_digest_e48a4367407bfa6634de13c77fd874a7, const_tuple_empty, 0, 0, 0);
    codeobj_336043124f5c4cc3ccd5b77a6f1df793 = MAKE_CODEOBJECT(module_filename_obj, 124, CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_plain_GenericIE, const_tuple_str_plain___class___tuple, 0, 0, 0);
    codeobj_6328b4bab88dd0e6cbb41542fa16574c = MAKE_CODEOBJECT(module_filename_obj, 2211, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_plain__extract_camtasia, const_tuple_13d590ea092fa42be1e64cc339c00486_tuple, 4, 0, 0);
    codeobj_f3a23ede05cb422eef81ccbe7998b9c8 = MAKE_CODEOBJECT(module_filename_obj, 2177, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_plain__extract_rss, const_tuple_f84e4cad506bcaeeb3bfa5a4dd36f0ab_tuple, 4, 0, 0);
    codeobj_ae0fee46d2d491a9a1a436f870d90824 = MAKE_CODEOBJECT(module_filename_obj, 2248, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_plain__real_extract, const_tuple_9d15fc37bc470d072487a89614b4e7cf_tuple, 2, 0, 0);
    codeobj_f35e523b22fdc434a86020ac591654ba = MAKE_CODEOBJECT(module_filename_obj, 3291, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_plain_check_video, const_tuple_str_plain_vurl_str_plain_vpath_str_plain_vext_tuple, 1, 0, 0);
    codeobj_7c61bbcffe721ed073454972ff58907e = MAKE_CODEOBJECT(module_filename_obj, 3300, CO_OPTIMIZED | CO_NEWLOCALS | CO_FUTURE_UNICODE_LITERALS, const_str_plain_filter_video, const_tuple_str_plain_urls_str_plain_check_video_tuple, 1, 0, 0);
    codeobj_f9c5d67c8b6ddd2beae1c0d9ea3dabc1 = MAKE_CODEOBJECT(module_filename_obj, 2173, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, const_str_plain_report_following_redirect, const_tuple_str_plain_self_str_plain_new_url_tuple, 2, 0, 0);
}

// The module function declarations.
static PyObject *youtube_dl$extractor$generic$$$function_4__real_extract$$$genexpr_1_genexpr_maker(void);


NUITKA_CROSS_MODULE PyObject *impl___internal__$$$function_4__mro_entries_conversion(PyObject **python_pars);


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_1_report_following_redirect();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_2__extract_rss();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_3__extract_camtasia();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_1_lambda();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_2_lambda();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_3_lambda();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_4_lambda();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_5_lambda();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_6_check_video();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_7_filter_video();


// The module function definitions.
static PyObject *impl_youtube_dl$extractor$generic$$$function_1_report_following_redirect(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_new_url = python_pars[1];
    struct Nuitka_FrameObject *frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1 = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1)) {
        Py_XDECREF(cache_frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1);

#if _DEBUG_REFCOUNTS
        if (cache_frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1 = MAKE_FUNCTION_FRAME(codeobj_f9c5d67c8b6ddd2beae1c0d9ea3dabc1, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1->m_type_description == NULL);
    frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1 = cache_frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_expression_name_1;
        PyObject *tmp_expression_name_2;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        CHECK_OBJECT(par_self);
        tmp_expression_name_2 = par_self;
        tmp_expression_name_1 = LOOKUP_ATTRIBUTE(tmp_expression_name_2, const_str_plain__downloader);
        if (tmp_expression_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2175;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_expression_name_1, const_str_plain_to_screen);
        Py_DECREF(tmp_expression_name_1);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2175;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_left_name_1 = const_str_digest_7a6ecaa8d26ec8dcbd42e8dce09f0f28;
        CHECK_OBJECT(par_new_url);
        tmp_right_name_1 = par_new_url;
        tmp_args_element_name_1 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 2175;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1->m_frame.f_lineno = 2175;
        tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2175;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1,
        type_description_1,
        par_self,
        par_new_url
    );


    // Release cached frame.
    if (frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1 == cache_frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1);
    }
    cache_frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1 = NULL;

    assertFrameObject(frame_f9c5d67c8b6ddd2beae1c0d9ea3dabc1);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto function_return_exit;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_new_url);
    Py_DECREF(par_new_url);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_new_url);
    Py_DECREF(par_new_url);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function_2__extract_rss(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_url = python_pars[1];
    PyObject *par_video_id = python_pars[2];
    PyObject *par_doc = python_pars[3];
    PyObject *var_playlist_title = NULL;
    PyObject *var_playlist_desc_el = NULL;
    PyObject *var_playlist_desc = NULL;
    PyObject *var_entries = NULL;
    PyObject *var_it = NULL;
    PyObject *var_next_url = NULL;
    PyObject *var_enclosure_nodes = NULL;
    PyObject *var_e = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    struct Nuitka_FrameObject *frame_f3a23ede05cb422eef81ccbe7998b9c8;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    int tmp_res;
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    static struct Nuitka_FrameObject *cache_frame_f3a23ede05cb422eef81ccbe7998b9c8 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_f3a23ede05cb422eef81ccbe7998b9c8)) {
        Py_XDECREF(cache_frame_f3a23ede05cb422eef81ccbe7998b9c8);

#if _DEBUG_REFCOUNTS
        if (cache_frame_f3a23ede05cb422eef81ccbe7998b9c8 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_f3a23ede05cb422eef81ccbe7998b9c8 = MAKE_FUNCTION_FRAME(codeobj_f3a23ede05cb422eef81ccbe7998b9c8, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_f3a23ede05cb422eef81ccbe7998b9c8->m_type_description == NULL);
    frame_f3a23ede05cb422eef81ccbe7998b9c8 = cache_frame_f3a23ede05cb422eef81ccbe7998b9c8;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_f3a23ede05cb422eef81ccbe7998b9c8);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_f3a23ede05cb422eef81ccbe7998b9c8) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_expression_name_1;
        PyObject *tmp_called_instance_1;
        CHECK_OBJECT(par_doc);
        tmp_called_instance_1 = par_doc;
        frame_f3a23ede05cb422eef81ccbe7998b9c8->m_frame.f_lineno = 2178;
        tmp_expression_name_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_find, &PyTuple_GET_ITEM(const_tuple_str_digest_f959083ad25b7fea14c6935536fbaa5d_tuple, 0));

        if (tmp_expression_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2178;
            type_description_1 = "oooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_1 = LOOKUP_ATTRIBUTE(tmp_expression_name_1, const_str_plain_text);
        Py_DECREF(tmp_expression_name_1);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2178;
            type_description_1 = "oooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_playlist_title == NULL);
        var_playlist_title = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_instance_2;
        CHECK_OBJECT(par_doc);
        tmp_called_instance_2 = par_doc;
        frame_f3a23ede05cb422eef81ccbe7998b9c8->m_frame.f_lineno = 2179;
        tmp_assign_source_2 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_2, const_str_plain_find, &PyTuple_GET_ITEM(const_tuple_str_digest_022f0fe19c76db2b4709c7278d953927_tuple, 0));

        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2179;
            type_description_1 = "oooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_playlist_desc_el == NULL);
        var_playlist_desc_el = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_expression_name_2;
        CHECK_OBJECT(var_playlist_desc_el);
        tmp_compexpr_left_1 = var_playlist_desc_el;
        tmp_compexpr_right_1 = Py_None;
        tmp_condition_result_1 = (tmp_compexpr_left_1 == tmp_compexpr_right_1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_1;
        } else {
            goto condexpr_false_1;
        }
        condexpr_true_1:;
        tmp_assign_source_3 = Py_None;
        Py_INCREF(tmp_assign_source_3);
        goto condexpr_end_1;
        condexpr_false_1:;
        CHECK_OBJECT(var_playlist_desc_el);
        tmp_expression_name_2 = var_playlist_desc_el;
        tmp_assign_source_3 = LOOKUP_ATTRIBUTE(tmp_expression_name_2, const_str_plain_text);
        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2180;
            type_description_1 = "oooooooooooo";
            goto frame_exception_exit_1;
        }
        condexpr_end_1:;
        assert(var_playlist_desc == NULL);
        var_playlist_desc = tmp_assign_source_3;
    }
    {
        PyObject *tmp_assign_source_4;
        tmp_assign_source_4 = PyList_New(0);
        assert(var_entries == NULL);
        var_entries = tmp_assign_source_4;
    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_iter_arg_1;
        PyObject *tmp_called_instance_3;
        CHECK_OBJECT(par_doc);
        tmp_called_instance_3 = par_doc;
        frame_f3a23ede05cb422eef81ccbe7998b9c8->m_frame.f_lineno = 2183;
        tmp_iter_arg_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_3, const_str_plain_findall, &PyTuple_GET_ITEM(const_tuple_str_digest_923641aa3d650ad84876342b290d6098_tuple, 0));

        if (tmp_iter_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2183;
            type_description_1 = "oooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_5 = MAKE_ITERATOR(tmp_iter_arg_1);
        Py_DECREF(tmp_iter_arg_1);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2183;
            type_description_1 = "oooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_1__for_iterator == NULL);
        tmp_for_loop_1__for_iterator = tmp_assign_source_5;
    }
    // Tried code:
    loop_start_1:;
    {
        PyObject *tmp_next_source_1;
        PyObject *tmp_assign_source_6;
        CHECK_OBJECT(tmp_for_loop_1__for_iterator);
        tmp_next_source_1 = tmp_for_loop_1__for_iterator;
        tmp_assign_source_6 = ITERATOR_NEXT(tmp_next_source_1);
        if (tmp_assign_source_6 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_1;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "oooooooooooo";
                exception_lineno = 2183;
                goto try_except_handler_2;
            }
        }

        {
            PyObject *old = tmp_for_loop_1__iter_value;
            tmp_for_loop_1__iter_value = tmp_assign_source_6;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_7;
        CHECK_OBJECT(tmp_for_loop_1__iter_value);
        tmp_assign_source_7 = tmp_for_loop_1__iter_value;
        {
            PyObject *old = var_it;
            var_it = tmp_assign_source_7;
            Py_INCREF(var_it);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_8;
        tmp_assign_source_8 = Py_None;
        {
            PyObject *old = var_next_url;
            var_next_url = tmp_assign_source_8;
            Py_INCREF(var_next_url);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_called_instance_4;
        CHECK_OBJECT(var_it);
        tmp_called_instance_4 = var_it;
        frame_f3a23ede05cb422eef81ccbe7998b9c8->m_frame.f_lineno = 2185;
        tmp_assign_source_9 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_4, const_str_plain_findall, &PyTuple_GET_ITEM(const_tuple_str_digest_1e7994a66f4cdf34edc87136750d7ba2_tuple, 0));

        if (tmp_assign_source_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2185;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = var_enclosure_nodes;
            var_enclosure_nodes = tmp_assign_source_9;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_iter_arg_2;
        CHECK_OBJECT(var_enclosure_nodes);
        tmp_iter_arg_2 = var_enclosure_nodes;
        tmp_assign_source_10 = MAKE_ITERATOR(tmp_iter_arg_2);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2186;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = tmp_for_loop_2__for_iterator;
            tmp_for_loop_2__for_iterator = tmp_assign_source_10;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    loop_start_2:;
    {
        PyObject *tmp_next_source_2;
        PyObject *tmp_assign_source_11;
        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
        tmp_next_source_2 = tmp_for_loop_2__for_iterator;
        tmp_assign_source_11 = ITERATOR_NEXT(tmp_next_source_2);
        if (tmp_assign_source_11 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_2;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "oooooooooooo";
                exception_lineno = 2186;
                goto try_except_handler_3;
            }
        }

        {
            PyObject *old = tmp_for_loop_2__iter_value;
            tmp_for_loop_2__iter_value = tmp_assign_source_11;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_12;
        CHECK_OBJECT(tmp_for_loop_2__iter_value);
        tmp_assign_source_12 = tmp_for_loop_2__iter_value;
        {
            PyObject *old = var_e;
            var_e = tmp_assign_source_12;
            Py_INCREF(var_e);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_13;
        PyObject *tmp_called_instance_5;
        PyObject *tmp_expression_name_3;
        CHECK_OBJECT(var_e);
        tmp_expression_name_3 = var_e;
        tmp_called_instance_5 = LOOKUP_ATTRIBUTE(tmp_expression_name_3, const_str_plain_attrib);
        if (tmp_called_instance_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2187;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_3;
        }
        frame_f3a23ede05cb422eef81ccbe7998b9c8->m_frame.f_lineno = 2187;
        tmp_assign_source_13 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_5, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        Py_DECREF(tmp_called_instance_5);
        if (tmp_assign_source_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2187;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_3;
        }
        {
            PyObject *old = var_next_url;
            assert(old != NULL);
            var_next_url = tmp_assign_source_13;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_2;
        int tmp_truth_name_1;
        CHECK_OBJECT(var_next_url);
        tmp_truth_name_1 = CHECK_IF_TRUE(var_next_url);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2188;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_3;
        }
        tmp_condition_result_2 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    goto loop_end_2;
    branch_no_1:;
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 2186;
        type_description_1 = "oooooooooooo";
        goto try_except_handler_3;
    }
    goto loop_start_2;
    loop_end_2:;
    goto try_end_1;
    // Exception handler code:
    try_except_handler_3:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto try_except_handler_2;
    // End of try:
    try_end_1:;
    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;

    {
        nuitka_bool tmp_condition_result_3;
        PyObject *tmp_operand_name_1;
        if (var_next_url == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "next_url");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2191;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }

        tmp_operand_name_1 = var_next_url;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2191;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }
        tmp_condition_result_3 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    {
        PyObject *tmp_assign_source_14;
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_kw_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_xpath_text);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_xpath_text);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 31918 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2192;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        CHECK_OBJECT(var_it);
        tmp_tuple_element_1 = var_it;
        tmp_args_name_1 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
        tmp_tuple_element_1 = const_str_plain_link;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_1);
        tmp_kw_name_1 = PyDict_Copy(const_dict_f95321192b139e241e1ec13397bf5b8f);
        frame_f3a23ede05cb422eef81ccbe7998b9c8->m_frame.f_lineno = 2192;
        tmp_assign_source_14 = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
        Py_DECREF(tmp_args_name_1);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_assign_source_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2192;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = var_next_url;
            var_next_url = tmp_assign_source_14;
            Py_XDECREF(old);
        }

    }
    branch_no_2:;
    {
        nuitka_bool tmp_condition_result_4;
        PyObject *tmp_operand_name_2;
        if (var_next_url == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "next_url");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2194;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }

        tmp_operand_name_2 = var_next_url;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2194;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }
        tmp_condition_result_4 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
    }
    branch_yes_3:;
    goto loop_start_1;
    branch_no_3:;
    {
        PyObject *tmp_called_name_2;
        PyObject *tmp_expression_name_4;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        PyObject *tmp_dict_key_3;
        PyObject *tmp_dict_value_3;
        PyObject *tmp_expression_name_5;
        PyObject *tmp_called_instance_6;
        CHECK_OBJECT(var_entries);
        tmp_expression_name_4 = var_entries;
        tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_expression_name_4, const_str_plain_append);
        if (tmp_called_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2197;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }
        tmp_dict_key_1 = const_str_plain__type;
        tmp_dict_value_1 = const_str_plain_url_transparent;
        tmp_args_element_name_1 = _PyDict_NewPresized( 3 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_1, tmp_dict_key_1, tmp_dict_value_1);
        assert(!(tmp_res != 0));
        tmp_dict_key_2 = const_str_plain_url;
        if (var_next_url == NULL) {
            Py_DECREF(tmp_called_name_2);
            Py_DECREF(tmp_args_element_name_1);
            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "next_url");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2199;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }

        tmp_dict_value_2 = var_next_url;
        tmp_res = PyDict_SetItem(tmp_args_element_name_1, tmp_dict_key_2, tmp_dict_value_2);
        assert(!(tmp_res != 0));
        tmp_dict_key_3 = const_str_plain_title;
        CHECK_OBJECT(var_it);
        tmp_called_instance_6 = var_it;
        frame_f3a23ede05cb422eef81ccbe7998b9c8->m_frame.f_lineno = 2200;
        tmp_expression_name_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_find, &PyTuple_GET_ITEM(const_tuple_str_plain_title_tuple, 0));

        if (tmp_expression_name_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_2);
            Py_DECREF(tmp_args_element_name_1);

            exception_lineno = 2200;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }
        tmp_dict_value_3 = LOOKUP_ATTRIBUTE(tmp_expression_name_5, const_str_plain_text);
        Py_DECREF(tmp_expression_name_5);
        if (tmp_dict_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_2);
            Py_DECREF(tmp_args_element_name_1);

            exception_lineno = 2200;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }
        tmp_res = PyDict_SetItem(tmp_args_element_name_1, tmp_dict_key_3, tmp_dict_value_3);
        Py_DECREF(tmp_dict_value_3);
        assert(!(tmp_res != 0));
        frame_f3a23ede05cb422eef81ccbe7998b9c8->m_frame.f_lineno = 2197;
        tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_1);
        Py_DECREF(tmp_called_name_2);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2197;
            type_description_1 = "oooooooooooo";
            goto try_except_handler_2;
        }
        Py_DECREF(tmp_call_result_1);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 2183;
        type_description_1 = "oooooooooooo";
        goto try_except_handler_2;
    }
    goto loop_start_1;
    loop_end_1:;
    goto try_end_2;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto frame_exception_exit_1;
    // End of try:
    try_end_2:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_f3a23ede05cb422eef81ccbe7998b9c8);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_f3a23ede05cb422eef81ccbe7998b9c8);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_f3a23ede05cb422eef81ccbe7998b9c8, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_f3a23ede05cb422eef81ccbe7998b9c8->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_f3a23ede05cb422eef81ccbe7998b9c8, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_f3a23ede05cb422eef81ccbe7998b9c8,
        type_description_1,
        par_self,
        par_url,
        par_video_id,
        par_doc,
        var_playlist_title,
        var_playlist_desc_el,
        var_playlist_desc,
        var_entries,
        var_it,
        var_next_url,
        var_enclosure_nodes,
        var_e
    );


    // Release cached frame.
    if (frame_f3a23ede05cb422eef81ccbe7998b9c8 == cache_frame_f3a23ede05cb422eef81ccbe7998b9c8) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(frame_f3a23ede05cb422eef81ccbe7998b9c8);
    }
    cache_frame_f3a23ede05cb422eef81ccbe7998b9c8 = NULL;

    assertFrameObject(frame_f3a23ede05cb422eef81ccbe7998b9c8);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;

    {
        PyObject *tmp_dict_key_4;
        PyObject *tmp_dict_value_4;
        PyObject *tmp_dict_key_5;
        PyObject *tmp_dict_value_5;
        PyObject *tmp_dict_key_6;
        PyObject *tmp_dict_value_6;
        PyObject *tmp_dict_key_7;
        PyObject *tmp_dict_value_7;
        PyObject *tmp_dict_key_8;
        PyObject *tmp_dict_value_8;
        tmp_dict_key_4 = const_str_plain__type;
        tmp_dict_value_4 = const_str_plain_playlist;
        tmp_return_value = _PyDict_NewPresized( 5 );
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_4, tmp_dict_value_4);
        assert(!(tmp_res != 0));
        tmp_dict_key_5 = const_str_plain_id;
        CHECK_OBJECT(par_url);
        tmp_dict_value_5 = par_url;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_5, tmp_dict_value_5);
        assert(!(tmp_res != 0));
        tmp_dict_key_6 = const_str_plain_title;
        CHECK_OBJECT(var_playlist_title);
        tmp_dict_value_6 = var_playlist_title;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_6, tmp_dict_value_6);
        assert(!(tmp_res != 0));
        tmp_dict_key_7 = const_str_plain_description;
        CHECK_OBJECT(var_playlist_desc);
        tmp_dict_value_7 = var_playlist_desc;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_7, tmp_dict_value_7);
        assert(!(tmp_res != 0));
        tmp_dict_key_8 = const_str_plain_entries;
        CHECK_OBJECT(var_entries);
        tmp_dict_value_8 = var_entries;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_8, tmp_dict_value_8);
        assert(!(tmp_res != 0));
        goto try_return_handler_1;
    }
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(var_playlist_title);
    Py_DECREF(var_playlist_title);
    var_playlist_title = NULL;

    CHECK_OBJECT(var_playlist_desc_el);
    Py_DECREF(var_playlist_desc_el);
    var_playlist_desc_el = NULL;

    CHECK_OBJECT(var_playlist_desc);
    Py_DECREF(var_playlist_desc);
    var_playlist_desc = NULL;

    CHECK_OBJECT(var_entries);
    Py_DECREF(var_entries);
    var_entries = NULL;

    Py_XDECREF(var_it);
    var_it = NULL;

    Py_XDECREF(var_next_url);
    var_next_url = NULL;

    Py_XDECREF(var_enclosure_nodes);
    var_enclosure_nodes = NULL;

    Py_XDECREF(var_e);
    var_e = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_playlist_title);
    var_playlist_title = NULL;

    Py_XDECREF(var_playlist_desc_el);
    var_playlist_desc_el = NULL;

    Py_XDECREF(var_playlist_desc);
    var_playlist_desc = NULL;

    Py_XDECREF(var_entries);
    var_entries = NULL;

    Py_XDECREF(var_it);
    var_it = NULL;

    Py_XDECREF(var_next_url);
    var_next_url = NULL;

    Py_XDECREF(var_enclosure_nodes);
    var_enclosure_nodes = NULL;

    Py_XDECREF(var_e);
    var_e = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_url);
    Py_DECREF(par_url);
    CHECK_OBJECT(par_video_id);
    Py_DECREF(par_video_id);
    CHECK_OBJECT(par_doc);
    Py_DECREF(par_doc);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_url);
    Py_DECREF(par_url);
    CHECK_OBJECT(par_video_id);
    Py_DECREF(par_video_id);
    CHECK_OBJECT(par_doc);
    Py_DECREF(par_doc);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function_3__extract_camtasia(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_url = python_pars[1];
    PyObject *par_video_id = python_pars[2];
    PyObject *par_webpage = python_pars[3];
    PyObject *var_camtasia_cfg = NULL;
    PyObject *var_title = NULL;
    PyObject *var_camtasia_url = NULL;
    PyObject *var_fileset_node = NULL;
    PyObject *var_entries = NULL;
    PyObject *var_n = NULL;
    PyObject *var_url_n = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    struct Nuitka_FrameObject *frame_6328b4bab88dd0e6cbb41542fa16574c;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_return_value = NULL;
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    int tmp_res;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    static struct Nuitka_FrameObject *cache_frame_6328b4bab88dd0e6cbb41542fa16574c = NULL;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_6328b4bab88dd0e6cbb41542fa16574c)) {
        Py_XDECREF(cache_frame_6328b4bab88dd0e6cbb41542fa16574c);

#if _DEBUG_REFCOUNTS
        if (cache_frame_6328b4bab88dd0e6cbb41542fa16574c == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_6328b4bab88dd0e6cbb41542fa16574c = MAKE_FUNCTION_FRAME(codeobj_6328b4bab88dd0e6cbb41542fa16574c, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_6328b4bab88dd0e6cbb41542fa16574c->m_type_description == NULL);
    frame_6328b4bab88dd0e6cbb41542fa16574c = cache_frame_6328b4bab88dd0e6cbb41542fa16574c;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_6328b4bab88dd0e6cbb41542fa16574c);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_6328b4bab88dd0e6cbb41542fa16574c) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_expression_name_1;
        PyObject *tmp_args_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_kw_name_1;
        CHECK_OBJECT(par_self);
        tmp_expression_name_1 = par_self;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_expression_name_1, const_str_plain__search_regex);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2214;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_tuple_element_1 = const_str_digest_4f3e88e7930c961656d17a69aac78eed;
        tmp_args_name_1 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
        CHECK_OBJECT(par_webpage);
        tmp_tuple_element_1 = par_webpage;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_1);
        tmp_tuple_element_1 = const_str_digest_750604cf9e856415b3a0231d87de7080;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_args_name_1, 2, tmp_tuple_element_1);
        tmp_kw_name_1 = PyDict_Copy(const_dict_6dc2f89fb2b035a2c0a0ed28a753f1c8);
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2214;
        tmp_assign_source_1 = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_name_1);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2214;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_camtasia_cfg == NULL);
        var_camtasia_cfg = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        CHECK_OBJECT(var_camtasia_cfg);
        tmp_compexpr_left_1 = var_camtasia_cfg;
        tmp_compexpr_right_1 = Py_None;
        tmp_condition_result_1 = (tmp_compexpr_left_1 == tmp_compexpr_right_1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_1:;
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_name_2;
        PyObject *tmp_expression_name_2;
        PyObject *tmp_args_name_2;
        PyObject *tmp_tuple_element_2;
        PyObject *tmp_kw_name_2;
        CHECK_OBJECT(par_self);
        tmp_expression_name_2 = par_self;
        tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_expression_name_2, const_str_plain__html_search_meta);
        if (tmp_called_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2220;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_tuple_element_2 = const_str_digest_ba13b7ad4f4c53b99c5f194088ca1b82;
        tmp_args_name_2 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_args_name_2, 0, tmp_tuple_element_2);
        CHECK_OBJECT(par_webpage);
        tmp_tuple_element_2 = par_webpage;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_args_name_2, 1, tmp_tuple_element_2);
        tmp_kw_name_2 = PyDict_Copy(const_dict_a963d82ead3eee96783c188d5867b151);
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2220;
        tmp_assign_source_2 = CALL_FUNCTION(tmp_called_name_2, tmp_args_name_2, tmp_kw_name_2);
        Py_DECREF(tmp_called_name_2);
        Py_DECREF(tmp_args_name_2);
        Py_DECREF(tmp_kw_name_2);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2220;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_title == NULL);
        var_title = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_args_element_name_2;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urlparse);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_urlparse);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 32106 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2222;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_url);
        tmp_args_element_name_1 = par_url;
        CHECK_OBJECT(var_camtasia_cfg);
        tmp_args_element_name_2 = var_camtasia_cfg;
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2222;
        {
            PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2};
            tmp_assign_source_3 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_1, const_str_plain_urljoin, call_args);
        }

        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2222;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_camtasia_url == NULL);
        var_camtasia_url = tmp_assign_source_3;
    }
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_called_name_3;
        PyObject *tmp_expression_name_3;
        PyObject *tmp_args_name_3;
        PyObject *tmp_tuple_element_3;
        PyObject *tmp_kw_name_3;
        CHECK_OBJECT(par_self);
        tmp_expression_name_3 = par_self;
        tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_expression_name_3, const_str_plain__download_xml);
        if (tmp_called_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2223;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_camtasia_url);
        tmp_tuple_element_3 = var_camtasia_url;
        tmp_args_name_3 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_3);
        PyTuple_SET_ITEM(tmp_args_name_3, 0, tmp_tuple_element_3);
        CHECK_OBJECT(par_video_id);
        tmp_tuple_element_3 = par_video_id;
        Py_INCREF(tmp_tuple_element_3);
        PyTuple_SET_ITEM(tmp_args_name_3, 1, tmp_tuple_element_3);
        tmp_kw_name_3 = PyDict_Copy(const_dict_faea4c42db136aac95e911fa911bb28d);
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2223;
        tmp_assign_source_4 = CALL_FUNCTION(tmp_called_name_3, tmp_args_name_3, tmp_kw_name_3);
        Py_DECREF(tmp_called_name_3);
        Py_DECREF(tmp_args_name_3);
        Py_DECREF(tmp_kw_name_3);
        if (tmp_assign_source_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2223;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_camtasia_cfg;
            assert(old != NULL);
            var_camtasia_cfg = tmp_assign_source_4;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_called_instance_2;
        CHECK_OBJECT(var_camtasia_cfg);
        tmp_called_instance_2 = var_camtasia_cfg;
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2227;
        tmp_assign_source_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_2, const_str_plain_find, &PyTuple_GET_ITEM(const_tuple_str_digest_4a53c7f0857c88d26e91c1cf106674e9_tuple, 0));

        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2227;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_fileset_node == NULL);
        var_fileset_node = tmp_assign_source_5;
    }
    {
        PyObject *tmp_assign_source_6;
        tmp_assign_source_6 = PyList_New(0);
        assert(var_entries == NULL);
        var_entries = tmp_assign_source_6;
    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_iter_arg_1;
        PyObject *tmp_called_instance_3;
        CHECK_OBJECT(var_fileset_node);
        tmp_called_instance_3 = var_fileset_node;
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2230;
        tmp_iter_arg_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_getchildren);
        if (tmp_iter_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2230;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_7 = MAKE_ITERATOR(tmp_iter_arg_1);
        Py_DECREF(tmp_iter_arg_1);
        if (tmp_assign_source_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2230;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_1__for_iterator == NULL);
        tmp_for_loop_1__for_iterator = tmp_assign_source_7;
    }
    // Tried code:
    loop_start_1:;
    {
        PyObject *tmp_next_source_1;
        PyObject *tmp_assign_source_8;
        CHECK_OBJECT(tmp_for_loop_1__for_iterator);
        tmp_next_source_1 = tmp_for_loop_1__for_iterator;
        tmp_assign_source_8 = ITERATOR_NEXT(tmp_next_source_1);
        if (tmp_assign_source_8 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_1;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ooooooooooo";
                exception_lineno = 2230;
                goto try_except_handler_2;
            }
        }

        {
            PyObject *old = tmp_for_loop_1__iter_value;
            tmp_for_loop_1__iter_value = tmp_assign_source_8;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_9;
        CHECK_OBJECT(tmp_for_loop_1__iter_value);
        tmp_assign_source_9 = tmp_for_loop_1__iter_value;
        {
            PyObject *old = var_n;
            var_n = tmp_assign_source_9;
            Py_INCREF(var_n);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_called_instance_4;
        CHECK_OBJECT(var_n);
        tmp_called_instance_4 = var_n;
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2231;
        tmp_assign_source_10 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_4, const_str_plain_find, &PyTuple_GET_ITEM(const_tuple_str_digest_072671c863ae6b2a235496904644eacb_tuple, 0));

        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2231;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = var_url_n;
            var_url_n = tmp_assign_source_10;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_2;
        PyObject *tmp_compexpr_left_2;
        PyObject *tmp_compexpr_right_2;
        CHECK_OBJECT(var_url_n);
        tmp_compexpr_left_2 = var_url_n;
        tmp_compexpr_right_2 = Py_None;
        tmp_condition_result_2 = (tmp_compexpr_left_2 == tmp_compexpr_right_2) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    goto loop_start_1;
    branch_no_2:;
    {
        PyObject *tmp_called_name_4;
        PyObject *tmp_expression_name_4;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        PyObject *tmp_expression_name_5;
        PyObject *tmp_called_name_5;
        PyObject *tmp_expression_name_6;
        PyObject *tmp_expression_name_7;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_4;
        PyObject *tmp_expression_name_8;
        PyObject *tmp_called_instance_5;
        PyObject *tmp_expression_name_9;
        PyObject *tmp_subscript_name_1;
        PyObject *tmp_subscript_name_2;
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_tuple_element_4;
        PyObject *tmp_expression_name_10;
        PyObject *tmp_dict_key_3;
        PyObject *tmp_dict_value_3;
        PyObject *tmp_called_name_6;
        PyObject *tmp_expression_name_11;
        PyObject *tmp_mvar_value_3;
        PyObject *tmp_args_element_name_5;
        PyObject *tmp_args_element_name_6;
        PyObject *tmp_expression_name_12;
        PyObject *tmp_dict_key_4;
        PyObject *tmp_dict_value_4;
        PyObject *tmp_called_name_7;
        PyObject *tmp_mvar_value_4;
        PyObject *tmp_args_element_name_7;
        PyObject *tmp_expression_name_13;
        PyObject *tmp_called_instance_6;
        CHECK_OBJECT(var_entries);
        tmp_expression_name_4 = var_entries;
        tmp_called_name_4 = LOOKUP_ATTRIBUTE(tmp_expression_name_4, const_str_plain_append);
        if (tmp_called_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2235;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_dict_key_1 = const_str_plain_id;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_os);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
        }

        if (tmp_mvar_value_2 == NULL) {
            Py_DECREF(tmp_called_name_4);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 695 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2236;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }

        tmp_expression_name_7 = tmp_mvar_value_2;
        tmp_expression_name_6 = LOOKUP_ATTRIBUTE(tmp_expression_name_7, const_str_plain_path);
        if (tmp_expression_name_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);

            exception_lineno = 2236;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_expression_name_6, const_str_plain_splitext);
        Py_DECREF(tmp_expression_name_6);
        if (tmp_called_name_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);

            exception_lineno = 2236;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        CHECK_OBJECT(var_url_n);
        tmp_expression_name_9 = var_url_n;
        tmp_called_instance_5 = LOOKUP_ATTRIBUTE(tmp_expression_name_9, const_str_plain_text);
        if (tmp_called_instance_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_called_name_5);

            exception_lineno = 2236;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2236;
        tmp_expression_name_8 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_5, const_str_plain_rpartition, &PyTuple_GET_ITEM(const_tuple_str_chr_47_tuple, 0));

        Py_DECREF(tmp_called_instance_5);
        if (tmp_expression_name_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_called_name_5);

            exception_lineno = 2236;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_subscript_name_1 = const_int_pos_2;
        tmp_args_element_name_4 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_name_8, tmp_subscript_name_1, 2);
        Py_DECREF(tmp_expression_name_8);
        if (tmp_args_element_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_called_name_5);

            exception_lineno = 2236;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2236;
        tmp_expression_name_5 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_4);
        Py_DECREF(tmp_called_name_5);
        Py_DECREF(tmp_args_element_name_4);
        if (tmp_expression_name_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);

            exception_lineno = 2236;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_subscript_name_2 = const_int_0;
        tmp_dict_value_1 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_name_5, tmp_subscript_name_2, 0);
        Py_DECREF(tmp_expression_name_5);
        if (tmp_dict_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);

            exception_lineno = 2236;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_args_element_name_3 = _PyDict_NewPresized( 4 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_3, tmp_dict_key_1, tmp_dict_value_1);
        Py_DECREF(tmp_dict_value_1);
        assert(!(tmp_res != 0));
        tmp_dict_key_2 = const_str_plain_title;
        tmp_left_name_1 = const_str_digest_ff5e3b1ae0d95ffe8b3d72657a27de19;
        CHECK_OBJECT(var_title);
        tmp_tuple_element_4 = var_title;
        tmp_right_name_1 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_4);
        PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_4);
        CHECK_OBJECT(var_n);
        tmp_expression_name_10 = var_n;
        tmp_tuple_element_4 = LOOKUP_ATTRIBUTE(tmp_expression_name_10, const_str_plain_tag);
        if (tmp_tuple_element_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_args_element_name_3);
            Py_DECREF(tmp_right_name_1);

            exception_lineno = 2237;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_4);
        tmp_dict_value_2 = BINARY_OPERATION_MOD_OBJECT_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_right_name_1);
        if (tmp_dict_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_args_element_name_3);

            exception_lineno = 2237;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_res = PyDict_SetItem(tmp_args_element_name_3, tmp_dict_key_2, tmp_dict_value_2);
        Py_DECREF(tmp_dict_value_2);
        assert(!(tmp_res != 0));
        tmp_dict_key_3 = const_str_plain_url;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urlparse);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_urlparse);
        }

        if (tmp_mvar_value_3 == NULL) {
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_args_element_name_3);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 32106 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2238;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }

        tmp_expression_name_11 = tmp_mvar_value_3;
        tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_expression_name_11, const_str_plain_urljoin);
        if (tmp_called_name_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_args_element_name_3);

            exception_lineno = 2238;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        CHECK_OBJECT(par_url);
        tmp_args_element_name_5 = par_url;
        CHECK_OBJECT(var_url_n);
        tmp_expression_name_12 = var_url_n;
        tmp_args_element_name_6 = LOOKUP_ATTRIBUTE(tmp_expression_name_12, const_str_plain_text);
        if (tmp_args_element_name_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_args_element_name_3);
            Py_DECREF(tmp_called_name_6);

            exception_lineno = 2238;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2238;
        {
            PyObject *call_args[] = {tmp_args_element_name_5, tmp_args_element_name_6};
            tmp_dict_value_3 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_6, call_args);
        }

        Py_DECREF(tmp_called_name_6);
        Py_DECREF(tmp_args_element_name_6);
        if (tmp_dict_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_args_element_name_3);

            exception_lineno = 2238;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_res = PyDict_SetItem(tmp_args_element_name_3, tmp_dict_key_3, tmp_dict_value_3);
        Py_DECREF(tmp_dict_value_3);
        assert(!(tmp_res != 0));
        tmp_dict_key_4 = const_str_plain_duration;
        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_float_or_none);

        if (unlikely(tmp_mvar_value_4 == NULL)) {
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_float_or_none);
        }

        if (tmp_mvar_value_4 == NULL) {
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_args_element_name_3);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33881 ], 35, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2239;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }

        tmp_called_name_7 = tmp_mvar_value_4;
        CHECK_OBJECT(var_n);
        tmp_called_instance_6 = var_n;
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2239;
        tmp_expression_name_13 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_find, &PyTuple_GET_ITEM(const_tuple_str_digest_e35f1d8c90f5f611269c11fa74846100_tuple, 0));

        if (tmp_expression_name_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_args_element_name_3);

            exception_lineno = 2239;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_args_element_name_7 = LOOKUP_ATTRIBUTE(tmp_expression_name_13, const_str_plain_text);
        Py_DECREF(tmp_expression_name_13);
        if (tmp_args_element_name_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_args_element_name_3);

            exception_lineno = 2239;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2239;
        tmp_dict_value_4 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_7);
        Py_DECREF(tmp_args_element_name_7);
        if (tmp_dict_value_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_args_element_name_3);

            exception_lineno = 2239;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_res = PyDict_SetItem(tmp_args_element_name_3, tmp_dict_key_4, tmp_dict_value_4);
        Py_DECREF(tmp_dict_value_4);
        assert(!(tmp_res != 0));
        frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame.f_lineno = 2235;
        tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_3);
        Py_DECREF(tmp_called_name_4);
        Py_DECREF(tmp_args_element_name_3);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2235;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        Py_DECREF(tmp_call_result_1);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 2230;
        type_description_1 = "ooooooooooo";
        goto try_except_handler_2;
    }
    goto loop_start_1;
    loop_end_1:;
    goto try_end_1;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_6328b4bab88dd0e6cbb41542fa16574c);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_6328b4bab88dd0e6cbb41542fa16574c);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_6328b4bab88dd0e6cbb41542fa16574c);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_6328b4bab88dd0e6cbb41542fa16574c, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_6328b4bab88dd0e6cbb41542fa16574c->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_6328b4bab88dd0e6cbb41542fa16574c, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_6328b4bab88dd0e6cbb41542fa16574c,
        type_description_1,
        par_self,
        par_url,
        par_video_id,
        par_webpage,
        var_camtasia_cfg,
        var_title,
        var_camtasia_url,
        var_fileset_node,
        var_entries,
        var_n,
        var_url_n
    );


    // Release cached frame.
    if (frame_6328b4bab88dd0e6cbb41542fa16574c == cache_frame_6328b4bab88dd0e6cbb41542fa16574c) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(frame_6328b4bab88dd0e6cbb41542fa16574c);
    }
    cache_frame_6328b4bab88dd0e6cbb41542fa16574c = NULL;

    assertFrameObject(frame_6328b4bab88dd0e6cbb41542fa16574c);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;

    {
        PyObject *tmp_dict_key_5;
        PyObject *tmp_dict_value_5;
        PyObject *tmp_dict_key_6;
        PyObject *tmp_dict_value_6;
        PyObject *tmp_dict_key_7;
        PyObject *tmp_dict_value_7;
        tmp_dict_key_5 = const_str_plain__type;
        tmp_dict_value_5 = const_str_plain_playlist;
        tmp_return_value = _PyDict_NewPresized( 3 );
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_5, tmp_dict_value_5);
        assert(!(tmp_res != 0));
        tmp_dict_key_6 = const_str_plain_entries;
        CHECK_OBJECT(var_entries);
        tmp_dict_value_6 = var_entries;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_6, tmp_dict_value_6);
        assert(!(tmp_res != 0));
        tmp_dict_key_7 = const_str_plain_title;
        CHECK_OBJECT(var_title);
        tmp_dict_value_7 = var_title;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_7, tmp_dict_value_7);
        assert(!(tmp_res != 0));
        goto try_return_handler_1;
    }
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(var_camtasia_cfg);
    Py_DECREF(var_camtasia_cfg);
    var_camtasia_cfg = NULL;

    Py_XDECREF(var_title);
    var_title = NULL;

    Py_XDECREF(var_camtasia_url);
    var_camtasia_url = NULL;

    Py_XDECREF(var_fileset_node);
    var_fileset_node = NULL;

    Py_XDECREF(var_entries);
    var_entries = NULL;

    Py_XDECREF(var_n);
    var_n = NULL;

    Py_XDECREF(var_url_n);
    var_url_n = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_camtasia_cfg);
    var_camtasia_cfg = NULL;

    Py_XDECREF(var_title);
    var_title = NULL;

    Py_XDECREF(var_camtasia_url);
    var_camtasia_url = NULL;

    Py_XDECREF(var_fileset_node);
    var_fileset_node = NULL;

    Py_XDECREF(var_entries);
    var_entries = NULL;

    Py_XDECREF(var_n);
    var_n = NULL;

    Py_XDECREF(var_url_n);
    var_url_n = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_url);
    Py_DECREF(par_url);
    CHECK_OBJECT(par_video_id);
    Py_DECREF(par_video_id);
    CHECK_OBJECT(par_webpage);
    Py_DECREF(par_webpage);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_url);
    Py_DECREF(par_url);
    CHECK_OBJECT(par_video_id);
    Py_DECREF(par_video_id);
    CHECK_OBJECT(par_webpage);
    Py_DECREF(par_webpage);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function_4__real_extract(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_CellObject *par_url = PyCell_NEW1(python_pars[1]);
    PyObject *var_parsed_url = NULL;
    PyObject *var_default_search = NULL;
    PyObject *var_smuggled_data = NULL;
    PyObject *var_force_videoid = NULL;
    PyObject *var_is_intentional = NULL;
    PyObject *var_video_id = NULL;
    PyObject *var_head_req = NULL;
    PyObject *var_head_response = NULL;
    PyObject *var_new_url = NULL;
    PyObject *var_full_response = NULL;
    PyObject *var_request = NULL;
    PyObject *var_info_dict = NULL;
    PyObject *var_content_type = NULL;
    PyObject *var_m = NULL;
    PyObject *var_format_id = NULL;
    PyObject *var_formats = NULL;
    PyObject *var_force = NULL;
    PyObject *var_first_bytes = NULL;
    struct Nuitka_CellObject *var_webpage = PyCell_EMPTY();
    PyObject *var_doc = NULL;
    PyObject *var_smil = NULL;
    PyObject *var_camtasia_res = NULL;
    PyObject *var_video_title = NULL;
    PyObject *var_age_limit = NULL;
    PyObject *var_AGE_LIMIT_MARKERS = NULL;
    PyObject *var_video_uploader = NULL;
    PyObject *var_video_description = NULL;
    PyObject *var_video_thumbnail = NULL;
    PyObject *var_bc_urls = NULL;
    PyObject *var_entries = NULL;
    PyObject *var_nexx_urls = NULL;
    PyObject *var_nexx_embed_urls = NULL;
    PyObject *var_tp_urls = NULL;
    PyObject *var_matches = NULL;
    PyObject *var_vimeo_urls = NULL;
    PyObject *var_vid_me_embed_url = NULL;
    PyObject *var_youtube_urls = NULL;
    PyObject *var_playlists = NULL;
    PyObject *var_dailymail_urls = NULL;
    PyObject *var_teachable_url = NULL;
    PyObject *var_wistia_urls = NULL;
    PyObject *var_playlist = NULL;
    PyObject *var_entry = NULL;
    PyObject *var_svt_url = NULL;
    PyObject *var_mobj = NULL;
    PyObject *var_burl = NULL;
    PyObject *var_embed_token = NULL;
    PyObject *var_embeds = NULL;
    PyObject *var_facebook_urls = NULL;
    PyObject *var_odnoklassniki_url = NULL;
    PyObject *var_rutv_url = NULL;
    PyObject *var_tvc_url = NULL;
    PyObject *var_sportbox_urls = NULL;
    PyObject *var_xhamster_urls = NULL;
    PyObject *var_tnaflix_urls = NULL;
    PyObject *var_pornhub_urls = NULL;
    PyObject *var_drtuber_urls = NULL;
    PyObject *var_redtube_urls = NULL;
    PyObject *var_tube8_urls = NULL;
    PyObject *var_mofosex_urls = NULL;
    PyObject *var_spankwire_urls = NULL;
    PyObject *var_youporn_urls = NULL;
    PyObject *var_ustream_url = NULL;
    PyObject *var_smotri_url = NULL;
    PyObject *var_myvi_url = NULL;
    PyObject *var_soundcloud_urls = NULL;
    PyObject *var_tunein_urls = NULL;
    PyObject *var_mtvservices_url = NULL;
    PyObject *var_kaltura_urls = NULL;
    PyObject *var_eagleplatform_url = NULL;
    PyObject *var_pladform_url = NULL;
    PyObject *var_videomore_url = NULL;
    PyObject *var_webcaster_url = NULL;
    PyObject *var_nbc_sports_url = NULL;
    PyObject *var_nbc_news_embed_url = NULL;
    PyObject *var_google_drive_url = NULL;
    PyObject *var_senate_isvp_url = NULL;
    PyObject *var_kinja_embed_urls = NULL;
    PyObject *var_onionstudios_url = NULL;
    PyObject *var_viewlift_url = NULL;
    PyObject *var_jwplatform_urls = NULL;
    PyObject *var_digiteka_url = NULL;
    PyObject *var_arkena_url = NULL;
    PyObject *var_piksel_url = NULL;
    PyObject *var_limelight_urls = NULL;
    PyObject *var_anvato_urls = NULL;
    PyObject *var_info = NULL;
    PyObject *var_instagram_embed_url = NULL;
    PyObject *var_liveleak_urls = NULL;
    PyObject *var_threeqsdn_url = NULL;
    PyObject *var_vbox7_url = NULL;
    PyObject *var_dbtv_urls = NULL;
    PyObject *var_videa_urls = NULL;
    PyObject *var_twentymin_urls = NULL;
    PyObject *var_videopress_urls = NULL;
    PyObject *var_rutube_urls = NULL;
    PyObject *var_wapo_urls = NULL;
    PyObject *var_mediaset_urls = NULL;
    PyObject *var_joj_urls = NULL;
    PyObject *var_mpfn_urls = NULL;
    PyObject *var_vzaar_urls = NULL;
    PyObject *var_channel9_urls = NULL;
    PyObject *var_vshare_urls = NULL;
    PyObject *var_mediasite_urls = NULL;
    PyObject *var_springboardplatform_urls = NULL;
    PyObject *var_yapfiles_urls = NULL;
    PyObject *var_vice_urls = NULL;
    PyObject *var_xfileshare_urls = NULL;
    PyObject *var_cloudflarestream_urls = NULL;
    PyObject *var_peertube_urls = NULL;
    PyObject *var_indavideo_urls = NULL;
    PyObject *var_apa_urls = NULL;
    PyObject *var_foxnews_urls = NULL;
    PyObject *var_sharevideos_urls = NULL;
    PyObject *var_viqeo_urls = NULL;
    PyObject *var_expressen_urls = NULL;
    PyObject *var_zype_urls = NULL;
    PyObject *var_num = NULL;
    PyObject *var_jwplayer_data = NULL;
    PyObject *var_sources = NULL;
    PyObject *var_source = NULL;
    PyObject *var_src = NULL;
    PyObject *var_src_type = NULL;
    PyObject *var_ext = NULL;
    PyObject *var_json_ld = NULL;
    struct Nuitka_CellObject *var_check_video = PyCell_EMPTY();
    PyObject *var_filter_video = NULL;
    PyObject *var_found = NULL;
    PyObject *var_m_video_type = NULL;
    PyObject *var_refresh_header = NULL;
    PyObject *var_embed_url = NULL;
    PyObject *var_video_url = NULL;
    PyObject *var_entry_info_dict = NULL;
    PyObject *var_e = NULL;
    PyObject *outline_0_var_bc_url = NULL;
    PyObject *outline_1_var_mediasite_url = NULL;
    PyObject *outline_2_var_sharevideos_mobj = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_for_loop_3__for_iterator = NULL;
    PyObject *tmp_for_loop_3__iter_value = NULL;
    PyObject *tmp_for_loop_4__for_iterator = NULL;
    PyObject *tmp_for_loop_4__iter_value = NULL;
    PyObject *tmp_for_loop_5__for_iterator = NULL;
    PyObject *tmp_for_loop_5__iter_value = NULL;
    PyObject *tmp_for_loop_6__for_iterator = NULL;
    PyObject *tmp_for_loop_6__iter_value = NULL;
    PyObject *tmp_genexpr_1__$0 = NULL;
    PyObject *tmp_listcomp_1__$0 = NULL;
    PyObject *tmp_listcomp_1__contraction = NULL;
    PyObject *tmp_listcomp_1__iter_value_0 = NULL;
    PyObject *tmp_listcomp_2__$0 = NULL;
    PyObject *tmp_listcomp_2__contraction = NULL;
    PyObject *tmp_listcomp_2__iter_value_0 = NULL;
    PyObject *tmp_listcomp_3__$0 = NULL;
    PyObject *tmp_listcomp_3__contraction = NULL;
    PyObject *tmp_listcomp_3__iter_value_0 = NULL;
    PyObject *tmp_tuple_unpack_1__element_1 = NULL;
    PyObject *tmp_tuple_unpack_1__element_2 = NULL;
    PyObject *tmp_tuple_unpack_1__source_iter = NULL;
    PyObject *tmp_tuple_unpack_2__element_1 = NULL;
    PyObject *tmp_tuple_unpack_2__element_2 = NULL;
    PyObject *tmp_tuple_unpack_2__source_iter = NULL;
    PyObject *tmp_tuple_unpack_3__element_1 = NULL;
    PyObject *tmp_tuple_unpack_3__element_2 = NULL;
    PyObject *tmp_tuple_unpack_3__source_iter = NULL;
    struct Nuitka_FrameObject *frame_ae0fee46d2d491a9a1a436f870d90824;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_return_value = NULL;
    int tmp_res;
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    bool tmp_result;
    PyObject *tmp_iterator_attempt;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *tmp_dictset_value;
    PyObject *tmp_dictset_dict;
    PyObject *tmp_dictset_key;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_preserved_type_1;
    PyObject *exception_preserved_value_1;
    PyTracebackObject *exception_preserved_tb_1;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    struct Nuitka_FrameObject *frame_acbe8c5acfe725e077275ac87310d183_2;
    NUITKA_MAY_BE_UNUSED char const *type_description_2 = NULL;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    static struct Nuitka_FrameObject *cache_frame_acbe8c5acfe725e077275ac87310d183_2 = NULL;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    struct Nuitka_FrameObject *frame_f98e57c7a414f9b0600dcc8317d1b08b_3;
    NUITKA_MAY_BE_UNUSED char const *type_description_3 = NULL;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;
    static struct Nuitka_FrameObject *cache_frame_f98e57c7a414f9b0600dcc8317d1b08b_3 = NULL;
    PyObject *exception_keeper_type_9;
    PyObject *exception_keeper_value_9;
    PyTracebackObject *exception_keeper_tb_9;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_9;
    struct Nuitka_FrameObject *frame_3ab031b717f0bb18aadf670f3dc4389c_4;
    NUITKA_MAY_BE_UNUSED char const *type_description_4 = NULL;
    PyObject *exception_keeper_type_10;
    PyObject *exception_keeper_value_10;
    PyTracebackObject *exception_keeper_tb_10;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_10;
    static struct Nuitka_FrameObject *cache_frame_3ab031b717f0bb18aadf670f3dc4389c_4 = NULL;
    PyObject *exception_keeper_type_11;
    PyObject *exception_keeper_value_11;
    PyTracebackObject *exception_keeper_tb_11;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_11;
    PyObject *exception_keeper_type_12;
    PyObject *exception_keeper_value_12;
    PyTracebackObject *exception_keeper_tb_12;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_12;
    PyObject *exception_keeper_type_13;
    PyObject *exception_keeper_value_13;
    PyTracebackObject *exception_keeper_tb_13;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_13;
    PyObject *exception_keeper_type_14;
    PyObject *exception_keeper_value_14;
    PyTracebackObject *exception_keeper_tb_14;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_14;
    PyObject *exception_keeper_type_15;
    PyObject *exception_keeper_value_15;
    PyTracebackObject *exception_keeper_tb_15;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_15;
    PyObject *exception_keeper_type_16;
    PyObject *exception_keeper_value_16;
    PyTracebackObject *exception_keeper_tb_16;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_16;
    PyObject *exception_preserved_type_2;
    PyObject *exception_preserved_value_2;
    PyTracebackObject *exception_preserved_tb_2;
    PyObject *exception_keeper_type_17;
    PyObject *exception_keeper_value_17;
    PyTracebackObject *exception_keeper_tb_17;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_17;
    PyObject *exception_keeper_type_18;
    PyObject *exception_keeper_value_18;
    PyTracebackObject *exception_keeper_tb_18;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_18;
    PyObject *exception_keeper_type_19;
    PyObject *exception_keeper_value_19;
    PyTracebackObject *exception_keeper_tb_19;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_19;
    PyObject *exception_keeper_type_20;
    PyObject *exception_keeper_value_20;
    PyTracebackObject *exception_keeper_tb_20;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_20;
    PyObject *exception_keeper_type_21;
    PyObject *exception_keeper_value_21;
    PyTracebackObject *exception_keeper_tb_21;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_21;
    PyObject *exception_keeper_type_22;
    PyObject *exception_keeper_value_22;
    PyTracebackObject *exception_keeper_tb_22;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_22;
    static struct Nuitka_FrameObject *cache_frame_ae0fee46d2d491a9a1a436f870d90824 = NULL;
    PyObject *exception_keeper_type_23;
    PyObject *exception_keeper_value_23;
    PyTracebackObject *exception_keeper_tb_23;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_23;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_ae0fee46d2d491a9a1a436f870d90824)) {
        Py_XDECREF(cache_frame_ae0fee46d2d491a9a1a436f870d90824);

#if _DEBUG_REFCOUNTS
        if (cache_frame_ae0fee46d2d491a9a1a436f870d90824 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_ae0fee46d2d491a9a1a436f870d90824 = MAKE_FUNCTION_FRAME(codeobj_ae0fee46d2d491a9a1a436f870d90824, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_ae0fee46d2d491a9a1a436f870d90824->m_type_description == NULL);
    frame_ae0fee46d2d491a9a1a436f870d90824 = cache_frame_ae0fee46d2d491a9a1a436f870d90824;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_ae0fee46d2d491a9a1a436f870d90824);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_ae0fee46d2d491a9a1a436f870d90824) == 2); // Frame stack

    // Framed code:
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_call_result_1;
        int tmp_truth_name_1;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_called_instance_1 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2249;
        tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_startswith, &PyTuple_GET_ITEM(const_tuple_str_digest_13971ae58b983978540cbb4bbf3b1360_tuple, 0));

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2249;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_1);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_1);

            exception_lineno = 2249;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_1);
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_expression_name_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_right_name_1;
        CHECK_OBJECT(par_self);
        tmp_expression_name_1 = par_self;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_expression_name_1, const_str_plain_url_result);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2250;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_self);
        tmp_called_instance_2 = par_self;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2250;
        tmp_left_name_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_http_scheme);
        if (tmp_left_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 2250;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_right_name_1 = PyCell_GET(par_url);
        tmp_args_element_name_1 = BINARY_OPERATION_ADD_OBJECT_OBJECT_OBJECT(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_left_name_1);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 2250;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2250;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2250;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_1:;
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_instance_3;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_2;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urlparse);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_urlparse);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 32106 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2252;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_3 = tmp_mvar_value_1;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_2 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2252;
        {
            PyObject *call_args[] = {tmp_args_element_name_2};
            tmp_assign_source_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_3, const_str_plain_urlparse, call_args);
        }

        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2252;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_parsed_url == NULL);
        var_parsed_url = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_2;
        PyObject *tmp_operand_name_1;
        PyObject *tmp_expression_name_2;
        CHECK_OBJECT(var_parsed_url);
        tmp_expression_name_2 = var_parsed_url;
        tmp_operand_name_1 = LOOKUP_ATTRIBUTE(tmp_expression_name_2, const_str_plain_scheme);
        if (tmp_operand_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2253;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        Py_DECREF(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2253;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_2 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_instance_4;
        PyObject *tmp_expression_name_3;
        PyObject *tmp_expression_name_4;
        CHECK_OBJECT(par_self);
        tmp_expression_name_4 = par_self;
        tmp_expression_name_3 = LOOKUP_ATTRIBUTE(tmp_expression_name_4, const_str_plain__downloader);
        if (tmp_expression_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2254;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_expression_name_3, const_str_plain_params);
        Py_DECREF(tmp_expression_name_3);
        if (tmp_called_instance_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2254;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2254;
        tmp_assign_source_2 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_4, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_plain_default_search_tuple, 0));

        Py_DECREF(tmp_called_instance_4);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2254;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_default_search == NULL);
        var_default_search = tmp_assign_source_2;
    }
    {
        nuitka_bool tmp_condition_result_3;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        CHECK_OBJECT(var_default_search);
        tmp_compexpr_left_1 = var_default_search;
        tmp_compexpr_right_1 = Py_None;
        tmp_condition_result_3 = (tmp_compexpr_left_1 == tmp_compexpr_right_1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
    }
    branch_yes_3:;
    {
        PyObject *tmp_assign_source_3;
        tmp_assign_source_3 = const_str_plain_fixup_error;
        {
            PyObject *old = var_default_search;
            assert(old != NULL);
            var_default_search = tmp_assign_source_3;
            Py_INCREF(var_default_search);
            Py_DECREF(old);
        }

    }
    branch_no_3:;
    {
        nuitka_bool tmp_condition_result_4;
        PyObject *tmp_compexpr_left_2;
        PyObject *tmp_compexpr_right_2;
        CHECK_OBJECT(var_default_search);
        tmp_compexpr_left_2 = var_default_search;
        tmp_compexpr_right_2 = const_tuple_str_plain_auto_str_plain_auto_warning_str_plain_fixup_error_tuple;
        tmp_res = PySequence_Contains(tmp_compexpr_right_2, tmp_compexpr_left_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2258;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_4 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
            goto branch_yes_4;
        } else {
            goto branch_no_4;
        }
    }
    branch_yes_4:;
    {
        nuitka_bool tmp_condition_result_5;
        PyObject *tmp_called_instance_5;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_call_result_2;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_args_element_name_4;
        int tmp_truth_name_2;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2259;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_5 = tmp_mvar_value_2;
        tmp_args_element_name_3 = const_str_digest_11035f4bc30944276976e2005045c167;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_4 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2259;
        {
            PyObject *call_args[] = {tmp_args_element_name_3, tmp_args_element_name_4};
            tmp_call_result_2 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_5, const_str_plain_match, call_args);
        }

        if (tmp_call_result_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2259;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_2);
        if (tmp_truth_name_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_2);

            exception_lineno = 2259;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_5 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_2);
        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
            goto branch_yes_5;
        } else {
            goto branch_no_5;
        }
    }
    branch_yes_5:;
    {
        PyObject *tmp_called_instance_6;
        PyObject *tmp_expression_name_5;
        PyObject *tmp_call_result_3;
        CHECK_OBJECT(par_self);
        tmp_expression_name_5 = par_self;
        tmp_called_instance_6 = LOOKUP_ATTRIBUTE(tmp_expression_name_5, const_str_plain__downloader);
        if (tmp_called_instance_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2260;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2260;
        tmp_call_result_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_report_warning, &PyTuple_GET_ITEM(const_tuple_str_digest_351f365ebf58f977a34c02040a191f26_tuple, 0));

        Py_DECREF(tmp_called_instance_6);
        if (tmp_call_result_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2260;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_3);
    }
    {
        PyObject *tmp_called_name_2;
        PyObject *tmp_expression_name_6;
        PyObject *tmp_args_element_name_5;
        PyObject *tmp_left_name_2;
        PyObject *tmp_right_name_2;
        CHECK_OBJECT(par_self);
        tmp_expression_name_6 = par_self;
        tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_expression_name_6, const_str_plain_url_result);
        if (tmp_called_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2261;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_left_name_2 = const_str_digest_7c06a402579f6f9d9db7f3e04da983fc;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_right_name_2 = PyCell_GET(par_url);
        tmp_args_element_name_5 = BINARY_OPERATION_ADD_OBJECT_UNICODE_OBJECT(tmp_left_name_2, tmp_right_name_2);
        if (tmp_args_element_name_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_2);

            exception_lineno = 2261;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2261;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_5);
        Py_DECREF(tmp_called_name_2);
        Py_DECREF(tmp_args_element_name_5);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2261;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    goto branch_end_5;
    branch_no_5:;
    {
        nuitka_bool tmp_condition_result_6;
        PyObject *tmp_compexpr_left_3;
        PyObject *tmp_compexpr_right_3;
        PyObject *tmp_tmp_condition_result_6_object_1;
        int tmp_truth_name_3;
        CHECK_OBJECT(var_default_search);
        tmp_compexpr_left_3 = var_default_search;
        tmp_compexpr_right_3 = const_str_plain_fixup_error;
        tmp_tmp_condition_result_6_object_1 = RICH_COMPARE_NE_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
        if (tmp_tmp_condition_result_6_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2262;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_3 = CHECK_IF_TRUE(tmp_tmp_condition_result_6_object_1);
        if (tmp_truth_name_3 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_condition_result_6_object_1);

            exception_lineno = 2262;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_6 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_6_object_1);
        if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
            goto branch_yes_6;
        } else {
            goto branch_no_6;
        }
    }
    branch_yes_6:;
    {
        nuitka_bool tmp_condition_result_7;
        PyObject *tmp_compexpr_left_4;
        PyObject *tmp_compexpr_right_4;
        PyObject *tmp_tmp_condition_result_7_object_1;
        int tmp_truth_name_4;
        CHECK_OBJECT(var_default_search);
        tmp_compexpr_left_4 = var_default_search;
        tmp_compexpr_right_4 = const_str_plain_auto_warning;
        tmp_tmp_condition_result_7_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
        if (tmp_tmp_condition_result_7_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2263;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_4 = CHECK_IF_TRUE(tmp_tmp_condition_result_7_object_1);
        if (tmp_truth_name_4 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_condition_result_7_object_1);

            exception_lineno = 2263;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_7 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_7_object_1);
        if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
            goto branch_yes_7;
        } else {
            goto branch_no_7;
        }
    }
    branch_yes_7:;
    {
        nuitka_bool tmp_condition_result_8;
        PyObject *tmp_called_instance_7;
        PyObject *tmp_mvar_value_3;
        PyObject *tmp_call_result_4;
        PyObject *tmp_args_element_name_6;
        PyObject *tmp_args_element_name_7;
        int tmp_truth_name_5;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2264;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_7 = tmp_mvar_value_3;
        tmp_args_element_name_6 = const_str_digest_afcbdcf5978dcc4bd3b43a7eda927dba;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_7 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2264;
        {
            PyObject *call_args[] = {tmp_args_element_name_6, tmp_args_element_name_7};
            tmp_call_result_4 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_7, const_str_plain_match, call_args);
        }

        if (tmp_call_result_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2264;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_5 = CHECK_IF_TRUE(tmp_call_result_4);
        if (tmp_truth_name_5 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_4);

            exception_lineno = 2264;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_8 = tmp_truth_name_5 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_4);
        if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
            goto branch_yes_8;
        } else {
            goto branch_no_8;
        }
    }
    branch_yes_8:;
    {
        PyObject *tmp_raise_type_1;
        PyObject *tmp_called_name_3;
        PyObject *tmp_mvar_value_4;
        PyObject *tmp_args_name_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_left_name_3;
        PyObject *tmp_right_name_3;
        PyObject *tmp_kw_name_1;
        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ExtractorError);

        if (unlikely(tmp_mvar_value_4 == NULL)) {
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ExtractorError);
        }

        if (tmp_mvar_value_4 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 27135 ], 36, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2265;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_3 = tmp_mvar_value_4;
        tmp_left_name_3 = const_str_digest_8adc2b276326eb1aed172e8607dfd1a4;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_right_name_3 = PyCell_GET(par_url);
        tmp_tuple_element_1 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_left_name_3, tmp_right_name_3);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2266;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_name_1 = PyTuple_New(1);
        PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_1);
        tmp_kw_name_1 = PyDict_Copy(const_dict_5a4b43d9442068c8ed68fb42270f3fd3);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2265;
        tmp_raise_type_1 = CALL_FUNCTION(tmp_called_name_3, tmp_args_name_1, tmp_kw_name_1);
        Py_DECREF(tmp_args_name_1);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_raise_type_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2265;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        exception_type = tmp_raise_type_1;
        exception_lineno = 2265;
        RAISE_EXCEPTION_WITH_TYPE(&exception_type, &exception_value, &exception_tb);
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto frame_exception_exit_1;
    }
    goto branch_end_8;
    branch_no_8:;
    {
        PyObject *tmp_called_name_4;
        PyObject *tmp_expression_name_7;
        PyObject *tmp_expression_name_8;
        PyObject *tmp_call_result_5;
        PyObject *tmp_args_element_name_8;
        PyObject *tmp_left_name_4;
        PyObject *tmp_right_name_4;
        CHECK_OBJECT(par_self);
        tmp_expression_name_8 = par_self;
        tmp_expression_name_7 = LOOKUP_ATTRIBUTE(tmp_expression_name_8, const_str_plain__downloader);
        if (tmp_expression_name_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2269;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_name_4 = LOOKUP_ATTRIBUTE(tmp_expression_name_7, const_str_plain_report_warning);
        Py_DECREF(tmp_expression_name_7);
        if (tmp_called_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2269;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_left_name_4 = const_str_digest_63a99d65ced556dfdbf619945660d900;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_right_name_4 = PyCell_GET(par_url);
        tmp_args_element_name_8 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_left_name_4, tmp_right_name_4);
        if (tmp_args_element_name_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_4);

            exception_lineno = 2270;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2269;
        tmp_call_result_5 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_8);
        Py_DECREF(tmp_called_name_4);
        Py_DECREF(tmp_args_element_name_8);
        if (tmp_call_result_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2269;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_5);
    }
    branch_end_8:;
    branch_no_7:;
    {
        PyObject *tmp_called_name_5;
        PyObject *tmp_expression_name_9;
        PyObject *tmp_args_element_name_9;
        PyObject *tmp_left_name_5;
        PyObject *tmp_right_name_5;
        CHECK_OBJECT(par_self);
        tmp_expression_name_9 = par_self;
        tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_expression_name_9, const_str_plain_url_result);
        if (tmp_called_name_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2271;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_left_name_5 = const_str_digest_f3dd9bb810bab78a40fa56e67b2b6ba5;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_right_name_5 = PyCell_GET(par_url);
        tmp_args_element_name_9 = BINARY_OPERATION_ADD_OBJECT_UNICODE_OBJECT(tmp_left_name_5, tmp_right_name_5);
        if (tmp_args_element_name_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_5);

            exception_lineno = 2271;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2271;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_9);
        Py_DECREF(tmp_called_name_5);
        Py_DECREF(tmp_args_element_name_9);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2271;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_6:;
    branch_end_5:;
    branch_no_4:;
    {
        nuitka_bool tmp_condition_result_9;
        PyObject *tmp_compexpr_left_5;
        PyObject *tmp_compexpr_right_5;
        CHECK_OBJECT(var_default_search);
        tmp_compexpr_left_5 = var_default_search;
        tmp_compexpr_right_5 = const_tuple_str_plain_error_str_plain_fixup_error_tuple;
        tmp_res = PySequence_Contains(tmp_compexpr_right_5, tmp_compexpr_left_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2273;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_9 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
            goto branch_yes_9;
        } else {
            goto branch_no_9;
        }
    }
    branch_yes_9:;
    {
        PyObject *tmp_raise_type_2;
        PyObject *tmp_called_name_6;
        PyObject *tmp_mvar_value_5;
        PyObject *tmp_args_name_2;
        PyObject *tmp_tuple_element_2;
        PyObject *tmp_left_name_6;
        PyObject *tmp_right_name_6;
        PyObject *tmp_tuple_element_3;
        PyObject *tmp_kw_name_2;
        tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ExtractorError);

        if (unlikely(tmp_mvar_value_5 == NULL)) {
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ExtractorError);
        }

        if (tmp_mvar_value_5 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 27135 ], 36, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2274;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_6 = tmp_mvar_value_5;
        tmp_left_name_6 = const_str_digest_59dd2ba57ca71f90190de4216c2ca190;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_tuple_element_3 = PyCell_GET(par_url);
        tmp_right_name_6 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_3);
        PyTuple_SET_ITEM(tmp_right_name_6, 0, tmp_tuple_element_3);
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_tuple_element_3 = PyCell_GET(par_url);
        Py_INCREF(tmp_tuple_element_3);
        PyTuple_SET_ITEM(tmp_right_name_6, 1, tmp_tuple_element_3);
        tmp_tuple_element_2 = BINARY_OPERATION_MOD_OBJECT_UNICODE_TUPLE(tmp_left_name_6, tmp_right_name_6);
        Py_DECREF(tmp_right_name_6);
        if (tmp_tuple_element_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2275;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_name_2 = PyTuple_New(1);
        PyTuple_SET_ITEM(tmp_args_name_2, 0, tmp_tuple_element_2);
        tmp_kw_name_2 = PyDict_Copy(const_dict_5a4b43d9442068c8ed68fb42270f3fd3);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2274;
        tmp_raise_type_2 = CALL_FUNCTION(tmp_called_name_6, tmp_args_name_2, tmp_kw_name_2);
        Py_DECREF(tmp_args_name_2);
        Py_DECREF(tmp_kw_name_2);
        if (tmp_raise_type_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2274;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        exception_type = tmp_raise_type_2;
        exception_lineno = 2274;
        RAISE_EXCEPTION_WITH_TYPE(&exception_type, &exception_value, &exception_tb);
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto frame_exception_exit_1;
    }
    goto branch_end_9;
    branch_no_9:;
    {
        nuitka_bool tmp_condition_result_10;
        PyObject *tmp_compexpr_left_6;
        PyObject *tmp_compexpr_right_6;
        tmp_compexpr_left_6 = const_str_chr_58;
        CHECK_OBJECT(var_default_search);
        tmp_compexpr_right_6 = var_default_search;
        tmp_res = PySequence_Contains(tmp_compexpr_right_6, tmp_compexpr_left_6);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2279;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_10 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
            goto branch_yes_10;
        } else {
            goto branch_no_10;
        }
    }
    branch_yes_10:;
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_left_name_7;
        PyObject *tmp_right_name_7;
        CHECK_OBJECT(var_default_search);
        tmp_left_name_7 = var_default_search;
        tmp_right_name_7 = const_str_chr_58;
        tmp_result = BINARY_OPERATION_ADD_OBJECT_UNICODE_INPLACE(&tmp_left_name_7, tmp_right_name_7);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2280;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_4 = tmp_left_name_7;
        var_default_search = tmp_assign_source_4;

    }
    branch_no_10:;
    {
        PyObject *tmp_called_name_7;
        PyObject *tmp_expression_name_10;
        PyObject *tmp_args_element_name_10;
        PyObject *tmp_left_name_8;
        PyObject *tmp_right_name_8;
        CHECK_OBJECT(par_self);
        tmp_expression_name_10 = par_self;
        tmp_called_name_7 = LOOKUP_ATTRIBUTE(tmp_expression_name_10, const_str_plain_url_result);
        if (tmp_called_name_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2281;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (var_default_search == NULL) {
            Py_DECREF(tmp_called_name_7);
            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "default_search");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2281;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_left_name_8 = var_default_search;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_right_name_8 = PyCell_GET(par_url);
        tmp_args_element_name_10 = BINARY_OPERATION_ADD_OBJECT_OBJECT_OBJECT(tmp_left_name_8, tmp_right_name_8);
        if (tmp_args_element_name_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_7);

            exception_lineno = 2281;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2281;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_10);
        Py_DECREF(tmp_called_name_7);
        Py_DECREF(tmp_args_element_name_10);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2281;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_end_9:;
    branch_no_2:;
    // Tried code:
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_iter_arg_1;
        PyObject *tmp_called_name_8;
        PyObject *tmp_mvar_value_6;
        PyObject *tmp_args_element_name_11;
        tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unsmuggle_url);

        if (unlikely(tmp_mvar_value_6 == NULL)) {
            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unsmuggle_url);
        }

        if (tmp_mvar_value_6 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 35056 ], 35, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2283;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_2;
        }

        tmp_called_name_8 = tmp_mvar_value_6;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_11 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2283;
        tmp_iter_arg_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_8, tmp_args_element_name_11);
        if (tmp_iter_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2283;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_2;
        }
        tmp_assign_source_5 = MAKE_UNPACK_ITERATOR(tmp_iter_arg_1);
        Py_DECREF(tmp_iter_arg_1);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2283;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_2;
        }
        assert(tmp_tuple_unpack_1__source_iter == NULL);
        tmp_tuple_unpack_1__source_iter = tmp_assign_source_5;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_unpack_1;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_unpack_1 = tmp_tuple_unpack_1__source_iter;
        tmp_assign_source_6 = UNPACK_NEXT(tmp_unpack_1, 0, 2);
        if (tmp_assign_source_6 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 2283;
            goto try_except_handler_3;
        }
        assert(tmp_tuple_unpack_1__element_1 == NULL);
        tmp_tuple_unpack_1__element_1 = tmp_assign_source_6;
    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_unpack_2;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_unpack_2 = tmp_tuple_unpack_1__source_iter;
        tmp_assign_source_7 = UNPACK_NEXT(tmp_unpack_2, 1, 2);
        if (tmp_assign_source_7 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 2283;
            goto try_except_handler_3;
        }
        assert(tmp_tuple_unpack_1__element_2 == NULL);
        tmp_tuple_unpack_1__element_2 = tmp_assign_source_7;
    }
    {
        PyObject *tmp_iterator_name_1;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_iterator_name_1 = tmp_tuple_unpack_1__source_iter;
        // Check if iterator has left-over elements.
        CHECK_OBJECT(tmp_iterator_name_1); assert(HAS_ITERNEXT(tmp_iterator_name_1));

        tmp_iterator_attempt = (*Py_TYPE(tmp_iterator_name_1)->tp_iternext)(tmp_iterator_name_1);

        if (likely(tmp_iterator_attempt == NULL)) {
            PyObject *error = GET_ERROR_OCCURRED();

            if (error != NULL) {
                if (EXCEPTION_MATCH_BOOL_SINGLE(error, PyExc_StopIteration)) {
                    CLEAR_ERROR_OCCURRED();
                } else {
                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);

                    type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                    exception_lineno = 2283;
                    goto try_except_handler_3;
                }
            }
        } else {
            Py_DECREF(tmp_iterator_attempt);

            exception_type = PyExc_ValueError;
            Py_INCREF(PyExc_ValueError);
            exception_value = const_str_digest_fcf040720b88d60da4ce975010c44a3a;
            Py_INCREF(exception_value);
            exception_tb = NULL;

            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 2283;
            goto try_except_handler_3;
        }
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_3:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
    Py_DECREF(tmp_tuple_unpack_1__source_iter);
    tmp_tuple_unpack_1__source_iter = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto try_except_handler_2;
    // End of try:
    try_end_1:;
    goto try_end_2;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_tuple_unpack_1__element_1);
    tmp_tuple_unpack_1__element_1 = NULL;

    Py_XDECREF(tmp_tuple_unpack_1__element_2);
    tmp_tuple_unpack_1__element_2 = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto frame_exception_exit_1;
    // End of try:
    try_end_2:;
    CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
    Py_DECREF(tmp_tuple_unpack_1__source_iter);
    tmp_tuple_unpack_1__source_iter = NULL;

    {
        PyObject *tmp_assign_source_8;
        CHECK_OBJECT(tmp_tuple_unpack_1__element_1);
        tmp_assign_source_8 = tmp_tuple_unpack_1__element_1;
        {
            PyObject *old = PyCell_GET(par_url);
            PyCell_SET(par_url, tmp_assign_source_8);
            Py_INCREF(tmp_assign_source_8);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_1__element_1);
    tmp_tuple_unpack_1__element_1 = NULL;

    {
        PyObject *tmp_assign_source_9;
        CHECK_OBJECT(tmp_tuple_unpack_1__element_2);
        tmp_assign_source_9 = tmp_tuple_unpack_1__element_2;
        assert(var_smuggled_data == NULL);
        Py_INCREF(tmp_assign_source_9);
        var_smuggled_data = tmp_assign_source_9;
    }
    Py_XDECREF(tmp_tuple_unpack_1__element_2);
    tmp_tuple_unpack_1__element_2 = NULL;

    {
        PyObject *tmp_assign_source_10;
        tmp_assign_source_10 = Py_None;
        assert(var_force_videoid == NULL);
        Py_INCREF(tmp_assign_source_10);
        var_force_videoid = tmp_assign_source_10;
    }
    {
        PyObject *tmp_assign_source_11;
        int tmp_and_left_truth_1;
        PyObject *tmp_and_left_value_1;
        PyObject *tmp_and_right_value_1;
        PyObject *tmp_called_instance_8;
        CHECK_OBJECT(var_smuggled_data);
        tmp_and_left_value_1 = var_smuggled_data;
        tmp_and_left_truth_1 = CHECK_IF_TRUE(tmp_and_left_value_1);
        if (tmp_and_left_truth_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2285;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(var_smuggled_data);
        tmp_called_instance_8 = var_smuggled_data;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2285;
        tmp_and_right_value_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_8, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_plain_to_generic_tuple, 0));

        if (tmp_and_right_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2285;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_11 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        Py_INCREF(tmp_and_left_value_1);
        tmp_assign_source_11 = tmp_and_left_value_1;
        and_end_1:;
        assert(var_is_intentional == NULL);
        var_is_intentional = tmp_assign_source_11;
    }
    {
        nuitka_bool tmp_condition_result_11;
        int tmp_and_left_truth_2;
        nuitka_bool tmp_and_left_value_2;
        nuitka_bool tmp_and_right_value_2;
        int tmp_truth_name_6;
        PyObject *tmp_compexpr_left_7;
        PyObject *tmp_compexpr_right_7;
        CHECK_OBJECT(var_smuggled_data);
        tmp_truth_name_6 = CHECK_IF_TRUE(var_smuggled_data);
        if (tmp_truth_name_6 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2286;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_2 = tmp_truth_name_6 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_2 == 1) {
            goto and_right_2;
        } else {
            goto and_left_2;
        }
        and_right_2:;
        tmp_compexpr_left_7 = const_str_plain_force_videoid;
        CHECK_OBJECT(var_smuggled_data);
        tmp_compexpr_right_7 = var_smuggled_data;
        tmp_res = PySequence_Contains(tmp_compexpr_right_7, tmp_compexpr_left_7);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2286;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_2 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_11 = tmp_and_right_value_2;
        goto and_end_2;
        and_left_2:;
        tmp_condition_result_11 = tmp_and_left_value_2;
        and_end_2:;
        if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
            goto branch_yes_11;
        } else {
            goto branch_no_11;
        }
    }
    branch_yes_11:;
    {
        PyObject *tmp_assign_source_12;
        PyObject *tmp_expression_name_11;
        PyObject *tmp_subscript_name_1;
        CHECK_OBJECT(var_smuggled_data);
        tmp_expression_name_11 = var_smuggled_data;
        tmp_subscript_name_1 = const_str_plain_force_videoid;
        tmp_assign_source_12 = LOOKUP_SUBSCRIPT(tmp_expression_name_11, tmp_subscript_name_1);
        if (tmp_assign_source_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2287;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_force_videoid;
            assert(old != NULL);
            var_force_videoid = tmp_assign_source_12;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_13;
        CHECK_OBJECT(var_force_videoid);
        tmp_assign_source_13 = var_force_videoid;
        assert(var_video_id == NULL);
        Py_INCREF(tmp_assign_source_13);
        var_video_id = tmp_assign_source_13;
    }
    goto branch_end_11;
    branch_no_11:;
    {
        PyObject *tmp_assign_source_14;
        PyObject *tmp_called_instance_9;
        PyObject *tmp_args_element_name_12;
        CHECK_OBJECT(par_self);
        tmp_called_instance_9 = par_self;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_12 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2290;
        {
            PyObject *call_args[] = {tmp_args_element_name_12};
            tmp_assign_source_14 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_9, const_str_plain__generic_id, call_args);
        }

        if (tmp_assign_source_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2290;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_video_id == NULL);
        var_video_id = tmp_assign_source_14;
    }
    branch_end_11:;
    {
        PyObject *tmp_called_name_9;
        PyObject *tmp_expression_name_12;
        PyObject *tmp_call_result_6;
        PyObject *tmp_args_element_name_13;
        PyObject *tmp_left_name_9;
        PyObject *tmp_right_name_9;
        CHECK_OBJECT(par_self);
        tmp_expression_name_12 = par_self;
        tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_expression_name_12, const_str_plain_to_screen);
        if (tmp_called_name_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2292;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_left_name_9 = const_str_digest_5adc41b43b6b664ab16f36a102551a56;
        CHECK_OBJECT(var_video_id);
        tmp_right_name_9 = var_video_id;
        tmp_args_element_name_13 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_left_name_9, tmp_right_name_9);
        if (tmp_args_element_name_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_9);

            exception_lineno = 2292;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2292;
        tmp_call_result_6 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_9, tmp_args_element_name_13);
        Py_DECREF(tmp_called_name_9);
        Py_DECREF(tmp_args_element_name_13);
        if (tmp_call_result_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2292;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_6);
    }
    {
        PyObject *tmp_assign_source_15;
        PyObject *tmp_called_name_10;
        PyObject *tmp_mvar_value_7;
        PyObject *tmp_args_element_name_14;
        tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_HEADRequest);

        if (unlikely(tmp_mvar_value_7 == NULL)) {
            tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_HEADRequest);
        }

        if (tmp_mvar_value_7 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 36485 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2294;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_10 = tmp_mvar_value_7;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_14 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2294;
        tmp_assign_source_15 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_10, tmp_args_element_name_14);
        if (tmp_assign_source_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2294;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_head_req == NULL);
        var_head_req = tmp_assign_source_15;
    }
    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_called_name_11;
        PyObject *tmp_expression_name_13;
        PyObject *tmp_args_name_3;
        PyObject *tmp_tuple_element_4;
        PyObject *tmp_kw_name_3;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        PyObject *tmp_left_name_10;
        PyObject *tmp_right_name_10;
        PyObject *tmp_dict_key_3;
        PyObject *tmp_dict_value_3;
        CHECK_OBJECT(par_self);
        tmp_expression_name_13 = par_self;
        tmp_called_name_11 = LOOKUP_ATTRIBUTE(tmp_expression_name_13, const_str_plain__request_webpage);
        if (tmp_called_name_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2295;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_head_req);
        tmp_tuple_element_4 = var_head_req;
        tmp_args_name_3 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_4);
        PyTuple_SET_ITEM(tmp_args_name_3, 0, tmp_tuple_element_4);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_4 = var_video_id;
        Py_INCREF(tmp_tuple_element_4);
        PyTuple_SET_ITEM(tmp_args_name_3, 1, tmp_tuple_element_4);
        tmp_dict_key_1 = const_str_plain_note;
        tmp_dict_value_1 = Py_False;
        tmp_kw_name_3 = _PyDict_NewPresized( 3 );
        tmp_res = PyDict_SetItem(tmp_kw_name_3, tmp_dict_key_1, tmp_dict_value_1);
        assert(!(tmp_res != 0));
        tmp_dict_key_2 = const_str_plain_errnote;
        tmp_left_name_10 = const_str_digest_43b8524617521f1df696df0226831089;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_right_name_10 = PyCell_GET(par_url);
        tmp_dict_value_2 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_left_name_10, tmp_right_name_10);
        if (tmp_dict_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_11);
            Py_DECREF(tmp_args_name_3);
            Py_DECREF(tmp_kw_name_3);

            exception_lineno = 2297;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = PyDict_SetItem(tmp_kw_name_3, tmp_dict_key_2, tmp_dict_value_2);
        Py_DECREF(tmp_dict_value_2);
        assert(!(tmp_res != 0));
        tmp_dict_key_3 = const_str_plain_fatal;
        tmp_dict_value_3 = Py_False;
        tmp_res = PyDict_SetItem(tmp_kw_name_3, tmp_dict_key_3, tmp_dict_value_3);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2295;
        tmp_assign_source_16 = CALL_FUNCTION(tmp_called_name_11, tmp_args_name_3, tmp_kw_name_3);
        Py_DECREF(tmp_called_name_11);
        Py_DECREF(tmp_args_name_3);
        Py_DECREF(tmp_kw_name_3);
        if (tmp_assign_source_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2295;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_head_response == NULL);
        var_head_response = tmp_assign_source_16;
    }
    {
        nuitka_bool tmp_condition_result_12;
        PyObject *tmp_compexpr_left_8;
        PyObject *tmp_compexpr_right_8;
        CHECK_OBJECT(var_head_response);
        tmp_compexpr_left_8 = var_head_response;
        tmp_compexpr_right_8 = Py_False;
        tmp_condition_result_12 = (tmp_compexpr_left_8 != tmp_compexpr_right_8) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
            goto branch_yes_12;
        } else {
            goto branch_no_12;
        }
    }
    branch_yes_12:;
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_called_instance_10;
        CHECK_OBJECT(var_head_response);
        tmp_called_instance_10 = var_head_response;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2302;
        tmp_assign_source_17 = CALL_METHOD_NO_ARGS(tmp_called_instance_10, const_str_plain_geturl);
        if (tmp_assign_source_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2302;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_new_url == NULL);
        var_new_url = tmp_assign_source_17;
    }
    {
        nuitka_bool tmp_condition_result_13;
        PyObject *tmp_compexpr_left_9;
        PyObject *tmp_compexpr_right_9;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_compexpr_left_9 = PyCell_GET(par_url);
        CHECK_OBJECT(var_new_url);
        tmp_compexpr_right_9 = var_new_url;
        tmp_condition_result_13 = RICH_COMPARE_NE_NBOOL_OBJECT_OBJECT(tmp_compexpr_left_9, tmp_compexpr_right_9);
        if (tmp_condition_result_13 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2303;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
            goto branch_yes_13;
        } else {
            goto branch_no_13;
        }
    }
    branch_yes_13:;
    {
        PyObject *tmp_called_instance_11;
        PyObject *tmp_call_result_7;
        PyObject *tmp_args_element_name_15;
        CHECK_OBJECT(par_self);
        tmp_called_instance_11 = par_self;
        CHECK_OBJECT(var_new_url);
        tmp_args_element_name_15 = var_new_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2304;
        {
            PyObject *call_args[] = {tmp_args_element_name_15};
            tmp_call_result_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_11, const_str_plain_report_following_redirect, call_args);
        }

        if (tmp_call_result_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2304;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_7);
    }
    {
        nuitka_bool tmp_condition_result_14;
        int tmp_truth_name_7;
        CHECK_OBJECT(var_force_videoid);
        tmp_truth_name_7 = CHECK_IF_TRUE(var_force_videoid);
        if (tmp_truth_name_7 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2305;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_14 = tmp_truth_name_7 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
            goto branch_yes_14;
        } else {
            goto branch_no_14;
        }
    }
    branch_yes_14:;
    {
        PyObject *tmp_assign_source_18;
        PyObject *tmp_called_name_12;
        PyObject *tmp_mvar_value_8;
        PyObject *tmp_args_element_name_16;
        PyObject *tmp_args_element_name_17;
        PyObject *tmp_dict_key_4;
        PyObject *tmp_dict_value_4;
        tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_smuggle_url);

        if (unlikely(tmp_mvar_value_8 == NULL)) {
            tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_smuggle_url);
        }

        if (tmp_mvar_value_8 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 34727 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2306;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_12 = tmp_mvar_value_8;
        CHECK_OBJECT(var_new_url);
        tmp_args_element_name_16 = var_new_url;
        tmp_dict_key_4 = const_str_plain_force_videoid;
        CHECK_OBJECT(var_force_videoid);
        tmp_dict_value_4 = var_force_videoid;
        tmp_args_element_name_17 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_17, tmp_dict_key_4, tmp_dict_value_4);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2306;
        {
            PyObject *call_args[] = {tmp_args_element_name_16, tmp_args_element_name_17};
            tmp_assign_source_18 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_12, call_args);
        }

        Py_DECREF(tmp_args_element_name_17);
        if (tmp_assign_source_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2306;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_new_url;
            assert(old != NULL);
            var_new_url = tmp_assign_source_18;
            Py_DECREF(old);
        }

    }
    branch_no_14:;
    {
        PyObject *tmp_called_instance_12;
        PyObject *tmp_args_element_name_18;
        CHECK_OBJECT(par_self);
        tmp_called_instance_12 = par_self;
        CHECK_OBJECT(var_new_url);
        tmp_args_element_name_18 = var_new_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2308;
        {
            PyObject *call_args[] = {tmp_args_element_name_18};
            tmp_return_value = CALL_METHOD_WITH_ARGS1(tmp_called_instance_12, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2308;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_13:;
    branch_no_12:;
    {
        PyObject *tmp_assign_source_19;
        tmp_assign_source_19 = Py_None;
        assert(var_full_response == NULL);
        Py_INCREF(tmp_assign_source_19);
        var_full_response = tmp_assign_source_19;
    }
    {
        nuitka_bool tmp_condition_result_15;
        PyObject *tmp_compexpr_left_10;
        PyObject *tmp_compexpr_right_10;
        CHECK_OBJECT(var_head_response);
        tmp_compexpr_left_10 = var_head_response;
        tmp_compexpr_right_10 = Py_False;
        tmp_condition_result_15 = (tmp_compexpr_left_10 == tmp_compexpr_right_10) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
            goto branch_yes_15;
        } else {
            goto branch_no_15;
        }
    }
    branch_yes_15:;
    {
        PyObject *tmp_assign_source_20;
        PyObject *tmp_called_name_13;
        PyObject *tmp_mvar_value_9;
        PyObject *tmp_args_element_name_19;
        tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_sanitized_Request);

        if (unlikely(tmp_mvar_value_9 == NULL)) {
            tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_sanitized_Request);
        }

        if (tmp_mvar_value_9 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 27521 ], 39, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2312;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_13 = tmp_mvar_value_9;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_19 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2312;
        tmp_assign_source_20 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_13, tmp_args_element_name_19);
        if (tmp_assign_source_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2312;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_request == NULL);
        var_request = tmp_assign_source_20;
    }
    {
        PyObject *tmp_called_instance_13;
        PyObject *tmp_call_result_8;
        CHECK_OBJECT(var_request);
        tmp_called_instance_13 = var_request;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2313;
        tmp_call_result_8 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_13, const_str_plain_add_header, &PyTuple_GET_ITEM(const_tuple_str_digest_c17f72dfbfead5020b880ad5af8b007d_str_chr_42_tuple, 0));

        if (tmp_call_result_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2313;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_8);
    }
    {
        PyObject *tmp_assign_source_21;
        PyObject *tmp_called_instance_14;
        PyObject *tmp_args_element_name_20;
        PyObject *tmp_args_element_name_21;
        CHECK_OBJECT(par_self);
        tmp_called_instance_14 = par_self;
        CHECK_OBJECT(var_request);
        tmp_args_element_name_20 = var_request;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_21 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2314;
        {
            PyObject *call_args[] = {tmp_args_element_name_20, tmp_args_element_name_21};
            tmp_assign_source_21 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_14, const_str_plain__request_webpage, call_args);
        }

        if (tmp_assign_source_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2314;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_full_response;
            assert(old != NULL);
            var_full_response = tmp_assign_source_21;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_22;
        CHECK_OBJECT(var_full_response);
        tmp_assign_source_22 = var_full_response;
        {
            PyObject *old = var_head_response;
            assert(old != NULL);
            var_head_response = tmp_assign_source_22;
            Py_INCREF(var_head_response);
            Py_DECREF(old);
        }

    }
    branch_no_15:;
    {
        PyObject *tmp_assign_source_23;
        PyObject *tmp_dict_key_5;
        PyObject *tmp_dict_value_5;
        PyObject *tmp_dict_key_6;
        PyObject *tmp_dict_value_6;
        PyObject *tmp_called_instance_15;
        PyObject *tmp_args_element_name_22;
        PyObject *tmp_dict_key_7;
        PyObject *tmp_dict_value_7;
        PyObject *tmp_called_name_14;
        PyObject *tmp_mvar_value_10;
        PyObject *tmp_args_element_name_23;
        PyObject *tmp_called_instance_16;
        PyObject *tmp_expression_name_14;
        tmp_dict_key_5 = const_str_plain_id;
        CHECK_OBJECT(var_video_id);
        tmp_dict_value_5 = var_video_id;
        tmp_assign_source_23 = _PyDict_NewPresized( 3 );
        tmp_res = PyDict_SetItem(tmp_assign_source_23, tmp_dict_key_5, tmp_dict_value_5);
        assert(!(tmp_res != 0));
        tmp_dict_key_6 = const_str_plain_title;
        CHECK_OBJECT(par_self);
        tmp_called_instance_15 = par_self;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_22 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2319;
        {
            PyObject *call_args[] = {tmp_args_element_name_22};
            tmp_dict_value_6 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_15, const_str_plain__generic_title, call_args);
        }

        if (tmp_dict_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_assign_source_23);

            exception_lineno = 2319;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = PyDict_SetItem(tmp_assign_source_23, tmp_dict_key_6, tmp_dict_value_6);
        Py_DECREF(tmp_dict_value_6);
        assert(!(tmp_res != 0));
        tmp_dict_key_7 = const_str_plain_upload_date;
        tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unified_strdate);

        if (unlikely(tmp_mvar_value_10 == NULL)) {
            tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unified_strdate);
        }

        if (tmp_mvar_value_10 == NULL) {
            Py_DECREF(tmp_assign_source_23);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 34399 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2320;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_14 = tmp_mvar_value_10;
        CHECK_OBJECT(var_head_response);
        tmp_expression_name_14 = var_head_response;
        tmp_called_instance_16 = LOOKUP_ATTRIBUTE(tmp_expression_name_14, const_str_plain_headers);
        if (tmp_called_instance_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_assign_source_23);

            exception_lineno = 2320;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2320;
        tmp_args_element_name_23 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_16, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_digest_7d4c3598dac00d3e7208489ebb5ceaa4_tuple, 0));

        Py_DECREF(tmp_called_instance_16);
        if (tmp_args_element_name_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_assign_source_23);

            exception_lineno = 2320;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2320;
        tmp_dict_value_7 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_14, tmp_args_element_name_23);
        Py_DECREF(tmp_args_element_name_23);
        if (tmp_dict_value_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_assign_source_23);

            exception_lineno = 2320;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = PyDict_SetItem(tmp_assign_source_23, tmp_dict_key_7, tmp_dict_value_7);
        Py_DECREF(tmp_dict_value_7);
        assert(!(tmp_res != 0));
        assert(var_info_dict == NULL);
        var_info_dict = tmp_assign_source_23;
    }
    {
        PyObject *tmp_assign_source_24;
        PyObject *tmp_called_instance_17;
        PyObject *tmp_called_instance_18;
        PyObject *tmp_expression_name_15;
        CHECK_OBJECT(var_head_response);
        tmp_expression_name_15 = var_head_response;
        tmp_called_instance_18 = LOOKUP_ATTRIBUTE(tmp_expression_name_15, const_str_plain_headers);
        if (tmp_called_instance_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2324;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2324;
        tmp_called_instance_17 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_18, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_digest_6d6a615162e89eb148ba9bf8dbfc06d3_str_empty_tuple, 0));

        Py_DECREF(tmp_called_instance_18);
        if (tmp_called_instance_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2324;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2324;
        tmp_assign_source_24 = CALL_METHOD_NO_ARGS(tmp_called_instance_17, const_str_plain_lower);
        Py_DECREF(tmp_called_instance_17);
        if (tmp_assign_source_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2324;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_content_type == NULL);
        var_content_type = tmp_assign_source_24;
    }
    {
        PyObject *tmp_assign_source_25;
        PyObject *tmp_called_instance_19;
        PyObject *tmp_mvar_value_11;
        PyObject *tmp_args_element_name_24;
        PyObject *tmp_args_element_name_25;
        tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_11 == NULL)) {
            tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_11 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2325;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_19 = tmp_mvar_value_11;
        tmp_args_element_name_24 = const_str_digest_d41bb0f47c76ba5cccb1379bca98b38a;
        CHECK_OBJECT(var_content_type);
        tmp_args_element_name_25 = var_content_type;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2325;
        {
            PyObject *call_args[] = {tmp_args_element_name_24, tmp_args_element_name_25};
            tmp_assign_source_25 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_19, const_str_plain_match, call_args);
        }

        if (tmp_assign_source_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2325;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_m == NULL);
        var_m = tmp_assign_source_25;
    }
    {
        nuitka_bool tmp_condition_result_16;
        int tmp_truth_name_8;
        CHECK_OBJECT(var_m);
        tmp_truth_name_8 = CHECK_IF_TRUE(var_m);
        if (tmp_truth_name_8 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2326;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_16 = tmp_truth_name_8 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
            goto branch_yes_16;
        } else {
            goto branch_no_16;
        }
    }
    branch_yes_16:;
    {
        PyObject *tmp_assign_source_26;
        PyObject *tmp_called_name_15;
        PyObject *tmp_mvar_value_12;
        PyObject *tmp_args_element_name_26;
        PyObject *tmp_called_instance_20;
        tmp_mvar_value_12 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_str);

        if (unlikely(tmp_mvar_value_12 == NULL)) {
            tmp_mvar_value_12 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_str);
        }

        if (tmp_mvar_value_12 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 26637 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2327;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_15 = tmp_mvar_value_12;
        CHECK_OBJECT(var_m);
        tmp_called_instance_20 = var_m;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2327;
        tmp_args_element_name_26 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_20, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_format_id_tuple, 0));

        if (tmp_args_element_name_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2327;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2327;
        tmp_assign_source_26 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_15, tmp_args_element_name_26);
        Py_DECREF(tmp_args_element_name_26);
        if (tmp_assign_source_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2327;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_format_id == NULL);
        var_format_id = tmp_assign_source_26;
    }
    {
        nuitka_bool tmp_condition_result_17;
        PyObject *tmp_called_instance_21;
        PyObject *tmp_call_result_9;
        int tmp_truth_name_9;
        CHECK_OBJECT(var_format_id);
        tmp_called_instance_21 = var_format_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2328;
        tmp_call_result_9 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_21, const_str_plain_endswith, &PyTuple_GET_ITEM(const_tuple_str_plain_mpegurl_tuple, 0));

        if (tmp_call_result_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2328;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_9 = CHECK_IF_TRUE(tmp_call_result_9);
        if (tmp_truth_name_9 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_9);

            exception_lineno = 2328;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_17 = tmp_truth_name_9 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_9);
        if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
            goto branch_yes_17;
        } else {
            goto branch_no_17;
        }
    }
    branch_yes_17:;
    {
        PyObject *tmp_assign_source_27;
        PyObject *tmp_called_instance_22;
        PyObject *tmp_args_element_name_27;
        PyObject *tmp_args_element_name_28;
        PyObject *tmp_args_element_name_29;
        CHECK_OBJECT(par_self);
        tmp_called_instance_22 = par_self;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_27 = PyCell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_28 = var_video_id;
        tmp_args_element_name_29 = const_str_plain_mp4;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2329;
        {
            PyObject *call_args[] = {tmp_args_element_name_27, tmp_args_element_name_28, tmp_args_element_name_29};
            tmp_assign_source_27 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_22, const_str_plain__extract_m3u8_formats, call_args);
        }

        if (tmp_assign_source_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2329;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_formats == NULL);
        var_formats = tmp_assign_source_27;
    }
    goto branch_end_17;
    branch_no_17:;
    {
        nuitka_bool tmp_condition_result_18;
        PyObject *tmp_compexpr_left_11;
        PyObject *tmp_compexpr_right_11;
        PyObject *tmp_tmp_condition_result_18_object_1;
        int tmp_truth_name_10;
        CHECK_OBJECT(var_format_id);
        tmp_compexpr_left_11 = var_format_id;
        tmp_compexpr_right_11 = const_str_plain_f4m;
        tmp_tmp_condition_result_18_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_11, tmp_compexpr_right_11);
        if (tmp_tmp_condition_result_18_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2330;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_10 = CHECK_IF_TRUE(tmp_tmp_condition_result_18_object_1);
        if (tmp_truth_name_10 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_condition_result_18_object_1);

            exception_lineno = 2330;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_18 = tmp_truth_name_10 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_18_object_1);
        if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
            goto branch_yes_18;
        } else {
            goto branch_no_18;
        }
    }
    branch_yes_18:;
    {
        PyObject *tmp_assign_source_28;
        PyObject *tmp_called_instance_23;
        PyObject *tmp_args_element_name_30;
        PyObject *tmp_args_element_name_31;
        CHECK_OBJECT(par_self);
        tmp_called_instance_23 = par_self;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_30 = PyCell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_31 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2331;
        {
            PyObject *call_args[] = {tmp_args_element_name_30, tmp_args_element_name_31};
            tmp_assign_source_28 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_23, const_str_plain__extract_f4m_formats, call_args);
        }

        if (tmp_assign_source_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2331;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_formats == NULL);
        var_formats = tmp_assign_source_28;
    }
    goto branch_end_18;
    branch_no_18:;
    {
        PyObject *tmp_assign_source_29;
        PyObject *tmp_list_element_1;
        PyObject *tmp_dict_key_8;
        PyObject *tmp_dict_value_8;
        PyObject *tmp_dict_key_9;
        PyObject *tmp_dict_value_9;
        PyObject *tmp_dict_key_10;
        PyObject *tmp_dict_value_10;
        nuitka_bool tmp_condition_result_19;
        PyObject *tmp_compexpr_left_12;
        PyObject *tmp_compexpr_right_12;
        PyObject *tmp_called_instance_24;
        PyObject *tmp_tmp_condition_result_19_object_1;
        int tmp_truth_name_11;
        tmp_dict_key_8 = const_str_plain_format_id;
        CHECK_OBJECT(var_format_id);
        tmp_dict_value_8 = var_format_id;
        tmp_list_element_1 = _PyDict_NewPresized( 3 );
        tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_8, tmp_dict_value_8);
        assert(!(tmp_res != 0));
        tmp_dict_key_9 = const_str_plain_url;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_dict_value_9 = PyCell_GET(par_url);
        tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_9, tmp_dict_value_9);
        assert(!(tmp_res != 0));
        tmp_dict_key_10 = const_str_plain_vcodec;
        CHECK_OBJECT(var_m);
        tmp_called_instance_24 = var_m;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2336;
        tmp_compexpr_left_12 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_24, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_type_tuple, 0));

        if (tmp_compexpr_left_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_list_element_1);

            exception_lineno = 2336;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_12 = const_str_plain_audio;
        tmp_tmp_condition_result_19_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_12, tmp_compexpr_right_12);
        Py_DECREF(tmp_compexpr_left_12);
        if (tmp_tmp_condition_result_19_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_list_element_1);

            exception_lineno = 2336;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_11 = CHECK_IF_TRUE(tmp_tmp_condition_result_19_object_1);
        if (tmp_truth_name_11 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_list_element_1);
            Py_DECREF(tmp_tmp_condition_result_19_object_1);

            exception_lineno = 2336;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_19 = tmp_truth_name_11 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_19_object_1);
        if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_1;
        } else {
            goto condexpr_false_1;
        }
        condexpr_true_1:;
        tmp_dict_value_10 = const_str_plain_none;
        goto condexpr_end_1;
        condexpr_false_1:;
        tmp_dict_value_10 = Py_None;
        condexpr_end_1:;
        tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_10, tmp_dict_value_10);
        assert(!(tmp_res != 0));
        tmp_assign_source_29 = PyList_New(1);
        PyList_SET_ITEM(tmp_assign_source_29, 0, tmp_list_element_1);
        assert(var_formats == NULL);
        var_formats = tmp_assign_source_29;
    }
    tmp_dictset_value = Py_True;
    CHECK_OBJECT(var_info_dict);
    tmp_dictset_dict = var_info_dict;
    tmp_dictset_key = const_str_plain_direct;
    tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);
    assert(!(tmp_res != 0));
    branch_end_18:;
    branch_end_17:;
    {
        PyObject *tmp_called_name_16;
        PyObject *tmp_expression_name_16;
        PyObject *tmp_call_result_10;
        PyObject *tmp_args_element_name_32;
        CHECK_OBJECT(par_self);
        tmp_expression_name_16 = par_self;
        tmp_called_name_16 = LOOKUP_ATTRIBUTE(tmp_expression_name_16, const_str_plain__sort_formats);
        if (tmp_called_name_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2339;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (var_formats == NULL) {
            Py_DECREF(tmp_called_name_16);
            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "formats");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2339;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_name_32 = var_formats;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2339;
        tmp_call_result_10 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_16, tmp_args_element_name_32);
        Py_DECREF(tmp_called_name_16);
        if (tmp_call_result_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2339;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_10);
    }
    if (var_formats == NULL) {

        exception_type = PyExc_UnboundLocalError;
        Py_INCREF(exception_type);
        exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "formats");
        exception_tb = NULL;
        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
        CHAIN_EXCEPTION(exception_value);

        exception_lineno = 2340;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto frame_exception_exit_1;
    }

    tmp_dictset_value = var_formats;
    CHECK_OBJECT(var_info_dict);
    tmp_dictset_dict = var_info_dict;
    tmp_dictset_key = const_str_plain_formats;
    tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);
    assert(!(tmp_res != 0));
    CHECK_OBJECT(var_info_dict);
    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_16:;
    {
        nuitka_bool tmp_condition_result_20;
        int tmp_and_left_truth_3;
        nuitka_bool tmp_and_left_value_3;
        nuitka_bool tmp_and_right_value_3;
        PyObject *tmp_operand_name_2;
        PyObject *tmp_called_instance_25;
        PyObject *tmp_expression_name_17;
        PyObject *tmp_expression_name_18;
        PyObject *tmp_operand_name_3;
        CHECK_OBJECT(par_self);
        tmp_expression_name_18 = par_self;
        tmp_expression_name_17 = LOOKUP_ATTRIBUTE(tmp_expression_name_18, const_str_plain__downloader);
        if (tmp_expression_name_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2343;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_instance_25 = LOOKUP_ATTRIBUTE(tmp_expression_name_17, const_str_plain_params);
        Py_DECREF(tmp_expression_name_17);
        if (tmp_called_instance_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2343;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2343;
        tmp_operand_name_2 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_25, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_plain_test_false_tuple, 0));

        Py_DECREF(tmp_called_instance_25);
        if (tmp_operand_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2343;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
        Py_DECREF(tmp_operand_name_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2343;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_3 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_3 = tmp_and_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_3 == 1) {
            goto and_right_3;
        } else {
            goto and_left_3;
        }
        and_right_3:;
        CHECK_OBJECT(var_is_intentional);
        tmp_operand_name_3 = var_is_intentional;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2343;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_3 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_20 = tmp_and_right_value_3;
        goto and_end_3;
        and_left_3:;
        tmp_condition_result_20 = tmp_and_left_value_3;
        and_end_3:;
        if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
            goto branch_yes_19;
        } else {
            goto branch_no_19;
        }
    }
    branch_yes_19:;
    {
        PyObject *tmp_assign_source_30;
        PyObject *tmp_called_instance_26;
        PyObject *tmp_expression_name_19;
        PyObject *tmp_expression_name_20;
        CHECK_OBJECT(par_self);
        tmp_expression_name_20 = par_self;
        tmp_expression_name_19 = LOOKUP_ATTRIBUTE(tmp_expression_name_20, const_str_plain__downloader);
        if (tmp_expression_name_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2344;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_instance_26 = LOOKUP_ATTRIBUTE(tmp_expression_name_19, const_str_plain_params);
        Py_DECREF(tmp_expression_name_19);
        if (tmp_called_instance_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2344;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2344;
        tmp_assign_source_30 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_26, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_plain_force_generic_extractor_false_tuple, 0));

        Py_DECREF(tmp_called_instance_26);
        if (tmp_assign_source_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2344;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_force == NULL);
        var_force = tmp_assign_source_30;
    }
    {
        PyObject *tmp_called_name_17;
        PyObject *tmp_expression_name_21;
        PyObject *tmp_expression_name_22;
        PyObject *tmp_call_result_11;
        PyObject *tmp_args_element_name_33;
        PyObject *tmp_left_name_11;
        PyObject *tmp_right_name_11;
        nuitka_bool tmp_condition_result_21;
        int tmp_truth_name_12;
        CHECK_OBJECT(par_self);
        tmp_expression_name_22 = par_self;
        tmp_expression_name_21 = LOOKUP_ATTRIBUTE(tmp_expression_name_22, const_str_plain__downloader);
        if (tmp_expression_name_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2345;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_name_17 = LOOKUP_ATTRIBUTE(tmp_expression_name_21, const_str_plain_report_warning);
        Py_DECREF(tmp_expression_name_21);
        if (tmp_called_name_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2345;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_left_name_11 = const_str_digest_129811641a2de7670e633d32e6009481;
        CHECK_OBJECT(var_force);
        tmp_truth_name_12 = CHECK_IF_TRUE(var_force);
        if (tmp_truth_name_12 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_17);

            exception_lineno = 2346;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_21 = tmp_truth_name_12 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_2;
        } else {
            goto condexpr_false_2;
        }
        condexpr_true_2:;
        tmp_right_name_11 = const_str_plain_Forcing;
        goto condexpr_end_2;
        condexpr_false_2:;
        tmp_right_name_11 = const_str_digest_30d75a2497a8bdc614e4ecdd0ee1d4da;
        condexpr_end_2:;
        tmp_args_element_name_33 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_left_name_11, tmp_right_name_11);
        if (tmp_args_element_name_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_17);

            exception_lineno = 2346;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2345;
        tmp_call_result_11 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_17, tmp_args_element_name_33);
        Py_DECREF(tmp_called_name_17);
        Py_DECREF(tmp_args_element_name_33);
        if (tmp_call_result_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2345;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_11);
    }
    branch_no_19:;
    {
        nuitka_bool tmp_condition_result_22;
        PyObject *tmp_operand_name_4;
        CHECK_OBJECT(var_full_response);
        tmp_operand_name_4 = var_full_response;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2348;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_22 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_22 == NUITKA_BOOL_TRUE) {
            goto branch_yes_20;
        } else {
            goto branch_no_20;
        }
    }
    branch_yes_20:;
    {
        PyObject *tmp_assign_source_31;
        PyObject *tmp_called_name_18;
        PyObject *tmp_mvar_value_13;
        PyObject *tmp_args_element_name_34;
        tmp_mvar_value_13 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_sanitized_Request);

        if (unlikely(tmp_mvar_value_13 == NULL)) {
            tmp_mvar_value_13 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_sanitized_Request);
        }

        if (tmp_mvar_value_13 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 27521 ], 39, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2349;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_18 = tmp_mvar_value_13;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_34 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2349;
        tmp_assign_source_31 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_18, tmp_args_element_name_34);
        if (tmp_assign_source_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2349;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_request;
            var_request = tmp_assign_source_31;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_called_instance_27;
        PyObject *tmp_call_result_12;
        CHECK_OBJECT(var_request);
        tmp_called_instance_27 = var_request;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2358;
        tmp_call_result_12 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_27, const_str_plain_add_header, &PyTuple_GET_ITEM(const_tuple_str_digest_c17f72dfbfead5020b880ad5af8b007d_str_chr_42_tuple, 0));

        if (tmp_call_result_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2358;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_12);
    }
    {
        PyObject *tmp_assign_source_32;
        PyObject *tmp_called_instance_28;
        PyObject *tmp_args_element_name_35;
        PyObject *tmp_args_element_name_36;
        CHECK_OBJECT(par_self);
        tmp_called_instance_28 = par_self;
        CHECK_OBJECT(var_request);
        tmp_args_element_name_35 = var_request;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_36 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2359;
        {
            PyObject *call_args[] = {tmp_args_element_name_35, tmp_args_element_name_36};
            tmp_assign_source_32 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_28, const_str_plain__request_webpage, call_args);
        }

        if (tmp_assign_source_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2359;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_full_response;
            assert(old != NULL);
            var_full_response = tmp_assign_source_32;
            Py_DECREF(old);
        }

    }
    branch_no_20:;
    {
        PyObject *tmp_assign_source_33;
        PyObject *tmp_called_instance_29;
        if (var_full_response == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "full_response");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2361;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_29 = var_full_response;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2361;
        tmp_assign_source_33 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_29, const_str_plain_read, &PyTuple_GET_ITEM(const_tuple_int_pos_512_tuple, 0));

        if (tmp_assign_source_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2361;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_first_bytes == NULL);
        var_first_bytes = tmp_assign_source_33;
    }
    {
        nuitka_bool tmp_condition_result_23;
        PyObject *tmp_called_instance_30;
        PyObject *tmp_call_result_13;
        int tmp_truth_name_13;
        CHECK_OBJECT(var_first_bytes);
        tmp_called_instance_30 = var_first_bytes;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2364;
        tmp_call_result_13 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_30, const_str_plain_startswith, &PyTuple_GET_ITEM(const_tuple_bytes_digest_ee7a0fa75fbea109a316dc00e1bb7d31_tuple, 0));

        if (tmp_call_result_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2364;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_13 = CHECK_IF_TRUE(tmp_call_result_13);
        if (tmp_truth_name_13 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_13);

            exception_lineno = 2364;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_23 = tmp_truth_name_13 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_13);
        if (tmp_condition_result_23 == NUITKA_BOOL_TRUE) {
            goto branch_yes_21;
        } else {
            goto branch_no_21;
        }
    }
    branch_yes_21:;
    {
        PyObject *tmp_called_instance_31;
        PyObject *tmp_args_element_name_37;
        PyObject *tmp_args_element_name_38;
        PyObject *tmp_args_element_name_39;
        CHECK_OBJECT(par_self);
        tmp_called_instance_31 = par_self;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_37 = PyCell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_38 = var_video_id;
        tmp_args_element_name_39 = const_str_plain_mp4;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2365;
        {
            PyObject *call_args[] = {tmp_args_element_name_37, tmp_args_element_name_38, tmp_args_element_name_39};
            tmp_dictset_value = CALL_METHOD_WITH_ARGS3(tmp_called_instance_31, const_str_plain__extract_m3u8_formats, call_args);
        }

        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2365;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_dictset_dict = var_info_dict;
        tmp_dictset_key = const_str_plain_formats;
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    {
        PyObject *tmp_called_name_19;
        PyObject *tmp_expression_name_23;
        PyObject *tmp_call_result_14;
        PyObject *tmp_args_element_name_40;
        PyObject *tmp_dict_name_1;
        PyObject *tmp_key_name_1;
        CHECK_OBJECT(par_self);
        tmp_expression_name_23 = par_self;
        tmp_called_name_19 = LOOKUP_ATTRIBUTE(tmp_expression_name_23, const_str_plain__sort_formats);
        if (tmp_called_name_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2366;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_dict_name_1 = var_info_dict;
        tmp_key_name_1 = const_str_plain_formats;
        tmp_args_element_name_40 = DICT_GET_ITEM(tmp_dict_name_1, tmp_key_name_1);
        if (tmp_args_element_name_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_19);

            exception_lineno = 2366;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2366;
        tmp_call_result_14 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_19, tmp_args_element_name_40);
        Py_DECREF(tmp_called_name_19);
        Py_DECREF(tmp_args_element_name_40);
        if (tmp_call_result_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2366;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_14);
    }
    CHECK_OBJECT(var_info_dict);
    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_21:;
    {
        nuitka_bool tmp_condition_result_24;
        PyObject *tmp_operand_name_5;
        PyObject *tmp_called_name_20;
        PyObject *tmp_mvar_value_14;
        PyObject *tmp_args_element_name_41;
        tmp_mvar_value_14 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_is_html);

        if (unlikely(tmp_mvar_value_14 == NULL)) {
            tmp_mvar_value_14 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_is_html);
        }

        if (tmp_mvar_value_14 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40231 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2371;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_20 = tmp_mvar_value_14;
        CHECK_OBJECT(var_first_bytes);
        tmp_args_element_name_41 = var_first_bytes;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2371;
        tmp_operand_name_5 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_20, tmp_args_element_name_41);
        if (tmp_operand_name_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2371;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
        Py_DECREF(tmp_operand_name_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2371;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_24 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_24 == NUITKA_BOOL_TRUE) {
            goto branch_yes_22;
        } else {
            goto branch_no_22;
        }
    }
    branch_yes_22:;
    {
        PyObject *tmp_called_instance_32;
        PyObject *tmp_expression_name_24;
        PyObject *tmp_call_result_15;
        CHECK_OBJECT(par_self);
        tmp_expression_name_24 = par_self;
        tmp_called_instance_32 = LOOKUP_ATTRIBUTE(tmp_expression_name_24, const_str_plain__downloader);
        if (tmp_called_instance_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2372;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2372;
        tmp_call_result_15 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_32, const_str_plain_report_warning, &PyTuple_GET_ITEM(const_tuple_str_digest_74d01def66293c04a797c788fcd6d66b_tuple, 0));

        Py_DECREF(tmp_called_instance_32);
        if (tmp_call_result_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2372;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_15);
    }
    {
        PyObject *tmp_called_instance_33;
        PyObject *tmp_call_result_16;
        PyObject *tmp_args_element_name_42;
        PyObject *tmp_dict_key_11;
        PyObject *tmp_dict_value_11;
        PyObject *tmp_dict_key_12;
        PyObject *tmp_dict_value_12;
        CHECK_OBJECT(var_info_dict);
        tmp_called_instance_33 = var_info_dict;
        tmp_dict_key_11 = const_str_plain_direct;
        tmp_dict_value_11 = Py_True;
        tmp_args_element_name_42 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_42, tmp_dict_key_11, tmp_dict_value_11);
        assert(!(tmp_res != 0));
        tmp_dict_key_12 = const_str_plain_url;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_dict_value_12 = PyCell_GET(par_url);
        tmp_res = PyDict_SetItem(tmp_args_element_name_42, tmp_dict_key_12, tmp_dict_value_12);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2374;
        {
            PyObject *call_args[] = {tmp_args_element_name_42};
            tmp_call_result_16 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_33, const_str_plain_update, call_args);
        }

        Py_DECREF(tmp_args_element_name_42);
        if (tmp_call_result_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2374;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_16);
    }
    CHECK_OBJECT(var_info_dict);
    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_22:;
    {
        PyObject *tmp_assign_source_34;
        PyObject *tmp_called_name_21;
        PyObject *tmp_expression_name_25;
        PyObject *tmp_args_name_4;
        PyObject *tmp_tuple_element_5;
        PyObject *tmp_kw_name_4;
        PyObject *tmp_dict_key_13;
        PyObject *tmp_dict_value_13;
        CHECK_OBJECT(par_self);
        tmp_expression_name_25 = par_self;
        tmp_called_name_21 = LOOKUP_ATTRIBUTE(tmp_expression_name_25, const_str_plain__webpage_read_content);
        if (tmp_called_name_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2380;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (var_full_response == NULL) {
            Py_DECREF(tmp_called_name_21);
            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "full_response");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2381;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_tuple_element_5 = var_full_response;
        tmp_args_name_4 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_5);
        PyTuple_SET_ITEM(tmp_args_name_4, 0, tmp_tuple_element_5);
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_tuple_element_5 = PyCell_GET(par_url);
        Py_INCREF(tmp_tuple_element_5);
        PyTuple_SET_ITEM(tmp_args_name_4, 1, tmp_tuple_element_5);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_5 = var_video_id;
        Py_INCREF(tmp_tuple_element_5);
        PyTuple_SET_ITEM(tmp_args_name_4, 2, tmp_tuple_element_5);
        tmp_dict_key_13 = const_str_plain_prefix;
        CHECK_OBJECT(var_first_bytes);
        tmp_dict_value_13 = var_first_bytes;
        tmp_kw_name_4 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_4, tmp_dict_key_13, tmp_dict_value_13);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2380;
        tmp_assign_source_34 = CALL_FUNCTION(tmp_called_name_21, tmp_args_name_4, tmp_kw_name_4);
        Py_DECREF(tmp_called_name_21);
        Py_DECREF(tmp_args_name_4);
        Py_DECREF(tmp_kw_name_4);
        if (tmp_assign_source_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2380;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(PyCell_GET(var_webpage) == NULL);
        PyCell_SET(var_webpage, tmp_assign_source_34);

    }
    {
        PyObject *tmp_called_instance_34;
        PyObject *tmp_call_result_17;
        PyObject *tmp_args_element_name_43;
        CHECK_OBJECT(par_self);
        tmp_called_instance_34 = par_self;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_43 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2383;
        {
            PyObject *call_args[] = {tmp_args_element_name_43};
            tmp_call_result_17 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_34, const_str_plain_report_extraction, call_args);
        }

        if (tmp_call_result_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2383;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_17);
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_35;
        PyObject *tmp_called_name_22;
        PyObject *tmp_mvar_value_15;
        PyObject *tmp_args_element_name_44;
        PyObject *tmp_called_instance_35;
        tmp_mvar_value_15 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_etree_fromstring);

        if (unlikely(tmp_mvar_value_15 == NULL)) {
            tmp_mvar_value_15 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_etree_fromstring);
        }

        if (tmp_mvar_value_15 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 32183 ], 45, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2387;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_called_name_22 = tmp_mvar_value_15;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_called_instance_35 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2387;
        tmp_args_element_name_44 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_35, const_str_plain_encode, &PyTuple_GET_ITEM(const_tuple_str_digest_c075052d723d6707083e869a0e3659bb_tuple, 0));

        if (tmp_args_element_name_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2387;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2387;
        tmp_assign_source_35 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_22, tmp_args_element_name_44);
        Py_DECREF(tmp_args_element_name_44);
        if (tmp_assign_source_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2387;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        assert(var_doc == NULL);
        var_doc = tmp_assign_source_35;
    }
    {
        nuitka_bool tmp_condition_result_25;
        PyObject *tmp_compexpr_left_13;
        PyObject *tmp_compexpr_right_13;
        PyObject *tmp_expression_name_26;
        PyObject *tmp_tmp_condition_result_25_object_1;
        int tmp_truth_name_14;
        CHECK_OBJECT(var_doc);
        tmp_expression_name_26 = var_doc;
        tmp_compexpr_left_13 = LOOKUP_ATTRIBUTE(tmp_expression_name_26, const_str_plain_tag);
        if (tmp_compexpr_left_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2388;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_compexpr_right_13 = const_str_plain_rss;
        tmp_tmp_condition_result_25_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_13, tmp_compexpr_right_13);
        Py_DECREF(tmp_compexpr_left_13);
        if (tmp_tmp_condition_result_25_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2388;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_truth_name_14 = CHECK_IF_TRUE(tmp_tmp_condition_result_25_object_1);
        if (tmp_truth_name_14 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_condition_result_25_object_1);

            exception_lineno = 2388;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_25 = tmp_truth_name_14 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_25_object_1);
        if (tmp_condition_result_25 == NUITKA_BOOL_TRUE) {
            goto branch_yes_23;
        } else {
            goto branch_no_23;
        }
    }
    branch_yes_23:;
    {
        PyObject *tmp_called_instance_36;
        PyObject *tmp_args_element_name_45;
        PyObject *tmp_args_element_name_46;
        PyObject *tmp_args_element_name_47;
        CHECK_OBJECT(par_self);
        tmp_called_instance_36 = par_self;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_45 = PyCell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_46 = var_video_id;
        CHECK_OBJECT(var_doc);
        tmp_args_element_name_47 = var_doc;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2389;
        {
            PyObject *call_args[] = {tmp_args_element_name_45, tmp_args_element_name_46, tmp_args_element_name_47};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(tmp_called_instance_36, const_str_plain__extract_rss, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2389;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        goto frame_return_exit_1;
    }
    goto branch_end_23;
    branch_no_23:;
    {
        nuitka_bool tmp_condition_result_26;
        PyObject *tmp_compexpr_left_14;
        PyObject *tmp_compexpr_right_14;
        PyObject *tmp_expression_name_27;
        PyObject *tmp_tmp_condition_result_26_object_1;
        int tmp_truth_name_15;
        CHECK_OBJECT(var_doc);
        tmp_expression_name_27 = var_doc;
        tmp_compexpr_left_14 = LOOKUP_ATTRIBUTE(tmp_expression_name_27, const_str_plain_tag);
        if (tmp_compexpr_left_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2390;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_compexpr_right_14 = const_str_plain_SmoothStreamingMedia;
        tmp_tmp_condition_result_26_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_14, tmp_compexpr_right_14);
        Py_DECREF(tmp_compexpr_left_14);
        if (tmp_tmp_condition_result_26_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2390;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_truth_name_15 = CHECK_IF_TRUE(tmp_tmp_condition_result_26_object_1);
        if (tmp_truth_name_15 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_condition_result_26_object_1);

            exception_lineno = 2390;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_26 = tmp_truth_name_15 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_26_object_1);
        if (tmp_condition_result_26 == NUITKA_BOOL_TRUE) {
            goto branch_yes_24;
        } else {
            goto branch_no_24;
        }
    }
    branch_yes_24:;
    {
        PyObject *tmp_called_instance_37;
        PyObject *tmp_args_element_name_48;
        PyObject *tmp_args_element_name_49;
        CHECK_OBJECT(par_self);
        tmp_called_instance_37 = par_self;
        CHECK_OBJECT(var_doc);
        tmp_args_element_name_48 = var_doc;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_49 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2391;
        {
            PyObject *call_args[] = {tmp_args_element_name_48, tmp_args_element_name_49};
            tmp_dictset_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_37, const_str_plain__parse_ism_formats, call_args);
        }

        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2391;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_dictset_dict = var_info_dict;
        tmp_dictset_key = const_str_plain_formats;
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    {
        PyObject *tmp_called_name_23;
        PyObject *tmp_expression_name_28;
        PyObject *tmp_call_result_18;
        PyObject *tmp_args_element_name_50;
        PyObject *tmp_dict_name_2;
        PyObject *tmp_key_name_2;
        CHECK_OBJECT(par_self);
        tmp_expression_name_28 = par_self;
        tmp_called_name_23 = LOOKUP_ATTRIBUTE(tmp_expression_name_28, const_str_plain__sort_formats);
        if (tmp_called_name_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2392;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_dict_name_2 = var_info_dict;
        tmp_key_name_2 = const_str_plain_formats;
        tmp_args_element_name_50 = DICT_GET_ITEM(tmp_dict_name_2, tmp_key_name_2);
        if (tmp_args_element_name_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_23);

            exception_lineno = 2392;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2392;
        tmp_call_result_18 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_23, tmp_args_element_name_50);
        Py_DECREF(tmp_called_name_23);
        Py_DECREF(tmp_args_element_name_50);
        if (tmp_call_result_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2392;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        Py_DECREF(tmp_call_result_18);
    }
    CHECK_OBJECT(var_info_dict);
    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    goto branch_end_24;
    branch_no_24:;
    {
        nuitka_bool tmp_condition_result_27;
        PyObject *tmp_called_name_24;
        PyObject *tmp_expression_name_29;
        PyObject *tmp_mvar_value_16;
        PyObject *tmp_call_result_19;
        PyObject *tmp_args_element_name_51;
        PyObject *tmp_args_element_name_52;
        PyObject *tmp_expression_name_30;
        int tmp_truth_name_16;
        tmp_mvar_value_16 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_16 == NULL)) {
            tmp_mvar_value_16 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_16 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2394;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_expression_name_29 = tmp_mvar_value_16;
        tmp_called_name_24 = LOOKUP_ATTRIBUTE(tmp_expression_name_29, const_str_plain_match);
        if (tmp_called_name_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2394;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_args_element_name_51 = const_str_digest_db224856e028c9bb20c392f576ebbf8f;
        CHECK_OBJECT(var_doc);
        tmp_expression_name_30 = var_doc;
        tmp_args_element_name_52 = LOOKUP_ATTRIBUTE(tmp_expression_name_30, const_str_plain_tag);
        if (tmp_args_element_name_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_24);

            exception_lineno = 2394;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2394;
        {
            PyObject *call_args[] = {tmp_args_element_name_51, tmp_args_element_name_52};
            tmp_call_result_19 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_24, call_args);
        }

        Py_DECREF(tmp_called_name_24);
        Py_DECREF(tmp_args_element_name_52);
        if (tmp_call_result_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2394;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_truth_name_16 = CHECK_IF_TRUE(tmp_call_result_19);
        if (tmp_truth_name_16 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_19);

            exception_lineno = 2394;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_27 = tmp_truth_name_16 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_19);
        if (tmp_condition_result_27 == NUITKA_BOOL_TRUE) {
            goto branch_yes_25;
        } else {
            goto branch_no_25;
        }
    }
    branch_yes_25:;
    {
        PyObject *tmp_assign_source_36;
        PyObject *tmp_called_instance_38;
        PyObject *tmp_args_element_name_53;
        PyObject *tmp_args_element_name_54;
        PyObject *tmp_args_element_name_55;
        CHECK_OBJECT(par_self);
        tmp_called_instance_38 = par_self;
        CHECK_OBJECT(var_doc);
        tmp_args_element_name_53 = var_doc;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_54 = PyCell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_55 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2395;
        {
            PyObject *call_args[] = {tmp_args_element_name_53, tmp_args_element_name_54, tmp_args_element_name_55};
            tmp_assign_source_36 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_38, const_str_plain__parse_smil, call_args);
        }

        if (tmp_assign_source_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2395;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        assert(var_smil == NULL);
        var_smil = tmp_assign_source_36;
    }
    {
        PyObject *tmp_called_name_25;
        PyObject *tmp_expression_name_31;
        PyObject *tmp_call_result_20;
        PyObject *tmp_args_element_name_56;
        PyObject *tmp_expression_name_32;
        PyObject *tmp_subscript_name_2;
        CHECK_OBJECT(par_self);
        tmp_expression_name_31 = par_self;
        tmp_called_name_25 = LOOKUP_ATTRIBUTE(tmp_expression_name_31, const_str_plain__sort_formats);
        if (tmp_called_name_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2396;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_smil);
        tmp_expression_name_32 = var_smil;
        tmp_subscript_name_2 = const_str_plain_formats;
        tmp_args_element_name_56 = LOOKUP_SUBSCRIPT(tmp_expression_name_32, tmp_subscript_name_2);
        if (tmp_args_element_name_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_25);

            exception_lineno = 2396;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2396;
        tmp_call_result_20 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_25, tmp_args_element_name_56);
        Py_DECREF(tmp_called_name_25);
        Py_DECREF(tmp_args_element_name_56);
        if (tmp_call_result_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2396;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        Py_DECREF(tmp_call_result_20);
    }
    CHECK_OBJECT(var_smil);
    tmp_return_value = var_smil;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    goto branch_end_25;
    branch_no_25:;
    {
        nuitka_bool tmp_condition_result_28;
        PyObject *tmp_compexpr_left_15;
        PyObject *tmp_compexpr_right_15;
        PyObject *tmp_expression_name_33;
        PyObject *tmp_tmp_condition_result_28_object_1;
        int tmp_truth_name_17;
        CHECK_OBJECT(var_doc);
        tmp_expression_name_33 = var_doc;
        tmp_compexpr_left_15 = LOOKUP_ATTRIBUTE(tmp_expression_name_33, const_str_plain_tag);
        if (tmp_compexpr_left_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2398;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_compexpr_right_15 = const_str_digest_c6379db96003143d580b48637aca01cd;
        tmp_tmp_condition_result_28_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_15, tmp_compexpr_right_15);
        Py_DECREF(tmp_compexpr_left_15);
        if (tmp_tmp_condition_result_28_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2398;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_truth_name_17 = CHECK_IF_TRUE(tmp_tmp_condition_result_28_object_1);
        if (tmp_truth_name_17 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_condition_result_28_object_1);

            exception_lineno = 2398;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_28 = tmp_truth_name_17 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_28_object_1);
        if (tmp_condition_result_28 == NUITKA_BOOL_TRUE) {
            goto branch_yes_26;
        } else {
            goto branch_no_26;
        }
    }
    branch_yes_26:;
    {
        PyObject *tmp_called_name_26;
        PyObject *tmp_expression_name_34;
        PyObject *tmp_args_element_name_57;
        PyObject *tmp_called_name_27;
        PyObject *tmp_expression_name_35;
        PyObject *tmp_args_name_5;
        PyObject *tmp_tuple_element_6;
        PyObject *tmp_kw_name_5;
        PyObject *tmp_dict_key_14;
        PyObject *tmp_dict_value_14;
        PyObject *tmp_dict_key_15;
        PyObject *tmp_dict_value_15;
        PyObject *tmp_called_instance_39;
        PyObject *tmp_args_element_name_58;
        CHECK_OBJECT(par_self);
        tmp_expression_name_34 = par_self;
        tmp_called_name_26 = LOOKUP_ATTRIBUTE(tmp_expression_name_34, const_str_plain_playlist_result);
        if (tmp_called_name_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2399;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(par_self);
        tmp_expression_name_35 = par_self;
        tmp_called_name_27 = LOOKUP_ATTRIBUTE(tmp_expression_name_35, const_str_plain__parse_xspf);
        if (tmp_called_name_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_26);

            exception_lineno = 2400;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_doc);
        tmp_tuple_element_6 = var_doc;
        tmp_args_name_5 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_6);
        PyTuple_SET_ITEM(tmp_args_name_5, 0, tmp_tuple_element_6);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_6 = var_video_id;
        Py_INCREF(tmp_tuple_element_6);
        PyTuple_SET_ITEM(tmp_args_name_5, 1, tmp_tuple_element_6);
        tmp_dict_key_14 = const_str_plain_xspf_url;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_dict_value_14 = PyCell_GET(par_url);
        tmp_kw_name_5 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_5, tmp_dict_key_14, tmp_dict_value_14);
        assert(!(tmp_res != 0));
        tmp_dict_key_15 = const_str_plain_xspf_base_url;
        if (var_full_response == NULL) {
            Py_DECREF(tmp_called_name_26);
            Py_DECREF(tmp_called_name_27);
            Py_DECREF(tmp_args_name_5);
            Py_DECREF(tmp_kw_name_5);
            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "full_response");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2402;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_called_instance_39 = var_full_response;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2402;
        tmp_dict_value_15 = CALL_METHOD_NO_ARGS(tmp_called_instance_39, const_str_plain_geturl);
        if (tmp_dict_value_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_26);
            Py_DECREF(tmp_called_name_27);
            Py_DECREF(tmp_args_name_5);
            Py_DECREF(tmp_kw_name_5);

            exception_lineno = 2402;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_res = PyDict_SetItem(tmp_kw_name_5, tmp_dict_key_15, tmp_dict_value_15);
        Py_DECREF(tmp_dict_value_15);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2400;
        tmp_args_element_name_57 = CALL_FUNCTION(tmp_called_name_27, tmp_args_name_5, tmp_kw_name_5);
        Py_DECREF(tmp_called_name_27);
        Py_DECREF(tmp_args_name_5);
        Py_DECREF(tmp_kw_name_5);
        if (tmp_args_element_name_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_26);

            exception_lineno = 2400;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_58 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2399;
        {
            PyObject *call_args[] = {tmp_args_element_name_57, tmp_args_element_name_58};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_26, call_args);
        }

        Py_DECREF(tmp_called_name_26);
        Py_DECREF(tmp_args_element_name_57);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2399;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        goto frame_return_exit_1;
    }
    goto branch_end_26;
    branch_no_26:;
    {
        nuitka_bool tmp_condition_result_29;
        PyObject *tmp_called_name_28;
        PyObject *tmp_expression_name_36;
        PyObject *tmp_mvar_value_17;
        PyObject *tmp_call_result_21;
        PyObject *tmp_args_element_name_59;
        PyObject *tmp_args_element_name_60;
        PyObject *tmp_expression_name_37;
        int tmp_truth_name_18;
        tmp_mvar_value_17 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_17 == NULL)) {
            tmp_mvar_value_17 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_17 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2404;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_expression_name_36 = tmp_mvar_value_17;
        tmp_called_name_28 = LOOKUP_ATTRIBUTE(tmp_expression_name_36, const_str_plain_match);
        if (tmp_called_name_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2404;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_args_element_name_59 = const_str_digest_889e5f7e1e225877d5d0c909903fd5c1;
        CHECK_OBJECT(var_doc);
        tmp_expression_name_37 = var_doc;
        tmp_args_element_name_60 = LOOKUP_ATTRIBUTE(tmp_expression_name_37, const_str_plain_tag);
        if (tmp_args_element_name_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_28);

            exception_lineno = 2404;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2404;
        {
            PyObject *call_args[] = {tmp_args_element_name_59, tmp_args_element_name_60};
            tmp_call_result_21 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_28, call_args);
        }

        Py_DECREF(tmp_called_name_28);
        Py_DECREF(tmp_args_element_name_60);
        if (tmp_call_result_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2404;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_truth_name_18 = CHECK_IF_TRUE(tmp_call_result_21);
        if (tmp_truth_name_18 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_21);

            exception_lineno = 2404;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_29 = tmp_truth_name_18 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_21);
        if (tmp_condition_result_29 == NUITKA_BOOL_TRUE) {
            goto branch_yes_27;
        } else {
            goto branch_no_27;
        }
    }
    branch_yes_27:;
    {
        PyObject *tmp_called_name_29;
        PyObject *tmp_expression_name_38;
        PyObject *tmp_args_name_6;
        PyObject *tmp_tuple_element_7;
        PyObject *tmp_kw_name_6;
        PyObject *tmp_dict_key_16;
        PyObject *tmp_dict_value_16;
        PyObject *tmp_expression_name_39;
        PyObject *tmp_called_instance_40;
        PyObject *tmp_called_instance_41;
        PyObject *tmp_subscript_name_3;
        PyObject *tmp_dict_key_17;
        PyObject *tmp_dict_value_17;
        CHECK_OBJECT(par_self);
        tmp_expression_name_38 = par_self;
        tmp_called_name_29 = LOOKUP_ATTRIBUTE(tmp_expression_name_38, const_str_plain__parse_mpd_formats);
        if (tmp_called_name_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2405;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_doc);
        tmp_tuple_element_7 = var_doc;
        tmp_args_name_6 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_7);
        PyTuple_SET_ITEM(tmp_args_name_6, 0, tmp_tuple_element_7);
        tmp_dict_key_16 = const_str_plain_mpd_base_url;
        if (var_full_response == NULL) {
            Py_DECREF(tmp_called_name_29);
            Py_DECREF(tmp_args_name_6);
            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "full_response");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2407;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_called_instance_41 = var_full_response;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2407;
        tmp_called_instance_40 = CALL_METHOD_NO_ARGS(tmp_called_instance_41, const_str_plain_geturl);
        if (tmp_called_instance_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_29);
            Py_DECREF(tmp_args_name_6);

            exception_lineno = 2407;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2407;
        tmp_expression_name_39 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_40, const_str_plain_rpartition, &PyTuple_GET_ITEM(const_tuple_str_chr_47_tuple, 0));

        Py_DECREF(tmp_called_instance_40);
        if (tmp_expression_name_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_29);
            Py_DECREF(tmp_args_name_6);

            exception_lineno = 2407;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_subscript_name_3 = const_int_0;
        tmp_dict_value_16 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_name_39, tmp_subscript_name_3, 0);
        Py_DECREF(tmp_expression_name_39);
        if (tmp_dict_value_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_29);
            Py_DECREF(tmp_args_name_6);

            exception_lineno = 2407;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_kw_name_6 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_6, tmp_dict_key_16, tmp_dict_value_16);
        Py_DECREF(tmp_dict_value_16);
        assert(!(tmp_res != 0));
        tmp_dict_key_17 = const_str_plain_mpd_url;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_dict_value_17 = PyCell_GET(par_url);
        tmp_res = PyDict_SetItem(tmp_kw_name_6, tmp_dict_key_17, tmp_dict_value_17);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2405;
        tmp_dictset_value = CALL_FUNCTION(tmp_called_name_29, tmp_args_name_6, tmp_kw_name_6);
        Py_DECREF(tmp_called_name_29);
        Py_DECREF(tmp_args_name_6);
        Py_DECREF(tmp_kw_name_6);
        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2405;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_dictset_dict = var_info_dict;
        tmp_dictset_key = const_str_plain_formats;
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    {
        PyObject *tmp_called_name_30;
        PyObject *tmp_expression_name_40;
        PyObject *tmp_call_result_22;
        PyObject *tmp_args_element_name_61;
        PyObject *tmp_dict_name_3;
        PyObject *tmp_key_name_3;
        CHECK_OBJECT(par_self);
        tmp_expression_name_40 = par_self;
        tmp_called_name_30 = LOOKUP_ATTRIBUTE(tmp_expression_name_40, const_str_plain__sort_formats);
        if (tmp_called_name_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2409;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_dict_name_3 = var_info_dict;
        tmp_key_name_3 = const_str_plain_formats;
        tmp_args_element_name_61 = DICT_GET_ITEM(tmp_dict_name_3, tmp_key_name_3);
        if (tmp_args_element_name_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_30);

            exception_lineno = 2409;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2409;
        tmp_call_result_22 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_30, tmp_args_element_name_61);
        Py_DECREF(tmp_called_name_30);
        Py_DECREF(tmp_args_element_name_61);
        if (tmp_call_result_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2409;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        Py_DECREF(tmp_call_result_22);
    }
    CHECK_OBJECT(var_info_dict);
    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    goto branch_end_27;
    branch_no_27:;
    {
        nuitka_bool tmp_condition_result_30;
        PyObject *tmp_called_name_31;
        PyObject *tmp_expression_name_41;
        PyObject *tmp_mvar_value_18;
        PyObject *tmp_call_result_23;
        PyObject *tmp_args_element_name_62;
        PyObject *tmp_args_element_name_63;
        PyObject *tmp_expression_name_42;
        int tmp_truth_name_19;
        tmp_mvar_value_18 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_18 == NULL)) {
            tmp_mvar_value_18 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_18 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_expression_name_41 = tmp_mvar_value_18;
        tmp_called_name_31 = LOOKUP_ATTRIBUTE(tmp_expression_name_41, const_str_plain_match);
        if (tmp_called_name_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_args_element_name_62 = const_str_digest_92b850c91a3e8d5ad8648ee4afd7a65b;
        CHECK_OBJECT(var_doc);
        tmp_expression_name_42 = var_doc;
        tmp_args_element_name_63 = LOOKUP_ATTRIBUTE(tmp_expression_name_42, const_str_plain_tag);
        if (tmp_args_element_name_63 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_31);

            exception_lineno = 2411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2411;
        {
            PyObject *call_args[] = {tmp_args_element_name_62, tmp_args_element_name_63};
            tmp_call_result_23 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_31, call_args);
        }

        Py_DECREF(tmp_called_name_31);
        Py_DECREF(tmp_args_element_name_63);
        if (tmp_call_result_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_truth_name_19 = CHECK_IF_TRUE(tmp_call_result_23);
        if (tmp_truth_name_19 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_23);

            exception_lineno = 2411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_30 = tmp_truth_name_19 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_23);
        if (tmp_condition_result_30 == NUITKA_BOOL_TRUE) {
            goto branch_yes_28;
        } else {
            goto branch_no_28;
        }
    }
    branch_yes_28:;
    {
        PyObject *tmp_called_instance_42;
        PyObject *tmp_args_element_name_64;
        PyObject *tmp_args_element_name_65;
        PyObject *tmp_args_element_name_66;
        CHECK_OBJECT(par_self);
        tmp_called_instance_42 = par_self;
        CHECK_OBJECT(var_doc);
        tmp_args_element_name_64 = var_doc;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_65 = PyCell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_66 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2412;
        {
            PyObject *call_args[] = {tmp_args_element_name_64, tmp_args_element_name_65, tmp_args_element_name_66};
            tmp_dictset_value = CALL_METHOD_WITH_ARGS3(tmp_called_instance_42, const_str_plain__parse_f4m_formats, call_args);
        }

        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2412;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_dictset_dict = var_info_dict;
        tmp_dictset_key = const_str_plain_formats;
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    {
        PyObject *tmp_called_name_32;
        PyObject *tmp_expression_name_43;
        PyObject *tmp_call_result_24;
        PyObject *tmp_args_element_name_67;
        PyObject *tmp_dict_name_4;
        PyObject *tmp_key_name_4;
        CHECK_OBJECT(par_self);
        tmp_expression_name_43 = par_self;
        tmp_called_name_32 = LOOKUP_ATTRIBUTE(tmp_expression_name_43, const_str_plain__sort_formats);
        if (tmp_called_name_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2413;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_dict_name_4 = var_info_dict;
        tmp_key_name_4 = const_str_plain_formats;
        tmp_args_element_name_67 = DICT_GET_ITEM(tmp_dict_name_4, tmp_key_name_4);
        if (tmp_args_element_name_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_32);

            exception_lineno = 2413;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2413;
        tmp_call_result_24 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_32, tmp_args_element_name_67);
        Py_DECREF(tmp_called_name_32);
        Py_DECREF(tmp_args_element_name_67);
        if (tmp_call_result_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2413;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        Py_DECREF(tmp_call_result_24);
    }
    CHECK_OBJECT(var_info_dict);
    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_28:;
    branch_end_27:;
    branch_end_26:;
    branch_end_25:;
    branch_end_24:;
    branch_end_23:;
    goto try_end_3;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Preserve existing published exception.
    exception_preserved_type_1 = EXC_TYPE(PyThreadState_GET());
    Py_XINCREF(exception_preserved_type_1);
    exception_preserved_value_1 = EXC_VALUE(PyThreadState_GET());
    Py_XINCREF(exception_preserved_value_1);
    exception_preserved_tb_1 = (PyTracebackObject *)EXC_TRACEBACK(PyThreadState_GET());
    Py_XINCREF(exception_preserved_tb_1);

    if (exception_keeper_tb_3 == NULL) {
        exception_keeper_tb_3 = MAKE_TRACEBACK(frame_ae0fee46d2d491a9a1a436f870d90824, exception_keeper_lineno_3);
    } else if (exception_keeper_lineno_3 != 0) {
        exception_keeper_tb_3 = ADD_TRACEBACK(exception_keeper_tb_3, frame_ae0fee46d2d491a9a1a436f870d90824, exception_keeper_lineno_3);
    }

    NORMALIZE_EXCEPTION(&exception_keeper_type_3, &exception_keeper_value_3, &exception_keeper_tb_3);
    PyException_SetTraceback(exception_keeper_value_3, (PyObject *)exception_keeper_tb_3);
    PUBLISH_EXCEPTION(&exception_keeper_type_3, &exception_keeper_value_3, &exception_keeper_tb_3);
    // Tried code:
    {
        nuitka_bool tmp_condition_result_31;
        PyObject *tmp_compexpr_left_16;
        PyObject *tmp_compexpr_right_16;
        PyObject *tmp_mvar_value_19;
        tmp_compexpr_left_16 = EXC_TYPE(PyThreadState_GET());
        tmp_mvar_value_19 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_xml_parse_error);

        if (unlikely(tmp_mvar_value_19 == NULL)) {
            tmp_mvar_value_19 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_xml_parse_error);
        }

        if (tmp_mvar_value_19 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 36653 ], 44, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2415;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_5;
        }

        tmp_compexpr_right_16 = tmp_mvar_value_19;
        tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_16, tmp_compexpr_right_16);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2415;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_31 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_31 == NUITKA_BOOL_TRUE) {
            goto branch_yes_29;
        } else {
            goto branch_no_29;
        }
    }
    branch_yes_29:;
    tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
    if (unlikely(tmp_result == false)) {
        exception_lineno = 2386;
    }

    if (exception_tb && exception_tb->tb_frame == &frame_ae0fee46d2d491a9a1a436f870d90824->m_frame) frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = exception_tb->tb_lineno;
    type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
    goto try_except_handler_5;
    branch_no_29:;
    goto try_end_4;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Restore previous exception.
    SET_CURRENT_EXCEPTION(exception_preserved_type_1, exception_preserved_value_1, exception_preserved_tb_1);
    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;
    // Restore previous exception.
    SET_CURRENT_EXCEPTION(exception_preserved_type_1, exception_preserved_value_1, exception_preserved_tb_1);
    goto try_end_3;
    NUITKA_CANNOT_GET_HERE("exception handler codes exits in all cases");
    return NULL;
    // End of try:
    try_end_3:;
    {
        PyObject *tmp_assign_source_37;
        PyObject *tmp_called_instance_43;
        PyObject *tmp_args_element_name_68;
        PyObject *tmp_args_element_name_69;
        PyObject *tmp_args_element_name_70;
        CHECK_OBJECT(par_self);
        tmp_called_instance_43 = par_self;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_68 = PyCell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_69 = var_video_id;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_70 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2419;
        {
            PyObject *call_args[] = {tmp_args_element_name_68, tmp_args_element_name_69, tmp_args_element_name_70};
            tmp_assign_source_37 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_43, const_str_plain__extract_camtasia, call_args);
        }

        if (tmp_assign_source_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2419;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_camtasia_res == NULL);
        var_camtasia_res = tmp_assign_source_37;
    }
    {
        nuitka_bool tmp_condition_result_32;
        PyObject *tmp_compexpr_left_17;
        PyObject *tmp_compexpr_right_17;
        CHECK_OBJECT(var_camtasia_res);
        tmp_compexpr_left_17 = var_camtasia_res;
        tmp_compexpr_right_17 = Py_None;
        tmp_condition_result_32 = (tmp_compexpr_left_17 != tmp_compexpr_right_17) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_32 == NUITKA_BOOL_TRUE) {
            goto branch_yes_30;
        } else {
            goto branch_no_30;
        }
    }
    branch_yes_30:;
    CHECK_OBJECT(var_camtasia_res);
    tmp_return_value = var_camtasia_res;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_30:;
    {
        PyObject *tmp_assign_source_38;
        PyObject *tmp_called_name_33;
        PyObject *tmp_mvar_value_20;
        PyObject *tmp_args_element_name_71;
        tmp_mvar_value_20 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urllib_parse_unquote);

        if (unlikely(tmp_mvar_value_20 == NULL)) {
            tmp_mvar_value_20 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_urllib_parse_unquote);
        }

        if (tmp_mvar_value_20 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 30224 ], 49, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2426;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_33 = tmp_mvar_value_20;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_71 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2426;
        tmp_assign_source_38 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_33, tmp_args_element_name_71);
        if (tmp_assign_source_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2426;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = PyCell_GET(var_webpage);
            PyCell_SET(var_webpage, tmp_assign_source_38);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_39;
        PyObject *tmp_called_instance_44;
        PyObject *tmp_mvar_value_21;
        PyObject *tmp_args_element_name_72;
        PyObject *tmp_args_element_name_73;
        PyObject *tmp_args_element_name_74;
        tmp_mvar_value_21 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_21 == NULL)) {
            tmp_mvar_value_21 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_21 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2430;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_44 = tmp_mvar_value_21;
        tmp_args_element_name_72 = const_str_digest_c51171831e0b12acfa03019ee9e09c39;
        tmp_args_element_name_73 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_1_lambda();



        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_74 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2430;
        {
            PyObject *call_args[] = {tmp_args_element_name_72, tmp_args_element_name_73, tmp_args_element_name_74};
            tmp_assign_source_39 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_44, const_str_plain_sub, call_args);
        }

        Py_DECREF(tmp_args_element_name_73);
        if (tmp_assign_source_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2430;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = PyCell_GET(var_webpage);
            PyCell_SET(var_webpage, tmp_assign_source_39);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_40;
        int tmp_or_left_truth_1;
        PyObject *tmp_or_left_value_1;
        PyObject *tmp_or_right_value_1;
        PyObject *tmp_called_name_34;
        PyObject *tmp_expression_name_44;
        PyObject *tmp_args_name_7;
        PyObject *tmp_tuple_element_8;
        PyObject *tmp_kw_name_7;
        PyObject *tmp_called_name_35;
        PyObject *tmp_expression_name_45;
        PyObject *tmp_args_name_8;
        PyObject *tmp_tuple_element_9;
        PyObject *tmp_kw_name_8;
        CHECK_OBJECT(par_self);
        tmp_expression_name_44 = par_self;
        tmp_called_name_34 = LOOKUP_ATTRIBUTE(tmp_expression_name_44, const_str_plain__og_search_title);
        if (tmp_called_name_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2440;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_tuple_element_8 = PyCell_GET(var_webpage);
        tmp_args_name_7 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_8);
        PyTuple_SET_ITEM(tmp_args_name_7, 0, tmp_tuple_element_8);
        tmp_kw_name_7 = PyDict_Copy(const_dict_6dc2f89fb2b035a2c0a0ed28a753f1c8);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2440;
        tmp_or_left_value_1 = CALL_FUNCTION(tmp_called_name_34, tmp_args_name_7, tmp_kw_name_7);
        Py_DECREF(tmp_called_name_34);
        Py_DECREF(tmp_args_name_7);
        Py_DECREF(tmp_kw_name_7);
        if (tmp_or_left_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2440;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_1 = CHECK_IF_TRUE(tmp_or_left_value_1);
        if (tmp_or_left_truth_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_1);

            exception_lineno = 2441;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        Py_DECREF(tmp_or_left_value_1);
        CHECK_OBJECT(par_self);
        tmp_expression_name_45 = par_self;
        tmp_called_name_35 = LOOKUP_ATTRIBUTE(tmp_expression_name_45, const_str_plain__html_search_regex);
        if (tmp_called_name_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2441;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_tuple_element_9 = const_str_digest_4101a64072cf00c72bdae7876063954d;
        tmp_args_name_8 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_9);
        PyTuple_SET_ITEM(tmp_args_name_8, 0, tmp_tuple_element_9);
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_tuple_element_9 = PyCell_GET(var_webpage);
        Py_INCREF(tmp_tuple_element_9);
        PyTuple_SET_ITEM(tmp_args_name_8, 1, tmp_tuple_element_9);
        tmp_tuple_element_9 = const_str_digest_dce73292f74345a14978019773fa3414;
        Py_INCREF(tmp_tuple_element_9);
        PyTuple_SET_ITEM(tmp_args_name_8, 2, tmp_tuple_element_9);
        tmp_kw_name_8 = PyDict_Copy(const_dict_deacca5558dc6b932e957e44a8e0b0d5);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2441;
        tmp_or_right_value_1 = CALL_FUNCTION(tmp_called_name_35, tmp_args_name_8, tmp_kw_name_8);
        Py_DECREF(tmp_called_name_35);
        Py_DECREF(tmp_args_name_8);
        Py_DECREF(tmp_kw_name_8);
        if (tmp_or_right_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2441;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_40 = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        tmp_assign_source_40 = tmp_or_left_value_1;
        or_end_1:;
        assert(var_video_title == NULL);
        var_video_title = tmp_assign_source_40;
    }
    {
        PyObject *tmp_assign_source_41;
        PyObject *tmp_called_instance_45;
        PyObject *tmp_args_element_name_75;
        CHECK_OBJECT(par_self);
        tmp_called_instance_45 = par_self;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_75 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2446;
        {
            PyObject *call_args[] = {tmp_args_element_name_75};
            tmp_assign_source_41 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_45, const_str_plain__rta_search, call_args);
        }

        if (tmp_assign_source_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2446;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_age_limit == NULL);
        var_age_limit = tmp_assign_source_41;
    }
    {
        PyObject *tmp_assign_source_42;
        tmp_assign_source_42 = LIST_COPY(const_list_str_digest_db5aa34d961100e7e37734b09961ebd8_list);
        assert(var_AGE_LIMIT_MARKERS == NULL);
        var_AGE_LIMIT_MARKERS = tmp_assign_source_42;
    }
    {
        nuitka_bool tmp_condition_result_33;
        PyObject *tmp_any_arg_1;
        PyObject *tmp_capi_result_1;
        int tmp_truth_name_20;
        {
            PyObject *tmp_assign_source_43;
            PyObject *tmp_iter_arg_2;
            CHECK_OBJECT(var_AGE_LIMIT_MARKERS);
            tmp_iter_arg_2 = var_AGE_LIMIT_MARKERS;
            tmp_assign_source_43 = MAKE_ITERATOR(tmp_iter_arg_2);
            if (tmp_assign_source_43 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2452;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_genexpr_1__$0 == NULL);
            tmp_genexpr_1__$0 = tmp_assign_source_43;
        }
        // Tried code:
        tmp_any_arg_1 = youtube_dl$extractor$generic$$$function_4__real_extract$$$genexpr_1_genexpr_maker();

        ((struct Nuitka_GeneratorObject *)tmp_any_arg_1)->m_closure[0] = PyCell_NEW0(tmp_genexpr_1__$0);
        ((struct Nuitka_GeneratorObject *)tmp_any_arg_1)->m_closure[1] = var_webpage;
        Py_INCREF(((struct Nuitka_GeneratorObject *)tmp_any_arg_1)->m_closure[1]);


        goto try_return_handler_6;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_6:;
        CHECK_OBJECT(tmp_genexpr_1__$0);
        Py_DECREF(tmp_genexpr_1__$0);
        tmp_genexpr_1__$0 = NULL;

        goto outline_result_1;
        // End of try:
        CHECK_OBJECT(tmp_genexpr_1__$0);
        Py_DECREF(tmp_genexpr_1__$0);
        tmp_genexpr_1__$0 = NULL;

        NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
        return NULL;
        outline_result_1:;
        tmp_capi_result_1 = BUILTIN_ANY(tmp_any_arg_1);
        Py_DECREF(tmp_any_arg_1);
        if (tmp_capi_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2452;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_20 = CHECK_IF_TRUE(tmp_capi_result_1);
        if (tmp_truth_name_20 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_capi_result_1);

            exception_lineno = 2452;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_33 = tmp_truth_name_20 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_capi_result_1);
        if (tmp_condition_result_33 == NUITKA_BOOL_TRUE) {
            goto branch_yes_31;
        } else {
            goto branch_no_31;
        }
    }
    branch_yes_31:;
    {
        PyObject *tmp_assign_source_44;
        tmp_assign_source_44 = const_int_pos_18;
        {
            PyObject *old = var_age_limit;
            assert(old != NULL);
            var_age_limit = tmp_assign_source_44;
            Py_INCREF(var_age_limit);
            Py_DECREF(old);
        }

    }
    branch_no_31:;
    {
        PyObject *tmp_assign_source_45;
        PyObject *tmp_called_instance_46;
        PyObject *tmp_args_element_name_76;
        PyObject *tmp_args_element_name_77;
        PyObject *tmp_args_element_name_78;
        CHECK_OBJECT(par_self);
        tmp_called_instance_46 = par_self;
        tmp_args_element_name_76 = const_str_digest_0a9cfa0f350468c7282063ef2b61a6d7;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_77 = PyCell_GET(par_url);
        tmp_args_element_name_78 = const_str_digest_1d3469e8bdddf4ea4e52337d4bf22433;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2456;
        {
            PyObject *call_args[] = {tmp_args_element_name_76, tmp_args_element_name_77, tmp_args_element_name_78};
            tmp_assign_source_45 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_46, const_str_plain__search_regex, call_args);
        }

        if (tmp_assign_source_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2456;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_video_uploader == NULL);
        var_video_uploader = tmp_assign_source_45;
    }
    {
        PyObject *tmp_assign_source_46;
        PyObject *tmp_called_name_36;
        PyObject *tmp_expression_name_46;
        PyObject *tmp_args_name_9;
        PyObject *tmp_tuple_element_10;
        PyObject *tmp_kw_name_9;
        CHECK_OBJECT(par_self);
        tmp_expression_name_46 = par_self;
        tmp_called_name_36 = LOOKUP_ATTRIBUTE(tmp_expression_name_46, const_str_plain__og_search_description);
        if (tmp_called_name_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2459;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_tuple_element_10 = PyCell_GET(var_webpage);
        tmp_args_name_9 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_10);
        PyTuple_SET_ITEM(tmp_args_name_9, 0, tmp_tuple_element_10);
        tmp_kw_name_9 = PyDict_Copy(const_dict_6dc2f89fb2b035a2c0a0ed28a753f1c8);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2459;
        tmp_assign_source_46 = CALL_FUNCTION(tmp_called_name_36, tmp_args_name_9, tmp_kw_name_9);
        Py_DECREF(tmp_called_name_36);
        Py_DECREF(tmp_args_name_9);
        Py_DECREF(tmp_kw_name_9);
        if (tmp_assign_source_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2459;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_video_description == NULL);
        var_video_description = tmp_assign_source_46;
    }
    {
        PyObject *tmp_assign_source_47;
        PyObject *tmp_called_name_37;
        PyObject *tmp_expression_name_47;
        PyObject *tmp_args_name_10;
        PyObject *tmp_tuple_element_11;
        PyObject *tmp_kw_name_10;
        CHECK_OBJECT(par_self);
        tmp_expression_name_47 = par_self;
        tmp_called_name_37 = LOOKUP_ATTRIBUTE(tmp_expression_name_47, const_str_plain__og_search_thumbnail);
        if (tmp_called_name_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2460;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_tuple_element_11 = PyCell_GET(var_webpage);
        tmp_args_name_10 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_11);
        PyTuple_SET_ITEM(tmp_args_name_10, 0, tmp_tuple_element_11);
        tmp_kw_name_10 = PyDict_Copy(const_dict_6dc2f89fb2b035a2c0a0ed28a753f1c8);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2460;
        tmp_assign_source_47 = CALL_FUNCTION(tmp_called_name_37, tmp_args_name_10, tmp_kw_name_10);
        Py_DECREF(tmp_called_name_37);
        Py_DECREF(tmp_args_name_10);
        Py_DECREF(tmp_kw_name_10);
        if (tmp_assign_source_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2460;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_video_thumbnail == NULL);
        var_video_thumbnail = tmp_assign_source_47;
    }
    {
        PyObject *tmp_called_instance_47;
        PyObject *tmp_call_result_25;
        PyObject *tmp_args_element_name_79;
        PyObject *tmp_dict_key_18;
        PyObject *tmp_dict_value_18;
        PyObject *tmp_dict_key_19;
        PyObject *tmp_dict_value_19;
        PyObject *tmp_dict_key_20;
        PyObject *tmp_dict_value_20;
        PyObject *tmp_dict_key_21;
        PyObject *tmp_dict_value_21;
        CHECK_OBJECT(var_info_dict);
        tmp_called_instance_47 = var_info_dict;
        tmp_dict_key_18 = const_str_plain_title;
        CHECK_OBJECT(var_video_title);
        tmp_dict_value_18 = var_video_title;
        tmp_args_element_name_79 = _PyDict_NewPresized( 4 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_79, tmp_dict_key_18, tmp_dict_value_18);
        assert(!(tmp_res != 0));
        tmp_dict_key_19 = const_str_plain_description;
        CHECK_OBJECT(var_video_description);
        tmp_dict_value_19 = var_video_description;
        tmp_res = PyDict_SetItem(tmp_args_element_name_79, tmp_dict_key_19, tmp_dict_value_19);
        assert(!(tmp_res != 0));
        tmp_dict_key_20 = const_str_plain_thumbnail;
        CHECK_OBJECT(var_video_thumbnail);
        tmp_dict_value_20 = var_video_thumbnail;
        tmp_res = PyDict_SetItem(tmp_args_element_name_79, tmp_dict_key_20, tmp_dict_value_20);
        assert(!(tmp_res != 0));
        tmp_dict_key_21 = const_str_plain_age_limit;
        CHECK_OBJECT(var_age_limit);
        tmp_dict_value_21 = var_age_limit;
        tmp_res = PyDict_SetItem(tmp_args_element_name_79, tmp_dict_key_21, tmp_dict_value_21);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2462;
        {
            PyObject *call_args[] = {tmp_args_element_name_79};
            tmp_call_result_25 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_47, const_str_plain_update, call_args);
        }

        Py_DECREF(tmp_args_element_name_79);
        if (tmp_call_result_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2462;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_25);
    }
    {
        PyObject *tmp_assign_source_48;
        PyObject *tmp_called_instance_48;
        PyObject *tmp_mvar_value_22;
        PyObject *tmp_args_element_name_80;
        tmp_mvar_value_22 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_BrightcoveLegacyIE);

        if (unlikely(tmp_mvar_value_22 == NULL)) {
            tmp_mvar_value_22 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_BrightcoveLegacyIE);
        }

        if (tmp_mvar_value_22 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40260 ], 40, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2470;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_48 = tmp_mvar_value_22;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_80 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2470;
        {
            PyObject *call_args[] = {tmp_args_element_name_80};
            tmp_assign_source_48 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_48, const_str_plain__extract_brightcove_urls, call_args);
        }

        if (tmp_assign_source_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2470;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_bc_urls == NULL);
        var_bc_urls = tmp_assign_source_48;
    }
    {
        nuitka_bool tmp_condition_result_34;
        int tmp_truth_name_21;
        CHECK_OBJECT(var_bc_urls);
        tmp_truth_name_21 = CHECK_IF_TRUE(var_bc_urls);
        if (tmp_truth_name_21 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2471;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_34 = tmp_truth_name_21 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_34 == NUITKA_BOOL_TRUE) {
            goto branch_yes_32;
        } else {
            goto branch_no_32;
        }
    }
    branch_yes_32:;
    {
        PyObject *tmp_assign_source_49;
        // Tried code:
        {
            PyObject *tmp_assign_source_50;
            PyObject *tmp_iter_arg_3;
            CHECK_OBJECT(var_bc_urls);
            tmp_iter_arg_3 = var_bc_urls;
            tmp_assign_source_50 = MAKE_ITERATOR(tmp_iter_arg_3);
            if (tmp_assign_source_50 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2472;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto try_except_handler_7;
            }
            assert(tmp_listcomp_1__$0 == NULL);
            tmp_listcomp_1__$0 = tmp_assign_source_50;
        }
        {
            PyObject *tmp_assign_source_51;
            tmp_assign_source_51 = PyList_New(0);
            assert(tmp_listcomp_1__contraction == NULL);
            tmp_listcomp_1__contraction = tmp_assign_source_51;
        }
        if (isFrameUnusable(cache_frame_acbe8c5acfe725e077275ac87310d183_2)) {
            Py_XDECREF(cache_frame_acbe8c5acfe725e077275ac87310d183_2);

#if _DEBUG_REFCOUNTS
            if (cache_frame_acbe8c5acfe725e077275ac87310d183_2 == NULL) {
                count_active_frame_cache_instances += 1;
            } else {
                count_released_frame_cache_instances += 1;
            }
            count_allocated_frame_cache_instances += 1;
#endif
            cache_frame_acbe8c5acfe725e077275ac87310d183_2 = MAKE_FUNCTION_FRAME(codeobj_acbe8c5acfe725e077275ac87310d183, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
        } else {
            count_hit_frame_cache_instances += 1;
#endif
        }
        assert(cache_frame_acbe8c5acfe725e077275ac87310d183_2->m_type_description == NULL);
        frame_acbe8c5acfe725e077275ac87310d183_2 = cache_frame_acbe8c5acfe725e077275ac87310d183_2;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_acbe8c5acfe725e077275ac87310d183_2);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_acbe8c5acfe725e077275ac87310d183_2) == 2); // Frame stack

        // Framed code:
        // Tried code:
        loop_start_1:;
        {
            PyObject *tmp_next_source_1;
            PyObject *tmp_assign_source_52;
            CHECK_OBJECT(tmp_listcomp_1__$0);
            tmp_next_source_1 = tmp_listcomp_1__$0;
            tmp_assign_source_52 = ITERATOR_NEXT(tmp_next_source_1);
            if (tmp_assign_source_52 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_1;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "oc";
                    exception_lineno = 2472;
                    goto try_except_handler_8;
                }
            }

            {
                PyObject *old = tmp_listcomp_1__iter_value_0;
                tmp_listcomp_1__iter_value_0 = tmp_assign_source_52;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_53;
            CHECK_OBJECT(tmp_listcomp_1__iter_value_0);
            tmp_assign_source_53 = tmp_listcomp_1__iter_value_0;
            {
                PyObject *old = outline_0_var_bc_url;
                outline_0_var_bc_url = tmp_assign_source_53;
                Py_INCREF(outline_0_var_bc_url);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_append_list_1;
            PyObject *tmp_append_value_1;
            PyObject *tmp_dict_key_22;
            PyObject *tmp_dict_value_22;
            PyObject *tmp_dict_key_23;
            PyObject *tmp_dict_value_23;
            PyObject *tmp_called_name_38;
            PyObject *tmp_mvar_value_23;
            PyObject *tmp_args_element_name_81;
            PyObject *tmp_args_element_name_82;
            PyObject *tmp_dict_key_24;
            PyObject *tmp_dict_value_24;
            PyObject *tmp_dict_key_25;
            PyObject *tmp_dict_value_25;
            CHECK_OBJECT(tmp_listcomp_1__contraction);
            tmp_append_list_1 = tmp_listcomp_1__contraction;
            tmp_dict_key_22 = const_str_plain__type;
            tmp_dict_value_22 = const_str_plain_url;
            tmp_append_value_1 = _PyDict_NewPresized( 3 );
            tmp_res = PyDict_SetItem(tmp_append_value_1, tmp_dict_key_22, tmp_dict_value_22);
            assert(!(tmp_res != 0));
            tmp_dict_key_23 = const_str_plain_url;
            tmp_mvar_value_23 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_smuggle_url);

            if (unlikely(tmp_mvar_value_23 == NULL)) {
                tmp_mvar_value_23 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_smuggle_url);
            }

            if (tmp_mvar_value_23 == NULL) {
                Py_DECREF(tmp_append_value_1);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 34727 ], 33, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 2474;
                type_description_2 = "oc";
                goto try_except_handler_8;
            }

            tmp_called_name_38 = tmp_mvar_value_23;
            CHECK_OBJECT(outline_0_var_bc_url);
            tmp_args_element_name_81 = outline_0_var_bc_url;
            tmp_dict_key_24 = const_str_plain_Referer;
            CHECK_OBJECT(PyCell_GET(par_url));
            tmp_dict_value_24 = PyCell_GET(par_url);
            tmp_args_element_name_82 = _PyDict_NewPresized( 1 );
            tmp_res = PyDict_SetItem(tmp_args_element_name_82, tmp_dict_key_24, tmp_dict_value_24);
            assert(!(tmp_res != 0));
            frame_acbe8c5acfe725e077275ac87310d183_2->m_frame.f_lineno = 2474;
            {
                PyObject *call_args[] = {tmp_args_element_name_81, tmp_args_element_name_82};
                tmp_dict_value_23 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_38, call_args);
            }

            Py_DECREF(tmp_args_element_name_82);
            if (tmp_dict_value_23 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_append_value_1);

                exception_lineno = 2474;
                type_description_2 = "oc";
                goto try_except_handler_8;
            }
            tmp_res = PyDict_SetItem(tmp_append_value_1, tmp_dict_key_23, tmp_dict_value_23);
            Py_DECREF(tmp_dict_value_23);
            assert(!(tmp_res != 0));
            tmp_dict_key_25 = const_str_plain_ie_key;
            tmp_dict_value_25 = const_str_plain_BrightcoveLegacy;
            tmp_res = PyDict_SetItem(tmp_append_value_1, tmp_dict_key_25, tmp_dict_value_25);
            assert(!(tmp_res != 0));
            assert(PyList_Check(tmp_append_list_1));
            tmp_res = PyList_Append(tmp_append_list_1, tmp_append_value_1);
            Py_DECREF(tmp_append_value_1);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2472;
                type_description_2 = "oc";
                goto try_except_handler_8;
            }
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2472;
            type_description_2 = "oc";
            goto try_except_handler_8;
        }
        goto loop_start_1;
        loop_end_1:;
        CHECK_OBJECT(tmp_listcomp_1__contraction);
        tmp_assign_source_49 = tmp_listcomp_1__contraction;
        Py_INCREF(tmp_assign_source_49);
        goto try_return_handler_8;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_8:;
        CHECK_OBJECT(tmp_listcomp_1__$0);
        Py_DECREF(tmp_listcomp_1__$0);
        tmp_listcomp_1__$0 = NULL;

        CHECK_OBJECT(tmp_listcomp_1__contraction);
        Py_DECREF(tmp_listcomp_1__contraction);
        tmp_listcomp_1__contraction = NULL;

        Py_XDECREF(tmp_listcomp_1__iter_value_0);
        tmp_listcomp_1__iter_value_0 = NULL;

        goto frame_return_exit_2;
        // Exception handler code:
        try_except_handler_8:;
        exception_keeper_type_5 = exception_type;
        exception_keeper_value_5 = exception_value;
        exception_keeper_tb_5 = exception_tb;
        exception_keeper_lineno_5 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT(tmp_listcomp_1__$0);
        Py_DECREF(tmp_listcomp_1__$0);
        tmp_listcomp_1__$0 = NULL;

        CHECK_OBJECT(tmp_listcomp_1__contraction);
        Py_DECREF(tmp_listcomp_1__contraction);
        tmp_listcomp_1__contraction = NULL;

        Py_XDECREF(tmp_listcomp_1__iter_value_0);
        tmp_listcomp_1__iter_value_0 = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_5;
        exception_value = exception_keeper_value_5;
        exception_tb = exception_keeper_tb_5;
        exception_lineno = exception_keeper_lineno_5;

        goto frame_exception_exit_2;
        // End of try:

#if 0
        RESTORE_FRAME_EXCEPTION(frame_acbe8c5acfe725e077275ac87310d183_2);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_1;

        frame_return_exit_2:;
#if 0
        RESTORE_FRAME_EXCEPTION(frame_acbe8c5acfe725e077275ac87310d183_2);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto try_return_handler_7;

        frame_exception_exit_2:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_acbe8c5acfe725e077275ac87310d183_2);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_acbe8c5acfe725e077275ac87310d183_2, exception_lineno);
        } else if (exception_tb->tb_frame != &frame_acbe8c5acfe725e077275ac87310d183_2->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_acbe8c5acfe725e077275ac87310d183_2, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            frame_acbe8c5acfe725e077275ac87310d183_2,
            type_description_2,
            outline_0_var_bc_url,
            par_url
        );


        // Release cached frame.
        if (frame_acbe8c5acfe725e077275ac87310d183_2 == cache_frame_acbe8c5acfe725e077275ac87310d183_2) {
#if _DEBUG_REFCOUNTS
            count_active_frame_cache_instances -= 1;
            count_released_frame_cache_instances += 1;
#endif

            Py_DECREF(frame_acbe8c5acfe725e077275ac87310d183_2);
        }
        cache_frame_acbe8c5acfe725e077275ac87310d183_2 = NULL;

        assertFrameObject(frame_acbe8c5acfe725e077275ac87310d183_2);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_1;

        frame_no_exception_1:;
        goto skip_nested_handling_1;
        nested_frame_exit_1:;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_7;
        skip_nested_handling_1:;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_7:;
        Py_XDECREF(outline_0_var_bc_url);
        outline_0_var_bc_url = NULL;

        goto outline_result_2;
        // Exception handler code:
        try_except_handler_7:;
        exception_keeper_type_6 = exception_type;
        exception_keeper_value_6 = exception_value;
        exception_keeper_tb_6 = exception_tb;
        exception_keeper_lineno_6 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(outline_0_var_bc_url);
        outline_0_var_bc_url = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_6;
        exception_value = exception_keeper_value_6;
        exception_tb = exception_keeper_tb_6;
        exception_lineno = exception_keeper_lineno_6;

        goto outline_exception_1;
        // End of try:
        NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
        return NULL;
        outline_exception_1:;
        exception_lineno = 2472;
        goto frame_exception_exit_1;
        outline_result_2:;
        assert(var_entries == NULL);
        var_entries = tmp_assign_source_49;
    }
    {
        PyObject *tmp_dict_key_26;
        PyObject *tmp_dict_value_26;
        PyObject *tmp_dict_key_27;
        PyObject *tmp_dict_value_27;
        PyObject *tmp_dict_key_28;
        PyObject *tmp_dict_value_28;
        PyObject *tmp_dict_key_29;
        PyObject *tmp_dict_value_29;
        tmp_dict_key_26 = const_str_plain__type;
        tmp_dict_value_26 = const_str_plain_playlist;
        tmp_return_value = _PyDict_NewPresized( 4 );
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_26, tmp_dict_value_26);
        assert(!(tmp_res != 0));
        tmp_dict_key_27 = const_str_plain_title;
        CHECK_OBJECT(var_video_title);
        tmp_dict_value_27 = var_video_title;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_27, tmp_dict_value_27);
        assert(!(tmp_res != 0));
        tmp_dict_key_28 = const_str_plain_id;
        CHECK_OBJECT(var_video_id);
        tmp_dict_value_28 = var_video_id;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_28, tmp_dict_value_28);
        assert(!(tmp_res != 0));
        tmp_dict_key_29 = const_str_plain_entries;
        CHECK_OBJECT(var_entries);
        tmp_dict_value_29 = var_entries;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_29, tmp_dict_value_29);
        assert(!(tmp_res != 0));
        goto frame_return_exit_1;
    }
    branch_no_32:;
    {
        PyObject *tmp_assign_source_54;
        PyObject *tmp_called_instance_49;
        PyObject *tmp_mvar_value_24;
        PyObject *tmp_args_element_name_83;
        PyObject *tmp_args_element_name_84;
        tmp_mvar_value_24 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_BrightcoveNewIE);

        if (unlikely(tmp_mvar_value_24 == NULL)) {
            tmp_mvar_value_24 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_BrightcoveNewIE);
        }

        if (tmp_mvar_value_24 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 36734 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2486;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_49 = tmp_mvar_value_24;
        CHECK_OBJECT(par_self);
        tmp_args_element_name_83 = par_self;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_84 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2486;
        {
            PyObject *call_args[] = {tmp_args_element_name_83, tmp_args_element_name_84};
            tmp_assign_source_54 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_49, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2486;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_bc_urls;
            assert(old != NULL);
            var_bc_urls = tmp_assign_source_54;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_35;
        int tmp_truth_name_22;
        CHECK_OBJECT(var_bc_urls);
        tmp_truth_name_22 = CHECK_IF_TRUE(var_bc_urls);
        if (tmp_truth_name_22 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2487;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_35 = tmp_truth_name_22 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_35 == NUITKA_BOOL_TRUE) {
            goto branch_yes_33;
        } else {
            goto branch_no_33;
        }
    }
    branch_yes_33:;
    {
        PyObject *tmp_called_name_39;
        PyObject *tmp_expression_name_48;
        PyObject *tmp_args_name_11;
        PyObject *tmp_tuple_element_12;
        PyObject *tmp_kw_name_11;
        PyObject *tmp_dict_key_30;
        PyObject *tmp_dict_value_30;
        PyObject *tmp_dict_key_31;
        PyObject *tmp_dict_value_31;
        CHECK_OBJECT(par_self);
        tmp_expression_name_48 = par_self;
        tmp_called_name_39 = LOOKUP_ATTRIBUTE(tmp_expression_name_48, const_str_plain_playlist_from_matches);
        if (tmp_called_name_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2488;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_bc_urls);
        tmp_tuple_element_12 = var_bc_urls;
        tmp_args_name_11 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_12);
        PyTuple_SET_ITEM(tmp_args_name_11, 0, tmp_tuple_element_12);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_12 = var_video_id;
        Py_INCREF(tmp_tuple_element_12);
        PyTuple_SET_ITEM(tmp_args_name_11, 1, tmp_tuple_element_12);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_12 = var_video_title;
        Py_INCREF(tmp_tuple_element_12);
        PyTuple_SET_ITEM(tmp_args_name_11, 2, tmp_tuple_element_12);
        tmp_dict_key_30 = const_str_plain_getter;
        tmp_dict_value_30 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_2_lambda();

        ((struct Nuitka_FunctionObject *)tmp_dict_value_30)->m_closure[0] = par_url;
        Py_INCREF(((struct Nuitka_FunctionObject *)tmp_dict_value_30)->m_closure[0]);


        tmp_kw_name_11 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_11, tmp_dict_key_30, tmp_dict_value_30);
        Py_DECREF(tmp_dict_value_30);
        assert(!(tmp_res != 0));
        tmp_dict_key_31 = const_str_plain_ie;
        tmp_dict_value_31 = const_str_plain_BrightcoveNew;
        tmp_res = PyDict_SetItem(tmp_kw_name_11, tmp_dict_key_31, tmp_dict_value_31);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2488;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_39, tmp_args_name_11, tmp_kw_name_11);
        Py_DECREF(tmp_called_name_39);
        Py_DECREF(tmp_args_name_11);
        Py_DECREF(tmp_kw_name_11);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2488;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_33:;
    {
        PyObject *tmp_assign_source_55;
        PyObject *tmp_called_instance_50;
        PyObject *tmp_mvar_value_25;
        PyObject *tmp_args_element_name_85;
        tmp_mvar_value_25 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_NexxIE);

        if (unlikely(tmp_mvar_value_25 == NULL)) {
            tmp_mvar_value_25 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_NexxIE);
        }

        if (tmp_mvar_value_25 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40203 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2494;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_50 = tmp_mvar_value_25;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_85 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2494;
        {
            PyObject *call_args[] = {tmp_args_element_name_85};
            tmp_assign_source_55 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_50, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_55 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2494;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_nexx_urls == NULL);
        var_nexx_urls = tmp_assign_source_55;
    }
    {
        nuitka_bool tmp_condition_result_36;
        int tmp_truth_name_23;
        CHECK_OBJECT(var_nexx_urls);
        tmp_truth_name_23 = CHECK_IF_TRUE(var_nexx_urls);
        if (tmp_truth_name_23 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2495;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_36 = tmp_truth_name_23 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_36 == NUITKA_BOOL_TRUE) {
            goto branch_yes_34;
        } else {
            goto branch_no_34;
        }
    }
    branch_yes_34:;
    {
        PyObject *tmp_called_name_40;
        PyObject *tmp_expression_name_49;
        PyObject *tmp_args_name_12;
        PyObject *tmp_tuple_element_13;
        PyObject *tmp_kw_name_12;
        PyObject *tmp_dict_key_32;
        PyObject *tmp_dict_value_32;
        PyObject *tmp_called_instance_51;
        PyObject *tmp_mvar_value_26;
        CHECK_OBJECT(par_self);
        tmp_expression_name_49 = par_self;
        tmp_called_name_40 = LOOKUP_ATTRIBUTE(tmp_expression_name_49, const_str_plain_playlist_from_matches);
        if (tmp_called_name_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2496;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_nexx_urls);
        tmp_tuple_element_13 = var_nexx_urls;
        tmp_args_name_12 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_13);
        PyTuple_SET_ITEM(tmp_args_name_12, 0, tmp_tuple_element_13);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_13 = var_video_id;
        Py_INCREF(tmp_tuple_element_13);
        PyTuple_SET_ITEM(tmp_args_name_12, 1, tmp_tuple_element_13);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_13 = var_video_title;
        Py_INCREF(tmp_tuple_element_13);
        PyTuple_SET_ITEM(tmp_args_name_12, 2, tmp_tuple_element_13);
        tmp_dict_key_32 = const_str_plain_ie;
        tmp_mvar_value_26 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_NexxIE);

        if (unlikely(tmp_mvar_value_26 == NULL)) {
            tmp_mvar_value_26 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_NexxIE);
        }

        if (tmp_mvar_value_26 == NULL) {
            Py_DECREF(tmp_called_name_40);
            Py_DECREF(tmp_args_name_12);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40203 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2496;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_51 = tmp_mvar_value_26;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2496;
        tmp_dict_value_32 = CALL_METHOD_NO_ARGS(tmp_called_instance_51, const_str_plain_ie_key);
        if (tmp_dict_value_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_40);
            Py_DECREF(tmp_args_name_12);

            exception_lineno = 2496;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_12 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_12, tmp_dict_key_32, tmp_dict_value_32);
        Py_DECREF(tmp_dict_value_32);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2496;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_40, tmp_args_name_12, tmp_kw_name_12);
        Py_DECREF(tmp_called_name_40);
        Py_DECREF(tmp_args_name_12);
        Py_DECREF(tmp_kw_name_12);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2496;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_34:;
    {
        PyObject *tmp_assign_source_56;
        PyObject *tmp_called_instance_52;
        PyObject *tmp_mvar_value_27;
        PyObject *tmp_args_element_name_86;
        tmp_mvar_value_27 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_NexxEmbedIE);

        if (unlikely(tmp_mvar_value_27 == NULL)) {
            tmp_mvar_value_27 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_NexxEmbedIE);
        }

        if (tmp_mvar_value_27 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40300 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2499;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_52 = tmp_mvar_value_27;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_86 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2499;
        {
            PyObject *call_args[] = {tmp_args_element_name_86};
            tmp_assign_source_56 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_52, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2499;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_nexx_embed_urls == NULL);
        var_nexx_embed_urls = tmp_assign_source_56;
    }
    {
        nuitka_bool tmp_condition_result_37;
        int tmp_truth_name_24;
        CHECK_OBJECT(var_nexx_embed_urls);
        tmp_truth_name_24 = CHECK_IF_TRUE(var_nexx_embed_urls);
        if (tmp_truth_name_24 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2500;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_37 = tmp_truth_name_24 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_37 == NUITKA_BOOL_TRUE) {
            goto branch_yes_35;
        } else {
            goto branch_no_35;
        }
    }
    branch_yes_35:;
    {
        PyObject *tmp_called_name_41;
        PyObject *tmp_expression_name_50;
        PyObject *tmp_args_name_13;
        PyObject *tmp_tuple_element_14;
        PyObject *tmp_kw_name_13;
        PyObject *tmp_dict_key_33;
        PyObject *tmp_dict_value_33;
        PyObject *tmp_called_instance_53;
        PyObject *tmp_mvar_value_28;
        CHECK_OBJECT(par_self);
        tmp_expression_name_50 = par_self;
        tmp_called_name_41 = LOOKUP_ATTRIBUTE(tmp_expression_name_50, const_str_plain_playlist_from_matches);
        if (tmp_called_name_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2501;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_nexx_embed_urls);
        tmp_tuple_element_14 = var_nexx_embed_urls;
        tmp_args_name_13 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_14);
        PyTuple_SET_ITEM(tmp_args_name_13, 0, tmp_tuple_element_14);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_14 = var_video_id;
        Py_INCREF(tmp_tuple_element_14);
        PyTuple_SET_ITEM(tmp_args_name_13, 1, tmp_tuple_element_14);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_14 = var_video_title;
        Py_INCREF(tmp_tuple_element_14);
        PyTuple_SET_ITEM(tmp_args_name_13, 2, tmp_tuple_element_14);
        tmp_dict_key_33 = const_str_plain_ie;
        tmp_mvar_value_28 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_NexxEmbedIE);

        if (unlikely(tmp_mvar_value_28 == NULL)) {
            tmp_mvar_value_28 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_NexxEmbedIE);
        }

        if (tmp_mvar_value_28 == NULL) {
            Py_DECREF(tmp_called_name_41);
            Py_DECREF(tmp_args_name_13);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40300 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2501;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_53 = tmp_mvar_value_28;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2501;
        tmp_dict_value_33 = CALL_METHOD_NO_ARGS(tmp_called_instance_53, const_str_plain_ie_key);
        if (tmp_dict_value_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_41);
            Py_DECREF(tmp_args_name_13);

            exception_lineno = 2501;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_13 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_13, tmp_dict_key_33, tmp_dict_value_33);
        Py_DECREF(tmp_dict_value_33);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2501;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_41, tmp_args_name_13, tmp_kw_name_13);
        Py_DECREF(tmp_called_name_41);
        Py_DECREF(tmp_args_name_13);
        Py_DECREF(tmp_kw_name_13);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2501;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_35:;
    {
        PyObject *tmp_assign_source_57;
        PyObject *tmp_called_instance_54;
        PyObject *tmp_mvar_value_29;
        PyObject *tmp_args_element_name_87;
        tmp_mvar_value_29 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ThePlatformIE);

        if (unlikely(tmp_mvar_value_29 == NULL)) {
            tmp_mvar_value_29 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ThePlatformIE);
        }

        if (tmp_mvar_value_29 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 34760 ], 35, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2504;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_54 = tmp_mvar_value_29;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_87 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2504;
        {
            PyObject *call_args[] = {tmp_args_element_name_87};
            tmp_assign_source_57 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_54, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2504;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_tp_urls == NULL);
        var_tp_urls = tmp_assign_source_57;
    }
    {
        nuitka_bool tmp_condition_result_38;
        int tmp_truth_name_25;
        CHECK_OBJECT(var_tp_urls);
        tmp_truth_name_25 = CHECK_IF_TRUE(var_tp_urls);
        if (tmp_truth_name_25 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2505;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_38 = tmp_truth_name_25 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_38 == NUITKA_BOOL_TRUE) {
            goto branch_yes_36;
        } else {
            goto branch_no_36;
        }
    }
    branch_yes_36:;
    {
        PyObject *tmp_called_name_42;
        PyObject *tmp_expression_name_51;
        PyObject *tmp_args_name_14;
        PyObject *tmp_tuple_element_15;
        PyObject *tmp_kw_name_14;
        CHECK_OBJECT(par_self);
        tmp_expression_name_51 = par_self;
        tmp_called_name_42 = LOOKUP_ATTRIBUTE(tmp_expression_name_51, const_str_plain_playlist_from_matches);
        if (tmp_called_name_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2506;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_tp_urls);
        tmp_tuple_element_15 = var_tp_urls;
        tmp_args_name_14 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_15);
        PyTuple_SET_ITEM(tmp_args_name_14, 0, tmp_tuple_element_15);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_15 = var_video_id;
        Py_INCREF(tmp_tuple_element_15);
        PyTuple_SET_ITEM(tmp_args_name_14, 1, tmp_tuple_element_15);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_15 = var_video_title;
        Py_INCREF(tmp_tuple_element_15);
        PyTuple_SET_ITEM(tmp_args_name_14, 2, tmp_tuple_element_15);
        tmp_kw_name_14 = PyDict_Copy(const_dict_2635a05b88280f90e836758bf32eab74);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2506;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_42, tmp_args_name_14, tmp_kw_name_14);
        Py_DECREF(tmp_called_name_42);
        Py_DECREF(tmp_args_name_14);
        Py_DECREF(tmp_kw_name_14);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2506;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_36:;
    {
        PyObject *tmp_assign_source_58;
        PyObject *tmp_called_instance_55;
        PyObject *tmp_mvar_value_30;
        PyObject *tmp_args_element_name_88;
        PyObject *tmp_args_element_name_89;
        tmp_mvar_value_30 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_30 == NULL)) {
            tmp_mvar_value_30 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_30 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2509;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_55 = tmp_mvar_value_30;
        tmp_args_element_name_88 = const_str_digest_5c683438ff38f48cb123d7e50ca812da;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_89 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2509;
        {
            PyObject *call_args[] = {tmp_args_element_name_88, tmp_args_element_name_89};
            tmp_assign_source_58 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_55, const_str_plain_findall, call_args);
        }

        if (tmp_assign_source_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2509;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_matches == NULL);
        var_matches = tmp_assign_source_58;
    }
    {
        nuitka_bool tmp_condition_result_39;
        int tmp_truth_name_26;
        CHECK_OBJECT(var_matches);
        tmp_truth_name_26 = CHECK_IF_TRUE(var_matches);
        if (tmp_truth_name_26 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2512;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_39 = tmp_truth_name_26 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_39 == NUITKA_BOOL_TRUE) {
            goto branch_yes_37;
        } else {
            goto branch_no_37;
        }
    }
    branch_yes_37:;
    {
        PyObject *tmp_called_name_43;
        PyObject *tmp_expression_name_52;
        PyObject *tmp_args_name_15;
        PyObject *tmp_tuple_element_16;
        PyObject *tmp_kw_name_15;
        CHECK_OBJECT(par_self);
        tmp_expression_name_52 = par_self;
        tmp_called_name_43 = LOOKUP_ATTRIBUTE(tmp_expression_name_52, const_str_plain_playlist_from_matches);
        if (tmp_called_name_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2513;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_matches);
        tmp_tuple_element_16 = var_matches;
        tmp_args_name_15 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_16);
        PyTuple_SET_ITEM(tmp_args_name_15, 0, tmp_tuple_element_16);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_16 = var_video_id;
        Py_INCREF(tmp_tuple_element_16);
        PyTuple_SET_ITEM(tmp_args_name_15, 1, tmp_tuple_element_16);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_16 = var_video_title;
        Py_INCREF(tmp_tuple_element_16);
        PyTuple_SET_ITEM(tmp_args_name_15, 2, tmp_tuple_element_16);
        tmp_kw_name_15 = PyDict_Copy(const_dict_6a43a35da9de15c3e254c8821cf7d008);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2513;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_43, tmp_args_name_15, tmp_kw_name_15);
        Py_DECREF(tmp_called_name_43);
        Py_DECREF(tmp_args_name_15);
        Py_DECREF(tmp_kw_name_15);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2513;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_37:;
    {
        PyObject *tmp_assign_source_59;
        PyObject *tmp_called_instance_56;
        PyObject *tmp_mvar_value_31;
        PyObject *tmp_args_element_name_90;
        PyObject *tmp_args_element_name_91;
        tmp_mvar_value_31 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VimeoIE);

        if (unlikely(tmp_mvar_value_31 == NULL)) {
            tmp_mvar_value_31 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_VimeoIE);
        }

        if (tmp_mvar_value_31 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40333 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2515;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_56 = tmp_mvar_value_31;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_90 = PyCell_GET(par_url);
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_91 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2515;
        {
            PyObject *call_args[] = {tmp_args_element_name_90, tmp_args_element_name_91};
            tmp_assign_source_59 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_56, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2515;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vimeo_urls == NULL);
        var_vimeo_urls = tmp_assign_source_59;
    }
    {
        nuitka_bool tmp_condition_result_40;
        int tmp_truth_name_27;
        CHECK_OBJECT(var_vimeo_urls);
        tmp_truth_name_27 = CHECK_IF_TRUE(var_vimeo_urls);
        if (tmp_truth_name_27 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2516;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_40 = tmp_truth_name_27 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_40 == NUITKA_BOOL_TRUE) {
            goto branch_yes_38;
        } else {
            goto branch_no_38;
        }
    }
    branch_yes_38:;
    {
        PyObject *tmp_called_name_44;
        PyObject *tmp_expression_name_53;
        PyObject *tmp_args_name_16;
        PyObject *tmp_tuple_element_17;
        PyObject *tmp_kw_name_16;
        PyObject *tmp_dict_key_34;
        PyObject *tmp_dict_value_34;
        PyObject *tmp_called_instance_57;
        PyObject *tmp_mvar_value_32;
        CHECK_OBJECT(par_self);
        tmp_expression_name_53 = par_self;
        tmp_called_name_44 = LOOKUP_ATTRIBUTE(tmp_expression_name_53, const_str_plain_playlist_from_matches);
        if (tmp_called_name_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2517;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_vimeo_urls);
        tmp_tuple_element_17 = var_vimeo_urls;
        tmp_args_name_16 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_17);
        PyTuple_SET_ITEM(tmp_args_name_16, 0, tmp_tuple_element_17);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_17 = var_video_id;
        Py_INCREF(tmp_tuple_element_17);
        PyTuple_SET_ITEM(tmp_args_name_16, 1, tmp_tuple_element_17);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_17 = var_video_title;
        Py_INCREF(tmp_tuple_element_17);
        PyTuple_SET_ITEM(tmp_args_name_16, 2, tmp_tuple_element_17);
        tmp_dict_key_34 = const_str_plain_ie;
        tmp_mvar_value_32 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VimeoIE);

        if (unlikely(tmp_mvar_value_32 == NULL)) {
            tmp_mvar_value_32 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_VimeoIE);
        }

        if (tmp_mvar_value_32 == NULL) {
            Py_DECREF(tmp_called_name_44);
            Py_DECREF(tmp_args_name_16);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40333 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2517;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_57 = tmp_mvar_value_32;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2517;
        tmp_dict_value_34 = CALL_METHOD_NO_ARGS(tmp_called_instance_57, const_str_plain_ie_key);
        if (tmp_dict_value_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_44);
            Py_DECREF(tmp_args_name_16);

            exception_lineno = 2517;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_16 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_16, tmp_dict_key_34, tmp_dict_value_34);
        Py_DECREF(tmp_dict_value_34);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2517;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_44, tmp_args_name_16, tmp_kw_name_16);
        Py_DECREF(tmp_called_name_44);
        Py_DECREF(tmp_args_name_16);
        Py_DECREF(tmp_kw_name_16);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2517;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_38:;
    {
        PyObject *tmp_assign_source_60;
        PyObject *tmp_called_name_45;
        PyObject *tmp_expression_name_54;
        PyObject *tmp_args_name_17;
        PyObject *tmp_tuple_element_18;
        PyObject *tmp_kw_name_17;
        CHECK_OBJECT(par_self);
        tmp_expression_name_54 = par_self;
        tmp_called_name_45 = LOOKUP_ATTRIBUTE(tmp_expression_name_54, const_str_plain__search_regex);
        if (tmp_called_name_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2519;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_tuple_element_18 = const_str_digest_83a204fa078f44b3dd1dd2c5bd48839f;
        tmp_args_name_17 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_18);
        PyTuple_SET_ITEM(tmp_args_name_17, 0, tmp_tuple_element_18);
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_tuple_element_18 = PyCell_GET(var_webpage);
        Py_INCREF(tmp_tuple_element_18);
        PyTuple_SET_ITEM(tmp_args_name_17, 1, tmp_tuple_element_18);
        tmp_tuple_element_18 = const_str_digest_b3d0da1cc878ae9af441eb53fbbcc497;
        Py_INCREF(tmp_tuple_element_18);
        PyTuple_SET_ITEM(tmp_args_name_17, 2, tmp_tuple_element_18);
        tmp_kw_name_17 = PyDict_Copy(const_dict_6dc2f89fb2b035a2c0a0ed28a753f1c8);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2519;
        tmp_assign_source_60 = CALL_FUNCTION(tmp_called_name_45, tmp_args_name_17, tmp_kw_name_17);
        Py_DECREF(tmp_called_name_45);
        Py_DECREF(tmp_args_name_17);
        Py_DECREF(tmp_kw_name_17);
        if (tmp_assign_source_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2519;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vid_me_embed_url == NULL);
        var_vid_me_embed_url = tmp_assign_source_60;
    }
    {
        nuitka_bool tmp_condition_result_41;
        PyObject *tmp_compexpr_left_18;
        PyObject *tmp_compexpr_right_18;
        CHECK_OBJECT(var_vid_me_embed_url);
        tmp_compexpr_left_18 = var_vid_me_embed_url;
        tmp_compexpr_right_18 = Py_None;
        tmp_condition_result_41 = (tmp_compexpr_left_18 != tmp_compexpr_right_18) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_41 == NUITKA_BOOL_TRUE) {
            goto branch_yes_39;
        } else {
            goto branch_no_39;
        }
    }
    branch_yes_39:;
    {
        PyObject *tmp_called_instance_58;
        PyObject *tmp_args_element_name_92;
        PyObject *tmp_args_element_name_93;
        CHECK_OBJECT(par_self);
        tmp_called_instance_58 = par_self;
        CHECK_OBJECT(var_vid_me_embed_url);
        tmp_args_element_name_92 = var_vid_me_embed_url;
        tmp_args_element_name_93 = const_str_plain_Vidme;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2523;
        {
            PyObject *call_args[] = {tmp_args_element_name_92, tmp_args_element_name_93};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_58, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2523;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_39:;
    {
        PyObject *tmp_assign_source_61;
        PyObject *tmp_called_instance_59;
        PyObject *tmp_mvar_value_33;
        PyObject *tmp_args_element_name_94;
        tmp_mvar_value_33 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YoutubeIE);

        if (unlikely(tmp_mvar_value_33 == NULL)) {
            tmp_mvar_value_33 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_YoutubeIE);
        }

        if (tmp_mvar_value_33 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33686 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2526;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_59 = tmp_mvar_value_33;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_94 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2526;
        {
            PyObject *call_args[] = {tmp_args_element_name_94};
            tmp_assign_source_61 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_59, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2526;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_youtube_urls == NULL);
        var_youtube_urls = tmp_assign_source_61;
    }
    {
        nuitka_bool tmp_condition_result_42;
        int tmp_truth_name_28;
        CHECK_OBJECT(var_youtube_urls);
        tmp_truth_name_28 = CHECK_IF_TRUE(var_youtube_urls);
        if (tmp_truth_name_28 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2527;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_42 = tmp_truth_name_28 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_42 == NUITKA_BOOL_TRUE) {
            goto branch_yes_40;
        } else {
            goto branch_no_40;
        }
    }
    branch_yes_40:;
    {
        PyObject *tmp_called_name_46;
        PyObject *tmp_expression_name_55;
        PyObject *tmp_args_name_18;
        PyObject *tmp_tuple_element_19;
        PyObject *tmp_kw_name_18;
        PyObject *tmp_dict_key_35;
        PyObject *tmp_dict_value_35;
        PyObject *tmp_called_instance_60;
        PyObject *tmp_mvar_value_34;
        CHECK_OBJECT(par_self);
        tmp_expression_name_55 = par_self;
        tmp_called_name_46 = LOOKUP_ATTRIBUTE(tmp_expression_name_55, const_str_plain_playlist_from_matches);
        if (tmp_called_name_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2528;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_youtube_urls);
        tmp_tuple_element_19 = var_youtube_urls;
        tmp_args_name_18 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_19);
        PyTuple_SET_ITEM(tmp_args_name_18, 0, tmp_tuple_element_19);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_19 = var_video_id;
        Py_INCREF(tmp_tuple_element_19);
        PyTuple_SET_ITEM(tmp_args_name_18, 1, tmp_tuple_element_19);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_19 = var_video_title;
        Py_INCREF(tmp_tuple_element_19);
        PyTuple_SET_ITEM(tmp_args_name_18, 2, tmp_tuple_element_19);
        tmp_dict_key_35 = const_str_plain_ie;
        tmp_mvar_value_34 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YoutubeIE);

        if (unlikely(tmp_mvar_value_34 == NULL)) {
            tmp_mvar_value_34 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_YoutubeIE);
        }

        if (tmp_mvar_value_34 == NULL) {
            Py_DECREF(tmp_called_name_46);
            Py_DECREF(tmp_args_name_18);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33686 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2529;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_60 = tmp_mvar_value_34;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2529;
        tmp_dict_value_35 = CALL_METHOD_NO_ARGS(tmp_called_instance_60, const_str_plain_ie_key);
        if (tmp_dict_value_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_46);
            Py_DECREF(tmp_args_name_18);

            exception_lineno = 2529;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_18 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_18, tmp_dict_key_35, tmp_dict_value_35);
        Py_DECREF(tmp_dict_value_35);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2528;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_46, tmp_args_name_18, tmp_kw_name_18);
        Py_DECREF(tmp_called_name_46);
        Py_DECREF(tmp_args_name_18);
        Py_DECREF(tmp_kw_name_18);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2528;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_40:;
    {
        PyObject *tmp_assign_source_62;
        PyObject *tmp_called_instance_61;
        PyObject *tmp_mvar_value_35;
        PyObject *tmp_args_element_name_95;
        tmp_mvar_value_35 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DailymotionIE);

        if (unlikely(tmp_mvar_value_35 == NULL)) {
            tmp_mvar_value_35 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_DailymotionIE);
        }

        if (tmp_mvar_value_35 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 38810 ], 35, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2531;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_61 = tmp_mvar_value_35;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_95 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2531;
        {
            PyObject *call_args[] = {tmp_args_element_name_95};
            tmp_assign_source_62 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_61, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2531;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_matches;
            assert(old != NULL);
            var_matches = tmp_assign_source_62;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_43;
        int tmp_truth_name_29;
        CHECK_OBJECT(var_matches);
        tmp_truth_name_29 = CHECK_IF_TRUE(var_matches);
        if (tmp_truth_name_29 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2532;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_43 = tmp_truth_name_29 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_43 == NUITKA_BOOL_TRUE) {
            goto branch_yes_41;
        } else {
            goto branch_no_41;
        }
    }
    branch_yes_41:;
    {
        PyObject *tmp_called_instance_62;
        PyObject *tmp_args_element_name_96;
        PyObject *tmp_args_element_name_97;
        PyObject *tmp_args_element_name_98;
        CHECK_OBJECT(par_self);
        tmp_called_instance_62 = par_self;
        CHECK_OBJECT(var_matches);
        tmp_args_element_name_96 = var_matches;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_97 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_name_98 = var_video_title;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2533;
        {
            PyObject *call_args[] = {tmp_args_element_name_96, tmp_args_element_name_97, tmp_args_element_name_98};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(tmp_called_instance_62, const_str_plain_playlist_from_matches, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2533;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_41:;
    {
        PyObject *tmp_assign_source_63;
        PyObject *tmp_called_instance_63;
        PyObject *tmp_mvar_value_36;
        PyObject *tmp_args_element_name_99;
        PyObject *tmp_args_element_name_100;
        tmp_mvar_value_36 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_36 == NULL)) {
            tmp_mvar_value_36 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_36 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2536;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_63 = tmp_mvar_value_36;
        tmp_args_element_name_99 = const_str_digest_4843be23efbea327cea4e2afeddb2d71;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_100 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2536;
        {
            PyObject *call_args[] = {tmp_args_element_name_99, tmp_args_element_name_100};
            tmp_assign_source_63 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_63, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_63 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2536;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_m;
            assert(old != NULL);
            var_m = tmp_assign_source_63;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_44;
        int tmp_truth_name_30;
        CHECK_OBJECT(var_m);
        tmp_truth_name_30 = CHECK_IF_TRUE(var_m);
        if (tmp_truth_name_30 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2538;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_44 = tmp_truth_name_30 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_44 == NUITKA_BOOL_TRUE) {
            goto branch_yes_42;
        } else {
            goto branch_no_42;
        }
    }
    branch_yes_42:;
    {
        PyObject *tmp_assign_source_64;
        PyObject *tmp_called_name_47;
        PyObject *tmp_expression_name_56;
        PyObject *tmp_mvar_value_37;
        PyObject *tmp_args_element_name_101;
        PyObject *tmp_args_element_name_102;
        PyObject *tmp_called_name_48;
        PyObject *tmp_mvar_value_38;
        PyObject *tmp_args_element_name_103;
        PyObject *tmp_called_instance_64;
        tmp_mvar_value_37 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_37 == NULL)) {
            tmp_mvar_value_37 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_37 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2539;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_name_56 = tmp_mvar_value_37;
        tmp_called_name_47 = LOOKUP_ATTRIBUTE(tmp_expression_name_56, const_str_plain_findall);
        if (tmp_called_name_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2539;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_101 = const_str_digest_6c6c4e8f55c4633cd88992b851c67d4a;
        tmp_mvar_value_38 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unescapeHTML);

        if (unlikely(tmp_mvar_value_38 == NULL)) {
            tmp_mvar_value_38 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unescapeHTML);
        }

        if (tmp_mvar_value_38 == NULL) {
            Py_DECREF(tmp_called_name_47);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33553 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2540;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_48 = tmp_mvar_value_38;
        CHECK_OBJECT(var_m);
        tmp_called_instance_64 = var_m;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2540;
        tmp_args_element_name_103 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_64, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_47);

            exception_lineno = 2540;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2540;
        tmp_args_element_name_102 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_48, tmp_args_element_name_103);
        Py_DECREF(tmp_args_element_name_103);
        if (tmp_args_element_name_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_47);

            exception_lineno = 2540;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2539;
        {
            PyObject *call_args[] = {tmp_args_element_name_101, tmp_args_element_name_102};
            tmp_assign_source_64 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_47, call_args);
        }

        Py_DECREF(tmp_called_name_47);
        Py_DECREF(tmp_args_element_name_102);
        if (tmp_assign_source_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2539;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_playlists == NULL);
        var_playlists = tmp_assign_source_64;
    }
    {
        nuitka_bool tmp_condition_result_45;
        int tmp_truth_name_31;
        CHECK_OBJECT(var_playlists);
        tmp_truth_name_31 = CHECK_IF_TRUE(var_playlists);
        if (tmp_truth_name_31 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2541;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_45 = tmp_truth_name_31 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_45 == NUITKA_BOOL_TRUE) {
            goto branch_yes_43;
        } else {
            goto branch_no_43;
        }
    }
    branch_yes_43:;
    {
        PyObject *tmp_called_instance_65;
        PyObject *tmp_args_element_name_104;
        PyObject *tmp_args_element_name_105;
        PyObject *tmp_args_element_name_106;
        PyObject *tmp_args_element_name_107;
        CHECK_OBJECT(par_self);
        tmp_called_instance_65 = par_self;
        CHECK_OBJECT(var_playlists);
        tmp_args_element_name_104 = var_playlists;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_105 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_name_106 = var_video_title;
        tmp_args_element_name_107 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_3_lambda();



        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2542;
        {
            PyObject *call_args[] = {tmp_args_element_name_104, tmp_args_element_name_105, tmp_args_element_name_106, tmp_args_element_name_107};
            tmp_return_value = CALL_METHOD_WITH_ARGS4(tmp_called_instance_65, const_str_plain_playlist_from_matches, call_args);
        }

        Py_DECREF(tmp_args_element_name_107);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2542;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_43:;
    branch_no_42:;
    {
        PyObject *tmp_assign_source_65;
        PyObject *tmp_called_instance_66;
        PyObject *tmp_mvar_value_39;
        PyObject *tmp_args_element_name_108;
        tmp_mvar_value_39 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DailyMailIE);

        if (unlikely(tmp_mvar_value_39 == NULL)) {
            tmp_mvar_value_39 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_DailyMailIE);
        }

        if (tmp_mvar_value_39 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40362 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2546;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_66 = tmp_mvar_value_39;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_108 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2546;
        {
            PyObject *call_args[] = {tmp_args_element_name_108};
            tmp_assign_source_65 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_66, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_65 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2546;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_dailymail_urls == NULL);
        var_dailymail_urls = tmp_assign_source_65;
    }
    {
        nuitka_bool tmp_condition_result_46;
        int tmp_truth_name_32;
        CHECK_OBJECT(var_dailymail_urls);
        tmp_truth_name_32 = CHECK_IF_TRUE(var_dailymail_urls);
        if (tmp_truth_name_32 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2547;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_46 = tmp_truth_name_32 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_46 == NUITKA_BOOL_TRUE) {
            goto branch_yes_44;
        } else {
            goto branch_no_44;
        }
    }
    branch_yes_44:;
    {
        PyObject *tmp_called_name_49;
        PyObject *tmp_expression_name_57;
        PyObject *tmp_args_name_19;
        PyObject *tmp_tuple_element_20;
        PyObject *tmp_kw_name_19;
        PyObject *tmp_dict_key_36;
        PyObject *tmp_dict_value_36;
        PyObject *tmp_called_instance_67;
        PyObject *tmp_mvar_value_40;
        CHECK_OBJECT(par_self);
        tmp_expression_name_57 = par_self;
        tmp_called_name_49 = LOOKUP_ATTRIBUTE(tmp_expression_name_57, const_str_plain_playlist_from_matches);
        if (tmp_called_name_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2548;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_dailymail_urls);
        tmp_tuple_element_20 = var_dailymail_urls;
        tmp_args_name_19 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_20);
        PyTuple_SET_ITEM(tmp_args_name_19, 0, tmp_tuple_element_20);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_20 = var_video_id;
        Py_INCREF(tmp_tuple_element_20);
        PyTuple_SET_ITEM(tmp_args_name_19, 1, tmp_tuple_element_20);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_20 = var_video_title;
        Py_INCREF(tmp_tuple_element_20);
        PyTuple_SET_ITEM(tmp_args_name_19, 2, tmp_tuple_element_20);
        tmp_dict_key_36 = const_str_plain_ie;
        tmp_mvar_value_40 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DailyMailIE);

        if (unlikely(tmp_mvar_value_40 == NULL)) {
            tmp_mvar_value_40 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_DailyMailIE);
        }

        if (tmp_mvar_value_40 == NULL) {
            Py_DECREF(tmp_called_name_49);
            Py_DECREF(tmp_args_name_19);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40362 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2549;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_67 = tmp_mvar_value_40;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2549;
        tmp_dict_value_36 = CALL_METHOD_NO_ARGS(tmp_called_instance_67, const_str_plain_ie_key);
        if (tmp_dict_value_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_49);
            Py_DECREF(tmp_args_name_19);

            exception_lineno = 2549;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_19 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_19, tmp_dict_key_36, tmp_dict_value_36);
        Py_DECREF(tmp_dict_value_36);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2548;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_49, tmp_args_name_19, tmp_kw_name_19);
        Py_DECREF(tmp_called_name_49);
        Py_DECREF(tmp_args_name_19);
        Py_DECREF(tmp_kw_name_19);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2548;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_44:;
    {
        PyObject *tmp_assign_source_66;
        PyObject *tmp_called_instance_68;
        PyObject *tmp_mvar_value_41;
        PyObject *tmp_args_element_name_109;
        PyObject *tmp_args_element_name_110;
        tmp_mvar_value_41 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TeachableIE);

        if (unlikely(tmp_mvar_value_41 == NULL)) {
            tmp_mvar_value_41 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_TeachableIE);
        }

        if (tmp_mvar_value_41 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40395 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2552;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_68 = tmp_mvar_value_41;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_109 = PyCell_GET(var_webpage);
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_110 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2552;
        {
            PyObject *call_args[] = {tmp_args_element_name_109, tmp_args_element_name_110};
            tmp_assign_source_66 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_68, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_66 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2552;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_teachable_url == NULL);
        var_teachable_url = tmp_assign_source_66;
    }
    {
        nuitka_bool tmp_condition_result_47;
        int tmp_truth_name_33;
        CHECK_OBJECT(var_teachable_url);
        tmp_truth_name_33 = CHECK_IF_TRUE(var_teachable_url);
        if (tmp_truth_name_33 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2553;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_47 = tmp_truth_name_33 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_47 == NUITKA_BOOL_TRUE) {
            goto branch_yes_45;
        } else {
            goto branch_no_45;
        }
    }
    branch_yes_45:;
    {
        PyObject *tmp_called_instance_69;
        PyObject *tmp_args_element_name_111;
        CHECK_OBJECT(par_self);
        tmp_called_instance_69 = par_self;
        CHECK_OBJECT(var_teachable_url);
        tmp_args_element_name_111 = var_teachable_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2554;
        {
            PyObject *call_args[] = {tmp_args_element_name_111};
            tmp_return_value = CALL_METHOD_WITH_ARGS1(tmp_called_instance_69, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2554;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_45:;
    {
        PyObject *tmp_assign_source_67;
        PyObject *tmp_called_instance_70;
        PyObject *tmp_mvar_value_42;
        PyObject *tmp_args_element_name_112;
        tmp_mvar_value_42 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_WistiaIE);

        if (unlikely(tmp_mvar_value_42 == NULL)) {
            tmp_mvar_value_42 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_WistiaIE);
        }

        if (tmp_mvar_value_42 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40428 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2557;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_70 = tmp_mvar_value_42;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_112 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2557;
        {
            PyObject *call_args[] = {tmp_args_element_name_112};
            tmp_assign_source_67 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_70, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2557;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_wistia_urls == NULL);
        var_wistia_urls = tmp_assign_source_67;
    }
    {
        nuitka_bool tmp_condition_result_48;
        int tmp_truth_name_34;
        CHECK_OBJECT(var_wistia_urls);
        tmp_truth_name_34 = CHECK_IF_TRUE(var_wistia_urls);
        if (tmp_truth_name_34 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2558;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_48 = tmp_truth_name_34 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_48 == NUITKA_BOOL_TRUE) {
            goto branch_yes_46;
        } else {
            goto branch_no_46;
        }
    }
    branch_yes_46:;
    {
        PyObject *tmp_assign_source_68;
        PyObject *tmp_called_name_50;
        PyObject *tmp_expression_name_58;
        PyObject *tmp_args_name_20;
        PyObject *tmp_tuple_element_21;
        PyObject *tmp_kw_name_20;
        PyObject *tmp_dict_key_37;
        PyObject *tmp_dict_value_37;
        PyObject *tmp_called_instance_71;
        PyObject *tmp_mvar_value_43;
        CHECK_OBJECT(par_self);
        tmp_expression_name_58 = par_self;
        tmp_called_name_50 = LOOKUP_ATTRIBUTE(tmp_expression_name_58, const_str_plain_playlist_from_matches);
        if (tmp_called_name_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2559;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_wistia_urls);
        tmp_tuple_element_21 = var_wistia_urls;
        tmp_args_name_20 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_21);
        PyTuple_SET_ITEM(tmp_args_name_20, 0, tmp_tuple_element_21);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_21 = var_video_id;
        Py_INCREF(tmp_tuple_element_21);
        PyTuple_SET_ITEM(tmp_args_name_20, 1, tmp_tuple_element_21);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_21 = var_video_title;
        Py_INCREF(tmp_tuple_element_21);
        PyTuple_SET_ITEM(tmp_args_name_20, 2, tmp_tuple_element_21);
        tmp_dict_key_37 = const_str_plain_ie;
        tmp_mvar_value_43 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_WistiaIE);

        if (unlikely(tmp_mvar_value_43 == NULL)) {
            tmp_mvar_value_43 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_WistiaIE);
        }

        if (tmp_mvar_value_43 == NULL) {
            Py_DECREF(tmp_called_name_50);
            Py_DECREF(tmp_args_name_20);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40428 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2559;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_71 = tmp_mvar_value_43;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2559;
        tmp_dict_value_37 = CALL_METHOD_NO_ARGS(tmp_called_instance_71, const_str_plain_ie_key);
        if (tmp_dict_value_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_50);
            Py_DECREF(tmp_args_name_20);

            exception_lineno = 2559;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_20 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_20, tmp_dict_key_37, tmp_dict_value_37);
        Py_DECREF(tmp_dict_value_37);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2559;
        tmp_assign_source_68 = CALL_FUNCTION(tmp_called_name_50, tmp_args_name_20, tmp_kw_name_20);
        Py_DECREF(tmp_called_name_50);
        Py_DECREF(tmp_args_name_20);
        Py_DECREF(tmp_kw_name_20);
        if (tmp_assign_source_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2559;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_playlist == NULL);
        var_playlist = tmp_assign_source_68;
    }
    {
        PyObject *tmp_assign_source_69;
        PyObject *tmp_iter_arg_4;
        PyObject *tmp_expression_name_59;
        PyObject *tmp_subscript_name_4;
        CHECK_OBJECT(var_playlist);
        tmp_expression_name_59 = var_playlist;
        tmp_subscript_name_4 = const_str_plain_entries;
        tmp_iter_arg_4 = LOOKUP_SUBSCRIPT(tmp_expression_name_59, tmp_subscript_name_4);
        if (tmp_iter_arg_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2560;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_69 = MAKE_ITERATOR(tmp_iter_arg_4);
        Py_DECREF(tmp_iter_arg_4);
        if (tmp_assign_source_69 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2560;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_1__for_iterator == NULL);
        tmp_for_loop_1__for_iterator = tmp_assign_source_69;
    }
    // Tried code:
    loop_start_2:;
    {
        PyObject *tmp_next_source_2;
        PyObject *tmp_assign_source_70;
        CHECK_OBJECT(tmp_for_loop_1__for_iterator);
        tmp_next_source_2 = tmp_for_loop_1__for_iterator;
        tmp_assign_source_70 = ITERATOR_NEXT(tmp_next_source_2);
        if (tmp_assign_source_70 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_2;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                exception_lineno = 2560;
                goto try_except_handler_9;
            }
        }

        {
            PyObject *old = tmp_for_loop_1__iter_value;
            tmp_for_loop_1__iter_value = tmp_assign_source_70;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_71;
        CHECK_OBJECT(tmp_for_loop_1__iter_value);
        tmp_assign_source_71 = tmp_for_loop_1__iter_value;
        {
            PyObject *old = var_entry;
            var_entry = tmp_assign_source_71;
            Py_INCREF(var_entry);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_called_instance_72;
        PyObject *tmp_call_result_26;
        PyObject *tmp_args_element_name_113;
        PyObject *tmp_dict_key_38;
        PyObject *tmp_dict_value_38;
        PyObject *tmp_dict_key_39;
        PyObject *tmp_dict_value_39;
        CHECK_OBJECT(var_entry);
        tmp_called_instance_72 = var_entry;
        tmp_dict_key_38 = const_str_plain__type;
        tmp_dict_value_38 = const_str_plain_url_transparent;
        tmp_args_element_name_113 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_113, tmp_dict_key_38, tmp_dict_value_38);
        assert(!(tmp_res != 0));
        tmp_dict_key_39 = const_str_plain_uploader;
        CHECK_OBJECT(var_video_uploader);
        tmp_dict_value_39 = var_video_uploader;
        tmp_res = PyDict_SetItem(tmp_args_element_name_113, tmp_dict_key_39, tmp_dict_value_39);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2561;
        {
            PyObject *call_args[] = {tmp_args_element_name_113};
            tmp_call_result_26 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_72, const_str_plain_update, call_args);
        }

        Py_DECREF(tmp_args_element_name_113);
        if (tmp_call_result_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2561;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_9;
        }
        Py_DECREF(tmp_call_result_26);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 2560;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_9;
    }
    goto loop_start_2;
    loop_end_2:;
    goto try_end_5;
    // Exception handler code:
    try_except_handler_9:;
    exception_keeper_type_7 = exception_type;
    exception_keeper_value_7 = exception_value;
    exception_keeper_tb_7 = exception_tb;
    exception_keeper_lineno_7 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_7;
    exception_value = exception_keeper_value_7;
    exception_tb = exception_keeper_tb_7;
    exception_lineno = exception_keeper_lineno_7;

    goto frame_exception_exit_1;
    // End of try:
    try_end_5:;
    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;

    CHECK_OBJECT(var_playlist);
    tmp_return_value = var_playlist;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_46:;
    {
        PyObject *tmp_assign_source_72;
        PyObject *tmp_called_instance_73;
        PyObject *tmp_mvar_value_44;
        PyObject *tmp_args_element_name_114;
        tmp_mvar_value_44 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SVTIE);

        if (unlikely(tmp_mvar_value_44 == NULL)) {
            tmp_mvar_value_44 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_SVTIE);
        }

        if (tmp_mvar_value_44 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40458 ], 27, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2568;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_73 = tmp_mvar_value_44;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_114 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2568;
        {
            PyObject *call_args[] = {tmp_args_element_name_114};
            tmp_assign_source_72 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_73, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2568;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_svt_url == NULL);
        var_svt_url = tmp_assign_source_72;
    }
    {
        nuitka_bool tmp_condition_result_49;
        int tmp_truth_name_35;
        CHECK_OBJECT(var_svt_url);
        tmp_truth_name_35 = CHECK_IF_TRUE(var_svt_url);
        if (tmp_truth_name_35 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2569;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_49 = tmp_truth_name_35 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_49 == NUITKA_BOOL_TRUE) {
            goto branch_yes_47;
        } else {
            goto branch_no_47;
        }
    }
    branch_yes_47:;
    {
        PyObject *tmp_called_instance_74;
        PyObject *tmp_args_element_name_115;
        PyObject *tmp_args_element_name_116;
        CHECK_OBJECT(par_self);
        tmp_called_instance_74 = par_self;
        CHECK_OBJECT(var_svt_url);
        tmp_args_element_name_115 = var_svt_url;
        tmp_args_element_name_116 = const_str_plain_SVT;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2570;
        {
            PyObject *call_args[] = {tmp_args_element_name_115, tmp_args_element_name_116};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_74, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2570;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_47:;
    {
        PyObject *tmp_assign_source_73;
        PyObject *tmp_called_instance_75;
        PyObject *tmp_mvar_value_45;
        PyObject *tmp_args_element_name_117;
        PyObject *tmp_args_element_name_118;
        tmp_mvar_value_45 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_45 == NULL)) {
            tmp_mvar_value_45 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_45 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2573;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_75 = tmp_mvar_value_45;
        tmp_args_element_name_117 = const_str_digest_921616c76e63d01864e0b5bc16b2bd01;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_118 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2573;
        {
            PyObject *call_args[] = {tmp_args_element_name_117, tmp_args_element_name_118};
            tmp_assign_source_73 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_75, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2573;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mobj == NULL);
        var_mobj = tmp_assign_source_73;
    }
    {
        nuitka_bool tmp_condition_result_50;
        PyObject *tmp_compexpr_left_19;
        PyObject *tmp_compexpr_right_19;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_19 = var_mobj;
        tmp_compexpr_right_19 = Py_None;
        tmp_condition_result_50 = (tmp_compexpr_left_19 != tmp_compexpr_right_19) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_50 == NUITKA_BOOL_TRUE) {
            goto branch_yes_48;
        } else {
            goto branch_no_48;
        }
    }
    branch_yes_48:;
    {
        PyObject *tmp_assign_source_74;
        PyObject *tmp_called_name_51;
        PyObject *tmp_mvar_value_46;
        PyObject *tmp_args_element_name_119;
        PyObject *tmp_called_instance_76;
        tmp_mvar_value_46 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unescapeHTML);

        if (unlikely(tmp_mvar_value_46 == NULL)) {
            tmp_mvar_value_46 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unescapeHTML);
        }

        if (tmp_mvar_value_46 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33553 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2575;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_51 = tmp_mvar_value_46;
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_76 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2575;
        tmp_args_element_name_119 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_76, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_pos_1_tuple, 0));

        if (tmp_args_element_name_119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2575;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2575;
        tmp_assign_source_74 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_51, tmp_args_element_name_119);
        Py_DECREF(tmp_args_element_name_119);
        if (tmp_assign_source_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2575;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_burl == NULL);
        var_burl = tmp_assign_source_74;
    }
    {
        PyObject *tmp_called_instance_77;
        PyObject *tmp_args_element_name_120;
        CHECK_OBJECT(par_self);
        tmp_called_instance_77 = par_self;
        CHECK_OBJECT(var_burl);
        tmp_args_element_name_120 = var_burl;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2577;
        {
            PyObject *call_args[] = {tmp_args_element_name_120};
            tmp_return_value = CALL_METHOD_WITH_ARGS1(tmp_called_instance_77, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2577;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_48:;
    {
        PyObject *tmp_assign_source_75;
        PyObject *tmp_called_instance_78;
        PyObject *tmp_mvar_value_47;
        PyObject *tmp_args_element_name_121;
        PyObject *tmp_args_element_name_122;
        tmp_mvar_value_47 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_47 == NULL)) {
            tmp_mvar_value_47 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_47 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2580;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_78 = tmp_mvar_value_47;
        tmp_args_element_name_121 = const_str_digest_d16a76ff3433599b3d11b7abc309b9a8;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_122 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2580;
        {
            PyObject *call_args[] = {tmp_args_element_name_121, tmp_args_element_name_122};
            tmp_assign_source_75 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_78, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2580;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_75;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_51;
        PyObject *tmp_compexpr_left_20;
        PyObject *tmp_compexpr_right_20;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_20 = var_mobj;
        tmp_compexpr_right_20 = Py_None;
        tmp_condition_result_51 = (tmp_compexpr_left_20 != tmp_compexpr_right_20) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_51 == NUITKA_BOOL_TRUE) {
            goto branch_yes_49;
        } else {
            goto branch_no_49;
        }
    }
    branch_yes_49:;
    {
        PyObject *tmp_called_name_52;
        PyObject *tmp_expression_name_60;
        PyObject *tmp_args_element_name_123;
        PyObject *tmp_called_instance_79;
        CHECK_OBJECT(par_self);
        tmp_expression_name_60 = par_self;
        tmp_called_name_52 = LOOKUP_ATTRIBUTE(tmp_expression_name_60, const_str_plain_url_result);
        if (tmp_called_name_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2583;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_79 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2583;
        tmp_args_element_name_123 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_79, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_52);

            exception_lineno = 2583;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2583;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_52, tmp_args_element_name_123);
        Py_DECREF(tmp_called_name_52);
        Py_DECREF(tmp_args_element_name_123);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2583;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_49:;
    {
        PyObject *tmp_assign_source_76;
        PyObject *tmp_called_instance_80;
        PyObject *tmp_mvar_value_48;
        PyObject *tmp_args_element_name_124;
        PyObject *tmp_args_element_name_125;
        tmp_mvar_value_48 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_48 == NULL)) {
            tmp_mvar_value_48 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_48 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2586;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_80 = tmp_mvar_value_48;
        tmp_args_element_name_124 = const_str_digest_7c58bc025430cd6cdbe7998edc1a7ca2;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_125 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2586;
        {
            PyObject *call_args[] = {tmp_args_element_name_124, tmp_args_element_name_125};
            tmp_assign_source_76 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_80, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2586;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_76;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_52;
        PyObject *tmp_compexpr_left_21;
        PyObject *tmp_compexpr_right_21;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_21 = var_mobj;
        tmp_compexpr_right_21 = Py_None;
        tmp_condition_result_52 = (tmp_compexpr_left_21 != tmp_compexpr_right_21) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_52 == NUITKA_BOOL_TRUE) {
            goto branch_yes_50;
        } else {
            goto branch_no_50;
        }
    }
    branch_yes_50:;
    {
        PyObject *tmp_called_name_53;
        PyObject *tmp_expression_name_61;
        PyObject *tmp_args_element_name_126;
        PyObject *tmp_called_instance_81;
        CHECK_OBJECT(par_self);
        tmp_expression_name_61 = par_self;
        tmp_called_name_53 = LOOKUP_ATTRIBUTE(tmp_expression_name_61, const_str_plain_url_result);
        if (tmp_called_name_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2590;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_81 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2590;
        tmp_args_element_name_126 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_81, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_53);

            exception_lineno = 2590;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2590;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_53, tmp_args_element_name_126);
        Py_DECREF(tmp_called_name_53);
        Py_DECREF(tmp_args_element_name_126);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2590;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_50:;
    {
        PyObject *tmp_assign_source_77;
        PyObject *tmp_called_instance_82;
        PyObject *tmp_mvar_value_49;
        PyObject *tmp_args_element_name_127;
        PyObject *tmp_args_element_name_128;
        tmp_mvar_value_49 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_49 == NULL)) {
            tmp_mvar_value_49 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_49 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2593;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_82 = tmp_mvar_value_49;
        tmp_args_element_name_127 = const_str_digest_ae39c020b5b208245be0c24eeebc91c5;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_128 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2593;
        {
            PyObject *call_args[] = {tmp_args_element_name_127, tmp_args_element_name_128};
            tmp_assign_source_77 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_82, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2593;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_77;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_53;
        PyObject *tmp_compexpr_left_22;
        PyObject *tmp_compexpr_right_22;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_22 = var_mobj;
        tmp_compexpr_right_22 = Py_None;
        tmp_condition_result_53 = (tmp_compexpr_left_22 != tmp_compexpr_right_22) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_53 == NUITKA_BOOL_TRUE) {
            goto branch_yes_51;
        } else {
            goto branch_no_51;
        }
    }
    branch_yes_51:;
    {
        PyObject *tmp_called_name_54;
        PyObject *tmp_expression_name_62;
        PyObject *tmp_args_element_name_129;
        PyObject *tmp_called_instance_83;
        CHECK_OBJECT(par_self);
        tmp_expression_name_62 = par_self;
        tmp_called_name_54 = LOOKUP_ATTRIBUTE(tmp_expression_name_62, const_str_plain_url_result);
        if (tmp_called_name_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2597;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_83 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2597;
        tmp_args_element_name_129 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_83, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_129 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_54);

            exception_lineno = 2597;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2597;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_54, tmp_args_element_name_129);
        Py_DECREF(tmp_called_name_54);
        Py_DECREF(tmp_args_element_name_129);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2597;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_51:;
    {
        PyObject *tmp_assign_source_78;
        PyObject *tmp_called_instance_84;
        PyObject *tmp_mvar_value_50;
        PyObject *tmp_args_element_name_130;
        PyObject *tmp_args_element_name_131;
        tmp_mvar_value_50 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_50 == NULL)) {
            tmp_mvar_value_50 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_50 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2600;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_84 = tmp_mvar_value_50;
        tmp_args_element_name_130 = const_str_digest_6b57e372ef691a0d1517bd7036101142;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_131 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2600;
        {
            PyObject *call_args[] = {tmp_args_element_name_130, tmp_args_element_name_131};
            tmp_assign_source_78 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_84, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2600;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_78;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_54;
        PyObject *tmp_compexpr_left_23;
        PyObject *tmp_compexpr_right_23;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_23 = var_mobj;
        tmp_compexpr_right_23 = Py_None;
        tmp_condition_result_54 = (tmp_compexpr_left_23 != tmp_compexpr_right_23) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_54 == NUITKA_BOOL_TRUE) {
            goto branch_yes_52;
        } else {
            goto branch_no_52;
        }
    }
    branch_yes_52:;
    {
        PyObject *tmp_called_name_55;
        PyObject *tmp_expression_name_63;
        PyObject *tmp_args_element_name_132;
        PyObject *tmp_called_instance_85;
        CHECK_OBJECT(par_self);
        tmp_expression_name_63 = par_self;
        tmp_called_name_55 = LOOKUP_ATTRIBUTE(tmp_expression_name_63, const_str_plain_url_result);
        if (tmp_called_name_55 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2603;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_85 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2603;
        tmp_args_element_name_132 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_85, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_55);

            exception_lineno = 2603;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2603;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_55, tmp_args_element_name_132);
        Py_DECREF(tmp_called_name_55);
        Py_DECREF(tmp_args_element_name_132);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2603;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_52:;
    {
        PyObject *tmp_assign_source_79;
        int tmp_or_left_truth_2;
        PyObject *tmp_or_left_value_2;
        PyObject *tmp_or_right_value_2;
        PyObject *tmp_called_instance_86;
        PyObject *tmp_mvar_value_51;
        PyObject *tmp_args_element_name_133;
        PyObject *tmp_args_element_name_134;
        int tmp_or_left_truth_3;
        PyObject *tmp_or_left_value_3;
        PyObject *tmp_or_right_value_3;
        PyObject *tmp_called_instance_87;
        PyObject *tmp_mvar_value_52;
        PyObject *tmp_args_element_name_135;
        PyObject *tmp_args_element_name_136;
        int tmp_or_left_truth_4;
        PyObject *tmp_or_left_value_4;
        PyObject *tmp_or_right_value_4;
        PyObject *tmp_called_instance_88;
        PyObject *tmp_mvar_value_53;
        PyObject *tmp_args_element_name_137;
        PyObject *tmp_args_element_name_138;
        int tmp_or_left_truth_5;
        PyObject *tmp_or_left_value_5;
        PyObject *tmp_or_right_value_5;
        PyObject *tmp_called_instance_89;
        PyObject *tmp_mvar_value_54;
        PyObject *tmp_args_element_name_139;
        PyObject *tmp_args_element_name_140;
        PyObject *tmp_called_instance_90;
        PyObject *tmp_mvar_value_55;
        PyObject *tmp_args_element_name_141;
        PyObject *tmp_args_element_name_142;
        tmp_mvar_value_51 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_51 == NULL)) {
            tmp_mvar_value_51 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_51 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2606;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_86 = tmp_mvar_value_51;
        tmp_args_element_name_133 = const_str_digest_a134433850cf92dc37d22f57dfe99c73;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_134 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2606;
        {
            PyObject *call_args[] = {tmp_args_element_name_133, tmp_args_element_name_134};
            tmp_or_left_value_2 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_86, const_str_plain_search, call_args);
        }

        if (tmp_or_left_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2606;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_2 = CHECK_IF_TRUE(tmp_or_left_value_2);
        if (tmp_or_left_truth_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_2);

            exception_lineno = 2610;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_2 == 1) {
            goto or_left_2;
        } else {
            goto or_right_2;
        }
        or_right_2:;
        Py_DECREF(tmp_or_left_value_2);
        tmp_mvar_value_52 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_52 == NULL)) {
            tmp_mvar_value_52 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_52 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2607;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_87 = tmp_mvar_value_52;
        tmp_args_element_name_135 = const_str_digest_d3f6b8d28bf0260ba4ca2ea9679731cf;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_136 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2607;
        {
            PyObject *call_args[] = {tmp_args_element_name_135, tmp_args_element_name_136};
            tmp_or_left_value_3 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_87, const_str_plain_search, call_args);
        }

        if (tmp_or_left_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2607;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_3 = CHECK_IF_TRUE(tmp_or_left_value_3);
        if (tmp_or_left_truth_3 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_3);

            exception_lineno = 2610;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_3 == 1) {
            goto or_left_3;
        } else {
            goto or_right_3;
        }
        or_right_3:;
        Py_DECREF(tmp_or_left_value_3);
        tmp_mvar_value_53 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_53 == NULL)) {
            tmp_mvar_value_53 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_53 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2608;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_88 = tmp_mvar_value_53;
        tmp_args_element_name_137 = const_str_digest_ed263cba5fe67faebdc1e8a2fd773505;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_138 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2608;
        {
            PyObject *call_args[] = {tmp_args_element_name_137, tmp_args_element_name_138};
            tmp_or_left_value_4 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_88, const_str_plain_search, call_args);
        }

        if (tmp_or_left_value_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2608;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_4 = CHECK_IF_TRUE(tmp_or_left_value_4);
        if (tmp_or_left_truth_4 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_4);

            exception_lineno = 2610;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_4 == 1) {
            goto or_left_4;
        } else {
            goto or_right_4;
        }
        or_right_4:;
        Py_DECREF(tmp_or_left_value_4);
        tmp_mvar_value_54 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_54 == NULL)) {
            tmp_mvar_value_54 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_54 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2609;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_89 = tmp_mvar_value_54;
        tmp_args_element_name_139 = const_str_digest_411d9b323c28c23b6a536f3244f71089;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_140 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2609;
        {
            PyObject *call_args[] = {tmp_args_element_name_139, tmp_args_element_name_140};
            tmp_or_left_value_5 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_89, const_str_plain_search, call_args);
        }

        if (tmp_or_left_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2609;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_5 = CHECK_IF_TRUE(tmp_or_left_value_5);
        if (tmp_or_left_truth_5 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_5);

            exception_lineno = 2610;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_5 == 1) {
            goto or_left_5;
        } else {
            goto or_right_5;
        }
        or_right_5:;
        Py_DECREF(tmp_or_left_value_5);
        tmp_mvar_value_55 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_55 == NULL)) {
            tmp_mvar_value_55 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_55 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2610;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_90 = tmp_mvar_value_55;
        tmp_args_element_name_141 = const_str_digest_a4fcf7a56351a360a298011e3cb8faf3;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_142 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2610;
        {
            PyObject *call_args[] = {tmp_args_element_name_141, tmp_args_element_name_142};
            tmp_or_right_value_5 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_90, const_str_plain_search, call_args);
        }

        if (tmp_or_right_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2610;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_right_value_4 = tmp_or_right_value_5;
        goto or_end_5;
        or_left_5:;
        tmp_or_right_value_4 = tmp_or_left_value_5;
        or_end_5:;
        tmp_or_right_value_3 = tmp_or_right_value_4;
        goto or_end_4;
        or_left_4:;
        tmp_or_right_value_3 = tmp_or_left_value_4;
        or_end_4:;
        tmp_or_right_value_2 = tmp_or_right_value_3;
        goto or_end_3;
        or_left_3:;
        tmp_or_right_value_2 = tmp_or_left_value_3;
        or_end_3:;
        tmp_assign_source_79 = tmp_or_right_value_2;
        goto or_end_2;
        or_left_2:;
        tmp_assign_source_79 = tmp_or_left_value_2;
        or_end_2:;
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_79;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_55;
        PyObject *tmp_compexpr_left_24;
        PyObject *tmp_compexpr_right_24;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_24 = var_mobj;
        tmp_compexpr_right_24 = Py_None;
        tmp_condition_result_55 = (tmp_compexpr_left_24 != tmp_compexpr_right_24) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_55 == NUITKA_BOOL_TRUE) {
            goto branch_yes_53;
        } else {
            goto branch_no_53;
        }
    }
    branch_yes_53:;
    {
        PyObject *tmp_assign_source_80;
        PyObject *tmp_called_name_56;
        PyObject *tmp_expression_name_64;
        PyObject *tmp_args_name_21;
        PyObject *tmp_tuple_element_22;
        PyObject *tmp_kw_name_21;
        CHECK_OBJECT(par_self);
        tmp_expression_name_64 = par_self;
        tmp_called_name_56 = LOOKUP_ATTRIBUTE(tmp_expression_name_64, const_str_plain__search_regex);
        if (tmp_called_name_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2612;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_tuple_element_22 = const_str_digest_2febe8e93923d08edeca3ff81438e8b8;
        tmp_args_name_21 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_22);
        PyTuple_SET_ITEM(tmp_args_name_21, 0, tmp_tuple_element_22);
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_tuple_element_22 = PyCell_GET(var_webpage);
        Py_INCREF(tmp_tuple_element_22);
        PyTuple_SET_ITEM(tmp_args_name_21, 1, tmp_tuple_element_22);
        tmp_tuple_element_22 = const_str_digest_a3473a08eefedd57d3731509f04ba32a;
        Py_INCREF(tmp_tuple_element_22);
        PyTuple_SET_ITEM(tmp_args_name_21, 2, tmp_tuple_element_22);
        tmp_kw_name_21 = PyDict_Copy(const_dict_6dc2f89fb2b035a2c0a0ed28a753f1c8);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2612;
        tmp_assign_source_80 = CALL_FUNCTION(tmp_called_name_56, tmp_args_name_21, tmp_kw_name_21);
        Py_DECREF(tmp_called_name_56);
        Py_DECREF(tmp_args_name_21);
        Py_DECREF(tmp_kw_name_21);
        if (tmp_assign_source_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2612;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_embed_token == NULL);
        var_embed_token = tmp_assign_source_80;
    }
    {
        PyObject *tmp_called_name_57;
        PyObject *tmp_expression_name_65;
        PyObject *tmp_mvar_value_56;
        PyObject *tmp_args_element_name_143;
        PyObject *tmp_called_name_58;
        PyObject *tmp_mvar_value_57;
        PyObject *tmp_args_element_name_144;
        PyObject *tmp_called_instance_91;
        PyObject *tmp_args_element_name_145;
        PyObject *tmp_dict_key_40;
        PyObject *tmp_dict_value_40;
        PyObject *tmp_dict_key_41;
        PyObject *tmp_dict_value_41;
        tmp_mvar_value_56 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_OoyalaIE);

        if (unlikely(tmp_mvar_value_56 == NULL)) {
            tmp_mvar_value_56 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_OoyalaIE);
        }

        if (tmp_mvar_value_56 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40485 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2615;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_name_65 = tmp_mvar_value_56;
        tmp_called_name_57 = LOOKUP_ATTRIBUTE(tmp_expression_name_65, const_str_plain__build_url_result);
        if (tmp_called_name_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2615;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_57 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_smuggle_url);

        if (unlikely(tmp_mvar_value_57 == NULL)) {
            tmp_mvar_value_57 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_smuggle_url);
        }

        if (tmp_mvar_value_57 == NULL) {
            Py_DECREF(tmp_called_name_57);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 34727 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2615;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_58 = tmp_mvar_value_57;
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_91 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2616;
        tmp_args_element_name_144 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_91, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_ec_tuple, 0));

        if (tmp_args_element_name_144 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_57);

            exception_lineno = 2616;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_40 = const_str_plain_domain;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_dict_value_40 = PyCell_GET(par_url);
        tmp_args_element_name_145 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_145, tmp_dict_key_40, tmp_dict_value_40);
        assert(!(tmp_res != 0));
        tmp_dict_key_41 = const_str_plain_embed_token;
        CHECK_OBJECT(var_embed_token);
        tmp_dict_value_41 = var_embed_token;
        tmp_res = PyDict_SetItem(tmp_args_element_name_145, tmp_dict_key_41, tmp_dict_value_41);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2615;
        {
            PyObject *call_args[] = {tmp_args_element_name_144, tmp_args_element_name_145};
            tmp_args_element_name_143 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_58, call_args);
        }

        Py_DECREF(tmp_args_element_name_144);
        Py_DECREF(tmp_args_element_name_145);
        if (tmp_args_element_name_143 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_57);

            exception_lineno = 2615;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2615;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_57, tmp_args_element_name_143);
        Py_DECREF(tmp_called_name_57);
        Py_DECREF(tmp_args_element_name_143);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2615;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_53:;
    {
        PyObject *tmp_assign_source_81;
        PyObject *tmp_called_instance_92;
        PyObject *tmp_mvar_value_58;
        PyObject *tmp_args_element_name_146;
        PyObject *tmp_args_element_name_147;
        tmp_mvar_value_58 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_58 == NULL)) {
            tmp_mvar_value_58 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_58 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2622;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_92 = tmp_mvar_value_58;
        tmp_args_element_name_146 = const_str_digest_48621dfff9487dce0082bb89d155e6a8;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_147 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2622;
        {
            PyObject *call_args[] = {tmp_args_element_name_146, tmp_args_element_name_147};
            tmp_assign_source_81 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_92, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2622;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_81;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_56;
        PyObject *tmp_compexpr_left_25;
        PyObject *tmp_compexpr_right_25;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_25 = var_mobj;
        tmp_compexpr_right_25 = Py_None;
        tmp_condition_result_56 = (tmp_compexpr_left_25 != tmp_compexpr_right_25) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_56 == NUITKA_BOOL_TRUE) {
            goto branch_yes_54;
        } else {
            goto branch_no_54;
        }
    }
    branch_yes_54:;
    {
        PyObject *tmp_assign_source_82;
        PyObject *tmp_called_name_59;
        PyObject *tmp_expression_name_66;
        PyObject *tmp_args_name_22;
        PyObject *tmp_tuple_element_23;
        PyObject *tmp_called_instance_93;
        PyObject *tmp_kw_name_22;
        CHECK_OBJECT(par_self);
        tmp_expression_name_66 = par_self;
        tmp_called_name_59 = LOOKUP_ATTRIBUTE(tmp_expression_name_66, const_str_plain__parse_json);
        if (tmp_called_name_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2624;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_93 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2624;
        tmp_tuple_element_23 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_93, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_pos_1_tuple, 0));

        if (tmp_tuple_element_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_59);

            exception_lineno = 2624;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_name_22 = PyTuple_New(2);
        PyTuple_SET_ITEM(tmp_args_name_22, 0, tmp_tuple_element_23);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_23 = var_video_id;
        Py_INCREF(tmp_tuple_element_23);
        PyTuple_SET_ITEM(tmp_args_name_22, 1, tmp_tuple_element_23);
        tmp_kw_name_22 = PyDict_Copy(const_dict_f95321192b139e241e1ec13397bf5b8f);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2624;
        tmp_assign_source_82 = CALL_FUNCTION(tmp_called_name_59, tmp_args_name_22, tmp_kw_name_22);
        Py_DECREF(tmp_called_name_59);
        Py_DECREF(tmp_args_name_22);
        Py_DECREF(tmp_kw_name_22);
        if (tmp_assign_source_82 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2624;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_embeds == NULL);
        var_embeds = tmp_assign_source_82;
    }
    {
        nuitka_bool tmp_condition_result_57;
        int tmp_truth_name_36;
        CHECK_OBJECT(var_embeds);
        tmp_truth_name_36 = CHECK_IF_TRUE(var_embeds);
        if (tmp_truth_name_36 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2625;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_57 = tmp_truth_name_36 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_57 == NUITKA_BOOL_TRUE) {
            goto branch_yes_55;
        } else {
            goto branch_no_55;
        }
    }
    branch_yes_55:;
    {
        PyObject *tmp_called_name_60;
        PyObject *tmp_expression_name_67;
        PyObject *tmp_args_name_23;
        PyObject *tmp_tuple_element_24;
        PyObject *tmp_kw_name_23;
        PyObject *tmp_dict_key_42;
        PyObject *tmp_dict_value_42;
        PyObject *tmp_dict_key_43;
        PyObject *tmp_dict_value_43;
        CHECK_OBJECT(par_self);
        tmp_expression_name_67 = par_self;
        tmp_called_name_60 = LOOKUP_ATTRIBUTE(tmp_expression_name_67, const_str_plain_playlist_from_matches);
        if (tmp_called_name_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2626;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_embeds);
        tmp_tuple_element_24 = var_embeds;
        tmp_args_name_23 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_24);
        PyTuple_SET_ITEM(tmp_args_name_23, 0, tmp_tuple_element_24);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_24 = var_video_id;
        Py_INCREF(tmp_tuple_element_24);
        PyTuple_SET_ITEM(tmp_args_name_23, 1, tmp_tuple_element_24);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_24 = var_video_title;
        Py_INCREF(tmp_tuple_element_24);
        PyTuple_SET_ITEM(tmp_args_name_23, 2, tmp_tuple_element_24);
        tmp_dict_key_42 = const_str_plain_getter;
        tmp_dict_value_42 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_4_lambda();

        ((struct Nuitka_FunctionObject *)tmp_dict_value_42)->m_closure[0] = par_url;
        Py_INCREF(((struct Nuitka_FunctionObject *)tmp_dict_value_42)->m_closure[0]);


        tmp_kw_name_23 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_23, tmp_dict_key_42, tmp_dict_value_42);
        Py_DECREF(tmp_dict_value_42);
        assert(!(tmp_res != 0));
        tmp_dict_key_43 = const_str_plain_ie;
        tmp_dict_value_43 = const_str_plain_Ooyala;
        tmp_res = PyDict_SetItem(tmp_kw_name_23, tmp_dict_key_43, tmp_dict_value_43);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2626;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_60, tmp_args_name_23, tmp_kw_name_23);
        Py_DECREF(tmp_called_name_60);
        Py_DECREF(tmp_args_name_23);
        Py_DECREF(tmp_kw_name_23);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2626;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_55:;
    branch_no_54:;
    {
        PyObject *tmp_assign_source_83;
        PyObject *tmp_called_instance_94;
        PyObject *tmp_mvar_value_59;
        PyObject *tmp_args_element_name_148;
        PyObject *tmp_args_element_name_149;
        tmp_mvar_value_59 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_59 == NULL)) {
            tmp_mvar_value_59 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_59 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2631;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_94 = tmp_mvar_value_59;
        tmp_args_element_name_148 = const_str_digest_2d31fe9d770cf57c1cef12e7b5fdc3ae;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_149 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2631;
        {
            PyObject *call_args[] = {tmp_args_element_name_148, tmp_args_element_name_149};
            tmp_assign_source_83 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_94, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2631;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_83;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_58;
        PyObject *tmp_compexpr_left_26;
        PyObject *tmp_compexpr_right_26;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_26 = var_mobj;
        tmp_compexpr_right_26 = Py_None;
        tmp_condition_result_58 = (tmp_compexpr_left_26 != tmp_compexpr_right_26) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_58 == NUITKA_BOOL_TRUE) {
            goto branch_yes_56;
        } else {
            goto branch_no_56;
        }
    }
    branch_yes_56:;
    {
        PyObject *tmp_called_name_61;
        PyObject *tmp_expression_name_68;
        PyObject *tmp_args_element_name_150;
        PyObject *tmp_called_instance_95;
        PyObject *tmp_args_element_name_151;
        CHECK_OBJECT(par_self);
        tmp_expression_name_68 = par_self;
        tmp_called_name_61 = LOOKUP_ATTRIBUTE(tmp_expression_name_68, const_str_plain_url_result);
        if (tmp_called_name_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2633;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_95 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2633;
        tmp_args_element_name_150 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_95, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_pos_1_tuple, 0));

        if (tmp_args_element_name_150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_61);

            exception_lineno = 2633;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_151 = const_str_plain_Aparat;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2633;
        {
            PyObject *call_args[] = {tmp_args_element_name_150, tmp_args_element_name_151};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_61, call_args);
        }

        Py_DECREF(tmp_called_name_61);
        Py_DECREF(tmp_args_element_name_150);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2633;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_56:;
    {
        PyObject *tmp_assign_source_84;
        PyObject *tmp_called_instance_96;
        PyObject *tmp_mvar_value_60;
        PyObject *tmp_args_element_name_152;
        PyObject *tmp_args_element_name_153;
        tmp_mvar_value_60 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_60 == NULL)) {
            tmp_mvar_value_60 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_60 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2636;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_96 = tmp_mvar_value_60;
        tmp_args_element_name_152 = const_str_digest_aa00e9de76eac7ed562a936d8dab5cad;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_153 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2636;
        {
            PyObject *call_args[] = {tmp_args_element_name_152, tmp_args_element_name_153};
            tmp_assign_source_84 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_96, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_84 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2636;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_84;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_59;
        PyObject *tmp_compexpr_left_27;
        PyObject *tmp_compexpr_right_27;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_27 = var_mobj;
        tmp_compexpr_right_27 = Py_None;
        tmp_condition_result_59 = (tmp_compexpr_left_27 != tmp_compexpr_right_27) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_59 == NUITKA_BOOL_TRUE) {
            goto branch_yes_57;
        } else {
            goto branch_no_57;
        }
    }
    branch_yes_57:;
    {
        PyObject *tmp_called_name_62;
        PyObject *tmp_expression_name_69;
        PyObject *tmp_args_element_name_154;
        PyObject *tmp_called_instance_97;
        PyObject *tmp_args_element_name_155;
        CHECK_OBJECT(par_self);
        tmp_expression_name_69 = par_self;
        tmp_called_name_62 = LOOKUP_ATTRIBUTE(tmp_expression_name_69, const_str_plain_url_result);
        if (tmp_called_name_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2638;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_97 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2638;
        tmp_args_element_name_154 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_97, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_pos_1_tuple, 0));

        if (tmp_args_element_name_154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_62);

            exception_lineno = 2638;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_155 = const_str_plain_Mpora;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2638;
        {
            PyObject *call_args[] = {tmp_args_element_name_154, tmp_args_element_name_155};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_62, call_args);
        }

        Py_DECREF(tmp_called_name_62);
        Py_DECREF(tmp_args_element_name_154);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2638;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_57:;
    {
        PyObject *tmp_assign_source_85;
        PyObject *tmp_called_instance_98;
        PyObject *tmp_mvar_value_61;
        PyObject *tmp_args_element_name_156;
        tmp_mvar_value_61 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_FacebookIE);

        if (unlikely(tmp_mvar_value_61 == NULL)) {
            tmp_mvar_value_61 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_FacebookIE);
        }

        if (tmp_mvar_value_61 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 36843 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2641;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_98 = tmp_mvar_value_61;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_156 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2641;
        {
            PyObject *call_args[] = {tmp_args_element_name_156};
            tmp_assign_source_85 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_98, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2641;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_facebook_urls == NULL);
        var_facebook_urls = tmp_assign_source_85;
    }
    {
        nuitka_bool tmp_condition_result_60;
        int tmp_truth_name_37;
        CHECK_OBJECT(var_facebook_urls);
        tmp_truth_name_37 = CHECK_IF_TRUE(var_facebook_urls);
        if (tmp_truth_name_37 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2642;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_60 = tmp_truth_name_37 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_60 == NUITKA_BOOL_TRUE) {
            goto branch_yes_58;
        } else {
            goto branch_no_58;
        }
    }
    branch_yes_58:;
    {
        PyObject *tmp_called_instance_99;
        PyObject *tmp_args_element_name_157;
        PyObject *tmp_args_element_name_158;
        PyObject *tmp_args_element_name_159;
        CHECK_OBJECT(par_self);
        tmp_called_instance_99 = par_self;
        CHECK_OBJECT(var_facebook_urls);
        tmp_args_element_name_157 = var_facebook_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_158 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_name_159 = var_video_title;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2643;
        {
            PyObject *call_args[] = {tmp_args_element_name_157, tmp_args_element_name_158, tmp_args_element_name_159};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(tmp_called_instance_99, const_str_plain_playlist_from_matches, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2643;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_58:;
    {
        PyObject *tmp_assign_source_86;
        PyObject *tmp_called_instance_100;
        PyObject *tmp_mvar_value_62;
        PyObject *tmp_args_element_name_160;
        PyObject *tmp_args_element_name_161;
        tmp_mvar_value_62 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_62 == NULL)) {
            tmp_mvar_value_62 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_62 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2646;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_100 = tmp_mvar_value_62;
        tmp_args_element_name_160 = const_str_digest_4ea6ee14b746f425108af009ad74f61d;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_161 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2646;
        {
            PyObject *call_args[] = {tmp_args_element_name_160, tmp_args_element_name_161};
            tmp_assign_source_86 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_100, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2646;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_86;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_61;
        PyObject *tmp_compexpr_left_28;
        PyObject *tmp_compexpr_right_28;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_28 = var_mobj;
        tmp_compexpr_right_28 = Py_None;
        tmp_condition_result_61 = (tmp_compexpr_left_28 != tmp_compexpr_right_28) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_61 == NUITKA_BOOL_TRUE) {
            goto branch_yes_59;
        } else {
            goto branch_no_59;
        }
    }
    branch_yes_59:;
    {
        PyObject *tmp_called_name_63;
        PyObject *tmp_expression_name_70;
        PyObject *tmp_args_element_name_162;
        PyObject *tmp_called_instance_101;
        PyObject *tmp_args_element_name_163;
        CHECK_OBJECT(par_self);
        tmp_expression_name_70 = par_self;
        tmp_called_name_63 = LOOKUP_ATTRIBUTE(tmp_expression_name_70, const_str_plain_url_result);
        if (tmp_called_name_63 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2648;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_101 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2648;
        tmp_args_element_name_162 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_101, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_162 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_63);

            exception_lineno = 2648;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_163 = const_str_plain_VK;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2648;
        {
            PyObject *call_args[] = {tmp_args_element_name_162, tmp_args_element_name_163};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_63, call_args);
        }

        Py_DECREF(tmp_called_name_63);
        Py_DECREF(tmp_args_element_name_162);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2648;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_59:;
    {
        PyObject *tmp_assign_source_87;
        PyObject *tmp_called_instance_102;
        PyObject *tmp_mvar_value_63;
        PyObject *tmp_args_element_name_164;
        tmp_mvar_value_63 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_OdnoklassnikiIE);

        if (unlikely(tmp_mvar_value_63 == NULL)) {
            tmp_mvar_value_63 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_OdnoklassnikiIE);
        }

        if (tmp_mvar_value_63 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40515 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2651;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_102 = tmp_mvar_value_63;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_164 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2651;
        {
            PyObject *call_args[] = {tmp_args_element_name_164};
            tmp_assign_source_87 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_102, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2651;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_odnoklassniki_url == NULL);
        var_odnoklassniki_url = tmp_assign_source_87;
    }
    {
        nuitka_bool tmp_condition_result_62;
        int tmp_truth_name_38;
        CHECK_OBJECT(var_odnoklassniki_url);
        tmp_truth_name_38 = CHECK_IF_TRUE(var_odnoklassniki_url);
        if (tmp_truth_name_38 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2652;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_62 = tmp_truth_name_38 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_62 == NUITKA_BOOL_TRUE) {
            goto branch_yes_60;
        } else {
            goto branch_no_60;
        }
    }
    branch_yes_60:;
    {
        PyObject *tmp_called_name_64;
        PyObject *tmp_expression_name_71;
        PyObject *tmp_args_element_name_165;
        PyObject *tmp_args_element_name_166;
        PyObject *tmp_called_instance_103;
        PyObject *tmp_mvar_value_64;
        CHECK_OBJECT(par_self);
        tmp_expression_name_71 = par_self;
        tmp_called_name_64 = LOOKUP_ATTRIBUTE(tmp_expression_name_71, const_str_plain_url_result);
        if (tmp_called_name_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2653;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_odnoklassniki_url);
        tmp_args_element_name_165 = var_odnoklassniki_url;
        tmp_mvar_value_64 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_OdnoklassnikiIE);

        if (unlikely(tmp_mvar_value_64 == NULL)) {
            tmp_mvar_value_64 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_OdnoklassnikiIE);
        }

        if (tmp_mvar_value_64 == NULL) {
            Py_DECREF(tmp_called_name_64);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40515 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2653;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_103 = tmp_mvar_value_64;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2653;
        tmp_args_element_name_166 = CALL_METHOD_NO_ARGS(tmp_called_instance_103, const_str_plain_ie_key);
        if (tmp_args_element_name_166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_64);

            exception_lineno = 2653;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2653;
        {
            PyObject *call_args[] = {tmp_args_element_name_165, tmp_args_element_name_166};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_64, call_args);
        }

        Py_DECREF(tmp_called_name_64);
        Py_DECREF(tmp_args_element_name_166);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2653;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_60:;
    {
        PyObject *tmp_assign_source_88;
        PyObject *tmp_called_instance_104;
        PyObject *tmp_mvar_value_65;
        PyObject *tmp_args_element_name_167;
        PyObject *tmp_args_element_name_168;
        tmp_mvar_value_65 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_65 == NULL)) {
            tmp_mvar_value_65 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_65 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2656;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_104 = tmp_mvar_value_65;
        tmp_args_element_name_167 = const_str_digest_7ddfc093104a9d475b08ee23c95071af;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_168 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2656;
        {
            PyObject *call_args[] = {tmp_args_element_name_167, tmp_args_element_name_168};
            tmp_assign_source_88 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_104, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2656;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_88;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_63;
        PyObject *tmp_compexpr_left_29;
        PyObject *tmp_compexpr_right_29;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_29 = var_mobj;
        tmp_compexpr_right_29 = Py_None;
        tmp_condition_result_63 = (tmp_compexpr_left_29 != tmp_compexpr_right_29) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_63 == NUITKA_BOOL_TRUE) {
            goto branch_yes_61;
        } else {
            goto branch_no_61;
        }
    }
    branch_yes_61:;
    {
        PyObject *tmp_called_name_65;
        PyObject *tmp_expression_name_72;
        PyObject *tmp_args_element_name_169;
        PyObject *tmp_called_instance_105;
        PyObject *tmp_args_element_name_170;
        CHECK_OBJECT(par_self);
        tmp_expression_name_72 = par_self;
        tmp_called_name_65 = LOOKUP_ATTRIBUTE(tmp_expression_name_72, const_str_plain_url_result);
        if (tmp_called_name_65 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2658;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_105 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2658;
        tmp_args_element_name_169 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_105, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_169 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_65);

            exception_lineno = 2658;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_170 = const_str_plain_Ivi;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2658;
        {
            PyObject *call_args[] = {tmp_args_element_name_169, tmp_args_element_name_170};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_65, call_args);
        }

        Py_DECREF(tmp_called_name_65);
        Py_DECREF(tmp_args_element_name_169);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2658;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_61:;
    {
        PyObject *tmp_assign_source_89;
        PyObject *tmp_called_instance_106;
        PyObject *tmp_mvar_value_66;
        PyObject *tmp_args_element_name_171;
        PyObject *tmp_args_element_name_172;
        tmp_mvar_value_66 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_66 == NULL)) {
            tmp_mvar_value_66 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_66 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2661;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_106 = tmp_mvar_value_66;
        tmp_args_element_name_171 = const_str_digest_256498294869c5f2c9ee1b194f7ccbe5;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_172 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2661;
        {
            PyObject *call_args[] = {tmp_args_element_name_171, tmp_args_element_name_172};
            tmp_assign_source_89 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_106, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2661;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_89;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_64;
        PyObject *tmp_compexpr_left_30;
        PyObject *tmp_compexpr_right_30;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_30 = var_mobj;
        tmp_compexpr_right_30 = Py_None;
        tmp_condition_result_64 = (tmp_compexpr_left_30 != tmp_compexpr_right_30) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_64 == NUITKA_BOOL_TRUE) {
            goto branch_yes_62;
        } else {
            goto branch_no_62;
        }
    }
    branch_yes_62:;
    {
        PyObject *tmp_called_name_66;
        PyObject *tmp_expression_name_73;
        PyObject *tmp_args_element_name_173;
        PyObject *tmp_called_instance_107;
        PyObject *tmp_args_element_name_174;
        CHECK_OBJECT(par_self);
        tmp_expression_name_73 = par_self;
        tmp_called_name_66 = LOOKUP_ATTRIBUTE(tmp_expression_name_73, const_str_plain_url_result);
        if (tmp_called_name_66 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2664;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_107 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2664;
        tmp_args_element_name_173 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_107, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_173 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_66);

            exception_lineno = 2664;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_174 = const_str_plain_HuffPost;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2664;
        {
            PyObject *call_args[] = {tmp_args_element_name_173, tmp_args_element_name_174};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_66, call_args);
        }

        Py_DECREF(tmp_called_name_66);
        Py_DECREF(tmp_args_element_name_173);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2664;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_62:;
    {
        PyObject *tmp_assign_source_90;
        PyObject *tmp_called_instance_108;
        PyObject *tmp_mvar_value_67;
        PyObject *tmp_args_element_name_175;
        PyObject *tmp_args_element_name_176;
        tmp_mvar_value_67 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_67 == NULL)) {
            tmp_mvar_value_67 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_67 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2667;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_108 = tmp_mvar_value_67;
        tmp_args_element_name_175 = const_str_digest_22c49b3ccd72d3ca0b59da218d5ababd;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_176 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2667;
        {
            PyObject *call_args[] = {tmp_args_element_name_175, tmp_args_element_name_176};
            tmp_assign_source_90 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_108, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_90 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2667;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_90;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_65;
        PyObject *tmp_compexpr_left_31;
        PyObject *tmp_compexpr_right_31;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_31 = var_mobj;
        tmp_compexpr_right_31 = Py_None;
        tmp_condition_result_65 = (tmp_compexpr_left_31 != tmp_compexpr_right_31) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_65 == NUITKA_BOOL_TRUE) {
            goto branch_yes_63;
        } else {
            goto branch_no_63;
        }
    }
    branch_yes_63:;
    {
        PyObject *tmp_called_name_67;
        PyObject *tmp_expression_name_74;
        PyObject *tmp_args_element_name_177;
        PyObject *tmp_called_instance_109;
        CHECK_OBJECT(par_self);
        tmp_expression_name_74 = par_self;
        tmp_called_name_67 = LOOKUP_ATTRIBUTE(tmp_expression_name_74, const_str_plain_url_result);
        if (tmp_called_name_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2669;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_109 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2669;
        tmp_args_element_name_177 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_109, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_177 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_67);

            exception_lineno = 2669;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2669;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_67, tmp_args_element_name_177);
        Py_DECREF(tmp_called_name_67);
        Py_DECREF(tmp_args_element_name_177);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2669;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_63:;
    {
        PyObject *tmp_assign_source_91;
        PyObject *tmp_called_instance_110;
        PyObject *tmp_mvar_value_68;
        PyObject *tmp_args_element_name_178;
        PyObject *tmp_args_element_name_179;
        tmp_mvar_value_68 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_68 == NULL)) {
            tmp_mvar_value_68 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_68 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2670;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_110 = tmp_mvar_value_68;
        tmp_args_element_name_178 = const_str_digest_839c6e533c3814af73f6a4e9a4c951ca;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_179 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2670;
        {
            PyObject *call_args[] = {tmp_args_element_name_178, tmp_args_element_name_179};
            tmp_assign_source_91 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_110, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2670;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_91;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_66;
        PyObject *tmp_compexpr_left_32;
        PyObject *tmp_compexpr_right_32;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_32 = var_mobj;
        tmp_compexpr_right_32 = Py_None;
        tmp_condition_result_66 = (tmp_compexpr_left_32 != tmp_compexpr_right_32) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_66 == NUITKA_BOOL_TRUE) {
            goto branch_yes_64;
        } else {
            goto branch_no_64;
        }
    }
    branch_yes_64:;
    {
        PyObject *tmp_called_name_68;
        PyObject *tmp_expression_name_75;
        PyObject *tmp_args_element_name_180;
        PyObject *tmp_called_name_69;
        PyObject *tmp_mvar_value_69;
        PyObject *tmp_args_element_name_181;
        PyObject *tmp_called_instance_111;
        CHECK_OBJECT(par_self);
        tmp_expression_name_75 = par_self;
        tmp_called_name_68 = LOOKUP_ATTRIBUTE(tmp_expression_name_75, const_str_plain_url_result);
        if (tmp_called_name_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2672;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_69 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urllib_parse_unquote);

        if (unlikely(tmp_mvar_value_69 == NULL)) {
            tmp_mvar_value_69 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_urllib_parse_unquote);
        }

        if (tmp_mvar_value_69 == NULL) {
            Py_DECREF(tmp_called_name_68);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 30224 ], 49, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2672;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_69 = tmp_mvar_value_69;
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_111 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2672;
        tmp_args_element_name_181 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_111, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_181 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_68);

            exception_lineno = 2672;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2672;
        tmp_args_element_name_180 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_69, tmp_args_element_name_181);
        Py_DECREF(tmp_args_element_name_181);
        if (tmp_args_element_name_180 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_68);

            exception_lineno = 2672;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2672;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_68, tmp_args_element_name_180);
        Py_DECREF(tmp_called_name_68);
        Py_DECREF(tmp_args_element_name_180);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2672;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_64:;
    {
        PyObject *tmp_assign_source_92;
        PyObject *tmp_called_instance_112;
        PyObject *tmp_mvar_value_70;
        PyObject *tmp_args_element_name_182;
        PyObject *tmp_args_element_name_183;
        tmp_mvar_value_70 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_70 == NULL)) {
            tmp_mvar_value_70 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_70 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2675;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_112 = tmp_mvar_value_70;
        tmp_args_element_name_182 = const_str_digest_8c7e405ed5c7a8ae8b48d3a52a60d929;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_183 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2675;
        {
            PyObject *call_args[] = {tmp_args_element_name_182, tmp_args_element_name_183};
            tmp_assign_source_92 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_112, const_str_plain_findall, call_args);
        }

        if (tmp_assign_source_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2675;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_matches;
            assert(old != NULL);
            var_matches = tmp_assign_source_92;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_67;
        int tmp_truth_name_39;
        CHECK_OBJECT(var_matches);
        tmp_truth_name_39 = CHECK_IF_TRUE(var_matches);
        if (tmp_truth_name_39 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2676;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_67 = tmp_truth_name_39 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_67 == NUITKA_BOOL_TRUE) {
            goto branch_yes_65;
        } else {
            goto branch_no_65;
        }
    }
    branch_yes_65:;
    {
        PyObject *tmp_called_name_70;
        PyObject *tmp_expression_name_76;
        PyObject *tmp_args_name_24;
        PyObject *tmp_tuple_element_25;
        PyObject *tmp_kw_name_24;
        PyObject *tmp_dict_key_44;
        PyObject *tmp_dict_value_44;
        PyObject *tmp_mvar_value_71;
        PyObject *tmp_dict_key_45;
        PyObject *tmp_dict_value_45;
        CHECK_OBJECT(par_self);
        tmp_expression_name_76 = par_self;
        tmp_called_name_70 = LOOKUP_ATTRIBUTE(tmp_expression_name_76, const_str_plain_playlist_from_matches);
        if (tmp_called_name_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2677;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_matches);
        tmp_tuple_element_25 = var_matches;
        tmp_args_name_24 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_25);
        PyTuple_SET_ITEM(tmp_args_name_24, 0, tmp_tuple_element_25);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_25 = var_video_id;
        Py_INCREF(tmp_tuple_element_25);
        PyTuple_SET_ITEM(tmp_args_name_24, 1, tmp_tuple_element_25);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_25 = var_video_title;
        Py_INCREF(tmp_tuple_element_25);
        PyTuple_SET_ITEM(tmp_args_name_24, 2, tmp_tuple_element_25);
        tmp_dict_key_44 = const_str_plain_getter;
        tmp_mvar_value_71 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unescapeHTML);

        if (unlikely(tmp_mvar_value_71 == NULL)) {
            tmp_mvar_value_71 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unescapeHTML);
        }

        if (tmp_mvar_value_71 == NULL) {
            Py_DECREF(tmp_called_name_70);
            Py_DECREF(tmp_args_name_24);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33553 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2678;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_dict_value_44 = tmp_mvar_value_71;
        tmp_kw_name_24 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_24, tmp_dict_key_44, tmp_dict_value_44);
        assert(!(tmp_res != 0));
        tmp_dict_key_45 = const_str_plain_ie;
        tmp_dict_value_45 = const_str_plain_FunnyOrDie;
        tmp_res = PyDict_SetItem(tmp_kw_name_24, tmp_dict_key_45, tmp_dict_value_45);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2677;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_70, tmp_args_name_24, tmp_kw_name_24);
        Py_DECREF(tmp_called_name_70);
        Py_DECREF(tmp_args_name_24);
        Py_DECREF(tmp_kw_name_24);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2677;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_65:;
    {
        PyObject *tmp_assign_source_93;
        PyObject *tmp_called_instance_113;
        PyObject *tmp_mvar_value_72;
        PyObject *tmp_args_element_name_184;
        PyObject *tmp_args_element_name_185;
        tmp_mvar_value_72 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_72 == NULL)) {
            tmp_mvar_value_72 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_72 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2681;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_113 = tmp_mvar_value_72;
        tmp_args_element_name_184 = const_str_digest_cfb5c345775ba3fe1daefa3325bf1bfe;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_185 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2681;
        {
            PyObject *call_args[] = {tmp_args_element_name_184, tmp_args_element_name_185};
            tmp_assign_source_93 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_113, const_str_plain_findall, call_args);
        }

        if (tmp_assign_source_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2681;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_matches;
            assert(old != NULL);
            var_matches = tmp_assign_source_93;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_68;
        int tmp_truth_name_40;
        CHECK_OBJECT(var_matches);
        tmp_truth_name_40 = CHECK_IF_TRUE(var_matches);
        if (tmp_truth_name_40 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2682;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_68 = tmp_truth_name_40 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_68 == NUITKA_BOOL_TRUE) {
            goto branch_yes_66;
        } else {
            goto branch_no_66;
        }
    }
    branch_yes_66:;
    {
        PyObject *tmp_called_name_71;
        PyObject *tmp_expression_name_77;
        PyObject *tmp_args_name_25;
        PyObject *tmp_tuple_element_26;
        PyObject *tmp_kw_name_25;
        CHECK_OBJECT(par_self);
        tmp_expression_name_77 = par_self;
        tmp_called_name_71 = LOOKUP_ATTRIBUTE(tmp_expression_name_77, const_str_plain_playlist_from_matches);
        if (tmp_called_name_71 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2683;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_matches);
        tmp_tuple_element_26 = var_matches;
        tmp_args_name_25 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_26);
        PyTuple_SET_ITEM(tmp_args_name_25, 0, tmp_tuple_element_26);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_26 = var_video_id;
        Py_INCREF(tmp_tuple_element_26);
        PyTuple_SET_ITEM(tmp_args_name_25, 1, tmp_tuple_element_26);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_26 = var_video_title;
        Py_INCREF(tmp_tuple_element_26);
        PyTuple_SET_ITEM(tmp_args_name_25, 2, tmp_tuple_element_26);
        tmp_kw_name_25 = PyDict_Copy(const_dict_83492c93d6769ea317bcab9791912fa4);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2683;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_71, tmp_args_name_25, tmp_kw_name_25);
        Py_DECREF(tmp_called_name_71);
        Py_DECREF(tmp_args_name_25);
        Py_DECREF(tmp_kw_name_25);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2683;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_66:;
    {
        PyObject *tmp_assign_source_94;
        PyObject *tmp_called_instance_114;
        PyObject *tmp_mvar_value_73;
        PyObject *tmp_args_element_name_186;
        tmp_mvar_value_73 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RUTVIE);

        if (unlikely(tmp_mvar_value_73 == NULL)) {
            tmp_mvar_value_73 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_RUTVIE);
        }

        if (tmp_mvar_value_73 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40552 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2686;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_114 = tmp_mvar_value_73;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_186 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2686;
        {
            PyObject *call_args[] = {tmp_args_element_name_186};
            tmp_assign_source_94 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_114, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_94 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2686;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_rutv_url == NULL);
        var_rutv_url = tmp_assign_source_94;
    }
    {
        nuitka_bool tmp_condition_result_69;
        int tmp_truth_name_41;
        CHECK_OBJECT(var_rutv_url);
        tmp_truth_name_41 = CHECK_IF_TRUE(var_rutv_url);
        if (tmp_truth_name_41 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2687;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_69 = tmp_truth_name_41 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_69 == NUITKA_BOOL_TRUE) {
            goto branch_yes_67;
        } else {
            goto branch_no_67;
        }
    }
    branch_yes_67:;
    {
        PyObject *tmp_called_instance_115;
        PyObject *tmp_args_element_name_187;
        PyObject *tmp_args_element_name_188;
        CHECK_OBJECT(par_self);
        tmp_called_instance_115 = par_self;
        CHECK_OBJECT(var_rutv_url);
        tmp_args_element_name_187 = var_rutv_url;
        tmp_args_element_name_188 = const_str_plain_RUTV;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2688;
        {
            PyObject *call_args[] = {tmp_args_element_name_187, tmp_args_element_name_188};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_115, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2688;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_67:;
    {
        PyObject *tmp_assign_source_95;
        PyObject *tmp_called_instance_116;
        PyObject *tmp_mvar_value_74;
        PyObject *tmp_args_element_name_189;
        tmp_mvar_value_74 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TVCIE);

        if (unlikely(tmp_mvar_value_74 == NULL)) {
            tmp_mvar_value_74 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_TVCIE);
        }

        if (tmp_mvar_value_74 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40580 ], 27, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2691;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_116 = tmp_mvar_value_74;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_189 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2691;
        {
            PyObject *call_args[] = {tmp_args_element_name_189};
            tmp_assign_source_95 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_116, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2691;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_tvc_url == NULL);
        var_tvc_url = tmp_assign_source_95;
    }
    {
        nuitka_bool tmp_condition_result_70;
        int tmp_truth_name_42;
        CHECK_OBJECT(var_tvc_url);
        tmp_truth_name_42 = CHECK_IF_TRUE(var_tvc_url);
        if (tmp_truth_name_42 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2692;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_70 = tmp_truth_name_42 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_70 == NUITKA_BOOL_TRUE) {
            goto branch_yes_68;
        } else {
            goto branch_no_68;
        }
    }
    branch_yes_68:;
    {
        PyObject *tmp_called_instance_117;
        PyObject *tmp_args_element_name_190;
        PyObject *tmp_args_element_name_191;
        CHECK_OBJECT(par_self);
        tmp_called_instance_117 = par_self;
        CHECK_OBJECT(var_tvc_url);
        tmp_args_element_name_190 = var_tvc_url;
        tmp_args_element_name_191 = const_str_plain_TVC;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2693;
        {
            PyObject *call_args[] = {tmp_args_element_name_190, tmp_args_element_name_191};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_117, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2693;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_68:;
    {
        PyObject *tmp_assign_source_96;
        PyObject *tmp_called_instance_118;
        PyObject *tmp_mvar_value_75;
        PyObject *tmp_args_element_name_192;
        tmp_mvar_value_75 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SportBoxIE);

        if (unlikely(tmp_mvar_value_75 == NULL)) {
            tmp_mvar_value_75 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_SportBoxIE);
        }

        if (tmp_mvar_value_75 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40607 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2696;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_118 = tmp_mvar_value_75;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_192 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2696;
        {
            PyObject *call_args[] = {tmp_args_element_name_192};
            tmp_assign_source_96 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_118, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2696;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_sportbox_urls == NULL);
        var_sportbox_urls = tmp_assign_source_96;
    }
    {
        nuitka_bool tmp_condition_result_71;
        int tmp_truth_name_43;
        CHECK_OBJECT(var_sportbox_urls);
        tmp_truth_name_43 = CHECK_IF_TRUE(var_sportbox_urls);
        if (tmp_truth_name_43 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2697;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_71 = tmp_truth_name_43 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_71 == NUITKA_BOOL_TRUE) {
            goto branch_yes_69;
        } else {
            goto branch_no_69;
        }
    }
    branch_yes_69:;
    {
        PyObject *tmp_called_name_72;
        PyObject *tmp_expression_name_78;
        PyObject *tmp_args_name_26;
        PyObject *tmp_tuple_element_27;
        PyObject *tmp_kw_name_26;
        PyObject *tmp_dict_key_46;
        PyObject *tmp_dict_value_46;
        PyObject *tmp_called_instance_119;
        PyObject *tmp_mvar_value_76;
        CHECK_OBJECT(par_self);
        tmp_expression_name_78 = par_self;
        tmp_called_name_72 = LOOKUP_ATTRIBUTE(tmp_expression_name_78, const_str_plain_playlist_from_matches);
        if (tmp_called_name_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2698;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_sportbox_urls);
        tmp_tuple_element_27 = var_sportbox_urls;
        tmp_args_name_26 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_27);
        PyTuple_SET_ITEM(tmp_args_name_26, 0, tmp_tuple_element_27);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_27 = var_video_id;
        Py_INCREF(tmp_tuple_element_27);
        PyTuple_SET_ITEM(tmp_args_name_26, 1, tmp_tuple_element_27);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_27 = var_video_title;
        Py_INCREF(tmp_tuple_element_27);
        PyTuple_SET_ITEM(tmp_args_name_26, 2, tmp_tuple_element_27);
        tmp_dict_key_46 = const_str_plain_ie;
        tmp_mvar_value_76 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SportBoxIE);

        if (unlikely(tmp_mvar_value_76 == NULL)) {
            tmp_mvar_value_76 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_SportBoxIE);
        }

        if (tmp_mvar_value_76 == NULL) {
            Py_DECREF(tmp_called_name_72);
            Py_DECREF(tmp_args_name_26);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40607 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2698;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_119 = tmp_mvar_value_76;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2698;
        tmp_dict_value_46 = CALL_METHOD_NO_ARGS(tmp_called_instance_119, const_str_plain_ie_key);
        if (tmp_dict_value_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_72);
            Py_DECREF(tmp_args_name_26);

            exception_lineno = 2698;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_26 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_26, tmp_dict_key_46, tmp_dict_value_46);
        Py_DECREF(tmp_dict_value_46);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2698;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_72, tmp_args_name_26, tmp_kw_name_26);
        Py_DECREF(tmp_called_name_72);
        Py_DECREF(tmp_args_name_26);
        Py_DECREF(tmp_kw_name_26);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2698;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_69:;
    {
        PyObject *tmp_assign_source_97;
        PyObject *tmp_called_instance_120;
        PyObject *tmp_mvar_value_77;
        PyObject *tmp_args_element_name_193;
        tmp_mvar_value_77 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_XHamsterEmbedIE);

        if (unlikely(tmp_mvar_value_77 == NULL)) {
            tmp_mvar_value_77 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_XHamsterEmbedIE);
        }

        if (tmp_mvar_value_77 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40639 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2701;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_120 = tmp_mvar_value_77;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_193 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2701;
        {
            PyObject *call_args[] = {tmp_args_element_name_193};
            tmp_assign_source_97 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_120, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2701;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_xhamster_urls == NULL);
        var_xhamster_urls = tmp_assign_source_97;
    }
    {
        nuitka_bool tmp_condition_result_72;
        int tmp_truth_name_44;
        CHECK_OBJECT(var_xhamster_urls);
        tmp_truth_name_44 = CHECK_IF_TRUE(var_xhamster_urls);
        if (tmp_truth_name_44 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2702;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_72 = tmp_truth_name_44 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_72 == NUITKA_BOOL_TRUE) {
            goto branch_yes_70;
        } else {
            goto branch_no_70;
        }
    }
    branch_yes_70:;
    {
        PyObject *tmp_called_name_73;
        PyObject *tmp_expression_name_79;
        PyObject *tmp_args_name_27;
        PyObject *tmp_tuple_element_28;
        PyObject *tmp_kw_name_27;
        CHECK_OBJECT(par_self);
        tmp_expression_name_79 = par_self;
        tmp_called_name_73 = LOOKUP_ATTRIBUTE(tmp_expression_name_79, const_str_plain_playlist_from_matches);
        if (tmp_called_name_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2703;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_xhamster_urls);
        tmp_tuple_element_28 = var_xhamster_urls;
        tmp_args_name_27 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_28);
        PyTuple_SET_ITEM(tmp_args_name_27, 0, tmp_tuple_element_28);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_28 = var_video_id;
        Py_INCREF(tmp_tuple_element_28);
        PyTuple_SET_ITEM(tmp_args_name_27, 1, tmp_tuple_element_28);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_28 = var_video_title;
        Py_INCREF(tmp_tuple_element_28);
        PyTuple_SET_ITEM(tmp_args_name_27, 2, tmp_tuple_element_28);
        tmp_kw_name_27 = PyDict_Copy(const_dict_2312ed6c2b122d5992bf11bce9e5c434);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2703;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_73, tmp_args_name_27, tmp_kw_name_27);
        Py_DECREF(tmp_called_name_73);
        Py_DECREF(tmp_args_name_27);
        Py_DECREF(tmp_kw_name_27);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2703;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_70:;
    {
        PyObject *tmp_assign_source_98;
        PyObject *tmp_called_instance_121;
        PyObject *tmp_mvar_value_78;
        PyObject *tmp_args_element_name_194;
        tmp_mvar_value_78 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TNAFlixNetworkEmbedIE);

        if (unlikely(tmp_mvar_value_78 == NULL)) {
            tmp_mvar_value_78 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_TNAFlixNetworkEmbedIE);
        }

        if (tmp_mvar_value_78 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40676 ], 43, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2706;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_121 = tmp_mvar_value_78;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_194 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2706;
        {
            PyObject *call_args[] = {tmp_args_element_name_194};
            tmp_assign_source_98 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_121, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2706;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_tnaflix_urls == NULL);
        var_tnaflix_urls = tmp_assign_source_98;
    }
    {
        nuitka_bool tmp_condition_result_73;
        int tmp_truth_name_45;
        CHECK_OBJECT(var_tnaflix_urls);
        tmp_truth_name_45 = CHECK_IF_TRUE(var_tnaflix_urls);
        if (tmp_truth_name_45 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2707;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_73 = tmp_truth_name_45 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_73 == NUITKA_BOOL_TRUE) {
            goto branch_yes_71;
        } else {
            goto branch_no_71;
        }
    }
    branch_yes_71:;
    {
        PyObject *tmp_called_name_74;
        PyObject *tmp_expression_name_80;
        PyObject *tmp_args_name_28;
        PyObject *tmp_tuple_element_29;
        PyObject *tmp_kw_name_28;
        PyObject *tmp_dict_key_47;
        PyObject *tmp_dict_value_47;
        PyObject *tmp_called_instance_122;
        PyObject *tmp_mvar_value_79;
        CHECK_OBJECT(par_self);
        tmp_expression_name_80 = par_self;
        tmp_called_name_74 = LOOKUP_ATTRIBUTE(tmp_expression_name_80, const_str_plain_playlist_from_matches);
        if (tmp_called_name_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2708;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_tnaflix_urls);
        tmp_tuple_element_29 = var_tnaflix_urls;
        tmp_args_name_28 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_29);
        PyTuple_SET_ITEM(tmp_args_name_28, 0, tmp_tuple_element_29);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_29 = var_video_id;
        Py_INCREF(tmp_tuple_element_29);
        PyTuple_SET_ITEM(tmp_args_name_28, 1, tmp_tuple_element_29);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_29 = var_video_title;
        Py_INCREF(tmp_tuple_element_29);
        PyTuple_SET_ITEM(tmp_args_name_28, 2, tmp_tuple_element_29);
        tmp_dict_key_47 = const_str_plain_ie;
        tmp_mvar_value_79 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TNAFlixNetworkEmbedIE);

        if (unlikely(tmp_mvar_value_79 == NULL)) {
            tmp_mvar_value_79 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_TNAFlixNetworkEmbedIE);
        }

        if (tmp_mvar_value_79 == NULL) {
            Py_DECREF(tmp_called_name_74);
            Py_DECREF(tmp_args_name_28);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40676 ], 43, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2708;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_122 = tmp_mvar_value_79;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2708;
        tmp_dict_value_47 = CALL_METHOD_NO_ARGS(tmp_called_instance_122, const_str_plain_ie_key);
        if (tmp_dict_value_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_74);
            Py_DECREF(tmp_args_name_28);

            exception_lineno = 2708;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_28 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_28, tmp_dict_key_47, tmp_dict_value_47);
        Py_DECREF(tmp_dict_value_47);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2708;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_74, tmp_args_name_28, tmp_kw_name_28);
        Py_DECREF(tmp_called_name_74);
        Py_DECREF(tmp_args_name_28);
        Py_DECREF(tmp_kw_name_28);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2708;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_71:;
    {
        PyObject *tmp_assign_source_99;
        PyObject *tmp_called_instance_123;
        PyObject *tmp_mvar_value_80;
        PyObject *tmp_args_element_name_195;
        tmp_mvar_value_80 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_PornHubIE);

        if (unlikely(tmp_mvar_value_80 == NULL)) {
            tmp_mvar_value_80 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_PornHubIE);
        }

        if (tmp_mvar_value_80 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40719 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2711;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_123 = tmp_mvar_value_80;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_195 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2711;
        {
            PyObject *call_args[] = {tmp_args_element_name_195};
            tmp_assign_source_99 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_123, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2711;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pornhub_urls == NULL);
        var_pornhub_urls = tmp_assign_source_99;
    }
    {
        nuitka_bool tmp_condition_result_74;
        int tmp_truth_name_46;
        CHECK_OBJECT(var_pornhub_urls);
        tmp_truth_name_46 = CHECK_IF_TRUE(var_pornhub_urls);
        if (tmp_truth_name_46 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2712;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_74 = tmp_truth_name_46 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_74 == NUITKA_BOOL_TRUE) {
            goto branch_yes_72;
        } else {
            goto branch_no_72;
        }
    }
    branch_yes_72:;
    {
        PyObject *tmp_called_name_75;
        PyObject *tmp_expression_name_81;
        PyObject *tmp_args_name_29;
        PyObject *tmp_tuple_element_30;
        PyObject *tmp_kw_name_29;
        PyObject *tmp_dict_key_48;
        PyObject *tmp_dict_value_48;
        PyObject *tmp_called_instance_124;
        PyObject *tmp_mvar_value_81;
        CHECK_OBJECT(par_self);
        tmp_expression_name_81 = par_self;
        tmp_called_name_75 = LOOKUP_ATTRIBUTE(tmp_expression_name_81, const_str_plain_playlist_from_matches);
        if (tmp_called_name_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2713;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_pornhub_urls);
        tmp_tuple_element_30 = var_pornhub_urls;
        tmp_args_name_29 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_30);
        PyTuple_SET_ITEM(tmp_args_name_29, 0, tmp_tuple_element_30);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_30 = var_video_id;
        Py_INCREF(tmp_tuple_element_30);
        PyTuple_SET_ITEM(tmp_args_name_29, 1, tmp_tuple_element_30);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_30 = var_video_title;
        Py_INCREF(tmp_tuple_element_30);
        PyTuple_SET_ITEM(tmp_args_name_29, 2, tmp_tuple_element_30);
        tmp_dict_key_48 = const_str_plain_ie;
        tmp_mvar_value_81 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_PornHubIE);

        if (unlikely(tmp_mvar_value_81 == NULL)) {
            tmp_mvar_value_81 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_PornHubIE);
        }

        if (tmp_mvar_value_81 == NULL) {
            Py_DECREF(tmp_called_name_75);
            Py_DECREF(tmp_args_name_29);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40719 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2713;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_124 = tmp_mvar_value_81;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2713;
        tmp_dict_value_48 = CALL_METHOD_NO_ARGS(tmp_called_instance_124, const_str_plain_ie_key);
        if (tmp_dict_value_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_75);
            Py_DECREF(tmp_args_name_29);

            exception_lineno = 2713;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_29 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_29, tmp_dict_key_48, tmp_dict_value_48);
        Py_DECREF(tmp_dict_value_48);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2713;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_75, tmp_args_name_29, tmp_kw_name_29);
        Py_DECREF(tmp_called_name_75);
        Py_DECREF(tmp_args_name_29);
        Py_DECREF(tmp_kw_name_29);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2713;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_72:;
    {
        PyObject *tmp_assign_source_100;
        PyObject *tmp_called_instance_125;
        PyObject *tmp_mvar_value_82;
        PyObject *tmp_args_element_name_196;
        tmp_mvar_value_82 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DrTuberIE);

        if (unlikely(tmp_mvar_value_82 == NULL)) {
            tmp_mvar_value_82 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_DrTuberIE);
        }

        if (tmp_mvar_value_82 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40750 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2716;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_125 = tmp_mvar_value_82;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_196 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2716;
        {
            PyObject *call_args[] = {tmp_args_element_name_196};
            tmp_assign_source_100 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_125, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2716;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_drtuber_urls == NULL);
        var_drtuber_urls = tmp_assign_source_100;
    }
    {
        nuitka_bool tmp_condition_result_75;
        int tmp_truth_name_47;
        CHECK_OBJECT(var_drtuber_urls);
        tmp_truth_name_47 = CHECK_IF_TRUE(var_drtuber_urls);
        if (tmp_truth_name_47 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2717;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_75 = tmp_truth_name_47 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_75 == NUITKA_BOOL_TRUE) {
            goto branch_yes_73;
        } else {
            goto branch_no_73;
        }
    }
    branch_yes_73:;
    {
        PyObject *tmp_called_name_76;
        PyObject *tmp_expression_name_82;
        PyObject *tmp_args_name_30;
        PyObject *tmp_tuple_element_31;
        PyObject *tmp_kw_name_30;
        PyObject *tmp_dict_key_49;
        PyObject *tmp_dict_value_49;
        PyObject *tmp_called_instance_126;
        PyObject *tmp_mvar_value_83;
        CHECK_OBJECT(par_self);
        tmp_expression_name_82 = par_self;
        tmp_called_name_76 = LOOKUP_ATTRIBUTE(tmp_expression_name_82, const_str_plain_playlist_from_matches);
        if (tmp_called_name_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2718;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_drtuber_urls);
        tmp_tuple_element_31 = var_drtuber_urls;
        tmp_args_name_30 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_31);
        PyTuple_SET_ITEM(tmp_args_name_30, 0, tmp_tuple_element_31);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_31 = var_video_id;
        Py_INCREF(tmp_tuple_element_31);
        PyTuple_SET_ITEM(tmp_args_name_30, 1, tmp_tuple_element_31);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_31 = var_video_title;
        Py_INCREF(tmp_tuple_element_31);
        PyTuple_SET_ITEM(tmp_args_name_30, 2, tmp_tuple_element_31);
        tmp_dict_key_49 = const_str_plain_ie;
        tmp_mvar_value_83 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DrTuberIE);

        if (unlikely(tmp_mvar_value_83 == NULL)) {
            tmp_mvar_value_83 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_DrTuberIE);
        }

        if (tmp_mvar_value_83 == NULL) {
            Py_DECREF(tmp_called_name_76);
            Py_DECREF(tmp_args_name_30);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40750 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2718;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_126 = tmp_mvar_value_83;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2718;
        tmp_dict_value_49 = CALL_METHOD_NO_ARGS(tmp_called_instance_126, const_str_plain_ie_key);
        if (tmp_dict_value_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_76);
            Py_DECREF(tmp_args_name_30);

            exception_lineno = 2718;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_30 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_30, tmp_dict_key_49, tmp_dict_value_49);
        Py_DECREF(tmp_dict_value_49);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2718;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_76, tmp_args_name_30, tmp_kw_name_30);
        Py_DECREF(tmp_called_name_76);
        Py_DECREF(tmp_args_name_30);
        Py_DECREF(tmp_kw_name_30);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2718;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_73:;
    {
        PyObject *tmp_assign_source_101;
        PyObject *tmp_called_instance_127;
        PyObject *tmp_mvar_value_84;
        PyObject *tmp_args_element_name_197;
        tmp_mvar_value_84 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RedTubeIE);

        if (unlikely(tmp_mvar_value_84 == NULL)) {
            tmp_mvar_value_84 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_RedTubeIE);
        }

        if (tmp_mvar_value_84 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40781 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2721;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_127 = tmp_mvar_value_84;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_197 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2721;
        {
            PyObject *call_args[] = {tmp_args_element_name_197};
            tmp_assign_source_101 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_127, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2721;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_redtube_urls == NULL);
        var_redtube_urls = tmp_assign_source_101;
    }
    {
        nuitka_bool tmp_condition_result_76;
        int tmp_truth_name_48;
        CHECK_OBJECT(var_redtube_urls);
        tmp_truth_name_48 = CHECK_IF_TRUE(var_redtube_urls);
        if (tmp_truth_name_48 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2722;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_76 = tmp_truth_name_48 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_76 == NUITKA_BOOL_TRUE) {
            goto branch_yes_74;
        } else {
            goto branch_no_74;
        }
    }
    branch_yes_74:;
    {
        PyObject *tmp_called_name_77;
        PyObject *tmp_expression_name_83;
        PyObject *tmp_args_name_31;
        PyObject *tmp_tuple_element_32;
        PyObject *tmp_kw_name_31;
        PyObject *tmp_dict_key_50;
        PyObject *tmp_dict_value_50;
        PyObject *tmp_called_instance_128;
        PyObject *tmp_mvar_value_85;
        CHECK_OBJECT(par_self);
        tmp_expression_name_83 = par_self;
        tmp_called_name_77 = LOOKUP_ATTRIBUTE(tmp_expression_name_83, const_str_plain_playlist_from_matches);
        if (tmp_called_name_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2723;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_redtube_urls);
        tmp_tuple_element_32 = var_redtube_urls;
        tmp_args_name_31 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_32);
        PyTuple_SET_ITEM(tmp_args_name_31, 0, tmp_tuple_element_32);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_32 = var_video_id;
        Py_INCREF(tmp_tuple_element_32);
        PyTuple_SET_ITEM(tmp_args_name_31, 1, tmp_tuple_element_32);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_32 = var_video_title;
        Py_INCREF(tmp_tuple_element_32);
        PyTuple_SET_ITEM(tmp_args_name_31, 2, tmp_tuple_element_32);
        tmp_dict_key_50 = const_str_plain_ie;
        tmp_mvar_value_85 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RedTubeIE);

        if (unlikely(tmp_mvar_value_85 == NULL)) {
            tmp_mvar_value_85 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_RedTubeIE);
        }

        if (tmp_mvar_value_85 == NULL) {
            Py_DECREF(tmp_called_name_77);
            Py_DECREF(tmp_args_name_31);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40781 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2723;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_128 = tmp_mvar_value_85;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2723;
        tmp_dict_value_50 = CALL_METHOD_NO_ARGS(tmp_called_instance_128, const_str_plain_ie_key);
        if (tmp_dict_value_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_77);
            Py_DECREF(tmp_args_name_31);

            exception_lineno = 2723;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_31 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_31, tmp_dict_key_50, tmp_dict_value_50);
        Py_DECREF(tmp_dict_value_50);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2723;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_77, tmp_args_name_31, tmp_kw_name_31);
        Py_DECREF(tmp_called_name_77);
        Py_DECREF(tmp_args_name_31);
        Py_DECREF(tmp_kw_name_31);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2723;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_74:;
    {
        PyObject *tmp_assign_source_102;
        PyObject *tmp_called_instance_129;
        PyObject *tmp_mvar_value_86;
        PyObject *tmp_args_element_name_198;
        tmp_mvar_value_86 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_Tube8IE);

        if (unlikely(tmp_mvar_value_86 == NULL)) {
            tmp_mvar_value_86 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Tube8IE);
        }

        if (tmp_mvar_value_86 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40812 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2726;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_129 = tmp_mvar_value_86;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_198 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2726;
        {
            PyObject *call_args[] = {tmp_args_element_name_198};
            tmp_assign_source_102 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_129, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2726;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_tube8_urls == NULL);
        var_tube8_urls = tmp_assign_source_102;
    }
    {
        nuitka_bool tmp_condition_result_77;
        int tmp_truth_name_49;
        CHECK_OBJECT(var_tube8_urls);
        tmp_truth_name_49 = CHECK_IF_TRUE(var_tube8_urls);
        if (tmp_truth_name_49 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2727;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_77 = tmp_truth_name_49 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_77 == NUITKA_BOOL_TRUE) {
            goto branch_yes_75;
        } else {
            goto branch_no_75;
        }
    }
    branch_yes_75:;
    {
        PyObject *tmp_called_name_78;
        PyObject *tmp_expression_name_84;
        PyObject *tmp_args_name_32;
        PyObject *tmp_tuple_element_33;
        PyObject *tmp_kw_name_32;
        PyObject *tmp_dict_key_51;
        PyObject *tmp_dict_value_51;
        PyObject *tmp_called_instance_130;
        PyObject *tmp_mvar_value_87;
        CHECK_OBJECT(par_self);
        tmp_expression_name_84 = par_self;
        tmp_called_name_78 = LOOKUP_ATTRIBUTE(tmp_expression_name_84, const_str_plain_playlist_from_matches);
        if (tmp_called_name_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2728;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_tube8_urls);
        tmp_tuple_element_33 = var_tube8_urls;
        tmp_args_name_32 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_33);
        PyTuple_SET_ITEM(tmp_args_name_32, 0, tmp_tuple_element_33);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_33 = var_video_id;
        Py_INCREF(tmp_tuple_element_33);
        PyTuple_SET_ITEM(tmp_args_name_32, 1, tmp_tuple_element_33);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_33 = var_video_title;
        Py_INCREF(tmp_tuple_element_33);
        PyTuple_SET_ITEM(tmp_args_name_32, 2, tmp_tuple_element_33);
        tmp_dict_key_51 = const_str_plain_ie;
        tmp_mvar_value_87 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_Tube8IE);

        if (unlikely(tmp_mvar_value_87 == NULL)) {
            tmp_mvar_value_87 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Tube8IE);
        }

        if (tmp_mvar_value_87 == NULL) {
            Py_DECREF(tmp_called_name_78);
            Py_DECREF(tmp_args_name_32);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40812 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2728;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_130 = tmp_mvar_value_87;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2728;
        tmp_dict_value_51 = CALL_METHOD_NO_ARGS(tmp_called_instance_130, const_str_plain_ie_key);
        if (tmp_dict_value_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_78);
            Py_DECREF(tmp_args_name_32);

            exception_lineno = 2728;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_32 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_32, tmp_dict_key_51, tmp_dict_value_51);
        Py_DECREF(tmp_dict_value_51);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2728;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_78, tmp_args_name_32, tmp_kw_name_32);
        Py_DECREF(tmp_called_name_78);
        Py_DECREF(tmp_args_name_32);
        Py_DECREF(tmp_kw_name_32);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2728;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_75:;
    {
        PyObject *tmp_assign_source_103;
        PyObject *tmp_called_instance_131;
        PyObject *tmp_mvar_value_88;
        PyObject *tmp_args_element_name_199;
        tmp_mvar_value_88 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MofosexEmbedIE);

        if (unlikely(tmp_mvar_value_88 == NULL)) {
            tmp_mvar_value_88 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_MofosexEmbedIE);
        }

        if (tmp_mvar_value_88 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40841 ], 36, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2731;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_131 = tmp_mvar_value_88;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_199 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2731;
        {
            PyObject *call_args[] = {tmp_args_element_name_199};
            tmp_assign_source_103 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_131, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2731;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mofosex_urls == NULL);
        var_mofosex_urls = tmp_assign_source_103;
    }
    {
        nuitka_bool tmp_condition_result_78;
        int tmp_truth_name_50;
        CHECK_OBJECT(var_mofosex_urls);
        tmp_truth_name_50 = CHECK_IF_TRUE(var_mofosex_urls);
        if (tmp_truth_name_50 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2732;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_78 = tmp_truth_name_50 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_78 == NUITKA_BOOL_TRUE) {
            goto branch_yes_76;
        } else {
            goto branch_no_76;
        }
    }
    branch_yes_76:;
    {
        PyObject *tmp_called_name_79;
        PyObject *tmp_expression_name_85;
        PyObject *tmp_args_name_33;
        PyObject *tmp_tuple_element_34;
        PyObject *tmp_kw_name_33;
        PyObject *tmp_dict_key_52;
        PyObject *tmp_dict_value_52;
        PyObject *tmp_called_instance_132;
        PyObject *tmp_mvar_value_89;
        CHECK_OBJECT(par_self);
        tmp_expression_name_85 = par_self;
        tmp_called_name_79 = LOOKUP_ATTRIBUTE(tmp_expression_name_85, const_str_plain_playlist_from_matches);
        if (tmp_called_name_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2733;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mofosex_urls);
        tmp_tuple_element_34 = var_mofosex_urls;
        tmp_args_name_33 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_34);
        PyTuple_SET_ITEM(tmp_args_name_33, 0, tmp_tuple_element_34);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_34 = var_video_id;
        Py_INCREF(tmp_tuple_element_34);
        PyTuple_SET_ITEM(tmp_args_name_33, 1, tmp_tuple_element_34);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_34 = var_video_title;
        Py_INCREF(tmp_tuple_element_34);
        PyTuple_SET_ITEM(tmp_args_name_33, 2, tmp_tuple_element_34);
        tmp_dict_key_52 = const_str_plain_ie;
        tmp_mvar_value_89 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MofosexEmbedIE);

        if (unlikely(tmp_mvar_value_89 == NULL)) {
            tmp_mvar_value_89 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_MofosexEmbedIE);
        }

        if (tmp_mvar_value_89 == NULL) {
            Py_DECREF(tmp_called_name_79);
            Py_DECREF(tmp_args_name_33);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40841 ], 36, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2733;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_132 = tmp_mvar_value_89;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2733;
        tmp_dict_value_52 = CALL_METHOD_NO_ARGS(tmp_called_instance_132, const_str_plain_ie_key);
        if (tmp_dict_value_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_79);
            Py_DECREF(tmp_args_name_33);

            exception_lineno = 2733;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_33 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_33, tmp_dict_key_52, tmp_dict_value_52);
        Py_DECREF(tmp_dict_value_52);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2733;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_79, tmp_args_name_33, tmp_kw_name_33);
        Py_DECREF(tmp_called_name_79);
        Py_DECREF(tmp_args_name_33);
        Py_DECREF(tmp_kw_name_33);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2733;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_76:;
    {
        PyObject *tmp_assign_source_104;
        PyObject *tmp_called_instance_133;
        PyObject *tmp_mvar_value_90;
        PyObject *tmp_args_element_name_200;
        tmp_mvar_value_90 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SpankwireIE);

        if (unlikely(tmp_mvar_value_90 == NULL)) {
            tmp_mvar_value_90 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_SpankwireIE);
        }

        if (tmp_mvar_value_90 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40877 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2736;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_133 = tmp_mvar_value_90;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_200 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2736;
        {
            PyObject *call_args[] = {tmp_args_element_name_200};
            tmp_assign_source_104 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_133, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2736;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_spankwire_urls == NULL);
        var_spankwire_urls = tmp_assign_source_104;
    }
    {
        nuitka_bool tmp_condition_result_79;
        int tmp_truth_name_51;
        CHECK_OBJECT(var_spankwire_urls);
        tmp_truth_name_51 = CHECK_IF_TRUE(var_spankwire_urls);
        if (tmp_truth_name_51 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2737;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_79 = tmp_truth_name_51 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_79 == NUITKA_BOOL_TRUE) {
            goto branch_yes_77;
        } else {
            goto branch_no_77;
        }
    }
    branch_yes_77:;
    {
        PyObject *tmp_called_name_80;
        PyObject *tmp_expression_name_86;
        PyObject *tmp_args_name_34;
        PyObject *tmp_tuple_element_35;
        PyObject *tmp_kw_name_34;
        PyObject *tmp_dict_key_53;
        PyObject *tmp_dict_value_53;
        PyObject *tmp_called_instance_134;
        PyObject *tmp_mvar_value_91;
        CHECK_OBJECT(par_self);
        tmp_expression_name_86 = par_self;
        tmp_called_name_80 = LOOKUP_ATTRIBUTE(tmp_expression_name_86, const_str_plain_playlist_from_matches);
        if (tmp_called_name_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2738;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_spankwire_urls);
        tmp_tuple_element_35 = var_spankwire_urls;
        tmp_args_name_34 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_35);
        PyTuple_SET_ITEM(tmp_args_name_34, 0, tmp_tuple_element_35);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_35 = var_video_id;
        Py_INCREF(tmp_tuple_element_35);
        PyTuple_SET_ITEM(tmp_args_name_34, 1, tmp_tuple_element_35);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_35 = var_video_title;
        Py_INCREF(tmp_tuple_element_35);
        PyTuple_SET_ITEM(tmp_args_name_34, 2, tmp_tuple_element_35);
        tmp_dict_key_53 = const_str_plain_ie;
        tmp_mvar_value_91 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SpankwireIE);

        if (unlikely(tmp_mvar_value_91 == NULL)) {
            tmp_mvar_value_91 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_SpankwireIE);
        }

        if (tmp_mvar_value_91 == NULL) {
            Py_DECREF(tmp_called_name_80);
            Py_DECREF(tmp_args_name_34);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40877 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2738;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_134 = tmp_mvar_value_91;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2738;
        tmp_dict_value_53 = CALL_METHOD_NO_ARGS(tmp_called_instance_134, const_str_plain_ie_key);
        if (tmp_dict_value_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_80);
            Py_DECREF(tmp_args_name_34);

            exception_lineno = 2738;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_34 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_34, tmp_dict_key_53, tmp_dict_value_53);
        Py_DECREF(tmp_dict_value_53);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2738;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_80, tmp_args_name_34, tmp_kw_name_34);
        Py_DECREF(tmp_called_name_80);
        Py_DECREF(tmp_args_name_34);
        Py_DECREF(tmp_kw_name_34);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2738;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_77:;
    {
        PyObject *tmp_assign_source_105;
        PyObject *tmp_called_instance_135;
        PyObject *tmp_mvar_value_92;
        PyObject *tmp_args_element_name_201;
        tmp_mvar_value_92 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YouPornIE);

        if (unlikely(tmp_mvar_value_92 == NULL)) {
            tmp_mvar_value_92 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_YouPornIE);
        }

        if (tmp_mvar_value_92 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40910 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2741;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_135 = tmp_mvar_value_92;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_201 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2741;
        {
            PyObject *call_args[] = {tmp_args_element_name_201};
            tmp_assign_source_105 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_135, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2741;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_youporn_urls == NULL);
        var_youporn_urls = tmp_assign_source_105;
    }
    {
        nuitka_bool tmp_condition_result_80;
        int tmp_truth_name_52;
        CHECK_OBJECT(var_youporn_urls);
        tmp_truth_name_52 = CHECK_IF_TRUE(var_youporn_urls);
        if (tmp_truth_name_52 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2742;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_80 = tmp_truth_name_52 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_80 == NUITKA_BOOL_TRUE) {
            goto branch_yes_78;
        } else {
            goto branch_no_78;
        }
    }
    branch_yes_78:;
    {
        PyObject *tmp_called_name_81;
        PyObject *tmp_expression_name_87;
        PyObject *tmp_args_name_35;
        PyObject *tmp_tuple_element_36;
        PyObject *tmp_kw_name_35;
        PyObject *tmp_dict_key_54;
        PyObject *tmp_dict_value_54;
        PyObject *tmp_called_instance_136;
        PyObject *tmp_mvar_value_93;
        CHECK_OBJECT(par_self);
        tmp_expression_name_87 = par_self;
        tmp_called_name_81 = LOOKUP_ATTRIBUTE(tmp_expression_name_87, const_str_plain_playlist_from_matches);
        if (tmp_called_name_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2743;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_youporn_urls);
        tmp_tuple_element_36 = var_youporn_urls;
        tmp_args_name_35 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_36);
        PyTuple_SET_ITEM(tmp_args_name_35, 0, tmp_tuple_element_36);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_36 = var_video_id;
        Py_INCREF(tmp_tuple_element_36);
        PyTuple_SET_ITEM(tmp_args_name_35, 1, tmp_tuple_element_36);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_36 = var_video_title;
        Py_INCREF(tmp_tuple_element_36);
        PyTuple_SET_ITEM(tmp_args_name_35, 2, tmp_tuple_element_36);
        tmp_dict_key_54 = const_str_plain_ie;
        tmp_mvar_value_93 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YouPornIE);

        if (unlikely(tmp_mvar_value_93 == NULL)) {
            tmp_mvar_value_93 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_YouPornIE);
        }

        if (tmp_mvar_value_93 == NULL) {
            Py_DECREF(tmp_called_name_81);
            Py_DECREF(tmp_args_name_35);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40910 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2743;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_136 = tmp_mvar_value_93;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2743;
        tmp_dict_value_54 = CALL_METHOD_NO_ARGS(tmp_called_instance_136, const_str_plain_ie_key);
        if (tmp_dict_value_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_81);
            Py_DECREF(tmp_args_name_35);

            exception_lineno = 2743;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_35 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_35, tmp_dict_key_54, tmp_dict_value_54);
        Py_DECREF(tmp_dict_value_54);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2743;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_81, tmp_args_name_35, tmp_kw_name_35);
        Py_DECREF(tmp_called_name_81);
        Py_DECREF(tmp_args_name_35);
        Py_DECREF(tmp_kw_name_35);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2743;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_78:;
    {
        PyObject *tmp_assign_source_106;
        PyObject *tmp_called_instance_137;
        PyObject *tmp_mvar_value_94;
        PyObject *tmp_args_element_name_202;
        PyObject *tmp_args_element_name_203;
        tmp_mvar_value_94 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_94 == NULL)) {
            tmp_mvar_value_94 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_94 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2746;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_137 = tmp_mvar_value_94;
        tmp_args_element_name_202 = const_str_digest_fe98100ba76574ce453b2d10c5553544;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_203 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2746;
        {
            PyObject *call_args[] = {tmp_args_element_name_202, tmp_args_element_name_203};
            tmp_assign_source_106 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_137, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2746;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_106;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_81;
        PyObject *tmp_compexpr_left_33;
        PyObject *tmp_compexpr_right_33;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_33 = var_mobj;
        tmp_compexpr_right_33 = Py_None;
        tmp_condition_result_81 = (tmp_compexpr_left_33 != tmp_compexpr_right_33) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_81 == NUITKA_BOOL_TRUE) {
            goto branch_yes_79;
        } else {
            goto branch_no_79;
        }
    }
    branch_yes_79:;
    {
        PyObject *tmp_called_name_82;
        PyObject *tmp_expression_name_88;
        PyObject *tmp_args_element_name_204;
        PyObject *tmp_called_instance_138;
        PyObject *tmp_args_element_name_205;
        CHECK_OBJECT(par_self);
        tmp_expression_name_88 = par_self;
        tmp_called_name_82 = LOOKUP_ATTRIBUTE(tmp_expression_name_88, const_str_plain_url_result);
        if (tmp_called_name_82 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2749;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_138 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2749;
        tmp_args_element_name_204 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_138, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_204 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_82);

            exception_lineno = 2749;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_205 = const_str_plain_Tvigle;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2749;
        {
            PyObject *call_args[] = {tmp_args_element_name_204, tmp_args_element_name_205};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_82, call_args);
        }

        Py_DECREF(tmp_called_name_82);
        Py_DECREF(tmp_args_element_name_204);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2749;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_79:;
    {
        PyObject *tmp_assign_source_107;
        PyObject *tmp_called_instance_139;
        PyObject *tmp_mvar_value_95;
        PyObject *tmp_args_element_name_206;
        PyObject *tmp_args_element_name_207;
        tmp_mvar_value_95 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_95 == NULL)) {
            tmp_mvar_value_95 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_95 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2752;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_139 = tmp_mvar_value_95;
        tmp_args_element_name_206 = const_str_digest_58ca4fa7e7e23de81c8bbc4202c4c25e;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_207 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2752;
        {
            PyObject *call_args[] = {tmp_args_element_name_206, tmp_args_element_name_207};
            tmp_assign_source_107 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_139, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2752;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_107;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_82;
        PyObject *tmp_compexpr_left_34;
        PyObject *tmp_compexpr_right_34;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_34 = var_mobj;
        tmp_compexpr_right_34 = Py_None;
        tmp_condition_result_82 = (tmp_compexpr_left_34 != tmp_compexpr_right_34) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_82 == NUITKA_BOOL_TRUE) {
            goto branch_yes_80;
        } else {
            goto branch_no_80;
        }
    }
    branch_yes_80:;
    {
        PyObject *tmp_called_name_83;
        PyObject *tmp_expression_name_89;
        PyObject *tmp_args_element_name_208;
        PyObject *tmp_called_instance_140;
        PyObject *tmp_args_element_name_209;
        CHECK_OBJECT(par_self);
        tmp_expression_name_89 = par_self;
        tmp_called_name_83 = LOOKUP_ATTRIBUTE(tmp_expression_name_89, const_str_plain_url_result);
        if (tmp_called_name_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2755;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_140 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2755;
        tmp_args_element_name_208 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_140, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_208 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_83);

            exception_lineno = 2755;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_209 = const_str_plain_TED;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2755;
        {
            PyObject *call_args[] = {tmp_args_element_name_208, tmp_args_element_name_209};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_83, call_args);
        }

        Py_DECREF(tmp_called_name_83);
        Py_DECREF(tmp_args_element_name_208);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2755;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_80:;
    {
        PyObject *tmp_assign_source_108;
        PyObject *tmp_called_instance_141;
        PyObject *tmp_mvar_value_96;
        PyObject *tmp_args_element_name_210;
        tmp_mvar_value_96 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_UstreamIE);

        if (unlikely(tmp_mvar_value_96 == NULL)) {
            tmp_mvar_value_96 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_UstreamIE);
        }

        if (tmp_mvar_value_96 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 38663 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2758;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_141 = tmp_mvar_value_96;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_210 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2758;
        {
            PyObject *call_args[] = {tmp_args_element_name_210};
            tmp_assign_source_108 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_141, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2758;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_ustream_url == NULL);
        var_ustream_url = tmp_assign_source_108;
    }
    {
        nuitka_bool tmp_condition_result_83;
        int tmp_truth_name_53;
        CHECK_OBJECT(var_ustream_url);
        tmp_truth_name_53 = CHECK_IF_TRUE(var_ustream_url);
        if (tmp_truth_name_53 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2759;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_83 = tmp_truth_name_53 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_83 == NUITKA_BOOL_TRUE) {
            goto branch_yes_81;
        } else {
            goto branch_no_81;
        }
    }
    branch_yes_81:;
    {
        PyObject *tmp_called_name_84;
        PyObject *tmp_expression_name_90;
        PyObject *tmp_args_element_name_211;
        PyObject *tmp_args_element_name_212;
        PyObject *tmp_called_instance_142;
        PyObject *tmp_mvar_value_97;
        CHECK_OBJECT(par_self);
        tmp_expression_name_90 = par_self;
        tmp_called_name_84 = LOOKUP_ATTRIBUTE(tmp_expression_name_90, const_str_plain_url_result);
        if (tmp_called_name_84 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2760;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_ustream_url);
        tmp_args_element_name_211 = var_ustream_url;
        tmp_mvar_value_97 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_UstreamIE);

        if (unlikely(tmp_mvar_value_97 == NULL)) {
            tmp_mvar_value_97 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_UstreamIE);
        }

        if (tmp_mvar_value_97 == NULL) {
            Py_DECREF(tmp_called_name_84);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 38663 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2760;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_142 = tmp_mvar_value_97;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2760;
        tmp_args_element_name_212 = CALL_METHOD_NO_ARGS(tmp_called_instance_142, const_str_plain_ie_key);
        if (tmp_args_element_name_212 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_84);

            exception_lineno = 2760;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2760;
        {
            PyObject *call_args[] = {tmp_args_element_name_211, tmp_args_element_name_212};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_84, call_args);
        }

        Py_DECREF(tmp_called_name_84);
        Py_DECREF(tmp_args_element_name_212);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2760;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_81:;
    {
        PyObject *tmp_assign_source_109;
        PyObject *tmp_called_instance_143;
        PyObject *tmp_mvar_value_98;
        PyObject *tmp_args_element_name_213;
        PyObject *tmp_args_element_name_214;
        tmp_mvar_value_98 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_98 == NULL)) {
            tmp_mvar_value_98 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_98 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2763;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_143 = tmp_mvar_value_98;
        tmp_args_element_name_213 = const_str_digest_2c309a0c322fa657cf9f91f322f7694b;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_214 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2763;
        {
            PyObject *call_args[] = {tmp_args_element_name_213, tmp_args_element_name_214};
            tmp_assign_source_109 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_143, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2763;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_109;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_84;
        PyObject *tmp_compexpr_left_35;
        PyObject *tmp_compexpr_right_35;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_35 = var_mobj;
        tmp_compexpr_right_35 = Py_None;
        tmp_condition_result_84 = (tmp_compexpr_left_35 != tmp_compexpr_right_35) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_84 == NUITKA_BOOL_TRUE) {
            goto branch_yes_82;
        } else {
            goto branch_no_82;
        }
    }
    branch_yes_82:;
    {
        PyObject *tmp_called_name_85;
        PyObject *tmp_expression_name_91;
        PyObject *tmp_args_element_name_215;
        PyObject *tmp_called_instance_144;
        PyObject *tmp_args_element_name_216;
        CHECK_OBJECT(par_self);
        tmp_expression_name_91 = par_self;
        tmp_called_name_85 = LOOKUP_ATTRIBUTE(tmp_expression_name_91, const_str_plain_url_result);
        if (tmp_called_name_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2767;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_144 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2767;
        tmp_args_element_name_215 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_144, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_215 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_85);

            exception_lineno = 2767;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_216 = const_str_plain_ArteTVEmbed;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2767;
        {
            PyObject *call_args[] = {tmp_args_element_name_215, tmp_args_element_name_216};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_85, call_args);
        }

        Py_DECREF(tmp_called_name_85);
        Py_DECREF(tmp_args_element_name_215);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2767;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_82:;
    {
        PyObject *tmp_assign_source_110;
        PyObject *tmp_called_instance_145;
        PyObject *tmp_mvar_value_99;
        PyObject *tmp_args_element_name_217;
        PyObject *tmp_args_element_name_218;
        tmp_mvar_value_99 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_99 == NULL)) {
            tmp_mvar_value_99 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_99 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2770;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_145 = tmp_mvar_value_99;
        tmp_args_element_name_217 = const_str_digest_49a804859efab8d836782f1c78f87a4f;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_218 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2770;
        {
            PyObject *call_args[] = {tmp_args_element_name_217, tmp_args_element_name_218};
            tmp_assign_source_110 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_145, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2770;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_110;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_85;
        PyObject *tmp_compexpr_left_36;
        PyObject *tmp_compexpr_right_36;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_36 = var_mobj;
        tmp_compexpr_right_36 = Py_None;
        tmp_condition_result_85 = (tmp_compexpr_left_36 != tmp_compexpr_right_36) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_85 == NUITKA_BOOL_TRUE) {
            goto branch_yes_83;
        } else {
            goto branch_no_83;
        }
    }
    branch_yes_83:;
    {
        PyObject *tmp_called_name_86;
        PyObject *tmp_expression_name_92;
        PyObject *tmp_args_element_name_219;
        PyObject *tmp_called_instance_146;
        CHECK_OBJECT(par_self);
        tmp_expression_name_92 = par_self;
        tmp_called_name_86 = LOOKUP_ATTRIBUTE(tmp_expression_name_92, const_str_plain_url_result);
        if (tmp_called_name_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2774;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_146 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2774;
        tmp_args_element_name_219 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_146, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_219 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_86);

            exception_lineno = 2774;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2774;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_86, tmp_args_element_name_219);
        Py_DECREF(tmp_called_name_86);
        Py_DECREF(tmp_args_element_name_219);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2774;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_83:;
    {
        PyObject *tmp_assign_source_111;
        PyObject *tmp_called_instance_147;
        PyObject *tmp_mvar_value_100;
        PyObject *tmp_args_element_name_220;
        tmp_mvar_value_100 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SmotriIE);

        if (unlikely(tmp_mvar_value_100 == NULL)) {
            tmp_mvar_value_100 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_SmotriIE);
        }

        if (tmp_mvar_value_100 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40941 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2777;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_147 = tmp_mvar_value_100;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_220 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2777;
        {
            PyObject *call_args[] = {tmp_args_element_name_220};
            tmp_assign_source_111 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_147, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2777;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_smotri_url == NULL);
        var_smotri_url = tmp_assign_source_111;
    }
    {
        nuitka_bool tmp_condition_result_86;
        int tmp_truth_name_54;
        CHECK_OBJECT(var_smotri_url);
        tmp_truth_name_54 = CHECK_IF_TRUE(var_smotri_url);
        if (tmp_truth_name_54 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2778;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_86 = tmp_truth_name_54 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_86 == NUITKA_BOOL_TRUE) {
            goto branch_yes_84;
        } else {
            goto branch_no_84;
        }
    }
    branch_yes_84:;
    {
        PyObject *tmp_called_instance_148;
        PyObject *tmp_args_element_name_221;
        PyObject *tmp_args_element_name_222;
        CHECK_OBJECT(par_self);
        tmp_called_instance_148 = par_self;
        CHECK_OBJECT(var_smotri_url);
        tmp_args_element_name_221 = var_smotri_url;
        tmp_args_element_name_222 = const_str_plain_Smotri;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2779;
        {
            PyObject *call_args[] = {tmp_args_element_name_221, tmp_args_element_name_222};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_148, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2779;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_84:;
    {
        PyObject *tmp_assign_source_112;
        PyObject *tmp_called_instance_149;
        PyObject *tmp_mvar_value_101;
        PyObject *tmp_args_element_name_223;
        tmp_mvar_value_101 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MyviIE);

        if (unlikely(tmp_mvar_value_101 == NULL)) {
            tmp_mvar_value_101 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_MyviIE);
        }

        if (tmp_mvar_value_101 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40971 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2782;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_149 = tmp_mvar_value_101;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_223 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2782;
        {
            PyObject *call_args[] = {tmp_args_element_name_223};
            tmp_assign_source_112 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_149, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2782;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_myvi_url == NULL);
        var_myvi_url = tmp_assign_source_112;
    }
    {
        nuitka_bool tmp_condition_result_87;
        int tmp_truth_name_55;
        CHECK_OBJECT(var_myvi_url);
        tmp_truth_name_55 = CHECK_IF_TRUE(var_myvi_url);
        if (tmp_truth_name_55 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2783;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_87 = tmp_truth_name_55 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_87 == NUITKA_BOOL_TRUE) {
            goto branch_yes_85;
        } else {
            goto branch_no_85;
        }
    }
    branch_yes_85:;
    {
        PyObject *tmp_called_instance_150;
        PyObject *tmp_args_element_name_224;
        CHECK_OBJECT(par_self);
        tmp_called_instance_150 = par_self;
        CHECK_OBJECT(var_myvi_url);
        tmp_args_element_name_224 = var_myvi_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2784;
        {
            PyObject *call_args[] = {tmp_args_element_name_224};
            tmp_return_value = CALL_METHOD_WITH_ARGS1(tmp_called_instance_150, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2784;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_85:;
    {
        PyObject *tmp_assign_source_113;
        PyObject *tmp_called_instance_151;
        PyObject *tmp_mvar_value_102;
        PyObject *tmp_args_element_name_225;
        tmp_mvar_value_102 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SoundcloudEmbedIE);

        if (unlikely(tmp_mvar_value_102 == NULL)) {
            tmp_mvar_value_102 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_SoundcloudEmbedIE);
        }

        if (tmp_mvar_value_102 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40999 ], 39, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2787;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_151 = tmp_mvar_value_102;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_225 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2787;
        {
            PyObject *call_args[] = {tmp_args_element_name_225};
            tmp_assign_source_113 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_151, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2787;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_soundcloud_urls == NULL);
        var_soundcloud_urls = tmp_assign_source_113;
    }
    {
        nuitka_bool tmp_condition_result_88;
        int tmp_truth_name_56;
        CHECK_OBJECT(var_soundcloud_urls);
        tmp_truth_name_56 = CHECK_IF_TRUE(var_soundcloud_urls);
        if (tmp_truth_name_56 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2788;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_88 = tmp_truth_name_56 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_88 == NUITKA_BOOL_TRUE) {
            goto branch_yes_86;
        } else {
            goto branch_no_86;
        }
    }
    branch_yes_86:;
    {
        PyObject *tmp_called_name_87;
        PyObject *tmp_expression_name_93;
        PyObject *tmp_args_name_36;
        PyObject *tmp_tuple_element_37;
        PyObject *tmp_kw_name_36;
        PyObject *tmp_dict_key_55;
        PyObject *tmp_dict_value_55;
        PyObject *tmp_mvar_value_103;
        CHECK_OBJECT(par_self);
        tmp_expression_name_93 = par_self;
        tmp_called_name_87 = LOOKUP_ATTRIBUTE(tmp_expression_name_93, const_str_plain_playlist_from_matches);
        if (tmp_called_name_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2789;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_soundcloud_urls);
        tmp_tuple_element_37 = var_soundcloud_urls;
        tmp_args_name_36 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_37);
        PyTuple_SET_ITEM(tmp_args_name_36, 0, tmp_tuple_element_37);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_37 = var_video_id;
        Py_INCREF(tmp_tuple_element_37);
        PyTuple_SET_ITEM(tmp_args_name_36, 1, tmp_tuple_element_37);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_37 = var_video_title;
        Py_INCREF(tmp_tuple_element_37);
        PyTuple_SET_ITEM(tmp_args_name_36, 2, tmp_tuple_element_37);
        tmp_dict_key_55 = const_str_plain_getter;
        tmp_mvar_value_103 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unescapeHTML);

        if (unlikely(tmp_mvar_value_103 == NULL)) {
            tmp_mvar_value_103 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unescapeHTML);
        }

        if (tmp_mvar_value_103 == NULL) {
            Py_DECREF(tmp_called_name_87);
            Py_DECREF(tmp_args_name_36);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33553 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2789;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_dict_value_55 = tmp_mvar_value_103;
        tmp_kw_name_36 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_36, tmp_dict_key_55, tmp_dict_value_55);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2789;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_87, tmp_args_name_36, tmp_kw_name_36);
        Py_DECREF(tmp_called_name_87);
        Py_DECREF(tmp_args_name_36);
        Py_DECREF(tmp_kw_name_36);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2789;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_86:;
    {
        PyObject *tmp_assign_source_114;
        PyObject *tmp_called_instance_152;
        PyObject *tmp_mvar_value_104;
        PyObject *tmp_args_element_name_226;
        tmp_mvar_value_104 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TuneInBaseIE);

        if (unlikely(tmp_mvar_value_104 == NULL)) {
            tmp_mvar_value_104 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_TuneInBaseIE);
        }

        if (tmp_mvar_value_104 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41038 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2792;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_152 = tmp_mvar_value_104;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_226 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2792;
        {
            PyObject *call_args[] = {tmp_args_element_name_226};
            tmp_assign_source_114 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_152, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2792;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_tunein_urls == NULL);
        var_tunein_urls = tmp_assign_source_114;
    }
    {
        nuitka_bool tmp_condition_result_89;
        int tmp_truth_name_57;
        CHECK_OBJECT(var_tunein_urls);
        tmp_truth_name_57 = CHECK_IF_TRUE(var_tunein_urls);
        if (tmp_truth_name_57 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2793;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_89 = tmp_truth_name_57 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_89 == NUITKA_BOOL_TRUE) {
            goto branch_yes_87;
        } else {
            goto branch_no_87;
        }
    }
    branch_yes_87:;
    {
        PyObject *tmp_called_instance_153;
        PyObject *tmp_args_element_name_227;
        PyObject *tmp_args_element_name_228;
        PyObject *tmp_args_element_name_229;
        CHECK_OBJECT(par_self);
        tmp_called_instance_153 = par_self;
        CHECK_OBJECT(var_tunein_urls);
        tmp_args_element_name_227 = var_tunein_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_228 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_name_229 = var_video_title;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2794;
        {
            PyObject *call_args[] = {tmp_args_element_name_227, tmp_args_element_name_228, tmp_args_element_name_229};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(tmp_called_instance_153, const_str_plain_playlist_from_matches, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2794;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_87:;
    {
        PyObject *tmp_assign_source_115;
        PyObject *tmp_called_instance_154;
        PyObject *tmp_mvar_value_105;
        PyObject *tmp_args_element_name_230;
        tmp_mvar_value_105 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MTVServicesEmbeddedIE);

        if (unlikely(tmp_mvar_value_105 == NULL)) {
            tmp_mvar_value_105 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_MTVServicesEmbeddedIE);
        }

        if (tmp_mvar_value_105 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41072 ], 43, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2797;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_154 = tmp_mvar_value_105;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_230 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2797;
        {
            PyObject *call_args[] = {tmp_args_element_name_230};
            tmp_assign_source_115 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_154, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2797;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mtvservices_url == NULL);
        var_mtvservices_url = tmp_assign_source_115;
    }
    {
        nuitka_bool tmp_condition_result_90;
        int tmp_truth_name_58;
        CHECK_OBJECT(var_mtvservices_url);
        tmp_truth_name_58 = CHECK_IF_TRUE(var_mtvservices_url);
        if (tmp_truth_name_58 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2798;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_90 = tmp_truth_name_58 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_90 == NUITKA_BOOL_TRUE) {
            goto branch_yes_88;
        } else {
            goto branch_no_88;
        }
    }
    branch_yes_88:;
    {
        PyObject *tmp_called_name_88;
        PyObject *tmp_expression_name_94;
        PyObject *tmp_args_name_37;
        PyObject *tmp_tuple_element_38;
        PyObject *tmp_kw_name_37;
        CHECK_OBJECT(par_self);
        tmp_expression_name_94 = par_self;
        tmp_called_name_88 = LOOKUP_ATTRIBUTE(tmp_expression_name_94, const_str_plain_url_result);
        if (tmp_called_name_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2799;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mtvservices_url);
        tmp_tuple_element_38 = var_mtvservices_url;
        tmp_args_name_37 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_38);
        PyTuple_SET_ITEM(tmp_args_name_37, 0, tmp_tuple_element_38);
        tmp_kw_name_37 = PyDict_Copy(const_dict_812074b9e19d1bb916534f3cb0655447);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2799;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_88, tmp_args_name_37, tmp_kw_name_37);
        Py_DECREF(tmp_called_name_88);
        Py_DECREF(tmp_args_name_37);
        Py_DECREF(tmp_kw_name_37);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2799;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_88:;
    {
        PyObject *tmp_assign_source_116;
        PyObject *tmp_called_instance_155;
        PyObject *tmp_mvar_value_106;
        PyObject *tmp_args_element_name_231;
        PyObject *tmp_args_element_name_232;
        tmp_mvar_value_106 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_106 == NULL)) {
            tmp_mvar_value_106 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_106 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2802;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_155 = tmp_mvar_value_106;
        tmp_args_element_name_231 = const_str_digest_d203052c7d15c99d7bd7e72f3a55cb32;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_232 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2802;
        {
            PyObject *call_args[] = {tmp_args_element_name_231, tmp_args_element_name_232};
            tmp_assign_source_116 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_155, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2802;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_116;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_91;
        PyObject *tmp_compexpr_left_37;
        PyObject *tmp_compexpr_right_37;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_37 = var_mobj;
        tmp_compexpr_right_37 = Py_None;
        tmp_condition_result_91 = (tmp_compexpr_left_37 != tmp_compexpr_right_37) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_91 == NUITKA_BOOL_TRUE) {
            goto branch_yes_89;
        } else {
            goto branch_no_89;
        }
    }
    branch_yes_89:;
    {
        PyObject *tmp_called_name_89;
        PyObject *tmp_expression_name_95;
        PyObject *tmp_args_element_name_233;
        PyObject *tmp_called_instance_156;
        PyObject *tmp_args_element_name_234;
        CHECK_OBJECT(par_self);
        tmp_expression_name_95 = par_self;
        tmp_called_name_89 = LOOKUP_ATTRIBUTE(tmp_expression_name_95, const_str_plain_url_result);
        if (tmp_called_name_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2806;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_156 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2806;
        tmp_args_element_name_233 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_156, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_233 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_89);

            exception_lineno = 2806;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_234 = const_str_plain_Yahoo;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2806;
        {
            PyObject *call_args[] = {tmp_args_element_name_233, tmp_args_element_name_234};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_89, call_args);
        }

        Py_DECREF(tmp_called_name_89);
        Py_DECREF(tmp_args_element_name_233);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2806;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_89:;
    {
        PyObject *tmp_assign_source_117;
        PyObject *tmp_called_instance_157;
        PyObject *tmp_mvar_value_107;
        PyObject *tmp_args_element_name_235;
        PyObject *tmp_args_element_name_236;
        tmp_mvar_value_107 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_107 == NULL)) {
            tmp_mvar_value_107 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_107 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2809;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_157 = tmp_mvar_value_107;
        tmp_args_element_name_235 = const_str_digest_eb61eb10bf41fb2cbd5d9c37de0190be;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_236 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2809;
        {
            PyObject *call_args[] = {tmp_args_element_name_235, tmp_args_element_name_236};
            tmp_assign_source_117 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_157, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_117 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2809;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_117;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_92;
        PyObject *tmp_compexpr_left_38;
        PyObject *tmp_compexpr_right_38;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_38 = var_mobj;
        tmp_compexpr_right_38 = Py_None;
        tmp_condition_result_92 = (tmp_compexpr_left_38 != tmp_compexpr_right_38) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_92 == NUITKA_BOOL_TRUE) {
            goto branch_yes_90;
        } else {
            goto branch_no_90;
        }
    }
    branch_yes_90:;
    {
        PyObject *tmp_called_name_90;
        PyObject *tmp_expression_name_96;
        PyObject *tmp_args_element_name_237;
        PyObject *tmp_called_instance_158;
        PyObject *tmp_args_element_name_238;
        CHECK_OBJECT(par_self);
        tmp_expression_name_96 = par_self;
        tmp_called_name_90 = LOOKUP_ATTRIBUTE(tmp_expression_name_96, const_str_plain_url_result);
        if (tmp_called_name_90 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2818;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_158 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2818;
        tmp_args_element_name_237 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_158, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_237 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_90);

            exception_lineno = 2818;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_238 = const_str_plain_SBS;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2818;
        {
            PyObject *call_args[] = {tmp_args_element_name_237, tmp_args_element_name_238};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_90, call_args);
        }

        Py_DECREF(tmp_called_name_90);
        Py_DECREF(tmp_args_element_name_237);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2818;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_90:;
    {
        PyObject *tmp_assign_source_118;
        PyObject *tmp_called_instance_159;
        PyObject *tmp_mvar_value_108;
        PyObject *tmp_args_element_name_239;
        PyObject *tmp_args_element_name_240;
        tmp_mvar_value_108 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_108 == NULL)) {
            tmp_mvar_value_108 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_108 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2821;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_159 = tmp_mvar_value_108;
        tmp_args_element_name_239 = const_str_digest_d2e9ee6102ea07daaac012117ae75048;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_240 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2821;
        {
            PyObject *call_args[] = {tmp_args_element_name_239, tmp_args_element_name_240};
            tmp_assign_source_118 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_159, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2821;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_118;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_93;
        PyObject *tmp_compexpr_left_39;
        PyObject *tmp_compexpr_right_39;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_39 = var_mobj;
        tmp_compexpr_right_39 = Py_None;
        tmp_condition_result_93 = (tmp_compexpr_left_39 != tmp_compexpr_right_39) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_93 == NUITKA_BOOL_TRUE) {
            goto branch_yes_91;
        } else {
            goto branch_no_91;
        }
    }
    branch_yes_91:;
    {
        PyObject *tmp_called_name_91;
        PyObject *tmp_expression_name_97;
        PyObject *tmp_args_element_name_241;
        PyObject *tmp_called_instance_160;
        PyObject *tmp_args_element_name_242;
        CHECK_OBJECT(par_self);
        tmp_expression_name_97 = par_self;
        tmp_called_name_91 = LOOKUP_ATTRIBUTE(tmp_expression_name_97, const_str_plain_url_result);
        if (tmp_called_name_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2825;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_160 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2825;
        tmp_args_element_name_241 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_160, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_241 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_91);

            exception_lineno = 2825;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_242 = const_str_plain_Cinchcast;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2825;
        {
            PyObject *call_args[] = {tmp_args_element_name_241, tmp_args_element_name_242};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_91, call_args);
        }

        Py_DECREF(tmp_called_name_91);
        Py_DECREF(tmp_args_element_name_241);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2825;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_91:;
    {
        PyObject *tmp_assign_source_119;
        PyObject *tmp_called_instance_161;
        PyObject *tmp_mvar_value_109;
        PyObject *tmp_args_element_name_243;
        PyObject *tmp_args_element_name_244;
        tmp_mvar_value_109 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_109 == NULL)) {
            tmp_mvar_value_109 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_109 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2827;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_161 = tmp_mvar_value_109;
        tmp_args_element_name_243 = const_str_digest_37d33b5e68ebcf4d73d3a1270c5f8ba3;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_244 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2827;
        {
            PyObject *call_args[] = {tmp_args_element_name_243, tmp_args_element_name_244};
            tmp_assign_source_119 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_161, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2827;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_119;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_94;
        PyObject *tmp_operand_name_6;
        CHECK_OBJECT(var_mobj);
        tmp_operand_name_6 = var_mobj;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_6);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2830;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_94 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_94 == NUITKA_BOOL_TRUE) {
            goto branch_yes_92;
        } else {
            goto branch_no_92;
        }
    }
    branch_yes_92:;
    {
        PyObject *tmp_assign_source_120;
        PyObject *tmp_called_instance_162;
        PyObject *tmp_mvar_value_110;
        PyObject *tmp_args_element_name_245;
        PyObject *tmp_args_element_name_246;
        tmp_mvar_value_110 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_110 == NULL)) {
            tmp_mvar_value_110 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_110 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2831;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_162 = tmp_mvar_value_110;
        tmp_args_element_name_245 = const_str_digest_401bcf178a57c03ec8078ac84544f649;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_246 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2831;
        {
            PyObject *call_args[] = {tmp_args_element_name_245, tmp_args_element_name_246};
            tmp_assign_source_120 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_162, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2831;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_120;
            Py_DECREF(old);
        }

    }
    branch_no_92:;
    {
        nuitka_bool tmp_condition_result_95;
        PyObject *tmp_compexpr_left_40;
        PyObject *tmp_compexpr_right_40;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_40 = var_mobj;
        tmp_compexpr_right_40 = Py_None;
        tmp_condition_result_95 = (tmp_compexpr_left_40 != tmp_compexpr_right_40) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_95 == NUITKA_BOOL_TRUE) {
            goto branch_yes_93;
        } else {
            goto branch_no_93;
        }
    }
    branch_yes_93:;
    {
        PyObject *tmp_called_name_92;
        PyObject *tmp_expression_name_98;
        PyObject *tmp_args_element_name_247;
        PyObject *tmp_called_instance_163;
        PyObject *tmp_args_element_name_248;
        CHECK_OBJECT(par_self);
        tmp_expression_name_98 = par_self;
        tmp_called_name_92 = LOOKUP_ATTRIBUTE(tmp_expression_name_98, const_str_plain_url_result);
        if (tmp_called_name_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2835;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_163 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2835;
        tmp_args_element_name_247 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_163, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_247 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_92);

            exception_lineno = 2835;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_248 = const_str_plain_MLB;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2835;
        {
            PyObject *call_args[] = {tmp_args_element_name_247, tmp_args_element_name_248};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_92, call_args);
        }

        Py_DECREF(tmp_called_name_92);
        Py_DECREF(tmp_args_element_name_247);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2835;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_93:;
    {
        PyObject *tmp_assign_source_121;
        PyObject *tmp_called_name_93;
        PyObject *tmp_expression_name_99;
        PyObject *tmp_mvar_value_111;
        PyObject *tmp_args_element_name_249;
        PyObject *tmp_left_name_12;
        PyObject *tmp_right_name_12;
        PyObject *tmp_expression_name_100;
        PyObject *tmp_mvar_value_112;
        PyObject *tmp_args_element_name_250;
        tmp_mvar_value_111 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_111 == NULL)) {
            tmp_mvar_value_111 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_111 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2837;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_name_99 = tmp_mvar_value_111;
        tmp_called_name_93 = LOOKUP_ATTRIBUTE(tmp_expression_name_99, const_str_plain_search);
        if (tmp_called_name_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2837;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_left_name_12 = const_str_digest_7396b32c3485b21a3d23736fffc8c66d;
        tmp_mvar_value_112 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_CondeNastIE);

        if (unlikely(tmp_mvar_value_112 == NULL)) {
            tmp_mvar_value_112 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_CondeNastIE);
        }

        if (tmp_mvar_value_112 == NULL) {
            Py_DECREF(tmp_called_name_93);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41115 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2838;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_name_100 = tmp_mvar_value_112;
        tmp_right_name_12 = LOOKUP_ATTRIBUTE(tmp_expression_name_100, const_str_plain_EMBED_URL);
        if (tmp_right_name_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_93);

            exception_lineno = 2838;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_249 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_left_name_12, tmp_right_name_12);
        Py_DECREF(tmp_right_name_12);
        if (tmp_args_element_name_249 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_93);

            exception_lineno = 2838;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_250 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2837;
        {
            PyObject *call_args[] = {tmp_args_element_name_249, tmp_args_element_name_250};
            tmp_assign_source_121 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_93, call_args);
        }

        Py_DECREF(tmp_called_name_93);
        Py_DECREF(tmp_args_element_name_249);
        if (tmp_assign_source_121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2837;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_121;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_96;
        PyObject *tmp_compexpr_left_41;
        PyObject *tmp_compexpr_right_41;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_41 = var_mobj;
        tmp_compexpr_right_41 = Py_None;
        tmp_condition_result_96 = (tmp_compexpr_left_41 != tmp_compexpr_right_41) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_96 == NUITKA_BOOL_TRUE) {
            goto branch_yes_94;
        } else {
            goto branch_no_94;
        }
    }
    branch_yes_94:;
    {
        PyObject *tmp_called_name_94;
        PyObject *tmp_expression_name_101;
        PyObject *tmp_args_element_name_251;
        PyObject *tmp_called_name_95;
        PyObject *tmp_expression_name_102;
        PyObject *tmp_args_name_38;
        PyObject *tmp_tuple_element_39;
        PyObject *tmp_called_instance_164;
        PyObject *tmp_kw_name_38;
        PyObject *tmp_args_element_name_252;
        CHECK_OBJECT(par_self);
        tmp_expression_name_101 = par_self;
        tmp_called_name_94 = LOOKUP_ATTRIBUTE(tmp_expression_name_101, const_str_plain_url_result);
        if (tmp_called_name_94 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2841;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_self);
        tmp_expression_name_102 = par_self;
        tmp_called_name_95 = LOOKUP_ATTRIBUTE(tmp_expression_name_102, const_str_plain__proto_relative_url);
        if (tmp_called_name_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_94);

            exception_lineno = 2841;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_164 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2841;
        tmp_tuple_element_39 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_164, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_tuple_element_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_94);
            Py_DECREF(tmp_called_name_95);

            exception_lineno = 2841;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_name_38 = PyTuple_New(1);
        PyTuple_SET_ITEM(tmp_args_name_38, 0, tmp_tuple_element_39);
        tmp_kw_name_38 = PyDict_Copy(const_dict_2acf241f96a3de208b696e1b98ebdbba);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2841;
        tmp_args_element_name_251 = CALL_FUNCTION(tmp_called_name_95, tmp_args_name_38, tmp_kw_name_38);
        Py_DECREF(tmp_called_name_95);
        Py_DECREF(tmp_args_name_38);
        Py_DECREF(tmp_kw_name_38);
        if (tmp_args_element_name_251 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_94);

            exception_lineno = 2841;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_252 = const_str_plain_CondeNast;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2841;
        {
            PyObject *call_args[] = {tmp_args_element_name_251, tmp_args_element_name_252};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_94, call_args);
        }

        Py_DECREF(tmp_called_name_94);
        Py_DECREF(tmp_args_element_name_251);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2841;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_94:;
    {
        PyObject *tmp_assign_source_122;
        PyObject *tmp_called_instance_165;
        PyObject *tmp_mvar_value_113;
        PyObject *tmp_args_element_name_253;
        PyObject *tmp_args_element_name_254;
        tmp_mvar_value_113 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_113 == NULL)) {
            tmp_mvar_value_113 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_113 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2843;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_165 = tmp_mvar_value_113;
        tmp_args_element_name_253 = const_str_digest_5a00f5d95a03f170ef20040a176ecb65;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_254 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2843;
        {
            PyObject *call_args[] = {tmp_args_element_name_253, tmp_args_element_name_254};
            tmp_assign_source_122 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_165, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2843;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_122;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_97;
        PyObject *tmp_compexpr_left_42;
        PyObject *tmp_compexpr_right_42;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_42 = var_mobj;
        tmp_compexpr_right_42 = Py_None;
        tmp_condition_result_97 = (tmp_compexpr_left_42 != tmp_compexpr_right_42) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_97 == NUITKA_BOOL_TRUE) {
            goto branch_yes_95;
        } else {
            goto branch_no_95;
        }
    }
    branch_yes_95:;
    {
        PyObject *tmp_called_name_96;
        PyObject *tmp_expression_name_103;
        PyObject *tmp_args_element_name_255;
        PyObject *tmp_called_instance_166;
        PyObject *tmp_args_element_name_256;
        CHECK_OBJECT(par_self);
        tmp_expression_name_103 = par_self;
        tmp_called_name_96 = LOOKUP_ATTRIBUTE(tmp_expression_name_103, const_str_plain_url_result);
        if (tmp_called_name_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2847;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_166 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2847;
        tmp_args_element_name_255 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_166, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_255 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_96);

            exception_lineno = 2847;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_256 = const_str_plain_Livestream;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2847;
        {
            PyObject *call_args[] = {tmp_args_element_name_255, tmp_args_element_name_256};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_96, call_args);
        }

        Py_DECREF(tmp_called_name_96);
        Py_DECREF(tmp_args_element_name_255);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2847;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_95:;
    {
        PyObject *tmp_assign_source_123;
        PyObject *tmp_called_instance_167;
        PyObject *tmp_mvar_value_114;
        PyObject *tmp_args_element_name_257;
        PyObject *tmp_args_element_name_258;
        tmp_mvar_value_114 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_114 == NULL)) {
            tmp_mvar_value_114 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_114 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2850;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_167 = tmp_mvar_value_114;
        tmp_args_element_name_257 = const_str_digest_4953fb1045fe3bd50b5af98734199477;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_258 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2850;
        {
            PyObject *call_args[] = {tmp_args_element_name_257, tmp_args_element_name_258};
            tmp_assign_source_123 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_167, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2850;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_123;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_98;
        PyObject *tmp_compexpr_left_43;
        PyObject *tmp_compexpr_right_43;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_43 = var_mobj;
        tmp_compexpr_right_43 = Py_None;
        tmp_condition_result_98 = (tmp_compexpr_left_43 != tmp_compexpr_right_43) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_98 == NUITKA_BOOL_TRUE) {
            goto branch_yes_96;
        } else {
            goto branch_no_96;
        }
    }
    branch_yes_96:;
    {
        PyObject *tmp_called_name_97;
        PyObject *tmp_expression_name_104;
        PyObject *tmp_args_element_name_259;
        PyObject *tmp_called_instance_168;
        PyObject *tmp_args_element_name_260;
        CHECK_OBJECT(par_self);
        tmp_expression_name_104 = par_self;
        tmp_called_name_97 = LOOKUP_ATTRIBUTE(tmp_expression_name_104, const_str_plain_url_result);
        if (tmp_called_name_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2853;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_168 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2853;
        tmp_args_element_name_259 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_168, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_259 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_97);

            exception_lineno = 2853;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_260 = const_str_plain_Zapiks;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2853;
        {
            PyObject *call_args[] = {tmp_args_element_name_259, tmp_args_element_name_260};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_97, call_args);
        }

        Py_DECREF(tmp_called_name_97);
        Py_DECREF(tmp_args_element_name_259);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2853;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_96:;
    {
        PyObject *tmp_assign_source_124;
        PyObject *tmp_called_instance_169;
        PyObject *tmp_mvar_value_115;
        PyObject *tmp_args_element_name_261;
        tmp_mvar_value_115 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_KalturaIE);

        if (unlikely(tmp_mvar_value_115 == NULL)) {
            tmp_mvar_value_115 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_KalturaIE);
        }

        if (tmp_mvar_value_115 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 35340 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2856;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_169 = tmp_mvar_value_115;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_261 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2856;
        {
            PyObject *call_args[] = {tmp_args_element_name_261};
            tmp_assign_source_124 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_169, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2856;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_kaltura_urls == NULL);
        var_kaltura_urls = tmp_assign_source_124;
    }
    {
        nuitka_bool tmp_condition_result_99;
        int tmp_truth_name_59;
        CHECK_OBJECT(var_kaltura_urls);
        tmp_truth_name_59 = CHECK_IF_TRUE(var_kaltura_urls);
        if (tmp_truth_name_59 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2857;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_99 = tmp_truth_name_59 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_99 == NUITKA_BOOL_TRUE) {
            goto branch_yes_97;
        } else {
            goto branch_no_97;
        }
    }
    branch_yes_97:;
    {
        PyObject *tmp_called_name_98;
        PyObject *tmp_expression_name_105;
        PyObject *tmp_args_name_39;
        PyObject *tmp_tuple_element_40;
        PyObject *tmp_kw_name_39;
        PyObject *tmp_dict_key_56;
        PyObject *tmp_dict_value_56;
        PyObject *tmp_dict_key_57;
        PyObject *tmp_dict_value_57;
        PyObject *tmp_called_instance_170;
        PyObject *tmp_mvar_value_116;
        CHECK_OBJECT(par_self);
        tmp_expression_name_105 = par_self;
        tmp_called_name_98 = LOOKUP_ATTRIBUTE(tmp_expression_name_105, const_str_plain_playlist_from_matches);
        if (tmp_called_name_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2858;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_kaltura_urls);
        tmp_tuple_element_40 = var_kaltura_urls;
        tmp_args_name_39 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_40);
        PyTuple_SET_ITEM(tmp_args_name_39, 0, tmp_tuple_element_40);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_40 = var_video_id;
        Py_INCREF(tmp_tuple_element_40);
        PyTuple_SET_ITEM(tmp_args_name_39, 1, tmp_tuple_element_40);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_40 = var_video_title;
        Py_INCREF(tmp_tuple_element_40);
        PyTuple_SET_ITEM(tmp_args_name_39, 2, tmp_tuple_element_40);
        tmp_dict_key_56 = const_str_plain_getter;
        tmp_dict_value_56 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_5_lambda();

        ((struct Nuitka_FunctionObject *)tmp_dict_value_56)->m_closure[0] = par_url;
        Py_INCREF(((struct Nuitka_FunctionObject *)tmp_dict_value_56)->m_closure[0]);


        tmp_kw_name_39 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_39, tmp_dict_key_56, tmp_dict_value_56);
        Py_DECREF(tmp_dict_value_56);
        assert(!(tmp_res != 0));
        tmp_dict_key_57 = const_str_plain_ie;
        tmp_mvar_value_116 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_KalturaIE);

        if (unlikely(tmp_mvar_value_116 == NULL)) {
            tmp_mvar_value_116 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_KalturaIE);
        }

        if (tmp_mvar_value_116 == NULL) {
            Py_DECREF(tmp_called_name_98);
            Py_DECREF(tmp_args_name_39);
            Py_DECREF(tmp_kw_name_39);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 35340 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2861;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_170 = tmp_mvar_value_116;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2861;
        tmp_dict_value_57 = CALL_METHOD_NO_ARGS(tmp_called_instance_170, const_str_plain_ie_key);
        if (tmp_dict_value_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_98);
            Py_DECREF(tmp_args_name_39);
            Py_DECREF(tmp_kw_name_39);

            exception_lineno = 2861;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = PyDict_SetItem(tmp_kw_name_39, tmp_dict_key_57, tmp_dict_value_57);
        Py_DECREF(tmp_dict_value_57);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2858;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_98, tmp_args_name_39, tmp_kw_name_39);
        Py_DECREF(tmp_called_name_98);
        Py_DECREF(tmp_args_name_39);
        Py_DECREF(tmp_kw_name_39);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2858;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_97:;
    {
        PyObject *tmp_assign_source_125;
        PyObject *tmp_called_instance_171;
        PyObject *tmp_mvar_value_117;
        PyObject *tmp_args_element_name_262;
        tmp_mvar_value_117 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_EaglePlatformIE);

        if (unlikely(tmp_mvar_value_117 == NULL)) {
            tmp_mvar_value_117 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_EaglePlatformIE);
        }

        if (tmp_mvar_value_117 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 39251 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2864;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_171 = tmp_mvar_value_117;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_262 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2864;
        {
            PyObject *call_args[] = {tmp_args_element_name_262};
            tmp_assign_source_125 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_171, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_125 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2864;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_eagleplatform_url == NULL);
        var_eagleplatform_url = tmp_assign_source_125;
    }
    {
        nuitka_bool tmp_condition_result_100;
        int tmp_truth_name_60;
        CHECK_OBJECT(var_eagleplatform_url);
        tmp_truth_name_60 = CHECK_IF_TRUE(var_eagleplatform_url);
        if (tmp_truth_name_60 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2865;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_100 = tmp_truth_name_60 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_100 == NUITKA_BOOL_TRUE) {
            goto branch_yes_98;
        } else {
            goto branch_no_98;
        }
    }
    branch_yes_98:;
    {
        PyObject *tmp_called_name_99;
        PyObject *tmp_expression_name_106;
        PyObject *tmp_args_element_name_263;
        PyObject *tmp_called_name_100;
        PyObject *tmp_mvar_value_118;
        PyObject *tmp_args_element_name_264;
        PyObject *tmp_args_element_name_265;
        PyObject *tmp_dict_key_58;
        PyObject *tmp_dict_value_58;
        PyObject *tmp_args_element_name_266;
        PyObject *tmp_called_instance_172;
        PyObject *tmp_mvar_value_119;
        CHECK_OBJECT(par_self);
        tmp_expression_name_106 = par_self;
        tmp_called_name_99 = LOOKUP_ATTRIBUTE(tmp_expression_name_106, const_str_plain_url_result);
        if (tmp_called_name_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2866;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_118 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_smuggle_url);

        if (unlikely(tmp_mvar_value_118 == NULL)) {
            tmp_mvar_value_118 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_smuggle_url);
        }

        if (tmp_mvar_value_118 == NULL) {
            Py_DECREF(tmp_called_name_99);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 34727 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2866;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_100 = tmp_mvar_value_118;
        CHECK_OBJECT(var_eagleplatform_url);
        tmp_args_element_name_264 = var_eagleplatform_url;
        tmp_dict_key_58 = const_str_plain_referrer;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_dict_value_58 = PyCell_GET(par_url);
        tmp_args_element_name_265 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_265, tmp_dict_key_58, tmp_dict_value_58);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2866;
        {
            PyObject *call_args[] = {tmp_args_element_name_264, tmp_args_element_name_265};
            tmp_args_element_name_263 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_100, call_args);
        }

        Py_DECREF(tmp_args_element_name_265);
        if (tmp_args_element_name_263 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_99);

            exception_lineno = 2866;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_119 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_EaglePlatformIE);

        if (unlikely(tmp_mvar_value_119 == NULL)) {
            tmp_mvar_value_119 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_EaglePlatformIE);
        }

        if (tmp_mvar_value_119 == NULL) {
            Py_DECREF(tmp_called_name_99);
            Py_DECREF(tmp_args_element_name_263);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 39251 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2866;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_172 = tmp_mvar_value_119;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2866;
        tmp_args_element_name_266 = CALL_METHOD_NO_ARGS(tmp_called_instance_172, const_str_plain_ie_key);
        if (tmp_args_element_name_266 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_99);
            Py_DECREF(tmp_args_element_name_263);

            exception_lineno = 2866;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2866;
        {
            PyObject *call_args[] = {tmp_args_element_name_263, tmp_args_element_name_266};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_99, call_args);
        }

        Py_DECREF(tmp_called_name_99);
        Py_DECREF(tmp_args_element_name_263);
        Py_DECREF(tmp_args_element_name_266);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2866;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_98:;
    {
        PyObject *tmp_assign_source_126;
        PyObject *tmp_called_instance_173;
        PyObject *tmp_mvar_value_120;
        PyObject *tmp_args_element_name_267;
        PyObject *tmp_args_element_name_268;
        tmp_mvar_value_120 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_120 == NULL)) {
            tmp_mvar_value_120 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_120 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2869;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_173 = tmp_mvar_value_120;
        tmp_args_element_name_267 = const_str_digest_caaf8f8bff1cc1e9db4fd0f281603e22;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_268 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2869;
        {
            PyObject *call_args[] = {tmp_args_element_name_267, tmp_args_element_name_268};
            tmp_assign_source_126 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_173, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2869;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_126;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_101;
        PyObject *tmp_compexpr_left_44;
        PyObject *tmp_compexpr_right_44;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_44 = var_mobj;
        tmp_compexpr_right_44 = Py_None;
        tmp_condition_result_101 = (tmp_compexpr_left_44 != tmp_compexpr_right_44) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_101 == NUITKA_BOOL_TRUE) {
            goto branch_yes_99;
        } else {
            goto branch_no_99;
        }
    }
    branch_yes_99:;
    {
        PyObject *tmp_called_name_101;
        PyObject *tmp_expression_name_107;
        PyObject *tmp_args_element_name_269;
        PyObject *tmp_left_name_13;
        PyObject *tmp_right_name_13;
        PyObject *tmp_called_instance_174;
        PyObject *tmp_args_element_name_270;
        CHECK_OBJECT(par_self);
        tmp_expression_name_107 = par_self;
        tmp_called_name_101 = LOOKUP_ATTRIBUTE(tmp_expression_name_107, const_str_plain_url_result);
        if (tmp_called_name_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2872;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_left_name_13 = const_str_digest_bfef9bdba76d375d4e508d0aae4cb642;
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_174 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2872;
        tmp_right_name_13 = CALL_METHOD_NO_ARGS(tmp_called_instance_174, const_str_plain_groupdict);
        if (tmp_right_name_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_101);

            exception_lineno = 2872;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_269 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_left_name_13, tmp_right_name_13);
        Py_DECREF(tmp_right_name_13);
        if (tmp_args_element_name_269 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_101);

            exception_lineno = 2872;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_270 = const_str_plain_EaglePlatform;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2872;
        {
            PyObject *call_args[] = {tmp_args_element_name_269, tmp_args_element_name_270};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_101, call_args);
        }

        Py_DECREF(tmp_called_name_101);
        Py_DECREF(tmp_args_element_name_269);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2872;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_99:;
    {
        PyObject *tmp_assign_source_127;
        PyObject *tmp_called_instance_175;
        PyObject *tmp_mvar_value_121;
        PyObject *tmp_args_element_name_271;
        tmp_mvar_value_121 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_PladformIE);

        if (unlikely(tmp_mvar_value_121 == NULL)) {
            tmp_mvar_value_121 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_PladformIE);
        }

        if (tmp_mvar_value_121 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41148 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2875;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_175 = tmp_mvar_value_121;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_271 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2875;
        {
            PyObject *call_args[] = {tmp_args_element_name_271};
            tmp_assign_source_127 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_175, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_127 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2875;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pladform_url == NULL);
        var_pladform_url = tmp_assign_source_127;
    }
    {
        nuitka_bool tmp_condition_result_102;
        int tmp_truth_name_61;
        CHECK_OBJECT(var_pladform_url);
        tmp_truth_name_61 = CHECK_IF_TRUE(var_pladform_url);
        if (tmp_truth_name_61 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2876;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_102 = tmp_truth_name_61 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_102 == NUITKA_BOOL_TRUE) {
            goto branch_yes_100;
        } else {
            goto branch_no_100;
        }
    }
    branch_yes_100:;
    {
        PyObject *tmp_called_instance_176;
        PyObject *tmp_args_element_name_272;
        CHECK_OBJECT(par_self);
        tmp_called_instance_176 = par_self;
        CHECK_OBJECT(var_pladform_url);
        tmp_args_element_name_272 = var_pladform_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2877;
        {
            PyObject *call_args[] = {tmp_args_element_name_272};
            tmp_return_value = CALL_METHOD_WITH_ARGS1(tmp_called_instance_176, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2877;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_100:;
    {
        PyObject *tmp_assign_source_128;
        PyObject *tmp_called_instance_177;
        PyObject *tmp_mvar_value_122;
        PyObject *tmp_args_element_name_273;
        tmp_mvar_value_122 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VideomoreIE);

        if (unlikely(tmp_mvar_value_122 == NULL)) {
            tmp_mvar_value_122 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_VideomoreIE);
        }

        if (tmp_mvar_value_122 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 36938 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2880;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_177 = tmp_mvar_value_122;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_273 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2880;
        {
            PyObject *call_args[] = {tmp_args_element_name_273};
            tmp_assign_source_128 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_177, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2880;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_videomore_url == NULL);
        var_videomore_url = tmp_assign_source_128;
    }
    {
        nuitka_bool tmp_condition_result_103;
        int tmp_truth_name_62;
        CHECK_OBJECT(var_videomore_url);
        tmp_truth_name_62 = CHECK_IF_TRUE(var_videomore_url);
        if (tmp_truth_name_62 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2881;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_103 = tmp_truth_name_62 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_103 == NUITKA_BOOL_TRUE) {
            goto branch_yes_101;
        } else {
            goto branch_no_101;
        }
    }
    branch_yes_101:;
    {
        PyObject *tmp_called_instance_178;
        PyObject *tmp_args_element_name_274;
        CHECK_OBJECT(par_self);
        tmp_called_instance_178 = par_self;
        CHECK_OBJECT(var_videomore_url);
        tmp_args_element_name_274 = var_videomore_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2882;
        {
            PyObject *call_args[] = {tmp_args_element_name_274};
            tmp_return_value = CALL_METHOD_WITH_ARGS1(tmp_called_instance_178, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2882;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_101:;
    {
        PyObject *tmp_assign_source_129;
        PyObject *tmp_called_instance_179;
        PyObject *tmp_mvar_value_123;
        PyObject *tmp_args_element_name_275;
        PyObject *tmp_args_element_name_276;
        tmp_mvar_value_123 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_WebcasterFeedIE);

        if (unlikely(tmp_mvar_value_123 == NULL)) {
            tmp_mvar_value_123 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_WebcasterFeedIE);
        }

        if (tmp_mvar_value_123 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41180 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2885;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_179 = tmp_mvar_value_123;
        CHECK_OBJECT(par_self);
        tmp_args_element_name_275 = par_self;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_276 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2885;
        {
            PyObject *call_args[] = {tmp_args_element_name_275, tmp_args_element_name_276};
            tmp_assign_source_129 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_179, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_129 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2885;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_webcaster_url == NULL);
        var_webcaster_url = tmp_assign_source_129;
    }
    {
        nuitka_bool tmp_condition_result_104;
        int tmp_truth_name_63;
        CHECK_OBJECT(var_webcaster_url);
        tmp_truth_name_63 = CHECK_IF_TRUE(var_webcaster_url);
        if (tmp_truth_name_63 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2886;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_104 = tmp_truth_name_63 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_104 == NUITKA_BOOL_TRUE) {
            goto branch_yes_102;
        } else {
            goto branch_no_102;
        }
    }
    branch_yes_102:;
    {
        PyObject *tmp_called_name_102;
        PyObject *tmp_expression_name_108;
        PyObject *tmp_args_name_40;
        PyObject *tmp_tuple_element_41;
        PyObject *tmp_kw_name_40;
        PyObject *tmp_dict_key_59;
        PyObject *tmp_dict_value_59;
        PyObject *tmp_called_instance_180;
        PyObject *tmp_mvar_value_124;
        CHECK_OBJECT(par_self);
        tmp_expression_name_108 = par_self;
        tmp_called_name_102 = LOOKUP_ATTRIBUTE(tmp_expression_name_108, const_str_plain_url_result);
        if (tmp_called_name_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2887;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_webcaster_url);
        tmp_tuple_element_41 = var_webcaster_url;
        tmp_args_name_40 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_41);
        PyTuple_SET_ITEM(tmp_args_name_40, 0, tmp_tuple_element_41);
        tmp_dict_key_59 = const_str_plain_ie;
        tmp_mvar_value_124 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_WebcasterFeedIE);

        if (unlikely(tmp_mvar_value_124 == NULL)) {
            tmp_mvar_value_124 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_WebcasterFeedIE);
        }

        if (tmp_mvar_value_124 == NULL) {
            Py_DECREF(tmp_called_name_102);
            Py_DECREF(tmp_args_name_40);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41180 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2887;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_180 = tmp_mvar_value_124;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2887;
        tmp_dict_value_59 = CALL_METHOD_NO_ARGS(tmp_called_instance_180, const_str_plain_ie_key);
        if (tmp_dict_value_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_102);
            Py_DECREF(tmp_args_name_40);

            exception_lineno = 2887;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_40 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_40, tmp_dict_key_59, tmp_dict_value_59);
        Py_DECREF(tmp_dict_value_59);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2887;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_102, tmp_args_name_40, tmp_kw_name_40);
        Py_DECREF(tmp_called_name_102);
        Py_DECREF(tmp_args_name_40);
        Py_DECREF(tmp_kw_name_40);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2887;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_102:;
    {
        PyObject *tmp_assign_source_130;
        PyObject *tmp_called_instance_181;
        PyObject *tmp_mvar_value_125;
        PyObject *tmp_args_element_name_277;
        PyObject *tmp_args_element_name_278;
        tmp_mvar_value_125 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_125 == NULL)) {
            tmp_mvar_value_125 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_125 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2890;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_181 = tmp_mvar_value_125;
        tmp_args_element_name_277 = const_str_digest_10027c8f8698faa600dd838c5a3a9765;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_278 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2890;
        {
            PyObject *call_args[] = {tmp_args_element_name_277, tmp_args_element_name_278};
            tmp_assign_source_130 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_181, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_130 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2890;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_130;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_105;
        PyObject *tmp_compexpr_left_45;
        PyObject *tmp_compexpr_right_45;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_45 = var_mobj;
        tmp_compexpr_right_45 = Py_None;
        tmp_condition_result_105 = (tmp_compexpr_left_45 != tmp_compexpr_right_45) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_105 == NUITKA_BOOL_TRUE) {
            goto branch_yes_103;
        } else {
            goto branch_no_103;
        }
    }
    branch_yes_103:;
    {
        PyObject *tmp_called_name_103;
        PyObject *tmp_expression_name_109;
        PyObject *tmp_args_element_name_279;
        PyObject *tmp_called_instance_182;
        CHECK_OBJECT(par_self);
        tmp_expression_name_109 = par_self;
        tmp_called_name_103 = LOOKUP_ATTRIBUTE(tmp_expression_name_109, const_str_plain_url_result);
        if (tmp_called_name_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2893;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_182 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2893;
        tmp_args_element_name_279 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_182, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_279 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_103);

            exception_lineno = 2893;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2893;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_103, tmp_args_element_name_279);
        Py_DECREF(tmp_called_name_103);
        Py_DECREF(tmp_args_element_name_279);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2893;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_103:;
    {
        PyObject *tmp_assign_source_131;
        PyObject *tmp_called_instance_183;
        PyObject *tmp_mvar_value_126;
        PyObject *tmp_args_element_name_280;
        PyObject *tmp_args_element_name_281;
        tmp_mvar_value_126 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_126 == NULL)) {
            tmp_mvar_value_126 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_126 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2896;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_183 = tmp_mvar_value_126;
        tmp_args_element_name_280 = const_str_digest_0985fc36097213607309c35d0ec0c2da;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_281 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2896;
        {
            PyObject *call_args[] = {tmp_args_element_name_280, tmp_args_element_name_281};
            tmp_assign_source_131 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_183, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2896;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_131;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_106;
        PyObject *tmp_compexpr_left_46;
        PyObject *tmp_compexpr_right_46;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_46 = var_mobj;
        tmp_compexpr_right_46 = Py_None;
        tmp_condition_result_106 = (tmp_compexpr_left_46 != tmp_compexpr_right_46) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_106 == NUITKA_BOOL_TRUE) {
            goto branch_yes_104;
        } else {
            goto branch_no_104;
        }
    }
    branch_yes_104:;
    {
        PyObject *tmp_called_name_104;
        PyObject *tmp_expression_name_110;
        PyObject *tmp_args_element_name_282;
        PyObject *tmp_left_name_14;
        PyObject *tmp_right_name_14;
        PyObject *tmp_called_instance_184;
        PyObject *tmp_args_element_name_283;
        CHECK_OBJECT(par_self);
        tmp_expression_name_110 = par_self;
        tmp_called_name_104 = LOOKUP_ATTRIBUTE(tmp_expression_name_110, const_str_plain_url_result);
        if (tmp_called_name_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2899;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_left_name_14 = const_str_digest_8e721306d124e81b476c7f612ce7e5bd;
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_184 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2899;
        tmp_right_name_14 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_184, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_id_tuple, 0));

        if (tmp_right_name_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_104);

            exception_lineno = 2899;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_282 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_left_name_14, tmp_right_name_14);
        Py_DECREF(tmp_right_name_14);
        if (tmp_args_element_name_282 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_104);

            exception_lineno = 2899;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_283 = const_str_plain_FiveMin;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2899;
        {
            PyObject *call_args[] = {tmp_args_element_name_282, tmp_args_element_name_283};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_104, call_args);
        }

        Py_DECREF(tmp_called_name_104);
        Py_DECREF(tmp_args_element_name_282);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2899;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_104:;
    {
        PyObject *tmp_assign_source_132;
        PyObject *tmp_called_instance_185;
        PyObject *tmp_mvar_value_127;
        PyObject *tmp_args_element_name_284;
        PyObject *tmp_args_element_name_285;
        tmp_mvar_value_127 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_127 == NULL)) {
            tmp_mvar_value_127 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_127 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2902;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_185 = tmp_mvar_value_127;
        tmp_args_element_name_284 = const_str_digest_a9a8ff1b3a274c3b7f86d9dd4e88a5c8;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_285 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2902;
        {
            PyObject *call_args[] = {tmp_args_element_name_284, tmp_args_element_name_285};
            tmp_assign_source_132 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_185, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2902;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_132;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_107;
        PyObject *tmp_compexpr_left_47;
        PyObject *tmp_compexpr_right_47;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_47 = var_mobj;
        tmp_compexpr_right_47 = Py_None;
        tmp_condition_result_107 = (tmp_compexpr_left_47 != tmp_compexpr_right_47) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_107 == NUITKA_BOOL_TRUE) {
            goto branch_yes_105;
        } else {
            goto branch_no_105;
        }
    }
    branch_yes_105:;
    {
        PyObject *tmp_called_name_105;
        PyObject *tmp_expression_name_111;
        PyObject *tmp_args_element_name_286;
        PyObject *tmp_called_instance_186;
        CHECK_OBJECT(par_self);
        tmp_expression_name_111 = par_self;
        tmp_called_name_105 = LOOKUP_ATTRIBUTE(tmp_expression_name_111, const_str_plain_url_result);
        if (tmp_called_name_105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2905;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_186 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2905;
        tmp_args_element_name_286 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_186, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_286 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_105);

            exception_lineno = 2905;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2905;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_105, tmp_args_element_name_286);
        Py_DECREF(tmp_called_name_105);
        Py_DECREF(tmp_args_element_name_286);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2905;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_105:;
    {
        PyObject *tmp_assign_source_133;
        PyObject *tmp_called_instance_187;
        PyObject *tmp_mvar_value_128;
        PyObject *tmp_args_element_name_287;
        tmp_mvar_value_128 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_NBCSportsVPlayerIE);

        if (unlikely(tmp_mvar_value_128 == NULL)) {
            tmp_mvar_value_128 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_NBCSportsVPlayerIE);
        }

        if (tmp_mvar_value_128 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41217 ], 40, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2908;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_187 = tmp_mvar_value_128;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_287 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2908;
        {
            PyObject *call_args[] = {tmp_args_element_name_287};
            tmp_assign_source_133 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_187, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_133 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2908;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_nbc_sports_url == NULL);
        var_nbc_sports_url = tmp_assign_source_133;
    }
    {
        nuitka_bool tmp_condition_result_108;
        int tmp_truth_name_64;
        CHECK_OBJECT(var_nbc_sports_url);
        tmp_truth_name_64 = CHECK_IF_TRUE(var_nbc_sports_url);
        if (tmp_truth_name_64 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2909;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_108 = tmp_truth_name_64 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_108 == NUITKA_BOOL_TRUE) {
            goto branch_yes_106;
        } else {
            goto branch_no_106;
        }
    }
    branch_yes_106:;
    {
        PyObject *tmp_called_instance_188;
        PyObject *tmp_args_element_name_288;
        PyObject *tmp_args_element_name_289;
        CHECK_OBJECT(par_self);
        tmp_called_instance_188 = par_self;
        CHECK_OBJECT(var_nbc_sports_url);
        tmp_args_element_name_288 = var_nbc_sports_url;
        tmp_args_element_name_289 = const_str_plain_NBCSportsVPlayer;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2910;
        {
            PyObject *call_args[] = {tmp_args_element_name_288, tmp_args_element_name_289};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_188, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2910;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_106:;
    {
        PyObject *tmp_assign_source_134;
        PyObject *tmp_called_instance_189;
        PyObject *tmp_mvar_value_129;
        PyObject *tmp_args_element_name_290;
        PyObject *tmp_args_element_name_291;
        tmp_mvar_value_129 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_129 == NULL)) {
            tmp_mvar_value_129 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_129 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2913;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_189 = tmp_mvar_value_129;
        tmp_args_element_name_290 = const_str_digest_423e211c1c6873a103500b98498ae7be;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_291 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2913;
        {
            PyObject *call_args[] = {tmp_args_element_name_290, tmp_args_element_name_291};
            tmp_assign_source_134 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_189, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_134 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2913;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_nbc_news_embed_url == NULL);
        var_nbc_news_embed_url = tmp_assign_source_134;
    }
    {
        nuitka_bool tmp_condition_result_109;
        int tmp_truth_name_65;
        CHECK_OBJECT(var_nbc_news_embed_url);
        tmp_truth_name_65 = CHECK_IF_TRUE(var_nbc_news_embed_url);
        if (tmp_truth_name_65 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2915;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_109 = tmp_truth_name_65 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_109 == NUITKA_BOOL_TRUE) {
            goto branch_yes_107;
        } else {
            goto branch_no_107;
        }
    }
    branch_yes_107:;
    {
        PyObject *tmp_called_name_106;
        PyObject *tmp_expression_name_112;
        PyObject *tmp_args_element_name_292;
        PyObject *tmp_called_instance_190;
        PyObject *tmp_args_element_name_293;
        CHECK_OBJECT(par_self);
        tmp_expression_name_112 = par_self;
        tmp_called_name_106 = LOOKUP_ATTRIBUTE(tmp_expression_name_112, const_str_plain_url_result);
        if (tmp_called_name_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2916;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_nbc_news_embed_url);
        tmp_called_instance_190 = var_nbc_news_embed_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2916;
        tmp_args_element_name_292 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_190, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_292 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_106);

            exception_lineno = 2916;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_293 = const_str_plain_NBCNews;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2916;
        {
            PyObject *call_args[] = {tmp_args_element_name_292, tmp_args_element_name_293};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_106, call_args);
        }

        Py_DECREF(tmp_called_name_106);
        Py_DECREF(tmp_args_element_name_292);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2916;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_107:;
    {
        PyObject *tmp_assign_source_135;
        PyObject *tmp_called_instance_191;
        PyObject *tmp_mvar_value_130;
        PyObject *tmp_args_element_name_294;
        tmp_mvar_value_130 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_GoogleDriveIE);

        if (unlikely(tmp_mvar_value_130 == NULL)) {
            tmp_mvar_value_130 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_GoogleDriveIE);
        }

        if (tmp_mvar_value_130 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41257 ], 35, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2919;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_191 = tmp_mvar_value_130;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_294 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2919;
        {
            PyObject *call_args[] = {tmp_args_element_name_294};
            tmp_assign_source_135 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_191, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_135 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2919;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_google_drive_url == NULL);
        var_google_drive_url = tmp_assign_source_135;
    }
    {
        nuitka_bool tmp_condition_result_110;
        int tmp_truth_name_66;
        CHECK_OBJECT(var_google_drive_url);
        tmp_truth_name_66 = CHECK_IF_TRUE(var_google_drive_url);
        if (tmp_truth_name_66 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2920;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_110 = tmp_truth_name_66 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_110 == NUITKA_BOOL_TRUE) {
            goto branch_yes_108;
        } else {
            goto branch_no_108;
        }
    }
    branch_yes_108:;
    {
        PyObject *tmp_called_instance_192;
        PyObject *tmp_args_element_name_295;
        PyObject *tmp_args_element_name_296;
        CHECK_OBJECT(par_self);
        tmp_called_instance_192 = par_self;
        CHECK_OBJECT(var_google_drive_url);
        tmp_args_element_name_295 = var_google_drive_url;
        tmp_args_element_name_296 = const_str_plain_GoogleDrive;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2921;
        {
            PyObject *call_args[] = {tmp_args_element_name_295, tmp_args_element_name_296};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_192, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2921;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_108:;
    {
        PyObject *tmp_assign_source_136;
        PyObject *tmp_called_name_107;
        PyObject *tmp_expression_name_113;
        PyObject *tmp_mvar_value_131;
        PyObject *tmp_args_element_name_297;
        PyObject *tmp_left_name_15;
        PyObject *tmp_right_name_15;
        PyObject *tmp_expression_name_114;
        PyObject *tmp_mvar_value_132;
        PyObject *tmp_args_element_name_298;
        tmp_mvar_value_131 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_131 == NULL)) {
            tmp_mvar_value_131 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_131 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2924;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_name_113 = tmp_mvar_value_131;
        tmp_called_name_107 = LOOKUP_ATTRIBUTE(tmp_expression_name_113, const_str_plain_search);
        if (tmp_called_name_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2924;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_left_name_15 = const_str_digest_47851f556650841c19c27e25c3e65a22;
        tmp_mvar_value_132 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_UDNEmbedIE);

        if (unlikely(tmp_mvar_value_132 == NULL)) {
            tmp_mvar_value_132 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_UDNEmbedIE);
        }

        if (tmp_mvar_value_132 == NULL) {
            Py_DECREF(tmp_called_name_107);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41292 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2925;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_name_114 = tmp_mvar_value_132;
        tmp_right_name_15 = LOOKUP_ATTRIBUTE(tmp_expression_name_114, const_str_plain__PROTOCOL_RELATIVE_VALID_URL);
        if (tmp_right_name_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_107);

            exception_lineno = 2925;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_297 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_left_name_15, tmp_right_name_15);
        Py_DECREF(tmp_right_name_15);
        if (tmp_args_element_name_297 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_107);

            exception_lineno = 2925;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_298 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2924;
        {
            PyObject *call_args[] = {tmp_args_element_name_297, tmp_args_element_name_298};
            tmp_assign_source_136 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_107, call_args);
        }

        Py_DECREF(tmp_called_name_107);
        Py_DECREF(tmp_args_element_name_297);
        if (tmp_assign_source_136 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2924;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_136;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_111;
        PyObject *tmp_compexpr_left_48;
        PyObject *tmp_compexpr_right_48;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_48 = var_mobj;
        tmp_compexpr_right_48 = Py_None;
        tmp_condition_result_111 = (tmp_compexpr_left_48 != tmp_compexpr_right_48) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_111 == NUITKA_BOOL_TRUE) {
            goto branch_yes_109;
        } else {
            goto branch_no_109;
        }
    }
    branch_yes_109:;
    {
        PyObject *tmp_called_name_108;
        PyObject *tmp_expression_name_115;
        PyObject *tmp_args_element_name_299;
        PyObject *tmp_called_name_109;
        PyObject *tmp_expression_name_116;
        PyObject *tmp_mvar_value_133;
        PyObject *tmp_args_element_name_300;
        PyObject *tmp_args_element_name_301;
        PyObject *tmp_called_instance_193;
        PyObject *tmp_args_element_name_302;
        CHECK_OBJECT(par_self);
        tmp_expression_name_115 = par_self;
        tmp_called_name_108 = LOOKUP_ATTRIBUTE(tmp_expression_name_115, const_str_plain_url_result);
        if (tmp_called_name_108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2927;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_133 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urlparse);

        if (unlikely(tmp_mvar_value_133 == NULL)) {
            tmp_mvar_value_133 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_urlparse);
        }

        if (tmp_mvar_value_133 == NULL) {
            Py_DECREF(tmp_called_name_108);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 32106 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2928;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_name_116 = tmp_mvar_value_133;
        tmp_called_name_109 = LOOKUP_ATTRIBUTE(tmp_expression_name_116, const_str_plain_urljoin);
        if (tmp_called_name_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_108);

            exception_lineno = 2928;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_300 = PyCell_GET(par_url);
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_193 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2928;
        tmp_args_element_name_301 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_193, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_301 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_108);
            Py_DECREF(tmp_called_name_109);

            exception_lineno = 2928;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2928;
        {
            PyObject *call_args[] = {tmp_args_element_name_300, tmp_args_element_name_301};
            tmp_args_element_name_299 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_109, call_args);
        }

        Py_DECREF(tmp_called_name_109);
        Py_DECREF(tmp_args_element_name_301);
        if (tmp_args_element_name_299 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_108);

            exception_lineno = 2928;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_302 = const_str_plain_UDNEmbed;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2927;
        {
            PyObject *call_args[] = {tmp_args_element_name_299, tmp_args_element_name_302};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_108, call_args);
        }

        Py_DECREF(tmp_called_name_108);
        Py_DECREF(tmp_args_element_name_299);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2927;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_109:;
    {
        PyObject *tmp_assign_source_137;
        PyObject *tmp_called_instance_194;
        PyObject *tmp_mvar_value_134;
        PyObject *tmp_args_element_name_303;
        tmp_mvar_value_134 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SenateISVPIE);

        if (unlikely(tmp_mvar_value_134 == NULL)) {
            tmp_mvar_value_134 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_SenateISVPIE);
        }

        if (tmp_mvar_value_134 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 38694 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2931;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_194 = tmp_mvar_value_134;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_303 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2931;
        {
            PyObject *call_args[] = {tmp_args_element_name_303};
            tmp_assign_source_137 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_194, const_str_plain__search_iframe_url, call_args);
        }

        if (tmp_assign_source_137 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2931;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_senate_isvp_url == NULL);
        var_senate_isvp_url = tmp_assign_source_137;
    }
    {
        nuitka_bool tmp_condition_result_112;
        int tmp_truth_name_67;
        CHECK_OBJECT(var_senate_isvp_url);
        tmp_truth_name_67 = CHECK_IF_TRUE(var_senate_isvp_url);
        if (tmp_truth_name_67 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2932;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_112 = tmp_truth_name_67 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_112 == NUITKA_BOOL_TRUE) {
            goto branch_yes_110;
        } else {
            goto branch_no_110;
        }
    }
    branch_yes_110:;
    {
        PyObject *tmp_called_instance_195;
        PyObject *tmp_args_element_name_304;
        PyObject *tmp_args_element_name_305;
        CHECK_OBJECT(par_self);
        tmp_called_instance_195 = par_self;
        CHECK_OBJECT(var_senate_isvp_url);
        tmp_args_element_name_304 = var_senate_isvp_url;
        tmp_args_element_name_305 = const_str_plain_SenateISVP;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2933;
        {
            PyObject *call_args[] = {tmp_args_element_name_304, tmp_args_element_name_305};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_195, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2933;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_110:;
    {
        PyObject *tmp_assign_source_138;
        PyObject *tmp_called_instance_196;
        PyObject *tmp_mvar_value_135;
        PyObject *tmp_args_element_name_306;
        PyObject *tmp_args_element_name_307;
        tmp_mvar_value_135 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_KinjaEmbedIE);

        if (unlikely(tmp_mvar_value_135 == NULL)) {
            tmp_mvar_value_135 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_KinjaEmbedIE);
        }

        if (tmp_mvar_value_135 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41324 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2936;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_196 = tmp_mvar_value_135;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_306 = PyCell_GET(var_webpage);
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_307 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2936;
        {
            PyObject *call_args[] = {tmp_args_element_name_306, tmp_args_element_name_307};
            tmp_assign_source_138 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_196, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_138 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2936;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_kinja_embed_urls == NULL);
        var_kinja_embed_urls = tmp_assign_source_138;
    }
    {
        nuitka_bool tmp_condition_result_113;
        int tmp_truth_name_68;
        CHECK_OBJECT(var_kinja_embed_urls);
        tmp_truth_name_68 = CHECK_IF_TRUE(var_kinja_embed_urls);
        if (tmp_truth_name_68 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2937;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_113 = tmp_truth_name_68 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_113 == NUITKA_BOOL_TRUE) {
            goto branch_yes_111;
        } else {
            goto branch_no_111;
        }
    }
    branch_yes_111:;
    {
        PyObject *tmp_called_instance_197;
        PyObject *tmp_args_element_name_308;
        PyObject *tmp_args_element_name_309;
        PyObject *tmp_args_element_name_310;
        CHECK_OBJECT(par_self);
        tmp_called_instance_197 = par_self;
        CHECK_OBJECT(var_kinja_embed_urls);
        tmp_args_element_name_308 = var_kinja_embed_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_309 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_name_310 = var_video_title;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2938;
        {
            PyObject *call_args[] = {tmp_args_element_name_308, tmp_args_element_name_309, tmp_args_element_name_310};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(tmp_called_instance_197, const_str_plain_playlist_from_matches, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2938;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_111:;
    {
        PyObject *tmp_assign_source_139;
        PyObject *tmp_called_instance_198;
        PyObject *tmp_mvar_value_136;
        PyObject *tmp_args_element_name_311;
        tmp_mvar_value_136 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_OnionStudiosIE);

        if (unlikely(tmp_mvar_value_136 == NULL)) {
            tmp_mvar_value_136 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_OnionStudiosIE);
        }

        if (tmp_mvar_value_136 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41358 ], 36, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2942;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_198 = tmp_mvar_value_136;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_311 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2942;
        {
            PyObject *call_args[] = {tmp_args_element_name_311};
            tmp_assign_source_139 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_198, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_139 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2942;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_onionstudios_url == NULL);
        var_onionstudios_url = tmp_assign_source_139;
    }
    {
        nuitka_bool tmp_condition_result_114;
        int tmp_truth_name_69;
        CHECK_OBJECT(var_onionstudios_url);
        tmp_truth_name_69 = CHECK_IF_TRUE(var_onionstudios_url);
        if (tmp_truth_name_69 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2943;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_114 = tmp_truth_name_69 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_114 == NUITKA_BOOL_TRUE) {
            goto branch_yes_112;
        } else {
            goto branch_no_112;
        }
    }
    branch_yes_112:;
    {
        PyObject *tmp_called_instance_199;
        PyObject *tmp_args_element_name_312;
        CHECK_OBJECT(par_self);
        tmp_called_instance_199 = par_self;
        CHECK_OBJECT(var_onionstudios_url);
        tmp_args_element_name_312 = var_onionstudios_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2944;
        {
            PyObject *call_args[] = {tmp_args_element_name_312};
            tmp_return_value = CALL_METHOD_WITH_ARGS1(tmp_called_instance_199, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2944;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_112:;
    {
        PyObject *tmp_assign_source_140;
        PyObject *tmp_called_instance_200;
        PyObject *tmp_mvar_value_137;
        PyObject *tmp_args_element_name_313;
        tmp_mvar_value_137 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ViewLiftEmbedIE);

        if (unlikely(tmp_mvar_value_137 == NULL)) {
            tmp_mvar_value_137 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ViewLiftEmbedIE);
        }

        if (tmp_mvar_value_137 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41394 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2947;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_200 = tmp_mvar_value_137;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_313 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2947;
        {
            PyObject *call_args[] = {tmp_args_element_name_313};
            tmp_assign_source_140 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_200, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_140 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2947;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_viewlift_url == NULL);
        var_viewlift_url = tmp_assign_source_140;
    }
    {
        nuitka_bool tmp_condition_result_115;
        int tmp_truth_name_70;
        CHECK_OBJECT(var_viewlift_url);
        tmp_truth_name_70 = CHECK_IF_TRUE(var_viewlift_url);
        if (tmp_truth_name_70 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2948;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_115 = tmp_truth_name_70 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_115 == NUITKA_BOOL_TRUE) {
            goto branch_yes_113;
        } else {
            goto branch_no_113;
        }
    }
    branch_yes_113:;
    {
        PyObject *tmp_called_instance_201;
        PyObject *tmp_args_element_name_314;
        CHECK_OBJECT(par_self);
        tmp_called_instance_201 = par_self;
        CHECK_OBJECT(var_viewlift_url);
        tmp_args_element_name_314 = var_viewlift_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2949;
        {
            PyObject *call_args[] = {tmp_args_element_name_314};
            tmp_return_value = CALL_METHOD_WITH_ARGS1(tmp_called_instance_201, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2949;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_113:;
    {
        PyObject *tmp_assign_source_141;
        PyObject *tmp_called_instance_202;
        PyObject *tmp_mvar_value_138;
        PyObject *tmp_args_element_name_315;
        tmp_mvar_value_138 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_JWPlatformIE);

        if (unlikely(tmp_mvar_value_138 == NULL)) {
            tmp_mvar_value_138 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_JWPlatformIE);
        }

        if (tmp_mvar_value_138 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 36809 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2952;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_202 = tmp_mvar_value_138;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_315 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2952;
        {
            PyObject *call_args[] = {tmp_args_element_name_315};
            tmp_assign_source_141 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_202, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_141 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2952;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_jwplatform_urls == NULL);
        var_jwplatform_urls = tmp_assign_source_141;
    }
    {
        nuitka_bool tmp_condition_result_116;
        int tmp_truth_name_71;
        CHECK_OBJECT(var_jwplatform_urls);
        tmp_truth_name_71 = CHECK_IF_TRUE(var_jwplatform_urls);
        if (tmp_truth_name_71 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2953;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_116 = tmp_truth_name_71 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_116 == NUITKA_BOOL_TRUE) {
            goto branch_yes_114;
        } else {
            goto branch_no_114;
        }
    }
    branch_yes_114:;
    {
        PyObject *tmp_called_name_110;
        PyObject *tmp_expression_name_117;
        PyObject *tmp_args_name_41;
        PyObject *tmp_tuple_element_42;
        PyObject *tmp_kw_name_41;
        PyObject *tmp_dict_key_60;
        PyObject *tmp_dict_value_60;
        PyObject *tmp_called_instance_203;
        PyObject *tmp_mvar_value_139;
        CHECK_OBJECT(par_self);
        tmp_expression_name_117 = par_self;
        tmp_called_name_110 = LOOKUP_ATTRIBUTE(tmp_expression_name_117, const_str_plain_playlist_from_matches);
        if (tmp_called_name_110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2954;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_jwplatform_urls);
        tmp_tuple_element_42 = var_jwplatform_urls;
        tmp_args_name_41 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_42);
        PyTuple_SET_ITEM(tmp_args_name_41, 0, tmp_tuple_element_42);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_42 = var_video_id;
        Py_INCREF(tmp_tuple_element_42);
        PyTuple_SET_ITEM(tmp_args_name_41, 1, tmp_tuple_element_42);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_42 = var_video_title;
        Py_INCREF(tmp_tuple_element_42);
        PyTuple_SET_ITEM(tmp_args_name_41, 2, tmp_tuple_element_42);
        tmp_dict_key_60 = const_str_plain_ie;
        tmp_mvar_value_139 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_JWPlatformIE);

        if (unlikely(tmp_mvar_value_139 == NULL)) {
            tmp_mvar_value_139 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_JWPlatformIE);
        }

        if (tmp_mvar_value_139 == NULL) {
            Py_DECREF(tmp_called_name_110);
            Py_DECREF(tmp_args_name_41);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 36809 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2954;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_203 = tmp_mvar_value_139;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2954;
        tmp_dict_value_60 = CALL_METHOD_NO_ARGS(tmp_called_instance_203, const_str_plain_ie_key);
        if (tmp_dict_value_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_110);
            Py_DECREF(tmp_args_name_41);

            exception_lineno = 2954;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_41 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_41, tmp_dict_key_60, tmp_dict_value_60);
        Py_DECREF(tmp_dict_value_60);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2954;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_110, tmp_args_name_41, tmp_kw_name_41);
        Py_DECREF(tmp_called_name_110);
        Py_DECREF(tmp_args_name_41);
        Py_DECREF(tmp_kw_name_41);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2954;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_114:;
    {
        PyObject *tmp_assign_source_142;
        PyObject *tmp_called_instance_204;
        PyObject *tmp_mvar_value_140;
        PyObject *tmp_args_element_name_316;
        tmp_mvar_value_140 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DigitekaIE);

        if (unlikely(tmp_mvar_value_140 == NULL)) {
            tmp_mvar_value_140 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_DigitekaIE);
        }

        if (tmp_mvar_value_140 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41431 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2957;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_204 = tmp_mvar_value_140;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_316 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2957;
        {
            PyObject *call_args[] = {tmp_args_element_name_316};
            tmp_assign_source_142 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_204, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_142 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2957;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_digiteka_url == NULL);
        var_digiteka_url = tmp_assign_source_142;
    }
    {
        nuitka_bool tmp_condition_result_117;
        int tmp_truth_name_72;
        CHECK_OBJECT(var_digiteka_url);
        tmp_truth_name_72 = CHECK_IF_TRUE(var_digiteka_url);
        if (tmp_truth_name_72 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2958;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_117 = tmp_truth_name_72 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_117 == NUITKA_BOOL_TRUE) {
            goto branch_yes_115;
        } else {
            goto branch_no_115;
        }
    }
    branch_yes_115:;
    {
        PyObject *tmp_called_name_111;
        PyObject *tmp_expression_name_118;
        PyObject *tmp_args_element_name_317;
        PyObject *tmp_called_instance_205;
        PyObject *tmp_args_element_name_318;
        PyObject *tmp_args_element_name_319;
        PyObject *tmp_called_instance_206;
        PyObject *tmp_mvar_value_141;
        CHECK_OBJECT(par_self);
        tmp_expression_name_118 = par_self;
        tmp_called_name_111 = LOOKUP_ATTRIBUTE(tmp_expression_name_118, const_str_plain_url_result);
        if (tmp_called_name_111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2959;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_self);
        tmp_called_instance_205 = par_self;
        CHECK_OBJECT(var_digiteka_url);
        tmp_args_element_name_318 = var_digiteka_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2959;
        {
            PyObject *call_args[] = {tmp_args_element_name_318};
            tmp_args_element_name_317 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_205, const_str_plain__proto_relative_url, call_args);
        }

        if (tmp_args_element_name_317 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_111);

            exception_lineno = 2959;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_141 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DigitekaIE);

        if (unlikely(tmp_mvar_value_141 == NULL)) {
            tmp_mvar_value_141 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_DigitekaIE);
        }

        if (tmp_mvar_value_141 == NULL) {
            Py_DECREF(tmp_called_name_111);
            Py_DECREF(tmp_args_element_name_317);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41431 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2959;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_206 = tmp_mvar_value_141;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2959;
        tmp_args_element_name_319 = CALL_METHOD_NO_ARGS(tmp_called_instance_206, const_str_plain_ie_key);
        if (tmp_args_element_name_319 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_111);
            Py_DECREF(tmp_args_element_name_317);

            exception_lineno = 2959;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2959;
        {
            PyObject *call_args[] = {tmp_args_element_name_317, tmp_args_element_name_319};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_111, call_args);
        }

        Py_DECREF(tmp_called_name_111);
        Py_DECREF(tmp_args_element_name_317);
        Py_DECREF(tmp_args_element_name_319);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2959;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_115:;
    {
        PyObject *tmp_assign_source_143;
        PyObject *tmp_called_instance_207;
        PyObject *tmp_mvar_value_142;
        PyObject *tmp_args_element_name_320;
        tmp_mvar_value_142 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ArkenaIE);

        if (unlikely(tmp_mvar_value_142 == NULL)) {
            tmp_mvar_value_142 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ArkenaIE);
        }

        if (tmp_mvar_value_142 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41463 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2962;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_207 = tmp_mvar_value_142;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_320 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2962;
        {
            PyObject *call_args[] = {tmp_args_element_name_320};
            tmp_assign_source_143 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_207, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_143 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2962;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_arkena_url == NULL);
        var_arkena_url = tmp_assign_source_143;
    }
    {
        nuitka_bool tmp_condition_result_118;
        int tmp_truth_name_73;
        CHECK_OBJECT(var_arkena_url);
        tmp_truth_name_73 = CHECK_IF_TRUE(var_arkena_url);
        if (tmp_truth_name_73 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2963;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_118 = tmp_truth_name_73 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_118 == NUITKA_BOOL_TRUE) {
            goto branch_yes_116;
        } else {
            goto branch_no_116;
        }
    }
    branch_yes_116:;
    {
        PyObject *tmp_called_name_112;
        PyObject *tmp_expression_name_119;
        PyObject *tmp_args_element_name_321;
        PyObject *tmp_args_element_name_322;
        PyObject *tmp_called_instance_208;
        PyObject *tmp_mvar_value_143;
        CHECK_OBJECT(par_self);
        tmp_expression_name_119 = par_self;
        tmp_called_name_112 = LOOKUP_ATTRIBUTE(tmp_expression_name_119, const_str_plain_url_result);
        if (tmp_called_name_112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2964;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_arkena_url);
        tmp_args_element_name_321 = var_arkena_url;
        tmp_mvar_value_143 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ArkenaIE);

        if (unlikely(tmp_mvar_value_143 == NULL)) {
            tmp_mvar_value_143 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ArkenaIE);
        }

        if (tmp_mvar_value_143 == NULL) {
            Py_DECREF(tmp_called_name_112);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41463 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2964;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_208 = tmp_mvar_value_143;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2964;
        tmp_args_element_name_322 = CALL_METHOD_NO_ARGS(tmp_called_instance_208, const_str_plain_ie_key);
        if (tmp_args_element_name_322 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_112);

            exception_lineno = 2964;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2964;
        {
            PyObject *call_args[] = {tmp_args_element_name_321, tmp_args_element_name_322};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_112, call_args);
        }

        Py_DECREF(tmp_called_name_112);
        Py_DECREF(tmp_args_element_name_322);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2964;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_116:;
    {
        PyObject *tmp_assign_source_144;
        PyObject *tmp_called_instance_209;
        PyObject *tmp_mvar_value_144;
        PyObject *tmp_args_element_name_323;
        tmp_mvar_value_144 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_PikselIE);

        if (unlikely(tmp_mvar_value_144 == NULL)) {
            tmp_mvar_value_144 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_PikselIE);
        }

        if (tmp_mvar_value_144 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41493 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2967;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_209 = tmp_mvar_value_144;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_323 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2967;
        {
            PyObject *call_args[] = {tmp_args_element_name_323};
            tmp_assign_source_144 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_209, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_144 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2967;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_piksel_url == NULL);
        var_piksel_url = tmp_assign_source_144;
    }
    {
        nuitka_bool tmp_condition_result_119;
        int tmp_truth_name_74;
        CHECK_OBJECT(var_piksel_url);
        tmp_truth_name_74 = CHECK_IF_TRUE(var_piksel_url);
        if (tmp_truth_name_74 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2968;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_119 = tmp_truth_name_74 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_119 == NUITKA_BOOL_TRUE) {
            goto branch_yes_117;
        } else {
            goto branch_no_117;
        }
    }
    branch_yes_117:;
    {
        PyObject *tmp_called_name_113;
        PyObject *tmp_expression_name_120;
        PyObject *tmp_args_element_name_324;
        PyObject *tmp_args_element_name_325;
        PyObject *tmp_called_instance_210;
        PyObject *tmp_mvar_value_145;
        CHECK_OBJECT(par_self);
        tmp_expression_name_120 = par_self;
        tmp_called_name_113 = LOOKUP_ATTRIBUTE(tmp_expression_name_120, const_str_plain_url_result);
        if (tmp_called_name_113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2969;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_piksel_url);
        tmp_args_element_name_324 = var_piksel_url;
        tmp_mvar_value_145 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_PikselIE);

        if (unlikely(tmp_mvar_value_145 == NULL)) {
            tmp_mvar_value_145 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_PikselIE);
        }

        if (tmp_mvar_value_145 == NULL) {
            Py_DECREF(tmp_called_name_113);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41493 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2969;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_210 = tmp_mvar_value_145;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2969;
        tmp_args_element_name_325 = CALL_METHOD_NO_ARGS(tmp_called_instance_210, const_str_plain_ie_key);
        if (tmp_args_element_name_325 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_113);

            exception_lineno = 2969;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2969;
        {
            PyObject *call_args[] = {tmp_args_element_name_324, tmp_args_element_name_325};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_113, call_args);
        }

        Py_DECREF(tmp_called_name_113);
        Py_DECREF(tmp_args_element_name_325);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2969;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_117:;
    {
        PyObject *tmp_assign_source_145;
        PyObject *tmp_called_instance_211;
        PyObject *tmp_mvar_value_146;
        PyObject *tmp_args_element_name_326;
        PyObject *tmp_args_element_name_327;
        tmp_mvar_value_146 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_LimelightBaseIE);

        if (unlikely(tmp_mvar_value_146 == NULL)) {
            tmp_mvar_value_146 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_LimelightBaseIE);
        }

        if (tmp_mvar_value_146 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41523 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2972;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_211 = tmp_mvar_value_146;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_326 = PyCell_GET(var_webpage);
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_327 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2972;
        {
            PyObject *call_args[] = {tmp_args_element_name_326, tmp_args_element_name_327};
            tmp_assign_source_145 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_211, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2972;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_limelight_urls == NULL);
        var_limelight_urls = tmp_assign_source_145;
    }
    {
        nuitka_bool tmp_condition_result_120;
        int tmp_truth_name_75;
        CHECK_OBJECT(var_limelight_urls);
        tmp_truth_name_75 = CHECK_IF_TRUE(var_limelight_urls);
        if (tmp_truth_name_75 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2973;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_120 = tmp_truth_name_75 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_120 == NUITKA_BOOL_TRUE) {
            goto branch_yes_118;
        } else {
            goto branch_no_118;
        }
    }
    branch_yes_118:;
    {
        PyObject *tmp_called_instance_212;
        PyObject *tmp_args_element_name_328;
        PyObject *tmp_args_element_name_329;
        PyObject *tmp_args_element_name_330;
        PyObject *tmp_args_element_name_331;
        CHECK_OBJECT(par_self);
        tmp_called_instance_212 = par_self;
        CHECK_OBJECT(var_limelight_urls);
        tmp_args_element_name_328 = var_limelight_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_329 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_name_330 = var_video_title;
        CHECK_OBJECT(var_video_description);
        tmp_args_element_name_331 = var_video_description;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2974;
        {
            PyObject *call_args[] = {tmp_args_element_name_328, tmp_args_element_name_329, tmp_args_element_name_330, tmp_args_element_name_331};
            tmp_return_value = CALL_METHOD_WITH_ARGS4(tmp_called_instance_212, const_str_plain_playlist_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2974;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_118:;
    {
        PyObject *tmp_assign_source_146;
        PyObject *tmp_called_instance_213;
        PyObject *tmp_mvar_value_147;
        PyObject *tmp_args_element_name_332;
        PyObject *tmp_args_element_name_333;
        PyObject *tmp_args_element_name_334;
        tmp_mvar_value_147 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_AnvatoIE);

        if (unlikely(tmp_mvar_value_147 == NULL)) {
            tmp_mvar_value_147 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_AnvatoIE);
        }

        if (tmp_mvar_value_147 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 34963 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2978;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_213 = tmp_mvar_value_147;
        CHECK_OBJECT(par_self);
        tmp_args_element_name_332 = par_self;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_333 = PyCell_GET(var_webpage);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_334 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2978;
        {
            PyObject *call_args[] = {tmp_args_element_name_332, tmp_args_element_name_333, tmp_args_element_name_334};
            tmp_assign_source_146 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_213, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_146 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2978;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_anvato_urls == NULL);
        var_anvato_urls = tmp_assign_source_146;
    }
    {
        nuitka_bool tmp_condition_result_121;
        int tmp_truth_name_76;
        CHECK_OBJECT(var_anvato_urls);
        tmp_truth_name_76 = CHECK_IF_TRUE(var_anvato_urls);
        if (tmp_truth_name_76 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2979;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_121 = tmp_truth_name_76 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_121 == NUITKA_BOOL_TRUE) {
            goto branch_yes_119;
        } else {
            goto branch_no_119;
        }
    }
    branch_yes_119:;
    {
        PyObject *tmp_called_instance_214;
        PyObject *tmp_args_element_name_335;
        PyObject *tmp_args_element_name_336;
        PyObject *tmp_args_element_name_337;
        PyObject *tmp_args_element_name_338;
        CHECK_OBJECT(par_self);
        tmp_called_instance_214 = par_self;
        CHECK_OBJECT(var_anvato_urls);
        tmp_args_element_name_335 = var_anvato_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_336 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_name_337 = var_video_title;
        CHECK_OBJECT(var_video_description);
        tmp_args_element_name_338 = var_video_description;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2980;
        {
            PyObject *call_args[] = {tmp_args_element_name_335, tmp_args_element_name_336, tmp_args_element_name_337, tmp_args_element_name_338};
            tmp_return_value = CALL_METHOD_WITH_ARGS4(tmp_called_instance_214, const_str_plain_playlist_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2980;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_119:;
    {
        PyObject *tmp_assign_source_147;
        PyObject *tmp_called_instance_215;
        PyObject *tmp_mvar_value_148;
        PyObject *tmp_args_element_name_339;
        PyObject *tmp_args_element_name_340;
        tmp_mvar_value_148 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_148 == NULL)) {
            tmp_mvar_value_148 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_148 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2984;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_215 = tmp_mvar_value_148;
        tmp_args_element_name_339 = const_str_digest_3ddec3bf80efb35210b8e3700002b9a4;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_340 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2984;
        {
            PyObject *call_args[] = {tmp_args_element_name_339, tmp_args_element_name_340};
            tmp_assign_source_147 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_215, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_147 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2984;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_147;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_122;
        PyObject *tmp_compexpr_left_49;
        PyObject *tmp_compexpr_right_49;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_49 = var_mobj;
        tmp_compexpr_right_49 = Py_None;
        tmp_condition_result_122 = (tmp_compexpr_left_49 != tmp_compexpr_right_49) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_122 == NUITKA_BOOL_TRUE) {
            goto branch_yes_120;
        } else {
            goto branch_no_120;
        }
    }
    branch_yes_120:;
    {
        PyObject *tmp_called_name_114;
        PyObject *tmp_expression_name_121;
        PyObject *tmp_args_element_name_341;
        PyObject *tmp_called_name_115;
        PyObject *tmp_expression_name_122;
        PyObject *tmp_args_element_name_342;
        PyObject *tmp_called_name_116;
        PyObject *tmp_mvar_value_149;
        PyObject *tmp_args_element_name_343;
        PyObject *tmp_called_instance_216;
        PyObject *tmp_args_element_name_344;
        CHECK_OBJECT(par_self);
        tmp_expression_name_121 = par_self;
        tmp_called_name_114 = LOOKUP_ATTRIBUTE(tmp_expression_name_121, const_str_plain_url_result);
        if (tmp_called_name_114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2988;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_self);
        tmp_expression_name_122 = par_self;
        tmp_called_name_115 = LOOKUP_ATTRIBUTE(tmp_expression_name_122, const_str_plain__proto_relative_url);
        if (tmp_called_name_115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_114);

            exception_lineno = 2989;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_149 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unescapeHTML);

        if (unlikely(tmp_mvar_value_149 == NULL)) {
            tmp_mvar_value_149 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unescapeHTML);
        }

        if (tmp_mvar_value_149 == NULL) {
            Py_DECREF(tmp_called_name_114);
            Py_DECREF(tmp_called_name_115);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33553 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2989;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_116 = tmp_mvar_value_149;
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_216 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2989;
        tmp_args_element_name_343 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_216, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_pos_1_tuple, 0));

        if (tmp_args_element_name_343 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_114);
            Py_DECREF(tmp_called_name_115);

            exception_lineno = 2989;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2989;
        tmp_args_element_name_342 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_116, tmp_args_element_name_343);
        Py_DECREF(tmp_args_element_name_343);
        if (tmp_args_element_name_342 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_114);
            Py_DECREF(tmp_called_name_115);

            exception_lineno = 2989;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2989;
        tmp_args_element_name_341 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_115, tmp_args_element_name_342);
        Py_DECREF(tmp_called_name_115);
        Py_DECREF(tmp_args_element_name_342);
        if (tmp_args_element_name_341 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_114);

            exception_lineno = 2989;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_344 = const_str_plain_AdobeTVVideo;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2988;
        {
            PyObject *call_args[] = {tmp_args_element_name_341, tmp_args_element_name_344};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_114, call_args);
        }

        Py_DECREF(tmp_called_name_114);
        Py_DECREF(tmp_args_element_name_341);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2988;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_120:;
    {
        PyObject *tmp_assign_source_148;
        PyObject *tmp_called_instance_217;
        PyObject *tmp_mvar_value_150;
        PyObject *tmp_args_element_name_345;
        PyObject *tmp_args_element_name_346;
        tmp_mvar_value_150 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_150 == NULL)) {
            tmp_mvar_value_150 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_150 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2993;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_217 = tmp_mvar_value_150;
        tmp_args_element_name_345 = const_str_digest_69df7459c65f6d20f17c665551a09329;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_346 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2993;
        {
            PyObject *call_args[] = {tmp_args_element_name_345, tmp_args_element_name_346};
            tmp_assign_source_148 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_217, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2993;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_148;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_123;
        PyObject *tmp_compexpr_left_50;
        PyObject *tmp_compexpr_right_50;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_50 = var_mobj;
        tmp_compexpr_right_50 = Py_None;
        tmp_condition_result_123 = (tmp_compexpr_left_50 != tmp_compexpr_right_50) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_123 == NUITKA_BOOL_TRUE) {
            goto branch_yes_121;
        } else {
            goto branch_no_121;
        }
    }
    branch_yes_121:;
    {
        PyObject *tmp_called_name_117;
        PyObject *tmp_expression_name_123;
        PyObject *tmp_args_element_name_347;
        PyObject *tmp_called_name_118;
        PyObject *tmp_expression_name_124;
        PyObject *tmp_args_element_name_348;
        PyObject *tmp_called_name_119;
        PyObject *tmp_mvar_value_151;
        PyObject *tmp_args_element_name_349;
        PyObject *tmp_called_instance_218;
        PyObject *tmp_args_element_name_350;
        CHECK_OBJECT(par_self);
        tmp_expression_name_123 = par_self;
        tmp_called_name_117 = LOOKUP_ATTRIBUTE(tmp_expression_name_123, const_str_plain_url_result);
        if (tmp_called_name_117 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2997;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_self);
        tmp_expression_name_124 = par_self;
        tmp_called_name_118 = LOOKUP_ATTRIBUTE(tmp_expression_name_124, const_str_plain__proto_relative_url);
        if (tmp_called_name_118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_117);

            exception_lineno = 2998;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_151 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unescapeHTML);

        if (unlikely(tmp_mvar_value_151 == NULL)) {
            tmp_mvar_value_151 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unescapeHTML);
        }

        if (tmp_mvar_value_151 == NULL) {
            Py_DECREF(tmp_called_name_117);
            Py_DECREF(tmp_called_name_118);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33553 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2998;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_119 = tmp_mvar_value_151;
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_218 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2998;
        tmp_args_element_name_349 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_218, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_pos_1_tuple, 0));

        if (tmp_args_element_name_349 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_117);
            Py_DECREF(tmp_called_name_118);

            exception_lineno = 2998;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2998;
        tmp_args_element_name_348 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_119, tmp_args_element_name_349);
        Py_DECREF(tmp_args_element_name_349);
        if (tmp_args_element_name_348 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_117);
            Py_DECREF(tmp_called_name_118);

            exception_lineno = 2998;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2998;
        tmp_args_element_name_347 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_118, tmp_args_element_name_348);
        Py_DECREF(tmp_called_name_118);
        Py_DECREF(tmp_args_element_name_348);
        if (tmp_args_element_name_347 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_117);

            exception_lineno = 2998;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_350 = const_str_plain_Vine;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 2997;
        {
            PyObject *call_args[] = {tmp_args_element_name_347, tmp_args_element_name_350};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_117, call_args);
        }

        Py_DECREF(tmp_called_name_117);
        Py_DECREF(tmp_args_element_name_347);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2997;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_121:;
    {
        PyObject *tmp_assign_source_149;
        PyObject *tmp_called_instance_219;
        PyObject *tmp_mvar_value_152;
        PyObject *tmp_args_element_name_351;
        PyObject *tmp_args_element_name_352;
        tmp_mvar_value_152 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_152 == NULL)) {
            tmp_mvar_value_152 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_152 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3001;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_219 = tmp_mvar_value_152;
        tmp_args_element_name_351 = const_str_digest_baccba840ce144ab9cc73ff456981b89;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_352 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3001;
        {
            PyObject *call_args[] = {tmp_args_element_name_351, tmp_args_element_name_352};
            tmp_assign_source_149 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_219, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_149 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3001;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_149;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_124;
        PyObject *tmp_compexpr_left_51;
        PyObject *tmp_compexpr_right_51;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_51 = var_mobj;
        tmp_compexpr_right_51 = Py_None;
        tmp_condition_result_124 = (tmp_compexpr_left_51 != tmp_compexpr_right_51) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_124 == NUITKA_BOOL_TRUE) {
            goto branch_yes_122;
        } else {
            goto branch_no_122;
        }
    }
    branch_yes_122:;
    {
        PyObject *tmp_called_name_120;
        PyObject *tmp_expression_name_125;
        PyObject *tmp_args_element_name_353;
        PyObject *tmp_called_name_121;
        PyObject *tmp_expression_name_126;
        PyObject *tmp_args_element_name_354;
        PyObject *tmp_called_name_122;
        PyObject *tmp_mvar_value_153;
        PyObject *tmp_args_element_name_355;
        PyObject *tmp_called_instance_220;
        PyObject *tmp_args_element_name_356;
        CHECK_OBJECT(par_self);
        tmp_expression_name_125 = par_self;
        tmp_called_name_120 = LOOKUP_ATTRIBUTE(tmp_expression_name_125, const_str_plain_url_result);
        if (tmp_called_name_120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3005;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_self);
        tmp_expression_name_126 = par_self;
        tmp_called_name_121 = LOOKUP_ATTRIBUTE(tmp_expression_name_126, const_str_plain__proto_relative_url);
        if (tmp_called_name_121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_120);

            exception_lineno = 3006;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_153 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unescapeHTML);

        if (unlikely(tmp_mvar_value_153 == NULL)) {
            tmp_mvar_value_153 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unescapeHTML);
        }

        if (tmp_mvar_value_153 == NULL) {
            Py_DECREF(tmp_called_name_120);
            Py_DECREF(tmp_called_name_121);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33553 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3006;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_122 = tmp_mvar_value_153;
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_220 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3006;
        tmp_args_element_name_355 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_220, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_355 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_120);
            Py_DECREF(tmp_called_name_121);

            exception_lineno = 3006;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3006;
        tmp_args_element_name_354 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_122, tmp_args_element_name_355);
        Py_DECREF(tmp_args_element_name_355);
        if (tmp_args_element_name_354 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_120);
            Py_DECREF(tmp_called_name_121);

            exception_lineno = 3006;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3006;
        tmp_args_element_name_353 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_121, tmp_args_element_name_354);
        Py_DECREF(tmp_called_name_121);
        Py_DECREF(tmp_args_element_name_354);
        if (tmp_args_element_name_353 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_120);

            exception_lineno = 3006;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_356 = const_str_plain_VODPlatform;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3005;
        {
            PyObject *call_args[] = {tmp_args_element_name_353, tmp_args_element_name_356};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_120, call_args);
        }

        Py_DECREF(tmp_called_name_120);
        Py_DECREF(tmp_args_element_name_353);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3005;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_122:;
    {
        PyObject *tmp_assign_source_150;
        PyObject *tmp_called_instance_221;
        PyObject *tmp_mvar_value_154;
        PyObject *tmp_args_element_name_357;
        PyObject *tmp_args_element_name_358;
        tmp_mvar_value_154 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_154 == NULL)) {
            tmp_mvar_value_154 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_154 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3009;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_221 = tmp_mvar_value_154;
        tmp_args_element_name_357 = const_str_digest_0cd5171bb15c3f298dec92b403311dc1;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_358 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3009;
        {
            PyObject *call_args[] = {tmp_args_element_name_357, tmp_args_element_name_358};
            tmp_assign_source_150 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_221, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3009;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_150;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_125;
        PyObject *tmp_compexpr_left_52;
        PyObject *tmp_compexpr_right_52;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_52 = var_mobj;
        tmp_compexpr_right_52 = Py_None;
        tmp_condition_result_125 = (tmp_compexpr_left_52 != tmp_compexpr_right_52) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_125 == NUITKA_BOOL_TRUE) {
            goto branch_yes_123;
        } else {
            goto branch_no_123;
        }
    }
    branch_yes_123:;
    {
        PyObject *tmp_assign_source_151;
        PyObject *tmp_dict_key_61;
        PyObject *tmp_dict_value_61;
        PyObject *tmp_dict_key_62;
        PyObject *tmp_dict_value_62;
        PyObject *tmp_called_name_123;
        PyObject *tmp_expression_name_127;
        PyObject *tmp_args_element_name_359;
        PyObject *tmp_called_name_124;
        PyObject *tmp_mvar_value_155;
        PyObject *tmp_args_element_name_360;
        PyObject *tmp_called_instance_222;
        PyObject *tmp_dict_key_63;
        PyObject *tmp_dict_value_63;
        PyObject *tmp_dict_key_64;
        PyObject *tmp_dict_value_64;
        PyObject *tmp_dict_key_65;
        PyObject *tmp_dict_value_65;
        PyObject *tmp_dict_key_66;
        PyObject *tmp_dict_value_66;
        tmp_dict_key_61 = const_str_plain__type;
        tmp_dict_value_61 = const_str_plain_url_transparent;
        tmp_assign_source_151 = _PyDict_NewPresized( 6 );
        tmp_res = PyDict_SetItem(tmp_assign_source_151, tmp_dict_key_61, tmp_dict_value_61);
        assert(!(tmp_res != 0));
        tmp_dict_key_62 = const_str_plain_url;
        CHECK_OBJECT(par_self);
        tmp_expression_name_127 = par_self;
        tmp_called_name_123 = LOOKUP_ATTRIBUTE(tmp_expression_name_127, const_str_plain__proto_relative_url);
        if (tmp_called_name_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_assign_source_151);

            exception_lineno = 3022;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_155 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unescapeHTML);

        if (unlikely(tmp_mvar_value_155 == NULL)) {
            tmp_mvar_value_155 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unescapeHTML);
        }

        if (tmp_mvar_value_155 == NULL) {
            Py_DECREF(tmp_assign_source_151);
            Py_DECREF(tmp_called_name_123);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33553 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3022;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_124 = tmp_mvar_value_155;
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_222 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3022;
        tmp_args_element_name_360 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_222, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_args_element_name_360 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_assign_source_151);
            Py_DECREF(tmp_called_name_123);

            exception_lineno = 3022;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3022;
        tmp_args_element_name_359 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_124, tmp_args_element_name_360);
        Py_DECREF(tmp_args_element_name_360);
        if (tmp_args_element_name_359 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_assign_source_151);
            Py_DECREF(tmp_called_name_123);

            exception_lineno = 3022;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3022;
        tmp_dict_value_62 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_123, tmp_args_element_name_359);
        Py_DECREF(tmp_called_name_123);
        Py_DECREF(tmp_args_element_name_359);
        if (tmp_dict_value_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_assign_source_151);

            exception_lineno = 3022;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = PyDict_SetItem(tmp_assign_source_151, tmp_dict_key_62, tmp_dict_value_62);
        Py_DECREF(tmp_dict_value_62);
        assert(!(tmp_res != 0));
        tmp_dict_key_63 = const_str_plain_title;
        CHECK_OBJECT(var_video_title);
        tmp_dict_value_63 = var_video_title;
        tmp_res = PyDict_SetItem(tmp_assign_source_151, tmp_dict_key_63, tmp_dict_value_63);
        assert(!(tmp_res != 0));
        tmp_dict_key_64 = const_str_plain_description;
        CHECK_OBJECT(var_video_description);
        tmp_dict_value_64 = var_video_description;
        tmp_res = PyDict_SetItem(tmp_assign_source_151, tmp_dict_key_64, tmp_dict_value_64);
        assert(!(tmp_res != 0));
        tmp_dict_key_65 = const_str_plain_thumbnail;
        CHECK_OBJECT(var_video_thumbnail);
        tmp_dict_value_65 = var_video_thumbnail;
        tmp_res = PyDict_SetItem(tmp_assign_source_151, tmp_dict_key_65, tmp_dict_value_65);
        assert(!(tmp_res != 0));
        tmp_dict_key_66 = const_str_plain_uploader;
        CHECK_OBJECT(var_video_uploader);
        tmp_dict_value_66 = var_video_uploader;
        tmp_res = PyDict_SetItem(tmp_assign_source_151, tmp_dict_key_66, tmp_dict_value_66);
        assert(!(tmp_res != 0));
        assert(var_info == NULL);
        var_info = tmp_assign_source_151;
    }
    {
        PyObject *tmp_assign_source_152;
        PyObject *tmp_called_instance_223;
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_223 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3028;
        tmp_assign_source_152 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_223, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_video_id_tuple, 0));

        if (tmp_assign_source_152 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3028;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_video_id;
            assert(old != NULL);
            var_video_id = tmp_assign_source_152;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_126;
        int tmp_truth_name_77;
        CHECK_OBJECT(var_video_id);
        tmp_truth_name_77 = CHECK_IF_TRUE(var_video_id);
        if (tmp_truth_name_77 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3029;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_126 = tmp_truth_name_77 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_126 == NUITKA_BOOL_TRUE) {
            goto branch_yes_124;
        } else {
            goto branch_no_124;
        }
    }
    branch_yes_124:;
    {
        PyObject *tmp_called_instance_224;
        PyObject *tmp_call_result_27;
        PyObject *tmp_args_element_name_361;
        PyObject *tmp_dict_key_67;
        PyObject *tmp_dict_value_67;
        PyObject *tmp_dict_key_68;
        PyObject *tmp_dict_value_68;
        CHECK_OBJECT(var_info);
        tmp_called_instance_224 = var_info;
        tmp_dict_key_67 = const_str_plain_ie_key;
        tmp_dict_value_67 = const_str_plain_MangomoloVideo;
        tmp_args_element_name_361 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_361, tmp_dict_key_67, tmp_dict_value_67);
        assert(!(tmp_res != 0));
        tmp_dict_key_68 = const_str_plain_id;
        CHECK_OBJECT(var_video_id);
        tmp_dict_value_68 = var_video_id;
        tmp_res = PyDict_SetItem(tmp_args_element_name_361, tmp_dict_key_68, tmp_dict_value_68);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3030;
        {
            PyObject *call_args[] = {tmp_args_element_name_361};
            tmp_call_result_27 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_224, const_str_plain_update, call_args);
        }

        Py_DECREF(tmp_args_element_name_361);
        if (tmp_call_result_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3030;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_27);
    }
    goto branch_end_124;
    branch_no_124:;
    {
        PyObject *tmp_called_name_125;
        PyObject *tmp_expression_name_128;
        PyObject *tmp_call_result_28;
        PyObject *tmp_args_element_name_362;
        PyObject *tmp_dict_key_69;
        PyObject *tmp_dict_value_69;
        PyObject *tmp_dict_key_70;
        PyObject *tmp_dict_value_70;
        PyObject *tmp_called_instance_225;
        CHECK_OBJECT(var_info);
        tmp_expression_name_128 = var_info;
        tmp_called_name_125 = LOOKUP_ATTRIBUTE(tmp_expression_name_128, const_str_plain_update);
        if (tmp_called_name_125 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3035;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_69 = const_str_plain_ie_key;
        tmp_dict_value_69 = const_str_plain_MangomoloLive;
        tmp_args_element_name_362 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_362, tmp_dict_key_69, tmp_dict_value_69);
        assert(!(tmp_res != 0));
        tmp_dict_key_70 = const_str_plain_id;
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_225 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3037;
        tmp_dict_value_70 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_225, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_channel_id_tuple, 0));

        if (tmp_dict_value_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_125);
            Py_DECREF(tmp_args_element_name_362);

            exception_lineno = 3037;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = PyDict_SetItem(tmp_args_element_name_362, tmp_dict_key_70, tmp_dict_value_70);
        Py_DECREF(tmp_dict_value_70);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3035;
        tmp_call_result_28 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_125, tmp_args_element_name_362);
        Py_DECREF(tmp_called_name_125);
        Py_DECREF(tmp_args_element_name_362);
        if (tmp_call_result_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3035;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_28);
    }
    branch_end_124:;
    CHECK_OBJECT(var_info);
    tmp_return_value = var_info;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_123:;
    {
        PyObject *tmp_assign_source_153;
        PyObject *tmp_called_instance_226;
        PyObject *tmp_mvar_value_156;
        PyObject *tmp_args_element_name_363;
        tmp_mvar_value_156 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_InstagramIE);

        if (unlikely(tmp_mvar_value_156 == NULL)) {
            tmp_mvar_value_156 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_InstagramIE);
        }

        if (tmp_mvar_value_156 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41560 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3042;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_226 = tmp_mvar_value_156;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_363 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3042;
        {
            PyObject *call_args[] = {tmp_args_element_name_363};
            tmp_assign_source_153 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_226, const_str_plain__extract_embed_url, call_args);
        }

        if (tmp_assign_source_153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3042;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_instagram_embed_url == NULL);
        var_instagram_embed_url = tmp_assign_source_153;
    }
    {
        nuitka_bool tmp_condition_result_127;
        PyObject *tmp_compexpr_left_53;
        PyObject *tmp_compexpr_right_53;
        CHECK_OBJECT(var_instagram_embed_url);
        tmp_compexpr_left_53 = var_instagram_embed_url;
        tmp_compexpr_right_53 = Py_None;
        tmp_condition_result_127 = (tmp_compexpr_left_53 != tmp_compexpr_right_53) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_127 == NUITKA_BOOL_TRUE) {
            goto branch_yes_125;
        } else {
            goto branch_no_125;
        }
    }
    branch_yes_125:;
    {
        PyObject *tmp_called_name_126;
        PyObject *tmp_expression_name_129;
        PyObject *tmp_args_element_name_364;
        PyObject *tmp_called_instance_227;
        PyObject *tmp_args_element_name_365;
        PyObject *tmp_args_element_name_366;
        PyObject *tmp_called_instance_228;
        PyObject *tmp_mvar_value_157;
        CHECK_OBJECT(par_self);
        tmp_expression_name_129 = par_self;
        tmp_called_name_126 = LOOKUP_ATTRIBUTE(tmp_expression_name_129, const_str_plain_url_result);
        if (tmp_called_name_126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3044;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_self);
        tmp_called_instance_227 = par_self;
        CHECK_OBJECT(var_instagram_embed_url);
        tmp_args_element_name_365 = var_instagram_embed_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3045;
        {
            PyObject *call_args[] = {tmp_args_element_name_365};
            tmp_args_element_name_364 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_227, const_str_plain__proto_relative_url, call_args);
        }

        if (tmp_args_element_name_364 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_126);

            exception_lineno = 3045;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_157 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_InstagramIE);

        if (unlikely(tmp_mvar_value_157 == NULL)) {
            tmp_mvar_value_157 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_InstagramIE);
        }

        if (tmp_mvar_value_157 == NULL) {
            Py_DECREF(tmp_called_name_126);
            Py_DECREF(tmp_args_element_name_364);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41560 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3045;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_228 = tmp_mvar_value_157;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3045;
        tmp_args_element_name_366 = CALL_METHOD_NO_ARGS(tmp_called_instance_228, const_str_plain_ie_key);
        if (tmp_args_element_name_366 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_126);
            Py_DECREF(tmp_args_element_name_364);

            exception_lineno = 3045;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3044;
        {
            PyObject *call_args[] = {tmp_args_element_name_364, tmp_args_element_name_366};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_126, call_args);
        }

        Py_DECREF(tmp_called_name_126);
        Py_DECREF(tmp_args_element_name_364);
        Py_DECREF(tmp_args_element_name_366);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3044;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_125:;
    {
        PyObject *tmp_assign_source_154;
        PyObject *tmp_called_instance_229;
        PyObject *tmp_mvar_value_158;
        PyObject *tmp_args_element_name_367;
        tmp_mvar_value_158 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_LiveLeakIE);

        if (unlikely(tmp_mvar_value_158 == NULL)) {
            tmp_mvar_value_158 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_LiveLeakIE);
        }

        if (tmp_mvar_value_158 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41593 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3048;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_229 = tmp_mvar_value_158;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_367 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3048;
        {
            PyObject *call_args[] = {tmp_args_element_name_367};
            tmp_assign_source_154 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_229, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3048;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_liveleak_urls == NULL);
        var_liveleak_urls = tmp_assign_source_154;
    }
    {
        nuitka_bool tmp_condition_result_128;
        int tmp_truth_name_78;
        CHECK_OBJECT(var_liveleak_urls);
        tmp_truth_name_78 = CHECK_IF_TRUE(var_liveleak_urls);
        if (tmp_truth_name_78 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3049;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_128 = tmp_truth_name_78 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_128 == NUITKA_BOOL_TRUE) {
            goto branch_yes_126;
        } else {
            goto branch_no_126;
        }
    }
    branch_yes_126:;
    {
        PyObject *tmp_called_instance_230;
        PyObject *tmp_args_element_name_368;
        PyObject *tmp_args_element_name_369;
        PyObject *tmp_args_element_name_370;
        CHECK_OBJECT(par_self);
        tmp_called_instance_230 = par_self;
        CHECK_OBJECT(var_liveleak_urls);
        tmp_args_element_name_368 = var_liveleak_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_369 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_name_370 = var_video_title;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3050;
        {
            PyObject *call_args[] = {tmp_args_element_name_368, tmp_args_element_name_369, tmp_args_element_name_370};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(tmp_called_instance_230, const_str_plain_playlist_from_matches, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3050;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_126:;
    {
        PyObject *tmp_assign_source_155;
        PyObject *tmp_called_instance_231;
        PyObject *tmp_mvar_value_159;
        PyObject *tmp_args_element_name_371;
        tmp_mvar_value_159 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ThreeQSDNIE);

        if (unlikely(tmp_mvar_value_159 == NULL)) {
            tmp_mvar_value_159 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ThreeQSDNIE);
        }

        if (tmp_mvar_value_159 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41625 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3053;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_231 = tmp_mvar_value_159;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_371 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3053;
        {
            PyObject *call_args[] = {tmp_args_element_name_371};
            tmp_assign_source_155 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_231, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_155 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3053;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_threeqsdn_url == NULL);
        var_threeqsdn_url = tmp_assign_source_155;
    }
    {
        nuitka_bool tmp_condition_result_129;
        int tmp_truth_name_79;
        CHECK_OBJECT(var_threeqsdn_url);
        tmp_truth_name_79 = CHECK_IF_TRUE(var_threeqsdn_url);
        if (tmp_truth_name_79 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3054;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_129 = tmp_truth_name_79 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_129 == NUITKA_BOOL_TRUE) {
            goto branch_yes_127;
        } else {
            goto branch_no_127;
        }
    }
    branch_yes_127:;
    {
        PyObject *tmp_dict_key_71;
        PyObject *tmp_dict_value_71;
        PyObject *tmp_dict_key_72;
        PyObject *tmp_dict_value_72;
        PyObject *tmp_called_instance_232;
        PyObject *tmp_mvar_value_160;
        PyObject *tmp_dict_key_73;
        PyObject *tmp_dict_value_73;
        PyObject *tmp_called_instance_233;
        PyObject *tmp_args_element_name_372;
        PyObject *tmp_dict_key_74;
        PyObject *tmp_dict_value_74;
        PyObject *tmp_dict_key_75;
        PyObject *tmp_dict_value_75;
        PyObject *tmp_dict_key_76;
        PyObject *tmp_dict_value_76;
        PyObject *tmp_dict_key_77;
        PyObject *tmp_dict_value_77;
        tmp_dict_key_71 = const_str_plain__type;
        tmp_dict_value_71 = const_str_plain_url_transparent;
        tmp_return_value = _PyDict_NewPresized( 7 );
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_71, tmp_dict_value_71);
        assert(!(tmp_res != 0));
        tmp_dict_key_72 = const_str_plain_ie_key;
        tmp_mvar_value_160 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ThreeQSDNIE);

        if (unlikely(tmp_mvar_value_160 == NULL)) {
            tmp_mvar_value_160 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ThreeQSDNIE);
        }

        if (tmp_mvar_value_160 == NULL) {
            Py_DECREF(tmp_return_value);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41625 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3057;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_232 = tmp_mvar_value_160;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3057;
        tmp_dict_value_72 = CALL_METHOD_NO_ARGS(tmp_called_instance_232, const_str_plain_ie_key);
        if (tmp_dict_value_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 3057;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_72, tmp_dict_value_72);
        Py_DECREF(tmp_dict_value_72);
        assert(!(tmp_res != 0));
        tmp_dict_key_73 = const_str_plain_url;
        CHECK_OBJECT(par_self);
        tmp_called_instance_233 = par_self;
        CHECK_OBJECT(var_threeqsdn_url);
        tmp_args_element_name_372 = var_threeqsdn_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3058;
        {
            PyObject *call_args[] = {tmp_args_element_name_372};
            tmp_dict_value_73 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_233, const_str_plain__proto_relative_url, call_args);
        }

        if (tmp_dict_value_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 3058;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_73, tmp_dict_value_73);
        Py_DECREF(tmp_dict_value_73);
        assert(!(tmp_res != 0));
        tmp_dict_key_74 = const_str_plain_title;
        CHECK_OBJECT(var_video_title);
        tmp_dict_value_74 = var_video_title;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_74, tmp_dict_value_74);
        assert(!(tmp_res != 0));
        tmp_dict_key_75 = const_str_plain_description;
        CHECK_OBJECT(var_video_description);
        tmp_dict_value_75 = var_video_description;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_75, tmp_dict_value_75);
        assert(!(tmp_res != 0));
        tmp_dict_key_76 = const_str_plain_thumbnail;
        CHECK_OBJECT(var_video_thumbnail);
        tmp_dict_value_76 = var_video_thumbnail;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_76, tmp_dict_value_76);
        assert(!(tmp_res != 0));
        tmp_dict_key_77 = const_str_plain_uploader;
        CHECK_OBJECT(var_video_uploader);
        tmp_dict_value_77 = var_video_uploader;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_77, tmp_dict_value_77);
        assert(!(tmp_res != 0));
        goto frame_return_exit_1;
    }
    branch_no_127:;
    {
        PyObject *tmp_assign_source_156;
        PyObject *tmp_called_instance_234;
        PyObject *tmp_mvar_value_161;
        PyObject *tmp_args_element_name_373;
        tmp_mvar_value_161 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_Vbox7IE);

        if (unlikely(tmp_mvar_value_161 == NULL)) {
            tmp_mvar_value_161 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Vbox7IE);
        }

        if (tmp_mvar_value_161 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41658 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3066;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_234 = tmp_mvar_value_161;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_373 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3066;
        {
            PyObject *call_args[] = {tmp_args_element_name_373};
            tmp_assign_source_156 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_234, const_str_plain__extract_url, call_args);
        }

        if (tmp_assign_source_156 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3066;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vbox7_url == NULL);
        var_vbox7_url = tmp_assign_source_156;
    }
    {
        nuitka_bool tmp_condition_result_130;
        int tmp_truth_name_80;
        CHECK_OBJECT(var_vbox7_url);
        tmp_truth_name_80 = CHECK_IF_TRUE(var_vbox7_url);
        if (tmp_truth_name_80 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3067;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_130 = tmp_truth_name_80 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_130 == NUITKA_BOOL_TRUE) {
            goto branch_yes_128;
        } else {
            goto branch_no_128;
        }
    }
    branch_yes_128:;
    {
        PyObject *tmp_called_name_127;
        PyObject *tmp_expression_name_130;
        PyObject *tmp_args_element_name_374;
        PyObject *tmp_args_element_name_375;
        PyObject *tmp_called_instance_235;
        PyObject *tmp_mvar_value_162;
        CHECK_OBJECT(par_self);
        tmp_expression_name_130 = par_self;
        tmp_called_name_127 = LOOKUP_ATTRIBUTE(tmp_expression_name_130, const_str_plain_url_result);
        if (tmp_called_name_127 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3068;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_vbox7_url);
        tmp_args_element_name_374 = var_vbox7_url;
        tmp_mvar_value_162 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_Vbox7IE);

        if (unlikely(tmp_mvar_value_162 == NULL)) {
            tmp_mvar_value_162 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Vbox7IE);
        }

        if (tmp_mvar_value_162 == NULL) {
            Py_DECREF(tmp_called_name_127);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41658 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3068;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_235 = tmp_mvar_value_162;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3068;
        tmp_args_element_name_375 = CALL_METHOD_NO_ARGS(tmp_called_instance_235, const_str_plain_ie_key);
        if (tmp_args_element_name_375 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_127);

            exception_lineno = 3068;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3068;
        {
            PyObject *call_args[] = {tmp_args_element_name_374, tmp_args_element_name_375};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_127, call_args);
        }

        Py_DECREF(tmp_called_name_127);
        Py_DECREF(tmp_args_element_name_375);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3068;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_128:;
    {
        PyObject *tmp_assign_source_157;
        PyObject *tmp_called_instance_236;
        PyObject *tmp_mvar_value_163;
        PyObject *tmp_args_element_name_376;
        tmp_mvar_value_163 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DBTVIE);

        if (unlikely(tmp_mvar_value_163 == NULL)) {
            tmp_mvar_value_163 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_DBTVIE);
        }

        if (tmp_mvar_value_163 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41687 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3071;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_236 = tmp_mvar_value_163;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_376 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3071;
        {
            PyObject *call_args[] = {tmp_args_element_name_376};
            tmp_assign_source_157 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_236, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_157 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3071;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_dbtv_urls == NULL);
        var_dbtv_urls = tmp_assign_source_157;
    }
    {
        nuitka_bool tmp_condition_result_131;
        int tmp_truth_name_81;
        CHECK_OBJECT(var_dbtv_urls);
        tmp_truth_name_81 = CHECK_IF_TRUE(var_dbtv_urls);
        if (tmp_truth_name_81 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3072;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_131 = tmp_truth_name_81 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_131 == NUITKA_BOOL_TRUE) {
            goto branch_yes_129;
        } else {
            goto branch_no_129;
        }
    }
    branch_yes_129:;
    {
        PyObject *tmp_called_name_128;
        PyObject *tmp_expression_name_131;
        PyObject *tmp_args_name_42;
        PyObject *tmp_tuple_element_43;
        PyObject *tmp_kw_name_42;
        PyObject *tmp_dict_key_78;
        PyObject *tmp_dict_value_78;
        PyObject *tmp_called_instance_237;
        PyObject *tmp_mvar_value_164;
        CHECK_OBJECT(par_self);
        tmp_expression_name_131 = par_self;
        tmp_called_name_128 = LOOKUP_ATTRIBUTE(tmp_expression_name_131, const_str_plain_playlist_from_matches);
        if (tmp_called_name_128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3073;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_dbtv_urls);
        tmp_tuple_element_43 = var_dbtv_urls;
        tmp_args_name_42 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_43);
        PyTuple_SET_ITEM(tmp_args_name_42, 0, tmp_tuple_element_43);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_43 = var_video_id;
        Py_INCREF(tmp_tuple_element_43);
        PyTuple_SET_ITEM(tmp_args_name_42, 1, tmp_tuple_element_43);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_43 = var_video_title;
        Py_INCREF(tmp_tuple_element_43);
        PyTuple_SET_ITEM(tmp_args_name_42, 2, tmp_tuple_element_43);
        tmp_dict_key_78 = const_str_plain_ie;
        tmp_mvar_value_164 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DBTVIE);

        if (unlikely(tmp_mvar_value_164 == NULL)) {
            tmp_mvar_value_164 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_DBTVIE);
        }

        if (tmp_mvar_value_164 == NULL) {
            Py_DECREF(tmp_called_name_128);
            Py_DECREF(tmp_args_name_42);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41687 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3073;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_237 = tmp_mvar_value_164;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3073;
        tmp_dict_value_78 = CALL_METHOD_NO_ARGS(tmp_called_instance_237, const_str_plain_ie_key);
        if (tmp_dict_value_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_128);
            Py_DECREF(tmp_args_name_42);

            exception_lineno = 3073;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_42 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_42, tmp_dict_key_78, tmp_dict_value_78);
        Py_DECREF(tmp_dict_value_78);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3073;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_128, tmp_args_name_42, tmp_kw_name_42);
        Py_DECREF(tmp_called_name_128);
        Py_DECREF(tmp_args_name_42);
        Py_DECREF(tmp_kw_name_42);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3073;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_129:;
    {
        PyObject *tmp_assign_source_158;
        PyObject *tmp_called_instance_238;
        PyObject *tmp_mvar_value_165;
        PyObject *tmp_args_element_name_377;
        tmp_mvar_value_165 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VideaIE);

        if (unlikely(tmp_mvar_value_165 == NULL)) {
            tmp_mvar_value_165 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_VideaIE);
        }

        if (tmp_mvar_value_165 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41715 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3076;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_238 = tmp_mvar_value_165;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_377 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3076;
        {
            PyObject *call_args[] = {tmp_args_element_name_377};
            tmp_assign_source_158 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_238, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_158 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3076;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_videa_urls == NULL);
        var_videa_urls = tmp_assign_source_158;
    }
    {
        nuitka_bool tmp_condition_result_132;
        int tmp_truth_name_82;
        CHECK_OBJECT(var_videa_urls);
        tmp_truth_name_82 = CHECK_IF_TRUE(var_videa_urls);
        if (tmp_truth_name_82 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3077;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_132 = tmp_truth_name_82 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_132 == NUITKA_BOOL_TRUE) {
            goto branch_yes_130;
        } else {
            goto branch_no_130;
        }
    }
    branch_yes_130:;
    {
        PyObject *tmp_called_name_129;
        PyObject *tmp_expression_name_132;
        PyObject *tmp_args_name_43;
        PyObject *tmp_tuple_element_44;
        PyObject *tmp_kw_name_43;
        PyObject *tmp_dict_key_79;
        PyObject *tmp_dict_value_79;
        PyObject *tmp_called_instance_239;
        PyObject *tmp_mvar_value_166;
        CHECK_OBJECT(par_self);
        tmp_expression_name_132 = par_self;
        tmp_called_name_129 = LOOKUP_ATTRIBUTE(tmp_expression_name_132, const_str_plain_playlist_from_matches);
        if (tmp_called_name_129 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3078;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_videa_urls);
        tmp_tuple_element_44 = var_videa_urls;
        tmp_args_name_43 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_44);
        PyTuple_SET_ITEM(tmp_args_name_43, 0, tmp_tuple_element_44);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_44 = var_video_id;
        Py_INCREF(tmp_tuple_element_44);
        PyTuple_SET_ITEM(tmp_args_name_43, 1, tmp_tuple_element_44);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_44 = var_video_title;
        Py_INCREF(tmp_tuple_element_44);
        PyTuple_SET_ITEM(tmp_args_name_43, 2, tmp_tuple_element_44);
        tmp_dict_key_79 = const_str_plain_ie;
        tmp_mvar_value_166 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VideaIE);

        if (unlikely(tmp_mvar_value_166 == NULL)) {
            tmp_mvar_value_166 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_VideaIE);
        }

        if (tmp_mvar_value_166 == NULL) {
            Py_DECREF(tmp_called_name_129);
            Py_DECREF(tmp_args_name_43);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41715 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3078;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_239 = tmp_mvar_value_166;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3078;
        tmp_dict_value_79 = CALL_METHOD_NO_ARGS(tmp_called_instance_239, const_str_plain_ie_key);
        if (tmp_dict_value_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_129);
            Py_DECREF(tmp_args_name_43);

            exception_lineno = 3078;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_43 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_43, tmp_dict_key_79, tmp_dict_value_79);
        Py_DECREF(tmp_dict_value_79);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3078;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_129, tmp_args_name_43, tmp_kw_name_43);
        Py_DECREF(tmp_called_name_129);
        Py_DECREF(tmp_args_name_43);
        Py_DECREF(tmp_kw_name_43);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3078;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_130:;
    {
        PyObject *tmp_assign_source_159;
        PyObject *tmp_called_instance_240;
        PyObject *tmp_mvar_value_167;
        PyObject *tmp_args_element_name_378;
        tmp_mvar_value_167 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TwentyMinutenIE);

        if (unlikely(tmp_mvar_value_167 == NULL)) {
            tmp_mvar_value_167 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_TwentyMinutenIE);
        }

        if (tmp_mvar_value_167 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41744 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3081;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_240 = tmp_mvar_value_167;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_378 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3081;
        {
            PyObject *call_args[] = {tmp_args_element_name_378};
            tmp_assign_source_159 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_240, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_159 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3081;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_twentymin_urls == NULL);
        var_twentymin_urls = tmp_assign_source_159;
    }
    {
        nuitka_bool tmp_condition_result_133;
        int tmp_truth_name_83;
        CHECK_OBJECT(var_twentymin_urls);
        tmp_truth_name_83 = CHECK_IF_TRUE(var_twentymin_urls);
        if (tmp_truth_name_83 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3082;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_133 = tmp_truth_name_83 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_133 == NUITKA_BOOL_TRUE) {
            goto branch_yes_131;
        } else {
            goto branch_no_131;
        }
    }
    branch_yes_131:;
    {
        PyObject *tmp_called_name_130;
        PyObject *tmp_expression_name_133;
        PyObject *tmp_args_name_44;
        PyObject *tmp_tuple_element_45;
        PyObject *tmp_kw_name_44;
        PyObject *tmp_dict_key_80;
        PyObject *tmp_dict_value_80;
        PyObject *tmp_called_instance_241;
        PyObject *tmp_mvar_value_168;
        CHECK_OBJECT(par_self);
        tmp_expression_name_133 = par_self;
        tmp_called_name_130 = LOOKUP_ATTRIBUTE(tmp_expression_name_133, const_str_plain_playlist_from_matches);
        if (tmp_called_name_130 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3083;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_twentymin_urls);
        tmp_tuple_element_45 = var_twentymin_urls;
        tmp_args_name_44 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_45);
        PyTuple_SET_ITEM(tmp_args_name_44, 0, tmp_tuple_element_45);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_45 = var_video_id;
        Py_INCREF(tmp_tuple_element_45);
        PyTuple_SET_ITEM(tmp_args_name_44, 1, tmp_tuple_element_45);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_45 = var_video_title;
        Py_INCREF(tmp_tuple_element_45);
        PyTuple_SET_ITEM(tmp_args_name_44, 2, tmp_tuple_element_45);
        tmp_dict_key_80 = const_str_plain_ie;
        tmp_mvar_value_168 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TwentyMinutenIE);

        if (unlikely(tmp_mvar_value_168 == NULL)) {
            tmp_mvar_value_168 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_TwentyMinutenIE);
        }

        if (tmp_mvar_value_168 == NULL) {
            Py_DECREF(tmp_called_name_130);
            Py_DECREF(tmp_args_name_44);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41744 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3084;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_241 = tmp_mvar_value_168;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3084;
        tmp_dict_value_80 = CALL_METHOD_NO_ARGS(tmp_called_instance_241, const_str_plain_ie_key);
        if (tmp_dict_value_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_130);
            Py_DECREF(tmp_args_name_44);

            exception_lineno = 3084;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_44 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_44, tmp_dict_key_80, tmp_dict_value_80);
        Py_DECREF(tmp_dict_value_80);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3083;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_130, tmp_args_name_44, tmp_kw_name_44);
        Py_DECREF(tmp_called_name_130);
        Py_DECREF(tmp_args_name_44);
        Py_DECREF(tmp_kw_name_44);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3083;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_131:;
    {
        PyObject *tmp_assign_source_160;
        PyObject *tmp_called_instance_242;
        PyObject *tmp_mvar_value_169;
        PyObject *tmp_args_element_name_379;
        tmp_mvar_value_169 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VideoPressIE);

        if (unlikely(tmp_mvar_value_169 == NULL)) {
            tmp_mvar_value_169 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_VideoPressIE);
        }

        if (tmp_mvar_value_169 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41781 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3087;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_242 = tmp_mvar_value_169;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_379 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3087;
        {
            PyObject *call_args[] = {tmp_args_element_name_379};
            tmp_assign_source_160 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_242, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_160 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3087;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_videopress_urls == NULL);
        var_videopress_urls = tmp_assign_source_160;
    }
    {
        nuitka_bool tmp_condition_result_134;
        int tmp_truth_name_84;
        CHECK_OBJECT(var_videopress_urls);
        tmp_truth_name_84 = CHECK_IF_TRUE(var_videopress_urls);
        if (tmp_truth_name_84 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3088;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_134 = tmp_truth_name_84 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_134 == NUITKA_BOOL_TRUE) {
            goto branch_yes_132;
        } else {
            goto branch_no_132;
        }
    }
    branch_yes_132:;
    {
        PyObject *tmp_called_name_131;
        PyObject *tmp_expression_name_134;
        PyObject *tmp_args_name_45;
        PyObject *tmp_tuple_element_46;
        PyObject *tmp_kw_name_45;
        PyObject *tmp_dict_key_81;
        PyObject *tmp_dict_value_81;
        PyObject *tmp_called_instance_243;
        PyObject *tmp_mvar_value_170;
        CHECK_OBJECT(par_self);
        tmp_expression_name_134 = par_self;
        tmp_called_name_131 = LOOKUP_ATTRIBUTE(tmp_expression_name_134, const_str_plain_playlist_from_matches);
        if (tmp_called_name_131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3089;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_videopress_urls);
        tmp_tuple_element_46 = var_videopress_urls;
        tmp_args_name_45 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_46);
        PyTuple_SET_ITEM(tmp_args_name_45, 0, tmp_tuple_element_46);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_46 = var_video_id;
        Py_INCREF(tmp_tuple_element_46);
        PyTuple_SET_ITEM(tmp_args_name_45, 1, tmp_tuple_element_46);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_46 = var_video_title;
        Py_INCREF(tmp_tuple_element_46);
        PyTuple_SET_ITEM(tmp_args_name_45, 2, tmp_tuple_element_46);
        tmp_dict_key_81 = const_str_plain_ie;
        tmp_mvar_value_170 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VideoPressIE);

        if (unlikely(tmp_mvar_value_170 == NULL)) {
            tmp_mvar_value_170 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_VideoPressIE);
        }

        if (tmp_mvar_value_170 == NULL) {
            Py_DECREF(tmp_called_name_131);
            Py_DECREF(tmp_args_name_45);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41781 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3090;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_243 = tmp_mvar_value_170;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3090;
        tmp_dict_value_81 = CALL_METHOD_NO_ARGS(tmp_called_instance_243, const_str_plain_ie_key);
        if (tmp_dict_value_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_131);
            Py_DECREF(tmp_args_name_45);

            exception_lineno = 3090;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_45 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_45, tmp_dict_key_81, tmp_dict_value_81);
        Py_DECREF(tmp_dict_value_81);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3089;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_131, tmp_args_name_45, tmp_kw_name_45);
        Py_DECREF(tmp_called_name_131);
        Py_DECREF(tmp_args_name_45);
        Py_DECREF(tmp_kw_name_45);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3089;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_132:;
    {
        PyObject *tmp_assign_source_161;
        PyObject *tmp_called_instance_244;
        PyObject *tmp_mvar_value_171;
        PyObject *tmp_args_element_name_380;
        tmp_mvar_value_171 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RutubeIE);

        if (unlikely(tmp_mvar_value_171 == NULL)) {
            tmp_mvar_value_171 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_RutubeIE);
        }

        if (tmp_mvar_value_171 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41815 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3093;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_244 = tmp_mvar_value_171;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_380 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3093;
        {
            PyObject *call_args[] = {tmp_args_element_name_380};
            tmp_assign_source_161 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_244, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_161 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3093;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_rutube_urls == NULL);
        var_rutube_urls = tmp_assign_source_161;
    }
    {
        nuitka_bool tmp_condition_result_135;
        int tmp_truth_name_85;
        CHECK_OBJECT(var_rutube_urls);
        tmp_truth_name_85 = CHECK_IF_TRUE(var_rutube_urls);
        if (tmp_truth_name_85 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3094;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_135 = tmp_truth_name_85 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_135 == NUITKA_BOOL_TRUE) {
            goto branch_yes_133;
        } else {
            goto branch_no_133;
        }
    }
    branch_yes_133:;
    {
        PyObject *tmp_called_name_132;
        PyObject *tmp_expression_name_135;
        PyObject *tmp_args_name_46;
        PyObject *tmp_tuple_element_47;
        PyObject *tmp_kw_name_46;
        PyObject *tmp_dict_key_82;
        PyObject *tmp_dict_value_82;
        PyObject *tmp_called_instance_245;
        PyObject *tmp_mvar_value_172;
        CHECK_OBJECT(par_self);
        tmp_expression_name_135 = par_self;
        tmp_called_name_132 = LOOKUP_ATTRIBUTE(tmp_expression_name_135, const_str_plain_playlist_from_matches);
        if (tmp_called_name_132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3095;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_rutube_urls);
        tmp_tuple_element_47 = var_rutube_urls;
        tmp_args_name_46 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_47);
        PyTuple_SET_ITEM(tmp_args_name_46, 0, tmp_tuple_element_47);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_47 = var_video_id;
        Py_INCREF(tmp_tuple_element_47);
        PyTuple_SET_ITEM(tmp_args_name_46, 1, tmp_tuple_element_47);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_47 = var_video_title;
        Py_INCREF(tmp_tuple_element_47);
        PyTuple_SET_ITEM(tmp_args_name_46, 2, tmp_tuple_element_47);
        tmp_dict_key_82 = const_str_plain_ie;
        tmp_mvar_value_172 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RutubeIE);

        if (unlikely(tmp_mvar_value_172 == NULL)) {
            tmp_mvar_value_172 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_RutubeIE);
        }

        if (tmp_mvar_value_172 == NULL) {
            Py_DECREF(tmp_called_name_132);
            Py_DECREF(tmp_args_name_46);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41815 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3096;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_245 = tmp_mvar_value_172;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3096;
        tmp_dict_value_82 = CALL_METHOD_NO_ARGS(tmp_called_instance_245, const_str_plain_ie_key);
        if (tmp_dict_value_82 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_132);
            Py_DECREF(tmp_args_name_46);

            exception_lineno = 3096;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_46 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_46, tmp_dict_key_82, tmp_dict_value_82);
        Py_DECREF(tmp_dict_value_82);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3095;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_132, tmp_args_name_46, tmp_kw_name_46);
        Py_DECREF(tmp_called_name_132);
        Py_DECREF(tmp_args_name_46);
        Py_DECREF(tmp_kw_name_46);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3095;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_133:;
    {
        PyObject *tmp_assign_source_162;
        PyObject *tmp_called_instance_246;
        PyObject *tmp_mvar_value_173;
        PyObject *tmp_args_element_name_381;
        tmp_mvar_value_173 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_WashingtonPostIE);

        if (unlikely(tmp_mvar_value_173 == NULL)) {
            tmp_mvar_value_173 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_WashingtonPostIE);
        }

        if (tmp_mvar_value_173 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41845 ], 38, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3099;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_246 = tmp_mvar_value_173;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_381 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3099;
        {
            PyObject *call_args[] = {tmp_args_element_name_381};
            tmp_assign_source_162 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_246, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_162 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3099;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_wapo_urls == NULL);
        var_wapo_urls = tmp_assign_source_162;
    }
    {
        nuitka_bool tmp_condition_result_136;
        int tmp_truth_name_86;
        CHECK_OBJECT(var_wapo_urls);
        tmp_truth_name_86 = CHECK_IF_TRUE(var_wapo_urls);
        if (tmp_truth_name_86 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3100;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_136 = tmp_truth_name_86 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_136 == NUITKA_BOOL_TRUE) {
            goto branch_yes_134;
        } else {
            goto branch_no_134;
        }
    }
    branch_yes_134:;
    {
        PyObject *tmp_called_name_133;
        PyObject *tmp_expression_name_136;
        PyObject *tmp_args_name_47;
        PyObject *tmp_tuple_element_48;
        PyObject *tmp_kw_name_47;
        PyObject *tmp_dict_key_83;
        PyObject *tmp_dict_value_83;
        PyObject *tmp_called_instance_247;
        PyObject *tmp_mvar_value_174;
        CHECK_OBJECT(par_self);
        tmp_expression_name_136 = par_self;
        tmp_called_name_133 = LOOKUP_ATTRIBUTE(tmp_expression_name_136, const_str_plain_playlist_from_matches);
        if (tmp_called_name_133 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3101;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_wapo_urls);
        tmp_tuple_element_48 = var_wapo_urls;
        tmp_args_name_47 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_48);
        PyTuple_SET_ITEM(tmp_args_name_47, 0, tmp_tuple_element_48);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_48 = var_video_id;
        Py_INCREF(tmp_tuple_element_48);
        PyTuple_SET_ITEM(tmp_args_name_47, 1, tmp_tuple_element_48);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_48 = var_video_title;
        Py_INCREF(tmp_tuple_element_48);
        PyTuple_SET_ITEM(tmp_args_name_47, 2, tmp_tuple_element_48);
        tmp_dict_key_83 = const_str_plain_ie;
        tmp_mvar_value_174 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_WashingtonPostIE);

        if (unlikely(tmp_mvar_value_174 == NULL)) {
            tmp_mvar_value_174 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_WashingtonPostIE);
        }

        if (tmp_mvar_value_174 == NULL) {
            Py_DECREF(tmp_called_name_133);
            Py_DECREF(tmp_args_name_47);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41845 ], 38, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3102;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_247 = tmp_mvar_value_174;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3102;
        tmp_dict_value_83 = CALL_METHOD_NO_ARGS(tmp_called_instance_247, const_str_plain_ie_key);
        if (tmp_dict_value_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_133);
            Py_DECREF(tmp_args_name_47);

            exception_lineno = 3102;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_47 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_47, tmp_dict_key_83, tmp_dict_value_83);
        Py_DECREF(tmp_dict_value_83);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3101;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_133, tmp_args_name_47, tmp_kw_name_47);
        Py_DECREF(tmp_called_name_133);
        Py_DECREF(tmp_args_name_47);
        Py_DECREF(tmp_kw_name_47);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3101;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_134:;
    {
        PyObject *tmp_assign_source_163;
        PyObject *tmp_called_instance_248;
        PyObject *tmp_mvar_value_175;
        PyObject *tmp_args_element_name_382;
        PyObject *tmp_args_element_name_383;
        tmp_mvar_value_175 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MediasetIE);

        if (unlikely(tmp_mvar_value_175 == NULL)) {
            tmp_mvar_value_175 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_MediasetIE);
        }

        if (tmp_mvar_value_175 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41883 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3105;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_248 = tmp_mvar_value_175;
        CHECK_OBJECT(par_self);
        tmp_args_element_name_382 = par_self;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_383 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3105;
        {
            PyObject *call_args[] = {tmp_args_element_name_382, tmp_args_element_name_383};
            tmp_assign_source_163 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_248, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_163 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3105;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mediaset_urls == NULL);
        var_mediaset_urls = tmp_assign_source_163;
    }
    {
        nuitka_bool tmp_condition_result_137;
        int tmp_truth_name_87;
        CHECK_OBJECT(var_mediaset_urls);
        tmp_truth_name_87 = CHECK_IF_TRUE(var_mediaset_urls);
        if (tmp_truth_name_87 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3106;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_137 = tmp_truth_name_87 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_137 == NUITKA_BOOL_TRUE) {
            goto branch_yes_135;
        } else {
            goto branch_no_135;
        }
    }
    branch_yes_135:;
    {
        PyObject *tmp_called_name_134;
        PyObject *tmp_expression_name_137;
        PyObject *tmp_args_name_48;
        PyObject *tmp_tuple_element_49;
        PyObject *tmp_kw_name_48;
        PyObject *tmp_dict_key_84;
        PyObject *tmp_dict_value_84;
        PyObject *tmp_called_instance_249;
        PyObject *tmp_mvar_value_176;
        CHECK_OBJECT(par_self);
        tmp_expression_name_137 = par_self;
        tmp_called_name_134 = LOOKUP_ATTRIBUTE(tmp_expression_name_137, const_str_plain_playlist_from_matches);
        if (tmp_called_name_134 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3107;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mediaset_urls);
        tmp_tuple_element_49 = var_mediaset_urls;
        tmp_args_name_48 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_49);
        PyTuple_SET_ITEM(tmp_args_name_48, 0, tmp_tuple_element_49);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_49 = var_video_id;
        Py_INCREF(tmp_tuple_element_49);
        PyTuple_SET_ITEM(tmp_args_name_48, 1, tmp_tuple_element_49);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_49 = var_video_title;
        Py_INCREF(tmp_tuple_element_49);
        PyTuple_SET_ITEM(tmp_args_name_48, 2, tmp_tuple_element_49);
        tmp_dict_key_84 = const_str_plain_ie;
        tmp_mvar_value_176 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MediasetIE);

        if (unlikely(tmp_mvar_value_176 == NULL)) {
            tmp_mvar_value_176 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_MediasetIE);
        }

        if (tmp_mvar_value_176 == NULL) {
            Py_DECREF(tmp_called_name_134);
            Py_DECREF(tmp_args_name_48);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41883 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3108;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_249 = tmp_mvar_value_176;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3108;
        tmp_dict_value_84 = CALL_METHOD_NO_ARGS(tmp_called_instance_249, const_str_plain_ie_key);
        if (tmp_dict_value_84 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_134);
            Py_DECREF(tmp_args_name_48);

            exception_lineno = 3108;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_48 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_48, tmp_dict_key_84, tmp_dict_value_84);
        Py_DECREF(tmp_dict_value_84);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3107;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_134, tmp_args_name_48, tmp_kw_name_48);
        Py_DECREF(tmp_called_name_134);
        Py_DECREF(tmp_args_name_48);
        Py_DECREF(tmp_kw_name_48);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3107;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_135:;
    {
        PyObject *tmp_assign_source_164;
        PyObject *tmp_called_instance_250;
        PyObject *tmp_mvar_value_177;
        PyObject *tmp_args_element_name_384;
        tmp_mvar_value_177 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_JojIE);

        if (unlikely(tmp_mvar_value_177 == NULL)) {
            tmp_mvar_value_177 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_JojIE);
        }

        if (tmp_mvar_value_177 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41915 ], 27, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3111;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_250 = tmp_mvar_value_177;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_384 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3111;
        {
            PyObject *call_args[] = {tmp_args_element_name_384};
            tmp_assign_source_164 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_250, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_164 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3111;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_joj_urls == NULL);
        var_joj_urls = tmp_assign_source_164;
    }
    {
        nuitka_bool tmp_condition_result_138;
        int tmp_truth_name_88;
        CHECK_OBJECT(var_joj_urls);
        tmp_truth_name_88 = CHECK_IF_TRUE(var_joj_urls);
        if (tmp_truth_name_88 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3112;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_138 = tmp_truth_name_88 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_138 == NUITKA_BOOL_TRUE) {
            goto branch_yes_136;
        } else {
            goto branch_no_136;
        }
    }
    branch_yes_136:;
    {
        PyObject *tmp_called_name_135;
        PyObject *tmp_expression_name_138;
        PyObject *tmp_args_name_49;
        PyObject *tmp_tuple_element_50;
        PyObject *tmp_kw_name_49;
        PyObject *tmp_dict_key_85;
        PyObject *tmp_dict_value_85;
        PyObject *tmp_called_instance_251;
        PyObject *tmp_mvar_value_178;
        CHECK_OBJECT(par_self);
        tmp_expression_name_138 = par_self;
        tmp_called_name_135 = LOOKUP_ATTRIBUTE(tmp_expression_name_138, const_str_plain_playlist_from_matches);
        if (tmp_called_name_135 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3113;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_joj_urls);
        tmp_tuple_element_50 = var_joj_urls;
        tmp_args_name_49 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_50);
        PyTuple_SET_ITEM(tmp_args_name_49, 0, tmp_tuple_element_50);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_50 = var_video_id;
        Py_INCREF(tmp_tuple_element_50);
        PyTuple_SET_ITEM(tmp_args_name_49, 1, tmp_tuple_element_50);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_50 = var_video_title;
        Py_INCREF(tmp_tuple_element_50);
        PyTuple_SET_ITEM(tmp_args_name_49, 2, tmp_tuple_element_50);
        tmp_dict_key_85 = const_str_plain_ie;
        tmp_mvar_value_178 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_JojIE);

        if (unlikely(tmp_mvar_value_178 == NULL)) {
            tmp_mvar_value_178 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_JojIE);
        }

        if (tmp_mvar_value_178 == NULL) {
            Py_DECREF(tmp_called_name_135);
            Py_DECREF(tmp_args_name_49);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41915 ], 27, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3114;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_251 = tmp_mvar_value_178;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3114;
        tmp_dict_value_85 = CALL_METHOD_NO_ARGS(tmp_called_instance_251, const_str_plain_ie_key);
        if (tmp_dict_value_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_135);
            Py_DECREF(tmp_args_name_49);

            exception_lineno = 3114;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_49 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_49, tmp_dict_key_85, tmp_dict_value_85);
        Py_DECREF(tmp_dict_value_85);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3113;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_135, tmp_args_name_49, tmp_kw_name_49);
        Py_DECREF(tmp_called_name_135);
        Py_DECREF(tmp_args_name_49);
        Py_DECREF(tmp_kw_name_49);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3113;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_136:;
    {
        PyObject *tmp_assign_source_165;
        PyObject *tmp_called_instance_252;
        PyObject *tmp_mvar_value_179;
        PyObject *tmp_args_element_name_385;
        tmp_mvar_value_179 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MegaphoneIE);

        if (unlikely(tmp_mvar_value_179 == NULL)) {
            tmp_mvar_value_179 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_MegaphoneIE);
        }

        if (tmp_mvar_value_179 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41942 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3117;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_252 = tmp_mvar_value_179;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_385 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3117;
        {
            PyObject *call_args[] = {tmp_args_element_name_385};
            tmp_assign_source_165 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_252, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_165 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3117;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mpfn_urls == NULL);
        var_mpfn_urls = tmp_assign_source_165;
    }
    {
        nuitka_bool tmp_condition_result_139;
        int tmp_truth_name_89;
        CHECK_OBJECT(var_mpfn_urls);
        tmp_truth_name_89 = CHECK_IF_TRUE(var_mpfn_urls);
        if (tmp_truth_name_89 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3118;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_139 = tmp_truth_name_89 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_139 == NUITKA_BOOL_TRUE) {
            goto branch_yes_137;
        } else {
            goto branch_no_137;
        }
    }
    branch_yes_137:;
    {
        PyObject *tmp_called_name_136;
        PyObject *tmp_expression_name_139;
        PyObject *tmp_args_name_50;
        PyObject *tmp_tuple_element_51;
        PyObject *tmp_kw_name_50;
        PyObject *tmp_dict_key_86;
        PyObject *tmp_dict_value_86;
        PyObject *tmp_called_instance_253;
        PyObject *tmp_mvar_value_180;
        CHECK_OBJECT(par_self);
        tmp_expression_name_139 = par_self;
        tmp_called_name_136 = LOOKUP_ATTRIBUTE(tmp_expression_name_139, const_str_plain_playlist_from_matches);
        if (tmp_called_name_136 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3119;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mpfn_urls);
        tmp_tuple_element_51 = var_mpfn_urls;
        tmp_args_name_50 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_51);
        PyTuple_SET_ITEM(tmp_args_name_50, 0, tmp_tuple_element_51);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_51 = var_video_id;
        Py_INCREF(tmp_tuple_element_51);
        PyTuple_SET_ITEM(tmp_args_name_50, 1, tmp_tuple_element_51);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_51 = var_video_title;
        Py_INCREF(tmp_tuple_element_51);
        PyTuple_SET_ITEM(tmp_args_name_50, 2, tmp_tuple_element_51);
        tmp_dict_key_86 = const_str_plain_ie;
        tmp_mvar_value_180 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MegaphoneIE);

        if (unlikely(tmp_mvar_value_180 == NULL)) {
            tmp_mvar_value_180 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_MegaphoneIE);
        }

        if (tmp_mvar_value_180 == NULL) {
            Py_DECREF(tmp_called_name_136);
            Py_DECREF(tmp_args_name_50);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41942 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3120;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_253 = tmp_mvar_value_180;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3120;
        tmp_dict_value_86 = CALL_METHOD_NO_ARGS(tmp_called_instance_253, const_str_plain_ie_key);
        if (tmp_dict_value_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_136);
            Py_DECREF(tmp_args_name_50);

            exception_lineno = 3120;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_50 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_50, tmp_dict_key_86, tmp_dict_value_86);
        Py_DECREF(tmp_dict_value_86);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3119;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_136, tmp_args_name_50, tmp_kw_name_50);
        Py_DECREF(tmp_called_name_136);
        Py_DECREF(tmp_args_name_50);
        Py_DECREF(tmp_kw_name_50);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3119;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_137:;
    {
        PyObject *tmp_assign_source_166;
        PyObject *tmp_called_instance_254;
        PyObject *tmp_mvar_value_181;
        PyObject *tmp_args_element_name_386;
        tmp_mvar_value_181 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VzaarIE);

        if (unlikely(tmp_mvar_value_181 == NULL)) {
            tmp_mvar_value_181 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_VzaarIE);
        }

        if (tmp_mvar_value_181 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41975 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3123;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_254 = tmp_mvar_value_181;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_386 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3123;
        {
            PyObject *call_args[] = {tmp_args_element_name_386};
            tmp_assign_source_166 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_254, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3123;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vzaar_urls == NULL);
        var_vzaar_urls = tmp_assign_source_166;
    }
    {
        nuitka_bool tmp_condition_result_140;
        int tmp_truth_name_90;
        CHECK_OBJECT(var_vzaar_urls);
        tmp_truth_name_90 = CHECK_IF_TRUE(var_vzaar_urls);
        if (tmp_truth_name_90 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3124;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_140 = tmp_truth_name_90 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_140 == NUITKA_BOOL_TRUE) {
            goto branch_yes_138;
        } else {
            goto branch_no_138;
        }
    }
    branch_yes_138:;
    {
        PyObject *tmp_called_name_137;
        PyObject *tmp_expression_name_140;
        PyObject *tmp_args_name_51;
        PyObject *tmp_tuple_element_52;
        PyObject *tmp_kw_name_51;
        PyObject *tmp_dict_key_87;
        PyObject *tmp_dict_value_87;
        PyObject *tmp_called_instance_255;
        PyObject *tmp_mvar_value_182;
        CHECK_OBJECT(par_self);
        tmp_expression_name_140 = par_self;
        tmp_called_name_137 = LOOKUP_ATTRIBUTE(tmp_expression_name_140, const_str_plain_playlist_from_matches);
        if (tmp_called_name_137 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3125;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_vzaar_urls);
        tmp_tuple_element_52 = var_vzaar_urls;
        tmp_args_name_51 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_52);
        PyTuple_SET_ITEM(tmp_args_name_51, 0, tmp_tuple_element_52);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_52 = var_video_id;
        Py_INCREF(tmp_tuple_element_52);
        PyTuple_SET_ITEM(tmp_args_name_51, 1, tmp_tuple_element_52);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_52 = var_video_title;
        Py_INCREF(tmp_tuple_element_52);
        PyTuple_SET_ITEM(tmp_args_name_51, 2, tmp_tuple_element_52);
        tmp_dict_key_87 = const_str_plain_ie;
        tmp_mvar_value_182 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VzaarIE);

        if (unlikely(tmp_mvar_value_182 == NULL)) {
            tmp_mvar_value_182 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_VzaarIE);
        }

        if (tmp_mvar_value_182 == NULL) {
            Py_DECREF(tmp_called_name_137);
            Py_DECREF(tmp_args_name_51);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 41975 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3126;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_255 = tmp_mvar_value_182;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3126;
        tmp_dict_value_87 = CALL_METHOD_NO_ARGS(tmp_called_instance_255, const_str_plain_ie_key);
        if (tmp_dict_value_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_137);
            Py_DECREF(tmp_args_name_51);

            exception_lineno = 3126;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_51 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_51, tmp_dict_key_87, tmp_dict_value_87);
        Py_DECREF(tmp_dict_value_87);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3125;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_137, tmp_args_name_51, tmp_kw_name_51);
        Py_DECREF(tmp_called_name_137);
        Py_DECREF(tmp_args_name_51);
        Py_DECREF(tmp_kw_name_51);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3125;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_138:;
    {
        PyObject *tmp_assign_source_167;
        PyObject *tmp_called_instance_256;
        PyObject *tmp_mvar_value_183;
        PyObject *tmp_args_element_name_387;
        tmp_mvar_value_183 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_Channel9IE);

        if (unlikely(tmp_mvar_value_183 == NULL)) {
            tmp_mvar_value_183 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Channel9IE);
        }

        if (tmp_mvar_value_183 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42004 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3128;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_256 = tmp_mvar_value_183;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_387 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3128;
        {
            PyObject *call_args[] = {tmp_args_element_name_387};
            tmp_assign_source_167 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_256, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_167 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3128;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_channel9_urls == NULL);
        var_channel9_urls = tmp_assign_source_167;
    }
    {
        nuitka_bool tmp_condition_result_141;
        int tmp_truth_name_91;
        CHECK_OBJECT(var_channel9_urls);
        tmp_truth_name_91 = CHECK_IF_TRUE(var_channel9_urls);
        if (tmp_truth_name_91 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3129;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_141 = tmp_truth_name_91 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_141 == NUITKA_BOOL_TRUE) {
            goto branch_yes_139;
        } else {
            goto branch_no_139;
        }
    }
    branch_yes_139:;
    {
        PyObject *tmp_called_name_138;
        PyObject *tmp_expression_name_141;
        PyObject *tmp_args_name_52;
        PyObject *tmp_tuple_element_53;
        PyObject *tmp_kw_name_52;
        PyObject *tmp_dict_key_88;
        PyObject *tmp_dict_value_88;
        PyObject *tmp_called_instance_257;
        PyObject *tmp_mvar_value_184;
        CHECK_OBJECT(par_self);
        tmp_expression_name_141 = par_self;
        tmp_called_name_138 = LOOKUP_ATTRIBUTE(tmp_expression_name_141, const_str_plain_playlist_from_matches);
        if (tmp_called_name_138 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3130;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_channel9_urls);
        tmp_tuple_element_53 = var_channel9_urls;
        tmp_args_name_52 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_53);
        PyTuple_SET_ITEM(tmp_args_name_52, 0, tmp_tuple_element_53);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_53 = var_video_id;
        Py_INCREF(tmp_tuple_element_53);
        PyTuple_SET_ITEM(tmp_args_name_52, 1, tmp_tuple_element_53);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_53 = var_video_title;
        Py_INCREF(tmp_tuple_element_53);
        PyTuple_SET_ITEM(tmp_args_name_52, 2, tmp_tuple_element_53);
        tmp_dict_key_88 = const_str_plain_ie;
        tmp_mvar_value_184 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_Channel9IE);

        if (unlikely(tmp_mvar_value_184 == NULL)) {
            tmp_mvar_value_184 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Channel9IE);
        }

        if (tmp_mvar_value_184 == NULL) {
            Py_DECREF(tmp_called_name_138);
            Py_DECREF(tmp_args_name_52);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42004 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3131;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_257 = tmp_mvar_value_184;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3131;
        tmp_dict_value_88 = CALL_METHOD_NO_ARGS(tmp_called_instance_257, const_str_plain_ie_key);
        if (tmp_dict_value_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_138);
            Py_DECREF(tmp_args_name_52);

            exception_lineno = 3131;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_52 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_52, tmp_dict_key_88, tmp_dict_value_88);
        Py_DECREF(tmp_dict_value_88);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3130;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_138, tmp_args_name_52, tmp_kw_name_52);
        Py_DECREF(tmp_called_name_138);
        Py_DECREF(tmp_args_name_52);
        Py_DECREF(tmp_kw_name_52);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3130;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_139:;
    {
        PyObject *tmp_assign_source_168;
        PyObject *tmp_called_instance_258;
        PyObject *tmp_mvar_value_185;
        PyObject *tmp_args_element_name_388;
        tmp_mvar_value_185 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VShareIE);

        if (unlikely(tmp_mvar_value_185 == NULL)) {
            tmp_mvar_value_185 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_VShareIE);
        }

        if (tmp_mvar_value_185 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42036 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3133;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_258 = tmp_mvar_value_185;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_388 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3133;
        {
            PyObject *call_args[] = {tmp_args_element_name_388};
            tmp_assign_source_168 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_258, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_168 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3133;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vshare_urls == NULL);
        var_vshare_urls = tmp_assign_source_168;
    }
    {
        nuitka_bool tmp_condition_result_142;
        int tmp_truth_name_92;
        CHECK_OBJECT(var_vshare_urls);
        tmp_truth_name_92 = CHECK_IF_TRUE(var_vshare_urls);
        if (tmp_truth_name_92 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3134;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_142 = tmp_truth_name_92 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_142 == NUITKA_BOOL_TRUE) {
            goto branch_yes_140;
        } else {
            goto branch_no_140;
        }
    }
    branch_yes_140:;
    {
        PyObject *tmp_called_name_139;
        PyObject *tmp_expression_name_142;
        PyObject *tmp_args_name_53;
        PyObject *tmp_tuple_element_54;
        PyObject *tmp_kw_name_53;
        PyObject *tmp_dict_key_89;
        PyObject *tmp_dict_value_89;
        PyObject *tmp_called_instance_259;
        PyObject *tmp_mvar_value_186;
        CHECK_OBJECT(par_self);
        tmp_expression_name_142 = par_self;
        tmp_called_name_139 = LOOKUP_ATTRIBUTE(tmp_expression_name_142, const_str_plain_playlist_from_matches);
        if (tmp_called_name_139 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3135;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_vshare_urls);
        tmp_tuple_element_54 = var_vshare_urls;
        tmp_args_name_53 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_54);
        PyTuple_SET_ITEM(tmp_args_name_53, 0, tmp_tuple_element_54);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_54 = var_video_id;
        Py_INCREF(tmp_tuple_element_54);
        PyTuple_SET_ITEM(tmp_args_name_53, 1, tmp_tuple_element_54);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_54 = var_video_title;
        Py_INCREF(tmp_tuple_element_54);
        PyTuple_SET_ITEM(tmp_args_name_53, 2, tmp_tuple_element_54);
        tmp_dict_key_89 = const_str_plain_ie;
        tmp_mvar_value_186 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VShareIE);

        if (unlikely(tmp_mvar_value_186 == NULL)) {
            tmp_mvar_value_186 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_VShareIE);
        }

        if (tmp_mvar_value_186 == NULL) {
            Py_DECREF(tmp_called_name_139);
            Py_DECREF(tmp_args_name_53);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42036 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3136;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_259 = tmp_mvar_value_186;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3136;
        tmp_dict_value_89 = CALL_METHOD_NO_ARGS(tmp_called_instance_259, const_str_plain_ie_key);
        if (tmp_dict_value_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_139);
            Py_DECREF(tmp_args_name_53);

            exception_lineno = 3136;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_53 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_53, tmp_dict_key_89, tmp_dict_value_89);
        Py_DECREF(tmp_dict_value_89);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3135;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_139, tmp_args_name_53, tmp_kw_name_53);
        Py_DECREF(tmp_called_name_139);
        Py_DECREF(tmp_args_name_53);
        Py_DECREF(tmp_kw_name_53);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3135;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_140:;
    {
        PyObject *tmp_assign_source_169;
        PyObject *tmp_called_instance_260;
        PyObject *tmp_mvar_value_187;
        PyObject *tmp_args_element_name_389;
        tmp_mvar_value_187 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MediasiteIE);

        if (unlikely(tmp_mvar_value_187 == NULL)) {
            tmp_mvar_value_187 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_MediasiteIE);
        }

        if (tmp_mvar_value_187 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42066 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3139;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_260 = tmp_mvar_value_187;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_389 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3139;
        {
            PyObject *call_args[] = {tmp_args_element_name_389};
            tmp_assign_source_169 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_260, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_169 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3139;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mediasite_urls == NULL);
        var_mediasite_urls = tmp_assign_source_169;
    }
    {
        nuitka_bool tmp_condition_result_143;
        int tmp_truth_name_93;
        CHECK_OBJECT(var_mediasite_urls);
        tmp_truth_name_93 = CHECK_IF_TRUE(var_mediasite_urls);
        if (tmp_truth_name_93 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3140;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_143 = tmp_truth_name_93 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_143 == NUITKA_BOOL_TRUE) {
            goto branch_yes_141;
        } else {
            goto branch_no_141;
        }
    }
    branch_yes_141:;
    {
        PyObject *tmp_assign_source_170;
        // Tried code:
        {
            PyObject *tmp_assign_source_171;
            PyObject *tmp_iter_arg_5;
            CHECK_OBJECT(var_mediasite_urls);
            tmp_iter_arg_5 = var_mediasite_urls;
            tmp_assign_source_171 = MAKE_ITERATOR(tmp_iter_arg_5);
            if (tmp_assign_source_171 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3142;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto try_except_handler_10;
            }
            assert(tmp_listcomp_2__$0 == NULL);
            tmp_listcomp_2__$0 = tmp_assign_source_171;
        }
        {
            PyObject *tmp_assign_source_172;
            tmp_assign_source_172 = PyList_New(0);
            assert(tmp_listcomp_2__contraction == NULL);
            tmp_listcomp_2__contraction = tmp_assign_source_172;
        }
        if (isFrameUnusable(cache_frame_f98e57c7a414f9b0600dcc8317d1b08b_3)) {
            Py_XDECREF(cache_frame_f98e57c7a414f9b0600dcc8317d1b08b_3);

#if _DEBUG_REFCOUNTS
            if (cache_frame_f98e57c7a414f9b0600dcc8317d1b08b_3 == NULL) {
                count_active_frame_cache_instances += 1;
            } else {
                count_released_frame_cache_instances += 1;
            }
            count_allocated_frame_cache_instances += 1;
#endif
            cache_frame_f98e57c7a414f9b0600dcc8317d1b08b_3 = MAKE_FUNCTION_FRAME(codeobj_f98e57c7a414f9b0600dcc8317d1b08b, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
        } else {
            count_hit_frame_cache_instances += 1;
#endif
        }
        assert(cache_frame_f98e57c7a414f9b0600dcc8317d1b08b_3->m_type_description == NULL);
        frame_f98e57c7a414f9b0600dcc8317d1b08b_3 = cache_frame_f98e57c7a414f9b0600dcc8317d1b08b_3;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_f98e57c7a414f9b0600dcc8317d1b08b_3);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_f98e57c7a414f9b0600dcc8317d1b08b_3) == 2); // Frame stack

        // Framed code:
        // Tried code:
        loop_start_3:;
        {
            PyObject *tmp_next_source_3;
            PyObject *tmp_assign_source_173;
            CHECK_OBJECT(tmp_listcomp_2__$0);
            tmp_next_source_3 = tmp_listcomp_2__$0;
            tmp_assign_source_173 = ITERATOR_NEXT(tmp_next_source_3);
            if (tmp_assign_source_173 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_3;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "ooc";
                    exception_lineno = 3142;
                    goto try_except_handler_11;
                }
            }

            {
                PyObject *old = tmp_listcomp_2__iter_value_0;
                tmp_listcomp_2__iter_value_0 = tmp_assign_source_173;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_174;
            CHECK_OBJECT(tmp_listcomp_2__iter_value_0);
            tmp_assign_source_174 = tmp_listcomp_2__iter_value_0;
            {
                PyObject *old = outline_1_var_mediasite_url;
                outline_1_var_mediasite_url = tmp_assign_source_174;
                Py_INCREF(outline_1_var_mediasite_url);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_append_list_2;
            PyObject *tmp_append_value_2;
            PyObject *tmp_called_name_140;
            PyObject *tmp_expression_name_143;
            PyObject *tmp_args_name_54;
            PyObject *tmp_tuple_element_55;
            PyObject *tmp_called_name_141;
            PyObject *tmp_mvar_value_188;
            PyObject *tmp_args_element_name_390;
            PyObject *tmp_called_instance_261;
            PyObject *tmp_mvar_value_189;
            PyObject *tmp_args_element_name_391;
            PyObject *tmp_args_element_name_392;
            PyObject *tmp_args_element_name_393;
            PyObject *tmp_dict_key_90;
            PyObject *tmp_dict_value_90;
            PyObject *tmp_kw_name_54;
            PyObject *tmp_dict_key_91;
            PyObject *tmp_dict_value_91;
            PyObject *tmp_called_instance_262;
            PyObject *tmp_mvar_value_190;
            CHECK_OBJECT(tmp_listcomp_2__contraction);
            tmp_append_list_2 = tmp_listcomp_2__contraction;
            CHECK_OBJECT(par_self);
            tmp_expression_name_143 = par_self;
            tmp_called_name_140 = LOOKUP_ATTRIBUTE(tmp_expression_name_143, const_str_plain_url_result);
            if (tmp_called_name_140 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3142;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            tmp_mvar_value_188 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_smuggle_url);

            if (unlikely(tmp_mvar_value_188 == NULL)) {
                tmp_mvar_value_188 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_smuggle_url);
            }

            if (tmp_mvar_value_188 == NULL) {
                Py_DECREF(tmp_called_name_140);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 34727 ], 33, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 3142;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }

            tmp_called_name_141 = tmp_mvar_value_188;
            tmp_mvar_value_189 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urlparse);

            if (unlikely(tmp_mvar_value_189 == NULL)) {
                tmp_mvar_value_189 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_urlparse);
            }

            if (tmp_mvar_value_189 == NULL) {
                Py_DECREF(tmp_called_name_140);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 32106 ], 37, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 3143;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }

            tmp_called_instance_261 = tmp_mvar_value_189;
            CHECK_OBJECT(PyCell_GET(par_url));
            tmp_args_element_name_391 = PyCell_GET(par_url);
            CHECK_OBJECT(outline_1_var_mediasite_url);
            tmp_args_element_name_392 = outline_1_var_mediasite_url;
            frame_f98e57c7a414f9b0600dcc8317d1b08b_3->m_frame.f_lineno = 3143;
            {
                PyObject *call_args[] = {tmp_args_element_name_391, tmp_args_element_name_392};
                tmp_args_element_name_390 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_261, const_str_plain_urljoin, call_args);
            }

            if (tmp_args_element_name_390 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_140);

                exception_lineno = 3143;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            tmp_dict_key_90 = const_str_plain_UrlReferrer;
            CHECK_OBJECT(PyCell_GET(par_url));
            tmp_dict_value_90 = PyCell_GET(par_url);
            tmp_args_element_name_393 = _PyDict_NewPresized( 1 );
            tmp_res = PyDict_SetItem(tmp_args_element_name_393, tmp_dict_key_90, tmp_dict_value_90);
            assert(!(tmp_res != 0));
            frame_f98e57c7a414f9b0600dcc8317d1b08b_3->m_frame.f_lineno = 3142;
            {
                PyObject *call_args[] = {tmp_args_element_name_390, tmp_args_element_name_393};
                tmp_tuple_element_55 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_141, call_args);
            }

            Py_DECREF(tmp_args_element_name_390);
            Py_DECREF(tmp_args_element_name_393);
            if (tmp_tuple_element_55 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_140);

                exception_lineno = 3142;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            tmp_args_name_54 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_args_name_54, 0, tmp_tuple_element_55);
            tmp_dict_key_91 = const_str_plain_ie;
            tmp_mvar_value_190 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MediasiteIE);

            if (unlikely(tmp_mvar_value_190 == NULL)) {
                tmp_mvar_value_190 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_MediasiteIE);
            }

            if (tmp_mvar_value_190 == NULL) {
                Py_DECREF(tmp_called_name_140);
                Py_DECREF(tmp_args_name_54);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 42066 ], 33, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 3144;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }

            tmp_called_instance_262 = tmp_mvar_value_190;
            frame_f98e57c7a414f9b0600dcc8317d1b08b_3->m_frame.f_lineno = 3144;
            tmp_dict_value_91 = CALL_METHOD_NO_ARGS(tmp_called_instance_262, const_str_plain_ie_key);
            if (tmp_dict_value_91 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_140);
                Py_DECREF(tmp_args_name_54);

                exception_lineno = 3144;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            tmp_kw_name_54 = _PyDict_NewPresized( 1 );
            tmp_res = PyDict_SetItem(tmp_kw_name_54, tmp_dict_key_91, tmp_dict_value_91);
            Py_DECREF(tmp_dict_value_91);
            assert(!(tmp_res != 0));
            frame_f98e57c7a414f9b0600dcc8317d1b08b_3->m_frame.f_lineno = 3142;
            tmp_append_value_2 = CALL_FUNCTION(tmp_called_name_140, tmp_args_name_54, tmp_kw_name_54);
            Py_DECREF(tmp_called_name_140);
            Py_DECREF(tmp_args_name_54);
            Py_DECREF(tmp_kw_name_54);
            if (tmp_append_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3142;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            assert(PyList_Check(tmp_append_list_2));
            tmp_res = PyList_Append(tmp_append_list_2, tmp_append_value_2);
            Py_DECREF(tmp_append_value_2);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3142;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3142;
            type_description_2 = "ooc";
            goto try_except_handler_11;
        }
        goto loop_start_3;
        loop_end_3:;
        CHECK_OBJECT(tmp_listcomp_2__contraction);
        tmp_assign_source_170 = tmp_listcomp_2__contraction;
        Py_INCREF(tmp_assign_source_170);
        goto try_return_handler_11;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_11:;
        CHECK_OBJECT(tmp_listcomp_2__$0);
        Py_DECREF(tmp_listcomp_2__$0);
        tmp_listcomp_2__$0 = NULL;

        CHECK_OBJECT(tmp_listcomp_2__contraction);
        Py_DECREF(tmp_listcomp_2__contraction);
        tmp_listcomp_2__contraction = NULL;

        Py_XDECREF(tmp_listcomp_2__iter_value_0);
        tmp_listcomp_2__iter_value_0 = NULL;

        goto frame_return_exit_3;
        // Exception handler code:
        try_except_handler_11:;
        exception_keeper_type_8 = exception_type;
        exception_keeper_value_8 = exception_value;
        exception_keeper_tb_8 = exception_tb;
        exception_keeper_lineno_8 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT(tmp_listcomp_2__$0);
        Py_DECREF(tmp_listcomp_2__$0);
        tmp_listcomp_2__$0 = NULL;

        CHECK_OBJECT(tmp_listcomp_2__contraction);
        Py_DECREF(tmp_listcomp_2__contraction);
        tmp_listcomp_2__contraction = NULL;

        Py_XDECREF(tmp_listcomp_2__iter_value_0);
        tmp_listcomp_2__iter_value_0 = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_8;
        exception_value = exception_keeper_value_8;
        exception_tb = exception_keeper_tb_8;
        exception_lineno = exception_keeper_lineno_8;

        goto frame_exception_exit_3;
        // End of try:

#if 0
        RESTORE_FRAME_EXCEPTION(frame_f98e57c7a414f9b0600dcc8317d1b08b_3);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_2;

        frame_return_exit_3:;
#if 0
        RESTORE_FRAME_EXCEPTION(frame_f98e57c7a414f9b0600dcc8317d1b08b_3);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto try_return_handler_10;

        frame_exception_exit_3:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_f98e57c7a414f9b0600dcc8317d1b08b_3);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_f98e57c7a414f9b0600dcc8317d1b08b_3, exception_lineno);
        } else if (exception_tb->tb_frame != &frame_f98e57c7a414f9b0600dcc8317d1b08b_3->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_f98e57c7a414f9b0600dcc8317d1b08b_3, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            frame_f98e57c7a414f9b0600dcc8317d1b08b_3,
            type_description_2,
            outline_1_var_mediasite_url,
            par_self,
            par_url
        );


        // Release cached frame.
        if (frame_f98e57c7a414f9b0600dcc8317d1b08b_3 == cache_frame_f98e57c7a414f9b0600dcc8317d1b08b_3) {
#if _DEBUG_REFCOUNTS
            count_active_frame_cache_instances -= 1;
            count_released_frame_cache_instances += 1;
#endif

            Py_DECREF(frame_f98e57c7a414f9b0600dcc8317d1b08b_3);
        }
        cache_frame_f98e57c7a414f9b0600dcc8317d1b08b_3 = NULL;

        assertFrameObject(frame_f98e57c7a414f9b0600dcc8317d1b08b_3);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_2;

        frame_no_exception_2:;
        goto skip_nested_handling_2;
        nested_frame_exit_2:;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_10;
        skip_nested_handling_2:;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_10:;
        Py_XDECREF(outline_1_var_mediasite_url);
        outline_1_var_mediasite_url = NULL;

        goto outline_result_3;
        // Exception handler code:
        try_except_handler_10:;
        exception_keeper_type_9 = exception_type;
        exception_keeper_value_9 = exception_value;
        exception_keeper_tb_9 = exception_tb;
        exception_keeper_lineno_9 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(outline_1_var_mediasite_url);
        outline_1_var_mediasite_url = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_9;
        exception_value = exception_keeper_value_9;
        exception_tb = exception_keeper_tb_9;
        exception_lineno = exception_keeper_lineno_9;

        goto outline_exception_2;
        // End of try:
        NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
        return NULL;
        outline_exception_2:;
        exception_lineno = 3142;
        goto frame_exception_exit_1;
        outline_result_3:;
        assert(var_entries == NULL);
        var_entries = tmp_assign_source_170;
    }
    {
        PyObject *tmp_called_instance_263;
        PyObject *tmp_args_element_name_394;
        PyObject *tmp_args_element_name_395;
        PyObject *tmp_args_element_name_396;
        CHECK_OBJECT(par_self);
        tmp_called_instance_263 = par_self;
        CHECK_OBJECT(var_entries);
        tmp_args_element_name_394 = var_entries;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_395 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_name_396 = var_video_title;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3146;
        {
            PyObject *call_args[] = {tmp_args_element_name_394, tmp_args_element_name_395, tmp_args_element_name_396};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(tmp_called_instance_263, const_str_plain_playlist_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3146;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_141:;
    {
        PyObject *tmp_assign_source_175;
        PyObject *tmp_called_instance_264;
        PyObject *tmp_mvar_value_191;
        PyObject *tmp_args_element_name_397;
        tmp_mvar_value_191 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SpringboardPlatformIE);

        if (unlikely(tmp_mvar_value_191 == NULL)) {
            tmp_mvar_value_191 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_SpringboardPlatformIE);
        }

        if (tmp_mvar_value_191 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42099 ], 43, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3148;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_264 = tmp_mvar_value_191;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_397 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3148;
        {
            PyObject *call_args[] = {tmp_args_element_name_397};
            tmp_assign_source_175 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_264, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_175 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3148;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_springboardplatform_urls == NULL);
        var_springboardplatform_urls = tmp_assign_source_175;
    }
    {
        nuitka_bool tmp_condition_result_144;
        int tmp_truth_name_94;
        CHECK_OBJECT(var_springboardplatform_urls);
        tmp_truth_name_94 = CHECK_IF_TRUE(var_springboardplatform_urls);
        if (tmp_truth_name_94 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3149;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_144 = tmp_truth_name_94 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_144 == NUITKA_BOOL_TRUE) {
            goto branch_yes_142;
        } else {
            goto branch_no_142;
        }
    }
    branch_yes_142:;
    {
        PyObject *tmp_called_name_142;
        PyObject *tmp_expression_name_144;
        PyObject *tmp_args_name_55;
        PyObject *tmp_tuple_element_56;
        PyObject *tmp_kw_name_55;
        PyObject *tmp_dict_key_92;
        PyObject *tmp_dict_value_92;
        PyObject *tmp_called_instance_265;
        PyObject *tmp_mvar_value_192;
        CHECK_OBJECT(par_self);
        tmp_expression_name_144 = par_self;
        tmp_called_name_142 = LOOKUP_ATTRIBUTE(tmp_expression_name_144, const_str_plain_playlist_from_matches);
        if (tmp_called_name_142 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3150;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_springboardplatform_urls);
        tmp_tuple_element_56 = var_springboardplatform_urls;
        tmp_args_name_55 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_56);
        PyTuple_SET_ITEM(tmp_args_name_55, 0, tmp_tuple_element_56);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_56 = var_video_id;
        Py_INCREF(tmp_tuple_element_56);
        PyTuple_SET_ITEM(tmp_args_name_55, 1, tmp_tuple_element_56);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_56 = var_video_title;
        Py_INCREF(tmp_tuple_element_56);
        PyTuple_SET_ITEM(tmp_args_name_55, 2, tmp_tuple_element_56);
        tmp_dict_key_92 = const_str_plain_ie;
        tmp_mvar_value_192 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SpringboardPlatformIE);

        if (unlikely(tmp_mvar_value_192 == NULL)) {
            tmp_mvar_value_192 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_SpringboardPlatformIE);
        }

        if (tmp_mvar_value_192 == NULL) {
            Py_DECREF(tmp_called_name_142);
            Py_DECREF(tmp_args_name_55);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42099 ], 43, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3152;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_265 = tmp_mvar_value_192;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3152;
        tmp_dict_value_92 = CALL_METHOD_NO_ARGS(tmp_called_instance_265, const_str_plain_ie_key);
        if (tmp_dict_value_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_142);
            Py_DECREF(tmp_args_name_55);

            exception_lineno = 3152;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_55 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_55, tmp_dict_key_92, tmp_dict_value_92);
        Py_DECREF(tmp_dict_value_92);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3150;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_142, tmp_args_name_55, tmp_kw_name_55);
        Py_DECREF(tmp_called_name_142);
        Py_DECREF(tmp_args_name_55);
        Py_DECREF(tmp_kw_name_55);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3150;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_142:;
    {
        PyObject *tmp_assign_source_176;
        PyObject *tmp_called_instance_266;
        PyObject *tmp_mvar_value_193;
        PyObject *tmp_args_element_name_398;
        tmp_mvar_value_193 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YapFilesIE);

        if (unlikely(tmp_mvar_value_193 == NULL)) {
            tmp_mvar_value_193 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_YapFilesIE);
        }

        if (tmp_mvar_value_193 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42142 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3154;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_266 = tmp_mvar_value_193;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_398 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3154;
        {
            PyObject *call_args[] = {tmp_args_element_name_398};
            tmp_assign_source_176 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_266, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_176 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3154;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_yapfiles_urls == NULL);
        var_yapfiles_urls = tmp_assign_source_176;
    }
    {
        nuitka_bool tmp_condition_result_145;
        int tmp_truth_name_95;
        CHECK_OBJECT(var_yapfiles_urls);
        tmp_truth_name_95 = CHECK_IF_TRUE(var_yapfiles_urls);
        if (tmp_truth_name_95 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3155;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_145 = tmp_truth_name_95 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_145 == NUITKA_BOOL_TRUE) {
            goto branch_yes_143;
        } else {
            goto branch_no_143;
        }
    }
    branch_yes_143:;
    {
        PyObject *tmp_called_name_143;
        PyObject *tmp_expression_name_145;
        PyObject *tmp_args_name_56;
        PyObject *tmp_tuple_element_57;
        PyObject *tmp_kw_name_56;
        PyObject *tmp_dict_key_93;
        PyObject *tmp_dict_value_93;
        PyObject *tmp_called_instance_267;
        PyObject *tmp_mvar_value_194;
        CHECK_OBJECT(par_self);
        tmp_expression_name_145 = par_self;
        tmp_called_name_143 = LOOKUP_ATTRIBUTE(tmp_expression_name_145, const_str_plain_playlist_from_matches);
        if (tmp_called_name_143 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3156;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_yapfiles_urls);
        tmp_tuple_element_57 = var_yapfiles_urls;
        tmp_args_name_56 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_57);
        PyTuple_SET_ITEM(tmp_args_name_56, 0, tmp_tuple_element_57);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_57 = var_video_id;
        Py_INCREF(tmp_tuple_element_57);
        PyTuple_SET_ITEM(tmp_args_name_56, 1, tmp_tuple_element_57);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_57 = var_video_title;
        Py_INCREF(tmp_tuple_element_57);
        PyTuple_SET_ITEM(tmp_args_name_56, 2, tmp_tuple_element_57);
        tmp_dict_key_93 = const_str_plain_ie;
        tmp_mvar_value_194 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YapFilesIE);

        if (unlikely(tmp_mvar_value_194 == NULL)) {
            tmp_mvar_value_194 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_YapFilesIE);
        }

        if (tmp_mvar_value_194 == NULL) {
            Py_DECREF(tmp_called_name_143);
            Py_DECREF(tmp_args_name_56);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42142 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3157;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_267 = tmp_mvar_value_194;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3157;
        tmp_dict_value_93 = CALL_METHOD_NO_ARGS(tmp_called_instance_267, const_str_plain_ie_key);
        if (tmp_dict_value_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_143);
            Py_DECREF(tmp_args_name_56);

            exception_lineno = 3157;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_56 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_56, tmp_dict_key_93, tmp_dict_value_93);
        Py_DECREF(tmp_dict_value_93);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3156;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_143, tmp_args_name_56, tmp_kw_name_56);
        Py_DECREF(tmp_called_name_143);
        Py_DECREF(tmp_args_name_56);
        Py_DECREF(tmp_kw_name_56);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3156;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_143:;
    {
        PyObject *tmp_assign_source_177;
        PyObject *tmp_called_instance_268;
        PyObject *tmp_mvar_value_195;
        PyObject *tmp_args_element_name_399;
        tmp_mvar_value_195 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ViceIE);

        if (unlikely(tmp_mvar_value_195 == NULL)) {
            tmp_mvar_value_195 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ViceIE);
        }

        if (tmp_mvar_value_195 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42174 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3159;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_268 = tmp_mvar_value_195;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_399 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3159;
        {
            PyObject *call_args[] = {tmp_args_element_name_399};
            tmp_assign_source_177 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_268, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_177 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3159;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vice_urls == NULL);
        var_vice_urls = tmp_assign_source_177;
    }
    {
        nuitka_bool tmp_condition_result_146;
        int tmp_truth_name_96;
        CHECK_OBJECT(var_vice_urls);
        tmp_truth_name_96 = CHECK_IF_TRUE(var_vice_urls);
        if (tmp_truth_name_96 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3160;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_146 = tmp_truth_name_96 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_146 == NUITKA_BOOL_TRUE) {
            goto branch_yes_144;
        } else {
            goto branch_no_144;
        }
    }
    branch_yes_144:;
    {
        PyObject *tmp_called_name_144;
        PyObject *tmp_expression_name_146;
        PyObject *tmp_args_name_57;
        PyObject *tmp_tuple_element_58;
        PyObject *tmp_kw_name_57;
        PyObject *tmp_dict_key_94;
        PyObject *tmp_dict_value_94;
        PyObject *tmp_called_instance_269;
        PyObject *tmp_mvar_value_196;
        CHECK_OBJECT(par_self);
        tmp_expression_name_146 = par_self;
        tmp_called_name_144 = LOOKUP_ATTRIBUTE(tmp_expression_name_146, const_str_plain_playlist_from_matches);
        if (tmp_called_name_144 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3161;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_vice_urls);
        tmp_tuple_element_58 = var_vice_urls;
        tmp_args_name_57 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_58);
        PyTuple_SET_ITEM(tmp_args_name_57, 0, tmp_tuple_element_58);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_58 = var_video_id;
        Py_INCREF(tmp_tuple_element_58);
        PyTuple_SET_ITEM(tmp_args_name_57, 1, tmp_tuple_element_58);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_58 = var_video_title;
        Py_INCREF(tmp_tuple_element_58);
        PyTuple_SET_ITEM(tmp_args_name_57, 2, tmp_tuple_element_58);
        tmp_dict_key_94 = const_str_plain_ie;
        tmp_mvar_value_196 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ViceIE);

        if (unlikely(tmp_mvar_value_196 == NULL)) {
            tmp_mvar_value_196 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ViceIE);
        }

        if (tmp_mvar_value_196 == NULL) {
            Py_DECREF(tmp_called_name_144);
            Py_DECREF(tmp_args_name_57);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42174 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3162;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_269 = tmp_mvar_value_196;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3162;
        tmp_dict_value_94 = CALL_METHOD_NO_ARGS(tmp_called_instance_269, const_str_plain_ie_key);
        if (tmp_dict_value_94 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_144);
            Py_DECREF(tmp_args_name_57);

            exception_lineno = 3162;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_57 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_57, tmp_dict_key_94, tmp_dict_value_94);
        Py_DECREF(tmp_dict_value_94);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3161;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_144, tmp_args_name_57, tmp_kw_name_57);
        Py_DECREF(tmp_called_name_144);
        Py_DECREF(tmp_args_name_57);
        Py_DECREF(tmp_kw_name_57);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3161;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_144:;
    {
        PyObject *tmp_assign_source_178;
        PyObject *tmp_called_instance_270;
        PyObject *tmp_mvar_value_197;
        PyObject *tmp_args_element_name_400;
        tmp_mvar_value_197 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_XFileShareIE);

        if (unlikely(tmp_mvar_value_197 == NULL)) {
            tmp_mvar_value_197 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_XFileShareIE);
        }

        if (tmp_mvar_value_197 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42202 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3164;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_270 = tmp_mvar_value_197;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_400 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3164;
        {
            PyObject *call_args[] = {tmp_args_element_name_400};
            tmp_assign_source_178 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_270, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_178 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3164;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_xfileshare_urls == NULL);
        var_xfileshare_urls = tmp_assign_source_178;
    }
    {
        nuitka_bool tmp_condition_result_147;
        int tmp_truth_name_97;
        CHECK_OBJECT(var_xfileshare_urls);
        tmp_truth_name_97 = CHECK_IF_TRUE(var_xfileshare_urls);
        if (tmp_truth_name_97 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3165;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_147 = tmp_truth_name_97 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_147 == NUITKA_BOOL_TRUE) {
            goto branch_yes_145;
        } else {
            goto branch_no_145;
        }
    }
    branch_yes_145:;
    {
        PyObject *tmp_called_name_145;
        PyObject *tmp_expression_name_147;
        PyObject *tmp_args_name_58;
        PyObject *tmp_tuple_element_59;
        PyObject *tmp_kw_name_58;
        PyObject *tmp_dict_key_95;
        PyObject *tmp_dict_value_95;
        PyObject *tmp_called_instance_271;
        PyObject *tmp_mvar_value_198;
        CHECK_OBJECT(par_self);
        tmp_expression_name_147 = par_self;
        tmp_called_name_145 = LOOKUP_ATTRIBUTE(tmp_expression_name_147, const_str_plain_playlist_from_matches);
        if (tmp_called_name_145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3166;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_xfileshare_urls);
        tmp_tuple_element_59 = var_xfileshare_urls;
        tmp_args_name_58 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_59);
        PyTuple_SET_ITEM(tmp_args_name_58, 0, tmp_tuple_element_59);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_59 = var_video_id;
        Py_INCREF(tmp_tuple_element_59);
        PyTuple_SET_ITEM(tmp_args_name_58, 1, tmp_tuple_element_59);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_59 = var_video_title;
        Py_INCREF(tmp_tuple_element_59);
        PyTuple_SET_ITEM(tmp_args_name_58, 2, tmp_tuple_element_59);
        tmp_dict_key_95 = const_str_plain_ie;
        tmp_mvar_value_198 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_XFileShareIE);

        if (unlikely(tmp_mvar_value_198 == NULL)) {
            tmp_mvar_value_198 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_XFileShareIE);
        }

        if (tmp_mvar_value_198 == NULL) {
            Py_DECREF(tmp_called_name_145);
            Py_DECREF(tmp_args_name_58);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42202 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3167;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_271 = tmp_mvar_value_198;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3167;
        tmp_dict_value_95 = CALL_METHOD_NO_ARGS(tmp_called_instance_271, const_str_plain_ie_key);
        if (tmp_dict_value_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_145);
            Py_DECREF(tmp_args_name_58);

            exception_lineno = 3167;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_58 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_58, tmp_dict_key_95, tmp_dict_value_95);
        Py_DECREF(tmp_dict_value_95);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3166;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_145, tmp_args_name_58, tmp_kw_name_58);
        Py_DECREF(tmp_called_name_145);
        Py_DECREF(tmp_args_name_58);
        Py_DECREF(tmp_kw_name_58);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3166;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_145:;
    {
        PyObject *tmp_assign_source_179;
        PyObject *tmp_called_instance_272;
        PyObject *tmp_mvar_value_199;
        PyObject *tmp_args_element_name_401;
        tmp_mvar_value_199 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_CloudflareStreamIE);

        if (unlikely(tmp_mvar_value_199 == NULL)) {
            tmp_mvar_value_199 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_CloudflareStreamIE);
        }

        if (tmp_mvar_value_199 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 37781 ], 40, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3169;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_272 = tmp_mvar_value_199;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_401 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3169;
        {
            PyObject *call_args[] = {tmp_args_element_name_401};
            tmp_assign_source_179 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_272, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_179 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3169;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_cloudflarestream_urls == NULL);
        var_cloudflarestream_urls = tmp_assign_source_179;
    }
    {
        nuitka_bool tmp_condition_result_148;
        int tmp_truth_name_98;
        CHECK_OBJECT(var_cloudflarestream_urls);
        tmp_truth_name_98 = CHECK_IF_TRUE(var_cloudflarestream_urls);
        if (tmp_truth_name_98 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3170;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_148 = tmp_truth_name_98 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_148 == NUITKA_BOOL_TRUE) {
            goto branch_yes_146;
        } else {
            goto branch_no_146;
        }
    }
    branch_yes_146:;
    {
        PyObject *tmp_called_name_146;
        PyObject *tmp_expression_name_148;
        PyObject *tmp_args_name_59;
        PyObject *tmp_tuple_element_60;
        PyObject *tmp_kw_name_59;
        PyObject *tmp_dict_key_96;
        PyObject *tmp_dict_value_96;
        PyObject *tmp_called_instance_273;
        PyObject *tmp_mvar_value_200;
        CHECK_OBJECT(par_self);
        tmp_expression_name_148 = par_self;
        tmp_called_name_146 = LOOKUP_ATTRIBUTE(tmp_expression_name_148, const_str_plain_playlist_from_matches);
        if (tmp_called_name_146 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3171;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_cloudflarestream_urls);
        tmp_tuple_element_60 = var_cloudflarestream_urls;
        tmp_args_name_59 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_60);
        PyTuple_SET_ITEM(tmp_args_name_59, 0, tmp_tuple_element_60);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_60 = var_video_id;
        Py_INCREF(tmp_tuple_element_60);
        PyTuple_SET_ITEM(tmp_args_name_59, 1, tmp_tuple_element_60);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_60 = var_video_title;
        Py_INCREF(tmp_tuple_element_60);
        PyTuple_SET_ITEM(tmp_args_name_59, 2, tmp_tuple_element_60);
        tmp_dict_key_96 = const_str_plain_ie;
        tmp_mvar_value_200 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_CloudflareStreamIE);

        if (unlikely(tmp_mvar_value_200 == NULL)) {
            tmp_mvar_value_200 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_CloudflareStreamIE);
        }

        if (tmp_mvar_value_200 == NULL) {
            Py_DECREF(tmp_called_name_146);
            Py_DECREF(tmp_args_name_59);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 37781 ], 40, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3172;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_273 = tmp_mvar_value_200;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3172;
        tmp_dict_value_96 = CALL_METHOD_NO_ARGS(tmp_called_instance_273, const_str_plain_ie_key);
        if (tmp_dict_value_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_146);
            Py_DECREF(tmp_args_name_59);

            exception_lineno = 3172;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_59 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_59, tmp_dict_key_96, tmp_dict_value_96);
        Py_DECREF(tmp_dict_value_96);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3171;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_146, tmp_args_name_59, tmp_kw_name_59);
        Py_DECREF(tmp_called_name_146);
        Py_DECREF(tmp_args_name_59);
        Py_DECREF(tmp_kw_name_59);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3171;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_146:;
    {
        PyObject *tmp_assign_source_180;
        PyObject *tmp_called_instance_274;
        PyObject *tmp_mvar_value_201;
        PyObject *tmp_args_element_name_402;
        PyObject *tmp_args_element_name_403;
        tmp_mvar_value_201 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_PeerTubeIE);

        if (unlikely(tmp_mvar_value_201 == NULL)) {
            tmp_mvar_value_201 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_PeerTubeIE);
        }

        if (tmp_mvar_value_201 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42236 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3174;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_274 = tmp_mvar_value_201;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_402 = PyCell_GET(var_webpage);
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_403 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3174;
        {
            PyObject *call_args[] = {tmp_args_element_name_402, tmp_args_element_name_403};
            tmp_assign_source_180 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_274, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_180 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3174;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_peertube_urls == NULL);
        var_peertube_urls = tmp_assign_source_180;
    }
    {
        nuitka_bool tmp_condition_result_149;
        int tmp_truth_name_99;
        CHECK_OBJECT(var_peertube_urls);
        tmp_truth_name_99 = CHECK_IF_TRUE(var_peertube_urls);
        if (tmp_truth_name_99 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3175;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_149 = tmp_truth_name_99 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_149 == NUITKA_BOOL_TRUE) {
            goto branch_yes_147;
        } else {
            goto branch_no_147;
        }
    }
    branch_yes_147:;
    {
        PyObject *tmp_called_name_147;
        PyObject *tmp_expression_name_149;
        PyObject *tmp_args_name_60;
        PyObject *tmp_tuple_element_61;
        PyObject *tmp_kw_name_60;
        PyObject *tmp_dict_key_97;
        PyObject *tmp_dict_value_97;
        PyObject *tmp_called_instance_275;
        PyObject *tmp_mvar_value_202;
        CHECK_OBJECT(par_self);
        tmp_expression_name_149 = par_self;
        tmp_called_name_147 = LOOKUP_ATTRIBUTE(tmp_expression_name_149, const_str_plain_playlist_from_matches);
        if (tmp_called_name_147 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3176;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_peertube_urls);
        tmp_tuple_element_61 = var_peertube_urls;
        tmp_args_name_60 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_61);
        PyTuple_SET_ITEM(tmp_args_name_60, 0, tmp_tuple_element_61);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_61 = var_video_id;
        Py_INCREF(tmp_tuple_element_61);
        PyTuple_SET_ITEM(tmp_args_name_60, 1, tmp_tuple_element_61);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_61 = var_video_title;
        Py_INCREF(tmp_tuple_element_61);
        PyTuple_SET_ITEM(tmp_args_name_60, 2, tmp_tuple_element_61);
        tmp_dict_key_97 = const_str_plain_ie;
        tmp_mvar_value_202 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_PeerTubeIE);

        if (unlikely(tmp_mvar_value_202 == NULL)) {
            tmp_mvar_value_202 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_PeerTubeIE);
        }

        if (tmp_mvar_value_202 == NULL) {
            Py_DECREF(tmp_called_name_147);
            Py_DECREF(tmp_args_name_60);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42236 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3177;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_275 = tmp_mvar_value_202;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3177;
        tmp_dict_value_97 = CALL_METHOD_NO_ARGS(tmp_called_instance_275, const_str_plain_ie_key);
        if (tmp_dict_value_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_147);
            Py_DECREF(tmp_args_name_60);

            exception_lineno = 3177;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_60 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_60, tmp_dict_key_97, tmp_dict_value_97);
        Py_DECREF(tmp_dict_value_97);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3176;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_147, tmp_args_name_60, tmp_kw_name_60);
        Py_DECREF(tmp_called_name_147);
        Py_DECREF(tmp_args_name_60);
        Py_DECREF(tmp_kw_name_60);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3176;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_147:;
    {
        PyObject *tmp_assign_source_181;
        PyObject *tmp_called_instance_276;
        PyObject *tmp_mvar_value_203;
        PyObject *tmp_args_element_name_404;
        tmp_mvar_value_203 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_IndavideoEmbedIE);

        if (unlikely(tmp_mvar_value_203 == NULL)) {
            tmp_mvar_value_203 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_IndavideoEmbedIE);
        }

        if (tmp_mvar_value_203 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42268 ], 38, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3179;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_276 = tmp_mvar_value_203;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_404 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3179;
        {
            PyObject *call_args[] = {tmp_args_element_name_404};
            tmp_assign_source_181 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_276, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_181 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3179;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_indavideo_urls == NULL);
        var_indavideo_urls = tmp_assign_source_181;
    }
    {
        nuitka_bool tmp_condition_result_150;
        int tmp_truth_name_100;
        CHECK_OBJECT(var_indavideo_urls);
        tmp_truth_name_100 = CHECK_IF_TRUE(var_indavideo_urls);
        if (tmp_truth_name_100 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3180;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_150 = tmp_truth_name_100 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_150 == NUITKA_BOOL_TRUE) {
            goto branch_yes_148;
        } else {
            goto branch_no_148;
        }
    }
    branch_yes_148:;
    {
        PyObject *tmp_called_name_148;
        PyObject *tmp_expression_name_150;
        PyObject *tmp_args_name_61;
        PyObject *tmp_tuple_element_62;
        PyObject *tmp_kw_name_61;
        PyObject *tmp_dict_key_98;
        PyObject *tmp_dict_value_98;
        PyObject *tmp_called_instance_277;
        PyObject *tmp_mvar_value_204;
        CHECK_OBJECT(par_self);
        tmp_expression_name_150 = par_self;
        tmp_called_name_148 = LOOKUP_ATTRIBUTE(tmp_expression_name_150, const_str_plain_playlist_from_matches);
        if (tmp_called_name_148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3181;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_indavideo_urls);
        tmp_tuple_element_62 = var_indavideo_urls;
        tmp_args_name_61 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_62);
        PyTuple_SET_ITEM(tmp_args_name_61, 0, tmp_tuple_element_62);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_62 = var_video_id;
        Py_INCREF(tmp_tuple_element_62);
        PyTuple_SET_ITEM(tmp_args_name_61, 1, tmp_tuple_element_62);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_62 = var_video_title;
        Py_INCREF(tmp_tuple_element_62);
        PyTuple_SET_ITEM(tmp_args_name_61, 2, tmp_tuple_element_62);
        tmp_dict_key_98 = const_str_plain_ie;
        tmp_mvar_value_204 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_IndavideoEmbedIE);

        if (unlikely(tmp_mvar_value_204 == NULL)) {
            tmp_mvar_value_204 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_IndavideoEmbedIE);
        }

        if (tmp_mvar_value_204 == NULL) {
            Py_DECREF(tmp_called_name_148);
            Py_DECREF(tmp_args_name_61);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42268 ], 38, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3182;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_277 = tmp_mvar_value_204;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3182;
        tmp_dict_value_98 = CALL_METHOD_NO_ARGS(tmp_called_instance_277, const_str_plain_ie_key);
        if (tmp_dict_value_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_148);
            Py_DECREF(tmp_args_name_61);

            exception_lineno = 3182;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_61 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_61, tmp_dict_key_98, tmp_dict_value_98);
        Py_DECREF(tmp_dict_value_98);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3181;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_148, tmp_args_name_61, tmp_kw_name_61);
        Py_DECREF(tmp_called_name_148);
        Py_DECREF(tmp_args_name_61);
        Py_DECREF(tmp_kw_name_61);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3181;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_148:;
    {
        PyObject *tmp_assign_source_182;
        PyObject *tmp_called_instance_278;
        PyObject *tmp_mvar_value_205;
        PyObject *tmp_args_element_name_405;
        tmp_mvar_value_205 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_APAIE);

        if (unlikely(tmp_mvar_value_205 == NULL)) {
            tmp_mvar_value_205 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_APAIE);
        }

        if (tmp_mvar_value_205 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42306 ], 27, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3184;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_278 = tmp_mvar_value_205;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_405 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3184;
        {
            PyObject *call_args[] = {tmp_args_element_name_405};
            tmp_assign_source_182 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_278, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_182 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3184;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_apa_urls == NULL);
        var_apa_urls = tmp_assign_source_182;
    }
    {
        nuitka_bool tmp_condition_result_151;
        int tmp_truth_name_101;
        CHECK_OBJECT(var_apa_urls);
        tmp_truth_name_101 = CHECK_IF_TRUE(var_apa_urls);
        if (tmp_truth_name_101 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3185;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_151 = tmp_truth_name_101 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_151 == NUITKA_BOOL_TRUE) {
            goto branch_yes_149;
        } else {
            goto branch_no_149;
        }
    }
    branch_yes_149:;
    {
        PyObject *tmp_called_name_149;
        PyObject *tmp_expression_name_151;
        PyObject *tmp_args_name_62;
        PyObject *tmp_tuple_element_63;
        PyObject *tmp_kw_name_62;
        PyObject *tmp_dict_key_99;
        PyObject *tmp_dict_value_99;
        PyObject *tmp_called_instance_279;
        PyObject *tmp_mvar_value_206;
        CHECK_OBJECT(par_self);
        tmp_expression_name_151 = par_self;
        tmp_called_name_149 = LOOKUP_ATTRIBUTE(tmp_expression_name_151, const_str_plain_playlist_from_matches);
        if (tmp_called_name_149 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3186;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_apa_urls);
        tmp_tuple_element_63 = var_apa_urls;
        tmp_args_name_62 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_63);
        PyTuple_SET_ITEM(tmp_args_name_62, 0, tmp_tuple_element_63);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_63 = var_video_id;
        Py_INCREF(tmp_tuple_element_63);
        PyTuple_SET_ITEM(tmp_args_name_62, 1, tmp_tuple_element_63);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_63 = var_video_title;
        Py_INCREF(tmp_tuple_element_63);
        PyTuple_SET_ITEM(tmp_args_name_62, 2, tmp_tuple_element_63);
        tmp_dict_key_99 = const_str_plain_ie;
        tmp_mvar_value_206 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_APAIE);

        if (unlikely(tmp_mvar_value_206 == NULL)) {
            tmp_mvar_value_206 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_APAIE);
        }

        if (tmp_mvar_value_206 == NULL) {
            Py_DECREF(tmp_called_name_149);
            Py_DECREF(tmp_args_name_62);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42306 ], 27, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3187;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_279 = tmp_mvar_value_206;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3187;
        tmp_dict_value_99 = CALL_METHOD_NO_ARGS(tmp_called_instance_279, const_str_plain_ie_key);
        if (tmp_dict_value_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_149);
            Py_DECREF(tmp_args_name_62);

            exception_lineno = 3187;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_62 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_62, tmp_dict_key_99, tmp_dict_value_99);
        Py_DECREF(tmp_dict_value_99);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3186;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_149, tmp_args_name_62, tmp_kw_name_62);
        Py_DECREF(tmp_called_name_149);
        Py_DECREF(tmp_args_name_62);
        Py_DECREF(tmp_kw_name_62);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3186;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_149:;
    {
        PyObject *tmp_assign_source_183;
        PyObject *tmp_called_instance_280;
        PyObject *tmp_mvar_value_207;
        PyObject *tmp_args_element_name_406;
        tmp_mvar_value_207 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_FoxNewsIE);

        if (unlikely(tmp_mvar_value_207 == NULL)) {
            tmp_mvar_value_207 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_FoxNewsIE);
        }

        if (tmp_mvar_value_207 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 39884 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3189;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_280 = tmp_mvar_value_207;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_406 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3189;
        {
            PyObject *call_args[] = {tmp_args_element_name_406};
            tmp_assign_source_183 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_280, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_183 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3189;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_foxnews_urls == NULL);
        var_foxnews_urls = tmp_assign_source_183;
    }
    {
        nuitka_bool tmp_condition_result_152;
        int tmp_truth_name_102;
        CHECK_OBJECT(var_foxnews_urls);
        tmp_truth_name_102 = CHECK_IF_TRUE(var_foxnews_urls);
        if (tmp_truth_name_102 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3190;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_152 = tmp_truth_name_102 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_152 == NUITKA_BOOL_TRUE) {
            goto branch_yes_150;
        } else {
            goto branch_no_150;
        }
    }
    branch_yes_150:;
    {
        PyObject *tmp_called_name_150;
        PyObject *tmp_expression_name_152;
        PyObject *tmp_args_name_63;
        PyObject *tmp_tuple_element_64;
        PyObject *tmp_kw_name_63;
        PyObject *tmp_dict_key_100;
        PyObject *tmp_dict_value_100;
        PyObject *tmp_called_instance_281;
        PyObject *tmp_mvar_value_208;
        CHECK_OBJECT(par_self);
        tmp_expression_name_152 = par_self;
        tmp_called_name_150 = LOOKUP_ATTRIBUTE(tmp_expression_name_152, const_str_plain_playlist_from_matches);
        if (tmp_called_name_150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3191;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_foxnews_urls);
        tmp_tuple_element_64 = var_foxnews_urls;
        tmp_args_name_63 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_64);
        PyTuple_SET_ITEM(tmp_args_name_63, 0, tmp_tuple_element_64);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_64 = var_video_id;
        Py_INCREF(tmp_tuple_element_64);
        PyTuple_SET_ITEM(tmp_args_name_63, 1, tmp_tuple_element_64);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_64 = var_video_title;
        Py_INCREF(tmp_tuple_element_64);
        PyTuple_SET_ITEM(tmp_args_name_63, 2, tmp_tuple_element_64);
        tmp_dict_key_100 = const_str_plain_ie;
        tmp_mvar_value_208 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_FoxNewsIE);

        if (unlikely(tmp_mvar_value_208 == NULL)) {
            tmp_mvar_value_208 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_FoxNewsIE);
        }

        if (tmp_mvar_value_208 == NULL) {
            Py_DECREF(tmp_called_name_150);
            Py_DECREF(tmp_args_name_63);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 39884 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3192;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_281 = tmp_mvar_value_208;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3192;
        tmp_dict_value_100 = CALL_METHOD_NO_ARGS(tmp_called_instance_281, const_str_plain_ie_key);
        if (tmp_dict_value_100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_150);
            Py_DECREF(tmp_args_name_63);

            exception_lineno = 3192;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_63 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_63, tmp_dict_key_100, tmp_dict_value_100);
        Py_DECREF(tmp_dict_value_100);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3191;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_150, tmp_args_name_63, tmp_kw_name_63);
        Py_DECREF(tmp_called_name_150);
        Py_DECREF(tmp_args_name_63);
        Py_DECREF(tmp_kw_name_63);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3191;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_150:;
    {
        PyObject *tmp_assign_source_184;
        // Tried code:
        {
            PyObject *tmp_assign_source_185;
            PyObject *tmp_iter_arg_6;
            PyObject *tmp_called_instance_282;
            PyObject *tmp_mvar_value_209;
            PyObject *tmp_args_element_name_407;
            PyObject *tmp_args_element_name_408;
            tmp_mvar_value_209 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

            if (unlikely(tmp_mvar_value_209 == NULL)) {
                tmp_mvar_value_209 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
            }

            if (tmp_mvar_value_209 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 3194;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto try_except_handler_12;
            }

            tmp_called_instance_282 = tmp_mvar_value_209;
            tmp_args_element_name_407 = const_str_digest_d072056fe22d297c08a1c8ae9b8fd043;
            CHECK_OBJECT(PyCell_GET(var_webpage));
            tmp_args_element_name_408 = PyCell_GET(var_webpage);
            frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3194;
            {
                PyObject *call_args[] = {tmp_args_element_name_407, tmp_args_element_name_408};
                tmp_iter_arg_6 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_282, const_str_plain_finditer, call_args);
            }

            if (tmp_iter_arg_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3194;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto try_except_handler_12;
            }
            tmp_assign_source_185 = MAKE_ITERATOR(tmp_iter_arg_6);
            Py_DECREF(tmp_iter_arg_6);
            if (tmp_assign_source_185 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3194;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto try_except_handler_12;
            }
            assert(tmp_listcomp_3__$0 == NULL);
            tmp_listcomp_3__$0 = tmp_assign_source_185;
        }
        {
            PyObject *tmp_assign_source_186;
            tmp_assign_source_186 = PyList_New(0);
            assert(tmp_listcomp_3__contraction == NULL);
            tmp_listcomp_3__contraction = tmp_assign_source_186;
        }
        if (isFrameUnusable(cache_frame_3ab031b717f0bb18aadf670f3dc4389c_4)) {
            Py_XDECREF(cache_frame_3ab031b717f0bb18aadf670f3dc4389c_4);

#if _DEBUG_REFCOUNTS
            if (cache_frame_3ab031b717f0bb18aadf670f3dc4389c_4 == NULL) {
                count_active_frame_cache_instances += 1;
            } else {
                count_released_frame_cache_instances += 1;
            }
            count_allocated_frame_cache_instances += 1;
#endif
            cache_frame_3ab031b717f0bb18aadf670f3dc4389c_4 = MAKE_FUNCTION_FRAME(codeobj_3ab031b717f0bb18aadf670f3dc4389c, module_youtube_dl$extractor$generic, sizeof(void *));
#if _DEBUG_REFCOUNTS
        } else {
            count_hit_frame_cache_instances += 1;
#endif
        }
        assert(cache_frame_3ab031b717f0bb18aadf670f3dc4389c_4->m_type_description == NULL);
        frame_3ab031b717f0bb18aadf670f3dc4389c_4 = cache_frame_3ab031b717f0bb18aadf670f3dc4389c_4;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_3ab031b717f0bb18aadf670f3dc4389c_4);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_3ab031b717f0bb18aadf670f3dc4389c_4) == 2); // Frame stack

        // Framed code:
        // Tried code:
        loop_start_4:;
        {
            PyObject *tmp_next_source_4;
            PyObject *tmp_assign_source_187;
            CHECK_OBJECT(tmp_listcomp_3__$0);
            tmp_next_source_4 = tmp_listcomp_3__$0;
            tmp_assign_source_187 = ITERATOR_NEXT(tmp_next_source_4);
            if (tmp_assign_source_187 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_4;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    exception_lineno = 3194;
                    goto try_except_handler_13;
                }
            }

            {
                PyObject *old = tmp_listcomp_3__iter_value_0;
                tmp_listcomp_3__iter_value_0 = tmp_assign_source_187;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_188;
            CHECK_OBJECT(tmp_listcomp_3__iter_value_0);
            tmp_assign_source_188 = tmp_listcomp_3__iter_value_0;
            {
                PyObject *old = outline_2_var_sharevideos_mobj;
                outline_2_var_sharevideos_mobj = tmp_assign_source_188;
                Py_INCREF(outline_2_var_sharevideos_mobj);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_append_list_3;
            PyObject *tmp_append_value_3;
            PyObject *tmp_called_instance_283;
            CHECK_OBJECT(tmp_listcomp_3__contraction);
            tmp_append_list_3 = tmp_listcomp_3__contraction;
            CHECK_OBJECT(outline_2_var_sharevideos_mobj);
            tmp_called_instance_283 = outline_2_var_sharevideos_mobj;
            frame_3ab031b717f0bb18aadf670f3dc4389c_4->m_frame.f_lineno = 3194;
            tmp_append_value_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_283, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

            if (tmp_append_value_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3194;
                type_description_2 = "o";
                goto try_except_handler_13;
            }
            assert(PyList_Check(tmp_append_list_3));
            tmp_res = PyList_Append(tmp_append_list_3, tmp_append_value_3);
            Py_DECREF(tmp_append_value_3);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3194;
                type_description_2 = "o";
                goto try_except_handler_13;
            }
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3194;
            type_description_2 = "o";
            goto try_except_handler_13;
        }
        goto loop_start_4;
        loop_end_4:;
        CHECK_OBJECT(tmp_listcomp_3__contraction);
        tmp_assign_source_184 = tmp_listcomp_3__contraction;
        Py_INCREF(tmp_assign_source_184);
        goto try_return_handler_13;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_13:;
        CHECK_OBJECT(tmp_listcomp_3__$0);
        Py_DECREF(tmp_listcomp_3__$0);
        tmp_listcomp_3__$0 = NULL;

        CHECK_OBJECT(tmp_listcomp_3__contraction);
        Py_DECREF(tmp_listcomp_3__contraction);
        tmp_listcomp_3__contraction = NULL;

        Py_XDECREF(tmp_listcomp_3__iter_value_0);
        tmp_listcomp_3__iter_value_0 = NULL;

        goto frame_return_exit_4;
        // Exception handler code:
        try_except_handler_13:;
        exception_keeper_type_10 = exception_type;
        exception_keeper_value_10 = exception_value;
        exception_keeper_tb_10 = exception_tb;
        exception_keeper_lineno_10 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT(tmp_listcomp_3__$0);
        Py_DECREF(tmp_listcomp_3__$0);
        tmp_listcomp_3__$0 = NULL;

        CHECK_OBJECT(tmp_listcomp_3__contraction);
        Py_DECREF(tmp_listcomp_3__contraction);
        tmp_listcomp_3__contraction = NULL;

        Py_XDECREF(tmp_listcomp_3__iter_value_0);
        tmp_listcomp_3__iter_value_0 = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_10;
        exception_value = exception_keeper_value_10;
        exception_tb = exception_keeper_tb_10;
        exception_lineno = exception_keeper_lineno_10;

        goto frame_exception_exit_4;
        // End of try:

#if 0
        RESTORE_FRAME_EXCEPTION(frame_3ab031b717f0bb18aadf670f3dc4389c_4);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_3;

        frame_return_exit_4:;
#if 0
        RESTORE_FRAME_EXCEPTION(frame_3ab031b717f0bb18aadf670f3dc4389c_4);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto try_return_handler_12;

        frame_exception_exit_4:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_3ab031b717f0bb18aadf670f3dc4389c_4);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_3ab031b717f0bb18aadf670f3dc4389c_4, exception_lineno);
        } else if (exception_tb->tb_frame != &frame_3ab031b717f0bb18aadf670f3dc4389c_4->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_3ab031b717f0bb18aadf670f3dc4389c_4, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            frame_3ab031b717f0bb18aadf670f3dc4389c_4,
            type_description_2,
            outline_2_var_sharevideos_mobj
        );


        // Release cached frame.
        if (frame_3ab031b717f0bb18aadf670f3dc4389c_4 == cache_frame_3ab031b717f0bb18aadf670f3dc4389c_4) {
#if _DEBUG_REFCOUNTS
            count_active_frame_cache_instances -= 1;
            count_released_frame_cache_instances += 1;
#endif

            Py_DECREF(frame_3ab031b717f0bb18aadf670f3dc4389c_4);
        }
        cache_frame_3ab031b717f0bb18aadf670f3dc4389c_4 = NULL;

        assertFrameObject(frame_3ab031b717f0bb18aadf670f3dc4389c_4);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_3;

        frame_no_exception_3:;
        goto skip_nested_handling_3;
        nested_frame_exit_3:;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_12;
        skip_nested_handling_3:;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_12:;
        Py_XDECREF(outline_2_var_sharevideos_mobj);
        outline_2_var_sharevideos_mobj = NULL;

        goto outline_result_4;
        // Exception handler code:
        try_except_handler_12:;
        exception_keeper_type_11 = exception_type;
        exception_keeper_value_11 = exception_value;
        exception_keeper_tb_11 = exception_tb;
        exception_keeper_lineno_11 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(outline_2_var_sharevideos_mobj);
        outline_2_var_sharevideos_mobj = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_11;
        exception_value = exception_keeper_value_11;
        exception_tb = exception_keeper_tb_11;
        exception_lineno = exception_keeper_lineno_11;

        goto outline_exception_3;
        // End of try:
        NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
        return NULL;
        outline_exception_3:;
        exception_lineno = 3194;
        goto frame_exception_exit_1;
        outline_result_4:;
        assert(var_sharevideos_urls == NULL);
        var_sharevideos_urls = tmp_assign_source_184;
    }
    {
        nuitka_bool tmp_condition_result_153;
        int tmp_truth_name_103;
        CHECK_OBJECT(var_sharevideos_urls);
        tmp_truth_name_103 = CHECK_IF_TRUE(var_sharevideos_urls);
        if (tmp_truth_name_103 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3197;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_153 = tmp_truth_name_103 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_153 == NUITKA_BOOL_TRUE) {
            goto branch_yes_151;
        } else {
            goto branch_no_151;
        }
    }
    branch_yes_151:;
    {
        PyObject *tmp_called_instance_284;
        PyObject *tmp_args_element_name_409;
        PyObject *tmp_args_element_name_410;
        PyObject *tmp_args_element_name_411;
        CHECK_OBJECT(par_self);
        tmp_called_instance_284 = par_self;
        CHECK_OBJECT(var_sharevideos_urls);
        tmp_args_element_name_409 = var_sharevideos_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_410 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_name_411 = var_video_title;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3198;
        {
            PyObject *call_args[] = {tmp_args_element_name_409, tmp_args_element_name_410, tmp_args_element_name_411};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(tmp_called_instance_284, const_str_plain_playlist_from_matches, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3198;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_151:;
    {
        PyObject *tmp_assign_source_189;
        PyObject *tmp_called_instance_285;
        PyObject *tmp_mvar_value_210;
        PyObject *tmp_args_element_name_412;
        tmp_mvar_value_210 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ViqeoIE);

        if (unlikely(tmp_mvar_value_210 == NULL)) {
            tmp_mvar_value_210 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ViqeoIE);
        }

        if (tmp_mvar_value_210 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42333 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3201;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_285 = tmp_mvar_value_210;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_412 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3201;
        {
            PyObject *call_args[] = {tmp_args_element_name_412};
            tmp_assign_source_189 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_285, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_189 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3201;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_viqeo_urls == NULL);
        var_viqeo_urls = tmp_assign_source_189;
    }
    {
        nuitka_bool tmp_condition_result_154;
        int tmp_truth_name_104;
        CHECK_OBJECT(var_viqeo_urls);
        tmp_truth_name_104 = CHECK_IF_TRUE(var_viqeo_urls);
        if (tmp_truth_name_104 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3202;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_154 = tmp_truth_name_104 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_154 == NUITKA_BOOL_TRUE) {
            goto branch_yes_152;
        } else {
            goto branch_no_152;
        }
    }
    branch_yes_152:;
    {
        PyObject *tmp_called_name_151;
        PyObject *tmp_expression_name_153;
        PyObject *tmp_args_name_64;
        PyObject *tmp_tuple_element_65;
        PyObject *tmp_kw_name_64;
        PyObject *tmp_dict_key_101;
        PyObject *tmp_dict_value_101;
        PyObject *tmp_called_instance_286;
        PyObject *tmp_mvar_value_211;
        CHECK_OBJECT(par_self);
        tmp_expression_name_153 = par_self;
        tmp_called_name_151 = LOOKUP_ATTRIBUTE(tmp_expression_name_153, const_str_plain_playlist_from_matches);
        if (tmp_called_name_151 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3203;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_viqeo_urls);
        tmp_tuple_element_65 = var_viqeo_urls;
        tmp_args_name_64 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_65);
        PyTuple_SET_ITEM(tmp_args_name_64, 0, tmp_tuple_element_65);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_65 = var_video_id;
        Py_INCREF(tmp_tuple_element_65);
        PyTuple_SET_ITEM(tmp_args_name_64, 1, tmp_tuple_element_65);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_65 = var_video_title;
        Py_INCREF(tmp_tuple_element_65);
        PyTuple_SET_ITEM(tmp_args_name_64, 2, tmp_tuple_element_65);
        tmp_dict_key_101 = const_str_plain_ie;
        tmp_mvar_value_211 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ViqeoIE);

        if (unlikely(tmp_mvar_value_211 == NULL)) {
            tmp_mvar_value_211 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ViqeoIE);
        }

        if (tmp_mvar_value_211 == NULL) {
            Py_DECREF(tmp_called_name_151);
            Py_DECREF(tmp_args_name_64);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42333 ], 29, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3204;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_286 = tmp_mvar_value_211;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3204;
        tmp_dict_value_101 = CALL_METHOD_NO_ARGS(tmp_called_instance_286, const_str_plain_ie_key);
        if (tmp_dict_value_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_151);
            Py_DECREF(tmp_args_name_64);

            exception_lineno = 3204;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_64 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_64, tmp_dict_key_101, tmp_dict_value_101);
        Py_DECREF(tmp_dict_value_101);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3203;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_151, tmp_args_name_64, tmp_kw_name_64);
        Py_DECREF(tmp_called_name_151);
        Py_DECREF(tmp_args_name_64);
        Py_DECREF(tmp_kw_name_64);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3203;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_152:;
    {
        PyObject *tmp_assign_source_190;
        PyObject *tmp_called_instance_287;
        PyObject *tmp_mvar_value_212;
        PyObject *tmp_args_element_name_413;
        tmp_mvar_value_212 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ExpressenIE);

        if (unlikely(tmp_mvar_value_212 == NULL)) {
            tmp_mvar_value_212 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ExpressenIE);
        }

        if (tmp_mvar_value_212 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42362 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3206;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_287 = tmp_mvar_value_212;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_413 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3206;
        {
            PyObject *call_args[] = {tmp_args_element_name_413};
            tmp_assign_source_190 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_287, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_190 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3206;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_expressen_urls == NULL);
        var_expressen_urls = tmp_assign_source_190;
    }
    {
        nuitka_bool tmp_condition_result_155;
        int tmp_truth_name_105;
        CHECK_OBJECT(var_expressen_urls);
        tmp_truth_name_105 = CHECK_IF_TRUE(var_expressen_urls);
        if (tmp_truth_name_105 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3207;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_155 = tmp_truth_name_105 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_155 == NUITKA_BOOL_TRUE) {
            goto branch_yes_153;
        } else {
            goto branch_no_153;
        }
    }
    branch_yes_153:;
    {
        PyObject *tmp_called_name_152;
        PyObject *tmp_expression_name_154;
        PyObject *tmp_args_name_65;
        PyObject *tmp_tuple_element_66;
        PyObject *tmp_kw_name_65;
        PyObject *tmp_dict_key_102;
        PyObject *tmp_dict_value_102;
        PyObject *tmp_called_instance_288;
        PyObject *tmp_mvar_value_213;
        CHECK_OBJECT(par_self);
        tmp_expression_name_154 = par_self;
        tmp_called_name_152 = LOOKUP_ATTRIBUTE(tmp_expression_name_154, const_str_plain_playlist_from_matches);
        if (tmp_called_name_152 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3208;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_expressen_urls);
        tmp_tuple_element_66 = var_expressen_urls;
        tmp_args_name_65 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_66);
        PyTuple_SET_ITEM(tmp_args_name_65, 0, tmp_tuple_element_66);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_66 = var_video_id;
        Py_INCREF(tmp_tuple_element_66);
        PyTuple_SET_ITEM(tmp_args_name_65, 1, tmp_tuple_element_66);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_66 = var_video_title;
        Py_INCREF(tmp_tuple_element_66);
        PyTuple_SET_ITEM(tmp_args_name_65, 2, tmp_tuple_element_66);
        tmp_dict_key_102 = const_str_plain_ie;
        tmp_mvar_value_213 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ExpressenIE);

        if (unlikely(tmp_mvar_value_213 == NULL)) {
            tmp_mvar_value_213 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ExpressenIE);
        }

        if (tmp_mvar_value_213 == NULL) {
            Py_DECREF(tmp_called_name_152);
            Py_DECREF(tmp_args_name_65);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42362 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3209;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_288 = tmp_mvar_value_213;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3209;
        tmp_dict_value_102 = CALL_METHOD_NO_ARGS(tmp_called_instance_288, const_str_plain_ie_key);
        if (tmp_dict_value_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_152);
            Py_DECREF(tmp_args_name_65);

            exception_lineno = 3209;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_65 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_65, tmp_dict_key_102, tmp_dict_value_102);
        Py_DECREF(tmp_dict_value_102);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3208;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_152, tmp_args_name_65, tmp_kw_name_65);
        Py_DECREF(tmp_called_name_152);
        Py_DECREF(tmp_args_name_65);
        Py_DECREF(tmp_kw_name_65);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3208;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_153:;
    {
        PyObject *tmp_assign_source_191;
        PyObject *tmp_called_instance_289;
        PyObject *tmp_mvar_value_214;
        PyObject *tmp_args_element_name_414;
        tmp_mvar_value_214 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ZypeIE);

        if (unlikely(tmp_mvar_value_214 == NULL)) {
            tmp_mvar_value_214 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ZypeIE);
        }

        if (tmp_mvar_value_214 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42395 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3211;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_289 = tmp_mvar_value_214;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_414 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3211;
        {
            PyObject *call_args[] = {tmp_args_element_name_414};
            tmp_assign_source_191 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_289, const_str_plain__extract_urls, call_args);
        }

        if (tmp_assign_source_191 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3211;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_zype_urls == NULL);
        var_zype_urls = tmp_assign_source_191;
    }
    {
        nuitka_bool tmp_condition_result_156;
        int tmp_truth_name_106;
        CHECK_OBJECT(var_zype_urls);
        tmp_truth_name_106 = CHECK_IF_TRUE(var_zype_urls);
        if (tmp_truth_name_106 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3212;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_156 = tmp_truth_name_106 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_156 == NUITKA_BOOL_TRUE) {
            goto branch_yes_154;
        } else {
            goto branch_no_154;
        }
    }
    branch_yes_154:;
    {
        PyObject *tmp_called_name_153;
        PyObject *tmp_expression_name_155;
        PyObject *tmp_args_name_66;
        PyObject *tmp_tuple_element_67;
        PyObject *tmp_kw_name_66;
        PyObject *tmp_dict_key_103;
        PyObject *tmp_dict_value_103;
        PyObject *tmp_called_instance_290;
        PyObject *tmp_mvar_value_215;
        CHECK_OBJECT(par_self);
        tmp_expression_name_155 = par_self;
        tmp_called_name_153 = LOOKUP_ATTRIBUTE(tmp_expression_name_155, const_str_plain_playlist_from_matches);
        if (tmp_called_name_153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3213;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_zype_urls);
        tmp_tuple_element_67 = var_zype_urls;
        tmp_args_name_66 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_67);
        PyTuple_SET_ITEM(tmp_args_name_66, 0, tmp_tuple_element_67);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_67 = var_video_id;
        Py_INCREF(tmp_tuple_element_67);
        PyTuple_SET_ITEM(tmp_args_name_66, 1, tmp_tuple_element_67);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_67 = var_video_title;
        Py_INCREF(tmp_tuple_element_67);
        PyTuple_SET_ITEM(tmp_args_name_66, 2, tmp_tuple_element_67);
        tmp_dict_key_103 = const_str_plain_ie;
        tmp_mvar_value_215 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ZypeIE);

        if (unlikely(tmp_mvar_value_215 == NULL)) {
            tmp_mvar_value_215 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ZypeIE);
        }

        if (tmp_mvar_value_215 == NULL) {
            Py_DECREF(tmp_called_name_153);
            Py_DECREF(tmp_args_name_66);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42395 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3214;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_290 = tmp_mvar_value_215;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3214;
        tmp_dict_value_103 = CALL_METHOD_NO_ARGS(tmp_called_instance_290, const_str_plain_ie_key);
        if (tmp_dict_value_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_153);
            Py_DECREF(tmp_args_name_66);

            exception_lineno = 3214;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_name_66 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_66, tmp_dict_key_103, tmp_dict_value_103);
        Py_DECREF(tmp_dict_value_103);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3213;
        tmp_return_value = CALL_FUNCTION(tmp_called_name_153, tmp_args_name_66, tmp_kw_name_66);
        Py_DECREF(tmp_called_name_153);
        Py_DECREF(tmp_args_name_66);
        Py_DECREF(tmp_kw_name_66);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3213;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_154:;
    {
        PyObject *tmp_assign_source_192;
        PyObject *tmp_called_name_154;
        PyObject *tmp_expression_name_156;
        PyObject *tmp_args_name_67;
        PyObject *tmp_tuple_element_68;
        PyObject *tmp_kw_name_67;
        CHECK_OBJECT(par_self);
        tmp_expression_name_156 = par_self;
        tmp_called_name_154 = LOOKUP_ATTRIBUTE(tmp_expression_name_156, const_str_plain__parse_html5_media_entries);
        if (tmp_called_name_154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3217;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_tuple_element_68 = PyCell_GET(par_url);
        tmp_args_name_67 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_68);
        PyTuple_SET_ITEM(tmp_args_name_67, 0, tmp_tuple_element_68);
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_tuple_element_68 = PyCell_GET(var_webpage);
        Py_INCREF(tmp_tuple_element_68);
        PyTuple_SET_ITEM(tmp_args_name_67, 1, tmp_tuple_element_68);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_68 = var_video_id;
        Py_INCREF(tmp_tuple_element_68);
        PyTuple_SET_ITEM(tmp_args_name_67, 2, tmp_tuple_element_68);
        tmp_kw_name_67 = PyDict_Copy(const_dict_5c956f9cfdbfe5f24721c922f7f4ac27);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3217;
        tmp_assign_source_192 = CALL_FUNCTION(tmp_called_name_154, tmp_args_name_67, tmp_kw_name_67);
        Py_DECREF(tmp_called_name_154);
        Py_DECREF(tmp_args_name_67);
        Py_DECREF(tmp_kw_name_67);
        if (tmp_assign_source_192 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3217;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_entries == NULL);
        var_entries = tmp_assign_source_192;
    }
    {
        nuitka_bool tmp_condition_result_157;
        int tmp_truth_name_107;
        CHECK_OBJECT(var_entries);
        tmp_truth_name_107 = CHECK_IF_TRUE(var_entries);
        if (tmp_truth_name_107 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3218;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_157 = tmp_truth_name_107 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_157 == NUITKA_BOOL_TRUE) {
            goto branch_yes_155;
        } else {
            goto branch_no_155;
        }
    }
    branch_yes_155:;
    {
        nuitka_bool tmp_condition_result_158;
        PyObject *tmp_compexpr_left_54;
        PyObject *tmp_compexpr_right_54;
        PyObject *tmp_len_arg_1;
        PyObject *tmp_tmp_condition_result_158_object_1;
        int tmp_truth_name_108;
        CHECK_OBJECT(var_entries);
        tmp_len_arg_1 = var_entries;
        tmp_compexpr_left_54 = BUILTIN_LEN(tmp_len_arg_1);
        if (tmp_compexpr_left_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3219;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_54 = const_int_pos_1;
        tmp_tmp_condition_result_158_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_54, tmp_compexpr_right_54);
        Py_DECREF(tmp_compexpr_left_54);
        assert(!(tmp_tmp_condition_result_158_object_1 == NULL));
        tmp_truth_name_108 = CHECK_IF_TRUE(tmp_tmp_condition_result_158_object_1);
        assert(!(tmp_truth_name_108 == -1));
        tmp_condition_result_158 = tmp_truth_name_108 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_158_object_1);
        if (tmp_condition_result_158 == NUITKA_BOOL_TRUE) {
            goto branch_yes_156;
        } else {
            goto branch_no_156;
        }
    }
    branch_yes_156:;
    {
        PyObject *tmp_called_instance_291;
        PyObject *tmp_expression_name_157;
        PyObject *tmp_subscript_name_5;
        PyObject *tmp_call_result_29;
        PyObject *tmp_args_element_name_415;
        PyObject *tmp_dict_key_104;
        PyObject *tmp_dict_value_104;
        PyObject *tmp_dict_key_105;
        PyObject *tmp_dict_value_105;
        CHECK_OBJECT(var_entries);
        tmp_expression_name_157 = var_entries;
        tmp_subscript_name_5 = const_int_0;
        tmp_called_instance_291 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_name_157, tmp_subscript_name_5, 0);
        if (tmp_called_instance_291 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3220;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_104 = const_str_plain_id;
        CHECK_OBJECT(var_video_id);
        tmp_dict_value_104 = var_video_id;
        tmp_args_element_name_415 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_415, tmp_dict_key_104, tmp_dict_value_104);
        assert(!(tmp_res != 0));
        tmp_dict_key_105 = const_str_plain_title;
        CHECK_OBJECT(var_video_title);
        tmp_dict_value_105 = var_video_title;
        tmp_res = PyDict_SetItem(tmp_args_element_name_415, tmp_dict_key_105, tmp_dict_value_105);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3220;
        {
            PyObject *call_args[] = {tmp_args_element_name_415};
            tmp_call_result_29 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_291, const_str_plain_update, call_args);
        }

        Py_DECREF(tmp_called_instance_291);
        Py_DECREF(tmp_args_element_name_415);
        if (tmp_call_result_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3220;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_29);
    }
    goto branch_end_156;
    branch_no_156:;
    {
        PyObject *tmp_assign_source_193;
        PyObject *tmp_iter_arg_7;
        PyObject *tmp_called_name_155;
        PyObject *tmp_args_name_68;
        PyObject *tmp_tuple_element_69;
        PyObject *tmp_kw_name_68;
        tmp_called_name_155 = (PyObject *)&PyEnum_Type;
        CHECK_OBJECT(var_entries);
        tmp_tuple_element_69 = var_entries;
        tmp_args_name_68 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_69);
        PyTuple_SET_ITEM(tmp_args_name_68, 0, tmp_tuple_element_69);
        tmp_kw_name_68 = PyDict_Copy(const_dict_d86ae6d9cc5bf51b4834b1d52ac321cd);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3225;
        tmp_iter_arg_7 = CALL_FUNCTION(tmp_called_name_155, tmp_args_name_68, tmp_kw_name_68);
        Py_DECREF(tmp_args_name_68);
        Py_DECREF(tmp_kw_name_68);
        if (tmp_iter_arg_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3225;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_193 = MAKE_ITERATOR(tmp_iter_arg_7);
        Py_DECREF(tmp_iter_arg_7);
        if (tmp_assign_source_193 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3225;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_2__for_iterator == NULL);
        tmp_for_loop_2__for_iterator = tmp_assign_source_193;
    }
    // Tried code:
    loop_start_5:;
    {
        PyObject *tmp_next_source_5;
        PyObject *tmp_assign_source_194;
        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
        tmp_next_source_5 = tmp_for_loop_2__for_iterator;
        tmp_assign_source_194 = ITERATOR_NEXT(tmp_next_source_5);
        if (tmp_assign_source_194 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_5;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                exception_lineno = 3225;
                goto try_except_handler_14;
            }
        }

        {
            PyObject *old = tmp_for_loop_2__iter_value;
            tmp_for_loop_2__iter_value = tmp_assign_source_194;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_195;
        PyObject *tmp_iter_arg_8;
        CHECK_OBJECT(tmp_for_loop_2__iter_value);
        tmp_iter_arg_8 = tmp_for_loop_2__iter_value;
        tmp_assign_source_195 = MAKE_UNPACK_ITERATOR(tmp_iter_arg_8);
        if (tmp_assign_source_195 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3225;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_15;
        }
        {
            PyObject *old = tmp_tuple_unpack_2__source_iter;
            tmp_tuple_unpack_2__source_iter = tmp_assign_source_195;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_196;
        PyObject *tmp_unpack_3;
        CHECK_OBJECT(tmp_tuple_unpack_2__source_iter);
        tmp_unpack_3 = tmp_tuple_unpack_2__source_iter;
        tmp_assign_source_196 = UNPACK_NEXT(tmp_unpack_3, 0, 2);
        if (tmp_assign_source_196 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 3225;
            goto try_except_handler_16;
        }
        {
            PyObject *old = tmp_tuple_unpack_2__element_1;
            tmp_tuple_unpack_2__element_1 = tmp_assign_source_196;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_197;
        PyObject *tmp_unpack_4;
        CHECK_OBJECT(tmp_tuple_unpack_2__source_iter);
        tmp_unpack_4 = tmp_tuple_unpack_2__source_iter;
        tmp_assign_source_197 = UNPACK_NEXT(tmp_unpack_4, 1, 2);
        if (tmp_assign_source_197 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 3225;
            goto try_except_handler_16;
        }
        {
            PyObject *old = tmp_tuple_unpack_2__element_2;
            tmp_tuple_unpack_2__element_2 = tmp_assign_source_197;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_iterator_name_2;
        CHECK_OBJECT(tmp_tuple_unpack_2__source_iter);
        tmp_iterator_name_2 = tmp_tuple_unpack_2__source_iter;
        // Check if iterator has left-over elements.
        CHECK_OBJECT(tmp_iterator_name_2); assert(HAS_ITERNEXT(tmp_iterator_name_2));

        tmp_iterator_attempt = (*Py_TYPE(tmp_iterator_name_2)->tp_iternext)(tmp_iterator_name_2);

        if (likely(tmp_iterator_attempt == NULL)) {
            PyObject *error = GET_ERROR_OCCURRED();

            if (error != NULL) {
                if (EXCEPTION_MATCH_BOOL_SINGLE(error, PyExc_StopIteration)) {
                    CLEAR_ERROR_OCCURRED();
                } else {
                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);

                    type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                    exception_lineno = 3225;
                    goto try_except_handler_16;
                }
            }
        } else {
            Py_DECREF(tmp_iterator_attempt);

            exception_type = PyExc_ValueError;
            Py_INCREF(PyExc_ValueError);
            exception_value = const_str_digest_fcf040720b88d60da4ce975010c44a3a;
            Py_INCREF(exception_value);
            exception_tb = NULL;

            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 3225;
            goto try_except_handler_16;
        }
    }
    goto try_end_6;
    // Exception handler code:
    try_except_handler_16:;
    exception_keeper_type_12 = exception_type;
    exception_keeper_value_12 = exception_value;
    exception_keeper_tb_12 = exception_tb;
    exception_keeper_lineno_12 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_tuple_unpack_2__source_iter);
    Py_DECREF(tmp_tuple_unpack_2__source_iter);
    tmp_tuple_unpack_2__source_iter = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_12;
    exception_value = exception_keeper_value_12;
    exception_tb = exception_keeper_tb_12;
    exception_lineno = exception_keeper_lineno_12;

    goto try_except_handler_15;
    // End of try:
    try_end_6:;
    goto try_end_7;
    // Exception handler code:
    try_except_handler_15:;
    exception_keeper_type_13 = exception_type;
    exception_keeper_value_13 = exception_value;
    exception_keeper_tb_13 = exception_tb;
    exception_keeper_lineno_13 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_tuple_unpack_2__element_1);
    tmp_tuple_unpack_2__element_1 = NULL;

    Py_XDECREF(tmp_tuple_unpack_2__element_2);
    tmp_tuple_unpack_2__element_2 = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_13;
    exception_value = exception_keeper_value_13;
    exception_tb = exception_keeper_tb_13;
    exception_lineno = exception_keeper_lineno_13;

    goto try_except_handler_14;
    // End of try:
    try_end_7:;
    CHECK_OBJECT(tmp_tuple_unpack_2__source_iter);
    Py_DECREF(tmp_tuple_unpack_2__source_iter);
    tmp_tuple_unpack_2__source_iter = NULL;

    {
        PyObject *tmp_assign_source_198;
        CHECK_OBJECT(tmp_tuple_unpack_2__element_1);
        tmp_assign_source_198 = tmp_tuple_unpack_2__element_1;
        {
            PyObject *old = var_num;
            var_num = tmp_assign_source_198;
            Py_INCREF(var_num);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_2__element_1);
    tmp_tuple_unpack_2__element_1 = NULL;

    {
        PyObject *tmp_assign_source_199;
        CHECK_OBJECT(tmp_tuple_unpack_2__element_2);
        tmp_assign_source_199 = tmp_tuple_unpack_2__element_2;
        {
            PyObject *old = var_entry;
            var_entry = tmp_assign_source_199;
            Py_INCREF(var_entry);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_2__element_2);
    tmp_tuple_unpack_2__element_2 = NULL;

    {
        PyObject *tmp_called_name_156;
        PyObject *tmp_expression_name_158;
        PyObject *tmp_call_result_30;
        PyObject *tmp_args_element_name_416;
        PyObject *tmp_dict_key_106;
        PyObject *tmp_dict_value_106;
        PyObject *tmp_left_name_16;
        PyObject *tmp_right_name_16;
        PyObject *tmp_tuple_element_70;
        PyObject *tmp_dict_key_107;
        PyObject *tmp_dict_value_107;
        PyObject *tmp_left_name_17;
        PyObject *tmp_right_name_17;
        PyObject *tmp_tuple_element_71;
        CHECK_OBJECT(var_entry);
        tmp_expression_name_158 = var_entry;
        tmp_called_name_156 = LOOKUP_ATTRIBUTE(tmp_expression_name_158, const_str_plain_update);
        if (tmp_called_name_156 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3226;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_14;
        }
        tmp_dict_key_106 = const_str_plain_id;
        tmp_left_name_16 = const_str_digest_c302d77cd6a8cf91b717e4abfdedb2eb;
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_70 = var_video_id;
        tmp_right_name_16 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_70);
        PyTuple_SET_ITEM(tmp_right_name_16, 0, tmp_tuple_element_70);
        CHECK_OBJECT(var_num);
        tmp_tuple_element_70 = var_num;
        Py_INCREF(tmp_tuple_element_70);
        PyTuple_SET_ITEM(tmp_right_name_16, 1, tmp_tuple_element_70);
        tmp_dict_value_106 = BINARY_OPERATION_MOD_OBJECT_UNICODE_TUPLE(tmp_left_name_16, tmp_right_name_16);
        Py_DECREF(tmp_right_name_16);
        if (tmp_dict_value_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_156);

            exception_lineno = 3227;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_14;
        }
        tmp_args_element_name_416 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_416, tmp_dict_key_106, tmp_dict_value_106);
        Py_DECREF(tmp_dict_value_106);
        assert(!(tmp_res != 0));
        tmp_dict_key_107 = const_str_plain_title;
        tmp_left_name_17 = const_str_digest_29bcbb79266cfdb11ae763605d9c5a61;
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_71 = var_video_title;
        tmp_right_name_17 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_71);
        PyTuple_SET_ITEM(tmp_right_name_17, 0, tmp_tuple_element_71);
        CHECK_OBJECT(var_num);
        tmp_tuple_element_71 = var_num;
        Py_INCREF(tmp_tuple_element_71);
        PyTuple_SET_ITEM(tmp_right_name_17, 1, tmp_tuple_element_71);
        tmp_dict_value_107 = BINARY_OPERATION_MOD_OBJECT_UNICODE_TUPLE(tmp_left_name_17, tmp_right_name_17);
        Py_DECREF(tmp_right_name_17);
        if (tmp_dict_value_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_156);
            Py_DECREF(tmp_args_element_name_416);

            exception_lineno = 3228;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_14;
        }
        tmp_res = PyDict_SetItem(tmp_args_element_name_416, tmp_dict_key_107, tmp_dict_value_107);
        Py_DECREF(tmp_dict_value_107);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3226;
        tmp_call_result_30 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_156, tmp_args_element_name_416);
        Py_DECREF(tmp_called_name_156);
        Py_DECREF(tmp_args_element_name_416);
        if (tmp_call_result_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3226;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_14;
        }
        Py_DECREF(tmp_call_result_30);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 3225;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_14;
    }
    goto loop_start_5;
    loop_end_5:;
    goto try_end_8;
    // Exception handler code:
    try_except_handler_14:;
    exception_keeper_type_14 = exception_type;
    exception_keeper_value_14 = exception_value;
    exception_keeper_tb_14 = exception_tb;
    exception_keeper_lineno_14 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_14;
    exception_value = exception_keeper_value_14;
    exception_tb = exception_keeper_tb_14;
    exception_lineno = exception_keeper_lineno_14;

    goto frame_exception_exit_1;
    // End of try:
    try_end_8:;
    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;

    branch_end_156:;
    {
        PyObject *tmp_assign_source_200;
        PyObject *tmp_iter_arg_9;
        CHECK_OBJECT(var_entries);
        tmp_iter_arg_9 = var_entries;
        tmp_assign_source_200 = MAKE_ITERATOR(tmp_iter_arg_9);
        if (tmp_assign_source_200 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3230;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_3__for_iterator == NULL);
        tmp_for_loop_3__for_iterator = tmp_assign_source_200;
    }
    // Tried code:
    loop_start_6:;
    {
        PyObject *tmp_next_source_6;
        PyObject *tmp_assign_source_201;
        CHECK_OBJECT(tmp_for_loop_3__for_iterator);
        tmp_next_source_6 = tmp_for_loop_3__for_iterator;
        tmp_assign_source_201 = ITERATOR_NEXT(tmp_next_source_6);
        if (tmp_assign_source_201 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_6;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                exception_lineno = 3230;
                goto try_except_handler_17;
            }
        }

        {
            PyObject *old = tmp_for_loop_3__iter_value;
            tmp_for_loop_3__iter_value = tmp_assign_source_201;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_202;
        CHECK_OBJECT(tmp_for_loop_3__iter_value);
        tmp_assign_source_202 = tmp_for_loop_3__iter_value;
        {
            PyObject *old = var_entry;
            var_entry = tmp_assign_source_202;
            Py_INCREF(var_entry);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_called_name_157;
        PyObject *tmp_expression_name_159;
        PyObject *tmp_call_result_31;
        PyObject *tmp_args_element_name_417;
        PyObject *tmp_expression_name_160;
        PyObject *tmp_subscript_name_6;
        CHECK_OBJECT(par_self);
        tmp_expression_name_159 = par_self;
        tmp_called_name_157 = LOOKUP_ATTRIBUTE(tmp_expression_name_159, const_str_plain__sort_formats);
        if (tmp_called_name_157 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3231;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_17;
        }
        CHECK_OBJECT(var_entry);
        tmp_expression_name_160 = var_entry;
        tmp_subscript_name_6 = const_str_plain_formats;
        tmp_args_element_name_417 = LOOKUP_SUBSCRIPT(tmp_expression_name_160, tmp_subscript_name_6);
        if (tmp_args_element_name_417 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_157);

            exception_lineno = 3231;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_17;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3231;
        tmp_call_result_31 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_157, tmp_args_element_name_417);
        Py_DECREF(tmp_called_name_157);
        Py_DECREF(tmp_args_element_name_417);
        if (tmp_call_result_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3231;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_17;
        }
        Py_DECREF(tmp_call_result_31);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 3230;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_17;
    }
    goto loop_start_6;
    loop_end_6:;
    goto try_end_9;
    // Exception handler code:
    try_except_handler_17:;
    exception_keeper_type_15 = exception_type;
    exception_keeper_value_15 = exception_value;
    exception_keeper_tb_15 = exception_tb;
    exception_keeper_lineno_15 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_15;
    exception_value = exception_keeper_value_15;
    exception_tb = exception_keeper_tb_15;
    exception_lineno = exception_keeper_lineno_15;

    goto frame_exception_exit_1;
    // End of try:
    try_end_9:;
    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    {
        PyObject *tmp_called_instance_292;
        PyObject *tmp_args_element_name_418;
        PyObject *tmp_args_element_name_419;
        PyObject *tmp_args_element_name_420;
        CHECK_OBJECT(par_self);
        tmp_called_instance_292 = par_self;
        CHECK_OBJECT(var_entries);
        tmp_args_element_name_418 = var_entries;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_419 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_name_420 = var_video_title;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3232;
        {
            PyObject *call_args[] = {tmp_args_element_name_418, tmp_args_element_name_419, tmp_args_element_name_420};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(tmp_called_instance_292, const_str_plain_playlist_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3232;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_155:;
    {
        PyObject *tmp_assign_source_203;
        PyObject *tmp_called_name_158;
        PyObject *tmp_expression_name_161;
        PyObject *tmp_args_name_69;
        PyObject *tmp_tuple_element_72;
        PyObject *tmp_kw_name_69;
        PyObject *tmp_dict_key_108;
        PyObject *tmp_dict_value_108;
        PyObject *tmp_mvar_value_216;
        CHECK_OBJECT(par_self);
        tmp_expression_name_161 = par_self;
        tmp_called_name_158 = LOOKUP_ATTRIBUTE(tmp_expression_name_161, const_str_plain__find_jwplayer_data);
        if (tmp_called_name_158 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3234;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_tuple_element_72 = PyCell_GET(var_webpage);
        tmp_args_name_69 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_72);
        PyTuple_SET_ITEM(tmp_args_name_69, 0, tmp_tuple_element_72);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_72 = var_video_id;
        Py_INCREF(tmp_tuple_element_72);
        PyTuple_SET_ITEM(tmp_args_name_69, 1, tmp_tuple_element_72);
        tmp_dict_key_108 = const_str_plain_transform_source;
        tmp_mvar_value_216 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_js_to_json);

        if (unlikely(tmp_mvar_value_216 == NULL)) {
            tmp_mvar_value_216 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_js_to_json);
        }

        if (tmp_mvar_value_216 == NULL) {
            Py_DECREF(tmp_called_name_158);
            Py_DECREF(tmp_args_name_69);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33521 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3235;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_dict_value_108 = tmp_mvar_value_216;
        tmp_kw_name_69 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_kw_name_69, tmp_dict_key_108, tmp_dict_value_108);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3234;
        tmp_assign_source_203 = CALL_FUNCTION(tmp_called_name_158, tmp_args_name_69, tmp_kw_name_69);
        Py_DECREF(tmp_called_name_158);
        Py_DECREF(tmp_args_name_69);
        Py_DECREF(tmp_kw_name_69);
        if (tmp_assign_source_203 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3234;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_jwplayer_data == NULL);
        var_jwplayer_data = tmp_assign_source_203;
    }
    {
        nuitka_bool tmp_condition_result_159;
        int tmp_truth_name_109;
        CHECK_OBJECT(var_jwplayer_data);
        tmp_truth_name_109 = CHECK_IF_TRUE(var_jwplayer_data);
        if (tmp_truth_name_109 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3236;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_159 = tmp_truth_name_109 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_159 == NUITKA_BOOL_TRUE) {
            goto branch_yes_157;
        } else {
            goto branch_no_157;
        }
    }
    branch_yes_157:;
    // Tried code:
    {
        PyObject *tmp_assign_source_204;
        PyObject *tmp_called_name_159;
        PyObject *tmp_expression_name_162;
        PyObject *tmp_args_name_70;
        PyObject *tmp_tuple_element_73;
        PyObject *tmp_kw_name_70;
        PyObject *tmp_dict_key_109;
        PyObject *tmp_dict_value_109;
        PyObject *tmp_dict_key_110;
        PyObject *tmp_dict_value_110;
        CHECK_OBJECT(par_self);
        tmp_expression_name_162 = par_self;
        tmp_called_name_159 = LOOKUP_ATTRIBUTE(tmp_expression_name_162, const_str_plain__parse_jwplayer_data);
        if (tmp_called_name_159 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3238;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_18;
        }
        CHECK_OBJECT(var_jwplayer_data);
        tmp_tuple_element_73 = var_jwplayer_data;
        tmp_args_name_70 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_73);
        PyTuple_SET_ITEM(tmp_args_name_70, 0, tmp_tuple_element_73);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_73 = var_video_id;
        Py_INCREF(tmp_tuple_element_73);
        PyTuple_SET_ITEM(tmp_args_name_70, 1, tmp_tuple_element_73);
        tmp_dict_key_109 = const_str_plain_require_title;
        tmp_dict_value_109 = Py_False;
        tmp_kw_name_70 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_70, tmp_dict_key_109, tmp_dict_value_109);
        assert(!(tmp_res != 0));
        tmp_dict_key_110 = const_str_plain_base_url;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_dict_value_110 = PyCell_GET(par_url);
        tmp_res = PyDict_SetItem(tmp_kw_name_70, tmp_dict_key_110, tmp_dict_value_110);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3238;
        tmp_assign_source_204 = CALL_FUNCTION(tmp_called_name_159, tmp_args_name_70, tmp_kw_name_70);
        Py_DECREF(tmp_called_name_159);
        Py_DECREF(tmp_args_name_70);
        Py_DECREF(tmp_kw_name_70);
        if (tmp_assign_source_204 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3238;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_18;
        }
        assert(var_info == NULL);
        var_info = tmp_assign_source_204;
    }
    {
        PyObject *tmp_called_name_160;
        PyObject *tmp_mvar_value_217;
        PyObject *tmp_args_element_name_421;
        PyObject *tmp_args_element_name_422;
        tmp_mvar_value_217 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_merge_dicts);

        if (unlikely(tmp_mvar_value_217 == NULL)) {
            tmp_mvar_value_217 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_merge_dicts);
        }

        if (tmp_mvar_value_217 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 35091 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3240;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_18;
        }

        tmp_called_name_160 = tmp_mvar_value_217;
        CHECK_OBJECT(var_info);
        tmp_args_element_name_421 = var_info;
        CHECK_OBJECT(var_info_dict);
        tmp_args_element_name_422 = var_info_dict;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3240;
        {
            PyObject *call_args[] = {tmp_args_element_name_421, tmp_args_element_name_422};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_160, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3240;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_18;
        }
        goto frame_return_exit_1;
    }
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Exception handler code:
    try_except_handler_18:;
    exception_keeper_type_16 = exception_type;
    exception_keeper_value_16 = exception_value;
    exception_keeper_tb_16 = exception_tb;
    exception_keeper_lineno_16 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Preserve existing published exception.
    exception_preserved_type_2 = EXC_TYPE(PyThreadState_GET());
    Py_XINCREF(exception_preserved_type_2);
    exception_preserved_value_2 = EXC_VALUE(PyThreadState_GET());
    Py_XINCREF(exception_preserved_value_2);
    exception_preserved_tb_2 = (PyTracebackObject *)EXC_TRACEBACK(PyThreadState_GET());
    Py_XINCREF(exception_preserved_tb_2);

    if (exception_keeper_tb_16 == NULL) {
        exception_keeper_tb_16 = MAKE_TRACEBACK(frame_ae0fee46d2d491a9a1a436f870d90824, exception_keeper_lineno_16);
    } else if (exception_keeper_lineno_16 != 0) {
        exception_keeper_tb_16 = ADD_TRACEBACK(exception_keeper_tb_16, frame_ae0fee46d2d491a9a1a436f870d90824, exception_keeper_lineno_16);
    }

    NORMALIZE_EXCEPTION(&exception_keeper_type_16, &exception_keeper_value_16, &exception_keeper_tb_16);
    PyException_SetTraceback(exception_keeper_value_16, (PyObject *)exception_keeper_tb_16);
    PUBLISH_EXCEPTION(&exception_keeper_type_16, &exception_keeper_value_16, &exception_keeper_tb_16);
    // Tried code:
    {
        nuitka_bool tmp_condition_result_160;
        PyObject *tmp_compexpr_left_55;
        PyObject *tmp_compexpr_right_55;
        PyObject *tmp_mvar_value_218;
        tmp_compexpr_left_55 = EXC_TYPE(PyThreadState_GET());
        tmp_mvar_value_218 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ExtractorError);

        if (unlikely(tmp_mvar_value_218 == NULL)) {
            tmp_mvar_value_218 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ExtractorError);
        }

        if (tmp_mvar_value_218 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 27135 ], 36, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3241;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_19;
        }

        tmp_compexpr_right_55 = tmp_mvar_value_218;
        tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_55, tmp_compexpr_right_55);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3241;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_19;
        }
        tmp_condition_result_160 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_160 == NUITKA_BOOL_TRUE) {
            goto branch_yes_158;
        } else {
            goto branch_no_158;
        }
    }
    branch_yes_158:;
    tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
    if (unlikely(tmp_result == false)) {
        exception_lineno = 3237;
    }

    if (exception_tb && exception_tb->tb_frame == &frame_ae0fee46d2d491a9a1a436f870d90824->m_frame) frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = exception_tb->tb_lineno;
    type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
    goto try_except_handler_19;
    branch_no_158:;
    goto try_end_10;
    // Exception handler code:
    try_except_handler_19:;
    exception_keeper_type_17 = exception_type;
    exception_keeper_value_17 = exception_value;
    exception_keeper_tb_17 = exception_tb;
    exception_keeper_lineno_17 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Restore previous exception.
    SET_CURRENT_EXCEPTION(exception_preserved_type_2, exception_preserved_value_2, exception_preserved_tb_2);
    // Re-raise.
    exception_type = exception_keeper_type_17;
    exception_value = exception_keeper_value_17;
    exception_tb = exception_keeper_tb_17;
    exception_lineno = exception_keeper_lineno_17;

    goto frame_exception_exit_1;
    // End of try:
    try_end_10:;
    // Restore previous exception.
    SET_CURRENT_EXCEPTION(exception_preserved_type_2, exception_preserved_value_2, exception_preserved_tb_2);
    goto try_end_11;
    NUITKA_CANNOT_GET_HERE("exception handler codes exits in all cases");
    return NULL;
    // End of try:
    try_end_11:;
    branch_no_157:;
    {
        PyObject *tmp_assign_source_205;
        PyObject *tmp_called_instance_293;
        PyObject *tmp_mvar_value_219;
        PyObject *tmp_args_element_name_423;
        PyObject *tmp_args_element_name_424;
        tmp_mvar_value_219 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_219 == NULL)) {
            tmp_mvar_value_219 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_219 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3246;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_293 = tmp_mvar_value_219;
        tmp_args_element_name_423 = const_str_digest_b1c9870470c2d1b049d716886d22caf7;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_424 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3246;
        {
            PyObject *call_args[] = {tmp_args_element_name_423, tmp_args_element_name_424};
            tmp_assign_source_205 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_293, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_205 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3246;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_205;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_161;
        PyObject *tmp_compexpr_left_56;
        PyObject *tmp_compexpr_right_56;
        CHECK_OBJECT(var_mobj);
        tmp_compexpr_left_56 = var_mobj;
        tmp_compexpr_right_56 = Py_None;
        tmp_condition_result_161 = (tmp_compexpr_left_56 != tmp_compexpr_right_56) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_161 == NUITKA_BOOL_TRUE) {
            goto branch_yes_159;
        } else {
            goto branch_no_159;
        }
    }
    branch_yes_159:;
    {
        PyObject *tmp_assign_source_206;
        int tmp_or_left_truth_6;
        PyObject *tmp_or_left_value_6;
        PyObject *tmp_or_right_value_6;
        PyObject *tmp_called_name_161;
        PyObject *tmp_expression_name_163;
        PyObject *tmp_args_name_71;
        PyObject *tmp_tuple_element_74;
        PyObject *tmp_called_instance_294;
        PyObject *tmp_kw_name_71;
        PyObject *tmp_dict_key_111;
        PyObject *tmp_dict_value_111;
        PyObject *tmp_mvar_value_220;
        PyObject *tmp_dict_key_112;
        PyObject *tmp_dict_value_112;
        CHECK_OBJECT(par_self);
        tmp_expression_name_163 = par_self;
        tmp_called_name_161 = LOOKUP_ATTRIBUTE(tmp_expression_name_163, const_str_plain__parse_json);
        if (tmp_called_name_161 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3250;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_294 = var_mobj;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3251;
        tmp_tuple_element_74 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_294, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_pos_1_tuple, 0));

        if (tmp_tuple_element_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_161);

            exception_lineno = 3251;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_name_71 = PyTuple_New(2);
        PyTuple_SET_ITEM(tmp_args_name_71, 0, tmp_tuple_element_74);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_74 = var_video_id;
        Py_INCREF(tmp_tuple_element_74);
        PyTuple_SET_ITEM(tmp_args_name_71, 1, tmp_tuple_element_74);
        tmp_dict_key_111 = const_str_plain_transform_source;
        tmp_mvar_value_220 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_js_to_json);

        if (unlikely(tmp_mvar_value_220 == NULL)) {
            tmp_mvar_value_220 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_js_to_json);
        }

        if (tmp_mvar_value_220 == NULL) {
            Py_DECREF(tmp_called_name_161);
            Py_DECREF(tmp_args_name_71);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33521 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3251;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_dict_value_111 = tmp_mvar_value_220;
        tmp_kw_name_71 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_71, tmp_dict_key_111, tmp_dict_value_111);
        assert(!(tmp_res != 0));
        tmp_dict_key_112 = const_str_plain_fatal;
        tmp_dict_value_112 = Py_False;
        tmp_res = PyDict_SetItem(tmp_kw_name_71, tmp_dict_key_112, tmp_dict_value_112);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3250;
        tmp_or_left_value_6 = CALL_FUNCTION(tmp_called_name_161, tmp_args_name_71, tmp_kw_name_71);
        Py_DECREF(tmp_called_name_161);
        Py_DECREF(tmp_args_name_71);
        Py_DECREF(tmp_kw_name_71);
        if (tmp_or_left_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3250;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_6 = CHECK_IF_TRUE(tmp_or_left_value_6);
        if (tmp_or_left_truth_6 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_6);

            exception_lineno = 3252;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_6 == 1) {
            goto or_left_6;
        } else {
            goto or_right_6;
        }
        or_right_6:;
        Py_DECREF(tmp_or_left_value_6);
        tmp_or_right_value_6 = PyList_New(0);
        tmp_assign_source_206 = tmp_or_right_value_6;
        goto or_end_6;
        or_left_6:;
        tmp_assign_source_206 = tmp_or_left_value_6;
        or_end_6:;
        assert(var_sources == NULL);
        var_sources = tmp_assign_source_206;
    }
    {
        nuitka_bool tmp_condition_result_162;
        PyObject *tmp_operand_name_7;
        PyObject *tmp_isinstance_inst_1;
        PyObject *tmp_isinstance_cls_1;
        CHECK_OBJECT(var_sources);
        tmp_isinstance_inst_1 = var_sources;
        tmp_isinstance_cls_1 = (PyObject *)&PyList_Type;
        tmp_res = Nuitka_IsInstance(tmp_isinstance_inst_1, tmp_isinstance_cls_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3253;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_operand_name_7 = (tmp_res != 0) ? Py_True : Py_False;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_7);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3253;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_162 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_162 == NUITKA_BOOL_TRUE) {
            goto branch_yes_160;
        } else {
            goto branch_no_160;
        }
    }
    branch_yes_160:;
    {
        PyObject *tmp_assign_source_207;
        PyObject *tmp_list_element_2;
        CHECK_OBJECT(var_sources);
        tmp_list_element_2 = var_sources;
        tmp_assign_source_207 = PyList_New(1);
        Py_INCREF(tmp_list_element_2);
        PyList_SET_ITEM(tmp_assign_source_207, 0, tmp_list_element_2);
        {
            PyObject *old = var_sources;
            assert(old != NULL);
            var_sources = tmp_assign_source_207;
            Py_DECREF(old);
        }

    }
    branch_no_160:;
    {
        PyObject *tmp_assign_source_208;
        tmp_assign_source_208 = PyList_New(0);
        assert(var_formats == NULL);
        var_formats = tmp_assign_source_208;
    }
    {
        PyObject *tmp_assign_source_209;
        PyObject *tmp_iter_arg_10;
        CHECK_OBJECT(var_sources);
        tmp_iter_arg_10 = var_sources;
        tmp_assign_source_209 = MAKE_ITERATOR(tmp_iter_arg_10);
        if (tmp_assign_source_209 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3256;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_4__for_iterator == NULL);
        tmp_for_loop_4__for_iterator = tmp_assign_source_209;
    }
    // Tried code:
    loop_start_7:;
    {
        PyObject *tmp_next_source_7;
        PyObject *tmp_assign_source_210;
        CHECK_OBJECT(tmp_for_loop_4__for_iterator);
        tmp_next_source_7 = tmp_for_loop_4__for_iterator;
        tmp_assign_source_210 = ITERATOR_NEXT(tmp_next_source_7);
        if (tmp_assign_source_210 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_7;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                exception_lineno = 3256;
                goto try_except_handler_20;
            }
        }

        {
            PyObject *old = tmp_for_loop_4__iter_value;
            tmp_for_loop_4__iter_value = tmp_assign_source_210;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_211;
        CHECK_OBJECT(tmp_for_loop_4__iter_value);
        tmp_assign_source_211 = tmp_for_loop_4__iter_value;
        {
            PyObject *old = var_source;
            var_source = tmp_assign_source_211;
            Py_INCREF(var_source);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_212;
        PyObject *tmp_called_instance_295;
        CHECK_OBJECT(var_source);
        tmp_called_instance_295 = var_source;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3257;
        tmp_assign_source_212 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_295, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_plain_src_tuple, 0));

        if (tmp_assign_source_212 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3257;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        {
            PyObject *old = var_src;
            var_src = tmp_assign_source_212;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_163;
        int tmp_or_left_truth_7;
        nuitka_bool tmp_or_left_value_7;
        nuitka_bool tmp_or_right_value_7;
        PyObject *tmp_operand_name_8;
        PyObject *tmp_operand_name_9;
        PyObject *tmp_isinstance_inst_2;
        PyObject *tmp_isinstance_cls_2;
        PyObject *tmp_mvar_value_221;
        CHECK_OBJECT(var_src);
        tmp_operand_name_8 = var_src;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_8);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3258;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_or_left_value_7 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_left_truth_7 = tmp_or_left_value_7 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_7 == 1) {
            goto or_left_7;
        } else {
            goto or_right_7;
        }
        or_right_7:;
        CHECK_OBJECT(var_src);
        tmp_isinstance_inst_2 = var_src;
        tmp_mvar_value_221 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_str);

        if (unlikely(tmp_mvar_value_221 == NULL)) {
            tmp_mvar_value_221 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_str);
        }

        if (tmp_mvar_value_221 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 26637 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3258;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_isinstance_cls_2 = tmp_mvar_value_221;
        tmp_res = Nuitka_IsInstance(tmp_isinstance_inst_2, tmp_isinstance_cls_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3258;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_operand_name_9 = (tmp_res != 0) ? Py_True : Py_False;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_9);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3258;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_or_right_value_7 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_163 = tmp_or_right_value_7;
        goto or_end_7;
        or_left_7:;
        tmp_condition_result_163 = tmp_or_left_value_7;
        or_end_7:;
        if (tmp_condition_result_163 == NUITKA_BOOL_TRUE) {
            goto branch_yes_161;
        } else {
            goto branch_no_161;
        }
    }
    branch_yes_161:;
    goto loop_start_7;
    branch_no_161:;
    {
        PyObject *tmp_assign_source_213;
        PyObject *tmp_called_instance_296;
        PyObject *tmp_mvar_value_222;
        PyObject *tmp_args_element_name_425;
        PyObject *tmp_args_element_name_426;
        tmp_mvar_value_222 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urlparse);

        if (unlikely(tmp_mvar_value_222 == NULL)) {
            tmp_mvar_value_222 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_urlparse);
        }

        if (tmp_mvar_value_222 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 32106 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3260;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_called_instance_296 = tmp_mvar_value_222;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_425 = PyCell_GET(par_url);
        CHECK_OBJECT(var_src);
        tmp_args_element_name_426 = var_src;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3260;
        {
            PyObject *call_args[] = {tmp_args_element_name_425, tmp_args_element_name_426};
            tmp_assign_source_213 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_296, const_str_plain_urljoin, call_args);
        }

        if (tmp_assign_source_213 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3260;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        {
            PyObject *old = var_src;
            assert(old != NULL);
            var_src = tmp_assign_source_213;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_214;
        PyObject *tmp_called_instance_297;
        CHECK_OBJECT(var_source);
        tmp_called_instance_297 = var_source;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3261;
        tmp_assign_source_214 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_297, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_plain_type_tuple, 0));

        if (tmp_assign_source_214 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3261;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        {
            PyObject *old = var_src_type;
            var_src_type = tmp_assign_source_214;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_164;
        PyObject *tmp_isinstance_inst_3;
        PyObject *tmp_isinstance_cls_3;
        PyObject *tmp_mvar_value_223;
        CHECK_OBJECT(var_src_type);
        tmp_isinstance_inst_3 = var_src_type;
        tmp_mvar_value_223 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_str);

        if (unlikely(tmp_mvar_value_223 == NULL)) {
            tmp_mvar_value_223 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_str);
        }

        if (tmp_mvar_value_223 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 26637 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3262;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_isinstance_cls_3 = tmp_mvar_value_223;
        tmp_res = Nuitka_IsInstance(tmp_isinstance_inst_3, tmp_isinstance_cls_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3262;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_condition_result_164 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_164 == NUITKA_BOOL_TRUE) {
            goto branch_yes_162;
        } else {
            goto branch_no_162;
        }
    }
    branch_yes_162:;
    {
        PyObject *tmp_assign_source_215;
        PyObject *tmp_called_instance_298;
        CHECK_OBJECT(var_src_type);
        tmp_called_instance_298 = var_src_type;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3263;
        tmp_assign_source_215 = CALL_METHOD_NO_ARGS(tmp_called_instance_298, const_str_plain_lower);
        if (tmp_assign_source_215 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3263;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        {
            PyObject *old = var_src_type;
            assert(old != NULL);
            var_src_type = tmp_assign_source_215;
            Py_DECREF(old);
        }

    }
    branch_no_162:;
    {
        PyObject *tmp_assign_source_216;
        PyObject *tmp_called_instance_299;
        PyObject *tmp_called_name_162;
        PyObject *tmp_mvar_value_224;
        PyObject *tmp_args_element_name_427;
        tmp_mvar_value_224 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_determine_ext);

        if (unlikely(tmp_mvar_value_224 == NULL)) {
            tmp_mvar_value_224 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_determine_ext);
        }

        if (tmp_mvar_value_224 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 27560 ], 35, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3264;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_called_name_162 = tmp_mvar_value_224;
        CHECK_OBJECT(var_src);
        tmp_args_element_name_427 = var_src;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3264;
        tmp_called_instance_299 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_162, tmp_args_element_name_427);
        if (tmp_called_instance_299 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3264;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3264;
        tmp_assign_source_216 = CALL_METHOD_NO_ARGS(tmp_called_instance_299, const_str_plain_lower);
        Py_DECREF(tmp_called_instance_299);
        if (tmp_assign_source_216 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3264;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        {
            PyObject *old = var_ext;
            var_ext = tmp_assign_source_216;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_165;
        PyObject *tmp_compexpr_left_57;
        PyObject *tmp_compexpr_right_57;
        PyObject *tmp_tmp_condition_result_165_object_1;
        int tmp_truth_name_110;
        CHECK_OBJECT(var_src_type);
        tmp_compexpr_left_57 = var_src_type;
        tmp_compexpr_right_57 = const_str_digest_fd43f707714d01c0a23f4a9ae8dd5281;
        tmp_tmp_condition_result_165_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_57, tmp_compexpr_right_57);
        if (tmp_tmp_condition_result_165_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3265;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_truth_name_110 = CHECK_IF_TRUE(tmp_tmp_condition_result_165_object_1);
        if (tmp_truth_name_110 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_condition_result_165_object_1);

            exception_lineno = 3265;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_condition_result_165 = tmp_truth_name_110 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_165_object_1);
        if (tmp_condition_result_165 == NUITKA_BOOL_TRUE) {
            goto branch_yes_163;
        } else {
            goto branch_no_163;
        }
    }
    branch_yes_163:;
    {
        PyObject *tmp_called_name_163;
        PyObject *tmp_expression_name_164;
        PyObject *tmp_args_element_name_428;
        PyObject *tmp_args_element_name_429;
        PyObject *tmp_called_instance_300;
        PyObject *tmp_mvar_value_225;
        CHECK_OBJECT(par_self);
        tmp_expression_name_164 = par_self;
        tmp_called_name_163 = LOOKUP_ATTRIBUTE(tmp_expression_name_164, const_str_plain_url_result);
        if (tmp_called_name_163 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3266;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        CHECK_OBJECT(var_src);
        tmp_args_element_name_428 = var_src;
        tmp_mvar_value_225 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YoutubeIE);

        if (unlikely(tmp_mvar_value_225 == NULL)) {
            tmp_mvar_value_225 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_YoutubeIE);
        }

        if (tmp_mvar_value_225 == NULL) {
            Py_DECREF(tmp_called_name_163);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33686 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3266;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_called_instance_300 = tmp_mvar_value_225;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3266;
        tmp_args_element_name_429 = CALL_METHOD_NO_ARGS(tmp_called_instance_300, const_str_plain_ie_key);
        if (tmp_args_element_name_429 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_163);

            exception_lineno = 3266;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3266;
        {
            PyObject *call_args[] = {tmp_args_element_name_428, tmp_args_element_name_429};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_163, call_args);
        }

        Py_DECREF(tmp_called_name_163);
        Py_DECREF(tmp_args_element_name_429);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3266;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        goto try_return_handler_20;
    }
    branch_no_163:;
    {
        nuitka_bool tmp_condition_result_166;
        int tmp_or_left_truth_8;
        nuitka_bool tmp_or_left_value_8;
        nuitka_bool tmp_or_right_value_8;
        PyObject *tmp_compexpr_left_58;
        PyObject *tmp_compexpr_right_58;
        PyObject *tmp_tmp_or_left_value_8_object_1;
        int tmp_truth_name_111;
        PyObject *tmp_compexpr_left_59;
        PyObject *tmp_compexpr_right_59;
        PyObject *tmp_tmp_or_right_value_8_object_1;
        int tmp_truth_name_112;
        CHECK_OBJECT(var_src_type);
        tmp_compexpr_left_58 = var_src_type;
        tmp_compexpr_right_58 = const_str_digest_0d25277cb690620921ea9198bc861230;
        tmp_tmp_or_left_value_8_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_58, tmp_compexpr_right_58);
        if (tmp_tmp_or_left_value_8_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3267;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_truth_name_111 = CHECK_IF_TRUE(tmp_tmp_or_left_value_8_object_1);
        if (tmp_truth_name_111 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_or_left_value_8_object_1);

            exception_lineno = 3267;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_or_left_value_8 = tmp_truth_name_111 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_or_left_value_8_object_1);
        tmp_or_left_truth_8 = tmp_or_left_value_8 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_8 == 1) {
            goto or_left_8;
        } else {
            goto or_right_8;
        }
        or_right_8:;
        CHECK_OBJECT(var_ext);
        tmp_compexpr_left_59 = var_ext;
        tmp_compexpr_right_59 = const_str_plain_mpd;
        tmp_tmp_or_right_value_8_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_59, tmp_compexpr_right_59);
        if (tmp_tmp_or_right_value_8_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3267;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_truth_name_112 = CHECK_IF_TRUE(tmp_tmp_or_right_value_8_object_1);
        if (tmp_truth_name_112 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_or_right_value_8_object_1);

            exception_lineno = 3267;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_or_right_value_8 = tmp_truth_name_112 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_or_right_value_8_object_1);
        tmp_condition_result_166 = tmp_or_right_value_8;
        goto or_end_8;
        or_left_8:;
        tmp_condition_result_166 = tmp_or_left_value_8;
        or_end_8:;
        if (tmp_condition_result_166 == NUITKA_BOOL_TRUE) {
            goto branch_yes_164;
        } else {
            goto branch_no_164;
        }
    }
    branch_yes_164:;
    {
        PyObject *tmp_called_name_164;
        PyObject *tmp_expression_name_165;
        PyObject *tmp_call_result_32;
        PyObject *tmp_args_element_name_430;
        PyObject *tmp_called_name_165;
        PyObject *tmp_expression_name_166;
        PyObject *tmp_args_name_72;
        PyObject *tmp_tuple_element_75;
        PyObject *tmp_kw_name_72;
        CHECK_OBJECT(var_formats);
        tmp_expression_name_165 = var_formats;
        tmp_called_name_164 = LOOKUP_ATTRIBUTE(tmp_expression_name_165, const_str_plain_extend);
        if (tmp_called_name_164 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3268;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        CHECK_OBJECT(par_self);
        tmp_expression_name_166 = par_self;
        tmp_called_name_165 = LOOKUP_ATTRIBUTE(tmp_expression_name_166, const_str_plain__extract_mpd_formats);
        if (tmp_called_name_165 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_164);

            exception_lineno = 3268;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        CHECK_OBJECT(var_src);
        tmp_tuple_element_75 = var_src;
        tmp_args_name_72 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_75);
        PyTuple_SET_ITEM(tmp_args_name_72, 0, tmp_tuple_element_75);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_75 = var_video_id;
        Py_INCREF(tmp_tuple_element_75);
        PyTuple_SET_ITEM(tmp_args_name_72, 1, tmp_tuple_element_75);
        tmp_kw_name_72 = PyDict_Copy(const_dict_8fc357692d32e37b18c1bc5cb8987ab4);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3268;
        tmp_args_element_name_430 = CALL_FUNCTION(tmp_called_name_165, tmp_args_name_72, tmp_kw_name_72);
        Py_DECREF(tmp_called_name_165);
        Py_DECREF(tmp_args_name_72);
        Py_DECREF(tmp_kw_name_72);
        if (tmp_args_element_name_430 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_164);

            exception_lineno = 3268;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3268;
        tmp_call_result_32 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_164, tmp_args_element_name_430);
        Py_DECREF(tmp_called_name_164);
        Py_DECREF(tmp_args_element_name_430);
        if (tmp_call_result_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3268;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        Py_DECREF(tmp_call_result_32);
    }
    goto branch_end_164;
    branch_no_164:;
    {
        nuitka_bool tmp_condition_result_167;
        int tmp_or_left_truth_9;
        nuitka_bool tmp_or_left_value_9;
        nuitka_bool tmp_or_right_value_9;
        PyObject *tmp_compexpr_left_60;
        PyObject *tmp_compexpr_right_60;
        PyObject *tmp_tmp_or_left_value_9_object_1;
        int tmp_truth_name_113;
        PyObject *tmp_compexpr_left_61;
        PyObject *tmp_compexpr_right_61;
        PyObject *tmp_tmp_or_right_value_9_object_1;
        int tmp_truth_name_114;
        CHECK_OBJECT(var_src_type);
        tmp_compexpr_left_60 = var_src_type;
        tmp_compexpr_right_60 = const_str_digest_5a61248508ad5ccd11e82f155deb0ceb;
        tmp_tmp_or_left_value_9_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_60, tmp_compexpr_right_60);
        if (tmp_tmp_or_left_value_9_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3270;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_truth_name_113 = CHECK_IF_TRUE(tmp_tmp_or_left_value_9_object_1);
        if (tmp_truth_name_113 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_or_left_value_9_object_1);

            exception_lineno = 3270;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_or_left_value_9 = tmp_truth_name_113 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_or_left_value_9_object_1);
        tmp_or_left_truth_9 = tmp_or_left_value_9 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_9 == 1) {
            goto or_left_9;
        } else {
            goto or_right_9;
        }
        or_right_9:;
        CHECK_OBJECT(var_ext);
        tmp_compexpr_left_61 = var_ext;
        tmp_compexpr_right_61 = const_str_plain_m3u8;
        tmp_tmp_or_right_value_9_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_61, tmp_compexpr_right_61);
        if (tmp_tmp_or_right_value_9_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3270;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_truth_name_114 = CHECK_IF_TRUE(tmp_tmp_or_right_value_9_object_1);
        if (tmp_truth_name_114 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_or_right_value_9_object_1);

            exception_lineno = 3270;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_or_right_value_9 = tmp_truth_name_114 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_or_right_value_9_object_1);
        tmp_condition_result_167 = tmp_or_right_value_9;
        goto or_end_9;
        or_left_9:;
        tmp_condition_result_167 = tmp_or_left_value_9;
        or_end_9:;
        if (tmp_condition_result_167 == NUITKA_BOOL_TRUE) {
            goto branch_yes_165;
        } else {
            goto branch_no_165;
        }
    }
    branch_yes_165:;
    {
        PyObject *tmp_called_name_166;
        PyObject *tmp_expression_name_167;
        PyObject *tmp_call_result_33;
        PyObject *tmp_args_element_name_431;
        PyObject *tmp_called_name_167;
        PyObject *tmp_expression_name_168;
        PyObject *tmp_args_name_73;
        PyObject *tmp_tuple_element_76;
        PyObject *tmp_kw_name_73;
        CHECK_OBJECT(var_formats);
        tmp_expression_name_167 = var_formats;
        tmp_called_name_166 = LOOKUP_ATTRIBUTE(tmp_expression_name_167, const_str_plain_extend);
        if (tmp_called_name_166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3271;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        CHECK_OBJECT(par_self);
        tmp_expression_name_168 = par_self;
        tmp_called_name_167 = LOOKUP_ATTRIBUTE(tmp_expression_name_168, const_str_plain__extract_m3u8_formats);
        if (tmp_called_name_167 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_166);

            exception_lineno = 3271;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        CHECK_OBJECT(var_src);
        tmp_tuple_element_76 = var_src;
        tmp_args_name_73 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_76);
        PyTuple_SET_ITEM(tmp_args_name_73, 0, tmp_tuple_element_76);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_76 = var_video_id;
        Py_INCREF(tmp_tuple_element_76);
        PyTuple_SET_ITEM(tmp_args_name_73, 1, tmp_tuple_element_76);
        tmp_tuple_element_76 = const_str_plain_mp4;
        Py_INCREF(tmp_tuple_element_76);
        PyTuple_SET_ITEM(tmp_args_name_73, 2, tmp_tuple_element_76);
        tmp_kw_name_73 = PyDict_Copy(const_dict_ba8b4a712990d1847d0cff50227bd4b0);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3271;
        tmp_args_element_name_431 = CALL_FUNCTION(tmp_called_name_167, tmp_args_name_73, tmp_kw_name_73);
        Py_DECREF(tmp_called_name_167);
        Py_DECREF(tmp_args_name_73);
        Py_DECREF(tmp_kw_name_73);
        if (tmp_args_element_name_431 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_166);

            exception_lineno = 3271;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3271;
        tmp_call_result_33 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_166, tmp_args_element_name_431);
        Py_DECREF(tmp_called_name_166);
        Py_DECREF(tmp_args_element_name_431);
        if (tmp_call_result_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3271;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        Py_DECREF(tmp_call_result_33);
    }
    goto branch_end_165;
    branch_no_165:;
    {
        PyObject *tmp_called_name_168;
        PyObject *tmp_expression_name_169;
        PyObject *tmp_call_result_34;
        PyObject *tmp_args_element_name_432;
        PyObject *tmp_dict_key_113;
        PyObject *tmp_dict_value_113;
        PyObject *tmp_dict_key_114;
        PyObject *tmp_dict_value_114;
        nuitka_bool tmp_condition_result_168;
        PyObject *tmp_compexpr_left_62;
        PyObject *tmp_compexpr_right_62;
        PyObject *tmp_mvar_value_226;
        int tmp_or_left_truth_10;
        PyObject *tmp_or_left_value_10;
        PyObject *tmp_or_right_value_10;
        PyObject *tmp_called_name_169;
        PyObject *tmp_mvar_value_227;
        PyObject *tmp_args_element_name_433;
        CHECK_OBJECT(var_formats);
        tmp_expression_name_169 = var_formats;
        tmp_called_name_168 = LOOKUP_ATTRIBUTE(tmp_expression_name_169, const_str_plain_append);
        if (tmp_called_name_168 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3275;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_dict_key_113 = const_str_plain_url;
        CHECK_OBJECT(var_src);
        tmp_dict_value_113 = var_src;
        tmp_args_element_name_432 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_432, tmp_dict_key_113, tmp_dict_value_113);
        assert(!(tmp_res != 0));
        tmp_dict_key_114 = const_str_plain_ext;
        CHECK_OBJECT(var_ext);
        tmp_compexpr_left_62 = var_ext;
        tmp_mvar_value_226 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_KNOWN_EXTENSIONS);

        if (unlikely(tmp_mvar_value_226 == NULL)) {
            tmp_mvar_value_226 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_KNOWN_EXTENSIONS);
        }

        if (tmp_mvar_value_226 == NULL) {
            Py_DECREF(tmp_called_name_168);
            Py_DECREF(tmp_args_element_name_432);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 35705 ], 38, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3278;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_compexpr_right_62 = tmp_mvar_value_226;
        tmp_res = PySequence_Contains(tmp_compexpr_right_62, tmp_compexpr_left_62);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_168);
            Py_DECREF(tmp_args_element_name_432);

            exception_lineno = 3278;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_condition_result_168 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_168 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_3;
        } else {
            goto condexpr_false_3;
        }
        condexpr_true_3:;
        tmp_mvar_value_227 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_mimetype2ext);

        if (unlikely(tmp_mvar_value_227 == NULL)) {
            tmp_mvar_value_227 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_mimetype2ext);
        }

        if (tmp_mvar_value_227 == NULL) {
            Py_DECREF(tmp_called_name_168);
            Py_DECREF(tmp_args_element_name_432);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 34619 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3277;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_called_name_169 = tmp_mvar_value_227;
        CHECK_OBJECT(var_src_type);
        tmp_args_element_name_433 = var_src_type;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3277;
        tmp_or_left_value_10 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_169, tmp_args_element_name_433);
        if (tmp_or_left_value_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_168);
            Py_DECREF(tmp_args_element_name_432);

            exception_lineno = 3277;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_or_left_truth_10 = CHECK_IF_TRUE(tmp_or_left_value_10);
        if (tmp_or_left_truth_10 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_168);
            Py_DECREF(tmp_args_element_name_432);
            Py_DECREF(tmp_or_left_value_10);

            exception_lineno = 3278;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        if (tmp_or_left_truth_10 == 1) {
            goto or_left_10;
        } else {
            goto or_right_10;
        }
        or_right_10:;
        Py_DECREF(tmp_or_left_value_10);
        CHECK_OBJECT(var_ext);
        tmp_or_right_value_10 = var_ext;
        Py_INCREF(tmp_or_right_value_10);
        tmp_dict_value_114 = tmp_or_right_value_10;
        goto or_end_10;
        or_left_10:;
        tmp_dict_value_114 = tmp_or_left_value_10;
        or_end_10:;
        goto condexpr_end_3;
        condexpr_false_3:;
        tmp_dict_value_114 = const_str_plain_mp4;
        Py_INCREF(tmp_dict_value_114);
        condexpr_end_3:;
        tmp_res = PyDict_SetItem(tmp_args_element_name_432, tmp_dict_key_114, tmp_dict_value_114);
        Py_DECREF(tmp_dict_value_114);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3275;
        tmp_call_result_34 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_168, tmp_args_element_name_432);
        Py_DECREF(tmp_called_name_168);
        Py_DECREF(tmp_args_element_name_432);
        if (tmp_call_result_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3275;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        Py_DECREF(tmp_call_result_34);
    }
    branch_end_165:;
    branch_end_164:;
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 3256;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_20;
    }
    goto loop_start_7;
    loop_end_7:;
    goto try_end_12;
    // Return handler code:
    try_return_handler_20:;
    CHECK_OBJECT(tmp_for_loop_4__iter_value);
    Py_DECREF(tmp_for_loop_4__iter_value);
    tmp_for_loop_4__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_4__for_iterator);
    Py_DECREF(tmp_for_loop_4__for_iterator);
    tmp_for_loop_4__for_iterator = NULL;

    goto frame_return_exit_1;
    // Exception handler code:
    try_except_handler_20:;
    exception_keeper_type_18 = exception_type;
    exception_keeper_value_18 = exception_value;
    exception_keeper_tb_18 = exception_tb;
    exception_keeper_lineno_18 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_4__iter_value);
    tmp_for_loop_4__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_4__for_iterator);
    Py_DECREF(tmp_for_loop_4__for_iterator);
    tmp_for_loop_4__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_18;
    exception_value = exception_keeper_value_18;
    exception_tb = exception_keeper_tb_18;
    exception_lineno = exception_keeper_lineno_18;

    goto frame_exception_exit_1;
    // End of try:
    try_end_12:;
    Py_XDECREF(tmp_for_loop_4__iter_value);
    tmp_for_loop_4__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_4__for_iterator);
    Py_DECREF(tmp_for_loop_4__for_iterator);
    tmp_for_loop_4__for_iterator = NULL;

    {
        nuitka_bool tmp_condition_result_169;
        int tmp_truth_name_115;
        CHECK_OBJECT(var_formats);
        tmp_truth_name_115 = CHECK_IF_TRUE(var_formats);
        assert(!(tmp_truth_name_115 == -1));
        tmp_condition_result_169 = tmp_truth_name_115 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_169 == NUITKA_BOOL_TRUE) {
            goto branch_yes_166;
        } else {
            goto branch_no_166;
        }
    }
    branch_yes_166:;
    {
        PyObject *tmp_called_instance_301;
        PyObject *tmp_call_result_35;
        PyObject *tmp_args_element_name_434;
        CHECK_OBJECT(par_self);
        tmp_called_instance_301 = par_self;
        CHECK_OBJECT(var_formats);
        tmp_args_element_name_434 = var_formats;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3281;
        {
            PyObject *call_args[] = {tmp_args_element_name_434};
            tmp_call_result_35 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_301, const_str_plain__sort_formats, call_args);
        }

        if (tmp_call_result_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3281;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_35);
    }
    CHECK_OBJECT(var_formats);
    tmp_dictset_value = var_formats;
    CHECK_OBJECT(var_info_dict);
    tmp_dictset_dict = var_info_dict;
    tmp_dictset_key = const_str_plain_formats;
    tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);
    assert(!(tmp_res != 0));
    CHECK_OBJECT(var_info_dict);
    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_166:;
    branch_no_159:;
    {
        PyObject *tmp_assign_source_217;
        PyObject *tmp_called_name_170;
        PyObject *tmp_expression_name_170;
        PyObject *tmp_args_name_74;
        PyObject *tmp_tuple_element_77;
        PyObject *tmp_kw_name_74;
        CHECK_OBJECT(par_self);
        tmp_expression_name_170 = par_self;
        tmp_called_name_170 = LOOKUP_ATTRIBUTE(tmp_expression_name_170, const_str_plain__search_json_ld);
        if (tmp_called_name_170 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3286;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_tuple_element_77 = PyCell_GET(var_webpage);
        tmp_args_name_74 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_77);
        PyTuple_SET_ITEM(tmp_args_name_74, 0, tmp_tuple_element_77);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_77 = var_video_id;
        Py_INCREF(tmp_tuple_element_77);
        PyTuple_SET_ITEM(tmp_args_name_74, 1, tmp_tuple_element_77);
        tmp_kw_name_74 = DEEP_COPY(const_dict_57ffedba433d661c8155f7a0ce2bd979);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3286;
        tmp_assign_source_217 = CALL_FUNCTION(tmp_called_name_170, tmp_args_name_74, tmp_kw_name_74);
        Py_DECREF(tmp_called_name_170);
        Py_DECREF(tmp_args_name_74);
        Py_DECREF(tmp_kw_name_74);
        if (tmp_assign_source_217 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3286;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_json_ld == NULL);
        var_json_ld = tmp_assign_source_217;
    }
    {
        nuitka_bool tmp_condition_result_170;
        PyObject *tmp_called_instance_302;
        PyObject *tmp_call_result_36;
        int tmp_truth_name_116;
        CHECK_OBJECT(var_json_ld);
        tmp_called_instance_302 = var_json_ld;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3288;
        tmp_call_result_36 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_302, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_plain_url_tuple, 0));

        if (tmp_call_result_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3288;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_116 = CHECK_IF_TRUE(tmp_call_result_36);
        if (tmp_truth_name_116 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_36);

            exception_lineno = 3288;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_170 = tmp_truth_name_116 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_36);
        if (tmp_condition_result_170 == NUITKA_BOOL_TRUE) {
            goto branch_yes_167;
        } else {
            goto branch_no_167;
        }
    }
    branch_yes_167:;
    {
        PyObject *tmp_called_name_171;
        PyObject *tmp_mvar_value_228;
        PyObject *tmp_args_element_name_435;
        PyObject *tmp_args_element_name_436;
        tmp_mvar_value_228 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_merge_dicts);

        if (unlikely(tmp_mvar_value_228 == NULL)) {
            tmp_mvar_value_228 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_merge_dicts);
        }

        if (tmp_mvar_value_228 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 35091 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3289;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_171 = tmp_mvar_value_228;
        CHECK_OBJECT(var_json_ld);
        tmp_args_element_name_435 = var_json_ld;
        CHECK_OBJECT(var_info_dict);
        tmp_args_element_name_436 = var_info_dict;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3289;
        {
            PyObject *call_args[] = {tmp_args_element_name_435, tmp_args_element_name_436};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_171, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3289;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_167:;
    {
        PyObject *tmp_assign_source_218;
        tmp_assign_source_218 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_6_check_video();



        assert(PyCell_GET(var_check_video) == NULL);
        PyCell_SET(var_check_video, tmp_assign_source_218);

    }
    {
        PyObject *tmp_assign_source_219;
        tmp_assign_source_219 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_7_filter_video();

        ((struct Nuitka_FunctionObject *)tmp_assign_source_219)->m_closure[0] = var_check_video;
        Py_INCREF(((struct Nuitka_FunctionObject *)tmp_assign_source_219)->m_closure[0]);


        assert(var_filter_video == NULL);
        var_filter_video = tmp_assign_source_219;
    }
    {
        PyObject *tmp_assign_source_220;
        PyObject *tmp_called_name_172;
        PyObject *tmp_args_element_name_437;
        PyObject *tmp_called_instance_303;
        PyObject *tmp_mvar_value_229;
        PyObject *tmp_args_element_name_438;
        PyObject *tmp_args_element_name_439;
        CHECK_OBJECT(var_filter_video);
        tmp_called_name_172 = var_filter_video;
        tmp_mvar_value_229 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_229 == NULL)) {
            tmp_mvar_value_229 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_229 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3304;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_303 = tmp_mvar_value_229;
        tmp_args_element_name_438 = const_str_digest_d027f4adb63c7ea8a5f2882a40ce715a;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_439 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3304;
        {
            PyObject *call_args[] = {tmp_args_element_name_438, tmp_args_element_name_439};
            tmp_args_element_name_437 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_303, const_str_plain_findall, call_args);
        }

        if (tmp_args_element_name_437 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3304;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3304;
        tmp_assign_source_220 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_172, tmp_args_element_name_437);
        Py_DECREF(tmp_args_element_name_437);
        if (tmp_assign_source_220 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3304;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_found == NULL);
        var_found = tmp_assign_source_220;
    }
    {
        nuitka_bool tmp_condition_result_171;
        PyObject *tmp_operand_name_10;
        CHECK_OBJECT(var_found);
        tmp_operand_name_10 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_10);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3305;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_171 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_171 == NUITKA_BOOL_TRUE) {
            goto branch_yes_168;
        } else {
            goto branch_no_168;
        }
    }
    branch_yes_168:;
    {
        PyObject *tmp_assign_source_221;
        PyObject *tmp_called_name_173;
        PyObject *tmp_args_element_name_440;
        PyObject *tmp_called_instance_304;
        PyObject *tmp_mvar_value_230;
        PyObject *tmp_args_element_name_441;
        PyObject *tmp_args_element_name_442;
        CHECK_OBJECT(var_filter_video);
        tmp_called_name_173 = var_filter_video;
        tmp_mvar_value_230 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_230 == NULL)) {
            tmp_mvar_value_230 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_230 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3307;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_304 = tmp_mvar_value_230;
        tmp_args_element_name_441 = const_str_digest_2d1fbc37599614a2cb9c91716d9e90fd;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_442 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3307;
        {
            PyObject *call_args[] = {tmp_args_element_name_441, tmp_args_element_name_442};
            tmp_args_element_name_440 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_304, const_str_plain_findall, call_args);
        }

        if (tmp_args_element_name_440 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3307;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3307;
        tmp_assign_source_221 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_173, tmp_args_element_name_440);
        Py_DECREF(tmp_args_element_name_440);
        if (tmp_assign_source_221 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3307;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_221;
            Py_DECREF(old);
        }

    }
    branch_no_168:;
    {
        nuitka_bool tmp_condition_result_172;
        PyObject *tmp_operand_name_11;
        CHECK_OBJECT(var_found);
        tmp_operand_name_11 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_11);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3315;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_172 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_172 == NUITKA_BOOL_TRUE) {
            goto branch_yes_169;
        } else {
            goto branch_no_169;
        }
    }
    branch_yes_169:;
    {
        PyObject *tmp_assign_source_222;
        PyObject *tmp_called_name_174;
        PyObject *tmp_args_element_name_443;
        PyObject *tmp_called_instance_305;
        PyObject *tmp_mvar_value_231;
        PyObject *tmp_args_element_name_444;
        PyObject *tmp_args_element_name_445;
        CHECK_OBJECT(var_filter_video);
        tmp_called_name_174 = var_filter_video;
        tmp_mvar_value_231 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_231 == NULL)) {
            tmp_mvar_value_231 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_231 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3317;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_305 = tmp_mvar_value_231;
        tmp_args_element_name_444 = const_str_digest_a3b5196b9a9782afc8951a726799d6be;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_445 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3317;
        {
            PyObject *call_args[] = {tmp_args_element_name_444, tmp_args_element_name_445};
            tmp_args_element_name_443 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_305, const_str_plain_findall, call_args);
        }

        if (tmp_args_element_name_443 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3317;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3317;
        tmp_assign_source_222 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_174, tmp_args_element_name_443);
        Py_DECREF(tmp_args_element_name_443);
        if (tmp_assign_source_222 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3317;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_222;
            Py_DECREF(old);
        }

    }
    branch_no_169:;
    {
        nuitka_bool tmp_condition_result_173;
        PyObject *tmp_operand_name_12;
        if (var_found == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "found");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3318;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_operand_name_12 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_12);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3318;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_173 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_173 == NUITKA_BOOL_TRUE) {
            goto branch_yes_170;
        } else {
            goto branch_no_170;
        }
    }
    branch_yes_170:;
    {
        PyObject *tmp_assign_source_223;
        PyObject *tmp_called_name_175;
        PyObject *tmp_args_element_name_446;
        PyObject *tmp_called_instance_306;
        PyObject *tmp_mvar_value_232;
        PyObject *tmp_args_element_name_447;
        PyObject *tmp_args_element_name_448;
        CHECK_OBJECT(var_filter_video);
        tmp_called_name_175 = var_filter_video;
        tmp_mvar_value_232 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_232 == NULL)) {
            tmp_mvar_value_232 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_232 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3320;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_306 = tmp_mvar_value_232;
        tmp_args_element_name_447 = const_str_digest_9d2ab6b07447d5593a22cf1c42dbd243;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_448 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3320;
        {
            PyObject *call_args[] = {tmp_args_element_name_447, tmp_args_element_name_448};
            tmp_args_element_name_446 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_306, const_str_plain_findall, call_args);
        }

        if (tmp_args_element_name_446 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3320;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3320;
        tmp_assign_source_223 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_175, tmp_args_element_name_446);
        Py_DECREF(tmp_args_element_name_446);
        if (tmp_assign_source_223 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3320;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            var_found = tmp_assign_source_223;
            Py_XDECREF(old);
        }

    }
    branch_no_170:;
    {
        nuitka_bool tmp_condition_result_174;
        PyObject *tmp_operand_name_13;
        if (var_found == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "found");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3322;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_operand_name_13 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_13);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3322;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_174 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_174 == NUITKA_BOOL_TRUE) {
            goto branch_yes_171;
        } else {
            goto branch_no_171;
        }
    }
    branch_yes_171:;
    {
        PyObject *tmp_assign_source_224;
        PyObject *tmp_called_name_176;
        PyObject *tmp_args_element_name_449;
        PyObject *tmp_called_instance_307;
        PyObject *tmp_mvar_value_233;
        PyObject *tmp_args_element_name_450;
        PyObject *tmp_args_element_name_451;
        CHECK_OBJECT(var_filter_video);
        tmp_called_name_176 = var_filter_video;
        tmp_mvar_value_233 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_233 == NULL)) {
            tmp_mvar_value_233 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_233 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3324;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_307 = tmp_mvar_value_233;
        tmp_args_element_name_450 = const_str_digest_a1c65eab274a05715bd3c92243898845;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_451 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3324;
        {
            PyObject *call_args[] = {tmp_args_element_name_450, tmp_args_element_name_451};
            tmp_args_element_name_449 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_307, const_str_plain_findall, call_args);
        }

        if (tmp_args_element_name_449 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3324;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3324;
        tmp_assign_source_224 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_176, tmp_args_element_name_449);
        Py_DECREF(tmp_args_element_name_449);
        if (tmp_assign_source_224 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3324;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            var_found = tmp_assign_source_224;
            Py_XDECREF(old);
        }

    }
    branch_no_171:;
    {
        nuitka_bool tmp_condition_result_175;
        PyObject *tmp_operand_name_14;
        if (var_found == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "found");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3330;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_operand_name_14 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_14);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3330;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_175 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_175 == NUITKA_BOOL_TRUE) {
            goto branch_yes_172;
        } else {
            goto branch_no_172;
        }
    }
    branch_yes_172:;
    {
        PyObject *tmp_assign_source_225;
        PyObject *tmp_called_instance_308;
        PyObject *tmp_mvar_value_234;
        PyObject *tmp_args_element_name_452;
        PyObject *tmp_args_element_name_453;
        tmp_mvar_value_234 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_234 == NULL)) {
            tmp_mvar_value_234 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_234 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3332;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_308 = tmp_mvar_value_234;
        tmp_args_element_name_452 = const_str_digest_00e935d054d1c7cd9b587ad3983c8f78;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_453 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3332;
        {
            PyObject *call_args[] = {tmp_args_element_name_452, tmp_args_element_name_453};
            tmp_assign_source_225 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_308, const_str_plain_findall, call_args);
        }

        if (tmp_assign_source_225 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3332;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            var_found = tmp_assign_source_225;
            Py_XDECREF(old);
        }

    }
    branch_no_172:;
    {
        nuitka_bool tmp_condition_result_176;
        PyObject *tmp_operand_name_15;
        if (var_found == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "found");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3334;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_operand_name_15 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_15);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3334;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_176 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_176 == NUITKA_BOOL_TRUE) {
            goto branch_yes_173;
        } else {
            goto branch_no_173;
        }
    }
    branch_yes_173:;
    {
        PyObject *tmp_assign_source_226;
        PyObject *tmp_called_name_177;
        PyObject *tmp_args_element_name_454;
        PyObject *tmp_called_instance_309;
        PyObject *tmp_mvar_value_235;
        PyObject *tmp_args_element_name_455;
        PyObject *tmp_args_element_name_456;
        CHECK_OBJECT(var_filter_video);
        tmp_called_name_177 = var_filter_video;
        tmp_mvar_value_235 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_235 == NULL)) {
            tmp_mvar_value_235 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_235 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3339;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_309 = tmp_mvar_value_235;
        tmp_args_element_name_455 = const_str_digest_69933bee8838c861cb7f5a9a6378c15f;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_456 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3339;
        {
            PyObject *call_args[] = {tmp_args_element_name_455, tmp_args_element_name_456};
            tmp_args_element_name_454 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_309, const_str_plain_findall, call_args);
        }

        if (tmp_args_element_name_454 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3339;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3339;
        tmp_assign_source_226 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_177, tmp_args_element_name_454);
        Py_DECREF(tmp_args_element_name_454);
        if (tmp_assign_source_226 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3339;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            var_found = tmp_assign_source_226;
            Py_XDECREF(old);
        }

    }
    branch_no_173:;
    {
        nuitka_bool tmp_condition_result_177;
        PyObject *tmp_operand_name_16;
        if (var_found == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "found");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3341;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_operand_name_16 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_16);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3341;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_177 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_177 == NUITKA_BOOL_TRUE) {
            goto branch_yes_174;
        } else {
            goto branch_no_174;
        }
    }
    branch_yes_174:;
    {
        PyObject *tmp_assign_source_227;
        PyObject *tmp_called_instance_310;
        PyObject *tmp_mvar_value_236;
        PyObject *tmp_args_element_name_457;
        PyObject *tmp_args_element_name_458;
        tmp_mvar_value_236 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_236 == NULL)) {
            tmp_mvar_value_236 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_236 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3344;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_310 = tmp_mvar_value_236;
        tmp_args_element_name_457 = const_str_digest_f5b54149aba1930e8e04fca3dd897ab4;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_458 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3344;
        {
            PyObject *call_args[] = {tmp_args_element_name_457, tmp_args_element_name_458};
            tmp_assign_source_227 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_310, const_str_plain_findall, call_args);
        }

        if (tmp_assign_source_227 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3344;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_m_video_type == NULL);
        var_m_video_type = tmp_assign_source_227;
    }
    {
        nuitka_bool tmp_condition_result_178;
        PyObject *tmp_compexpr_left_63;
        PyObject *tmp_compexpr_right_63;
        CHECK_OBJECT(var_m_video_type);
        tmp_compexpr_left_63 = var_m_video_type;
        tmp_compexpr_right_63 = Py_None;
        tmp_condition_result_178 = (tmp_compexpr_left_63 != tmp_compexpr_right_63) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_178 == NUITKA_BOOL_TRUE) {
            goto branch_yes_175;
        } else {
            goto branch_no_175;
        }
    }
    branch_yes_175:;
    {
        PyObject *tmp_assign_source_228;
        PyObject *tmp_called_name_178;
        PyObject *tmp_args_element_name_459;
        PyObject *tmp_called_instance_311;
        PyObject *tmp_mvar_value_237;
        PyObject *tmp_args_element_name_460;
        PyObject *tmp_args_element_name_461;
        CHECK_OBJECT(var_filter_video);
        tmp_called_name_178 = var_filter_video;
        tmp_mvar_value_237 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_237 == NULL)) {
            tmp_mvar_value_237 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_237 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3347;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_311 = tmp_mvar_value_237;
        tmp_args_element_name_460 = const_str_digest_ba229a637e36b1d1aedba9e1b2dd0eb5;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_461 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3347;
        {
            PyObject *call_args[] = {tmp_args_element_name_460, tmp_args_element_name_461};
            tmp_args_element_name_459 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_311, const_str_plain_findall, call_args);
        }

        if (tmp_args_element_name_459 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3347;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3347;
        tmp_assign_source_228 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_178, tmp_args_element_name_459);
        Py_DECREF(tmp_args_element_name_459);
        if (tmp_assign_source_228 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3347;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            var_found = tmp_assign_source_228;
            Py_XDECREF(old);
        }

    }
    branch_no_175:;
    branch_no_174:;
    {
        nuitka_bool tmp_condition_result_179;
        PyObject *tmp_operand_name_17;
        if (var_found == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "found");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3348;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_operand_name_17 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_17);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3348;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_179 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_179 == NUITKA_BOOL_TRUE) {
            goto branch_yes_176;
        } else {
            goto branch_no_176;
        }
    }
    branch_yes_176:;
    {
        PyObject *tmp_assign_source_229;
        PyObject *tmp_called_instance_312;
        PyObject *tmp_mvar_value_238;
        PyObject *tmp_args_element_name_462;
        PyObject *tmp_args_element_name_463;
        tmp_mvar_value_238 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_238 == NULL)) {
            tmp_mvar_value_238 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_238 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3350;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_312 = tmp_mvar_value_238;
        tmp_args_element_name_462 = const_str_digest_820c8b396edbe8218f9ff1ecdcbfa7bb;
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_args_element_name_463 = PyCell_GET(var_webpage);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3350;
        {
            PyObject *call_args[] = {tmp_args_element_name_462, tmp_args_element_name_463};
            tmp_assign_source_229 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_312, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_229 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3350;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            var_found = tmp_assign_source_229;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_180;
        PyObject *tmp_operand_name_18;
        CHECK_OBJECT(var_found);
        tmp_operand_name_18 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_18);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3354;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_180 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_180 == NUITKA_BOOL_TRUE) {
            goto branch_yes_177;
        } else {
            goto branch_no_177;
        }
    }
    branch_yes_177:;
    {
        PyObject *tmp_assign_source_230;
        PyObject *tmp_called_instance_313;
        PyObject *tmp_expression_name_171;
        CHECK_OBJECT(var_head_response);
        tmp_expression_name_171 = var_head_response;
        tmp_called_instance_313 = LOOKUP_ATTRIBUTE(tmp_expression_name_171, const_str_plain_headers);
        if (tmp_called_instance_313 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3356;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3356;
        tmp_assign_source_230 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_313, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_plain_Refresh_tuple, 0));

        Py_DECREF(tmp_called_instance_313);
        if (tmp_assign_source_230 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3356;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_refresh_header == NULL);
        var_refresh_header = tmp_assign_source_230;
    }
    {
        nuitka_bool tmp_condition_result_181;
        int tmp_truth_name_117;
        CHECK_OBJECT(var_refresh_header);
        tmp_truth_name_117 = CHECK_IF_TRUE(var_refresh_header);
        if (tmp_truth_name_117 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3357;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_181 = tmp_truth_name_117 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_181 == NUITKA_BOOL_TRUE) {
            goto branch_yes_178;
        } else {
            goto branch_no_178;
        }
    }
    branch_yes_178:;
    {
        nuitka_bool tmp_condition_result_182;
        int tmp_and_left_truth_4;
        nuitka_bool tmp_and_left_value_4;
        nuitka_bool tmp_and_right_value_4;
        PyObject *tmp_compexpr_left_64;
        PyObject *tmp_compexpr_right_64;
        PyObject *tmp_expression_name_172;
        PyObject *tmp_mvar_value_239;
        PyObject *tmp_isinstance_inst_4;
        PyObject *tmp_isinstance_cls_4;
        tmp_mvar_value_239 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_sys);

        if (unlikely(tmp_mvar_value_239 == NULL)) {
            tmp_mvar_value_239 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_sys);
        }

        if (tmp_mvar_value_239 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 5751 ], 25, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3359;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_name_172 = tmp_mvar_value_239;
        tmp_compexpr_left_64 = LOOKUP_ATTRIBUTE(tmp_expression_name_172, const_str_plain_version_info);
        if (tmp_compexpr_left_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3359;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_64 = const_tuple_int_pos_3_int_0_tuple;
        tmp_and_left_value_4 = RICH_COMPARE_LT_NBOOL_OBJECT_TUPLE(tmp_compexpr_left_64, tmp_compexpr_right_64);
        Py_DECREF(tmp_compexpr_left_64);
        if (tmp_and_left_value_4 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3359;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_truth_4 = tmp_and_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_4 == 1) {
            goto and_right_4;
        } else {
            goto and_left_4;
        }
        and_right_4:;
        CHECK_OBJECT(var_refresh_header);
        tmp_isinstance_inst_4 = var_refresh_header;
        tmp_isinstance_cls_4 = (PyObject *)&PyUnicode_Type;
        tmp_res = Nuitka_IsInstance(tmp_isinstance_inst_4, tmp_isinstance_cls_4);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3359;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_182 = tmp_and_right_value_4;
        goto and_end_4;
        and_left_4:;
        tmp_condition_result_182 = tmp_and_left_value_4;
        and_end_4:;
        if (tmp_condition_result_182 == NUITKA_BOOL_TRUE) {
            goto branch_yes_179;
        } else {
            goto branch_no_179;
        }
    }
    branch_yes_179:;
    {
        PyObject *tmp_assign_source_231;
        PyObject *tmp_called_instance_314;
        CHECK_OBJECT(var_refresh_header);
        tmp_called_instance_314 = var_refresh_header;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3360;
        tmp_assign_source_231 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_314, const_str_plain_decode, &PyTuple_GET_ITEM(const_tuple_str_digest_20861594150da1e43b5ee3f86b9deef6_tuple, 0));

        if (tmp_assign_source_231 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3360;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_refresh_header;
            assert(old != NULL);
            var_refresh_header = tmp_assign_source_231;
            Py_DECREF(old);
        }

    }
    branch_no_179:;
    {
        PyObject *tmp_assign_source_232;
        PyObject *tmp_called_instance_315;
        PyObject *tmp_mvar_value_240;
        PyObject *tmp_args_element_name_464;
        PyObject *tmp_args_element_name_465;
        tmp_mvar_value_240 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_240 == NULL)) {
            tmp_mvar_value_240 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_240 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3361;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_315 = tmp_mvar_value_240;
        tmp_args_element_name_464 = const_str_digest_07f7896c2310e41d42a628c023b59dbb;
        CHECK_OBJECT(var_refresh_header);
        tmp_args_element_name_465 = var_refresh_header;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3361;
        {
            PyObject *call_args[] = {tmp_args_element_name_464, tmp_args_element_name_465};
            tmp_assign_source_232 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_315, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_232 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3361;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_232;
            Py_DECREF(old);
        }

    }
    branch_no_178:;
    branch_no_177:;
    {
        nuitka_bool tmp_condition_result_183;
        int tmp_truth_name_118;
        if (var_found == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "found");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3362;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_truth_name_118 = CHECK_IF_TRUE(var_found);
        if (tmp_truth_name_118 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3362;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_183 = tmp_truth_name_118 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_183 == NUITKA_BOOL_TRUE) {
            goto branch_yes_180;
        } else {
            goto branch_no_180;
        }
    }
    branch_yes_180:;
    {
        PyObject *tmp_assign_source_233;
        PyObject *tmp_called_name_179;
        PyObject *tmp_expression_name_173;
        PyObject *tmp_mvar_value_241;
        PyObject *tmp_args_element_name_466;
        PyObject *tmp_args_element_name_467;
        PyObject *tmp_called_name_180;
        PyObject *tmp_mvar_value_242;
        PyObject *tmp_args_element_name_468;
        PyObject *tmp_called_instance_316;
        tmp_mvar_value_241 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urlparse);

        if (unlikely(tmp_mvar_value_241 == NULL)) {
            tmp_mvar_value_241 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_urlparse);
        }

        if (tmp_mvar_value_241 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 32106 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3363;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_name_173 = tmp_mvar_value_241;
        tmp_called_name_179 = LOOKUP_ATTRIBUTE(tmp_expression_name_173, const_str_plain_urljoin);
        if (tmp_called_name_179 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3363;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_466 = PyCell_GET(par_url);
        tmp_mvar_value_242 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unescapeHTML);

        if (unlikely(tmp_mvar_value_242 == NULL)) {
            tmp_mvar_value_242 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unescapeHTML);
        }

        if (tmp_mvar_value_242 == NULL) {
            Py_DECREF(tmp_called_name_179);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33553 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3363;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_180 = tmp_mvar_value_242;
        if (var_found == NULL) {
            Py_DECREF(tmp_called_name_179);
            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "found");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3363;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_316 = var_found;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3363;
        tmp_args_element_name_468 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_316, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_pos_1_tuple, 0));

        if (tmp_args_element_name_468 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_179);

            exception_lineno = 3363;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3363;
        tmp_args_element_name_467 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_180, tmp_args_element_name_468);
        Py_DECREF(tmp_args_element_name_468);
        if (tmp_args_element_name_467 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_179);

            exception_lineno = 3363;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3363;
        {
            PyObject *call_args[] = {tmp_args_element_name_466, tmp_args_element_name_467};
            tmp_assign_source_233 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_179, call_args);
        }

        Py_DECREF(tmp_called_name_179);
        Py_DECREF(tmp_args_element_name_467);
        if (tmp_assign_source_233 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3363;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_new_url;
            var_new_url = tmp_assign_source_233;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_184;
        PyObject *tmp_compexpr_left_65;
        PyObject *tmp_compexpr_right_65;
        CHECK_OBJECT(var_new_url);
        tmp_compexpr_left_65 = var_new_url;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_compexpr_right_65 = PyCell_GET(par_url);
        tmp_condition_result_184 = RICH_COMPARE_NE_NBOOL_OBJECT_OBJECT(tmp_compexpr_left_65, tmp_compexpr_right_65);
        if (tmp_condition_result_184 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3364;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_condition_result_184 == NUITKA_BOOL_TRUE) {
            goto branch_yes_181;
        } else {
            goto branch_no_181;
        }
    }
    branch_yes_181:;
    {
        PyObject *tmp_called_instance_317;
        PyObject *tmp_call_result_37;
        PyObject *tmp_args_element_name_469;
        CHECK_OBJECT(par_self);
        tmp_called_instance_317 = par_self;
        CHECK_OBJECT(var_new_url);
        tmp_args_element_name_469 = var_new_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3365;
        {
            PyObject *call_args[] = {tmp_args_element_name_469};
            tmp_call_result_37 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_317, const_str_plain_report_following_redirect, call_args);
        }

        if (tmp_call_result_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3365;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_37);
    }
    {
        PyObject *tmp_dict_key_115;
        PyObject *tmp_dict_value_115;
        PyObject *tmp_dict_key_116;
        PyObject *tmp_dict_value_116;
        tmp_dict_key_115 = const_str_plain__type;
        tmp_dict_value_115 = const_str_plain_url;
        tmp_return_value = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_115, tmp_dict_value_115);
        assert(!(tmp_res != 0));
        tmp_dict_key_116 = const_str_plain_url;
        CHECK_OBJECT(var_new_url);
        tmp_dict_value_116 = var_new_url;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_116, tmp_dict_value_116);
        assert(!(tmp_res != 0));
        goto frame_return_exit_1;
    }
    goto branch_end_181;
    branch_no_181:;
    {
        PyObject *tmp_assign_source_234;
        tmp_assign_source_234 = Py_None;
        {
            PyObject *old = var_found;
            var_found = tmp_assign_source_234;
            Py_INCREF(var_found);
            Py_XDECREF(old);
        }

    }
    branch_end_181:;
    branch_no_180:;
    branch_no_176:;
    {
        nuitka_bool tmp_condition_result_185;
        PyObject *tmp_operand_name_19;
        if (var_found == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "found");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3373;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_operand_name_19 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_19);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3373;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_185 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_185 == NUITKA_BOOL_TRUE) {
            goto branch_yes_182;
        } else {
            goto branch_no_182;
        }
    }
    branch_yes_182:;
    {
        PyObject *tmp_assign_source_235;
        PyObject *tmp_called_name_181;
        PyObject *tmp_expression_name_174;
        PyObject *tmp_args_name_75;
        PyObject *tmp_tuple_element_78;
        PyObject *tmp_kw_name_75;
        CHECK_OBJECT(par_self);
        tmp_expression_name_174 = par_self;
        tmp_called_name_181 = LOOKUP_ATTRIBUTE(tmp_expression_name_174, const_str_plain__html_search_meta);
        if (tmp_called_name_181 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3377;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_tuple_element_78 = const_str_digest_2f7c86a3ce14ba5f3ccb67288827cfd1;
        tmp_args_name_75 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_78);
        PyTuple_SET_ITEM(tmp_args_name_75, 0, tmp_tuple_element_78);
        CHECK_OBJECT(PyCell_GET(var_webpage));
        tmp_tuple_element_78 = PyCell_GET(var_webpage);
        Py_INCREF(tmp_tuple_element_78);
        PyTuple_SET_ITEM(tmp_args_name_75, 1, tmp_tuple_element_78);
        tmp_kw_name_75 = PyDict_Copy(const_dict_6dc2f89fb2b035a2c0a0ed28a753f1c8);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3377;
        tmp_assign_source_235 = CALL_FUNCTION(tmp_called_name_181, tmp_args_name_75, tmp_kw_name_75);
        Py_DECREF(tmp_called_name_181);
        Py_DECREF(tmp_args_name_75);
        Py_DECREF(tmp_kw_name_75);
        if (tmp_assign_source_235 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3377;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_embed_url == NULL);
        var_embed_url = tmp_assign_source_235;
    }
    {
        nuitka_bool tmp_condition_result_186;
        int tmp_and_left_truth_5;
        nuitka_bool tmp_and_left_value_5;
        nuitka_bool tmp_and_right_value_5;
        int tmp_truth_name_119;
        PyObject *tmp_compexpr_left_66;
        PyObject *tmp_compexpr_right_66;
        CHECK_OBJECT(var_embed_url);
        tmp_truth_name_119 = CHECK_IF_TRUE(var_embed_url);
        if (tmp_truth_name_119 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3378;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_5 = tmp_truth_name_119 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_5 = tmp_and_left_value_5 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_5 == 1) {
            goto and_right_5;
        } else {
            goto and_left_5;
        }
        and_right_5:;
        CHECK_OBJECT(var_embed_url);
        tmp_compexpr_left_66 = var_embed_url;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_compexpr_right_66 = PyCell_GET(par_url);
        tmp_and_right_value_5 = RICH_COMPARE_NE_NBOOL_OBJECT_OBJECT(tmp_compexpr_left_66, tmp_compexpr_right_66);
        if (tmp_and_right_value_5 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3378;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_186 = tmp_and_right_value_5;
        goto and_end_5;
        and_left_5:;
        tmp_condition_result_186 = tmp_and_left_value_5;
        and_end_5:;
        if (tmp_condition_result_186 == NUITKA_BOOL_TRUE) {
            goto branch_yes_183;
        } else {
            goto branch_no_183;
        }
    }
    branch_yes_183:;
    {
        PyObject *tmp_called_instance_318;
        PyObject *tmp_args_element_name_470;
        CHECK_OBJECT(par_self);
        tmp_called_instance_318 = par_self;
        CHECK_OBJECT(var_embed_url);
        tmp_args_element_name_470 = var_embed_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3379;
        {
            PyObject *call_args[] = {tmp_args_element_name_470};
            tmp_return_value = CALL_METHOD_WITH_ARGS1(tmp_called_instance_318, const_str_plain_url_result, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3379;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_183:;
    branch_no_182:;
    {
        nuitka_bool tmp_condition_result_187;
        PyObject *tmp_operand_name_20;
        if (var_found == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "found");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3381;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_operand_name_20 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_20);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3381;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_187 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_187 == NUITKA_BOOL_TRUE) {
            goto branch_yes_184;
        } else {
            goto branch_no_184;
        }
    }
    branch_yes_184:;
    {
        PyObject *tmp_raise_type_3;
        PyObject *tmp_called_name_182;
        PyObject *tmp_mvar_value_243;
        PyObject *tmp_args_element_name_471;
        tmp_mvar_value_243 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_UnsupportedError);

        if (unlikely(tmp_mvar_value_243 == NULL)) {
            tmp_mvar_value_243 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_UnsupportedError);
        }

        if (tmp_mvar_value_243 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 36771 ], 38, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3382;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_182 = tmp_mvar_value_243;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_471 = PyCell_GET(par_url);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3382;
        tmp_raise_type_3 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_182, tmp_args_element_name_471);
        if (tmp_raise_type_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3382;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        exception_type = tmp_raise_type_3;
        exception_lineno = 3382;
        RAISE_EXCEPTION_WITH_TYPE(&exception_type, &exception_value, &exception_tb);
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto frame_exception_exit_1;
    }
    branch_no_184:;
    {
        PyObject *tmp_assign_source_236;
        tmp_assign_source_236 = PyList_New(0);
        {
            PyObject *old = var_entries;
            assert(old != NULL);
            var_entries = tmp_assign_source_236;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_237;
        PyObject *tmp_iter_arg_11;
        PyObject *tmp_called_name_183;
        PyObject *tmp_mvar_value_244;
        PyObject *tmp_args_element_name_472;
        tmp_mvar_value_244 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_orderedSet);

        if (unlikely(tmp_mvar_value_244 == NULL)) {
            tmp_mvar_value_244 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_orderedSet);
        }

        if (tmp_mvar_value_244 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 27280 ], 32, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3385;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_183 = tmp_mvar_value_244;
        if (var_found == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "found");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3385;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_name_472 = var_found;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3385;
        tmp_iter_arg_11 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_183, tmp_args_element_name_472);
        if (tmp_iter_arg_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3385;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_237 = MAKE_ITERATOR(tmp_iter_arg_11);
        Py_DECREF(tmp_iter_arg_11);
        if (tmp_assign_source_237 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3385;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_5__for_iterator == NULL);
        tmp_for_loop_5__for_iterator = tmp_assign_source_237;
    }
    // Tried code:
    loop_start_8:;
    {
        PyObject *tmp_next_source_8;
        PyObject *tmp_assign_source_238;
        CHECK_OBJECT(tmp_for_loop_5__for_iterator);
        tmp_next_source_8 = tmp_for_loop_5__for_iterator;
        tmp_assign_source_238 = ITERATOR_NEXT(tmp_next_source_8);
        if (tmp_assign_source_238 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_8;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                exception_lineno = 3385;
                goto try_except_handler_21;
            }
        }

        {
            PyObject *old = tmp_for_loop_5__iter_value;
            tmp_for_loop_5__iter_value = tmp_assign_source_238;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_239;
        CHECK_OBJECT(tmp_for_loop_5__iter_value);
        tmp_assign_source_239 = tmp_for_loop_5__iter_value;
        {
            PyObject *old = var_video_url;
            var_video_url = tmp_assign_source_239;
            Py_INCREF(var_video_url);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_240;
        PyObject *tmp_called_name_184;
        PyObject *tmp_mvar_value_245;
        PyObject *tmp_args_element_name_473;
        tmp_mvar_value_245 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unescapeHTML);

        if (unlikely(tmp_mvar_value_245 == NULL)) {
            tmp_mvar_value_245 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unescapeHTML);
        }

        if (tmp_mvar_value_245 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33553 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3386;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_name_184 = tmp_mvar_value_245;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_473 = var_video_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3386;
        tmp_assign_source_240 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_184, tmp_args_element_name_473);
        if (tmp_assign_source_240 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3386;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_video_url;
            assert(old != NULL);
            var_video_url = tmp_assign_source_240;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_241;
        PyObject *tmp_called_instance_319;
        CHECK_OBJECT(var_video_url);
        tmp_called_instance_319 = var_video_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3387;
        tmp_assign_source_241 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_319, const_str_plain_replace, &PyTuple_GET_ITEM(const_tuple_str_digest_883533b6944e8c03ddb76c0588addd56_str_chr_47_tuple, 0));

        if (tmp_assign_source_241 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3387;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_video_url;
            assert(old != NULL);
            var_video_url = tmp_assign_source_241;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_242;
        PyObject *tmp_called_instance_320;
        PyObject *tmp_mvar_value_246;
        PyObject *tmp_args_element_name_474;
        PyObject *tmp_args_element_name_475;
        tmp_mvar_value_246 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urlparse);

        if (unlikely(tmp_mvar_value_246 == NULL)) {
            tmp_mvar_value_246 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_urlparse);
        }

        if (tmp_mvar_value_246 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 32106 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3388;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_320 = tmp_mvar_value_246;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_args_element_name_474 = PyCell_GET(par_url);
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_475 = var_video_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3388;
        {
            PyObject *call_args[] = {tmp_args_element_name_474, tmp_args_element_name_475};
            tmp_assign_source_242 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_320, const_str_plain_urljoin, call_args);
        }

        if (tmp_assign_source_242 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3388;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_video_url;
            assert(old != NULL);
            var_video_url = tmp_assign_source_242;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_243;
        PyObject *tmp_called_name_185;
        PyObject *tmp_mvar_value_247;
        PyObject *tmp_args_element_name_476;
        PyObject *tmp_called_instance_321;
        PyObject *tmp_expression_name_175;
        PyObject *tmp_mvar_value_248;
        PyObject *tmp_args_element_name_477;
        tmp_mvar_value_247 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urllib_parse_unquote);

        if (unlikely(tmp_mvar_value_247 == NULL)) {
            tmp_mvar_value_247 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_urllib_parse_unquote);
        }

        if (tmp_mvar_value_247 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 30224 ], 49, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3389;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_name_185 = tmp_mvar_value_247;
        tmp_mvar_value_248 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_os);

        if (unlikely(tmp_mvar_value_248 == NULL)) {
            tmp_mvar_value_248 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
        }

        if (tmp_mvar_value_248 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 695 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3389;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_expression_name_175 = tmp_mvar_value_248;
        tmp_called_instance_321 = LOOKUP_ATTRIBUTE(tmp_expression_name_175, const_str_plain_path);
        if (tmp_called_instance_321 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3389;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_477 = var_video_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3389;
        {
            PyObject *call_args[] = {tmp_args_element_name_477};
            tmp_args_element_name_476 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_321, const_str_plain_basename, call_args);
        }

        Py_DECREF(tmp_called_instance_321);
        if (tmp_args_element_name_476 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3389;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3389;
        tmp_assign_source_243 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_185, tmp_args_element_name_476);
        Py_DECREF(tmp_args_element_name_476);
        if (tmp_assign_source_243 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3389;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_video_id;
            assert(old != NULL);
            var_video_id = tmp_assign_source_243;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_188;
        PyObject *tmp_called_instance_322;
        PyObject *tmp_mvar_value_249;
        PyObject *tmp_call_result_38;
        PyObject *tmp_args_element_name_478;
        int tmp_truth_name_120;
        tmp_mvar_value_249 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YoutubeIE);

        if (unlikely(tmp_mvar_value_249 == NULL)) {
            tmp_mvar_value_249 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_YoutubeIE);
        }

        if (tmp_mvar_value_249 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33686 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3392;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_322 = tmp_mvar_value_249;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_478 = var_video_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3392;
        {
            PyObject *call_args[] = {tmp_args_element_name_478};
            tmp_call_result_38 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_322, const_str_plain_suitable, call_args);
        }

        if (tmp_call_result_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3392;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_120 = CHECK_IF_TRUE(tmp_call_result_38);
        if (tmp_truth_name_120 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_38);

            exception_lineno = 3392;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_188 = tmp_truth_name_120 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_38);
        if (tmp_condition_result_188 == NUITKA_BOOL_TRUE) {
            goto branch_yes_185;
        } else {
            goto branch_no_185;
        }
    }
    branch_yes_185:;
    {
        PyObject *tmp_called_name_186;
        PyObject *tmp_expression_name_176;
        PyObject *tmp_call_result_39;
        PyObject *tmp_args_element_name_479;
        PyObject *tmp_called_instance_323;
        PyObject *tmp_args_element_name_480;
        PyObject *tmp_args_element_name_481;
        CHECK_OBJECT(var_entries);
        tmp_expression_name_176 = var_entries;
        tmp_called_name_186 = LOOKUP_ATTRIBUTE(tmp_expression_name_176, const_str_plain_append);
        if (tmp_called_name_186 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3393;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(par_self);
        tmp_called_instance_323 = par_self;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_480 = var_video_url;
        tmp_args_element_name_481 = const_str_plain_Youtube;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3393;
        {
            PyObject *call_args[] = {tmp_args_element_name_480, tmp_args_element_name_481};
            tmp_args_element_name_479 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_323, const_str_plain_url_result, call_args);
        }

        if (tmp_args_element_name_479 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_186);

            exception_lineno = 3393;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3393;
        tmp_call_result_39 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_186, tmp_args_element_name_479);
        Py_DECREF(tmp_called_name_186);
        Py_DECREF(tmp_args_element_name_479);
        if (tmp_call_result_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3393;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        Py_DECREF(tmp_call_result_39);
    }
    goto loop_start_8;
    branch_no_185:;
    {
        PyObject *tmp_assign_source_244;
        PyObject *tmp_expression_name_177;
        PyObject *tmp_called_instance_324;
        PyObject *tmp_expression_name_178;
        PyObject *tmp_mvar_value_250;
        PyObject *tmp_args_element_name_482;
        PyObject *tmp_subscript_name_7;
        tmp_mvar_value_250 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_os);

        if (unlikely(tmp_mvar_value_250 == NULL)) {
            tmp_mvar_value_250 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
        }

        if (tmp_mvar_value_250 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 695 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3397;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_expression_name_178 = tmp_mvar_value_250;
        tmp_called_instance_324 = LOOKUP_ATTRIBUTE(tmp_expression_name_178, const_str_plain_path);
        if (tmp_called_instance_324 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3397;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_482 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3397;
        {
            PyObject *call_args[] = {tmp_args_element_name_482};
            tmp_expression_name_177 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_324, const_str_plain_splitext, call_args);
        }

        Py_DECREF(tmp_called_instance_324);
        if (tmp_expression_name_177 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3397;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_subscript_name_7 = const_int_0;
        tmp_assign_source_244 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_name_177, tmp_subscript_name_7, 0);
        Py_DECREF(tmp_expression_name_177);
        if (tmp_assign_source_244 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3397;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_video_id;
            assert(old != NULL);
            var_video_id = tmp_assign_source_244;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_245;
        PyObject *tmp_dict_key_117;
        PyObject *tmp_dict_value_117;
        PyObject *tmp_dict_key_118;
        PyObject *tmp_dict_value_118;
        PyObject *tmp_dict_key_119;
        PyObject *tmp_dict_value_119;
        PyObject *tmp_dict_key_120;
        PyObject *tmp_dict_value_120;
        tmp_dict_key_117 = const_str_plain_id;
        CHECK_OBJECT(var_video_id);
        tmp_dict_value_117 = var_video_id;
        tmp_assign_source_245 = _PyDict_NewPresized( 4 );
        tmp_res = PyDict_SetItem(tmp_assign_source_245, tmp_dict_key_117, tmp_dict_value_117);
        assert(!(tmp_res != 0));
        tmp_dict_key_118 = const_str_plain_uploader;
        CHECK_OBJECT(var_video_uploader);
        tmp_dict_value_118 = var_video_uploader;
        tmp_res = PyDict_SetItem(tmp_assign_source_245, tmp_dict_key_118, tmp_dict_value_118);
        assert(!(tmp_res != 0));
        tmp_dict_key_119 = const_str_plain_title;
        CHECK_OBJECT(var_video_title);
        tmp_dict_value_119 = var_video_title;
        tmp_res = PyDict_SetItem(tmp_assign_source_245, tmp_dict_key_119, tmp_dict_value_119);
        assert(!(tmp_res != 0));
        tmp_dict_key_120 = const_str_plain_age_limit;
        CHECK_OBJECT(var_age_limit);
        tmp_dict_value_120 = var_age_limit;
        tmp_res = PyDict_SetItem(tmp_assign_source_245, tmp_dict_key_120, tmp_dict_value_120);
        assert(!(tmp_res != 0));
        {
            PyObject *old = var_entry_info_dict;
            var_entry_info_dict = tmp_assign_source_245;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_189;
        PyObject *tmp_called_instance_325;
        PyObject *tmp_mvar_value_251;
        PyObject *tmp_call_result_40;
        PyObject *tmp_args_element_name_483;
        int tmp_truth_name_121;
        tmp_mvar_value_251 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RtmpIE);

        if (unlikely(tmp_mvar_value_251 == NULL)) {
            tmp_mvar_value_251 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_RtmpIE);
        }

        if (tmp_mvar_value_251 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42423 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3406;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_325 = tmp_mvar_value_251;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_483 = var_video_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3406;
        {
            PyObject *call_args[] = {tmp_args_element_name_483};
            tmp_call_result_40 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_325, const_str_plain_suitable, call_args);
        }

        if (tmp_call_result_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3406;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_121 = CHECK_IF_TRUE(tmp_call_result_40);
        if (tmp_truth_name_121 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_40);

            exception_lineno = 3406;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_189 = tmp_truth_name_121 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_40);
        if (tmp_condition_result_189 == NUITKA_BOOL_TRUE) {
            goto branch_yes_186;
        } else {
            goto branch_no_186;
        }
    }
    branch_yes_186:;
    {
        PyObject *tmp_called_name_187;
        PyObject *tmp_expression_name_179;
        PyObject *tmp_call_result_41;
        PyObject *tmp_args_element_name_484;
        PyObject *tmp_dict_key_121;
        PyObject *tmp_dict_value_121;
        PyObject *tmp_dict_key_122;
        PyObject *tmp_dict_value_122;
        PyObject *tmp_called_instance_326;
        PyObject *tmp_mvar_value_252;
        PyObject *tmp_dict_key_123;
        PyObject *tmp_dict_value_123;
        CHECK_OBJECT(var_entry_info_dict);
        tmp_expression_name_179 = var_entry_info_dict;
        tmp_called_name_187 = LOOKUP_ATTRIBUTE(tmp_expression_name_179, const_str_plain_update);
        if (tmp_called_name_187 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3407;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_dict_key_121 = const_str_plain__type;
        tmp_dict_value_121 = const_str_plain_url_transparent;
        tmp_args_element_name_484 = _PyDict_NewPresized( 3 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_484, tmp_dict_key_121, tmp_dict_value_121);
        assert(!(tmp_res != 0));
        tmp_dict_key_122 = const_str_plain_ie_key;
        tmp_mvar_value_252 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RtmpIE);

        if (unlikely(tmp_mvar_value_252 == NULL)) {
            tmp_mvar_value_252 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_RtmpIE);
        }

        if (tmp_mvar_value_252 == NULL) {
            Py_DECREF(tmp_called_name_187);
            Py_DECREF(tmp_args_element_name_484);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42423 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3409;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_326 = tmp_mvar_value_252;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3409;
        tmp_dict_value_122 = CALL_METHOD_NO_ARGS(tmp_called_instance_326, const_str_plain_ie_key);
        if (tmp_dict_value_122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_187);
            Py_DECREF(tmp_args_element_name_484);

            exception_lineno = 3409;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_res = PyDict_SetItem(tmp_args_element_name_484, tmp_dict_key_122, tmp_dict_value_122);
        Py_DECREF(tmp_dict_value_122);
        assert(!(tmp_res != 0));
        tmp_dict_key_123 = const_str_plain_url;
        CHECK_OBJECT(var_video_url);
        tmp_dict_value_123 = var_video_url;
        tmp_res = PyDict_SetItem(tmp_args_element_name_484, tmp_dict_key_123, tmp_dict_value_123);
        assert(!(tmp_res != 0));
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3407;
        tmp_call_result_41 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_187, tmp_args_element_name_484);
        Py_DECREF(tmp_called_name_187);
        Py_DECREF(tmp_args_element_name_484);
        if (tmp_call_result_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3407;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        Py_DECREF(tmp_call_result_41);
    }
    {
        PyObject *tmp_called_instance_327;
        PyObject *tmp_call_result_42;
        PyObject *tmp_args_element_name_485;
        CHECK_OBJECT(var_entries);
        tmp_called_instance_327 = var_entries;
        CHECK_OBJECT(var_entry_info_dict);
        tmp_args_element_name_485 = var_entry_info_dict;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3412;
        {
            PyObject *call_args[] = {tmp_args_element_name_485};
            tmp_call_result_42 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_327, const_str_plain_append, call_args);
        }

        if (tmp_call_result_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3412;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        Py_DECREF(tmp_call_result_42);
    }
    goto loop_start_8;
    branch_no_186:;
    {
        PyObject *tmp_assign_source_246;
        PyObject *tmp_called_name_188;
        PyObject *tmp_mvar_value_253;
        PyObject *tmp_args_element_name_486;
        tmp_mvar_value_253 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_determine_ext);

        if (unlikely(tmp_mvar_value_253 == NULL)) {
            tmp_mvar_value_253 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_determine_ext);
        }

        if (tmp_mvar_value_253 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 27560 ], 35, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3415;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_name_188 = tmp_mvar_value_253;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_486 = var_video_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3415;
        tmp_assign_source_246 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_188, tmp_args_element_name_486);
        if (tmp_assign_source_246 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3415;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_ext;
            var_ext = tmp_assign_source_246;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_190;
        PyObject *tmp_compexpr_left_67;
        PyObject *tmp_compexpr_right_67;
        PyObject *tmp_tmp_condition_result_190_object_1;
        int tmp_truth_name_122;
        CHECK_OBJECT(var_ext);
        tmp_compexpr_left_67 = var_ext;
        tmp_compexpr_right_67 = const_str_plain_smil;
        tmp_tmp_condition_result_190_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_67, tmp_compexpr_right_67);
        if (tmp_tmp_condition_result_190_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3416;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_122 = CHECK_IF_TRUE(tmp_tmp_condition_result_190_object_1);
        if (tmp_truth_name_122 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_condition_result_190_object_1);

            exception_lineno = 3416;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_190 = tmp_truth_name_122 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_190_object_1);
        if (tmp_condition_result_190 == NUITKA_BOOL_TRUE) {
            goto branch_yes_187;
        } else {
            goto branch_no_187;
        }
    }
    branch_yes_187:;
    {
        PyObject *tmp_called_instance_328;
        PyObject *tmp_args_element_name_487;
        PyObject *tmp_args_element_name_488;
        CHECK_OBJECT(par_self);
        tmp_called_instance_328 = par_self;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_487 = var_video_url;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_488 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3417;
        {
            PyObject *call_args[] = {tmp_args_element_name_487, tmp_args_element_name_488};
            tmp_dictset_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_328, const_str_plain__extract_smil_formats, call_args);
        }

        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3417;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_entry_info_dict);
        tmp_dictset_dict = var_entry_info_dict;
        tmp_dictset_key = const_str_plain_formats;
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    goto branch_end_187;
    branch_no_187:;
    {
        nuitka_bool tmp_condition_result_191;
        PyObject *tmp_compexpr_left_68;
        PyObject *tmp_compexpr_right_68;
        PyObject *tmp_tmp_condition_result_191_object_1;
        int tmp_truth_name_123;
        CHECK_OBJECT(var_ext);
        tmp_compexpr_left_68 = var_ext;
        tmp_compexpr_right_68 = const_str_plain_xspf;
        tmp_tmp_condition_result_191_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_68, tmp_compexpr_right_68);
        if (tmp_tmp_condition_result_191_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3418;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_123 = CHECK_IF_TRUE(tmp_tmp_condition_result_191_object_1);
        if (tmp_truth_name_123 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_condition_result_191_object_1);

            exception_lineno = 3418;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_191 = tmp_truth_name_123 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_191_object_1);
        if (tmp_condition_result_191 == NUITKA_BOOL_TRUE) {
            goto branch_yes_188;
        } else {
            goto branch_no_188;
        }
    }
    branch_yes_188:;
    {
        PyObject *tmp_called_name_189;
        PyObject *tmp_expression_name_180;
        PyObject *tmp_args_element_name_489;
        PyObject *tmp_called_instance_329;
        PyObject *tmp_args_element_name_490;
        PyObject *tmp_args_element_name_491;
        PyObject *tmp_args_element_name_492;
        CHECK_OBJECT(par_self);
        tmp_expression_name_180 = par_self;
        tmp_called_name_189 = LOOKUP_ATTRIBUTE(tmp_expression_name_180, const_str_plain_playlist_result);
        if (tmp_called_name_189 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3419;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(par_self);
        tmp_called_instance_329 = par_self;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_490 = var_video_url;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_491 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3419;
        {
            PyObject *call_args[] = {tmp_args_element_name_490, tmp_args_element_name_491};
            tmp_args_element_name_489 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_329, const_str_plain__extract_xspf_playlist, call_args);
        }

        if (tmp_args_element_name_489 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_189);

            exception_lineno = 3419;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_492 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3419;
        {
            PyObject *call_args[] = {tmp_args_element_name_489, tmp_args_element_name_492};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_189, call_args);
        }

        Py_DECREF(tmp_called_name_189);
        Py_DECREF(tmp_args_element_name_489);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3419;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        goto try_return_handler_21;
    }
    goto branch_end_188;
    branch_no_188:;
    {
        nuitka_bool tmp_condition_result_192;
        PyObject *tmp_compexpr_left_69;
        PyObject *tmp_compexpr_right_69;
        PyObject *tmp_tmp_condition_result_192_object_1;
        int tmp_truth_name_124;
        CHECK_OBJECT(var_ext);
        tmp_compexpr_left_69 = var_ext;
        tmp_compexpr_right_69 = const_str_plain_m3u8;
        tmp_tmp_condition_result_192_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_69, tmp_compexpr_right_69);
        if (tmp_tmp_condition_result_192_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3420;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_124 = CHECK_IF_TRUE(tmp_tmp_condition_result_192_object_1);
        if (tmp_truth_name_124 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_condition_result_192_object_1);

            exception_lineno = 3420;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_192 = tmp_truth_name_124 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_192_object_1);
        if (tmp_condition_result_192 == NUITKA_BOOL_TRUE) {
            goto branch_yes_189;
        } else {
            goto branch_no_189;
        }
    }
    branch_yes_189:;
    {
        PyObject *tmp_called_name_190;
        PyObject *tmp_expression_name_181;
        PyObject *tmp_args_name_76;
        PyObject *tmp_tuple_element_79;
        PyObject *tmp_kw_name_76;
        CHECK_OBJECT(par_self);
        tmp_expression_name_181 = par_self;
        tmp_called_name_190 = LOOKUP_ATTRIBUTE(tmp_expression_name_181, const_str_plain__extract_m3u8_formats);
        if (tmp_called_name_190 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3421;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_url);
        tmp_tuple_element_79 = var_video_url;
        tmp_args_name_76 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_79);
        PyTuple_SET_ITEM(tmp_args_name_76, 0, tmp_tuple_element_79);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_79 = var_video_id;
        Py_INCREF(tmp_tuple_element_79);
        PyTuple_SET_ITEM(tmp_args_name_76, 1, tmp_tuple_element_79);
        tmp_kw_name_76 = PyDict_Copy(const_dict_00568b7486a38fa8bec47d8cf331317e);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3421;
        tmp_dictset_value = CALL_FUNCTION(tmp_called_name_190, tmp_args_name_76, tmp_kw_name_76);
        Py_DECREF(tmp_called_name_190);
        Py_DECREF(tmp_args_name_76);
        Py_DECREF(tmp_kw_name_76);
        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3421;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_entry_info_dict);
        tmp_dictset_dict = var_entry_info_dict;
        tmp_dictset_key = const_str_plain_formats;
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    goto branch_end_189;
    branch_no_189:;
    {
        nuitka_bool tmp_condition_result_193;
        PyObject *tmp_compexpr_left_70;
        PyObject *tmp_compexpr_right_70;
        PyObject *tmp_tmp_condition_result_193_object_1;
        int tmp_truth_name_125;
        CHECK_OBJECT(var_ext);
        tmp_compexpr_left_70 = var_ext;
        tmp_compexpr_right_70 = const_str_plain_mpd;
        tmp_tmp_condition_result_193_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_70, tmp_compexpr_right_70);
        if (tmp_tmp_condition_result_193_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3422;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_125 = CHECK_IF_TRUE(tmp_tmp_condition_result_193_object_1);
        if (tmp_truth_name_125 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_condition_result_193_object_1);

            exception_lineno = 3422;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_193 = tmp_truth_name_125 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_193_object_1);
        if (tmp_condition_result_193 == NUITKA_BOOL_TRUE) {
            goto branch_yes_190;
        } else {
            goto branch_no_190;
        }
    }
    branch_yes_190:;
    {
        PyObject *tmp_called_instance_330;
        PyObject *tmp_args_element_name_493;
        PyObject *tmp_args_element_name_494;
        CHECK_OBJECT(par_self);
        tmp_called_instance_330 = par_self;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_493 = var_video_url;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_494 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3423;
        {
            PyObject *call_args[] = {tmp_args_element_name_493, tmp_args_element_name_494};
            tmp_dictset_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_330, const_str_plain__extract_mpd_formats, call_args);
        }

        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3423;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_entry_info_dict);
        tmp_dictset_dict = var_entry_info_dict;
        tmp_dictset_key = const_str_plain_formats;
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    goto branch_end_190;
    branch_no_190:;
    {
        nuitka_bool tmp_condition_result_194;
        PyObject *tmp_compexpr_left_71;
        PyObject *tmp_compexpr_right_71;
        PyObject *tmp_tmp_condition_result_194_object_1;
        int tmp_truth_name_126;
        CHECK_OBJECT(var_ext);
        tmp_compexpr_left_71 = var_ext;
        tmp_compexpr_right_71 = const_str_plain_f4m;
        tmp_tmp_condition_result_194_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_71, tmp_compexpr_right_71);
        if (tmp_tmp_condition_result_194_object_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3424;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_126 = CHECK_IF_TRUE(tmp_tmp_condition_result_194_object_1);
        if (tmp_truth_name_126 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_tmp_condition_result_194_object_1);

            exception_lineno = 3424;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_194 = tmp_truth_name_126 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_194_object_1);
        if (tmp_condition_result_194 == NUITKA_BOOL_TRUE) {
            goto branch_yes_191;
        } else {
            goto branch_no_191;
        }
    }
    branch_yes_191:;
    {
        PyObject *tmp_called_instance_331;
        PyObject *tmp_args_element_name_495;
        PyObject *tmp_args_element_name_496;
        CHECK_OBJECT(par_self);
        tmp_called_instance_331 = par_self;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_495 = var_video_url;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_name_496 = var_video_id;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3425;
        {
            PyObject *call_args[] = {tmp_args_element_name_495, tmp_args_element_name_496};
            tmp_dictset_value = CALL_METHOD_WITH_ARGS2(tmp_called_instance_331, const_str_plain__extract_f4m_formats, call_args);
        }

        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3425;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_entry_info_dict);
        tmp_dictset_dict = var_entry_info_dict;
        tmp_dictset_key = const_str_plain_formats;
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    goto branch_end_191;
    branch_no_191:;
    {
        nuitka_bool tmp_condition_result_195;
        int tmp_and_left_truth_6;
        nuitka_bool tmp_and_left_value_6;
        nuitka_bool tmp_and_right_value_6;
        PyObject *tmp_called_instance_332;
        PyObject *tmp_mvar_value_254;
        PyObject *tmp_call_result_43;
        PyObject *tmp_args_element_name_497;
        PyObject *tmp_args_element_name_498;
        int tmp_truth_name_127;
        PyObject *tmp_compexpr_left_72;
        PyObject *tmp_compexpr_right_72;
        tmp_mvar_value_254 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_254 == NULL)) {
            tmp_mvar_value_254 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_254 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3426;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_332 = tmp_mvar_value_254;
        tmp_args_element_name_497 = const_str_digest_d1bd8db22baf56a37bf699e8e6b9535b;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_498 = var_video_url;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3426;
        {
            PyObject *call_args[] = {tmp_args_element_name_497, tmp_args_element_name_498};
            tmp_call_result_43 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_332, const_str_plain_search, call_args);
        }

        if (tmp_call_result_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3426;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_127 = CHECK_IF_TRUE(tmp_call_result_43);
        if (tmp_truth_name_127 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_43);

            exception_lineno = 3426;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_and_left_value_6 = tmp_truth_name_127 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_43);
        tmp_and_left_truth_6 = tmp_and_left_value_6 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_6 == 1) {
            goto and_right_6;
        } else {
            goto and_left_6;
        }
        and_right_6:;
        CHECK_OBJECT(var_video_url);
        tmp_compexpr_left_72 = var_video_url;
        CHECK_OBJECT(PyCell_GET(par_url));
        tmp_compexpr_right_72 = PyCell_GET(par_url);
        tmp_and_right_value_6 = RICH_COMPARE_NE_NBOOL_OBJECT_OBJECT(tmp_compexpr_left_72, tmp_compexpr_right_72);
        if (tmp_and_right_value_6 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3426;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_195 = tmp_and_right_value_6;
        goto and_end_6;
        and_left_6:;
        tmp_condition_result_195 = tmp_and_left_value_6;
        and_end_6:;
        if (tmp_condition_result_195 == NUITKA_BOOL_TRUE) {
            goto branch_yes_192;
        } else {
            goto branch_no_192;
        }
    }
    branch_yes_192:;
    {
        PyObject *tmp_assign_source_247;
        PyObject *tmp_called_name_191;
        PyObject *tmp_expression_name_182;
        PyObject *tmp_args_element_name_499;
        PyObject *tmp_called_name_192;
        PyObject *tmp_mvar_value_255;
        PyObject *tmp_args_element_name_500;
        PyObject *tmp_args_element_name_501;
        PyObject *tmp_args_element_name_502;
        PyObject *tmp_called_instance_333;
        PyObject *tmp_mvar_value_256;
        CHECK_OBJECT(par_self);
        tmp_expression_name_182 = par_self;
        tmp_called_name_191 = LOOKUP_ATTRIBUTE(tmp_expression_name_182, const_str_plain_url_result);
        if (tmp_called_name_191 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3438;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_mvar_value_255 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_smuggle_url);

        if (unlikely(tmp_mvar_value_255 == NULL)) {
            tmp_mvar_value_255 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_smuggle_url);
        }

        if (tmp_mvar_value_255 == NULL) {
            Py_DECREF(tmp_called_name_191);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 34727 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3439;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_name_192 = tmp_mvar_value_255;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_name_500 = var_video_url;
        tmp_args_element_name_501 = PyDict_Copy(const_dict_731182991c03073ec6717908ca52acfe);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3439;
        {
            PyObject *call_args[] = {tmp_args_element_name_500, tmp_args_element_name_501};
            tmp_args_element_name_499 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_192, call_args);
        }

        Py_DECREF(tmp_args_element_name_501);
        if (tmp_args_element_name_499 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_191);

            exception_lineno = 3439;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_mvar_value_256 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_GenericIE);

        if (unlikely(tmp_mvar_value_256 == NULL)) {
            tmp_mvar_value_256 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_GenericIE);
        }

        if (tmp_mvar_value_256 == NULL) {
            Py_DECREF(tmp_called_name_191);
            Py_DECREF(tmp_args_element_name_499);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33490 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3440;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_333 = tmp_mvar_value_256;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3440;
        tmp_args_element_name_502 = CALL_METHOD_NO_ARGS(tmp_called_instance_333, const_str_plain_ie_key);
        if (tmp_args_element_name_502 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_191);
            Py_DECREF(tmp_args_element_name_499);

            exception_lineno = 3440;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3438;
        {
            PyObject *call_args[] = {tmp_args_element_name_499, tmp_args_element_name_502};
            tmp_assign_source_247 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_191, call_args);
        }

        Py_DECREF(tmp_called_name_191);
        Py_DECREF(tmp_args_element_name_499);
        Py_DECREF(tmp_args_element_name_502);
        if (tmp_assign_source_247 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3438;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_entry_info_dict;
            assert(old != NULL);
            var_entry_info_dict = tmp_assign_source_247;
            Py_DECREF(old);
        }

    }
    goto branch_end_192;
    branch_no_192:;
    CHECK_OBJECT(var_video_url);
    tmp_dictset_value = var_video_url;
    CHECK_OBJECT(var_entry_info_dict);
    tmp_dictset_dict = var_entry_info_dict;
    tmp_dictset_key = const_str_plain_url;
    tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);
    assert(!(tmp_res != 0));
    branch_end_192:;
    branch_end_191:;
    branch_end_190:;
    branch_end_189:;
    branch_end_188:;
    branch_end_187:;
    {
        nuitka_bool tmp_condition_result_196;
        PyObject *tmp_called_instance_334;
        PyObject *tmp_call_result_44;
        int tmp_truth_name_128;
        if (var_entry_info_dict == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "entry_info_dict");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3444;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_334 = var_entry_info_dict;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3444;
        tmp_call_result_44 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_334, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_plain_formats_tuple, 0));

        if (tmp_call_result_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3444;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_128 = CHECK_IF_TRUE(tmp_call_result_44);
        if (tmp_truth_name_128 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_44);

            exception_lineno = 3444;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_196 = tmp_truth_name_128 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_44);
        if (tmp_condition_result_196 == NUITKA_BOOL_TRUE) {
            goto branch_yes_193;
        } else {
            goto branch_no_193;
        }
    }
    branch_yes_193:;
    {
        PyObject *tmp_called_name_193;
        PyObject *tmp_expression_name_183;
        PyObject *tmp_call_result_45;
        PyObject *tmp_args_element_name_503;
        PyObject *tmp_expression_name_184;
        PyObject *tmp_subscript_name_8;
        CHECK_OBJECT(par_self);
        tmp_expression_name_183 = par_self;
        tmp_called_name_193 = LOOKUP_ATTRIBUTE(tmp_expression_name_183, const_str_plain__sort_formats);
        if (tmp_called_name_193 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3445;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (var_entry_info_dict == NULL) {
            Py_DECREF(tmp_called_name_193);
            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "entry_info_dict");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3445;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_expression_name_184 = var_entry_info_dict;
        tmp_subscript_name_8 = const_str_plain_formats;
        tmp_args_element_name_503 = LOOKUP_SUBSCRIPT(tmp_expression_name_184, tmp_subscript_name_8);
        if (tmp_args_element_name_503 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_193);

            exception_lineno = 3445;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3445;
        tmp_call_result_45 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_193, tmp_args_element_name_503);
        Py_DECREF(tmp_called_name_193);
        Py_DECREF(tmp_args_element_name_503);
        if (tmp_call_result_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3445;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        Py_DECREF(tmp_call_result_45);
    }
    branch_no_193:;
    {
        PyObject *tmp_called_name_194;
        PyObject *tmp_expression_name_185;
        PyObject *tmp_call_result_46;
        PyObject *tmp_args_element_name_504;
        CHECK_OBJECT(var_entries);
        tmp_expression_name_185 = var_entries;
        tmp_called_name_194 = LOOKUP_ATTRIBUTE(tmp_expression_name_185, const_str_plain_append);
        if (tmp_called_name_194 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3447;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (var_entry_info_dict == NULL) {
            Py_DECREF(tmp_called_name_194);
            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("local variable '%s' referenced before assignment", "entry_info_dict");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3447;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_args_element_name_504 = var_entry_info_dict;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3447;
        tmp_call_result_46 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_194, tmp_args_element_name_504);
        Py_DECREF(tmp_called_name_194);
        if (tmp_call_result_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3447;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        Py_DECREF(tmp_call_result_46);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 3385;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_21;
    }
    goto loop_start_8;
    loop_end_8:;
    goto try_end_13;
    // Return handler code:
    try_return_handler_21:;
    CHECK_OBJECT(tmp_for_loop_5__iter_value);
    Py_DECREF(tmp_for_loop_5__iter_value);
    tmp_for_loop_5__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_5__for_iterator);
    Py_DECREF(tmp_for_loop_5__for_iterator);
    tmp_for_loop_5__for_iterator = NULL;

    goto frame_return_exit_1;
    // Exception handler code:
    try_except_handler_21:;
    exception_keeper_type_19 = exception_type;
    exception_keeper_value_19 = exception_value;
    exception_keeper_tb_19 = exception_tb;
    exception_keeper_lineno_19 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_5__iter_value);
    tmp_for_loop_5__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_5__for_iterator);
    Py_DECREF(tmp_for_loop_5__for_iterator);
    tmp_for_loop_5__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_19;
    exception_value = exception_keeper_value_19;
    exception_tb = exception_keeper_tb_19;
    exception_lineno = exception_keeper_lineno_19;

    goto frame_exception_exit_1;
    // End of try:
    try_end_13:;
    Py_XDECREF(tmp_for_loop_5__iter_value);
    tmp_for_loop_5__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_5__for_iterator);
    Py_DECREF(tmp_for_loop_5__for_iterator);
    tmp_for_loop_5__for_iterator = NULL;

    {
        nuitka_bool tmp_condition_result_197;
        PyObject *tmp_compexpr_left_73;
        PyObject *tmp_compexpr_right_73;
        PyObject *tmp_len_arg_2;
        PyObject *tmp_tmp_condition_result_197_object_1;
        int tmp_truth_name_129;
        CHECK_OBJECT(var_entries);
        tmp_len_arg_2 = var_entries;
        tmp_compexpr_left_73 = BUILTIN_LEN(tmp_len_arg_2);
        assert(!(tmp_compexpr_left_73 == NULL));
        tmp_compexpr_right_73 = const_int_pos_1;
        tmp_tmp_condition_result_197_object_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_OBJECT(tmp_compexpr_left_73, tmp_compexpr_right_73);
        Py_DECREF(tmp_compexpr_left_73);
        assert(!(tmp_tmp_condition_result_197_object_1 == NULL));
        tmp_truth_name_129 = CHECK_IF_TRUE(tmp_tmp_condition_result_197_object_1);
        assert(!(tmp_truth_name_129 == -1));
        tmp_condition_result_197 = tmp_truth_name_129 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_tmp_condition_result_197_object_1);
        if (tmp_condition_result_197 == NUITKA_BOOL_TRUE) {
            goto branch_yes_194;
        } else {
            goto branch_no_194;
        }
    }
    branch_yes_194:;
    {
        PyObject *tmp_expression_name_186;
        PyObject *tmp_subscript_name_9;
        CHECK_OBJECT(var_entries);
        tmp_expression_name_186 = var_entries;
        tmp_subscript_name_9 = const_int_0;
        tmp_return_value = LOOKUP_SUBSCRIPT_CONST(tmp_expression_name_186, tmp_subscript_name_9, 0);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3450;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    goto branch_end_194;
    branch_no_194:;
    {
        PyObject *tmp_assign_source_248;
        PyObject *tmp_iter_arg_12;
        PyObject *tmp_called_name_195;
        PyObject *tmp_args_name_77;
        PyObject *tmp_tuple_element_80;
        PyObject *tmp_kw_name_77;
        tmp_called_name_195 = (PyObject *)&PyEnum_Type;
        CHECK_OBJECT(var_entries);
        tmp_tuple_element_80 = var_entries;
        tmp_args_name_77 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_80);
        PyTuple_SET_ITEM(tmp_args_name_77, 0, tmp_tuple_element_80);
        tmp_kw_name_77 = PyDict_Copy(const_dict_d86ae6d9cc5bf51b4834b1d52ac321cd);
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3452;
        tmp_iter_arg_12 = CALL_FUNCTION(tmp_called_name_195, tmp_args_name_77, tmp_kw_name_77);
        Py_DECREF(tmp_args_name_77);
        Py_DECREF(tmp_kw_name_77);
        if (tmp_iter_arg_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3452;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_248 = MAKE_ITERATOR(tmp_iter_arg_12);
        Py_DECREF(tmp_iter_arg_12);
        if (tmp_assign_source_248 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3452;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_6__for_iterator == NULL);
        tmp_for_loop_6__for_iterator = tmp_assign_source_248;
    }
    // Tried code:
    loop_start_9:;
    {
        PyObject *tmp_next_source_9;
        PyObject *tmp_assign_source_249;
        CHECK_OBJECT(tmp_for_loop_6__for_iterator);
        tmp_next_source_9 = tmp_for_loop_6__for_iterator;
        tmp_assign_source_249 = ITERATOR_NEXT(tmp_next_source_9);
        if (tmp_assign_source_249 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_9;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                exception_lineno = 3452;
                goto try_except_handler_22;
            }
        }

        {
            PyObject *old = tmp_for_loop_6__iter_value;
            tmp_for_loop_6__iter_value = tmp_assign_source_249;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_250;
        PyObject *tmp_iter_arg_13;
        CHECK_OBJECT(tmp_for_loop_6__iter_value);
        tmp_iter_arg_13 = tmp_for_loop_6__iter_value;
        tmp_assign_source_250 = MAKE_UNPACK_ITERATOR(tmp_iter_arg_13);
        if (tmp_assign_source_250 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3452;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_23;
        }
        {
            PyObject *old = tmp_tuple_unpack_3__source_iter;
            tmp_tuple_unpack_3__source_iter = tmp_assign_source_250;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_251;
        PyObject *tmp_unpack_5;
        CHECK_OBJECT(tmp_tuple_unpack_3__source_iter);
        tmp_unpack_5 = tmp_tuple_unpack_3__source_iter;
        tmp_assign_source_251 = UNPACK_NEXT(tmp_unpack_5, 0, 2);
        if (tmp_assign_source_251 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 3452;
            goto try_except_handler_24;
        }
        {
            PyObject *old = tmp_tuple_unpack_3__element_1;
            tmp_tuple_unpack_3__element_1 = tmp_assign_source_251;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_252;
        PyObject *tmp_unpack_6;
        CHECK_OBJECT(tmp_tuple_unpack_3__source_iter);
        tmp_unpack_6 = tmp_tuple_unpack_3__source_iter;
        tmp_assign_source_252 = UNPACK_NEXT(tmp_unpack_6, 1, 2);
        if (tmp_assign_source_252 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 3452;
            goto try_except_handler_24;
        }
        {
            PyObject *old = tmp_tuple_unpack_3__element_2;
            tmp_tuple_unpack_3__element_2 = tmp_assign_source_252;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_iterator_name_3;
        CHECK_OBJECT(tmp_tuple_unpack_3__source_iter);
        tmp_iterator_name_3 = tmp_tuple_unpack_3__source_iter;
        // Check if iterator has left-over elements.
        CHECK_OBJECT(tmp_iterator_name_3); assert(HAS_ITERNEXT(tmp_iterator_name_3));

        tmp_iterator_attempt = (*Py_TYPE(tmp_iterator_name_3)->tp_iternext)(tmp_iterator_name_3);

        if (likely(tmp_iterator_attempt == NULL)) {
            PyObject *error = GET_ERROR_OCCURRED();

            if (error != NULL) {
                if (EXCEPTION_MATCH_BOOL_SINGLE(error, PyExc_StopIteration)) {
                    CLEAR_ERROR_OCCURRED();
                } else {
                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);

                    type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                    exception_lineno = 3452;
                    goto try_except_handler_24;
                }
            }
        } else {
            Py_DECREF(tmp_iterator_attempt);

            exception_type = PyExc_ValueError;
            Py_INCREF(PyExc_ValueError);
            exception_value = const_str_digest_fcf040720b88d60da4ce975010c44a3a;
            Py_INCREF(exception_value);
            exception_tb = NULL;

            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 3452;
            goto try_except_handler_24;
        }
    }
    goto try_end_14;
    // Exception handler code:
    try_except_handler_24:;
    exception_keeper_type_20 = exception_type;
    exception_keeper_value_20 = exception_value;
    exception_keeper_tb_20 = exception_tb;
    exception_keeper_lineno_20 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_tuple_unpack_3__source_iter);
    Py_DECREF(tmp_tuple_unpack_3__source_iter);
    tmp_tuple_unpack_3__source_iter = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_20;
    exception_value = exception_keeper_value_20;
    exception_tb = exception_keeper_tb_20;
    exception_lineno = exception_keeper_lineno_20;

    goto try_except_handler_23;
    // End of try:
    try_end_14:;
    goto try_end_15;
    // Exception handler code:
    try_except_handler_23:;
    exception_keeper_type_21 = exception_type;
    exception_keeper_value_21 = exception_value;
    exception_keeper_tb_21 = exception_tb;
    exception_keeper_lineno_21 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_tuple_unpack_3__element_1);
    tmp_tuple_unpack_3__element_1 = NULL;

    Py_XDECREF(tmp_tuple_unpack_3__element_2);
    tmp_tuple_unpack_3__element_2 = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_21;
    exception_value = exception_keeper_value_21;
    exception_tb = exception_keeper_tb_21;
    exception_lineno = exception_keeper_lineno_21;

    goto try_except_handler_22;
    // End of try:
    try_end_15:;
    CHECK_OBJECT(tmp_tuple_unpack_3__source_iter);
    Py_DECREF(tmp_tuple_unpack_3__source_iter);
    tmp_tuple_unpack_3__source_iter = NULL;

    {
        PyObject *tmp_assign_source_253;
        CHECK_OBJECT(tmp_tuple_unpack_3__element_1);
        tmp_assign_source_253 = tmp_tuple_unpack_3__element_1;
        {
            PyObject *old = var_num;
            var_num = tmp_assign_source_253;
            Py_INCREF(var_num);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_3__element_1);
    tmp_tuple_unpack_3__element_1 = NULL;

    {
        PyObject *tmp_assign_source_254;
        CHECK_OBJECT(tmp_tuple_unpack_3__element_2);
        tmp_assign_source_254 = tmp_tuple_unpack_3__element_2;
        {
            PyObject *old = var_e;
            var_e = tmp_assign_source_254;
            Py_INCREF(var_e);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_3__element_2);
    tmp_tuple_unpack_3__element_2 = NULL;

    {
        nuitka_bool tmp_condition_result_198;
        PyObject *tmp_compexpr_left_74;
        PyObject *tmp_compexpr_right_74;
        PyObject *tmp_called_instance_335;
        CHECK_OBJECT(var_e);
        tmp_called_instance_335 = var_e;
        frame_ae0fee46d2d491a9a1a436f870d90824->m_frame.f_lineno = 3454;
        tmp_compexpr_left_74 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_335, const_str_plain_get, &PyTuple_GET_ITEM(const_tuple_str_plain_title_tuple, 0));

        if (tmp_compexpr_left_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3454;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_22;
        }
        tmp_compexpr_right_74 = Py_None;
        tmp_condition_result_198 = (tmp_compexpr_left_74 != tmp_compexpr_right_74) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_compexpr_left_74);
        if (tmp_condition_result_198 == NUITKA_BOOL_TRUE) {
            goto branch_yes_195;
        } else {
            goto branch_no_195;
        }
    }
    branch_yes_195:;
    {
        PyObject *tmp_ass_subvalue_1;
        PyObject *tmp_left_name_18;
        PyObject *tmp_right_name_18;
        PyObject *tmp_tuple_element_81;
        PyObject *tmp_expression_name_187;
        PyObject *tmp_subscript_name_10;
        PyObject *tmp_ass_subscribed_1;
        PyObject *tmp_ass_subscript_1;
        tmp_left_name_18 = const_str_digest_29bcbb79266cfdb11ae763605d9c5a61;
        CHECK_OBJECT(var_e);
        tmp_expression_name_187 = var_e;
        tmp_subscript_name_10 = const_str_plain_title;
        tmp_tuple_element_81 = LOOKUP_SUBSCRIPT(tmp_expression_name_187, tmp_subscript_name_10);
        if (tmp_tuple_element_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3455;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_22;
        }
        tmp_right_name_18 = PyTuple_New(2);
        PyTuple_SET_ITEM(tmp_right_name_18, 0, tmp_tuple_element_81);
        CHECK_OBJECT(var_num);
        tmp_tuple_element_81 = var_num;
        Py_INCREF(tmp_tuple_element_81);
        PyTuple_SET_ITEM(tmp_right_name_18, 1, tmp_tuple_element_81);
        tmp_ass_subvalue_1 = BINARY_OPERATION_MOD_OBJECT_UNICODE_TUPLE(tmp_left_name_18, tmp_right_name_18);
        Py_DECREF(tmp_right_name_18);
        if (tmp_ass_subvalue_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3455;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_22;
        }
        CHECK_OBJECT(var_e);
        tmp_ass_subscribed_1 = var_e;
        tmp_ass_subscript_1 = const_str_plain_title;
        tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_1, tmp_ass_subscript_1, tmp_ass_subvalue_1);
        Py_DECREF(tmp_ass_subvalue_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3455;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_22;
        }
    }
    branch_no_195:;
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 3452;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_22;
    }
    goto loop_start_9;
    loop_end_9:;
    goto try_end_16;
    // Exception handler code:
    try_except_handler_22:;
    exception_keeper_type_22 = exception_type;
    exception_keeper_value_22 = exception_value;
    exception_keeper_tb_22 = exception_tb;
    exception_keeper_lineno_22 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_6__iter_value);
    tmp_for_loop_6__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_6__for_iterator);
    Py_DECREF(tmp_for_loop_6__for_iterator);
    tmp_for_loop_6__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_22;
    exception_value = exception_keeper_value_22;
    exception_tb = exception_keeper_tb_22;
    exception_lineno = exception_keeper_lineno_22;

    goto frame_exception_exit_1;
    // End of try:
    try_end_16:;
    Py_XDECREF(tmp_for_loop_6__iter_value);
    tmp_for_loop_6__iter_value = NULL;

    CHECK_OBJECT(tmp_for_loop_6__for_iterator);
    Py_DECREF(tmp_for_loop_6__for_iterator);
    tmp_for_loop_6__for_iterator = NULL;

    {
        PyObject *tmp_dict_key_124;
        PyObject *tmp_dict_value_124;
        PyObject *tmp_dict_key_125;
        PyObject *tmp_dict_value_125;
        tmp_dict_key_124 = const_str_plain__type;
        tmp_dict_value_124 = const_str_plain_playlist;
        tmp_return_value = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_124, tmp_dict_value_124);
        assert(!(tmp_res != 0));
        tmp_dict_key_125 = const_str_plain_entries;
        CHECK_OBJECT(var_entries);
        tmp_dict_value_125 = var_entries;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_125, tmp_dict_value_125);
        assert(!(tmp_res != 0));
        goto frame_return_exit_1;
    }
    branch_end_194:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_ae0fee46d2d491a9a1a436f870d90824);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_4;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_ae0fee46d2d491a9a1a436f870d90824);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_ae0fee46d2d491a9a1a436f870d90824);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_ae0fee46d2d491a9a1a436f870d90824, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_ae0fee46d2d491a9a1a436f870d90824->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_ae0fee46d2d491a9a1a436f870d90824, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_ae0fee46d2d491a9a1a436f870d90824,
        type_description_1,
        par_self,
        par_url,
        var_parsed_url,
        var_default_search,
        var_smuggled_data,
        var_force_videoid,
        var_is_intentional,
        var_video_id,
        var_head_req,
        var_head_response,
        var_new_url,
        var_full_response,
        var_request,
        var_info_dict,
        var_content_type,
        var_m,
        var_format_id,
        var_formats,
        var_force,
        var_first_bytes,
        var_webpage,
        var_doc,
        var_smil,
        var_camtasia_res,
        var_video_title,
        var_age_limit,
        var_AGE_LIMIT_MARKERS,
        var_video_uploader,
        var_video_description,
        var_video_thumbnail,
        var_bc_urls,
        var_entries,
        var_nexx_urls,
        var_nexx_embed_urls,
        var_tp_urls,
        var_matches,
        var_vimeo_urls,
        var_vid_me_embed_url,
        var_youtube_urls,
        var_playlists,
        var_dailymail_urls,
        var_teachable_url,
        var_wistia_urls,
        var_playlist,
        var_entry,
        var_svt_url,
        var_mobj,
        var_burl,
        var_embed_token,
        var_embeds,
        var_facebook_urls,
        var_odnoklassniki_url,
        var_rutv_url,
        var_tvc_url,
        var_sportbox_urls,
        var_xhamster_urls,
        var_tnaflix_urls,
        var_pornhub_urls,
        var_drtuber_urls,
        var_redtube_urls,
        var_tube8_urls,
        var_mofosex_urls,
        var_spankwire_urls,
        var_youporn_urls,
        var_ustream_url,
        var_smotri_url,
        var_myvi_url,
        var_soundcloud_urls,
        var_tunein_urls,
        var_mtvservices_url,
        var_kaltura_urls,
        var_eagleplatform_url,
        var_pladform_url,
        var_videomore_url,
        var_webcaster_url,
        var_nbc_sports_url,
        var_nbc_news_embed_url,
        var_google_drive_url,
        var_senate_isvp_url,
        var_kinja_embed_urls,
        var_onionstudios_url,
        var_viewlift_url,
        var_jwplatform_urls,
        var_digiteka_url,
        var_arkena_url,
        var_piksel_url,
        var_limelight_urls,
        var_anvato_urls,
        var_info,
        var_instagram_embed_url,
        var_liveleak_urls,
        var_threeqsdn_url,
        var_vbox7_url,
        var_dbtv_urls,
        var_videa_urls,
        var_twentymin_urls,
        var_videopress_urls,
        var_rutube_urls,
        var_wapo_urls,
        var_mediaset_urls,
        var_joj_urls,
        var_mpfn_urls,
        var_vzaar_urls,
        var_channel9_urls,
        var_vshare_urls,
        var_mediasite_urls,
        var_springboardplatform_urls,
        var_yapfiles_urls,
        var_vice_urls,
        var_xfileshare_urls,
        var_cloudflarestream_urls,
        var_peertube_urls,
        var_indavideo_urls,
        var_apa_urls,
        var_foxnews_urls,
        var_sharevideos_urls,
        var_viqeo_urls,
        var_expressen_urls,
        var_zype_urls,
        var_num,
        var_jwplayer_data,
        var_sources,
        var_source,
        var_src,
        var_src_type,
        var_ext,
        var_json_ld,
        var_check_video,
        var_filter_video,
        var_found,
        var_m_video_type,
        NULL,
        var_refresh_header,
        var_embed_url,
        var_video_url,
        var_entry_info_dict,
        var_e
    );


    // Release cached frame.
    if (frame_ae0fee46d2d491a9a1a436f870d90824 == cache_frame_ae0fee46d2d491a9a1a436f870d90824) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(frame_ae0fee46d2d491a9a1a436f870d90824);
    }
    cache_frame_ae0fee46d2d491a9a1a436f870d90824 = NULL;

    assertFrameObject(frame_ae0fee46d2d491a9a1a436f870d90824);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_4:;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(par_url);
    Py_DECREF(par_url);
    par_url = NULL;

    Py_XDECREF(var_parsed_url);
    var_parsed_url = NULL;

    Py_XDECREF(var_default_search);
    var_default_search = NULL;

    Py_XDECREF(var_smuggled_data);
    var_smuggled_data = NULL;

    Py_XDECREF(var_force_videoid);
    var_force_videoid = NULL;

    Py_XDECREF(var_is_intentional);
    var_is_intentional = NULL;

    Py_XDECREF(var_video_id);
    var_video_id = NULL;

    Py_XDECREF(var_head_req);
    var_head_req = NULL;

    Py_XDECREF(var_head_response);
    var_head_response = NULL;

    Py_XDECREF(var_new_url);
    var_new_url = NULL;

    Py_XDECREF(var_full_response);
    var_full_response = NULL;

    Py_XDECREF(var_request);
    var_request = NULL;

    Py_XDECREF(var_info_dict);
    var_info_dict = NULL;

    Py_XDECREF(var_content_type);
    var_content_type = NULL;

    Py_XDECREF(var_m);
    var_m = NULL;

    Py_XDECREF(var_format_id);
    var_format_id = NULL;

    Py_XDECREF(var_formats);
    var_formats = NULL;

    Py_XDECREF(var_force);
    var_force = NULL;

    Py_XDECREF(var_first_bytes);
    var_first_bytes = NULL;

    CHECK_OBJECT(var_webpage);
    Py_DECREF(var_webpage);
    var_webpage = NULL;

    Py_XDECREF(var_doc);
    var_doc = NULL;

    Py_XDECREF(var_smil);
    var_smil = NULL;

    Py_XDECREF(var_camtasia_res);
    var_camtasia_res = NULL;

    Py_XDECREF(var_video_title);
    var_video_title = NULL;

    Py_XDECREF(var_age_limit);
    var_age_limit = NULL;

    Py_XDECREF(var_AGE_LIMIT_MARKERS);
    var_AGE_LIMIT_MARKERS = NULL;

    Py_XDECREF(var_video_uploader);
    var_video_uploader = NULL;

    Py_XDECREF(var_video_description);
    var_video_description = NULL;

    Py_XDECREF(var_video_thumbnail);
    var_video_thumbnail = NULL;

    Py_XDECREF(var_bc_urls);
    var_bc_urls = NULL;

    Py_XDECREF(var_entries);
    var_entries = NULL;

    Py_XDECREF(var_nexx_urls);
    var_nexx_urls = NULL;

    Py_XDECREF(var_nexx_embed_urls);
    var_nexx_embed_urls = NULL;

    Py_XDECREF(var_tp_urls);
    var_tp_urls = NULL;

    Py_XDECREF(var_matches);
    var_matches = NULL;

    Py_XDECREF(var_vimeo_urls);
    var_vimeo_urls = NULL;

    Py_XDECREF(var_vid_me_embed_url);
    var_vid_me_embed_url = NULL;

    Py_XDECREF(var_youtube_urls);
    var_youtube_urls = NULL;

    Py_XDECREF(var_playlists);
    var_playlists = NULL;

    Py_XDECREF(var_dailymail_urls);
    var_dailymail_urls = NULL;

    Py_XDECREF(var_teachable_url);
    var_teachable_url = NULL;

    Py_XDECREF(var_wistia_urls);
    var_wistia_urls = NULL;

    Py_XDECREF(var_playlist);
    var_playlist = NULL;

    Py_XDECREF(var_entry);
    var_entry = NULL;

    Py_XDECREF(var_svt_url);
    var_svt_url = NULL;

    Py_XDECREF(var_mobj);
    var_mobj = NULL;

    Py_XDECREF(var_burl);
    var_burl = NULL;

    Py_XDECREF(var_embed_token);
    var_embed_token = NULL;

    Py_XDECREF(var_embeds);
    var_embeds = NULL;

    Py_XDECREF(var_facebook_urls);
    var_facebook_urls = NULL;

    Py_XDECREF(var_odnoklassniki_url);
    var_odnoklassniki_url = NULL;

    Py_XDECREF(var_rutv_url);
    var_rutv_url = NULL;

    Py_XDECREF(var_tvc_url);
    var_tvc_url = NULL;

    Py_XDECREF(var_sportbox_urls);
    var_sportbox_urls = NULL;

    Py_XDECREF(var_xhamster_urls);
    var_xhamster_urls = NULL;

    Py_XDECREF(var_tnaflix_urls);
    var_tnaflix_urls = NULL;

    Py_XDECREF(var_pornhub_urls);
    var_pornhub_urls = NULL;

    Py_XDECREF(var_drtuber_urls);
    var_drtuber_urls = NULL;

    Py_XDECREF(var_redtube_urls);
    var_redtube_urls = NULL;

    Py_XDECREF(var_tube8_urls);
    var_tube8_urls = NULL;

    Py_XDECREF(var_mofosex_urls);
    var_mofosex_urls = NULL;

    Py_XDECREF(var_spankwire_urls);
    var_spankwire_urls = NULL;

    Py_XDECREF(var_youporn_urls);
    var_youporn_urls = NULL;

    Py_XDECREF(var_ustream_url);
    var_ustream_url = NULL;

    Py_XDECREF(var_smotri_url);
    var_smotri_url = NULL;

    Py_XDECREF(var_myvi_url);
    var_myvi_url = NULL;

    Py_XDECREF(var_soundcloud_urls);
    var_soundcloud_urls = NULL;

    Py_XDECREF(var_tunein_urls);
    var_tunein_urls = NULL;

    Py_XDECREF(var_mtvservices_url);
    var_mtvservices_url = NULL;

    Py_XDECREF(var_kaltura_urls);
    var_kaltura_urls = NULL;

    Py_XDECREF(var_eagleplatform_url);
    var_eagleplatform_url = NULL;

    Py_XDECREF(var_pladform_url);
    var_pladform_url = NULL;

    Py_XDECREF(var_videomore_url);
    var_videomore_url = NULL;

    Py_XDECREF(var_webcaster_url);
    var_webcaster_url = NULL;

    Py_XDECREF(var_nbc_sports_url);
    var_nbc_sports_url = NULL;

    Py_XDECREF(var_nbc_news_embed_url);
    var_nbc_news_embed_url = NULL;

    Py_XDECREF(var_google_drive_url);
    var_google_drive_url = NULL;

    Py_XDECREF(var_senate_isvp_url);
    var_senate_isvp_url = NULL;

    Py_XDECREF(var_kinja_embed_urls);
    var_kinja_embed_urls = NULL;

    Py_XDECREF(var_onionstudios_url);
    var_onionstudios_url = NULL;

    Py_XDECREF(var_viewlift_url);
    var_viewlift_url = NULL;

    Py_XDECREF(var_jwplatform_urls);
    var_jwplatform_urls = NULL;

    Py_XDECREF(var_digiteka_url);
    var_digiteka_url = NULL;

    Py_XDECREF(var_arkena_url);
    var_arkena_url = NULL;

    Py_XDECREF(var_piksel_url);
    var_piksel_url = NULL;

    Py_XDECREF(var_limelight_urls);
    var_limelight_urls = NULL;

    Py_XDECREF(var_anvato_urls);
    var_anvato_urls = NULL;

    Py_XDECREF(var_info);
    var_info = NULL;

    Py_XDECREF(var_instagram_embed_url);
    var_instagram_embed_url = NULL;

    Py_XDECREF(var_liveleak_urls);
    var_liveleak_urls = NULL;

    Py_XDECREF(var_threeqsdn_url);
    var_threeqsdn_url = NULL;

    Py_XDECREF(var_vbox7_url);
    var_vbox7_url = NULL;

    Py_XDECREF(var_dbtv_urls);
    var_dbtv_urls = NULL;

    Py_XDECREF(var_videa_urls);
    var_videa_urls = NULL;

    Py_XDECREF(var_twentymin_urls);
    var_twentymin_urls = NULL;

    Py_XDECREF(var_videopress_urls);
    var_videopress_urls = NULL;

    Py_XDECREF(var_rutube_urls);
    var_rutube_urls = NULL;

    Py_XDECREF(var_wapo_urls);
    var_wapo_urls = NULL;

    Py_XDECREF(var_mediaset_urls);
    var_mediaset_urls = NULL;

    Py_XDECREF(var_joj_urls);
    var_joj_urls = NULL;

    Py_XDECREF(var_mpfn_urls);
    var_mpfn_urls = NULL;

    Py_XDECREF(var_vzaar_urls);
    var_vzaar_urls = NULL;

    Py_XDECREF(var_channel9_urls);
    var_channel9_urls = NULL;

    Py_XDECREF(var_vshare_urls);
    var_vshare_urls = NULL;

    Py_XDECREF(var_mediasite_urls);
    var_mediasite_urls = NULL;

    Py_XDECREF(var_springboardplatform_urls);
    var_springboardplatform_urls = NULL;

    Py_XDECREF(var_yapfiles_urls);
    var_yapfiles_urls = NULL;

    Py_XDECREF(var_vice_urls);
    var_vice_urls = NULL;

    Py_XDECREF(var_xfileshare_urls);
    var_xfileshare_urls = NULL;

    Py_XDECREF(var_cloudflarestream_urls);
    var_cloudflarestream_urls = NULL;

    Py_XDECREF(var_peertube_urls);
    var_peertube_urls = NULL;

    Py_XDECREF(var_indavideo_urls);
    var_indavideo_urls = NULL;

    Py_XDECREF(var_apa_urls);
    var_apa_urls = NULL;

    Py_XDECREF(var_foxnews_urls);
    var_foxnews_urls = NULL;

    Py_XDECREF(var_sharevideos_urls);
    var_sharevideos_urls = NULL;

    Py_XDECREF(var_viqeo_urls);
    var_viqeo_urls = NULL;

    Py_XDECREF(var_expressen_urls);
    var_expressen_urls = NULL;

    Py_XDECREF(var_zype_urls);
    var_zype_urls = NULL;

    Py_XDECREF(var_num);
    var_num = NULL;

    Py_XDECREF(var_jwplayer_data);
    var_jwplayer_data = NULL;

    Py_XDECREF(var_sources);
    var_sources = NULL;

    Py_XDECREF(var_source);
    var_source = NULL;

    Py_XDECREF(var_src);
    var_src = NULL;

    Py_XDECREF(var_src_type);
    var_src_type = NULL;

    Py_XDECREF(var_ext);
    var_ext = NULL;

    Py_XDECREF(var_json_ld);
    var_json_ld = NULL;

    CHECK_OBJECT(var_check_video);
    Py_DECREF(var_check_video);
    var_check_video = NULL;

    Py_XDECREF(var_filter_video);
    var_filter_video = NULL;

    Py_XDECREF(var_found);
    var_found = NULL;

    Py_XDECREF(var_m_video_type);
    var_m_video_type = NULL;

    Py_XDECREF(var_refresh_header);
    var_refresh_header = NULL;

    Py_XDECREF(var_embed_url);
    var_embed_url = NULL;

    Py_XDECREF(var_video_url);
    var_video_url = NULL;

    Py_XDECREF(var_entry_info_dict);
    var_entry_info_dict = NULL;

    Py_XDECREF(var_e);
    var_e = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_23 = exception_type;
    exception_keeper_value_23 = exception_value;
    exception_keeper_tb_23 = exception_tb;
    exception_keeper_lineno_23 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(par_url);
    Py_DECREF(par_url);
    par_url = NULL;

    Py_XDECREF(var_parsed_url);
    var_parsed_url = NULL;

    Py_XDECREF(var_default_search);
    var_default_search = NULL;

    Py_XDECREF(var_smuggled_data);
    var_smuggled_data = NULL;

    Py_XDECREF(var_force_videoid);
    var_force_videoid = NULL;

    Py_XDECREF(var_is_intentional);
    var_is_intentional = NULL;

    Py_XDECREF(var_video_id);
    var_video_id = NULL;

    Py_XDECREF(var_head_req);
    var_head_req = NULL;

    Py_XDECREF(var_head_response);
    var_head_response = NULL;

    Py_XDECREF(var_new_url);
    var_new_url = NULL;

    Py_XDECREF(var_full_response);
    var_full_response = NULL;

    Py_XDECREF(var_request);
    var_request = NULL;

    Py_XDECREF(var_info_dict);
    var_info_dict = NULL;

    Py_XDECREF(var_content_type);
    var_content_type = NULL;

    Py_XDECREF(var_m);
    var_m = NULL;

    Py_XDECREF(var_format_id);
    var_format_id = NULL;

    Py_XDECREF(var_formats);
    var_formats = NULL;

    Py_XDECREF(var_force);
    var_force = NULL;

    Py_XDECREF(var_first_bytes);
    var_first_bytes = NULL;

    CHECK_OBJECT(var_webpage);
    Py_DECREF(var_webpage);
    var_webpage = NULL;

    Py_XDECREF(var_doc);
    var_doc = NULL;

    Py_XDECREF(var_smil);
    var_smil = NULL;

    Py_XDECREF(var_camtasia_res);
    var_camtasia_res = NULL;

    Py_XDECREF(var_video_title);
    var_video_title = NULL;

    Py_XDECREF(var_age_limit);
    var_age_limit = NULL;

    Py_XDECREF(var_AGE_LIMIT_MARKERS);
    var_AGE_LIMIT_MARKERS = NULL;

    Py_XDECREF(var_video_uploader);
    var_video_uploader = NULL;

    Py_XDECREF(var_video_description);
    var_video_description = NULL;

    Py_XDECREF(var_video_thumbnail);
    var_video_thumbnail = NULL;

    Py_XDECREF(var_bc_urls);
    var_bc_urls = NULL;

    Py_XDECREF(var_entries);
    var_entries = NULL;

    Py_XDECREF(var_nexx_urls);
    var_nexx_urls = NULL;

    Py_XDECREF(var_nexx_embed_urls);
    var_nexx_embed_urls = NULL;

    Py_XDECREF(var_tp_urls);
    var_tp_urls = NULL;

    Py_XDECREF(var_matches);
    var_matches = NULL;

    Py_XDECREF(var_vimeo_urls);
    var_vimeo_urls = NULL;

    Py_XDECREF(var_vid_me_embed_url);
    var_vid_me_embed_url = NULL;

    Py_XDECREF(var_youtube_urls);
    var_youtube_urls = NULL;

    Py_XDECREF(var_playlists);
    var_playlists = NULL;

    Py_XDECREF(var_dailymail_urls);
    var_dailymail_urls = NULL;

    Py_XDECREF(var_teachable_url);
    var_teachable_url = NULL;

    Py_XDECREF(var_wistia_urls);
    var_wistia_urls = NULL;

    Py_XDECREF(var_playlist);
    var_playlist = NULL;

    Py_XDECREF(var_entry);
    var_entry = NULL;

    Py_XDECREF(var_svt_url);
    var_svt_url = NULL;

    Py_XDECREF(var_mobj);
    var_mobj = NULL;

    Py_XDECREF(var_burl);
    var_burl = NULL;

    Py_XDECREF(var_embed_token);
    var_embed_token = NULL;

    Py_XDECREF(var_embeds);
    var_embeds = NULL;

    Py_XDECREF(var_facebook_urls);
    var_facebook_urls = NULL;

    Py_XDECREF(var_odnoklassniki_url);
    var_odnoklassniki_url = NULL;

    Py_XDECREF(var_rutv_url);
    var_rutv_url = NULL;

    Py_XDECREF(var_tvc_url);
    var_tvc_url = NULL;

    Py_XDECREF(var_sportbox_urls);
    var_sportbox_urls = NULL;

    Py_XDECREF(var_xhamster_urls);
    var_xhamster_urls = NULL;

    Py_XDECREF(var_tnaflix_urls);
    var_tnaflix_urls = NULL;

    Py_XDECREF(var_pornhub_urls);
    var_pornhub_urls = NULL;

    Py_XDECREF(var_drtuber_urls);
    var_drtuber_urls = NULL;

    Py_XDECREF(var_redtube_urls);
    var_redtube_urls = NULL;

    Py_XDECREF(var_tube8_urls);
    var_tube8_urls = NULL;

    Py_XDECREF(var_mofosex_urls);
    var_mofosex_urls = NULL;

    Py_XDECREF(var_spankwire_urls);
    var_spankwire_urls = NULL;

    Py_XDECREF(var_youporn_urls);
    var_youporn_urls = NULL;

    Py_XDECREF(var_ustream_url);
    var_ustream_url = NULL;

    Py_XDECREF(var_smotri_url);
    var_smotri_url = NULL;

    Py_XDECREF(var_myvi_url);
    var_myvi_url = NULL;

    Py_XDECREF(var_soundcloud_urls);
    var_soundcloud_urls = NULL;

    Py_XDECREF(var_tunein_urls);
    var_tunein_urls = NULL;

    Py_XDECREF(var_mtvservices_url);
    var_mtvservices_url = NULL;

    Py_XDECREF(var_kaltura_urls);
    var_kaltura_urls = NULL;

    Py_XDECREF(var_eagleplatform_url);
    var_eagleplatform_url = NULL;

    Py_XDECREF(var_pladform_url);
    var_pladform_url = NULL;

    Py_XDECREF(var_videomore_url);
    var_videomore_url = NULL;

    Py_XDECREF(var_webcaster_url);
    var_webcaster_url = NULL;

    Py_XDECREF(var_nbc_sports_url);
    var_nbc_sports_url = NULL;

    Py_XDECREF(var_nbc_news_embed_url);
    var_nbc_news_embed_url = NULL;

    Py_XDECREF(var_google_drive_url);
    var_google_drive_url = NULL;

    Py_XDECREF(var_senate_isvp_url);
    var_senate_isvp_url = NULL;

    Py_XDECREF(var_kinja_embed_urls);
    var_kinja_embed_urls = NULL;

    Py_XDECREF(var_onionstudios_url);
    var_onionstudios_url = NULL;

    Py_XDECREF(var_viewlift_url);
    var_viewlift_url = NULL;

    Py_XDECREF(var_jwplatform_urls);
    var_jwplatform_urls = NULL;

    Py_XDECREF(var_digiteka_url);
    var_digiteka_url = NULL;

    Py_XDECREF(var_arkena_url);
    var_arkena_url = NULL;

    Py_XDECREF(var_piksel_url);
    var_piksel_url = NULL;

    Py_XDECREF(var_limelight_urls);
    var_limelight_urls = NULL;

    Py_XDECREF(var_anvato_urls);
    var_anvato_urls = NULL;

    Py_XDECREF(var_info);
    var_info = NULL;

    Py_XDECREF(var_instagram_embed_url);
    var_instagram_embed_url = NULL;

    Py_XDECREF(var_liveleak_urls);
    var_liveleak_urls = NULL;

    Py_XDECREF(var_threeqsdn_url);
    var_threeqsdn_url = NULL;

    Py_XDECREF(var_vbox7_url);
    var_vbox7_url = NULL;

    Py_XDECREF(var_dbtv_urls);
    var_dbtv_urls = NULL;

    Py_XDECREF(var_videa_urls);
    var_videa_urls = NULL;

    Py_XDECREF(var_twentymin_urls);
    var_twentymin_urls = NULL;

    Py_XDECREF(var_videopress_urls);
    var_videopress_urls = NULL;

    Py_XDECREF(var_rutube_urls);
    var_rutube_urls = NULL;

    Py_XDECREF(var_wapo_urls);
    var_wapo_urls = NULL;

    Py_XDECREF(var_mediaset_urls);
    var_mediaset_urls = NULL;

    Py_XDECREF(var_joj_urls);
    var_joj_urls = NULL;

    Py_XDECREF(var_mpfn_urls);
    var_mpfn_urls = NULL;

    Py_XDECREF(var_vzaar_urls);
    var_vzaar_urls = NULL;

    Py_XDECREF(var_channel9_urls);
    var_channel9_urls = NULL;

    Py_XDECREF(var_vshare_urls);
    var_vshare_urls = NULL;

    Py_XDECREF(var_mediasite_urls);
    var_mediasite_urls = NULL;

    Py_XDECREF(var_springboardplatform_urls);
    var_springboardplatform_urls = NULL;

    Py_XDECREF(var_yapfiles_urls);
    var_yapfiles_urls = NULL;

    Py_XDECREF(var_vice_urls);
    var_vice_urls = NULL;

    Py_XDECREF(var_xfileshare_urls);
    var_xfileshare_urls = NULL;

    Py_XDECREF(var_cloudflarestream_urls);
    var_cloudflarestream_urls = NULL;

    Py_XDECREF(var_peertube_urls);
    var_peertube_urls = NULL;

    Py_XDECREF(var_indavideo_urls);
    var_indavideo_urls = NULL;

    Py_XDECREF(var_apa_urls);
    var_apa_urls = NULL;

    Py_XDECREF(var_foxnews_urls);
    var_foxnews_urls = NULL;

    Py_XDECREF(var_sharevideos_urls);
    var_sharevideos_urls = NULL;

    Py_XDECREF(var_viqeo_urls);
    var_viqeo_urls = NULL;

    Py_XDECREF(var_expressen_urls);
    var_expressen_urls = NULL;

    Py_XDECREF(var_zype_urls);
    var_zype_urls = NULL;

    Py_XDECREF(var_num);
    var_num = NULL;

    Py_XDECREF(var_jwplayer_data);
    var_jwplayer_data = NULL;

    Py_XDECREF(var_sources);
    var_sources = NULL;

    Py_XDECREF(var_source);
    var_source = NULL;

    Py_XDECREF(var_src);
    var_src = NULL;

    Py_XDECREF(var_src_type);
    var_src_type = NULL;

    Py_XDECREF(var_ext);
    var_ext = NULL;

    Py_XDECREF(var_json_ld);
    var_json_ld = NULL;

    CHECK_OBJECT(var_check_video);
    Py_DECREF(var_check_video);
    var_check_video = NULL;

    Py_XDECREF(var_filter_video);
    var_filter_video = NULL;

    Py_XDECREF(var_found);
    var_found = NULL;

    Py_XDECREF(var_m_video_type);
    var_m_video_type = NULL;

    Py_XDECREF(var_refresh_header);
    var_refresh_header = NULL;

    Py_XDECREF(var_embed_url);
    var_embed_url = NULL;

    Py_XDECREF(var_video_url);
    var_video_url = NULL;

    Py_XDECREF(var_entry_info_dict);
    var_entry_info_dict = NULL;

    Py_XDECREF(var_e);
    var_e = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_23;
    exception_value = exception_keeper_value_23;
    exception_tb = exception_keeper_tb_23;
    exception_lineno = exception_keeper_lineno_23;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_1_lambda(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_x = python_pars[0];
    struct Nuitka_FrameObject *frame_3943c14c5d97169024667e799ac3ac3a;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_3943c14c5d97169024667e799ac3ac3a = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_3943c14c5d97169024667e799ac3ac3a)) {
        Py_XDECREF(cache_frame_3943c14c5d97169024667e799ac3ac3a);

#if _DEBUG_REFCOUNTS
        if (cache_frame_3943c14c5d97169024667e799ac3ac3a == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_3943c14c5d97169024667e799ac3ac3a = MAKE_FUNCTION_FRAME(codeobj_3943c14c5d97169024667e799ac3ac3a, module_youtube_dl$extractor$generic, sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_3943c14c5d97169024667e799ac3ac3a->m_type_description == NULL);
    frame_3943c14c5d97169024667e799ac3ac3a = cache_frame_3943c14c5d97169024667e799ac3ac3a;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_3943c14c5d97169024667e799ac3ac3a);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_3943c14c5d97169024667e799ac3ac3a) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_called_instance_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unescapeHTML);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_unescapeHTML);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33553 ], 34, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2432;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_x);
        tmp_called_instance_1 = par_x;
        frame_3943c14c5d97169024667e799ac3ac3a->m_frame.f_lineno = 2432;
        tmp_args_element_name_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_0_tuple, 0));

        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2432;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        frame_3943c14c5d97169024667e799ac3ac3a->m_frame.f_lineno = 2432;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2432;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_3943c14c5d97169024667e799ac3ac3a);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_3943c14c5d97169024667e799ac3ac3a);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_3943c14c5d97169024667e799ac3ac3a);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_3943c14c5d97169024667e799ac3ac3a, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_3943c14c5d97169024667e799ac3ac3a->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_3943c14c5d97169024667e799ac3ac3a, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_3943c14c5d97169024667e799ac3ac3a,
        type_description_1,
        par_x
    );


    // Release cached frame.
    if (frame_3943c14c5d97169024667e799ac3ac3a == cache_frame_3943c14c5d97169024667e799ac3ac3a) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(frame_3943c14c5d97169024667e799ac3ac3a);
    }
    cache_frame_3943c14c5d97169024667e799ac3ac3a = NULL;

    assertFrameObject(frame_3943c14c5d97169024667e799ac3ac3a);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_x);
    Py_DECREF(par_x);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_x);
    Py_DECREF(par_x);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}



struct youtube_dl$extractor$generic$$$function_4__real_extract$$$genexpr_1_genexpr_locals {
    PyObject *var_marker;
    PyObject *tmp_iter_value_0;
    char const *type_description_1;
    PyObject *exception_type;
    PyObject *exception_value;
    PyTracebackObject *exception_tb;
    int exception_lineno;
    char yield_tmps[1024];
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    int exception_keeper_lineno_2;
};

static PyObject *youtube_dl$extractor$generic$$$function_4__real_extract$$$genexpr_1_genexpr_context(struct Nuitka_GeneratorObject *generator, PyObject *yield_return_value) {
    CHECK_OBJECT(generator);
    assert(Nuitka_Generator_Check( (PyObject *)generator ));

    // Heap access if used.
    struct youtube_dl$extractor$generic$$$function_4__real_extract$$$genexpr_1_genexpr_locals *generator_heap = (struct youtube_dl$extractor$generic$$$function_4__real_extract$$$genexpr_1_genexpr_locals *)generator->m_heap_storage;

    // Dispatch to yield based on return label index:
    switch(generator->m_yield_return_index) {
    case 1: goto yield_return_1;
    }

    // Local variable initialization
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    static struct Nuitka_FrameObject *cache_m_frame = NULL;
    generator_heap->var_marker = NULL;
    generator_heap->tmp_iter_value_0 = NULL;
    generator_heap->type_description_1 = NULL;
    generator_heap->exception_type = NULL;
    generator_heap->exception_value = NULL;
    generator_heap->exception_tb = NULL;
    generator_heap->exception_lineno = 0;

    // Actual generator function body.
    // Tried code:
    if (isFrameUnusable(cache_m_frame)) {
        Py_XDECREF(cache_m_frame);

#if _DEBUG_REFCOUNTS
        if (cache_m_frame == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_m_frame = MAKE_FUNCTION_FRAME(codeobj_68f90d7bf2732be80a8d164ed576613c, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    generator->m_frame = cache_m_frame;

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    Py_INCREF(generator->m_frame);
    assert(Py_REFCNT(generator->m_frame) == 2); // Frame stack

#if PYTHON_VERSION >= 340
    generator->m_frame->m_frame.f_gen = (PyObject *)generator;
#endif

    assert(generator->m_frame->m_frame.f_back == NULL);
    Py_CLEAR(generator->m_frame->m_frame.f_back);

    generator->m_frame->m_frame.f_back = PyThreadState_GET()->frame;
    Py_INCREF(generator->m_frame->m_frame.f_back);

    PyThreadState_GET()->frame = &generator->m_frame->m_frame;
    Py_INCREF(generator->m_frame);

    Nuitka_Frame_MarkAsExecuting(generator->m_frame);

#if PYTHON_VERSION >= 300
    // Accept currently existing exception as the one to publish again when we
    // yield or yield from.
    {
        PyThreadState *thread_state = PyThreadState_GET();

        EXC_TYPE_F(generator) = EXC_TYPE(thread_state);
        if (EXC_TYPE_F(generator) == Py_None) EXC_TYPE_F(generator) = NULL;
        Py_XINCREF(EXC_TYPE_F(generator));
        EXC_VALUE_F(generator) = EXC_VALUE(thread_state);
        Py_XINCREF(EXC_VALUE_F(generator));
        EXC_TRACEBACK_F(generator) = EXC_TRACEBACK(thread_state);
        Py_XINCREF(EXC_TRACEBACK_F(generator));
    }

#endif

    // Framed code:
    // Tried code:
    loop_start_1:;
    {
        PyObject *tmp_next_source_1;
        PyObject *tmp_assign_source_1;
        CHECK_OBJECT(PyCell_GET(generator->m_closure[0]));
        tmp_next_source_1 = PyCell_GET(generator->m_closure[0]);
        tmp_assign_source_1 = ITERATOR_NEXT(tmp_next_source_1);
        if (tmp_assign_source_1 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_1;
            } else {

                FETCH_ERROR_OCCURRED(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);
                generator_heap->type_description_1 = "Noc";
                generator_heap->exception_lineno = 2452;
                goto try_except_handler_2;
            }
        }

        {
            PyObject *old = generator_heap->tmp_iter_value_0;
            generator_heap->tmp_iter_value_0 = tmp_assign_source_1;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_2;
        CHECK_OBJECT(generator_heap->tmp_iter_value_0);
        tmp_assign_source_2 = generator_heap->tmp_iter_value_0;
        {
            PyObject *old = generator_heap->var_marker;
            generator_heap->var_marker = tmp_assign_source_2;
            Py_INCREF(generator_heap->var_marker);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_expression_name_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_expression_name_2;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_args_element_name_2;
        NUITKA_MAY_BE_UNUSED PyObject *tmp_yield_result_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_1 == NULL) {

            generator_heap->exception_type = PyExc_NameError;
            Py_INCREF(generator_heap->exception_type);
            generator_heap->exception_value = UNSTREAM_STRING(&constant_bin[ 2114 ], 24, 0);
            generator_heap->exception_tb = NULL;
            NORMALIZE_EXCEPTION(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);
            CHAIN_EXCEPTION(generator_heap->exception_value);

            generator_heap->exception_lineno = 2452;
            generator_heap->type_description_1 = "Noc";
            goto try_except_handler_2;
        }

        tmp_expression_name_2 = tmp_mvar_value_1;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_expression_name_2, const_str_plain_search);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);


            generator_heap->exception_lineno = 2452;
            generator_heap->type_description_1 = "Noc";
            goto try_except_handler_2;
        }
        CHECK_OBJECT(generator_heap->var_marker);
        tmp_args_element_name_1 = generator_heap->var_marker;
        if (PyCell_GET(generator->m_closure[1]) == NULL) {
            Py_DECREF(tmp_called_name_1);
            generator_heap->exception_type = PyExc_NameError;
            Py_INCREF(generator_heap->exception_type);
            generator_heap->exception_value = PyUnicode_FromFormat("free variable '%s' referenced before assignment in enclosing scope", "webpage");
            generator_heap->exception_tb = NULL;
            NORMALIZE_EXCEPTION(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);
            CHAIN_EXCEPTION(generator_heap->exception_value);

            generator_heap->exception_lineno = 2452;
            generator_heap->type_description_1 = "Noc";
            goto try_except_handler_2;
        }

        tmp_args_element_name_2 = PyCell_GET(generator->m_closure[1]);
        generator->m_frame->m_frame.f_lineno = 2452;
        {
            PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2};
            tmp_expression_name_1 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_1, call_args);
        }

        Py_DECREF(tmp_called_name_1);
        if (tmp_expression_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);


            generator_heap->exception_lineno = 2452;
            generator_heap->type_description_1 = "Noc";
            goto try_except_handler_2;
        }
        Nuitka_PreserveHeap(generator_heap->yield_tmps, &tmp_called_name_1, sizeof(PyObject *), &tmp_expression_name_2, sizeof(PyObject *), &tmp_mvar_value_1, sizeof(PyObject *), &tmp_args_element_name_1, sizeof(PyObject *), &tmp_args_element_name_2, sizeof(PyObject *), NULL);
        generator->m_yield_return_index = 1;
        return tmp_expression_name_1;
        yield_return_1:
        Nuitka_RestoreHeap(generator_heap->yield_tmps, &tmp_called_name_1, sizeof(PyObject *), &tmp_expression_name_2, sizeof(PyObject *), &tmp_mvar_value_1, sizeof(PyObject *), &tmp_args_element_name_1, sizeof(PyObject *), &tmp_args_element_name_2, sizeof(PyObject *), NULL);
        if (yield_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);


            generator_heap->exception_lineno = 2452;
            generator_heap->type_description_1 = "Noc";
            goto try_except_handler_2;
        }
        tmp_yield_result_1 = yield_return_value;
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);


        generator_heap->exception_lineno = 2452;
        generator_heap->type_description_1 = "Noc";
        goto try_except_handler_2;
    }
    goto loop_start_1;
    loop_end_1:;
    goto try_end_1;
    // Exception handler code:
    try_except_handler_2:;
    generator_heap->exception_keeper_type_1 = generator_heap->exception_type;
    generator_heap->exception_keeper_value_1 = generator_heap->exception_value;
    generator_heap->exception_keeper_tb_1 = generator_heap->exception_tb;
    generator_heap->exception_keeper_lineno_1 = generator_heap->exception_lineno;
    generator_heap->exception_type = NULL;
    generator_heap->exception_value = NULL;
    generator_heap->exception_tb = NULL;
    generator_heap->exception_lineno = 0;

    Py_XDECREF(generator_heap->tmp_iter_value_0);
    generator_heap->tmp_iter_value_0 = NULL;

    // Re-raise.
    generator_heap->exception_type = generator_heap->exception_keeper_type_1;
    generator_heap->exception_value = generator_heap->exception_keeper_value_1;
    generator_heap->exception_tb = generator_heap->exception_keeper_tb_1;
    generator_heap->exception_lineno = generator_heap->exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;

    Nuitka_Frame_MarkAsNotExecuting(generator->m_frame);

#if PYTHON_VERSION >= 300
    Py_CLEAR(EXC_TYPE_F(generator));
    Py_CLEAR(EXC_VALUE_F(generator));
    Py_CLEAR(EXC_TRACEBACK_F(generator));
#endif

    // Allow re-use of the frame again.
    Py_DECREF(generator->m_frame);
    goto frame_no_exception_1;

    frame_exception_exit_1:;

    // If it's not an exit exception, consider and create a traceback for it.
    if (!EXCEPTION_MATCH_GENERATOR(generator_heap->exception_type)) {
        if (generator_heap->exception_tb == NULL) {
            generator_heap->exception_tb = MAKE_TRACEBACK(generator->m_frame, generator_heap->exception_lineno);
        } else if (generator_heap->exception_tb->tb_frame != &generator->m_frame->m_frame) {
            generator_heap->exception_tb = ADD_TRACEBACK(generator_heap->exception_tb, generator->m_frame, generator_heap->exception_lineno);
        }

        Nuitka_Frame_AttachLocals(
            generator->m_frame,
            generator_heap->type_description_1,
            NULL,
            generator_heap->var_marker,
            generator->m_closure[1]
        );


        // Release cached frame.
        if (generator->m_frame == cache_m_frame) {
#if _DEBUG_REFCOUNTS
            count_active_frame_cache_instances -= 1;
            count_released_frame_cache_instances += 1;
#endif

            Py_DECREF(generator->m_frame);
        }
        cache_m_frame = NULL;

        assertFrameObject(generator->m_frame);
    }

#if PYTHON_VERSION >= 300
    Py_CLEAR(EXC_TYPE_F(generator));
    Py_CLEAR(EXC_VALUE_F(generator));
    Py_CLEAR(EXC_TRACEBACK_F(generator));
#endif

    Py_DECREF(generator->m_frame);

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    goto try_end_2;
    // Exception handler code:
    try_except_handler_1:;
    generator_heap->exception_keeper_type_2 = generator_heap->exception_type;
    generator_heap->exception_keeper_value_2 = generator_heap->exception_value;
    generator_heap->exception_keeper_tb_2 = generator_heap->exception_tb;
    generator_heap->exception_keeper_lineno_2 = generator_heap->exception_lineno;
    generator_heap->exception_type = NULL;
    generator_heap->exception_value = NULL;
    generator_heap->exception_tb = NULL;
    generator_heap->exception_lineno = 0;

    Py_XDECREF(generator_heap->var_marker);
    generator_heap->var_marker = NULL;

    // Re-raise.
    generator_heap->exception_type = generator_heap->exception_keeper_type_2;
    generator_heap->exception_value = generator_heap->exception_keeper_value_2;
    generator_heap->exception_tb = generator_heap->exception_keeper_tb_2;
    generator_heap->exception_lineno = generator_heap->exception_keeper_lineno_2;

    goto function_exception_exit;
    // End of try:
    try_end_2:;
    Py_XDECREF(generator_heap->tmp_iter_value_0);
    generator_heap->tmp_iter_value_0 = NULL;

    Py_XDECREF(generator_heap->var_marker);
    generator_heap->var_marker = NULL;



    return NULL;

    function_exception_exit:
    assert(generator_heap->exception_type);
    RESTORE_ERROR_OCCURRED(generator_heap->exception_type, generator_heap->exception_value, generator_heap->exception_tb);

    return NULL;

}

static PyObject *youtube_dl$extractor$generic$$$function_4__real_extract$$$genexpr_1_genexpr_maker(void) {
    return Nuitka_Generator_New(
        youtube_dl$extractor$generic$$$function_4__real_extract$$$genexpr_1_genexpr_context,
        module_youtube_dl$extractor$generic,
        const_str_angle_genexpr,
#if PYTHON_VERSION >= 350
        const_str_digest_c8146b1189aa1a23c73b36a4400a118a,
#endif
        codeobj_68f90d7bf2732be80a8d164ed576613c,
        2,
        sizeof(struct youtube_dl$extractor$generic$$$function_4__real_extract$$$genexpr_1_genexpr_locals)
    );
}


static PyObject *impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_2_lambda(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_x = python_pars[0];
    struct Nuitka_FrameObject *frame_9811a08735b5729ea311d36d3bfec6d7;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_9811a08735b5729ea311d36d3bfec6d7 = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_9811a08735b5729ea311d36d3bfec6d7)) {
        Py_XDECREF(cache_frame_9811a08735b5729ea311d36d3bfec6d7);

#if _DEBUG_REFCOUNTS
        if (cache_frame_9811a08735b5729ea311d36d3bfec6d7 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_9811a08735b5729ea311d36d3bfec6d7 = MAKE_FUNCTION_FRAME(codeobj_9811a08735b5729ea311d36d3bfec6d7, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_9811a08735b5729ea311d36d3bfec6d7->m_type_description == NULL);
    frame_9811a08735b5729ea311d36d3bfec6d7 = cache_frame_9811a08735b5729ea311d36d3bfec6d7;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_9811a08735b5729ea311d36d3bfec6d7);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_9811a08735b5729ea311d36d3bfec6d7) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_smuggle_url);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_smuggle_url);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 34727 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2490;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_x);
        tmp_args_element_name_1 = par_x;
        tmp_dict_key_1 = const_str_plain_referrer;
        if (PyCell_GET(self->m_closure[0]) == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("free variable '%s' referenced before assignment in enclosing scope", "url");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2490;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_dict_value_1 = PyCell_GET(self->m_closure[0]);
        tmp_args_element_name_2 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_2, tmp_dict_key_1, tmp_dict_value_1);
        assert(!(tmp_res != 0));
        frame_9811a08735b5729ea311d36d3bfec6d7->m_frame.f_lineno = 2490;
        {
            PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_1, call_args);
        }

        Py_DECREF(tmp_args_element_name_2);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2490;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_9811a08735b5729ea311d36d3bfec6d7);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_9811a08735b5729ea311d36d3bfec6d7);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_9811a08735b5729ea311d36d3bfec6d7);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_9811a08735b5729ea311d36d3bfec6d7, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_9811a08735b5729ea311d36d3bfec6d7->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_9811a08735b5729ea311d36d3bfec6d7, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_9811a08735b5729ea311d36d3bfec6d7,
        type_description_1,
        par_x,
        self->m_closure[0]
    );


    // Release cached frame.
    if (frame_9811a08735b5729ea311d36d3bfec6d7 == cache_frame_9811a08735b5729ea311d36d3bfec6d7) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(frame_9811a08735b5729ea311d36d3bfec6d7);
    }
    cache_frame_9811a08735b5729ea311d36d3bfec6d7 = NULL;

    assertFrameObject(frame_9811a08735b5729ea311d36d3bfec6d7);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_x);
    Py_DECREF(par_x);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_x);
    Py_DECREF(par_x);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_3_lambda(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_p = python_pars[0];
    struct Nuitka_FrameObject *frame_4c70c88356b0fb9d4a3dd58a849b0642;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_4c70c88356b0fb9d4a3dd58a849b0642 = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_4c70c88356b0fb9d4a3dd58a849b0642)) {
        Py_XDECREF(cache_frame_4c70c88356b0fb9d4a3dd58a849b0642);

#if _DEBUG_REFCOUNTS
        if (cache_frame_4c70c88356b0fb9d4a3dd58a849b0642 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_4c70c88356b0fb9d4a3dd58a849b0642 = MAKE_FUNCTION_FRAME(codeobj_4c70c88356b0fb9d4a3dd58a849b0642, module_youtube_dl$extractor$generic, sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_4c70c88356b0fb9d4a3dd58a849b0642->m_type_description == NULL);
    frame_4c70c88356b0fb9d4a3dd58a849b0642 = cache_frame_4c70c88356b0fb9d4a3dd58a849b0642;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_4c70c88356b0fb9d4a3dd58a849b0642);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_4c70c88356b0fb9d4a3dd58a849b0642) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        tmp_left_name_1 = const_str_digest_89d34ddfe5eb1cdfae3fe7ec053d1e5e;
        CHECK_OBJECT(par_p);
        tmp_right_name_1 = par_p;
        tmp_return_value = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2543;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_4c70c88356b0fb9d4a3dd58a849b0642);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_4c70c88356b0fb9d4a3dd58a849b0642);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_4c70c88356b0fb9d4a3dd58a849b0642);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_4c70c88356b0fb9d4a3dd58a849b0642, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_4c70c88356b0fb9d4a3dd58a849b0642->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_4c70c88356b0fb9d4a3dd58a849b0642, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_4c70c88356b0fb9d4a3dd58a849b0642,
        type_description_1,
        par_p
    );


    // Release cached frame.
    if (frame_4c70c88356b0fb9d4a3dd58a849b0642 == cache_frame_4c70c88356b0fb9d4a3dd58a849b0642) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(frame_4c70c88356b0fb9d4a3dd58a849b0642);
    }
    cache_frame_4c70c88356b0fb9d4a3dd58a849b0642 = NULL;

    assertFrameObject(frame_4c70c88356b0fb9d4a3dd58a849b0642);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_p);
    Py_DECREF(par_p);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_p);
    Py_DECREF(par_p);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_4_lambda(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_v = python_pars[0];
    struct Nuitka_FrameObject *frame_bce15dbada415b4cdcbfe2249cce1bdd;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_bce15dbada415b4cdcbfe2249cce1bdd = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_bce15dbada415b4cdcbfe2249cce1bdd)) {
        Py_XDECREF(cache_frame_bce15dbada415b4cdcbfe2249cce1bdd);

#if _DEBUG_REFCOUNTS
        if (cache_frame_bce15dbada415b4cdcbfe2249cce1bdd == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_bce15dbada415b4cdcbfe2249cce1bdd = MAKE_FUNCTION_FRAME(codeobj_bce15dbada415b4cdcbfe2249cce1bdd, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_bce15dbada415b4cdcbfe2249cce1bdd->m_type_description == NULL);
    frame_bce15dbada415b4cdcbfe2249cce1bdd = cache_frame_bce15dbada415b4cdcbfe2249cce1bdd;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_bce15dbada415b4cdcbfe2249cce1bdd);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_bce15dbada415b4cdcbfe2249cce1bdd) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_expression_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_called_name_2;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_expression_name_2;
        PyObject *tmp_subscript_name_1;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_OoyalaIE);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_OoyalaIE);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 40485 ], 30, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2628;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_expression_name_1 = tmp_mvar_value_1;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_expression_name_1, const_str_plain__url_for_embed_code);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2628;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_smuggle_url);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_smuggle_url);
        }

        if (tmp_mvar_value_2 == NULL) {
            Py_DECREF(tmp_called_name_1);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 34727 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2628;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_called_name_2 = tmp_mvar_value_2;
        CHECK_OBJECT(par_v);
        tmp_expression_name_2 = par_v;
        tmp_subscript_name_1 = const_str_plain_provider_video_id;
        tmp_args_element_name_2 = LOOKUP_SUBSCRIPT(tmp_expression_name_2, tmp_subscript_name_1);
        if (tmp_args_element_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 2628;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_1 = const_str_plain_domain;
        if (PyCell_GET(self->m_closure[0]) == NULL) {
            Py_DECREF(tmp_called_name_1);
            Py_DECREF(tmp_args_element_name_2);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("free variable '%s' referenced before assignment in enclosing scope", "url");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2628;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_dict_value_1 = PyCell_GET(self->m_closure[0]);
        tmp_args_element_name_3 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_3, tmp_dict_key_1, tmp_dict_value_1);
        assert(!(tmp_res != 0));
        frame_bce15dbada415b4cdcbfe2249cce1bdd->m_frame.f_lineno = 2628;
        {
            PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3};
            tmp_args_element_name_1 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_2, call_args);
        }

        Py_DECREF(tmp_args_element_name_2);
        Py_DECREF(tmp_args_element_name_3);
        if (tmp_args_element_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 2628;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        frame_bce15dbada415b4cdcbfe2249cce1bdd->m_frame.f_lineno = 2628;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_element_name_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2628;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_bce15dbada415b4cdcbfe2249cce1bdd);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_bce15dbada415b4cdcbfe2249cce1bdd);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_bce15dbada415b4cdcbfe2249cce1bdd);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_bce15dbada415b4cdcbfe2249cce1bdd, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_bce15dbada415b4cdcbfe2249cce1bdd->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_bce15dbada415b4cdcbfe2249cce1bdd, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_bce15dbada415b4cdcbfe2249cce1bdd,
        type_description_1,
        par_v,
        self->m_closure[0]
    );


    // Release cached frame.
    if (frame_bce15dbada415b4cdcbfe2249cce1bdd == cache_frame_bce15dbada415b4cdcbfe2249cce1bdd) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(frame_bce15dbada415b4cdcbfe2249cce1bdd);
    }
    cache_frame_bce15dbada415b4cdcbfe2249cce1bdd = NULL;

    assertFrameObject(frame_bce15dbada415b4cdcbfe2249cce1bdd);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_v);
    Py_DECREF(par_v);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_v);
    Py_DECREF(par_v);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_5_lambda(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_x = python_pars[0];
    struct Nuitka_FrameObject *frame_2e6fce68bec58b8e8ce4ab7c949b6c7b;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_2e6fce68bec58b8e8ce4ab7c949b6c7b = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_2e6fce68bec58b8e8ce4ab7c949b6c7b)) {
        Py_XDECREF(cache_frame_2e6fce68bec58b8e8ce4ab7c949b6c7b);

#if _DEBUG_REFCOUNTS
        if (cache_frame_2e6fce68bec58b8e8ce4ab7c949b6c7b == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_2e6fce68bec58b8e8ce4ab7c949b6c7b = MAKE_FUNCTION_FRAME(codeobj_2e6fce68bec58b8e8ce4ab7c949b6c7b, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_2e6fce68bec58b8e8ce4ab7c949b6c7b->m_type_description == NULL);
    frame_2e6fce68bec58b8e8ce4ab7c949b6c7b = cache_frame_2e6fce68bec58b8e8ce4ab7c949b6c7b;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_2e6fce68bec58b8e8ce4ab7c949b6c7b);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_2e6fce68bec58b8e8ce4ab7c949b6c7b) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_smuggle_url);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_smuggle_url);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 34727 ], 33, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2860;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_x);
        tmp_args_element_name_1 = par_x;
        tmp_dict_key_1 = const_str_plain_source_url;
        if (PyCell_GET(self->m_closure[0]) == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("free variable '%s' referenced before assignment in enclosing scope", "url");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2860;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_dict_value_1 = PyCell_GET(self->m_closure[0]);
        tmp_args_element_name_2 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_args_element_name_2, tmp_dict_key_1, tmp_dict_value_1);
        assert(!(tmp_res != 0));
        frame_2e6fce68bec58b8e8ce4ab7c949b6c7b->m_frame.f_lineno = 2860;
        {
            PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_1, call_args);
        }

        Py_DECREF(tmp_args_element_name_2);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2860;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_2e6fce68bec58b8e8ce4ab7c949b6c7b);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_2e6fce68bec58b8e8ce4ab7c949b6c7b);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_2e6fce68bec58b8e8ce4ab7c949b6c7b);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_2e6fce68bec58b8e8ce4ab7c949b6c7b, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_2e6fce68bec58b8e8ce4ab7c949b6c7b->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_2e6fce68bec58b8e8ce4ab7c949b6c7b, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_2e6fce68bec58b8e8ce4ab7c949b6c7b,
        type_description_1,
        par_x,
        self->m_closure[0]
    );


    // Release cached frame.
    if (frame_2e6fce68bec58b8e8ce4ab7c949b6c7b == cache_frame_2e6fce68bec58b8e8ce4ab7c949b6c7b) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(frame_2e6fce68bec58b8e8ce4ab7c949b6c7b);
    }
    cache_frame_2e6fce68bec58b8e8ce4ab7c949b6c7b = NULL;

    assertFrameObject(frame_2e6fce68bec58b8e8ce4ab7c949b6c7b);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_x);
    Py_DECREF(par_x);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_x);
    Py_DECREF(par_x);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_6_check_video(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_vurl = python_pars[0];
    PyObject *var_vpath = NULL;
    PyObject *var_vext = NULL;
    struct Nuitka_FrameObject *frame_f35e523b22fdc434a86020ac591654ba;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_return_value = NULL;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_f35e523b22fdc434a86020ac591654ba = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_f35e523b22fdc434a86020ac591654ba)) {
        Py_XDECREF(cache_frame_f35e523b22fdc434a86020ac591654ba);

#if _DEBUG_REFCOUNTS
        if (cache_frame_f35e523b22fdc434a86020ac591654ba == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_f35e523b22fdc434a86020ac591654ba = MAKE_FUNCTION_FRAME(codeobj_f35e523b22fdc434a86020ac591654ba, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_f35e523b22fdc434a86020ac591654ba->m_type_description == NULL);
    frame_f35e523b22fdc434a86020ac591654ba = cache_frame_f35e523b22fdc434a86020ac591654ba;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_f35e523b22fdc434a86020ac591654ba);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_f35e523b22fdc434a86020ac591654ba) == 2); // Frame stack

    // Framed code:
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        int tmp_truth_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YoutubeIE);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_YoutubeIE);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33686 ], 31, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3292;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_vurl);
        tmp_args_element_name_1 = par_vurl;
        frame_f35e523b22fdc434a86020ac591654ba->m_frame.f_lineno = 3292;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_suitable, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3292;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_1);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_1);

            exception_lineno = 3292;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_1);
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    tmp_return_value = Py_True;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_1:;
    {
        nuitka_bool tmp_condition_result_2;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_call_result_2;
        PyObject *tmp_args_element_name_2;
        int tmp_truth_name_2;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RtmpIE);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_RtmpIE);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 42423 ], 28, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3294;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_2 = tmp_mvar_value_2;
        CHECK_OBJECT(par_vurl);
        tmp_args_element_name_2 = par_vurl;
        frame_f35e523b22fdc434a86020ac591654ba->m_frame.f_lineno = 3294;
        {
            PyObject *call_args[] = {tmp_args_element_name_2};
            tmp_call_result_2 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_2, const_str_plain_suitable, call_args);
        }

        if (tmp_call_result_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3294;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_2);
        if (tmp_truth_name_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_2);

            exception_lineno = 3294;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_2 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_2);
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    tmp_return_value = Py_True;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_2:;
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_expression_name_1;
        PyObject *tmp_called_instance_3;
        PyObject *tmp_mvar_value_3;
        PyObject *tmp_args_element_name_3;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urlparse);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_compat_urlparse);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 32106 ], 37, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3296;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_3 = tmp_mvar_value_3;
        CHECK_OBJECT(par_vurl);
        tmp_args_element_name_3 = par_vurl;
        frame_f35e523b22fdc434a86020ac591654ba->m_frame.f_lineno = 3296;
        {
            PyObject *call_args[] = {tmp_args_element_name_3};
            tmp_expression_name_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_3, const_str_plain_urlparse, call_args);
        }

        if (tmp_expression_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3296;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_1 = LOOKUP_ATTRIBUTE(tmp_expression_name_1, const_str_plain_path);
        Py_DECREF(tmp_expression_name_1);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3296;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        assert(var_vpath == NULL);
        var_vpath = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_4;
        PyObject *tmp_args_element_name_4;
        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_determine_ext);

        if (unlikely(tmp_mvar_value_4 == NULL)) {
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_determine_ext);
        }

        if (tmp_mvar_value_4 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 27560 ], 35, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3297;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_4;
        CHECK_OBJECT(var_vpath);
        tmp_args_element_name_4 = var_vpath;
        frame_f35e523b22fdc434a86020ac591654ba->m_frame.f_lineno = 3297;
        tmp_assign_source_2 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_4);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3297;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        assert(var_vext == NULL);
        var_vext = tmp_assign_source_2;
    }
    {
        int tmp_and_left_truth_1;
        PyObject *tmp_and_left_value_1;
        PyObject *tmp_and_right_value_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_compexpr_left_2;
        PyObject *tmp_compexpr_right_2;
        tmp_compexpr_left_1 = const_str_dot;
        CHECK_OBJECT(var_vpath);
        tmp_compexpr_right_1 = var_vpath;
        tmp_res = PySequence_Contains(tmp_compexpr_right_1, tmp_compexpr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3298;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_1 = (tmp_res == 1) ? Py_True : Py_False;
        tmp_and_left_truth_1 = CHECK_IF_TRUE(tmp_and_left_value_1);
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(var_vext);
        tmp_compexpr_left_2 = var_vext;
        tmp_compexpr_right_2 = const_tuple_af2cc0b5776d83d48b839da836aaca1c_tuple;
        tmp_res = PySequence_Contains(tmp_compexpr_right_2, tmp_compexpr_left_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3298;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_1 = (tmp_res == 0) ? Py_True : Py_False;
        tmp_return_value = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_return_value = tmp_and_left_value_1;
        and_end_1:;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_f35e523b22fdc434a86020ac591654ba);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_f35e523b22fdc434a86020ac591654ba);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_f35e523b22fdc434a86020ac591654ba);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_f35e523b22fdc434a86020ac591654ba, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_f35e523b22fdc434a86020ac591654ba->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_f35e523b22fdc434a86020ac591654ba, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_f35e523b22fdc434a86020ac591654ba,
        type_description_1,
        par_vurl,
        var_vpath,
        var_vext
    );


    // Release cached frame.
    if (frame_f35e523b22fdc434a86020ac591654ba == cache_frame_f35e523b22fdc434a86020ac591654ba) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(frame_f35e523b22fdc434a86020ac591654ba);
    }
    cache_frame_f35e523b22fdc434a86020ac591654ba = NULL;

    assertFrameObject(frame_f35e523b22fdc434a86020ac591654ba);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_vpath);
    var_vpath = NULL;

    Py_XDECREF(var_vext);
    var_vext = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_vpath);
    var_vpath = NULL;

    Py_XDECREF(var_vext);
    var_vext = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_vurl);
    Py_DECREF(par_vurl);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_vurl);
    Py_DECREF(par_vurl);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_7_filter_video(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_urls = python_pars[0];
    struct Nuitka_FrameObject *frame_7c61bbcffe721ed073454972ff58907e;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_7c61bbcffe721ed073454972ff58907e = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_7c61bbcffe721ed073454972ff58907e)) {
        Py_XDECREF(cache_frame_7c61bbcffe721ed073454972ff58907e);

#if _DEBUG_REFCOUNTS
        if (cache_frame_7c61bbcffe721ed073454972ff58907e == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_7c61bbcffe721ed073454972ff58907e = MAKE_FUNCTION_FRAME(codeobj_7c61bbcffe721ed073454972ff58907e, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_7c61bbcffe721ed073454972ff58907e->m_type_description == NULL);
    frame_7c61bbcffe721ed073454972ff58907e = cache_frame_7c61bbcffe721ed073454972ff58907e;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_7c61bbcffe721ed073454972ff58907e);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_7c61bbcffe721ed073454972ff58907e) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_list_arg_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_args_element_name_1;
        PyObject *tmp_args_element_name_2;
        tmp_called_name_1 = (PyObject *)&PyFilter_Type;
        if (PyCell_GET(self->m_closure[0]) == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = PyUnicode_FromFormat("free variable '%s' referenced before assignment in enclosing scope", "check_video");
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3301;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_args_element_name_1 = PyCell_GET(self->m_closure[0]);
        CHECK_OBJECT(par_urls);
        tmp_args_element_name_2 = par_urls;
        frame_7c61bbcffe721ed073454972ff58907e->m_frame.f_lineno = 3301;
        {
            PyObject *call_args[] = {tmp_args_element_name_1, tmp_args_element_name_2};
            tmp_list_arg_1 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_1, call_args);
        }

        if (tmp_list_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3301;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        tmp_return_value = PySequence_List(tmp_list_arg_1);
        Py_DECREF(tmp_list_arg_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3301;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_7c61bbcffe721ed073454972ff58907e);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_7c61bbcffe721ed073454972ff58907e);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_7c61bbcffe721ed073454972ff58907e);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_7c61bbcffe721ed073454972ff58907e, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_7c61bbcffe721ed073454972ff58907e->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_7c61bbcffe721ed073454972ff58907e, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_7c61bbcffe721ed073454972ff58907e,
        type_description_1,
        par_urls,
        self->m_closure[0]
    );


    // Release cached frame.
    if (frame_7c61bbcffe721ed073454972ff58907e == cache_frame_7c61bbcffe721ed073454972ff58907e) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(frame_7c61bbcffe721ed073454972ff58907e);
    }
    cache_frame_7c61bbcffe721ed073454972ff58907e = NULL;

    assertFrameObject(frame_7c61bbcffe721ed073454972ff58907e);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_urls);
    Py_DECREF(par_urls);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_urls);
    Py_DECREF(par_urls);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_1_report_following_redirect() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function_1_report_following_redirect,
        const_str_plain_report_following_redirect,
#if PYTHON_VERSION >= 300
        const_str_digest_b5a1a4d7d423b2d571e1e56d56c3641f,
#endif
        codeobj_f9c5d67c8b6ddd2beae1c0d9ea3dabc1,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        const_str_digest_3e08729614c90ec16d6f660d7c6ef3e9,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_2__extract_rss() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function_2__extract_rss,
        const_str_plain__extract_rss,
#if PYTHON_VERSION >= 300
        const_str_digest_7fc34d4fa9e98fa10f83630a4be355ff,
#endif
        codeobj_f3a23ede05cb422eef81ccbe7998b9c8,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_3__extract_camtasia() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function_3__extract_camtasia,
        const_str_plain__extract_camtasia,
#if PYTHON_VERSION >= 300
        const_str_digest_e98911021ce3515e49059cb736f0043f,
#endif
        codeobj_6328b4bab88dd0e6cbb41542fa16574c,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        const_str_digest_8b8d822d535de06ce941217de34d72b3,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function_4__real_extract,
        const_str_plain__real_extract,
#if PYTHON_VERSION >= 300
        const_str_digest_ac0eaa2abf4939e99bb12e6f15e7f437,
#endif
        codeobj_ae0fee46d2d491a9a1a436f870d90824,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_1_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_1_lambda,
        const_str_angle_lambda,
#if PYTHON_VERSION >= 300
        const_str_digest_97c033399fc2d1bfe8bafdf9065a0a65,
#endif
        codeobj_3943c14c5d97169024667e799ac3ac3a,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_2_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_2_lambda,
        const_str_angle_lambda,
#if PYTHON_VERSION >= 300
        const_str_digest_97c033399fc2d1bfe8bafdf9065a0a65,
#endif
        codeobj_9811a08735b5729ea311d36d3bfec6d7,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        1
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_3_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_3_lambda,
        const_str_angle_lambda,
#if PYTHON_VERSION >= 300
        const_str_digest_97c033399fc2d1bfe8bafdf9065a0a65,
#endif
        codeobj_4c70c88356b0fb9d4a3dd58a849b0642,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_4_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_4_lambda,
        const_str_angle_lambda,
#if PYTHON_VERSION >= 300
        const_str_digest_97c033399fc2d1bfe8bafdf9065a0a65,
#endif
        codeobj_bce15dbada415b4cdcbfe2249cce1bdd,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        1
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_5_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_5_lambda,
        const_str_angle_lambda,
#if PYTHON_VERSION >= 300
        const_str_digest_97c033399fc2d1bfe8bafdf9065a0a65,
#endif
        codeobj_2e6fce68bec58b8e8ce4ab7c949b6c7b,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        1
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_6_check_video() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_6_check_video,
        const_str_plain_check_video,
#if PYTHON_VERSION >= 300
        const_str_digest_e2b24128969bbce524ed3d17a3014531,
#endif
        codeobj_f35e523b22fdc434a86020ac591654ba,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_7_filter_video() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_7_filter_video,
        const_str_plain_filter_video,
#if PYTHON_VERSION >= 300
        const_str_digest_717e77e1f43ab03767cdc28ed64030a3,
#endif
        codeobj_7c61bbcffe721ed073454972ff58907e,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        1
    );

    return (PyObject *)result;
}


extern PyObject *const_str_plain___compiled__;

extern PyObject *const_str_plain___package__;
extern PyObject *const_str_empty;

#if PYTHON_VERSION >= 300
extern PyObject *const_str_dot;
extern PyObject *const_str_plain___loader__;
#endif

#if PYTHON_VERSION >= 340
extern PyObject *const_str_plain___spec__;
extern PyObject *const_str_plain__initializing;
extern PyObject *const_str_plain_submodule_search_locations;
#endif

extern void _initCompiledCellType();
extern void _initCompiledGeneratorType();
extern void _initCompiledFunctionType();
extern void _initCompiledMethodType();
extern void _initCompiledFrameType();

extern PyTypeObject Nuitka_Loader_Type;

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
// Provide a way to create find a function via its C code and create it back
// in another process, useful for multiprocessing extensions like dill

function_impl_code functable_youtube_dl$extractor$generic[] = {
    impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_1_lambda,
    impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_2_lambda,
    impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_3_lambda,
    impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_4_lambda,
    impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_5_lambda,
    impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_6_check_video,
    impl_youtube_dl$extractor$generic$$$function_4__real_extract$$$function_7_filter_video,
    impl_youtube_dl$extractor$generic$$$function_1_report_following_redirect,
    impl_youtube_dl$extractor$generic$$$function_2__extract_rss,
    impl_youtube_dl$extractor$generic$$$function_3__extract_camtasia,
    impl_youtube_dl$extractor$generic$$$function_4__real_extract,
    NULL
};

static char const *_reduce_compiled_function_argnames[] = {
    "func",
    NULL
};

static PyObject *_reduce_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    PyObject *func;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "O:reduce_compiled_function", (char **)_reduce_compiled_function_argnames, &func, NULL)) {
        return NULL;
    }

    if (Nuitka_Function_Check(func) == false) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "not a compiled function");
        return NULL;
    }

    struct Nuitka_FunctionObject *function = (struct Nuitka_FunctionObject *)func;

    function_impl_code *current = functable_youtube_dl$extractor$generic;
    int offset = 0;

    while (*current != NULL) {
        if (*current == function->m_c_code) {
            break;
        }

        current += 1;
        offset += 1;
    }

    if (*current == NULL) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "Cannot find compiled function in module.");
        return NULL;
    }

    PyObject *code_object_desc = PyTuple_New(6);
    PyTuple_SET_ITEM0(code_object_desc, 0, function->m_code_object->co_filename);
    PyTuple_SET_ITEM0(code_object_desc, 1, function->m_code_object->co_name);
    PyTuple_SET_ITEM(code_object_desc, 2, PyLong_FromLong(function->m_code_object->co_firstlineno));
    PyTuple_SET_ITEM0(code_object_desc, 3, function->m_code_object->co_varnames);
    PyTuple_SET_ITEM(code_object_desc, 4, PyLong_FromLong(function->m_code_object->co_argcount));
    PyTuple_SET_ITEM(code_object_desc, 5, PyLong_FromLong(function->m_code_object->co_flags));

    CHECK_OBJECT_DEEP(code_object_desc);

    PyObject *result = PyTuple_New(4);
    PyTuple_SET_ITEM(result, 0, PyLong_FromLong(offset));
    PyTuple_SET_ITEM(result, 1, code_object_desc);
    PyTuple_SET_ITEM0(result, 2, function->m_defaults);
    PyTuple_SET_ITEM0(result, 3, function->m_doc != NULL ? function->m_doc : Py_None);

    CHECK_OBJECT_DEEP(result);

    return result;
}

static PyMethodDef _method_def_reduce_compiled_function = {"reduce_compiled_function", (PyCFunction)_reduce_compiled_function,
                                                           METH_VARARGS | METH_KEYWORDS, NULL};

static char const *_create_compiled_function_argnames[] = {
    "func",
    "code_object_desc",
    "defaults",
    "doc",
    NULL
};


static PyObject *_create_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    CHECK_OBJECT_DEEP(args);

    PyObject *func;
    PyObject *code_object_desc;
    PyObject *defaults;
    PyObject *doc;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "OOOO:create_compiled_function", (char **)_create_compiled_function_argnames, &func, &code_object_desc, &defaults, &doc, NULL)) {
        return NULL;
    }

    int offset = PyLong_AsLong(func);

    if (offset == -1 && ERROR_OCCURRED()) {
        return NULL;
    }

    if (offset > sizeof(functable_youtube_dl$extractor$generic) || offset < 0) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "Wrong offset for compiled function.");
        return NULL;
    }

    PyObject *filename = PyTuple_GET_ITEM(code_object_desc, 0);
    PyObject *function_name = PyTuple_GET_ITEM(code_object_desc, 1);
    PyObject *line = PyTuple_GET_ITEM(code_object_desc, 2);
    int line_int = PyLong_AsLong(line);
    assert(!ERROR_OCCURRED());

    PyObject *argnames = PyTuple_GET_ITEM(code_object_desc, 3);
    PyObject *arg_count = PyTuple_GET_ITEM(code_object_desc, 4);
    int arg_count_int = PyLong_AsLong(arg_count);
    assert(!ERROR_OCCURRED());
    PyObject *flags = PyTuple_GET_ITEM(code_object_desc, 5);
    int flags_int = PyLong_AsLong(flags);
    assert(!ERROR_OCCURRED());

    PyCodeObject *code_object = MAKE_CODEOBJECT(
        filename,
        line_int,
        flags_int,
        function_name,
        argnames,
        arg_count_int,
        0, // TODO: Missing kw_only_count
        0 // TODO: Missing pos_only_count
    );

    // TODO: More stuff needed for Python3, best to re-order arguments of MAKE_CODEOBJECT.
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        functable_youtube_dl$extractor$generic[offset],
        code_object->co_name,
#if PYTHON_VERSION >= 300
        NULL, // TODO: Not transferring qualname yet
#endif
        code_object,
        defaults,
#if PYTHON_VERSION >= 300
        NULL, // kwdefaults are done on the outside currently
        NULL, // TODO: Not transferring annotations
#endif
        module_youtube_dl$extractor$generic,
        doc,
        0
    );

    return (PyObject *)result;
}

static PyMethodDef _method_def_create_compiled_function = {
    "create_compiled_function",
    (PyCFunction)_create_compiled_function,
    METH_VARARGS | METH_KEYWORDS, NULL
};


#endif

// Internal entry point for module code.
PyObject *modulecode_youtube_dl$extractor$generic(PyObject *module) {
    module_youtube_dl$extractor$generic = module;

#if defined(_NUITKA_EXE) || PYTHON_VERSION >= 300
    static bool _init_done = false;

    // Modules might be imported repeatedly, which is to be ignored.
    if (_init_done) {
        return module_youtube_dl$extractor$generic;
    } else {
        _init_done = true;
    }
#endif

#ifdef _NUITKA_MODULE
    // In case of a stand alone extension module, need to call initialization
    // the init here because that's the first and only time we are going to get
    // called here.

    // May have to activate constants blob.
#if defined(_NUITKA_CONSTANTS_FROM_RESOURCE)
    loadConstantsResource();
#endif

    // Initialize the constant values used.
    _initBuiltinModule();
    createGlobalConstants();

    /* Initialize the compiled types of Nuitka. */
    _initCompiledCellType();
    _initCompiledGeneratorType();
    _initCompiledFunctionType();
    _initCompiledMethodType();
    _initCompiledFrameType();

#if PYTHON_VERSION < 300
    _initSlotCompare();
#endif
#if PYTHON_VERSION >= 270
    _initSlotIternext();
#endif

    patchBuiltinModule();
    patchTypeComparison();

    // Enable meta path based loader if not already done.
#ifdef _NUITKA_TRACE
    PRINT_STRING("youtube_dl.extractor.generic: Calling setupMetaPathBasedLoader().\n");
#endif
    setupMetaPathBasedLoader();

#if PYTHON_VERSION >= 300
    patchInspectModule();
#endif

#endif

    /* The constants only used by this module are created now. */
#ifdef _NUITKA_TRACE
    PRINT_STRING("youtube_dl.extractor.generic: Calling createModuleConstants().\n");
#endif
    createModuleConstants();

    /* The code objects used by this module are created now. */
#ifdef _NUITKA_TRACE
    PRINT_STRING("youtube_dl.extractor.generic: Calling createModuleCodeObjects().\n");
#endif
    createModuleCodeObjects();

    // PRINT_STRING("in inityoutube_dl$extractor$generic\n");

    // Create the module object first. There are no methods initially, all are
    // added dynamically in actual code only.  Also no "__doc__" is initially
    // set at this time, as it could not contain NUL characters this way, they
    // are instead set in early module code.  No "self" for modules, we have no
    // use for it.

    moduledict_youtube_dl$extractor$generic = MODULE_DICT(module_youtube_dl$extractor$generic);

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
    {
        PyObject *function_tables = PyObject_GetAttrString((PyObject *)builtin_module, "compiled_function_tables");
        if (function_tables == NULL)
        {
            DROP_ERROR_OCCURRED();
            function_tables = PyDict_New();
        }
        PyObject_SetAttrString((PyObject *)builtin_module, "compiled_function_tables", function_tables);
        PyObject *funcs = PyTuple_New(2);
        PyTuple_SET_ITEM(funcs, 0, PyCFunction_New(&_method_def_reduce_compiled_function, NULL));
        PyTuple_SET_ITEM(funcs, 1, PyCFunction_New(&_method_def_create_compiled_function, NULL));
        PyDict_SetItemString(function_tables, module_full_name, funcs);
    }
#endif

    // Set "__compiled__" to what version information we have.
    UPDATE_STRING_DICT0(
        moduledict_youtube_dl$extractor$generic,
        (Nuitka_StringObject *)const_str_plain___compiled__,
        Nuitka_dunder_compiled_value
    );

    // Update "__package__" value to what it ought to be.
    {
#if 0
        UPDATE_STRING_DICT0(
            moduledict_youtube_dl$extractor$generic,
            (Nuitka_StringObject *)const_str_plain___package__,
            const_str_empty
        );
#elif 0
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___name__);

        UPDATE_STRING_DICT0(
            moduledict_youtube_dl$extractor$generic,
            (Nuitka_StringObject *)const_str_plain___package__,
            module_name
        );
#else

#if PYTHON_VERSION < 300
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___name__);
        char const *module_name_cstr = PyString_AS_STRING(module_name);

        char const *last_dot = strrchr(module_name_cstr, '.');

        if (last_dot != NULL)
        {
            UPDATE_STRING_DICT1(
                moduledict_youtube_dl$extractor$generic,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyString_FromStringAndSize(module_name_cstr, last_dot - module_name_cstr)
            );
        }
#else
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___name__);
        Py_ssize_t dot_index = PyUnicode_Find(module_name, const_str_dot, 0, PyUnicode_GetLength(module_name), -1);

        if (dot_index != -1)
        {
            UPDATE_STRING_DICT1(
                moduledict_youtube_dl$extractor$generic,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyUnicode_Substring(module_name, 0, dot_index)
            );
        }
#endif
#endif
    }

    CHECK_OBJECT(module_youtube_dl$extractor$generic);

    // For deep importing of a module we need to have "__builtins__", so we set
    // it ourselves in the same way than CPython does. Note: This must be done
    // before the frame object is allocated, or else it may fail.

    if (GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___builtins__) == NULL)
    {
        PyObject *value = (PyObject *)builtin_module;

        // Check if main module, not a dict then but the module itself.
#if !defined(_NUITKA_EXE) || !0
        value = PyModule_GetDict(value);
#endif

        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___builtins__, value);
    }

#if PYTHON_VERSION >= 300
    UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___loader__, (PyObject *)&Nuitka_Loader_Type);
#endif

#if PYTHON_VERSION >= 340
// Set the "__spec__" value

#if 0
    // Main modules just get "None" as spec.
    UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___spec__, Py_None);
#else
    // Other modules get a "ModuleSpec" from the standard mechanism.
    {
        PyObject *bootstrap_module = PyImport_ImportModule("importlib._bootstrap");
        CHECK_OBJECT(bootstrap_module);
        PyObject *module_spec_class = PyObject_GetAttrString(bootstrap_module, "ModuleSpec");
        Py_DECREF(bootstrap_module);

        PyObject *args[] = {
            GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___name__),
            (PyObject *)&Nuitka_Loader_Type
        };

        PyObject *spec_value = CALL_FUNCTION_WITH_ARGS2(
            module_spec_class,
            args
        );
        Py_DECREF(module_spec_class);

        // We can assume this to never fail, or else we are in trouble anyway.
        CHECK_OBJECT(spec_value);

// For packages set the submodule search locations as well, even if to empty
// list, so investigating code will consider it a package.
#if 0
        SET_ATTRIBUTE(spec_value, const_str_plain_submodule_search_locations, PyList_New(0));
#endif

// Mark the execution in the "__spec__" value.
        SET_ATTRIBUTE(spec_value, const_str_plain__initializing, Py_True);

        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___spec__, spec_value);
    }
#endif
#endif

    // Temp variables if any
    PyObject *outline_0_var___class__ = NULL;
    PyObject *tmp_class_creation_1__bases = NULL;
    PyObject *tmp_class_creation_1__bases_orig = NULL;
    PyObject *tmp_class_creation_1__class_decl_dict = NULL;
    PyObject *tmp_class_creation_1__metaclass = NULL;
    PyObject *tmp_class_creation_1__prepared = NULL;
    PyObject *tmp_import_from_1__module = NULL;
    PyObject *tmp_import_from_2__module = NULL;
    PyObject *tmp_import_from_3__module = NULL;
    PyObject *tmp_import_from_4__module = NULL;
    struct Nuitka_FrameObject *frame_0aeec350a7dfbe2e690d0521ad144459;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    bool tmp_result;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    int tmp_res;
    PyObject *tmp_dictdel_dict;
    PyObject *tmp_dictdel_key;
    PyObject *locals_youtube_dl$extractor$generic_124 = NULL;
    PyObject *tmp_dictset_value;
    struct Nuitka_FrameObject *frame_336043124f5c4cc3ccd5b77a6f1df793_2;
    NUITKA_MAY_BE_UNUSED char const *type_description_2 = NULL;
    static struct Nuitka_FrameObject *cache_frame_336043124f5c4cc3ccd5b77a6f1df793_2 = NULL;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;

    // Module code.
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = Py_None;
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___doc__, tmp_assign_source_1);
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = const_str_digest_af66209f81c52df35c6cdeff00a82e0b;
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___file__, tmp_assign_source_2);
    }
    // Frame without reuse.
    frame_0aeec350a7dfbe2e690d0521ad144459 = MAKE_MODULE_FRAME(codeobj_0aeec350a7dfbe2e690d0521ad144459, module_youtube_dl$extractor$generic);

    // Push the new frame as the currently active one, and we should be exclusively
    // owning it.
    pushFrameStack(frame_0aeec350a7dfbe2e690d0521ad144459);
    assert(Py_REFCNT(frame_0aeec350a7dfbe2e690d0521ad144459) == 2);

    // Framed code:
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_assattr_target_1;
        PyObject *tmp_mvar_value_1;
        tmp_assattr_name_1 = const_str_digest_af66209f81c52df35c6cdeff00a82e0b;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___spec__);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain___spec__);
        }

        CHECK_OBJECT(tmp_mvar_value_1);
        tmp_assattr_target_1 = tmp_mvar_value_1;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_origin, tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assattr_name_2;
        PyObject *tmp_assattr_target_2;
        PyObject *tmp_mvar_value_2;
        tmp_assattr_name_2 = Py_True;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___spec__);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain___spec__);
        }

        CHECK_OBJECT(tmp_mvar_value_2);
        tmp_assattr_target_2 = tmp_mvar_value_2;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_has_location, tmp_assattr_name_2);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_3;
        tmp_assign_source_3 = Py_None;
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___cached__, tmp_assign_source_3);
    }
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_import_name_from_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 3;
        tmp_import_name_from_1 = PyImport_ImportModule("__future__");
        assert(!(tmp_import_name_from_1 == NULL));
        if (PyModule_Check(tmp_import_name_from_1)) {
           tmp_assign_source_4 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_unicode_literals,
                const_int_0
            );
        } else {
           tmp_assign_source_4 = IMPORT_NAME(tmp_import_name_from_1, const_str_plain_unicode_literals);
        }

        if (tmp_assign_source_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unicode_literals, tmp_assign_source_4);
    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_name_name_1;
        PyObject *tmp_globals_name_1;
        PyObject *tmp_locals_name_1;
        PyObject *tmp_fromlist_name_1;
        PyObject *tmp_level_name_1;
        tmp_name_name_1 = const_str_plain_os;
        tmp_globals_name_1 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_1 = Py_None;
        tmp_fromlist_name_1 = Py_None;
        tmp_level_name_1 = const_int_0;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 5;
        tmp_assign_source_5 = IMPORT_MODULE5(tmp_name_name_1, tmp_globals_name_1, tmp_locals_name_1, tmp_fromlist_name_1, tmp_level_name_1);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 5;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_os, tmp_assign_source_5);
    }
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_name_name_2;
        PyObject *tmp_globals_name_2;
        PyObject *tmp_locals_name_2;
        PyObject *tmp_fromlist_name_2;
        PyObject *tmp_level_name_2;
        tmp_name_name_2 = const_str_plain_re;
        tmp_globals_name_2 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_2 = Py_None;
        tmp_fromlist_name_2 = Py_None;
        tmp_level_name_2 = const_int_0;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 6;
        tmp_assign_source_6 = IMPORT_MODULE5(tmp_name_name_2, tmp_globals_name_2, tmp_locals_name_2, tmp_fromlist_name_2, tmp_level_name_2);
        if (tmp_assign_source_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 6;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_re, tmp_assign_source_6);
    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_name_name_3;
        PyObject *tmp_globals_name_3;
        PyObject *tmp_locals_name_3;
        PyObject *tmp_fromlist_name_3;
        PyObject *tmp_level_name_3;
        tmp_name_name_3 = const_str_plain_sys;
        tmp_globals_name_3 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_3 = Py_None;
        tmp_fromlist_name_3 = Py_None;
        tmp_level_name_3 = const_int_0;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 7;
        tmp_assign_source_7 = IMPORT_MODULE5(tmp_name_name_3, tmp_globals_name_3, tmp_locals_name_3, tmp_fromlist_name_3, tmp_level_name_3);
        assert(!(tmp_assign_source_7 == NULL));
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_sys, tmp_assign_source_7);
    }
    {
        PyObject *tmp_assign_source_8;
        PyObject *tmp_import_name_from_2;
        PyObject *tmp_name_name_4;
        PyObject *tmp_globals_name_4;
        PyObject *tmp_locals_name_4;
        PyObject *tmp_fromlist_name_4;
        PyObject *tmp_level_name_4;
        tmp_name_name_4 = const_str_plain_common;
        tmp_globals_name_4 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_4 = Py_None;
        tmp_fromlist_name_4 = const_tuple_str_plain_InfoExtractor_tuple;
        tmp_level_name_4 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 9;
        tmp_import_name_from_2 = IMPORT_MODULE5(tmp_name_name_4, tmp_globals_name_4, tmp_locals_name_4, tmp_fromlist_name_4, tmp_level_name_4);
        if (tmp_import_name_from_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 9;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_2)) {
           tmp_assign_source_8 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_2,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_InfoExtractor,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_8 = IMPORT_NAME(tmp_import_name_from_2, const_str_plain_InfoExtractor);
        }

        Py_DECREF(tmp_import_name_from_2);
        if (tmp_assign_source_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 9;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_InfoExtractor, tmp_assign_source_8);
    }
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_import_name_from_3;
        PyObject *tmp_name_name_5;
        PyObject *tmp_globals_name_5;
        PyObject *tmp_locals_name_5;
        PyObject *tmp_fromlist_name_5;
        PyObject *tmp_level_name_5;
        tmp_name_name_5 = const_str_plain_youtube;
        tmp_globals_name_5 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_5 = Py_None;
        tmp_fromlist_name_5 = const_tuple_str_plain_YoutubeIE_tuple;
        tmp_level_name_5 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 10;
        tmp_import_name_from_3 = IMPORT_MODULE5(tmp_name_name_5, tmp_globals_name_5, tmp_locals_name_5, tmp_fromlist_name_5, tmp_level_name_5);
        if (tmp_import_name_from_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 10;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_3)) {
           tmp_assign_source_9 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_3,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_YoutubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_9 = IMPORT_NAME(tmp_import_name_from_3, const_str_plain_YoutubeIE);
        }

        Py_DECREF(tmp_import_name_from_3);
        if (tmp_assign_source_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 10;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YoutubeIE, tmp_assign_source_9);
    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_name_name_6;
        PyObject *tmp_globals_name_6;
        PyObject *tmp_locals_name_6;
        PyObject *tmp_fromlist_name_6;
        PyObject *tmp_level_name_6;
        tmp_name_name_6 = const_str_plain_compat;
        tmp_globals_name_6 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_6 = Py_None;
        tmp_fromlist_name_6 = const_tuple_546ea94692a283bd5e4cbc890563b122_tuple;
        tmp_level_name_6 = const_int_pos_2;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 11;
        tmp_assign_source_10 = IMPORT_MODULE5(tmp_name_name_6, tmp_globals_name_6, tmp_locals_name_6, tmp_fromlist_name_6, tmp_level_name_6);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_1__module == NULL);
        tmp_import_from_1__module = tmp_assign_source_10;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_import_name_from_4;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_4 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_4)) {
           tmp_assign_source_11 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_4,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_compat_etree_fromstring,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_11 = IMPORT_NAME(tmp_import_name_from_4, const_str_plain_compat_etree_fromstring);
        }

        if (tmp_assign_source_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_etree_fromstring, tmp_assign_source_11);
    }
    {
        PyObject *tmp_assign_source_12;
        PyObject *tmp_import_name_from_5;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_5 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_5)) {
           tmp_assign_source_12 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_5,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_compat_str,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_12 = IMPORT_NAME(tmp_import_name_from_5, const_str_plain_compat_str);
        }

        if (tmp_assign_source_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_str, tmp_assign_source_12);
    }
    {
        PyObject *tmp_assign_source_13;
        PyObject *tmp_import_name_from_6;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_6 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_6)) {
           tmp_assign_source_13 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_6,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_compat_urllib_parse_unquote,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_13 = IMPORT_NAME(tmp_import_name_from_6, const_str_plain_compat_urllib_parse_unquote);
        }

        if (tmp_assign_source_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urllib_parse_unquote, tmp_assign_source_13);
    }
    {
        PyObject *tmp_assign_source_14;
        PyObject *tmp_import_name_from_7;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_7 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_7)) {
           tmp_assign_source_14 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_7,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_compat_urlparse,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_14 = IMPORT_NAME(tmp_import_name_from_7, const_str_plain_compat_urlparse);
        }

        if (tmp_assign_source_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_urlparse, tmp_assign_source_14);
    }
    {
        PyObject *tmp_assign_source_15;
        PyObject *tmp_import_name_from_8;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_8 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_8)) {
           tmp_assign_source_15 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_8,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_compat_xml_parse_error,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_15 = IMPORT_NAME(tmp_import_name_from_8, const_str_plain_compat_xml_parse_error);
        }

        if (tmp_assign_source_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_compat_xml_parse_error, tmp_assign_source_15);
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;
    CHECK_OBJECT(tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;

    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_name_name_7;
        PyObject *tmp_globals_name_7;
        PyObject *tmp_locals_name_7;
        PyObject *tmp_fromlist_name_7;
        PyObject *tmp_level_name_7;
        tmp_name_name_7 = const_str_plain_utils;
        tmp_globals_name_7 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_7 = Py_None;
        tmp_fromlist_name_7 = const_tuple_4e3656e063bed1199aa2b17bdddeef6a_tuple;
        tmp_level_name_7 = const_int_pos_2;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 18;
        tmp_assign_source_16 = IMPORT_MODULE5(tmp_name_name_7, tmp_globals_name_7, tmp_locals_name_7, tmp_fromlist_name_7, tmp_level_name_7);
        if (tmp_assign_source_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_2__module == NULL);
        tmp_import_from_2__module = tmp_assign_source_16;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_import_name_from_9;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_9 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_9)) {
           tmp_assign_source_17 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_9,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_determine_ext,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_17 = IMPORT_NAME(tmp_import_name_from_9, const_str_plain_determine_ext);
        }

        if (tmp_assign_source_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_determine_ext, tmp_assign_source_17);
    }
    {
        PyObject *tmp_assign_source_18;
        PyObject *tmp_import_name_from_10;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_10 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_10)) {
           tmp_assign_source_18 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_10,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_ExtractorError,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_18 = IMPORT_NAME(tmp_import_name_from_10, const_str_plain_ExtractorError);
        }

        if (tmp_assign_source_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ExtractorError, tmp_assign_source_18);
    }
    {
        PyObject *tmp_assign_source_19;
        PyObject *tmp_import_name_from_11;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_11 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_11)) {
           tmp_assign_source_19 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_11,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_float_or_none,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_19 = IMPORT_NAME(tmp_import_name_from_11, const_str_plain_float_or_none);
        }

        if (tmp_assign_source_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_float_or_none, tmp_assign_source_19);
    }
    {
        PyObject *tmp_assign_source_20;
        PyObject *tmp_import_name_from_12;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_12 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_12)) {
           tmp_assign_source_20 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_12,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_HEADRequest,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_20 = IMPORT_NAME(tmp_import_name_from_12, const_str_plain_HEADRequest);
        }

        if (tmp_assign_source_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_HEADRequest, tmp_assign_source_20);
    }
    {
        PyObject *tmp_assign_source_21;
        PyObject *tmp_import_name_from_13;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_13 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_13)) {
           tmp_assign_source_21 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_13,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_is_html,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_21 = IMPORT_NAME(tmp_import_name_from_13, const_str_plain_is_html);
        }

        if (tmp_assign_source_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_is_html, tmp_assign_source_21);
    }
    {
        PyObject *tmp_assign_source_22;
        PyObject *tmp_import_name_from_14;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_14 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_14)) {
           tmp_assign_source_22 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_14,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_js_to_json,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_22 = IMPORT_NAME(tmp_import_name_from_14, const_str_plain_js_to_json);
        }

        if (tmp_assign_source_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_js_to_json, tmp_assign_source_22);
    }
    {
        PyObject *tmp_assign_source_23;
        PyObject *tmp_import_name_from_15;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_15 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_15)) {
           tmp_assign_source_23 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_15,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_KNOWN_EXTENSIONS,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_23 = IMPORT_NAME(tmp_import_name_from_15, const_str_plain_KNOWN_EXTENSIONS);
        }

        if (tmp_assign_source_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_KNOWN_EXTENSIONS, tmp_assign_source_23);
    }
    {
        PyObject *tmp_assign_source_24;
        PyObject *tmp_import_name_from_16;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_16 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_16)) {
           tmp_assign_source_24 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_16,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_merge_dicts,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_24 = IMPORT_NAME(tmp_import_name_from_16, const_str_plain_merge_dicts);
        }

        if (tmp_assign_source_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_merge_dicts, tmp_assign_source_24);
    }
    {
        PyObject *tmp_assign_source_25;
        PyObject *tmp_import_name_from_17;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_17 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_17)) {
           tmp_assign_source_25 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_17,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_mimetype2ext,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_25 = IMPORT_NAME(tmp_import_name_from_17, const_str_plain_mimetype2ext);
        }

        if (tmp_assign_source_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_mimetype2ext, tmp_assign_source_25);
    }
    {
        PyObject *tmp_assign_source_26;
        PyObject *tmp_import_name_from_18;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_18 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_18)) {
           tmp_assign_source_26 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_18,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_orderedSet,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_26 = IMPORT_NAME(tmp_import_name_from_18, const_str_plain_orderedSet);
        }

        if (tmp_assign_source_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_orderedSet, tmp_assign_source_26);
    }
    {
        PyObject *tmp_assign_source_27;
        PyObject *tmp_import_name_from_19;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_19 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_19)) {
           tmp_assign_source_27 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_19,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_sanitized_Request,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_27 = IMPORT_NAME(tmp_import_name_from_19, const_str_plain_sanitized_Request);
        }

        if (tmp_assign_source_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_sanitized_Request, tmp_assign_source_27);
    }
    {
        PyObject *tmp_assign_source_28;
        PyObject *tmp_import_name_from_20;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_20 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_20)) {
           tmp_assign_source_28 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_20,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_smuggle_url,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_28 = IMPORT_NAME(tmp_import_name_from_20, const_str_plain_smuggle_url);
        }

        if (tmp_assign_source_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_smuggle_url, tmp_assign_source_28);
    }
    {
        PyObject *tmp_assign_source_29;
        PyObject *tmp_import_name_from_21;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_21 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_21)) {
           tmp_assign_source_29 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_21,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_unescapeHTML,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_29 = IMPORT_NAME(tmp_import_name_from_21, const_str_plain_unescapeHTML);
        }

        if (tmp_assign_source_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unescapeHTML, tmp_assign_source_29);
    }
    {
        PyObject *tmp_assign_source_30;
        PyObject *tmp_import_name_from_22;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_22 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_22)) {
           tmp_assign_source_30 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_22,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_unified_strdate,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_30 = IMPORT_NAME(tmp_import_name_from_22, const_str_plain_unified_strdate);
        }

        if (tmp_assign_source_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unified_strdate, tmp_assign_source_30);
    }
    {
        PyObject *tmp_assign_source_31;
        PyObject *tmp_import_name_from_23;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_23 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_23)) {
           tmp_assign_source_31 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_23,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_unsmuggle_url,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_31 = IMPORT_NAME(tmp_import_name_from_23, const_str_plain_unsmuggle_url);
        }

        if (tmp_assign_source_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_unsmuggle_url, tmp_assign_source_31);
    }
    {
        PyObject *tmp_assign_source_32;
        PyObject *tmp_import_name_from_24;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_24 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_24)) {
           tmp_assign_source_32 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_24,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_UnsupportedError,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_32 = IMPORT_NAME(tmp_import_name_from_24, const_str_plain_UnsupportedError);
        }

        if (tmp_assign_source_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_UnsupportedError, tmp_assign_source_32);
    }
    {
        PyObject *tmp_assign_source_33;
        PyObject *tmp_import_name_from_25;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_25 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_25)) {
           tmp_assign_source_33 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_25,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_xpath_text,
                const_int_pos_2
            );
        } else {
           tmp_assign_source_33 = IMPORT_NAME(tmp_import_name_from_25, const_str_plain_xpath_text);
        }

        if (tmp_assign_source_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_xpath_text, tmp_assign_source_33);
    }
    goto try_end_2;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_2__module);
    Py_DECREF(tmp_import_from_2__module);
    tmp_import_from_2__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto frame_exception_exit_1;
    // End of try:
    try_end_2:;
    CHECK_OBJECT(tmp_import_from_2__module);
    Py_DECREF(tmp_import_from_2__module);
    tmp_import_from_2__module = NULL;

    {
        PyObject *tmp_assign_source_34;
        PyObject *tmp_import_name_from_26;
        PyObject *tmp_name_name_8;
        PyObject *tmp_globals_name_8;
        PyObject *tmp_locals_name_8;
        PyObject *tmp_fromlist_name_8;
        PyObject *tmp_level_name_8;
        tmp_name_name_8 = const_str_plain_commonprotocols;
        tmp_globals_name_8 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_8 = Py_None;
        tmp_fromlist_name_8 = const_tuple_str_plain_RtmpIE_tuple;
        tmp_level_name_8 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 37;
        tmp_import_name_from_26 = IMPORT_MODULE5(tmp_name_name_8, tmp_globals_name_8, tmp_locals_name_8, tmp_fromlist_name_8, tmp_level_name_8);
        if (tmp_import_name_from_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 37;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_26)) {
           tmp_assign_source_34 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_26,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_RtmpIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_34 = IMPORT_NAME(tmp_import_name_from_26, const_str_plain_RtmpIE);
        }

        Py_DECREF(tmp_import_name_from_26);
        if (tmp_assign_source_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 37;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RtmpIE, tmp_assign_source_34);
    }
    {
        PyObject *tmp_assign_source_35;
        PyObject *tmp_name_name_9;
        PyObject *tmp_globals_name_9;
        PyObject *tmp_locals_name_9;
        PyObject *tmp_fromlist_name_9;
        PyObject *tmp_level_name_9;
        tmp_name_name_9 = const_str_plain_brightcove;
        tmp_globals_name_9 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_9 = Py_None;
        tmp_fromlist_name_9 = const_tuple_str_plain_BrightcoveLegacyIE_str_plain_BrightcoveNewIE_tuple;
        tmp_level_name_9 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 38;
        tmp_assign_source_35 = IMPORT_MODULE5(tmp_name_name_9, tmp_globals_name_9, tmp_locals_name_9, tmp_fromlist_name_9, tmp_level_name_9);
        if (tmp_assign_source_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 38;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_3__module == NULL);
        tmp_import_from_3__module = tmp_assign_source_35;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_36;
        PyObject *tmp_import_name_from_27;
        CHECK_OBJECT(tmp_import_from_3__module);
        tmp_import_name_from_27 = tmp_import_from_3__module;
        if (PyModule_Check(tmp_import_name_from_27)) {
           tmp_assign_source_36 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_27,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_BrightcoveLegacyIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_36 = IMPORT_NAME(tmp_import_name_from_27, const_str_plain_BrightcoveLegacyIE);
        }

        if (tmp_assign_source_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 38;

            goto try_except_handler_3;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_BrightcoveLegacyIE, tmp_assign_source_36);
    }
    {
        PyObject *tmp_assign_source_37;
        PyObject *tmp_import_name_from_28;
        CHECK_OBJECT(tmp_import_from_3__module);
        tmp_import_name_from_28 = tmp_import_from_3__module;
        if (PyModule_Check(tmp_import_name_from_28)) {
           tmp_assign_source_37 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_28,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_BrightcoveNewIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_37 = IMPORT_NAME(tmp_import_name_from_28, const_str_plain_BrightcoveNewIE);
        }

        if (tmp_assign_source_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 38;

            goto try_except_handler_3;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_BrightcoveNewIE, tmp_assign_source_37);
    }
    goto try_end_3;
    // Exception handler code:
    try_except_handler_3:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_3__module);
    Py_DECREF(tmp_import_from_3__module);
    tmp_import_from_3__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto frame_exception_exit_1;
    // End of try:
    try_end_3:;
    CHECK_OBJECT(tmp_import_from_3__module);
    Py_DECREF(tmp_import_from_3__module);
    tmp_import_from_3__module = NULL;

    {
        PyObject *tmp_assign_source_38;
        PyObject *tmp_name_name_10;
        PyObject *tmp_globals_name_10;
        PyObject *tmp_locals_name_10;
        PyObject *tmp_fromlist_name_10;
        PyObject *tmp_level_name_10;
        tmp_name_name_10 = const_str_plain_nexx;
        tmp_globals_name_10 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_10 = Py_None;
        tmp_fromlist_name_10 = const_tuple_str_plain_NexxIE_str_plain_NexxEmbedIE_tuple;
        tmp_level_name_10 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 42;
        tmp_assign_source_38 = IMPORT_MODULE5(tmp_name_name_10, tmp_globals_name_10, tmp_locals_name_10, tmp_fromlist_name_10, tmp_level_name_10);
        if (tmp_assign_source_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 42;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_4__module == NULL);
        tmp_import_from_4__module = tmp_assign_source_38;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_39;
        PyObject *tmp_import_name_from_29;
        CHECK_OBJECT(tmp_import_from_4__module);
        tmp_import_name_from_29 = tmp_import_from_4__module;
        if (PyModule_Check(tmp_import_name_from_29)) {
           tmp_assign_source_39 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_29,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_NexxIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_39 = IMPORT_NAME(tmp_import_name_from_29, const_str_plain_NexxIE);
        }

        if (tmp_assign_source_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 42;

            goto try_except_handler_4;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_NexxIE, tmp_assign_source_39);
    }
    {
        PyObject *tmp_assign_source_40;
        PyObject *tmp_import_name_from_30;
        CHECK_OBJECT(tmp_import_from_4__module);
        tmp_import_name_from_30 = tmp_import_from_4__module;
        if (PyModule_Check(tmp_import_name_from_30)) {
           tmp_assign_source_40 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_30,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_NexxEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_40 = IMPORT_NAME(tmp_import_name_from_30, const_str_plain_NexxEmbedIE);
        }

        if (tmp_assign_source_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 42;

            goto try_except_handler_4;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_NexxEmbedIE, tmp_assign_source_40);
    }
    goto try_end_4;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_4__module);
    Py_DECREF(tmp_import_from_4__module);
    tmp_import_from_4__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;
    CHECK_OBJECT(tmp_import_from_4__module);
    Py_DECREF(tmp_import_from_4__module);
    tmp_import_from_4__module = NULL;

    {
        PyObject *tmp_assign_source_41;
        PyObject *tmp_import_name_from_31;
        PyObject *tmp_name_name_11;
        PyObject *tmp_globals_name_11;
        PyObject *tmp_locals_name_11;
        PyObject *tmp_fromlist_name_11;
        PyObject *tmp_level_name_11;
        tmp_name_name_11 = const_str_plain_nbc;
        tmp_globals_name_11 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_11 = Py_None;
        tmp_fromlist_name_11 = const_tuple_str_plain_NBCSportsVPlayerIE_tuple;
        tmp_level_name_11 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 46;
        tmp_import_name_from_31 = IMPORT_MODULE5(tmp_name_name_11, tmp_globals_name_11, tmp_locals_name_11, tmp_fromlist_name_11, tmp_level_name_11);
        if (tmp_import_name_from_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 46;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_31)) {
           tmp_assign_source_41 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_31,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_NBCSportsVPlayerIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_41 = IMPORT_NAME(tmp_import_name_from_31, const_str_plain_NBCSportsVPlayerIE);
        }

        Py_DECREF(tmp_import_name_from_31);
        if (tmp_assign_source_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 46;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_NBCSportsVPlayerIE, tmp_assign_source_41);
    }
    {
        PyObject *tmp_assign_source_42;
        PyObject *tmp_import_name_from_32;
        PyObject *tmp_name_name_12;
        PyObject *tmp_globals_name_12;
        PyObject *tmp_locals_name_12;
        PyObject *tmp_fromlist_name_12;
        PyObject *tmp_level_name_12;
        tmp_name_name_12 = const_str_plain_ooyala;
        tmp_globals_name_12 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_12 = Py_None;
        tmp_fromlist_name_12 = const_tuple_str_plain_OoyalaIE_tuple;
        tmp_level_name_12 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 47;
        tmp_import_name_from_32 = IMPORT_MODULE5(tmp_name_name_12, tmp_globals_name_12, tmp_locals_name_12, tmp_fromlist_name_12, tmp_level_name_12);
        if (tmp_import_name_from_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 47;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_32)) {
           tmp_assign_source_42 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_32,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_OoyalaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_42 = IMPORT_NAME(tmp_import_name_from_32, const_str_plain_OoyalaIE);
        }

        Py_DECREF(tmp_import_name_from_32);
        if (tmp_assign_source_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 47;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_OoyalaIE, tmp_assign_source_42);
    }
    {
        PyObject *tmp_assign_source_43;
        PyObject *tmp_import_name_from_33;
        PyObject *tmp_name_name_13;
        PyObject *tmp_globals_name_13;
        PyObject *tmp_locals_name_13;
        PyObject *tmp_fromlist_name_13;
        PyObject *tmp_level_name_13;
        tmp_name_name_13 = const_str_plain_rutv;
        tmp_globals_name_13 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_13 = Py_None;
        tmp_fromlist_name_13 = const_tuple_str_plain_RUTVIE_tuple;
        tmp_level_name_13 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 48;
        tmp_import_name_from_33 = IMPORT_MODULE5(tmp_name_name_13, tmp_globals_name_13, tmp_locals_name_13, tmp_fromlist_name_13, tmp_level_name_13);
        if (tmp_import_name_from_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 48;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_33)) {
           tmp_assign_source_43 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_33,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_RUTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_43 = IMPORT_NAME(tmp_import_name_from_33, const_str_plain_RUTVIE);
        }

        Py_DECREF(tmp_import_name_from_33);
        if (tmp_assign_source_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 48;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RUTVIE, tmp_assign_source_43);
    }
    {
        PyObject *tmp_assign_source_44;
        PyObject *tmp_import_name_from_34;
        PyObject *tmp_name_name_14;
        PyObject *tmp_globals_name_14;
        PyObject *tmp_locals_name_14;
        PyObject *tmp_fromlist_name_14;
        PyObject *tmp_level_name_14;
        tmp_name_name_14 = const_str_plain_tvc;
        tmp_globals_name_14 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_14 = Py_None;
        tmp_fromlist_name_14 = const_tuple_str_plain_TVCIE_tuple;
        tmp_level_name_14 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 49;
        tmp_import_name_from_34 = IMPORT_MODULE5(tmp_name_name_14, tmp_globals_name_14, tmp_locals_name_14, tmp_fromlist_name_14, tmp_level_name_14);
        if (tmp_import_name_from_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 49;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_34)) {
           tmp_assign_source_44 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_34,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_TVCIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_44 = IMPORT_NAME(tmp_import_name_from_34, const_str_plain_TVCIE);
        }

        Py_DECREF(tmp_import_name_from_34);
        if (tmp_assign_source_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 49;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TVCIE, tmp_assign_source_44);
    }
    {
        PyObject *tmp_assign_source_45;
        PyObject *tmp_import_name_from_35;
        PyObject *tmp_name_name_15;
        PyObject *tmp_globals_name_15;
        PyObject *tmp_locals_name_15;
        PyObject *tmp_fromlist_name_15;
        PyObject *tmp_level_name_15;
        tmp_name_name_15 = const_str_plain_sportbox;
        tmp_globals_name_15 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_15 = Py_None;
        tmp_fromlist_name_15 = const_tuple_str_plain_SportBoxIE_tuple;
        tmp_level_name_15 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 50;
        tmp_import_name_from_35 = IMPORT_MODULE5(tmp_name_name_15, tmp_globals_name_15, tmp_locals_name_15, tmp_fromlist_name_15, tmp_level_name_15);
        if (tmp_import_name_from_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 50;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_35)) {
           tmp_assign_source_45 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_35,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_SportBoxIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_45 = IMPORT_NAME(tmp_import_name_from_35, const_str_plain_SportBoxIE);
        }

        Py_DECREF(tmp_import_name_from_35);
        if (tmp_assign_source_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 50;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SportBoxIE, tmp_assign_source_45);
    }
    {
        PyObject *tmp_assign_source_46;
        PyObject *tmp_import_name_from_36;
        PyObject *tmp_name_name_16;
        PyObject *tmp_globals_name_16;
        PyObject *tmp_locals_name_16;
        PyObject *tmp_fromlist_name_16;
        PyObject *tmp_level_name_16;
        tmp_name_name_16 = const_str_plain_smotri;
        tmp_globals_name_16 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_16 = Py_None;
        tmp_fromlist_name_16 = const_tuple_str_plain_SmotriIE_tuple;
        tmp_level_name_16 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 51;
        tmp_import_name_from_36 = IMPORT_MODULE5(tmp_name_name_16, tmp_globals_name_16, tmp_locals_name_16, tmp_fromlist_name_16, tmp_level_name_16);
        if (tmp_import_name_from_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 51;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_36)) {
           tmp_assign_source_46 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_36,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_SmotriIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_46 = IMPORT_NAME(tmp_import_name_from_36, const_str_plain_SmotriIE);
        }

        Py_DECREF(tmp_import_name_from_36);
        if (tmp_assign_source_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 51;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SmotriIE, tmp_assign_source_46);
    }
    {
        PyObject *tmp_assign_source_47;
        PyObject *tmp_import_name_from_37;
        PyObject *tmp_name_name_17;
        PyObject *tmp_globals_name_17;
        PyObject *tmp_locals_name_17;
        PyObject *tmp_fromlist_name_17;
        PyObject *tmp_level_name_17;
        tmp_name_name_17 = const_str_plain_myvi;
        tmp_globals_name_17 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_17 = Py_None;
        tmp_fromlist_name_17 = const_tuple_str_plain_MyviIE_tuple;
        tmp_level_name_17 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 52;
        tmp_import_name_from_37 = IMPORT_MODULE5(tmp_name_name_17, tmp_globals_name_17, tmp_locals_name_17, tmp_fromlist_name_17, tmp_level_name_17);
        if (tmp_import_name_from_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 52;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_37)) {
           tmp_assign_source_47 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_37,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_MyviIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_47 = IMPORT_NAME(tmp_import_name_from_37, const_str_plain_MyviIE);
        }

        Py_DECREF(tmp_import_name_from_37);
        if (tmp_assign_source_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 52;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MyviIE, tmp_assign_source_47);
    }
    {
        PyObject *tmp_assign_source_48;
        PyObject *tmp_import_name_from_38;
        PyObject *tmp_name_name_18;
        PyObject *tmp_globals_name_18;
        PyObject *tmp_locals_name_18;
        PyObject *tmp_fromlist_name_18;
        PyObject *tmp_level_name_18;
        tmp_name_name_18 = const_str_plain_condenast;
        tmp_globals_name_18 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_18 = Py_None;
        tmp_fromlist_name_18 = const_tuple_str_plain_CondeNastIE_tuple;
        tmp_level_name_18 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 53;
        tmp_import_name_from_38 = IMPORT_MODULE5(tmp_name_name_18, tmp_globals_name_18, tmp_locals_name_18, tmp_fromlist_name_18, tmp_level_name_18);
        if (tmp_import_name_from_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 53;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_38)) {
           tmp_assign_source_48 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_38,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_CondeNastIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_48 = IMPORT_NAME(tmp_import_name_from_38, const_str_plain_CondeNastIE);
        }

        Py_DECREF(tmp_import_name_from_38);
        if (tmp_assign_source_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 53;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_CondeNastIE, tmp_assign_source_48);
    }
    {
        PyObject *tmp_assign_source_49;
        PyObject *tmp_import_name_from_39;
        PyObject *tmp_name_name_19;
        PyObject *tmp_globals_name_19;
        PyObject *tmp_locals_name_19;
        PyObject *tmp_fromlist_name_19;
        PyObject *tmp_level_name_19;
        tmp_name_name_19 = const_str_plain_udn;
        tmp_globals_name_19 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_19 = Py_None;
        tmp_fromlist_name_19 = const_tuple_str_plain_UDNEmbedIE_tuple;
        tmp_level_name_19 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 54;
        tmp_import_name_from_39 = IMPORT_MODULE5(tmp_name_name_19, tmp_globals_name_19, tmp_locals_name_19, tmp_fromlist_name_19, tmp_level_name_19);
        if (tmp_import_name_from_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 54;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_39)) {
           tmp_assign_source_49 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_39,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_UDNEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_49 = IMPORT_NAME(tmp_import_name_from_39, const_str_plain_UDNEmbedIE);
        }

        Py_DECREF(tmp_import_name_from_39);
        if (tmp_assign_source_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 54;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_UDNEmbedIE, tmp_assign_source_49);
    }
    {
        PyObject *tmp_assign_source_50;
        PyObject *tmp_import_name_from_40;
        PyObject *tmp_name_name_20;
        PyObject *tmp_globals_name_20;
        PyObject *tmp_locals_name_20;
        PyObject *tmp_fromlist_name_20;
        PyObject *tmp_level_name_20;
        tmp_name_name_20 = const_str_plain_senateisvp;
        tmp_globals_name_20 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_20 = Py_None;
        tmp_fromlist_name_20 = const_tuple_str_plain_SenateISVPIE_tuple;
        tmp_level_name_20 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 55;
        tmp_import_name_from_40 = IMPORT_MODULE5(tmp_name_name_20, tmp_globals_name_20, tmp_locals_name_20, tmp_fromlist_name_20, tmp_level_name_20);
        if (tmp_import_name_from_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 55;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_40)) {
           tmp_assign_source_50 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_40,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_SenateISVPIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_50 = IMPORT_NAME(tmp_import_name_from_40, const_str_plain_SenateISVPIE);
        }

        Py_DECREF(tmp_import_name_from_40);
        if (tmp_assign_source_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 55;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SenateISVPIE, tmp_assign_source_50);
    }
    {
        PyObject *tmp_assign_source_51;
        PyObject *tmp_import_name_from_41;
        PyObject *tmp_name_name_21;
        PyObject *tmp_globals_name_21;
        PyObject *tmp_locals_name_21;
        PyObject *tmp_fromlist_name_21;
        PyObject *tmp_level_name_21;
        tmp_name_name_21 = const_str_plain_svt;
        tmp_globals_name_21 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_21 = Py_None;
        tmp_fromlist_name_21 = const_tuple_str_plain_SVTIE_tuple;
        tmp_level_name_21 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 56;
        tmp_import_name_from_41 = IMPORT_MODULE5(tmp_name_name_21, tmp_globals_name_21, tmp_locals_name_21, tmp_fromlist_name_21, tmp_level_name_21);
        if (tmp_import_name_from_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 56;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_41)) {
           tmp_assign_source_51 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_41,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_SVTIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_51 = IMPORT_NAME(tmp_import_name_from_41, const_str_plain_SVTIE);
        }

        Py_DECREF(tmp_import_name_from_41);
        if (tmp_assign_source_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 56;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SVTIE, tmp_assign_source_51);
    }
    {
        PyObject *tmp_assign_source_52;
        PyObject *tmp_import_name_from_42;
        PyObject *tmp_name_name_22;
        PyObject *tmp_globals_name_22;
        PyObject *tmp_locals_name_22;
        PyObject *tmp_fromlist_name_22;
        PyObject *tmp_level_name_22;
        tmp_name_name_22 = const_str_plain_pornhub;
        tmp_globals_name_22 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_22 = Py_None;
        tmp_fromlist_name_22 = const_tuple_str_plain_PornHubIE_tuple;
        tmp_level_name_22 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 57;
        tmp_import_name_from_42 = IMPORT_MODULE5(tmp_name_name_22, tmp_globals_name_22, tmp_locals_name_22, tmp_fromlist_name_22, tmp_level_name_22);
        if (tmp_import_name_from_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 57;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_42)) {
           tmp_assign_source_52 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_42,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_PornHubIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_52 = IMPORT_NAME(tmp_import_name_from_42, const_str_plain_PornHubIE);
        }

        Py_DECREF(tmp_import_name_from_42);
        if (tmp_assign_source_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 57;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_PornHubIE, tmp_assign_source_52);
    }
    {
        PyObject *tmp_assign_source_53;
        PyObject *tmp_import_name_from_43;
        PyObject *tmp_name_name_23;
        PyObject *tmp_globals_name_23;
        PyObject *tmp_locals_name_23;
        PyObject *tmp_fromlist_name_23;
        PyObject *tmp_level_name_23;
        tmp_name_name_23 = const_str_plain_xhamster;
        tmp_globals_name_23 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_23 = Py_None;
        tmp_fromlist_name_23 = const_tuple_str_plain_XHamsterEmbedIE_tuple;
        tmp_level_name_23 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 58;
        tmp_import_name_from_43 = IMPORT_MODULE5(tmp_name_name_23, tmp_globals_name_23, tmp_locals_name_23, tmp_fromlist_name_23, tmp_level_name_23);
        if (tmp_import_name_from_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 58;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_43)) {
           tmp_assign_source_53 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_43,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_XHamsterEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_53 = IMPORT_NAME(tmp_import_name_from_43, const_str_plain_XHamsterEmbedIE);
        }

        Py_DECREF(tmp_import_name_from_43);
        if (tmp_assign_source_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 58;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_XHamsterEmbedIE, tmp_assign_source_53);
    }
    {
        PyObject *tmp_assign_source_54;
        PyObject *tmp_import_name_from_44;
        PyObject *tmp_name_name_24;
        PyObject *tmp_globals_name_24;
        PyObject *tmp_locals_name_24;
        PyObject *tmp_fromlist_name_24;
        PyObject *tmp_level_name_24;
        tmp_name_name_24 = const_str_plain_tnaflix;
        tmp_globals_name_24 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_24 = Py_None;
        tmp_fromlist_name_24 = const_tuple_str_plain_TNAFlixNetworkEmbedIE_tuple;
        tmp_level_name_24 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 59;
        tmp_import_name_from_44 = IMPORT_MODULE5(tmp_name_name_24, tmp_globals_name_24, tmp_locals_name_24, tmp_fromlist_name_24, tmp_level_name_24);
        if (tmp_import_name_from_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 59;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_44)) {
           tmp_assign_source_54 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_44,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_TNAFlixNetworkEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_54 = IMPORT_NAME(tmp_import_name_from_44, const_str_plain_TNAFlixNetworkEmbedIE);
        }

        Py_DECREF(tmp_import_name_from_44);
        if (tmp_assign_source_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 59;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TNAFlixNetworkEmbedIE, tmp_assign_source_54);
    }
    {
        PyObject *tmp_assign_source_55;
        PyObject *tmp_import_name_from_45;
        PyObject *tmp_name_name_25;
        PyObject *tmp_globals_name_25;
        PyObject *tmp_locals_name_25;
        PyObject *tmp_fromlist_name_25;
        PyObject *tmp_level_name_25;
        tmp_name_name_25 = const_str_plain_drtuber;
        tmp_globals_name_25 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_25 = Py_None;
        tmp_fromlist_name_25 = const_tuple_str_plain_DrTuberIE_tuple;
        tmp_level_name_25 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 60;
        tmp_import_name_from_45 = IMPORT_MODULE5(tmp_name_name_25, tmp_globals_name_25, tmp_locals_name_25, tmp_fromlist_name_25, tmp_level_name_25);
        if (tmp_import_name_from_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 60;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_45)) {
           tmp_assign_source_55 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_45,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_DrTuberIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_55 = IMPORT_NAME(tmp_import_name_from_45, const_str_plain_DrTuberIE);
        }

        Py_DECREF(tmp_import_name_from_45);
        if (tmp_assign_source_55 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 60;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DrTuberIE, tmp_assign_source_55);
    }
    {
        PyObject *tmp_assign_source_56;
        PyObject *tmp_import_name_from_46;
        PyObject *tmp_name_name_26;
        PyObject *tmp_globals_name_26;
        PyObject *tmp_locals_name_26;
        PyObject *tmp_fromlist_name_26;
        PyObject *tmp_level_name_26;
        tmp_name_name_26 = const_str_plain_redtube;
        tmp_globals_name_26 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_26 = Py_None;
        tmp_fromlist_name_26 = const_tuple_str_plain_RedTubeIE_tuple;
        tmp_level_name_26 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 61;
        tmp_import_name_from_46 = IMPORT_MODULE5(tmp_name_name_26, tmp_globals_name_26, tmp_locals_name_26, tmp_fromlist_name_26, tmp_level_name_26);
        if (tmp_import_name_from_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 61;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_46)) {
           tmp_assign_source_56 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_46,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_RedTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_56 = IMPORT_NAME(tmp_import_name_from_46, const_str_plain_RedTubeIE);
        }

        Py_DECREF(tmp_import_name_from_46);
        if (tmp_assign_source_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 61;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RedTubeIE, tmp_assign_source_56);
    }
    {
        PyObject *tmp_assign_source_57;
        PyObject *tmp_import_name_from_47;
        PyObject *tmp_name_name_27;
        PyObject *tmp_globals_name_27;
        PyObject *tmp_locals_name_27;
        PyObject *tmp_fromlist_name_27;
        PyObject *tmp_level_name_27;
        tmp_name_name_27 = const_str_plain_tube8;
        tmp_globals_name_27 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_27 = Py_None;
        tmp_fromlist_name_27 = const_tuple_str_plain_Tube8IE_tuple;
        tmp_level_name_27 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 62;
        tmp_import_name_from_47 = IMPORT_MODULE5(tmp_name_name_27, tmp_globals_name_27, tmp_locals_name_27, tmp_fromlist_name_27, tmp_level_name_27);
        if (tmp_import_name_from_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 62;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_47)) {
           tmp_assign_source_57 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_47,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_Tube8IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_57 = IMPORT_NAME(tmp_import_name_from_47, const_str_plain_Tube8IE);
        }

        Py_DECREF(tmp_import_name_from_47);
        if (tmp_assign_source_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 62;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_Tube8IE, tmp_assign_source_57);
    }
    {
        PyObject *tmp_assign_source_58;
        PyObject *tmp_import_name_from_48;
        PyObject *tmp_name_name_28;
        PyObject *tmp_globals_name_28;
        PyObject *tmp_locals_name_28;
        PyObject *tmp_fromlist_name_28;
        PyObject *tmp_level_name_28;
        tmp_name_name_28 = const_str_plain_mofosex;
        tmp_globals_name_28 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_28 = Py_None;
        tmp_fromlist_name_28 = const_tuple_str_plain_MofosexEmbedIE_tuple;
        tmp_level_name_28 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 63;
        tmp_import_name_from_48 = IMPORT_MODULE5(tmp_name_name_28, tmp_globals_name_28, tmp_locals_name_28, tmp_fromlist_name_28, tmp_level_name_28);
        if (tmp_import_name_from_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 63;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_48)) {
           tmp_assign_source_58 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_48,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_MofosexEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_58 = IMPORT_NAME(tmp_import_name_from_48, const_str_plain_MofosexEmbedIE);
        }

        Py_DECREF(tmp_import_name_from_48);
        if (tmp_assign_source_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 63;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MofosexEmbedIE, tmp_assign_source_58);
    }
    {
        PyObject *tmp_assign_source_59;
        PyObject *tmp_import_name_from_49;
        PyObject *tmp_name_name_29;
        PyObject *tmp_globals_name_29;
        PyObject *tmp_locals_name_29;
        PyObject *tmp_fromlist_name_29;
        PyObject *tmp_level_name_29;
        tmp_name_name_29 = const_str_plain_spankwire;
        tmp_globals_name_29 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_29 = Py_None;
        tmp_fromlist_name_29 = const_tuple_str_plain_SpankwireIE_tuple;
        tmp_level_name_29 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 64;
        tmp_import_name_from_49 = IMPORT_MODULE5(tmp_name_name_29, tmp_globals_name_29, tmp_locals_name_29, tmp_fromlist_name_29, tmp_level_name_29);
        if (tmp_import_name_from_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 64;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_49)) {
           tmp_assign_source_59 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_49,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_SpankwireIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_59 = IMPORT_NAME(tmp_import_name_from_49, const_str_plain_SpankwireIE);
        }

        Py_DECREF(tmp_import_name_from_49);
        if (tmp_assign_source_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 64;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SpankwireIE, tmp_assign_source_59);
    }
    {
        PyObject *tmp_assign_source_60;
        PyObject *tmp_import_name_from_50;
        PyObject *tmp_name_name_30;
        PyObject *tmp_globals_name_30;
        PyObject *tmp_locals_name_30;
        PyObject *tmp_fromlist_name_30;
        PyObject *tmp_level_name_30;
        tmp_name_name_30 = const_str_plain_youporn;
        tmp_globals_name_30 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_30 = Py_None;
        tmp_fromlist_name_30 = const_tuple_str_plain_YouPornIE_tuple;
        tmp_level_name_30 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 65;
        tmp_import_name_from_50 = IMPORT_MODULE5(tmp_name_name_30, tmp_globals_name_30, tmp_locals_name_30, tmp_fromlist_name_30, tmp_level_name_30);
        if (tmp_import_name_from_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_50)) {
           tmp_assign_source_60 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_50,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_YouPornIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_60 = IMPORT_NAME(tmp_import_name_from_50, const_str_plain_YouPornIE);
        }

        Py_DECREF(tmp_import_name_from_50);
        if (tmp_assign_source_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YouPornIE, tmp_assign_source_60);
    }
    {
        PyObject *tmp_assign_source_61;
        PyObject *tmp_import_name_from_51;
        PyObject *tmp_name_name_31;
        PyObject *tmp_globals_name_31;
        PyObject *tmp_locals_name_31;
        PyObject *tmp_fromlist_name_31;
        PyObject *tmp_level_name_31;
        tmp_name_name_31 = const_str_plain_vimeo;
        tmp_globals_name_31 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_31 = Py_None;
        tmp_fromlist_name_31 = const_tuple_str_plain_VimeoIE_tuple;
        tmp_level_name_31 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 66;
        tmp_import_name_from_51 = IMPORT_MODULE5(tmp_name_name_31, tmp_globals_name_31, tmp_locals_name_31, tmp_fromlist_name_31, tmp_level_name_31);
        if (tmp_import_name_from_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 66;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_51)) {
           tmp_assign_source_61 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_51,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_VimeoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_61 = IMPORT_NAME(tmp_import_name_from_51, const_str_plain_VimeoIE);
        }

        Py_DECREF(tmp_import_name_from_51);
        if (tmp_assign_source_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 66;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VimeoIE, tmp_assign_source_61);
    }
    {
        PyObject *tmp_assign_source_62;
        PyObject *tmp_import_name_from_52;
        PyObject *tmp_name_name_32;
        PyObject *tmp_globals_name_32;
        PyObject *tmp_locals_name_32;
        PyObject *tmp_fromlist_name_32;
        PyObject *tmp_level_name_32;
        tmp_name_name_32 = const_str_plain_dailymotion;
        tmp_globals_name_32 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_32 = Py_None;
        tmp_fromlist_name_32 = const_tuple_str_plain_DailymotionIE_tuple;
        tmp_level_name_32 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 67;
        tmp_import_name_from_52 = IMPORT_MODULE5(tmp_name_name_32, tmp_globals_name_32, tmp_locals_name_32, tmp_fromlist_name_32, tmp_level_name_32);
        if (tmp_import_name_from_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 67;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_52)) {
           tmp_assign_source_62 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_52,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_DailymotionIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_62 = IMPORT_NAME(tmp_import_name_from_52, const_str_plain_DailymotionIE);
        }

        Py_DECREF(tmp_import_name_from_52);
        if (tmp_assign_source_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 67;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DailymotionIE, tmp_assign_source_62);
    }
    {
        PyObject *tmp_assign_source_63;
        PyObject *tmp_import_name_from_53;
        PyObject *tmp_name_name_33;
        PyObject *tmp_globals_name_33;
        PyObject *tmp_locals_name_33;
        PyObject *tmp_fromlist_name_33;
        PyObject *tmp_level_name_33;
        tmp_name_name_33 = const_str_plain_dailymail;
        tmp_globals_name_33 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_33 = Py_None;
        tmp_fromlist_name_33 = const_tuple_str_plain_DailyMailIE_tuple;
        tmp_level_name_33 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 68;
        tmp_import_name_from_53 = IMPORT_MODULE5(tmp_name_name_33, tmp_globals_name_33, tmp_locals_name_33, tmp_fromlist_name_33, tmp_level_name_33);
        if (tmp_import_name_from_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 68;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_53)) {
           tmp_assign_source_63 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_53,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_DailyMailIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_63 = IMPORT_NAME(tmp_import_name_from_53, const_str_plain_DailyMailIE);
        }

        Py_DECREF(tmp_import_name_from_53);
        if (tmp_assign_source_63 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 68;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DailyMailIE, tmp_assign_source_63);
    }
    {
        PyObject *tmp_assign_source_64;
        PyObject *tmp_import_name_from_54;
        PyObject *tmp_name_name_34;
        PyObject *tmp_globals_name_34;
        PyObject *tmp_locals_name_34;
        PyObject *tmp_fromlist_name_34;
        PyObject *tmp_level_name_34;
        tmp_name_name_34 = const_str_plain_onionstudios;
        tmp_globals_name_34 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_34 = Py_None;
        tmp_fromlist_name_34 = const_tuple_str_plain_OnionStudiosIE_tuple;
        tmp_level_name_34 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 69;
        tmp_import_name_from_54 = IMPORT_MODULE5(tmp_name_name_34, tmp_globals_name_34, tmp_locals_name_34, tmp_fromlist_name_34, tmp_level_name_34);
        if (tmp_import_name_from_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 69;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_54)) {
           tmp_assign_source_64 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_54,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_OnionStudiosIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_64 = IMPORT_NAME(tmp_import_name_from_54, const_str_plain_OnionStudiosIE);
        }

        Py_DECREF(tmp_import_name_from_54);
        if (tmp_assign_source_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 69;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_OnionStudiosIE, tmp_assign_source_64);
    }
    {
        PyObject *tmp_assign_source_65;
        PyObject *tmp_import_name_from_55;
        PyObject *tmp_name_name_35;
        PyObject *tmp_globals_name_35;
        PyObject *tmp_locals_name_35;
        PyObject *tmp_fromlist_name_35;
        PyObject *tmp_level_name_35;
        tmp_name_name_35 = const_str_plain_viewlift;
        tmp_globals_name_35 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_35 = Py_None;
        tmp_fromlist_name_35 = const_tuple_str_plain_ViewLiftEmbedIE_tuple;
        tmp_level_name_35 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 70;
        tmp_import_name_from_55 = IMPORT_MODULE5(tmp_name_name_35, tmp_globals_name_35, tmp_locals_name_35, tmp_fromlist_name_35, tmp_level_name_35);
        if (tmp_import_name_from_55 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 70;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_55)) {
           tmp_assign_source_65 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_55,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_ViewLiftEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_65 = IMPORT_NAME(tmp_import_name_from_55, const_str_plain_ViewLiftEmbedIE);
        }

        Py_DECREF(tmp_import_name_from_55);
        if (tmp_assign_source_65 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 70;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ViewLiftEmbedIE, tmp_assign_source_65);
    }
    {
        PyObject *tmp_assign_source_66;
        PyObject *tmp_import_name_from_56;
        PyObject *tmp_name_name_36;
        PyObject *tmp_globals_name_36;
        PyObject *tmp_locals_name_36;
        PyObject *tmp_fromlist_name_36;
        PyObject *tmp_level_name_36;
        tmp_name_name_36 = const_str_plain_mtv;
        tmp_globals_name_36 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_36 = Py_None;
        tmp_fromlist_name_36 = const_tuple_str_plain_MTVServicesEmbeddedIE_tuple;
        tmp_level_name_36 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 71;
        tmp_import_name_from_56 = IMPORT_MODULE5(tmp_name_name_36, tmp_globals_name_36, tmp_locals_name_36, tmp_fromlist_name_36, tmp_level_name_36);
        if (tmp_import_name_from_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 71;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_56)) {
           tmp_assign_source_66 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_56,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_MTVServicesEmbeddedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_66 = IMPORT_NAME(tmp_import_name_from_56, const_str_plain_MTVServicesEmbeddedIE);
        }

        Py_DECREF(tmp_import_name_from_56);
        if (tmp_assign_source_66 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 71;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MTVServicesEmbeddedIE, tmp_assign_source_66);
    }
    {
        PyObject *tmp_assign_source_67;
        PyObject *tmp_import_name_from_57;
        PyObject *tmp_name_name_37;
        PyObject *tmp_globals_name_37;
        PyObject *tmp_locals_name_37;
        PyObject *tmp_fromlist_name_37;
        PyObject *tmp_level_name_37;
        tmp_name_name_37 = const_str_plain_pladform;
        tmp_globals_name_37 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_37 = Py_None;
        tmp_fromlist_name_37 = const_tuple_str_plain_PladformIE_tuple;
        tmp_level_name_37 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 72;
        tmp_import_name_from_57 = IMPORT_MODULE5(tmp_name_name_37, tmp_globals_name_37, tmp_locals_name_37, tmp_fromlist_name_37, tmp_level_name_37);
        if (tmp_import_name_from_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 72;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_57)) {
           tmp_assign_source_67 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_57,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_PladformIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_67 = IMPORT_NAME(tmp_import_name_from_57, const_str_plain_PladformIE);
        }

        Py_DECREF(tmp_import_name_from_57);
        if (tmp_assign_source_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 72;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_PladformIE, tmp_assign_source_67);
    }
    {
        PyObject *tmp_assign_source_68;
        PyObject *tmp_import_name_from_58;
        PyObject *tmp_name_name_38;
        PyObject *tmp_globals_name_38;
        PyObject *tmp_locals_name_38;
        PyObject *tmp_fromlist_name_38;
        PyObject *tmp_level_name_38;
        tmp_name_name_38 = const_str_plain_videomore;
        tmp_globals_name_38 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_38 = Py_None;
        tmp_fromlist_name_38 = const_tuple_str_plain_VideomoreIE_tuple;
        tmp_level_name_38 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 73;
        tmp_import_name_from_58 = IMPORT_MODULE5(tmp_name_name_38, tmp_globals_name_38, tmp_locals_name_38, tmp_fromlist_name_38, tmp_level_name_38);
        if (tmp_import_name_from_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 73;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_58)) {
           tmp_assign_source_68 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_58,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_VideomoreIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_68 = IMPORT_NAME(tmp_import_name_from_58, const_str_plain_VideomoreIE);
        }

        Py_DECREF(tmp_import_name_from_58);
        if (tmp_assign_source_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 73;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VideomoreIE, tmp_assign_source_68);
    }
    {
        PyObject *tmp_assign_source_69;
        PyObject *tmp_import_name_from_59;
        PyObject *tmp_name_name_39;
        PyObject *tmp_globals_name_39;
        PyObject *tmp_locals_name_39;
        PyObject *tmp_fromlist_name_39;
        PyObject *tmp_level_name_39;
        tmp_name_name_39 = const_str_plain_webcaster;
        tmp_globals_name_39 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_39 = Py_None;
        tmp_fromlist_name_39 = const_tuple_str_plain_WebcasterFeedIE_tuple;
        tmp_level_name_39 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 74;
        tmp_import_name_from_59 = IMPORT_MODULE5(tmp_name_name_39, tmp_globals_name_39, tmp_locals_name_39, tmp_fromlist_name_39, tmp_level_name_39);
        if (tmp_import_name_from_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_59)) {
           tmp_assign_source_69 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_59,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_WebcasterFeedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_69 = IMPORT_NAME(tmp_import_name_from_59, const_str_plain_WebcasterFeedIE);
        }

        Py_DECREF(tmp_import_name_from_59);
        if (tmp_assign_source_69 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_WebcasterFeedIE, tmp_assign_source_69);
    }
    {
        PyObject *tmp_assign_source_70;
        PyObject *tmp_import_name_from_60;
        PyObject *tmp_name_name_40;
        PyObject *tmp_globals_name_40;
        PyObject *tmp_locals_name_40;
        PyObject *tmp_fromlist_name_40;
        PyObject *tmp_level_name_40;
        tmp_name_name_40 = const_str_plain_googledrive;
        tmp_globals_name_40 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_40 = Py_None;
        tmp_fromlist_name_40 = const_tuple_str_plain_GoogleDriveIE_tuple;
        tmp_level_name_40 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 75;
        tmp_import_name_from_60 = IMPORT_MODULE5(tmp_name_name_40, tmp_globals_name_40, tmp_locals_name_40, tmp_fromlist_name_40, tmp_level_name_40);
        if (tmp_import_name_from_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 75;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_60)) {
           tmp_assign_source_70 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_60,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_GoogleDriveIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_70 = IMPORT_NAME(tmp_import_name_from_60, const_str_plain_GoogleDriveIE);
        }

        Py_DECREF(tmp_import_name_from_60);
        if (tmp_assign_source_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 75;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_GoogleDriveIE, tmp_assign_source_70);
    }
    {
        PyObject *tmp_assign_source_71;
        PyObject *tmp_import_name_from_61;
        PyObject *tmp_name_name_41;
        PyObject *tmp_globals_name_41;
        PyObject *tmp_locals_name_41;
        PyObject *tmp_fromlist_name_41;
        PyObject *tmp_level_name_41;
        tmp_name_name_41 = const_str_plain_jwplatform;
        tmp_globals_name_41 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_41 = Py_None;
        tmp_fromlist_name_41 = const_tuple_str_plain_JWPlatformIE_tuple;
        tmp_level_name_41 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 76;
        tmp_import_name_from_61 = IMPORT_MODULE5(tmp_name_name_41, tmp_globals_name_41, tmp_locals_name_41, tmp_fromlist_name_41, tmp_level_name_41);
        if (tmp_import_name_from_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 76;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_61)) {
           tmp_assign_source_71 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_61,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_JWPlatformIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_71 = IMPORT_NAME(tmp_import_name_from_61, const_str_plain_JWPlatformIE);
        }

        Py_DECREF(tmp_import_name_from_61);
        if (tmp_assign_source_71 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 76;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_JWPlatformIE, tmp_assign_source_71);
    }
    {
        PyObject *tmp_assign_source_72;
        PyObject *tmp_import_name_from_62;
        PyObject *tmp_name_name_42;
        PyObject *tmp_globals_name_42;
        PyObject *tmp_locals_name_42;
        PyObject *tmp_fromlist_name_42;
        PyObject *tmp_level_name_42;
        tmp_name_name_42 = const_str_plain_digiteka;
        tmp_globals_name_42 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_42 = Py_None;
        tmp_fromlist_name_42 = const_tuple_str_plain_DigitekaIE_tuple;
        tmp_level_name_42 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 77;
        tmp_import_name_from_62 = IMPORT_MODULE5(tmp_name_name_42, tmp_globals_name_42, tmp_locals_name_42, tmp_fromlist_name_42, tmp_level_name_42);
        if (tmp_import_name_from_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 77;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_62)) {
           tmp_assign_source_72 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_62,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_DigitekaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_72 = IMPORT_NAME(tmp_import_name_from_62, const_str_plain_DigitekaIE);
        }

        Py_DECREF(tmp_import_name_from_62);
        if (tmp_assign_source_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 77;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DigitekaIE, tmp_assign_source_72);
    }
    {
        PyObject *tmp_assign_source_73;
        PyObject *tmp_import_name_from_63;
        PyObject *tmp_name_name_43;
        PyObject *tmp_globals_name_43;
        PyObject *tmp_locals_name_43;
        PyObject *tmp_fromlist_name_43;
        PyObject *tmp_level_name_43;
        tmp_name_name_43 = const_str_plain_arkena;
        tmp_globals_name_43 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_43 = Py_None;
        tmp_fromlist_name_43 = const_tuple_str_plain_ArkenaIE_tuple;
        tmp_level_name_43 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 78;
        tmp_import_name_from_63 = IMPORT_MODULE5(tmp_name_name_43, tmp_globals_name_43, tmp_locals_name_43, tmp_fromlist_name_43, tmp_level_name_43);
        if (tmp_import_name_from_63 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 78;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_63)) {
           tmp_assign_source_73 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_63,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_ArkenaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_73 = IMPORT_NAME(tmp_import_name_from_63, const_str_plain_ArkenaIE);
        }

        Py_DECREF(tmp_import_name_from_63);
        if (tmp_assign_source_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 78;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ArkenaIE, tmp_assign_source_73);
    }
    {
        PyObject *tmp_assign_source_74;
        PyObject *tmp_import_name_from_64;
        PyObject *tmp_name_name_44;
        PyObject *tmp_globals_name_44;
        PyObject *tmp_locals_name_44;
        PyObject *tmp_fromlist_name_44;
        PyObject *tmp_level_name_44;
        tmp_name_name_44 = const_str_plain_instagram;
        tmp_globals_name_44 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_44 = Py_None;
        tmp_fromlist_name_44 = const_tuple_str_plain_InstagramIE_tuple;
        tmp_level_name_44 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 79;
        tmp_import_name_from_64 = IMPORT_MODULE5(tmp_name_name_44, tmp_globals_name_44, tmp_locals_name_44, tmp_fromlist_name_44, tmp_level_name_44);
        if (tmp_import_name_from_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 79;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_64)) {
           tmp_assign_source_74 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_64,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_InstagramIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_74 = IMPORT_NAME(tmp_import_name_from_64, const_str_plain_InstagramIE);
        }

        Py_DECREF(tmp_import_name_from_64);
        if (tmp_assign_source_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 79;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_InstagramIE, tmp_assign_source_74);
    }
    {
        PyObject *tmp_assign_source_75;
        PyObject *tmp_import_name_from_65;
        PyObject *tmp_name_name_45;
        PyObject *tmp_globals_name_45;
        PyObject *tmp_locals_name_45;
        PyObject *tmp_fromlist_name_45;
        PyObject *tmp_level_name_45;
        tmp_name_name_45 = const_str_plain_liveleak;
        tmp_globals_name_45 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_45 = Py_None;
        tmp_fromlist_name_45 = const_tuple_str_plain_LiveLeakIE_tuple;
        tmp_level_name_45 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 80;
        tmp_import_name_from_65 = IMPORT_MODULE5(tmp_name_name_45, tmp_globals_name_45, tmp_locals_name_45, tmp_fromlist_name_45, tmp_level_name_45);
        if (tmp_import_name_from_65 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 80;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_65)) {
           tmp_assign_source_75 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_65,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_LiveLeakIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_75 = IMPORT_NAME(tmp_import_name_from_65, const_str_plain_LiveLeakIE);
        }

        Py_DECREF(tmp_import_name_from_65);
        if (tmp_assign_source_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 80;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_LiveLeakIE, tmp_assign_source_75);
    }
    {
        PyObject *tmp_assign_source_76;
        PyObject *tmp_import_name_from_66;
        PyObject *tmp_name_name_46;
        PyObject *tmp_globals_name_46;
        PyObject *tmp_locals_name_46;
        PyObject *tmp_fromlist_name_46;
        PyObject *tmp_level_name_46;
        tmp_name_name_46 = const_str_plain_threeqsdn;
        tmp_globals_name_46 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_46 = Py_None;
        tmp_fromlist_name_46 = const_tuple_str_plain_ThreeQSDNIE_tuple;
        tmp_level_name_46 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 81;
        tmp_import_name_from_66 = IMPORT_MODULE5(tmp_name_name_46, tmp_globals_name_46, tmp_locals_name_46, tmp_fromlist_name_46, tmp_level_name_46);
        if (tmp_import_name_from_66 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_66)) {
           tmp_assign_source_76 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_66,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_ThreeQSDNIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_76 = IMPORT_NAME(tmp_import_name_from_66, const_str_plain_ThreeQSDNIE);
        }

        Py_DECREF(tmp_import_name_from_66);
        if (tmp_assign_source_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ThreeQSDNIE, tmp_assign_source_76);
    }
    {
        PyObject *tmp_assign_source_77;
        PyObject *tmp_import_name_from_67;
        PyObject *tmp_name_name_47;
        PyObject *tmp_globals_name_47;
        PyObject *tmp_locals_name_47;
        PyObject *tmp_fromlist_name_47;
        PyObject *tmp_level_name_47;
        tmp_name_name_47 = const_str_plain_theplatform;
        tmp_globals_name_47 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_47 = Py_None;
        tmp_fromlist_name_47 = const_tuple_str_plain_ThePlatformIE_tuple;
        tmp_level_name_47 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 82;
        tmp_import_name_from_67 = IMPORT_MODULE5(tmp_name_name_47, tmp_globals_name_47, tmp_locals_name_47, tmp_fromlist_name_47, tmp_level_name_47);
        if (tmp_import_name_from_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 82;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_67)) {
           tmp_assign_source_77 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_67,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_ThePlatformIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_77 = IMPORT_NAME(tmp_import_name_from_67, const_str_plain_ThePlatformIE);
        }

        Py_DECREF(tmp_import_name_from_67);
        if (tmp_assign_source_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 82;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ThePlatformIE, tmp_assign_source_77);
    }
    {
        PyObject *tmp_assign_source_78;
        PyObject *tmp_import_name_from_68;
        PyObject *tmp_name_name_48;
        PyObject *tmp_globals_name_48;
        PyObject *tmp_locals_name_48;
        PyObject *tmp_fromlist_name_48;
        PyObject *tmp_level_name_48;
        tmp_name_name_48 = const_str_plain_kaltura;
        tmp_globals_name_48 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_48 = Py_None;
        tmp_fromlist_name_48 = const_tuple_str_plain_KalturaIE_tuple;
        tmp_level_name_48 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 83;
        tmp_import_name_from_68 = IMPORT_MODULE5(tmp_name_name_48, tmp_globals_name_48, tmp_locals_name_48, tmp_fromlist_name_48, tmp_level_name_48);
        if (tmp_import_name_from_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 83;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_68)) {
           tmp_assign_source_78 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_68,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_KalturaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_78 = IMPORT_NAME(tmp_import_name_from_68, const_str_plain_KalturaIE);
        }

        Py_DECREF(tmp_import_name_from_68);
        if (tmp_assign_source_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 83;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_KalturaIE, tmp_assign_source_78);
    }
    {
        PyObject *tmp_assign_source_79;
        PyObject *tmp_import_name_from_69;
        PyObject *tmp_name_name_49;
        PyObject *tmp_globals_name_49;
        PyObject *tmp_locals_name_49;
        PyObject *tmp_fromlist_name_49;
        PyObject *tmp_level_name_49;
        tmp_name_name_49 = const_str_plain_eagleplatform;
        tmp_globals_name_49 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_49 = Py_None;
        tmp_fromlist_name_49 = const_tuple_str_plain_EaglePlatformIE_tuple;
        tmp_level_name_49 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 84;
        tmp_import_name_from_69 = IMPORT_MODULE5(tmp_name_name_49, tmp_globals_name_49, tmp_locals_name_49, tmp_fromlist_name_49, tmp_level_name_49);
        if (tmp_import_name_from_69 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_69)) {
           tmp_assign_source_79 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_69,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_EaglePlatformIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_79 = IMPORT_NAME(tmp_import_name_from_69, const_str_plain_EaglePlatformIE);
        }

        Py_DECREF(tmp_import_name_from_69);
        if (tmp_assign_source_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_EaglePlatformIE, tmp_assign_source_79);
    }
    {
        PyObject *tmp_assign_source_80;
        PyObject *tmp_import_name_from_70;
        PyObject *tmp_name_name_50;
        PyObject *tmp_globals_name_50;
        PyObject *tmp_locals_name_50;
        PyObject *tmp_fromlist_name_50;
        PyObject *tmp_level_name_50;
        tmp_name_name_50 = const_str_plain_facebook;
        tmp_globals_name_50 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_50 = Py_None;
        tmp_fromlist_name_50 = const_tuple_str_plain_FacebookIE_tuple;
        tmp_level_name_50 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 85;
        tmp_import_name_from_70 = IMPORT_MODULE5(tmp_name_name_50, tmp_globals_name_50, tmp_locals_name_50, tmp_fromlist_name_50, tmp_level_name_50);
        if (tmp_import_name_from_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 85;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_70)) {
           tmp_assign_source_80 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_70,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_FacebookIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_80 = IMPORT_NAME(tmp_import_name_from_70, const_str_plain_FacebookIE);
        }

        Py_DECREF(tmp_import_name_from_70);
        if (tmp_assign_source_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 85;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_FacebookIE, tmp_assign_source_80);
    }
    {
        PyObject *tmp_assign_source_81;
        PyObject *tmp_import_name_from_71;
        PyObject *tmp_name_name_51;
        PyObject *tmp_globals_name_51;
        PyObject *tmp_locals_name_51;
        PyObject *tmp_fromlist_name_51;
        PyObject *tmp_level_name_51;
        tmp_name_name_51 = const_str_plain_soundcloud;
        tmp_globals_name_51 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_51 = Py_None;
        tmp_fromlist_name_51 = const_tuple_str_plain_SoundcloudEmbedIE_tuple;
        tmp_level_name_51 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 86;
        tmp_import_name_from_71 = IMPORT_MODULE5(tmp_name_name_51, tmp_globals_name_51, tmp_locals_name_51, tmp_fromlist_name_51, tmp_level_name_51);
        if (tmp_import_name_from_71 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 86;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_71)) {
           tmp_assign_source_81 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_71,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_SoundcloudEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_81 = IMPORT_NAME(tmp_import_name_from_71, const_str_plain_SoundcloudEmbedIE);
        }

        Py_DECREF(tmp_import_name_from_71);
        if (tmp_assign_source_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 86;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SoundcloudEmbedIE, tmp_assign_source_81);
    }
    {
        PyObject *tmp_assign_source_82;
        PyObject *tmp_import_name_from_72;
        PyObject *tmp_name_name_52;
        PyObject *tmp_globals_name_52;
        PyObject *tmp_locals_name_52;
        PyObject *tmp_fromlist_name_52;
        PyObject *tmp_level_name_52;
        tmp_name_name_52 = const_str_plain_tunein;
        tmp_globals_name_52 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_52 = Py_None;
        tmp_fromlist_name_52 = const_tuple_str_plain_TuneInBaseIE_tuple;
        tmp_level_name_52 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 87;
        tmp_import_name_from_72 = IMPORT_MODULE5(tmp_name_name_52, tmp_globals_name_52, tmp_locals_name_52, tmp_fromlist_name_52, tmp_level_name_52);
        if (tmp_import_name_from_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 87;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_72)) {
           tmp_assign_source_82 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_72,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_TuneInBaseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_82 = IMPORT_NAME(tmp_import_name_from_72, const_str_plain_TuneInBaseIE);
        }

        Py_DECREF(tmp_import_name_from_72);
        if (tmp_assign_source_82 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 87;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TuneInBaseIE, tmp_assign_source_82);
    }
    {
        PyObject *tmp_assign_source_83;
        PyObject *tmp_import_name_from_73;
        PyObject *tmp_name_name_53;
        PyObject *tmp_globals_name_53;
        PyObject *tmp_locals_name_53;
        PyObject *tmp_fromlist_name_53;
        PyObject *tmp_level_name_53;
        tmp_name_name_53 = const_str_plain_vbox7;
        tmp_globals_name_53 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_53 = Py_None;
        tmp_fromlist_name_53 = const_tuple_str_plain_Vbox7IE_tuple;
        tmp_level_name_53 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 88;
        tmp_import_name_from_73 = IMPORT_MODULE5(tmp_name_name_53, tmp_globals_name_53, tmp_locals_name_53, tmp_fromlist_name_53, tmp_level_name_53);
        if (tmp_import_name_from_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 88;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_73)) {
           tmp_assign_source_83 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_73,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_Vbox7IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_83 = IMPORT_NAME(tmp_import_name_from_73, const_str_plain_Vbox7IE);
        }

        Py_DECREF(tmp_import_name_from_73);
        if (tmp_assign_source_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 88;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_Vbox7IE, tmp_assign_source_83);
    }
    {
        PyObject *tmp_assign_source_84;
        PyObject *tmp_import_name_from_74;
        PyObject *tmp_name_name_54;
        PyObject *tmp_globals_name_54;
        PyObject *tmp_locals_name_54;
        PyObject *tmp_fromlist_name_54;
        PyObject *tmp_level_name_54;
        tmp_name_name_54 = const_str_plain_dbtv;
        tmp_globals_name_54 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_54 = Py_None;
        tmp_fromlist_name_54 = const_tuple_str_plain_DBTVIE_tuple;
        tmp_level_name_54 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 89;
        tmp_import_name_from_74 = IMPORT_MODULE5(tmp_name_name_54, tmp_globals_name_54, tmp_locals_name_54, tmp_fromlist_name_54, tmp_level_name_54);
        if (tmp_import_name_from_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 89;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_74)) {
           tmp_assign_source_84 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_74,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_DBTVIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_84 = IMPORT_NAME(tmp_import_name_from_74, const_str_plain_DBTVIE);
        }

        Py_DECREF(tmp_import_name_from_74);
        if (tmp_assign_source_84 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 89;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_DBTVIE, tmp_assign_source_84);
    }
    {
        PyObject *tmp_assign_source_85;
        PyObject *tmp_import_name_from_75;
        PyObject *tmp_name_name_55;
        PyObject *tmp_globals_name_55;
        PyObject *tmp_locals_name_55;
        PyObject *tmp_fromlist_name_55;
        PyObject *tmp_level_name_55;
        tmp_name_name_55 = const_str_plain_piksel;
        tmp_globals_name_55 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_55 = Py_None;
        tmp_fromlist_name_55 = const_tuple_str_plain_PikselIE_tuple;
        tmp_level_name_55 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 90;
        tmp_import_name_from_75 = IMPORT_MODULE5(tmp_name_name_55, tmp_globals_name_55, tmp_locals_name_55, tmp_fromlist_name_55, tmp_level_name_55);
        if (tmp_import_name_from_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 90;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_75)) {
           tmp_assign_source_85 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_75,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_PikselIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_85 = IMPORT_NAME(tmp_import_name_from_75, const_str_plain_PikselIE);
        }

        Py_DECREF(tmp_import_name_from_75);
        if (tmp_assign_source_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 90;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_PikselIE, tmp_assign_source_85);
    }
    {
        PyObject *tmp_assign_source_86;
        PyObject *tmp_import_name_from_76;
        PyObject *tmp_name_name_56;
        PyObject *tmp_globals_name_56;
        PyObject *tmp_locals_name_56;
        PyObject *tmp_fromlist_name_56;
        PyObject *tmp_level_name_56;
        tmp_name_name_56 = const_str_plain_videa;
        tmp_globals_name_56 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_56 = Py_None;
        tmp_fromlist_name_56 = const_tuple_str_plain_VideaIE_tuple;
        tmp_level_name_56 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 91;
        tmp_import_name_from_76 = IMPORT_MODULE5(tmp_name_name_56, tmp_globals_name_56, tmp_locals_name_56, tmp_fromlist_name_56, tmp_level_name_56);
        if (tmp_import_name_from_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 91;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_76)) {
           tmp_assign_source_86 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_76,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_VideaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_86 = IMPORT_NAME(tmp_import_name_from_76, const_str_plain_VideaIE);
        }

        Py_DECREF(tmp_import_name_from_76);
        if (tmp_assign_source_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 91;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VideaIE, tmp_assign_source_86);
    }
    {
        PyObject *tmp_assign_source_87;
        PyObject *tmp_import_name_from_77;
        PyObject *tmp_name_name_57;
        PyObject *tmp_globals_name_57;
        PyObject *tmp_locals_name_57;
        PyObject *tmp_fromlist_name_57;
        PyObject *tmp_level_name_57;
        tmp_name_name_57 = const_str_plain_twentymin;
        tmp_globals_name_57 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_57 = Py_None;
        tmp_fromlist_name_57 = const_tuple_str_plain_TwentyMinutenIE_tuple;
        tmp_level_name_57 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 92;
        tmp_import_name_from_77 = IMPORT_MODULE5(tmp_name_name_57, tmp_globals_name_57, tmp_locals_name_57, tmp_fromlist_name_57, tmp_level_name_57);
        if (tmp_import_name_from_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 92;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_77)) {
           tmp_assign_source_87 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_77,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_TwentyMinutenIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_87 = IMPORT_NAME(tmp_import_name_from_77, const_str_plain_TwentyMinutenIE);
        }

        Py_DECREF(tmp_import_name_from_77);
        if (tmp_assign_source_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 92;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TwentyMinutenIE, tmp_assign_source_87);
    }
    {
        PyObject *tmp_assign_source_88;
        PyObject *tmp_import_name_from_78;
        PyObject *tmp_name_name_58;
        PyObject *tmp_globals_name_58;
        PyObject *tmp_locals_name_58;
        PyObject *tmp_fromlist_name_58;
        PyObject *tmp_level_name_58;
        tmp_name_name_58 = const_str_plain_ustream;
        tmp_globals_name_58 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_58 = Py_None;
        tmp_fromlist_name_58 = const_tuple_str_plain_UstreamIE_tuple;
        tmp_level_name_58 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 93;
        tmp_import_name_from_78 = IMPORT_MODULE5(tmp_name_name_58, tmp_globals_name_58, tmp_locals_name_58, tmp_fromlist_name_58, tmp_level_name_58);
        if (tmp_import_name_from_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 93;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_78)) {
           tmp_assign_source_88 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_78,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_UstreamIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_88 = IMPORT_NAME(tmp_import_name_from_78, const_str_plain_UstreamIE);
        }

        Py_DECREF(tmp_import_name_from_78);
        if (tmp_assign_source_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 93;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_UstreamIE, tmp_assign_source_88);
    }
    {
        PyObject *tmp_assign_source_89;
        PyObject *tmp_import_name_from_79;
        PyObject *tmp_name_name_59;
        PyObject *tmp_globals_name_59;
        PyObject *tmp_locals_name_59;
        PyObject *tmp_fromlist_name_59;
        PyObject *tmp_level_name_59;
        tmp_name_name_59 = const_str_plain_videopress;
        tmp_globals_name_59 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_59 = Py_None;
        tmp_fromlist_name_59 = const_tuple_str_plain_VideoPressIE_tuple;
        tmp_level_name_59 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 94;
        tmp_import_name_from_79 = IMPORT_MODULE5(tmp_name_name_59, tmp_globals_name_59, tmp_locals_name_59, tmp_fromlist_name_59, tmp_level_name_59);
        if (tmp_import_name_from_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 94;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_79)) {
           tmp_assign_source_89 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_79,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_VideoPressIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_89 = IMPORT_NAME(tmp_import_name_from_79, const_str_plain_VideoPressIE);
        }

        Py_DECREF(tmp_import_name_from_79);
        if (tmp_assign_source_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 94;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VideoPressIE, tmp_assign_source_89);
    }
    {
        PyObject *tmp_assign_source_90;
        PyObject *tmp_import_name_from_80;
        PyObject *tmp_name_name_60;
        PyObject *tmp_globals_name_60;
        PyObject *tmp_locals_name_60;
        PyObject *tmp_fromlist_name_60;
        PyObject *tmp_level_name_60;
        tmp_name_name_60 = const_str_plain_rutube;
        tmp_globals_name_60 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_60 = Py_None;
        tmp_fromlist_name_60 = const_tuple_str_plain_RutubeIE_tuple;
        tmp_level_name_60 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 95;
        tmp_import_name_from_80 = IMPORT_MODULE5(tmp_name_name_60, tmp_globals_name_60, tmp_locals_name_60, tmp_fromlist_name_60, tmp_level_name_60);
        if (tmp_import_name_from_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 95;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_80)) {
           tmp_assign_source_90 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_80,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_RutubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_90 = IMPORT_NAME(tmp_import_name_from_80, const_str_plain_RutubeIE);
        }

        Py_DECREF(tmp_import_name_from_80);
        if (tmp_assign_source_90 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 95;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RutubeIE, tmp_assign_source_90);
    }
    {
        PyObject *tmp_assign_source_91;
        PyObject *tmp_import_name_from_81;
        PyObject *tmp_name_name_61;
        PyObject *tmp_globals_name_61;
        PyObject *tmp_locals_name_61;
        PyObject *tmp_fromlist_name_61;
        PyObject *tmp_level_name_61;
        tmp_name_name_61 = const_str_plain_limelight;
        tmp_globals_name_61 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_61 = Py_None;
        tmp_fromlist_name_61 = const_tuple_str_plain_LimelightBaseIE_tuple;
        tmp_level_name_61 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 96;
        tmp_import_name_from_81 = IMPORT_MODULE5(tmp_name_name_61, tmp_globals_name_61, tmp_locals_name_61, tmp_fromlist_name_61, tmp_level_name_61);
        if (tmp_import_name_from_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_81)) {
           tmp_assign_source_91 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_81,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_LimelightBaseIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_91 = IMPORT_NAME(tmp_import_name_from_81, const_str_plain_LimelightBaseIE);
        }

        Py_DECREF(tmp_import_name_from_81);
        if (tmp_assign_source_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_LimelightBaseIE, tmp_assign_source_91);
    }
    {
        PyObject *tmp_assign_source_92;
        PyObject *tmp_import_name_from_82;
        PyObject *tmp_name_name_62;
        PyObject *tmp_globals_name_62;
        PyObject *tmp_locals_name_62;
        PyObject *tmp_fromlist_name_62;
        PyObject *tmp_level_name_62;
        tmp_name_name_62 = const_str_plain_anvato;
        tmp_globals_name_62 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_62 = Py_None;
        tmp_fromlist_name_62 = const_tuple_str_plain_AnvatoIE_tuple;
        tmp_level_name_62 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 97;
        tmp_import_name_from_82 = IMPORT_MODULE5(tmp_name_name_62, tmp_globals_name_62, tmp_locals_name_62, tmp_fromlist_name_62, tmp_level_name_62);
        if (tmp_import_name_from_82 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 97;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_82)) {
           tmp_assign_source_92 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_82,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_AnvatoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_92 = IMPORT_NAME(tmp_import_name_from_82, const_str_plain_AnvatoIE);
        }

        Py_DECREF(tmp_import_name_from_82);
        if (tmp_assign_source_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 97;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_AnvatoIE, tmp_assign_source_92);
    }
    {
        PyObject *tmp_assign_source_93;
        PyObject *tmp_import_name_from_83;
        PyObject *tmp_name_name_63;
        PyObject *tmp_globals_name_63;
        PyObject *tmp_locals_name_63;
        PyObject *tmp_fromlist_name_63;
        PyObject *tmp_level_name_63;
        tmp_name_name_63 = const_str_plain_washingtonpost;
        tmp_globals_name_63 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_63 = Py_None;
        tmp_fromlist_name_63 = const_tuple_str_plain_WashingtonPostIE_tuple;
        tmp_level_name_63 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 98;
        tmp_import_name_from_83 = IMPORT_MODULE5(tmp_name_name_63, tmp_globals_name_63, tmp_locals_name_63, tmp_fromlist_name_63, tmp_level_name_63);
        if (tmp_import_name_from_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 98;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_83)) {
           tmp_assign_source_93 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_83,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_WashingtonPostIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_93 = IMPORT_NAME(tmp_import_name_from_83, const_str_plain_WashingtonPostIE);
        }

        Py_DECREF(tmp_import_name_from_83);
        if (tmp_assign_source_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 98;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_WashingtonPostIE, tmp_assign_source_93);
    }
    {
        PyObject *tmp_assign_source_94;
        PyObject *tmp_import_name_from_84;
        PyObject *tmp_name_name_64;
        PyObject *tmp_globals_name_64;
        PyObject *tmp_locals_name_64;
        PyObject *tmp_fromlist_name_64;
        PyObject *tmp_level_name_64;
        tmp_name_name_64 = const_str_plain_wistia;
        tmp_globals_name_64 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_64 = Py_None;
        tmp_fromlist_name_64 = const_tuple_str_plain_WistiaIE_tuple;
        tmp_level_name_64 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 99;
        tmp_import_name_from_84 = IMPORT_MODULE5(tmp_name_name_64, tmp_globals_name_64, tmp_locals_name_64, tmp_fromlist_name_64, tmp_level_name_64);
        if (tmp_import_name_from_84 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 99;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_84)) {
           tmp_assign_source_94 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_84,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_WistiaIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_94 = IMPORT_NAME(tmp_import_name_from_84, const_str_plain_WistiaIE);
        }

        Py_DECREF(tmp_import_name_from_84);
        if (tmp_assign_source_94 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 99;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_WistiaIE, tmp_assign_source_94);
    }
    {
        PyObject *tmp_assign_source_95;
        PyObject *tmp_import_name_from_85;
        PyObject *tmp_name_name_65;
        PyObject *tmp_globals_name_65;
        PyObject *tmp_locals_name_65;
        PyObject *tmp_fromlist_name_65;
        PyObject *tmp_level_name_65;
        tmp_name_name_65 = const_str_plain_mediaset;
        tmp_globals_name_65 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_65 = Py_None;
        tmp_fromlist_name_65 = const_tuple_str_plain_MediasetIE_tuple;
        tmp_level_name_65 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 100;
        tmp_import_name_from_85 = IMPORT_MODULE5(tmp_name_name_65, tmp_globals_name_65, tmp_locals_name_65, tmp_fromlist_name_65, tmp_level_name_65);
        if (tmp_import_name_from_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 100;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_85)) {
           tmp_assign_source_95 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_85,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_MediasetIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_95 = IMPORT_NAME(tmp_import_name_from_85, const_str_plain_MediasetIE);
        }

        Py_DECREF(tmp_import_name_from_85);
        if (tmp_assign_source_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 100;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MediasetIE, tmp_assign_source_95);
    }
    {
        PyObject *tmp_assign_source_96;
        PyObject *tmp_import_name_from_86;
        PyObject *tmp_name_name_66;
        PyObject *tmp_globals_name_66;
        PyObject *tmp_locals_name_66;
        PyObject *tmp_fromlist_name_66;
        PyObject *tmp_level_name_66;
        tmp_name_name_66 = const_str_plain_joj;
        tmp_globals_name_66 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_66 = Py_None;
        tmp_fromlist_name_66 = const_tuple_str_plain_JojIE_tuple;
        tmp_level_name_66 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 101;
        tmp_import_name_from_86 = IMPORT_MODULE5(tmp_name_name_66, tmp_globals_name_66, tmp_locals_name_66, tmp_fromlist_name_66, tmp_level_name_66);
        if (tmp_import_name_from_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 101;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_86)) {
           tmp_assign_source_96 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_86,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_JojIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_96 = IMPORT_NAME(tmp_import_name_from_86, const_str_plain_JojIE);
        }

        Py_DECREF(tmp_import_name_from_86);
        if (tmp_assign_source_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 101;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_JojIE, tmp_assign_source_96);
    }
    {
        PyObject *tmp_assign_source_97;
        PyObject *tmp_import_name_from_87;
        PyObject *tmp_name_name_67;
        PyObject *tmp_globals_name_67;
        PyObject *tmp_locals_name_67;
        PyObject *tmp_fromlist_name_67;
        PyObject *tmp_level_name_67;
        tmp_name_name_67 = const_str_plain_megaphone;
        tmp_globals_name_67 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_67 = Py_None;
        tmp_fromlist_name_67 = const_tuple_str_plain_MegaphoneIE_tuple;
        tmp_level_name_67 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 102;
        tmp_import_name_from_87 = IMPORT_MODULE5(tmp_name_name_67, tmp_globals_name_67, tmp_locals_name_67, tmp_fromlist_name_67, tmp_level_name_67);
        if (tmp_import_name_from_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 102;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_87)) {
           tmp_assign_source_97 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_87,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_MegaphoneIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_97 = IMPORT_NAME(tmp_import_name_from_87, const_str_plain_MegaphoneIE);
        }

        Py_DECREF(tmp_import_name_from_87);
        if (tmp_assign_source_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 102;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MegaphoneIE, tmp_assign_source_97);
    }
    {
        PyObject *tmp_assign_source_98;
        PyObject *tmp_import_name_from_88;
        PyObject *tmp_name_name_68;
        PyObject *tmp_globals_name_68;
        PyObject *tmp_locals_name_68;
        PyObject *tmp_fromlist_name_68;
        PyObject *tmp_level_name_68;
        tmp_name_name_68 = const_str_plain_vzaar;
        tmp_globals_name_68 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_68 = Py_None;
        tmp_fromlist_name_68 = const_tuple_str_plain_VzaarIE_tuple;
        tmp_level_name_68 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 103;
        tmp_import_name_from_88 = IMPORT_MODULE5(tmp_name_name_68, tmp_globals_name_68, tmp_locals_name_68, tmp_fromlist_name_68, tmp_level_name_68);
        if (tmp_import_name_from_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 103;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_88)) {
           tmp_assign_source_98 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_88,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_VzaarIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_98 = IMPORT_NAME(tmp_import_name_from_88, const_str_plain_VzaarIE);
        }

        Py_DECREF(tmp_import_name_from_88);
        if (tmp_assign_source_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 103;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VzaarIE, tmp_assign_source_98);
    }
    {
        PyObject *tmp_assign_source_99;
        PyObject *tmp_import_name_from_89;
        PyObject *tmp_name_name_69;
        PyObject *tmp_globals_name_69;
        PyObject *tmp_locals_name_69;
        PyObject *tmp_fromlist_name_69;
        PyObject *tmp_level_name_69;
        tmp_name_name_69 = const_str_plain_channel9;
        tmp_globals_name_69 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_69 = Py_None;
        tmp_fromlist_name_69 = const_tuple_str_plain_Channel9IE_tuple;
        tmp_level_name_69 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 104;
        tmp_import_name_from_89 = IMPORT_MODULE5(tmp_name_name_69, tmp_globals_name_69, tmp_locals_name_69, tmp_fromlist_name_69, tmp_level_name_69);
        if (tmp_import_name_from_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 104;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_89)) {
           tmp_assign_source_99 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_89,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_Channel9IE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_99 = IMPORT_NAME(tmp_import_name_from_89, const_str_plain_Channel9IE);
        }

        Py_DECREF(tmp_import_name_from_89);
        if (tmp_assign_source_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 104;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_Channel9IE, tmp_assign_source_99);
    }
    {
        PyObject *tmp_assign_source_100;
        PyObject *tmp_import_name_from_90;
        PyObject *tmp_name_name_70;
        PyObject *tmp_globals_name_70;
        PyObject *tmp_locals_name_70;
        PyObject *tmp_fromlist_name_70;
        PyObject *tmp_level_name_70;
        tmp_name_name_70 = const_str_plain_vshare;
        tmp_globals_name_70 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_70 = Py_None;
        tmp_fromlist_name_70 = const_tuple_str_plain_VShareIE_tuple;
        tmp_level_name_70 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 105;
        tmp_import_name_from_90 = IMPORT_MODULE5(tmp_name_name_70, tmp_globals_name_70, tmp_locals_name_70, tmp_fromlist_name_70, tmp_level_name_70);
        if (tmp_import_name_from_90 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 105;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_90)) {
           tmp_assign_source_100 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_90,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_VShareIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_100 = IMPORT_NAME(tmp_import_name_from_90, const_str_plain_VShareIE);
        }

        Py_DECREF(tmp_import_name_from_90);
        if (tmp_assign_source_100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 105;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VShareIE, tmp_assign_source_100);
    }
    {
        PyObject *tmp_assign_source_101;
        PyObject *tmp_import_name_from_91;
        PyObject *tmp_name_name_71;
        PyObject *tmp_globals_name_71;
        PyObject *tmp_locals_name_71;
        PyObject *tmp_fromlist_name_71;
        PyObject *tmp_level_name_71;
        tmp_name_name_71 = const_str_plain_mediasite;
        tmp_globals_name_71 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_71 = Py_None;
        tmp_fromlist_name_71 = const_tuple_str_plain_MediasiteIE_tuple;
        tmp_level_name_71 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 106;
        tmp_import_name_from_91 = IMPORT_MODULE5(tmp_name_name_71, tmp_globals_name_71, tmp_locals_name_71, tmp_fromlist_name_71, tmp_level_name_71);
        if (tmp_import_name_from_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 106;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_91)) {
           tmp_assign_source_101 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_91,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_MediasiteIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_101 = IMPORT_NAME(tmp_import_name_from_91, const_str_plain_MediasiteIE);
        }

        Py_DECREF(tmp_import_name_from_91);
        if (tmp_assign_source_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 106;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MediasiteIE, tmp_assign_source_101);
    }
    {
        PyObject *tmp_assign_source_102;
        PyObject *tmp_import_name_from_92;
        PyObject *tmp_name_name_72;
        PyObject *tmp_globals_name_72;
        PyObject *tmp_locals_name_72;
        PyObject *tmp_fromlist_name_72;
        PyObject *tmp_level_name_72;
        tmp_name_name_72 = const_str_plain_springboardplatform;
        tmp_globals_name_72 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_72 = Py_None;
        tmp_fromlist_name_72 = const_tuple_str_plain_SpringboardPlatformIE_tuple;
        tmp_level_name_72 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 107;
        tmp_import_name_from_92 = IMPORT_MODULE5(tmp_name_name_72, tmp_globals_name_72, tmp_locals_name_72, tmp_fromlist_name_72, tmp_level_name_72);
        if (tmp_import_name_from_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 107;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_92)) {
           tmp_assign_source_102 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_92,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_SpringboardPlatformIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_102 = IMPORT_NAME(tmp_import_name_from_92, const_str_plain_SpringboardPlatformIE);
        }

        Py_DECREF(tmp_import_name_from_92);
        if (tmp_assign_source_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 107;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SpringboardPlatformIE, tmp_assign_source_102);
    }
    {
        PyObject *tmp_assign_source_103;
        PyObject *tmp_import_name_from_93;
        PyObject *tmp_name_name_73;
        PyObject *tmp_globals_name_73;
        PyObject *tmp_locals_name_73;
        PyObject *tmp_fromlist_name_73;
        PyObject *tmp_level_name_73;
        tmp_name_name_73 = const_str_plain_yapfiles;
        tmp_globals_name_73 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_73 = Py_None;
        tmp_fromlist_name_73 = const_tuple_str_plain_YapFilesIE_tuple;
        tmp_level_name_73 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 108;
        tmp_import_name_from_93 = IMPORT_MODULE5(tmp_name_name_73, tmp_globals_name_73, tmp_locals_name_73, tmp_fromlist_name_73, tmp_level_name_73);
        if (tmp_import_name_from_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_93)) {
           tmp_assign_source_103 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_93,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_YapFilesIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_103 = IMPORT_NAME(tmp_import_name_from_93, const_str_plain_YapFilesIE);
        }

        Py_DECREF(tmp_import_name_from_93);
        if (tmp_assign_source_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YapFilesIE, tmp_assign_source_103);
    }
    {
        PyObject *tmp_assign_source_104;
        PyObject *tmp_import_name_from_94;
        PyObject *tmp_name_name_74;
        PyObject *tmp_globals_name_74;
        PyObject *tmp_locals_name_74;
        PyObject *tmp_fromlist_name_74;
        PyObject *tmp_level_name_74;
        tmp_name_name_74 = const_str_plain_vice;
        tmp_globals_name_74 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_74 = Py_None;
        tmp_fromlist_name_74 = const_tuple_str_plain_ViceIE_tuple;
        tmp_level_name_74 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 109;
        tmp_import_name_from_94 = IMPORT_MODULE5(tmp_name_name_74, tmp_globals_name_74, tmp_locals_name_74, tmp_fromlist_name_74, tmp_level_name_74);
        if (tmp_import_name_from_94 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 109;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_94)) {
           tmp_assign_source_104 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_94,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_ViceIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_104 = IMPORT_NAME(tmp_import_name_from_94, const_str_plain_ViceIE);
        }

        Py_DECREF(tmp_import_name_from_94);
        if (tmp_assign_source_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 109;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ViceIE, tmp_assign_source_104);
    }
    {
        PyObject *tmp_assign_source_105;
        PyObject *tmp_import_name_from_95;
        PyObject *tmp_name_name_75;
        PyObject *tmp_globals_name_75;
        PyObject *tmp_locals_name_75;
        PyObject *tmp_fromlist_name_75;
        PyObject *tmp_level_name_75;
        tmp_name_name_75 = const_str_plain_xfileshare;
        tmp_globals_name_75 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_75 = Py_None;
        tmp_fromlist_name_75 = const_tuple_str_plain_XFileShareIE_tuple;
        tmp_level_name_75 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 110;
        tmp_import_name_from_95 = IMPORT_MODULE5(tmp_name_name_75, tmp_globals_name_75, tmp_locals_name_75, tmp_fromlist_name_75, tmp_level_name_75);
        if (tmp_import_name_from_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 110;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_95)) {
           tmp_assign_source_105 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_95,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_XFileShareIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_105 = IMPORT_NAME(tmp_import_name_from_95, const_str_plain_XFileShareIE);
        }

        Py_DECREF(tmp_import_name_from_95);
        if (tmp_assign_source_105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 110;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_XFileShareIE, tmp_assign_source_105);
    }
    {
        PyObject *tmp_assign_source_106;
        PyObject *tmp_import_name_from_96;
        PyObject *tmp_name_name_76;
        PyObject *tmp_globals_name_76;
        PyObject *tmp_locals_name_76;
        PyObject *tmp_fromlist_name_76;
        PyObject *tmp_level_name_76;
        tmp_name_name_76 = const_str_plain_cloudflarestream;
        tmp_globals_name_76 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_76 = Py_None;
        tmp_fromlist_name_76 = const_tuple_str_plain_CloudflareStreamIE_tuple;
        tmp_level_name_76 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 111;
        tmp_import_name_from_96 = IMPORT_MODULE5(tmp_name_name_76, tmp_globals_name_76, tmp_locals_name_76, tmp_fromlist_name_76, tmp_level_name_76);
        if (tmp_import_name_from_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 111;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_96)) {
           tmp_assign_source_106 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_96,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_CloudflareStreamIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_106 = IMPORT_NAME(tmp_import_name_from_96, const_str_plain_CloudflareStreamIE);
        }

        Py_DECREF(tmp_import_name_from_96);
        if (tmp_assign_source_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 111;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_CloudflareStreamIE, tmp_assign_source_106);
    }
    {
        PyObject *tmp_assign_source_107;
        PyObject *tmp_import_name_from_97;
        PyObject *tmp_name_name_77;
        PyObject *tmp_globals_name_77;
        PyObject *tmp_locals_name_77;
        PyObject *tmp_fromlist_name_77;
        PyObject *tmp_level_name_77;
        tmp_name_name_77 = const_str_plain_peertube;
        tmp_globals_name_77 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_77 = Py_None;
        tmp_fromlist_name_77 = const_tuple_str_plain_PeerTubeIE_tuple;
        tmp_level_name_77 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 112;
        tmp_import_name_from_97 = IMPORT_MODULE5(tmp_name_name_77, tmp_globals_name_77, tmp_locals_name_77, tmp_fromlist_name_77, tmp_level_name_77);
        if (tmp_import_name_from_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 112;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_97)) {
           tmp_assign_source_107 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_97,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_PeerTubeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_107 = IMPORT_NAME(tmp_import_name_from_97, const_str_plain_PeerTubeIE);
        }

        Py_DECREF(tmp_import_name_from_97);
        if (tmp_assign_source_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 112;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_PeerTubeIE, tmp_assign_source_107);
    }
    {
        PyObject *tmp_assign_source_108;
        PyObject *tmp_import_name_from_98;
        PyObject *tmp_name_name_78;
        PyObject *tmp_globals_name_78;
        PyObject *tmp_locals_name_78;
        PyObject *tmp_fromlist_name_78;
        PyObject *tmp_level_name_78;
        tmp_name_name_78 = const_str_plain_teachable;
        tmp_globals_name_78 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_78 = Py_None;
        tmp_fromlist_name_78 = const_tuple_str_plain_TeachableIE_tuple;
        tmp_level_name_78 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 113;
        tmp_import_name_from_98 = IMPORT_MODULE5(tmp_name_name_78, tmp_globals_name_78, tmp_locals_name_78, tmp_fromlist_name_78, tmp_level_name_78);
        if (tmp_import_name_from_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 113;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_98)) {
           tmp_assign_source_108 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_98,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_TeachableIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_108 = IMPORT_NAME(tmp_import_name_from_98, const_str_plain_TeachableIE);
        }

        Py_DECREF(tmp_import_name_from_98);
        if (tmp_assign_source_108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 113;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TeachableIE, tmp_assign_source_108);
    }
    {
        PyObject *tmp_assign_source_109;
        PyObject *tmp_import_name_from_99;
        PyObject *tmp_name_name_79;
        PyObject *tmp_globals_name_79;
        PyObject *tmp_locals_name_79;
        PyObject *tmp_fromlist_name_79;
        PyObject *tmp_level_name_79;
        tmp_name_name_79 = const_str_plain_indavideo;
        tmp_globals_name_79 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_79 = Py_None;
        tmp_fromlist_name_79 = const_tuple_str_plain_IndavideoEmbedIE_tuple;
        tmp_level_name_79 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 114;
        tmp_import_name_from_99 = IMPORT_MODULE5(tmp_name_name_79, tmp_globals_name_79, tmp_locals_name_79, tmp_fromlist_name_79, tmp_level_name_79);
        if (tmp_import_name_from_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 114;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_99)) {
           tmp_assign_source_109 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_99,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_IndavideoEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_109 = IMPORT_NAME(tmp_import_name_from_99, const_str_plain_IndavideoEmbedIE);
        }

        Py_DECREF(tmp_import_name_from_99);
        if (tmp_assign_source_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 114;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_IndavideoEmbedIE, tmp_assign_source_109);
    }
    {
        PyObject *tmp_assign_source_110;
        PyObject *tmp_import_name_from_100;
        PyObject *tmp_name_name_80;
        PyObject *tmp_globals_name_80;
        PyObject *tmp_locals_name_80;
        PyObject *tmp_fromlist_name_80;
        PyObject *tmp_level_name_80;
        tmp_name_name_80 = const_str_plain_apa;
        tmp_globals_name_80 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_80 = Py_None;
        tmp_fromlist_name_80 = const_tuple_str_plain_APAIE_tuple;
        tmp_level_name_80 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 115;
        tmp_import_name_from_100 = IMPORT_MODULE5(tmp_name_name_80, tmp_globals_name_80, tmp_locals_name_80, tmp_fromlist_name_80, tmp_level_name_80);
        if (tmp_import_name_from_100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 115;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_100)) {
           tmp_assign_source_110 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_100,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_APAIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_110 = IMPORT_NAME(tmp_import_name_from_100, const_str_plain_APAIE);
        }

        Py_DECREF(tmp_import_name_from_100);
        if (tmp_assign_source_110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 115;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_APAIE, tmp_assign_source_110);
    }
    {
        PyObject *tmp_assign_source_111;
        PyObject *tmp_import_name_from_101;
        PyObject *tmp_name_name_81;
        PyObject *tmp_globals_name_81;
        PyObject *tmp_locals_name_81;
        PyObject *tmp_fromlist_name_81;
        PyObject *tmp_level_name_81;
        tmp_name_name_81 = const_str_plain_foxnews;
        tmp_globals_name_81 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_81 = Py_None;
        tmp_fromlist_name_81 = const_tuple_str_plain_FoxNewsIE_tuple;
        tmp_level_name_81 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 116;
        tmp_import_name_from_101 = IMPORT_MODULE5(tmp_name_name_81, tmp_globals_name_81, tmp_locals_name_81, tmp_fromlist_name_81, tmp_level_name_81);
        if (tmp_import_name_from_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 116;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_101)) {
           tmp_assign_source_111 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_101,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_FoxNewsIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_111 = IMPORT_NAME(tmp_import_name_from_101, const_str_plain_FoxNewsIE);
        }

        Py_DECREF(tmp_import_name_from_101);
        if (tmp_assign_source_111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 116;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_FoxNewsIE, tmp_assign_source_111);
    }
    {
        PyObject *tmp_assign_source_112;
        PyObject *tmp_import_name_from_102;
        PyObject *tmp_name_name_82;
        PyObject *tmp_globals_name_82;
        PyObject *tmp_locals_name_82;
        PyObject *tmp_fromlist_name_82;
        PyObject *tmp_level_name_82;
        tmp_name_name_82 = const_str_plain_viqeo;
        tmp_globals_name_82 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_82 = Py_None;
        tmp_fromlist_name_82 = const_tuple_str_plain_ViqeoIE_tuple;
        tmp_level_name_82 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 117;
        tmp_import_name_from_102 = IMPORT_MODULE5(tmp_name_name_82, tmp_globals_name_82, tmp_locals_name_82, tmp_fromlist_name_82, tmp_level_name_82);
        if (tmp_import_name_from_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 117;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_102)) {
           tmp_assign_source_112 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_102,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_ViqeoIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_112 = IMPORT_NAME(tmp_import_name_from_102, const_str_plain_ViqeoIE);
        }

        Py_DECREF(tmp_import_name_from_102);
        if (tmp_assign_source_112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 117;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ViqeoIE, tmp_assign_source_112);
    }
    {
        PyObject *tmp_assign_source_113;
        PyObject *tmp_import_name_from_103;
        PyObject *tmp_name_name_83;
        PyObject *tmp_globals_name_83;
        PyObject *tmp_locals_name_83;
        PyObject *tmp_fromlist_name_83;
        PyObject *tmp_level_name_83;
        tmp_name_name_83 = const_str_plain_expressen;
        tmp_globals_name_83 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_83 = Py_None;
        tmp_fromlist_name_83 = const_tuple_str_plain_ExpressenIE_tuple;
        tmp_level_name_83 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 118;
        tmp_import_name_from_103 = IMPORT_MODULE5(tmp_name_name_83, tmp_globals_name_83, tmp_locals_name_83, tmp_fromlist_name_83, tmp_level_name_83);
        if (tmp_import_name_from_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 118;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_103)) {
           tmp_assign_source_113 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_103,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_ExpressenIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_113 = IMPORT_NAME(tmp_import_name_from_103, const_str_plain_ExpressenIE);
        }

        Py_DECREF(tmp_import_name_from_103);
        if (tmp_assign_source_113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 118;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ExpressenIE, tmp_assign_source_113);
    }
    {
        PyObject *tmp_assign_source_114;
        PyObject *tmp_import_name_from_104;
        PyObject *tmp_name_name_84;
        PyObject *tmp_globals_name_84;
        PyObject *tmp_locals_name_84;
        PyObject *tmp_fromlist_name_84;
        PyObject *tmp_level_name_84;
        tmp_name_name_84 = const_str_plain_zype;
        tmp_globals_name_84 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_84 = Py_None;
        tmp_fromlist_name_84 = const_tuple_str_plain_ZypeIE_tuple;
        tmp_level_name_84 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 119;
        tmp_import_name_from_104 = IMPORT_MODULE5(tmp_name_name_84, tmp_globals_name_84, tmp_locals_name_84, tmp_fromlist_name_84, tmp_level_name_84);
        if (tmp_import_name_from_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 119;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_104)) {
           tmp_assign_source_114 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_104,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_ZypeIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_114 = IMPORT_NAME(tmp_import_name_from_104, const_str_plain_ZypeIE);
        }

        Py_DECREF(tmp_import_name_from_104);
        if (tmp_assign_source_114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 119;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ZypeIE, tmp_assign_source_114);
    }
    {
        PyObject *tmp_assign_source_115;
        PyObject *tmp_import_name_from_105;
        PyObject *tmp_name_name_85;
        PyObject *tmp_globals_name_85;
        PyObject *tmp_locals_name_85;
        PyObject *tmp_fromlist_name_85;
        PyObject *tmp_level_name_85;
        tmp_name_name_85 = const_str_plain_odnoklassniki;
        tmp_globals_name_85 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_85 = Py_None;
        tmp_fromlist_name_85 = const_tuple_str_plain_OdnoklassnikiIE_tuple;
        tmp_level_name_85 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 120;
        tmp_import_name_from_105 = IMPORT_MODULE5(tmp_name_name_85, tmp_globals_name_85, tmp_locals_name_85, tmp_fromlist_name_85, tmp_level_name_85);
        if (tmp_import_name_from_105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 120;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_105)) {
           tmp_assign_source_115 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_105,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_OdnoklassnikiIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_115 = IMPORT_NAME(tmp_import_name_from_105, const_str_plain_OdnoklassnikiIE);
        }

        Py_DECREF(tmp_import_name_from_105);
        if (tmp_assign_source_115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 120;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_OdnoklassnikiIE, tmp_assign_source_115);
    }
    {
        PyObject *tmp_assign_source_116;
        PyObject *tmp_import_name_from_106;
        PyObject *tmp_name_name_86;
        PyObject *tmp_globals_name_86;
        PyObject *tmp_locals_name_86;
        PyObject *tmp_fromlist_name_86;
        PyObject *tmp_level_name_86;
        tmp_name_name_86 = const_str_plain_kinja;
        tmp_globals_name_86 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_name_86 = Py_None;
        tmp_fromlist_name_86 = const_tuple_str_plain_KinjaEmbedIE_tuple;
        tmp_level_name_86 = const_int_pos_1;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 121;
        tmp_import_name_from_106 = IMPORT_MODULE5(tmp_name_name_86, tmp_globals_name_86, tmp_locals_name_86, tmp_fromlist_name_86, tmp_level_name_86);
        if (tmp_import_name_from_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 121;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_106)) {
           tmp_assign_source_116 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_106,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                const_str_plain_KinjaEmbedIE,
                const_int_pos_1
            );
        } else {
           tmp_assign_source_116 = IMPORT_NAME(tmp_import_name_from_106, const_str_plain_KinjaEmbedIE);
        }

        Py_DECREF(tmp_import_name_from_106);
        if (tmp_assign_source_116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 121;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_KinjaEmbedIE, tmp_assign_source_116);
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_117;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_mvar_value_3;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_InfoExtractor);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_InfoExtractor);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 33651 ], 35, 0);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 124;

            goto try_except_handler_5;
        }

        tmp_tuple_element_1 = tmp_mvar_value_3;
        tmp_assign_source_117 = PyTuple_New(1);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_assign_source_117, 0, tmp_tuple_element_1);
        assert(tmp_class_creation_1__bases_orig == NULL);
        tmp_class_creation_1__bases_orig = tmp_assign_source_117;
    }
    {
        PyObject *tmp_assign_source_118;
        PyObject *tmp_dircall_arg1_1;
        CHECK_OBJECT(tmp_class_creation_1__bases_orig);
        tmp_dircall_arg1_1 = tmp_class_creation_1__bases_orig;
        Py_INCREF(tmp_dircall_arg1_1);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_1};
            tmp_assign_source_118 = impl___internal__$$$function_4__mro_entries_conversion(dir_call_args);
        }
        if (tmp_assign_source_118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        assert(tmp_class_creation_1__bases == NULL);
        tmp_class_creation_1__bases = tmp_assign_source_118;
    }
    {
        PyObject *tmp_assign_source_119;
        tmp_assign_source_119 = PyDict_New();
        assert(tmp_class_creation_1__class_decl_dict == NULL);
        tmp_class_creation_1__class_decl_dict = tmp_assign_source_119;
    }
    {
        PyObject *tmp_assign_source_120;
        PyObject *tmp_metaclass_name_1;
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_key_name_1;
        PyObject *tmp_dict_name_1;
        PyObject *tmp_dict_name_2;
        PyObject *tmp_key_name_2;
        nuitka_bool tmp_condition_result_2;
        int tmp_truth_name_1;
        PyObject *tmp_type_arg_1;
        PyObject *tmp_expression_name_1;
        PyObject *tmp_subscript_name_1;
        PyObject *tmp_bases_name_1;
        tmp_key_name_1 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dict_name_1 = tmp_class_creation_1__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_1, tmp_key_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_1;
        } else {
            goto condexpr_false_1;
        }
        condexpr_true_1:;
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dict_name_2 = tmp_class_creation_1__class_decl_dict;
        tmp_key_name_2 = const_str_plain_metaclass;
        tmp_metaclass_name_1 = DICT_GET_ITEM(tmp_dict_name_2, tmp_key_name_2);
        if (tmp_metaclass_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        goto condexpr_end_1;
        condexpr_false_1:;
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_class_creation_1__bases);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        tmp_condition_result_2 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_2;
        } else {
            goto condexpr_false_2;
        }
        condexpr_true_2:;
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_expression_name_1 = tmp_class_creation_1__bases;
        tmp_subscript_name_1 = const_int_0;
        tmp_type_arg_1 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_name_1, tmp_subscript_name_1, 0);
        if (tmp_type_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        tmp_metaclass_name_1 = BUILTIN_TYPE1(tmp_type_arg_1);
        Py_DECREF(tmp_type_arg_1);
        if (tmp_metaclass_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        goto condexpr_end_2;
        condexpr_false_2:;
        tmp_metaclass_name_1 = (PyObject *)&PyType_Type;
        Py_INCREF(tmp_metaclass_name_1);
        condexpr_end_2:;
        condexpr_end_1:;
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_bases_name_1 = tmp_class_creation_1__bases;
        tmp_assign_source_120 = SELECT_METACLASS(tmp_metaclass_name_1, tmp_bases_name_1);
        Py_DECREF(tmp_metaclass_name_1);
        if (tmp_assign_source_120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        assert(tmp_class_creation_1__metaclass == NULL);
        tmp_class_creation_1__metaclass = tmp_assign_source_120;
    }
    {
        nuitka_bool tmp_condition_result_3;
        PyObject *tmp_key_name_3;
        PyObject *tmp_dict_name_3;
        tmp_key_name_3 = const_str_plain_metaclass;
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dict_name_3 = tmp_class_creation_1__class_decl_dict;
        tmp_res = PyDict_Contains(tmp_dict_name_3, tmp_key_name_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
    tmp_dictdel_dict = tmp_class_creation_1__class_decl_dict;
    tmp_dictdel_key = const_str_plain_metaclass;
    tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
    if (tmp_result == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 124;

        goto try_except_handler_5;
    }
    branch_no_1:;
    {
        nuitka_bool tmp_condition_result_4;
        PyObject *tmp_expression_name_2;
        CHECK_OBJECT(tmp_class_creation_1__metaclass);
        tmp_expression_name_2 = tmp_class_creation_1__metaclass;
        tmp_res = PyObject_HasAttr(tmp_expression_name_2, const_str_plain___prepare__);
        tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    {
        PyObject *tmp_assign_source_121;
        PyObject *tmp_called_name_1;
        PyObject *tmp_expression_name_3;
        PyObject *tmp_args_name_1;
        PyObject *tmp_tuple_element_2;
        PyObject *tmp_kw_name_1;
        CHECK_OBJECT(tmp_class_creation_1__metaclass);
        tmp_expression_name_3 = tmp_class_creation_1__metaclass;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_expression_name_3, const_str_plain___prepare__);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        tmp_tuple_element_2 = const_str_plain_GenericIE;
        tmp_args_name_1 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_args_name_1, 0, tmp_tuple_element_2);
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_tuple_element_2 = tmp_class_creation_1__bases;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_args_name_1, 1, tmp_tuple_element_2);
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_kw_name_1 = tmp_class_creation_1__class_decl_dict;
        frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 124;
        tmp_assign_source_121 = CALL_FUNCTION(tmp_called_name_1, tmp_args_name_1, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_name_1);
        if (tmp_assign_source_121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        assert(tmp_class_creation_1__prepared == NULL);
        tmp_class_creation_1__prepared = tmp_assign_source_121;
    }
    {
        nuitka_bool tmp_condition_result_5;
        PyObject *tmp_operand_name_1;
        PyObject *tmp_expression_name_4;
        CHECK_OBJECT(tmp_class_creation_1__prepared);
        tmp_expression_name_4 = tmp_class_creation_1__prepared;
        tmp_res = PyObject_HasAttr(tmp_expression_name_4, const_str_plain___getitem__);
        tmp_operand_name_1 = (tmp_res != 0) ? Py_True : Py_False;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        tmp_condition_result_5 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
    }
    branch_yes_3:;
    {
        PyObject *tmp_raise_type_1;
        PyObject *tmp_raise_value_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        PyObject *tmp_tuple_element_3;
        PyObject *tmp_getattr_target_1;
        PyObject *tmp_getattr_attr_1;
        PyObject *tmp_getattr_default_1;
        PyObject *tmp_expression_name_5;
        PyObject *tmp_type_arg_2;
        tmp_raise_type_1 = PyExc_TypeError;
        tmp_left_name_1 = const_str_digest_75fd71b1edada749c2ef7ac810062295;
        CHECK_OBJECT(tmp_class_creation_1__metaclass);
        tmp_getattr_target_1 = tmp_class_creation_1__metaclass;
        tmp_getattr_attr_1 = const_str_plain___name__;
        tmp_getattr_default_1 = const_str_angle_metaclass;
        tmp_tuple_element_3 = BUILTIN_GETATTR(tmp_getattr_target_1, tmp_getattr_attr_1, tmp_getattr_default_1);
        if (tmp_tuple_element_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        tmp_right_name_1 = PyTuple_New(2);
        PyTuple_SET_ITEM(tmp_right_name_1, 0, tmp_tuple_element_3);
        CHECK_OBJECT(tmp_class_creation_1__prepared);
        tmp_type_arg_2 = tmp_class_creation_1__prepared;
        tmp_expression_name_5 = BUILTIN_TYPE1(tmp_type_arg_2);
        assert(!(tmp_expression_name_5 == NULL));
        tmp_tuple_element_3 = LOOKUP_ATTRIBUTE(tmp_expression_name_5, const_str_plain___name__);
        Py_DECREF(tmp_expression_name_5);
        if (tmp_tuple_element_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_right_name_1);

            exception_lineno = 124;

            goto try_except_handler_5;
        }
        PyTuple_SET_ITEM(tmp_right_name_1, 1, tmp_tuple_element_3);
        tmp_raise_value_1 = BINARY_OPERATION_MOD_OBJECT_UNICODE_TUPLE(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_right_name_1);
        if (tmp_raise_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_5;
        }
        exception_type = tmp_raise_type_1;
        Py_INCREF(tmp_raise_type_1);
        exception_value = tmp_raise_value_1;
        exception_lineno = 124;
        RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);

        goto try_except_handler_5;
    }
    branch_no_3:;
    goto branch_end_2;
    branch_no_2:;
    {
        PyObject *tmp_assign_source_122;
        tmp_assign_source_122 = PyDict_New();
        assert(tmp_class_creation_1__prepared == NULL);
        tmp_class_creation_1__prepared = tmp_assign_source_122;
    }
    branch_end_2:;
    {
        PyObject *tmp_assign_source_123;
        {
            PyObject *tmp_set_locals_1;
            CHECK_OBJECT(tmp_class_creation_1__prepared);
            tmp_set_locals_1 = tmp_class_creation_1__prepared;
            locals_youtube_dl$extractor$generic_124 = tmp_set_locals_1;
            Py_INCREF(tmp_set_locals_1);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = const_str_digest_8af58cf9c18e715a57a70b467aa40cc4;
        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic_124, const_str_plain___module__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_7;
        }
        tmp_dictset_value = const_str_plain_GenericIE;
        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic_124, const_str_plain___qualname__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_7;
        }
        if (isFrameUnusable(cache_frame_336043124f5c4cc3ccd5b77a6f1df793_2)) {
            Py_XDECREF(cache_frame_336043124f5c4cc3ccd5b77a6f1df793_2);

#if _DEBUG_REFCOUNTS
            if (cache_frame_336043124f5c4cc3ccd5b77a6f1df793_2 == NULL) {
                count_active_frame_cache_instances += 1;
            } else {
                count_released_frame_cache_instances += 1;
            }
            count_allocated_frame_cache_instances += 1;
#endif
            cache_frame_336043124f5c4cc3ccd5b77a6f1df793_2 = MAKE_FUNCTION_FRAME(codeobj_336043124f5c4cc3ccd5b77a6f1df793, module_youtube_dl$extractor$generic, sizeof(void *));
#if _DEBUG_REFCOUNTS
        } else {
            count_hit_frame_cache_instances += 1;
#endif
        }
        assert(cache_frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_type_description == NULL);
        frame_336043124f5c4cc3ccd5b77a6f1df793_2 = cache_frame_336043124f5c4cc3ccd5b77a6f1df793_2;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_336043124f5c4cc3ccd5b77a6f1df793_2);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_336043124f5c4cc3ccd5b77a6f1df793_2) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = const_str_digest_01b24fbfa33c2fa0f71fba31886b8ac2;
        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_IE_DESC, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 125;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }
        tmp_dictset_value = const_str_digest_548f8d37f9a611777eb26a7105ecad09;
        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic_124, const_str_plain__VALID_URL, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 126;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }
        tmp_dictset_value = const_str_plain_generic;
        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_IE_NAME, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 127;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }
        {
            PyObject *tmp_list_element_1;
            PyObject *tmp_dict_key_1;
            PyObject *tmp_dict_value_1;
            PyObject *tmp_dict_key_2;
            PyObject *tmp_dict_value_2;
            PyObject *tmp_dict_key_3;
            PyObject *tmp_dict_value_3;
            PyObject *tmp_dict_key_4;
            PyObject *tmp_dict_value_4;
            PyObject *tmp_list_element_2;
            PyObject *tmp_called_instance_1;
            PyObject *tmp_mvar_value_4;
            PyObject *tmp_dict_key_5;
            PyObject *tmp_dict_value_5;
            PyObject *tmp_dict_key_6;
            PyObject *tmp_dict_value_6;
            PyObject *tmp_dict_key_7;
            PyObject *tmp_dict_value_7;
            PyObject *tmp_dict_key_8;
            PyObject *tmp_dict_value_8;
            PyObject *tmp_dict_key_9;
            PyObject *tmp_dict_value_9;
            PyObject *tmp_dict_key_10;
            PyObject *tmp_dict_value_10;
            PyObject *tmp_dict_key_11;
            PyObject *tmp_dict_value_11;
            PyObject *tmp_dict_key_12;
            PyObject *tmp_dict_value_12;
            PyObject *tmp_dict_key_13;
            PyObject *tmp_dict_value_13;
            PyObject *tmp_dict_key_14;
            PyObject *tmp_dict_value_14;
            PyObject *tmp_dict_key_15;
            PyObject *tmp_dict_value_15;
            PyObject *tmp_dict_key_16;
            PyObject *tmp_dict_value_16;
            PyObject *tmp_dict_key_17;
            PyObject *tmp_dict_value_17;
            PyObject *tmp_dict_key_18;
            PyObject *tmp_dict_value_18;
            PyObject *tmp_dict_key_19;
            PyObject *tmp_dict_value_19;
            PyObject *tmp_dict_key_20;
            PyObject *tmp_dict_value_20;
            PyObject *tmp_dict_key_21;
            PyObject *tmp_dict_value_21;
            PyObject *tmp_dict_key_22;
            PyObject *tmp_dict_value_22;
            PyObject *tmp_dict_key_23;
            PyObject *tmp_dict_value_23;
            PyObject *tmp_dict_key_24;
            PyObject *tmp_dict_value_24;
            PyObject *tmp_dict_key_25;
            PyObject *tmp_dict_value_25;
            PyObject *tmp_dict_key_26;
            PyObject *tmp_dict_value_26;
            PyObject *tmp_dict_key_27;
            PyObject *tmp_dict_value_27;
            PyObject *tmp_dict_key_28;
            PyObject *tmp_dict_value_28;
            PyObject *tmp_dict_key_29;
            PyObject *tmp_dict_value_29;
            PyObject *tmp_dict_key_30;
            PyObject *tmp_dict_value_30;
            PyObject *tmp_dict_key_31;
            PyObject *tmp_dict_value_31;
            PyObject *tmp_dict_key_32;
            PyObject *tmp_dict_value_32;
            PyObject *tmp_dict_key_33;
            PyObject *tmp_dict_value_33;
            PyObject *tmp_dict_key_34;
            PyObject *tmp_dict_value_34;
            PyObject *tmp_dict_key_35;
            PyObject *tmp_dict_value_35;
            PyObject *tmp_list_element_3;
            PyObject *tmp_called_instance_2;
            PyObject *tmp_mvar_value_5;
            PyObject *tmp_dict_key_36;
            PyObject *tmp_dict_value_36;
            PyObject *tmp_dict_key_37;
            PyObject *tmp_dict_value_37;
            PyObject *tmp_dict_key_38;
            PyObject *tmp_dict_value_38;
            PyObject *tmp_list_element_4;
            PyObject *tmp_called_instance_3;
            PyObject *tmp_mvar_value_6;
            PyObject *tmp_dict_key_39;
            PyObject *tmp_dict_value_39;
            PyObject *tmp_dict_key_40;
            PyObject *tmp_dict_value_40;
            PyObject *tmp_dict_key_41;
            PyObject *tmp_dict_value_41;
            PyObject *tmp_dict_key_42;
            PyObject *tmp_dict_value_42;
            PyObject *tmp_dict_key_43;
            PyObject *tmp_dict_value_43;
            PyObject *tmp_list_element_5;
            PyObject *tmp_called_instance_4;
            PyObject *tmp_mvar_value_7;
            PyObject *tmp_dict_key_44;
            PyObject *tmp_dict_value_44;
            PyObject *tmp_dict_key_45;
            PyObject *tmp_dict_value_45;
            PyObject *tmp_dict_key_46;
            PyObject *tmp_dict_value_46;
            PyObject *tmp_dict_key_47;
            PyObject *tmp_dict_value_47;
            PyObject *tmp_list_element_6;
            PyObject *tmp_called_instance_5;
            PyObject *tmp_mvar_value_8;
            PyObject *tmp_dict_key_48;
            PyObject *tmp_dict_value_48;
            PyObject *tmp_dict_key_49;
            PyObject *tmp_dict_value_49;
            PyObject *tmp_dict_key_50;
            PyObject *tmp_dict_value_50;
            PyObject *tmp_dict_key_51;
            PyObject *tmp_dict_value_51;
            PyObject *tmp_list_element_7;
            PyObject *tmp_called_instance_6;
            PyObject *tmp_mvar_value_9;
            PyObject *tmp_dict_key_52;
            PyObject *tmp_dict_value_52;
            PyObject *tmp_dict_key_53;
            PyObject *tmp_dict_value_53;
            PyObject *tmp_dict_key_54;
            PyObject *tmp_dict_value_54;
            PyObject *tmp_dict_key_55;
            PyObject *tmp_dict_value_55;
            PyObject *tmp_list_element_8;
            PyObject *tmp_called_instance_7;
            PyObject *tmp_mvar_value_10;
            PyObject *tmp_dict_key_56;
            PyObject *tmp_dict_value_56;
            PyObject *tmp_dict_key_57;
            PyObject *tmp_dict_value_57;
            PyObject *tmp_dict_key_58;
            PyObject *tmp_dict_value_58;
            PyObject *tmp_dict_key_59;
            PyObject *tmp_dict_value_59;
            PyObject *tmp_list_element_9;
            PyObject *tmp_called_instance_8;
            PyObject *tmp_mvar_value_11;
            PyObject *tmp_dict_key_60;
            PyObject *tmp_dict_value_60;
            PyObject *tmp_dict_key_61;
            PyObject *tmp_dict_value_61;
            PyObject *tmp_dict_key_62;
            PyObject *tmp_dict_value_62;
            PyObject *tmp_dict_key_63;
            PyObject *tmp_dict_value_63;
            PyObject *tmp_list_element_10;
            PyObject *tmp_called_instance_9;
            PyObject *tmp_mvar_value_12;
            PyObject *tmp_dict_key_64;
            PyObject *tmp_dict_value_64;
            PyObject *tmp_dict_key_65;
            PyObject *tmp_dict_value_65;
            PyObject *tmp_dict_key_66;
            PyObject *tmp_dict_value_66;
            PyObject *tmp_list_element_11;
            PyObject *tmp_called_instance_10;
            PyObject *tmp_mvar_value_13;
            PyObject *tmp_dict_key_67;
            PyObject *tmp_dict_value_67;
            PyObject *tmp_dict_key_68;
            PyObject *tmp_dict_value_68;
            PyObject *tmp_dict_key_69;
            PyObject *tmp_dict_value_69;
            PyObject *tmp_dict_key_70;
            PyObject *tmp_dict_value_70;
            PyObject *tmp_list_element_12;
            PyObject *tmp_called_instance_11;
            PyObject *tmp_mvar_value_14;
            PyObject *tmp_dict_key_71;
            PyObject *tmp_dict_value_71;
            PyObject *tmp_dict_key_72;
            PyObject *tmp_dict_value_72;
            PyObject *tmp_dict_key_73;
            PyObject *tmp_dict_value_73;
            PyObject *tmp_dict_key_74;
            PyObject *tmp_dict_value_74;
            PyObject *tmp_list_element_13;
            PyObject *tmp_called_instance_12;
            PyObject *tmp_mvar_value_15;
            PyObject *tmp_dict_key_75;
            PyObject *tmp_dict_value_75;
            PyObject *tmp_dict_key_76;
            PyObject *tmp_dict_value_76;
            PyObject *tmp_dict_key_77;
            PyObject *tmp_dict_value_77;
            PyObject *tmp_dict_key_78;
            PyObject *tmp_dict_value_78;
            PyObject *tmp_list_element_14;
            PyObject *tmp_called_instance_13;
            PyObject *tmp_mvar_value_16;
            PyObject *tmp_dict_key_79;
            PyObject *tmp_dict_value_79;
            PyObject *tmp_dict_key_80;
            PyObject *tmp_dict_value_80;
            PyObject *tmp_dict_key_81;
            PyObject *tmp_dict_value_81;
            PyObject *tmp_list_element_15;
            PyObject *tmp_called_instance_14;
            PyObject *tmp_mvar_value_17;
            PyObject *tmp_dict_key_82;
            PyObject *tmp_dict_value_82;
            PyObject *tmp_dict_key_83;
            PyObject *tmp_dict_value_83;
            PyObject *tmp_dict_key_84;
            PyObject *tmp_dict_value_84;
            PyObject *tmp_dict_key_85;
            PyObject *tmp_dict_value_85;
            PyObject *tmp_list_element_16;
            PyObject *tmp_called_instance_15;
            PyObject *tmp_mvar_value_18;
            PyObject *tmp_dict_key_86;
            PyObject *tmp_dict_value_86;
            PyObject *tmp_dict_key_87;
            PyObject *tmp_dict_value_87;
            PyObject *tmp_dict_key_88;
            PyObject *tmp_dict_value_88;
            PyObject *tmp_dict_key_89;
            PyObject *tmp_dict_value_89;
            PyObject *tmp_list_element_17;
            PyObject *tmp_called_instance_16;
            PyObject *tmp_mvar_value_19;
            PyObject *tmp_dict_key_90;
            PyObject *tmp_dict_value_90;
            PyObject *tmp_dict_key_91;
            PyObject *tmp_dict_value_91;
            PyObject *tmp_dict_key_92;
            PyObject *tmp_dict_value_92;
            PyObject *tmp_dict_key_93;
            PyObject *tmp_dict_value_93;
            PyObject *tmp_list_element_18;
            PyObject *tmp_called_instance_17;
            PyObject *tmp_mvar_value_20;
            PyObject *tmp_dict_key_94;
            PyObject *tmp_dict_value_94;
            PyObject *tmp_dict_key_95;
            PyObject *tmp_dict_value_95;
            PyObject *tmp_dict_key_96;
            PyObject *tmp_dict_value_96;
            PyObject *tmp_dict_key_97;
            PyObject *tmp_dict_value_97;
            PyObject *tmp_list_element_19;
            PyObject *tmp_called_instance_18;
            PyObject *tmp_mvar_value_21;
            PyObject *tmp_dict_key_98;
            PyObject *tmp_dict_value_98;
            tmp_list_element_1 = DEEP_COPY(const_dict_d89cf07bf8dae60ab63e55bd2ca1add4);
            tmp_dictset_value = PyList_New(149);
            PyList_SET_ITEM(tmp_dictset_value, 0, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_5a07e632e6e25b7b994d75854741261f);
            PyList_SET_ITEM(tmp_dictset_value, 1, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_8cda6ebd2f5da4ac26677331ba665850);
            PyList_SET_ITEM(tmp_dictset_value, 2, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_86e7a046cb8b5da69df2290d5147f0a9);
            PyList_SET_ITEM(tmp_dictset_value, 3, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_5ac0c17afd85cad1b07f581c41b79e48);
            PyList_SET_ITEM(tmp_dictset_value, 4, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_4a7e9bb92d541b81db21ee76e5d1a64d);
            PyList_SET_ITEM(tmp_dictset_value, 5, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_e80f79fdfb35cbe89298d0b260a3ffc2);
            PyList_SET_ITEM(tmp_dictset_value, 6, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_3282e540260e22113498e5a30ea902b0);
            PyList_SET_ITEM(tmp_dictset_value, 7, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_fa46eeaffa7a91e8b1322ea42ff9ff66);
            PyList_SET_ITEM(tmp_dictset_value, 8, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_f14e496c81bf6af19ef81a77fdc4150a);
            PyList_SET_ITEM(tmp_dictset_value, 9, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_49bfd386de3590b8539fed3628bdb804);
            PyList_SET_ITEM(tmp_dictset_value, 10, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_1f9dcb80a2a6024a12f9c1b23ec8497e);
            PyList_SET_ITEM(tmp_dictset_value, 11, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_945b2e27a8fdb4912ac6485714f084ea);
            PyList_SET_ITEM(tmp_dictset_value, 12, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_d1fa03127b4e84f03afd8a5b457ed908);
            PyList_SET_ITEM(tmp_dictset_value, 13, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_0c5a3ef8dc91e1ea20d0cb663d8fb41a);
            PyList_SET_ITEM(tmp_dictset_value, 14, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_cfc44552b489b0d33d0ad611affd1e3c);
            PyList_SET_ITEM(tmp_dictset_value, 15, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_b7f6b41d944a6e262bb19b9f3bfe92e3);
            PyList_SET_ITEM(tmp_dictset_value, 16, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_159b41e52d8a3d6a5f5694c0a3fc169a);
            PyList_SET_ITEM(tmp_dictset_value, 17, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_ab76d6da01cba08ac45e0b071f26a573);
            PyList_SET_ITEM(tmp_dictset_value, 18, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_dda21c4ebe6bc9bcbf17196dc6f43565);
            PyList_SET_ITEM(tmp_dictset_value, 19, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_11a1778f75725ce1871c3e10f2ea1615);
            PyList_SET_ITEM(tmp_dictset_value, 20, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_bd33cb4224d5993140f7cad747932c49);
            PyList_SET_ITEM(tmp_dictset_value, 21, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_3c138da28b9b33d0b9690973b73b406b);
            PyList_SET_ITEM(tmp_dictset_value, 22, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_ec15fac3750b0f6b5006a6072c76558e);
            PyList_SET_ITEM(tmp_dictset_value, 23, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_afd84ca9fc566b6f438f79d84c007112);
            PyList_SET_ITEM(tmp_dictset_value, 24, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_256481bf8b71e02775f2c00088b5570b);
            PyList_SET_ITEM(tmp_dictset_value, 25, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_ef59b7966f06c8b8d45d32367e79a62a);
            PyList_SET_ITEM(tmp_dictset_value, 26, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_c3274d7e171935c58179768facb06b85);
            PyList_SET_ITEM(tmp_dictset_value, 27, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_dcad60b1d78df1778b10219548813094);
            PyList_SET_ITEM(tmp_dictset_value, 28, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_7520dad2c937c7fc824668a6011f97dc);
            PyList_SET_ITEM(tmp_dictset_value, 29, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_45b031c387bada7e8d887760a2c0154d);
            PyList_SET_ITEM(tmp_dictset_value, 30, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_091661da725c4af3cf59f4518773df7e);
            PyList_SET_ITEM(tmp_dictset_value, 31, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_1674a7848a1f8093e517b96f639bb30b);
            PyList_SET_ITEM(tmp_dictset_value, 32, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_c315cb62c0f5ec09e9dafbc3a1d07d68);
            PyList_SET_ITEM(tmp_dictset_value, 33, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_eb3282732a410b274b084b5f7ff4ff5c);
            PyList_SET_ITEM(tmp_dictset_value, 34, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_4e2834f61d5e87c5e3ab996cca10e0f6);
            PyList_SET_ITEM(tmp_dictset_value, 35, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_6c14397ecb968f079218ba6228a92f7f);
            PyList_SET_ITEM(tmp_dictset_value, 36, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_cf81e7e9ebb41d788b565fa01c2a2d91);
            PyList_SET_ITEM(tmp_dictset_value, 37, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_67ff8b8f2fb8a32c23a5c587bf563e5d);
            PyList_SET_ITEM(tmp_dictset_value, 38, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_ef0e72767d500c832e069aca383f42ee);
            PyList_SET_ITEM(tmp_dictset_value, 39, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_8ff1e1c4e79095474dbc9fba1737a55d);
            PyList_SET_ITEM(tmp_dictset_value, 40, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_57ba96e6428c3dcab4dbd037a234bdcb);
            PyList_SET_ITEM(tmp_dictset_value, 41, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_6dfcb47a9fcb9d30527435a267652e47);
            PyList_SET_ITEM(tmp_dictset_value, 42, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_d8bbfd1f1830a5ca80fcaf9e8afbef31);
            PyList_SET_ITEM(tmp_dictset_value, 43, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_7c17bc28a66d65c08fc842a388468051);
            PyList_SET_ITEM(tmp_dictset_value, 44, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_5835e3865c2990f3c74d45eacc431ed0);
            PyList_SET_ITEM(tmp_dictset_value, 45, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_0dcecd0b14ec4ee7e8a60a0f131687ba);
            PyList_SET_ITEM(tmp_dictset_value, 46, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_5959d3e31d31b263192b3ae745700eae);
            PyList_SET_ITEM(tmp_dictset_value, 47, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_f4d056e9d2fa491b8d2b112505bb1b00);
            PyList_SET_ITEM(tmp_dictset_value, 48, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_14a82dc3a5b15f78132374e685cc36b7);
            PyList_SET_ITEM(tmp_dictset_value, 49, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_e57dc9b04246ac135226d14533c5b3c9);
            PyList_SET_ITEM(tmp_dictset_value, 50, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_7143384c27ef78862c881b65da6baea6);
            PyList_SET_ITEM(tmp_dictset_value, 51, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_8e601ccf1fa573b445f26b6c79ea222a);
            PyList_SET_ITEM(tmp_dictset_value, 52, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_ee0c9edf86b4dce6e1be03b53f9d9a5d);
            PyList_SET_ITEM(tmp_dictset_value, 53, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_dac39445a32092e03345e51a6dd0e2d9);
            PyList_SET_ITEM(tmp_dictset_value, 54, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_b8375f50e1918ad78acb3e7eb3915f0e);
            PyList_SET_ITEM(tmp_dictset_value, 55, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_66bdd8a6c9feba7af52023501761493b);
            PyList_SET_ITEM(tmp_dictset_value, 56, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_513f0061f46ebec8e61c46ca6b2cc626);
            PyList_SET_ITEM(tmp_dictset_value, 57, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_d67cb766c5ba26fcc1153273e2d8b5f9);
            PyList_SET_ITEM(tmp_dictset_value, 58, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_7a30bbd914a2d9271368f53a124fec98);
            PyList_SET_ITEM(tmp_dictset_value, 59, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_6e33b1cf7ef946706005d7b11221abce);
            PyList_SET_ITEM(tmp_dictset_value, 60, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_5afb5a68864481ce70ddc8acdf5302bf);
            PyList_SET_ITEM(tmp_dictset_value, 61, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_16faaed806dd3a4d7baf6d1950c115fb);
            PyList_SET_ITEM(tmp_dictset_value, 62, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_9e65411165a4af514cda08a733cec2ea);
            PyList_SET_ITEM(tmp_dictset_value, 63, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_d4de7335ae873e8ab4b138fbc0170032);
            PyList_SET_ITEM(tmp_dictset_value, 64, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_05eac665a73b08deff51515b0106b188);
            PyList_SET_ITEM(tmp_dictset_value, 65, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_e29dc7960585731f61087a925860691c);
            PyList_SET_ITEM(tmp_dictset_value, 66, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_6db4d233108219ea71720814dfb76768);
            PyList_SET_ITEM(tmp_dictset_value, 67, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_1b8e90e8344362c4d9a9573632391572);
            PyList_SET_ITEM(tmp_dictset_value, 68, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_aa2672704ec12fb38e690f1c910de404);
            PyList_SET_ITEM(tmp_dictset_value, 69, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_4d7169b31049ca45eb10d4bf08a2ef51);
            PyList_SET_ITEM(tmp_dictset_value, 70, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_3f527ebc9f849d93fae8430b9f1577a1);
            PyList_SET_ITEM(tmp_dictset_value, 71, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_84cee2f3e7ec1b1542728e470a7b7af7);
            PyList_SET_ITEM(tmp_dictset_value, 72, tmp_list_element_1);
            tmp_dict_key_1 = const_str_plain_url;
            tmp_dict_value_1 = const_str_digest_dc97e4858160452b7c1499837aba0a88;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_1, tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_2 = const_str_plain_md5;
            tmp_dict_value_2 = const_str_plain_ca00a040364b5b439230e7ebfd02c4e9;
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_2, tmp_dict_value_2);
            assert(!(tmp_res != 0));
            tmp_dict_key_3 = const_str_plain_info_dict;
            tmp_dict_value_3 = PyDict_Copy(const_dict_7808b908da7ba7b4e49d7922ca77b637);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_3, tmp_dict_value_3);
            Py_DECREF(tmp_dict_value_3);
            assert(!(tmp_res != 0));
            tmp_dict_key_4 = const_str_plain_add_ie;
            tmp_called_instance_1 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_JWPlatformIE);

            if (tmp_called_instance_1 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_JWPlatformIE);

                    if (unlikely(tmp_mvar_value_4 == NULL)) {
                        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_JWPlatformIE);
                    }

                    if (tmp_mvar_value_4 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 36809 ], 34, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1176;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_1 = tmp_mvar_value_4;
                    Py_INCREF(tmp_called_instance_1);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1176;
            tmp_list_element_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_1);
            if (tmp_list_element_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1176;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_4 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_4, 0, tmp_list_element_2);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_4, tmp_dict_value_4);
            Py_DECREF(tmp_dict_value_4);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 73, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_86f9ab7d453a404b963b778878f608a5);
            PyList_SET_ITEM(tmp_dictset_value, 74, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_26d87b6c5c23e26c44d81e5bda679802);
            PyList_SET_ITEM(tmp_dictset_value, 75, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_e6421e8d12634dbb0763c502c9cd38dd);
            PyList_SET_ITEM(tmp_dictset_value, 76, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_b6854f20e8f87db3a30a64c459493552);
            PyList_SET_ITEM(tmp_dictset_value, 77, tmp_list_element_1);
            tmp_dict_key_5 = const_str_plain_url;
            tmp_dict_value_5 = const_str_digest_9df396bea03127e151c9b63e79d78571;
            tmp_list_element_1 = _PyDict_NewPresized( 2 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_5, tmp_dict_value_5);
            assert(!(tmp_res != 0));
            tmp_dict_key_6 = const_str_plain_info_dict;
            tmp_dict_key_7 = const_str_plain_id;
            tmp_dict_value_7 = const_str_plain_1_a52wc67y;
            tmp_dict_value_6 = _PyDict_NewPresized( 6 );
            tmp_res = PyDict_SetItem(tmp_dict_value_6, tmp_dict_key_7, tmp_dict_value_7);
            assert(!(tmp_res != 0));
            tmp_dict_key_8 = const_str_plain_ext;
            tmp_dict_value_8 = const_str_plain_flv;
            tmp_res = PyDict_SetItem(tmp_dict_value_6, tmp_dict_key_8, tmp_dict_value_8);
            assert(!(tmp_res != 0));
            tmp_dict_key_9 = const_str_plain_upload_date;
            tmp_dict_value_9 = const_str_plain_20150127;
            tmp_res = PyDict_SetItem(tmp_dict_value_6, tmp_dict_key_9, tmp_dict_value_9);
            assert(!(tmp_res != 0));
            tmp_dict_key_10 = const_str_plain_uploader_id;
            tmp_dict_value_10 = const_str_plain_PremierMedia;
            tmp_res = PyDict_SetItem(tmp_dict_value_6, tmp_dict_key_10, tmp_dict_value_10);
            assert(!(tmp_res != 0));
            tmp_dict_key_11 = const_str_plain_timestamp;
            tmp_dict_value_11 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_int);

            if (tmp_dict_value_11 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_dict_value_11 = (PyObject *)&PyLong_Type;
                    Py_INCREF(tmp_dict_value_11);
                }
            }

            tmp_res = PyDict_SetItem(tmp_dict_value_6, tmp_dict_key_11, tmp_dict_value_11);
            Py_DECREF(tmp_dict_value_11);
            assert(!(tmp_res != 0));
            tmp_dict_key_12 = const_str_plain_title;
            tmp_dict_value_12 = const_str_digest_ede1c04eead6c05b89baf894ee2f54e0;
            tmp_res = PyDict_SetItem(tmp_dict_value_6, tmp_dict_key_12, tmp_dict_value_12);
            assert(!(tmp_res != 0));
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_6, tmp_dict_value_6);
            Py_DECREF(tmp_dict_value_6);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 78, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_a498adea70e82ff7846fd3c9bc037af0);
            PyList_SET_ITEM(tmp_dictset_value, 79, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_f1a19df5e0ff334dbc74caec0acde171);
            PyList_SET_ITEM(tmp_dictset_value, 80, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_587681dc055fea13b3d1fc7252bcdb01);
            PyList_SET_ITEM(tmp_dictset_value, 81, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_5e005be8cf4935e987038e39dba5717c);
            PyList_SET_ITEM(tmp_dictset_value, 82, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_1f19876f4e4ccf61b7580dd7d745ee81);
            PyList_SET_ITEM(tmp_dictset_value, 83, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_b384620a920db6c17ac8171d704f5300);
            PyList_SET_ITEM(tmp_dictset_value, 84, tmp_list_element_1);
            tmp_dict_key_13 = const_str_plain_url;
            tmp_dict_value_13 = const_str_digest_d88d4406522891a6185ec5cd40eb4b02;
            tmp_list_element_1 = _PyDict_NewPresized( 3 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_13, tmp_dict_value_13);
            assert(!(tmp_res != 0));
            tmp_dict_key_14 = const_str_plain_info_dict;
            tmp_dict_key_15 = const_str_plain_id;
            tmp_dict_value_15 = const_str_plain_582306;
            tmp_dict_value_14 = _PyDict_NewPresized( 6 );
            tmp_res = PyDict_SetItem(tmp_dict_value_14, tmp_dict_key_15, tmp_dict_value_15);
            assert(!(tmp_res != 0));
            tmp_dict_key_16 = const_str_plain_ext;
            tmp_dict_value_16 = const_str_plain_mp4;
            tmp_res = PyDict_SetItem(tmp_dict_value_14, tmp_dict_key_16, tmp_dict_value_16);
            assert(!(tmp_res != 0));
            tmp_dict_key_17 = const_str_plain_title;
            tmp_dict_value_17 = const_str_digest_331af8d3e10a0a6f8005bb1e0f575bfa;
            tmp_res = PyDict_SetItem(tmp_dict_value_14, tmp_dict_key_17, tmp_dict_value_17);
            assert(!(tmp_res != 0));
            tmp_dict_key_18 = const_str_plain_thumbnail;
            tmp_dict_value_18 = const_str_digest_a4d2c749144754fcad3c1b2f9e5cb89a;
            tmp_res = PyDict_SetItem(tmp_dict_value_14, tmp_dict_key_18, tmp_dict_value_18);
            assert(!(tmp_res != 0));
            tmp_dict_key_19 = const_str_plain_duration;
            tmp_dict_value_19 = const_int_pos_3382;
            tmp_res = PyDict_SetItem(tmp_dict_value_14, tmp_dict_key_19, tmp_dict_value_19);
            assert(!(tmp_res != 0));
            tmp_dict_key_20 = const_str_plain_view_count;
            tmp_dict_value_20 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_int);

            if (tmp_dict_value_20 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_dict_value_20 = (PyObject *)&PyLong_Type;
                    Py_INCREF(tmp_dict_value_20);
                }
            }

            tmp_res = PyDict_SetItem(tmp_dict_value_14, tmp_dict_key_20, tmp_dict_value_20);
            Py_DECREF(tmp_dict_value_20);
            assert(!(tmp_res != 0));
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_14, tmp_dict_value_14);
            Py_DECREF(tmp_dict_value_14);
            assert(!(tmp_res != 0));
            tmp_dict_key_21 = const_str_plain_params;
            tmp_dict_value_21 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_21, tmp_dict_value_21);
            Py_DECREF(tmp_dict_value_21);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 85, tmp_list_element_1);
            tmp_dict_key_22 = const_str_plain_url;
            tmp_dict_value_22 = const_str_digest_d52895b93a70b4387ed148b16c93de27;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_22, tmp_dict_value_22);
            assert(!(tmp_res != 0));
            tmp_dict_key_23 = const_str_plain_info_dict;
            tmp_dict_key_24 = const_str_plain_id;
            tmp_dict_value_24 = const_str_plain_12820;
            tmp_dict_value_23 = _PyDict_NewPresized( 6 );
            tmp_res = PyDict_SetItem(tmp_dict_value_23, tmp_dict_key_24, tmp_dict_value_24);
            assert(!(tmp_res != 0));
            tmp_dict_key_25 = const_str_plain_ext;
            tmp_dict_value_25 = const_str_plain_mp4;
            tmp_res = PyDict_SetItem(tmp_dict_value_23, tmp_dict_key_25, tmp_dict_value_25);
            assert(!(tmp_res != 0));
            tmp_dict_key_26 = const_str_plain_title;
            tmp_dict_value_26 = const_str_digest_f658007037b29943eaba7a74040a02a4;
            tmp_res = PyDict_SetItem(tmp_dict_value_23, tmp_dict_key_26, tmp_dict_value_26);
            assert(!(tmp_res != 0));
            tmp_dict_key_27 = const_str_plain_thumbnail;
            tmp_dict_value_27 = const_str_digest_a4d2c749144754fcad3c1b2f9e5cb89a;
            tmp_res = PyDict_SetItem(tmp_dict_value_23, tmp_dict_key_27, tmp_dict_value_27);
            assert(!(tmp_res != 0));
            tmp_dict_key_28 = const_str_plain_duration;
            tmp_dict_value_28 = const_int_pos_216;
            tmp_res = PyDict_SetItem(tmp_dict_value_23, tmp_dict_key_28, tmp_dict_value_28);
            assert(!(tmp_res != 0));
            tmp_dict_key_29 = const_str_plain_view_count;
            tmp_dict_value_29 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_int);

            if (tmp_dict_value_29 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_dict_value_29 = (PyObject *)&PyLong_Type;
                    Py_INCREF(tmp_dict_value_29);
                }
            }

            tmp_res = PyDict_SetItem(tmp_dict_value_23, tmp_dict_key_29, tmp_dict_value_29);
            Py_DECREF(tmp_dict_value_29);
            assert(!(tmp_res != 0));
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_23, tmp_dict_value_23);
            Py_DECREF(tmp_dict_value_23);
            assert(!(tmp_res != 0));
            tmp_dict_key_30 = const_str_plain_params;
            tmp_dict_value_30 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_30, tmp_dict_value_30);
            Py_DECREF(tmp_dict_value_30);
            assert(!(tmp_res != 0));
            tmp_dict_key_31 = const_str_plain_skip;
            tmp_dict_value_31 = const_str_digest_491c18d4d47656c019d7944769adc6f4;
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_31, tmp_dict_value_31);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 86, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_3f73dcef41a3932dd3e0de08c10bc2e0);
            PyList_SET_ITEM(tmp_dictset_value, 87, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_1e4f491b99d2d15f33bc6a102801a00f);
            PyList_SET_ITEM(tmp_dictset_value, 88, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_c3150b43c4e1c1f55dde9b7749937b87);
            PyList_SET_ITEM(tmp_dictset_value, 89, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_3ff43d7f21fa9e04cb95faa1e70d5067);
            PyList_SET_ITEM(tmp_dictset_value, 90, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_bf07fa821cc5e6557db9bf90599a4e53);
            PyList_SET_ITEM(tmp_dictset_value, 91, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_6b5e983084919d72299aea32133c212f);
            PyList_SET_ITEM(tmp_dictset_value, 92, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_8a778a17d6e07c2c910977ade18b345c);
            PyList_SET_ITEM(tmp_dictset_value, 93, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_eb224df8d5ef5ac47b6b90a951bfa8e5);
            PyList_SET_ITEM(tmp_dictset_value, 94, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_ab8e598e7705f158b3ff2381fea3c4e6);
            PyList_SET_ITEM(tmp_dictset_value, 95, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_45baae835044282b4f603abb435fb259);
            PyList_SET_ITEM(tmp_dictset_value, 96, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_0b937cbc442f8ba49f40207a491b38db);
            PyList_SET_ITEM(tmp_dictset_value, 97, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_15307652e4809fba24d555585c478e4c);
            PyList_SET_ITEM(tmp_dictset_value, 98, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_a74a30cbc8750aaba5de34650bae7e09);
            PyList_SET_ITEM(tmp_dictset_value, 99, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_bd3fd1e812fda54806b6710c4c9ce206);
            PyList_SET_ITEM(tmp_dictset_value, 100, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_ebea30a7dd34fe05bfa0fd36982c79c4);
            PyList_SET_ITEM(tmp_dictset_value, 101, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_41e2465ea8d4085a54a7cb240132a5f7);
            PyList_SET_ITEM(tmp_dictset_value, 102, tmp_list_element_1);
            tmp_dict_key_32 = const_str_plain_url;
            tmp_dict_value_32 = const_str_digest_791955d87fda05583efc2b17b2970e84;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_32, tmp_dict_value_32);
            assert(!(tmp_res != 0));
            tmp_dict_key_33 = const_str_plain_md5;
            tmp_dict_value_33 = const_str_plain_7619da8c820e835bef21a1efa2a0fc71;
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_33, tmp_dict_value_33);
            assert(!(tmp_res != 0));
            tmp_dict_key_34 = const_str_plain_info_dict;
            tmp_dict_value_34 = PyDict_Copy(const_dict_aa903b1ae77fc27ae8f899569d2ed8db);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_34, tmp_dict_value_34);
            Py_DECREF(tmp_dict_value_34);
            assert(!(tmp_res != 0));
            tmp_dict_key_35 = const_str_plain_add_ie;
            tmp_called_instance_2 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_LiveLeakIE);

            if (tmp_called_instance_2 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_LiveLeakIE);

                    if (unlikely(tmp_mvar_value_5 == NULL)) {
                        tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_LiveLeakIE);
                    }

                    if (tmp_mvar_value_5 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 41593 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1594;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_2 = tmp_mvar_value_5;
                    Py_INCREF(tmp_called_instance_2);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1594;
            tmp_list_element_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_2);
            if (tmp_list_element_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1594;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_35 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_35, 0, tmp_list_element_3);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_35, tmp_dict_value_35);
            Py_DECREF(tmp_dict_value_35);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 103, tmp_list_element_1);
            tmp_dict_key_36 = const_str_plain_url;
            tmp_dict_value_36 = const_str_digest_a36c2584a7d0864024a219606f03759c;
            tmp_list_element_1 = _PyDict_NewPresized( 3 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_36, tmp_dict_value_36);
            assert(!(tmp_res != 0));
            tmp_dict_key_37 = const_str_plain_info_dict;
            tmp_dict_value_37 = PyDict_Copy(const_dict_d820768e364ca345d457d2877702b614);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_37, tmp_dict_value_37);
            Py_DECREF(tmp_dict_value_37);
            assert(!(tmp_res != 0));
            tmp_dict_key_38 = const_str_plain_add_ie;
            tmp_called_instance_3 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_LiveLeakIE);

            if (tmp_called_instance_3 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_LiveLeakIE);

                    if (unlikely(tmp_mvar_value_6 == NULL)) {
                        tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_LiveLeakIE);
                    }

                    if (tmp_mvar_value_6 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 41593 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1606;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_3 = tmp_mvar_value_6;
                    Py_INCREF(tmp_called_instance_3);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1606;
            tmp_list_element_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_3);
            if (tmp_list_element_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1606;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_38 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_38, 0, tmp_list_element_4);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_38, tmp_dict_value_38);
            Py_DECREF(tmp_dict_value_38);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 104, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_91a58bffe473ae611c11fca34d2486c2);
            PyList_SET_ITEM(tmp_dictset_value, 105, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_a5cacdfcd132753f3a32d470f328e573);
            PyList_SET_ITEM(tmp_dictset_value, 106, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_f84b2a3597a968e8f6c3c0ccf92e77a3);
            PyList_SET_ITEM(tmp_dictset_value, 107, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_dcf226a5ac7a02c877a399cbb0a5486c);
            PyList_SET_ITEM(tmp_dictset_value, 108, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_37feab975f6ff54d32872cd454c17460);
            PyList_SET_ITEM(tmp_dictset_value, 109, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_af75163ec61c339465cb29448b26598e);
            PyList_SET_ITEM(tmp_dictset_value, 110, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_158c6c97ba3f4e2d51cc7826b0e21a5d);
            PyList_SET_ITEM(tmp_dictset_value, 111, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_de123e51bfb6402429dcc2a6c79e54d8);
            PyList_SET_ITEM(tmp_dictset_value, 112, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_4f88c4419bd3067df7afd0c2b7d12a04);
            PyList_SET_ITEM(tmp_dictset_value, 113, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_673553b92e9cd1e345bab11cdd87a24b);
            PyList_SET_ITEM(tmp_dictset_value, 114, tmp_list_element_1);
            tmp_list_element_1 = PyDict_Copy(const_dict_4ab0e0e550e46281a4fb1f99312bd4e9);
            PyList_SET_ITEM(tmp_dictset_value, 115, tmp_list_element_1);
            tmp_dict_key_39 = const_str_plain_url;
            tmp_dict_value_39 = const_str_digest_8a28631be02f56a8f9d75bbeb9e5389a;
            tmp_list_element_1 = _PyDict_NewPresized( 5 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_39, tmp_dict_value_39);
            assert(!(tmp_res != 0));
            tmp_dict_key_40 = const_str_plain_md5;
            tmp_dict_value_40 = const_str_plain_b96f2f71b359a8ecd05ce4e1daa72365;
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_40, tmp_dict_value_40);
            assert(!(tmp_res != 0));
            tmp_dict_key_41 = const_str_plain_info_dict;
            tmp_dict_value_41 = PyDict_Copy(const_dict_e0f0b3cf9b2fd72dc2c143982644ac46);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_41, tmp_dict_value_41);
            Py_DECREF(tmp_dict_value_41);
            assert(!(tmp_res != 0));
            tmp_dict_key_42 = const_str_plain_params;
            tmp_dict_value_42 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_42, tmp_dict_value_42);
            Py_DECREF(tmp_dict_value_42);
            assert(!(tmp_res != 0));
            tmp_dict_key_43 = const_str_plain_add_ie;
            tmp_called_instance_4 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_ArkenaIE);

            if (tmp_called_instance_4 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ArkenaIE);

                    if (unlikely(tmp_mvar_value_7 == NULL)) {
                        tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ArkenaIE);
                    }

                    if (tmp_mvar_value_7 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 41463 ], 30, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1755;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_4 = tmp_mvar_value_7;
                    Py_INCREF(tmp_called_instance_4);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1755;
            tmp_list_element_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_4);
            if (tmp_list_element_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1755;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_43 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_43, 0, tmp_list_element_5);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_43, tmp_dict_value_43);
            Py_DECREF(tmp_dict_value_43);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 116, tmp_list_element_1);
            tmp_dict_key_44 = const_str_plain_url;
            tmp_dict_value_44 = const_str_digest_05db319212c8687c297d6b4c443b8605;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_44, tmp_dict_value_44);
            assert(!(tmp_res != 0));
            tmp_dict_key_45 = const_str_plain_info_dict;
            tmp_dict_value_45 = PyDict_Copy(const_dict_7ac3856d1dbc0be299b1217d5aaa1d3e);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_45, tmp_dict_value_45);
            Py_DECREF(tmp_dict_value_45);
            assert(!(tmp_res != 0));
            tmp_dict_key_46 = const_str_plain_params;
            tmp_dict_value_46 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_46, tmp_dict_value_46);
            Py_DECREF(tmp_dict_value_46);
            assert(!(tmp_res != 0));
            tmp_dict_key_47 = const_str_plain_add_ie;
            tmp_called_instance_5 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_Vbox7IE);

            if (tmp_called_instance_5 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_Vbox7IE);

                    if (unlikely(tmp_mvar_value_8 == NULL)) {
                        tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_Vbox7IE);
                    }

                    if (tmp_mvar_value_8 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 41658 ], 29, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1767;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_5 = tmp_mvar_value_8;
                    Py_INCREF(tmp_called_instance_5);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1767;
            tmp_list_element_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_5);
            if (tmp_list_element_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1767;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_47 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_47, 0, tmp_list_element_6);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_47, tmp_dict_value_47);
            Py_DECREF(tmp_dict_value_47);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 117, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_a7463e2d19cb9302d945bf378f94478d);
            PyList_SET_ITEM(tmp_dictset_value, 118, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_618e213ebf6ba12449005c36664de3d4);
            PyList_SET_ITEM(tmp_dictset_value, 119, tmp_list_element_1);
            tmp_dict_key_48 = const_str_plain_url;
            tmp_dict_value_48 = const_str_digest_3a1635c71a49e07692d9963a5c663628;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_48, tmp_dict_value_48);
            assert(!(tmp_res != 0));
            tmp_dict_key_49 = const_str_plain_info_dict;
            tmp_dict_value_49 = PyDict_Copy(const_dict_2ce3f9016d9fda35fff4b4a904e83499);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_49, tmp_dict_value_49);
            Py_DECREF(tmp_dict_value_49);
            assert(!(tmp_res != 0));
            tmp_dict_key_50 = const_str_plain_params;
            tmp_dict_value_50 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_50, tmp_dict_value_50);
            Py_DECREF(tmp_dict_value_50);
            assert(!(tmp_res != 0));
            tmp_dict_key_51 = const_str_plain_add_ie;
            tmp_called_instance_6 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_TwentyMinutenIE);

            if (tmp_called_instance_6 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_TwentyMinutenIE);

                    if (unlikely(tmp_mvar_value_9 == NULL)) {
                        tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_TwentyMinutenIE);
                    }

                    if (tmp_mvar_value_9 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 41744 ], 37, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1799;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_6 = tmp_mvar_value_9;
                    Py_INCREF(tmp_called_instance_6);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1799;
            tmp_list_element_7 = CALL_METHOD_NO_ARGS(tmp_called_instance_6, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_6);
            if (tmp_list_element_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1799;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_51 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_51, 0, tmp_list_element_7);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_51, tmp_dict_value_51);
            Py_DECREF(tmp_dict_value_51);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 120, tmp_list_element_1);
            tmp_dict_key_52 = const_str_plain_url;
            tmp_dict_value_52 = const_str_digest_af1659fd528373a2f74f3f0c6d3ee346;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_52, tmp_dict_value_52);
            assert(!(tmp_res != 0));
            tmp_dict_key_53 = const_str_plain_info_dict;
            tmp_dict_value_53 = PyDict_Copy(const_dict_3e6c73a91f7281279beaa30b9b4f58e0);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_53, tmp_dict_value_53);
            Py_DECREF(tmp_dict_value_53);
            assert(!(tmp_res != 0));
            tmp_dict_key_54 = const_str_plain_params;
            tmp_dict_value_54 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_54, tmp_dict_value_54);
            Py_DECREF(tmp_dict_value_54);
            assert(!(tmp_res != 0));
            tmp_dict_key_55 = const_str_plain_add_ie;
            tmp_called_instance_7 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_VideoPressIE);

            if (tmp_called_instance_7 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_VideoPressIE);

                    if (unlikely(tmp_mvar_value_10 == NULL)) {
                        tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_VideoPressIE);
                    }

                    if (tmp_mvar_value_10 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 41781 ], 34, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1814;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_7 = tmp_mvar_value_10;
                    Py_INCREF(tmp_called_instance_7);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1814;
            tmp_list_element_8 = CALL_METHOD_NO_ARGS(tmp_called_instance_7, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_7);
            if (tmp_list_element_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1814;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_55 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_55, 0, tmp_list_element_8);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_55, tmp_dict_value_55);
            Py_DECREF(tmp_dict_value_55);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 121, tmp_list_element_1);
            tmp_dict_key_56 = const_str_plain_url;
            tmp_dict_value_56 = const_str_digest_d1b6ede8c08033ced88856fee6878355;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_56, tmp_dict_value_56);
            assert(!(tmp_res != 0));
            tmp_dict_key_57 = const_str_plain_info_dict;
            tmp_dict_value_57 = PyDict_Copy(const_dict_69b1720c46d789fd6771efa984f170bb);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_57, tmp_dict_value_57);
            Py_DECREF(tmp_dict_value_57);
            assert(!(tmp_res != 0));
            tmp_dict_key_58 = const_str_plain_params;
            tmp_dict_value_58 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_58, tmp_dict_value_58);
            Py_DECREF(tmp_dict_value_58);
            assert(!(tmp_res != 0));
            tmp_dict_key_59 = const_str_plain_add_ie;
            tmp_called_instance_8 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_RutubeIE);

            if (tmp_called_instance_8 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_RutubeIE);

                    if (unlikely(tmp_mvar_value_11 == NULL)) {
                        tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_RutubeIE);
                    }

                    if (tmp_mvar_value_11 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 41815 ], 30, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1831;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_8 = tmp_mvar_value_11;
                    Py_INCREF(tmp_called_instance_8);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1831;
            tmp_list_element_9 = CALL_METHOD_NO_ARGS(tmp_called_instance_8, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_8);
            if (tmp_list_element_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1831;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_59 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_59, 0, tmp_list_element_9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_59, tmp_dict_value_59);
            Py_DECREF(tmp_dict_value_59);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 122, tmp_list_element_1);
            tmp_list_element_1 = PyDict_Copy(const_dict_4bd331e39989f460d046fd3852a172be);
            PyList_SET_ITEM(tmp_dictset_value, 123, tmp_list_element_1);
            tmp_dict_key_60 = const_str_plain_url;
            tmp_dict_value_60 = const_str_digest_09cc91ecb449feff268401d4a69c32a3;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_60, tmp_dict_value_60);
            assert(!(tmp_res != 0));
            tmp_dict_key_61 = const_str_plain_md5;
            tmp_dict_value_61 = const_str_plain_fb8c70b0b515e5037981a2492099aab8;
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_61, tmp_dict_value_61);
            assert(!(tmp_res != 0));
            tmp_dict_key_62 = const_str_plain_info_dict;
            tmp_dict_value_62 = PyDict_Copy(const_dict_f6daba7139c94abd41b35f4175718498);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_62, tmp_dict_value_62);
            Py_DECREF(tmp_dict_value_62);
            assert(!(tmp_res != 0));
            tmp_dict_key_63 = const_str_plain_add_ie;
            tmp_called_instance_9 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_SenateISVPIE);

            if (tmp_called_instance_9 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_12 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SenateISVPIE);

                    if (unlikely(tmp_mvar_value_12 == NULL)) {
                        tmp_mvar_value_12 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_SenateISVPIE);
                    }

                    if (tmp_mvar_value_12 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 38694 ], 34, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1847;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_9 = tmp_mvar_value_12;
                    Py_INCREF(tmp_called_instance_9);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1847;
            tmp_list_element_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_9, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_9);
            if (tmp_list_element_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1847;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_63 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_63, 0, tmp_list_element_10);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_63, tmp_dict_value_63);
            Py_DECREF(tmp_dict_value_63);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 124, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_8d4c6822cbc7c8439af163369961aef5);
            PyList_SET_ITEM(tmp_dictset_value, 125, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_e59e35a0f06f1a6b4cef85355f563466);
            PyList_SET_ITEM(tmp_dictset_value, 126, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_308a837c5f400ac4932d4adccf1ab5fc);
            PyList_SET_ITEM(tmp_dictset_value, 127, tmp_list_element_1);
            tmp_dict_key_64 = const_str_plain_url;
            tmp_dict_value_64 = const_str_digest_56864188a0f8a80ce9c9762928597737;
            tmp_list_element_1 = _PyDict_NewPresized( 3 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_64, tmp_dict_value_64);
            assert(!(tmp_res != 0));
            tmp_dict_key_65 = const_str_plain_info_dict;
            tmp_dict_value_65 = PyDict_Copy(const_dict_7100b4bc7a73e7204f2a5993fa2a32d2);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_65, tmp_dict_value_65);
            Py_DECREF(tmp_dict_value_65);
            assert(!(tmp_res != 0));
            tmp_dict_key_66 = const_str_plain_add_ie;
            tmp_called_instance_10 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_WashingtonPostIE);

            if (tmp_called_instance_10 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_13 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_WashingtonPostIE);

                    if (unlikely(tmp_mvar_value_13 == NULL)) {
                        tmp_mvar_value_13 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_WashingtonPostIE);
                    }

                    if (tmp_mvar_value_13 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 41845 ], 38, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1894;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_10 = tmp_mvar_value_13;
                    Py_INCREF(tmp_called_instance_10);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1894;
            tmp_list_element_11 = CALL_METHOD_NO_ARGS(tmp_called_instance_10, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_10);
            if (tmp_list_element_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1894;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_66 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_66, 0, tmp_list_element_11);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_66, tmp_dict_value_66);
            Py_DECREF(tmp_dict_value_66);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 128, tmp_list_element_1);
            tmp_dict_key_67 = const_str_plain_url;
            tmp_dict_value_67 = const_str_digest_b5061698744415402217ae7720992509;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_67, tmp_dict_value_67);
            assert(!(tmp_res != 0));
            tmp_dict_key_68 = const_str_plain_info_dict;
            tmp_dict_value_68 = PyDict_Copy(const_dict_f28b1338da9c65b9f19c9788ff1c95d7);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_68, tmp_dict_value_68);
            Py_DECREF(tmp_dict_value_68);
            assert(!(tmp_res != 0));
            tmp_dict_key_69 = const_str_plain_params;
            tmp_dict_value_69 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_69, tmp_dict_value_69);
            Py_DECREF(tmp_dict_value_69);
            assert(!(tmp_res != 0));
            tmp_dict_key_70 = const_str_plain_add_ie;
            tmp_called_instance_11 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_MediasetIE);

            if (tmp_called_instance_11 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_14 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_MediasetIE);

                    if (unlikely(tmp_mvar_value_14 == NULL)) {
                        tmp_mvar_value_14 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_MediasetIE);
                    }

                    if (tmp_mvar_value_14 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 41883 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1907;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_11 = tmp_mvar_value_14;
                    Py_INCREF(tmp_called_instance_11);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1907;
            tmp_list_element_12 = CALL_METHOD_NO_ARGS(tmp_called_instance_11, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_11);
            if (tmp_list_element_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1907;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_70 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_70, 0, tmp_list_element_12);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_70, tmp_dict_value_70);
            Py_DECREF(tmp_dict_value_70);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 129, tmp_list_element_1);
            tmp_dict_key_71 = const_str_plain_url;
            tmp_dict_value_71 = const_str_digest_0fadfe3a753cc56195cbf19c803f7bbd;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_71, tmp_dict_value_71);
            assert(!(tmp_res != 0));
            tmp_dict_key_72 = const_str_plain_info_dict;
            tmp_dict_value_72 = PyDict_Copy(const_dict_5827c5ecc400c49109f32a62882db2a0);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_72, tmp_dict_value_72);
            Py_DECREF(tmp_dict_value_72);
            assert(!(tmp_res != 0));
            tmp_dict_key_73 = const_str_plain_playlist_mincount;
            tmp_dict_value_73 = const_int_pos_5;
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_73, tmp_dict_value_73);
            assert(!(tmp_res != 0));
            tmp_dict_key_74 = const_str_plain_add_ie;
            tmp_called_instance_12 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_JojIE);

            if (tmp_called_instance_12 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_15 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_JojIE);

                    if (unlikely(tmp_mvar_value_15 == NULL)) {
                        tmp_mvar_value_15 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_JojIE);
                    }

                    if (tmp_mvar_value_15 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 41915 ], 27, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1917;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_12 = tmp_mvar_value_15;
                    Py_INCREF(tmp_called_instance_12);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1917;
            tmp_list_element_13 = CALL_METHOD_NO_ARGS(tmp_called_instance_12, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_12);
            if (tmp_list_element_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1917;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_74 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_74, 0, tmp_list_element_13);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_74, tmp_dict_value_74);
            Py_DECREF(tmp_dict_value_74);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 130, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_f9165eb7de202cdec4eb276e86232628);
            PyList_SET_ITEM(tmp_dictset_value, 131, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_09df46e309378c6aab4c5ab547b02b5c);
            PyList_SET_ITEM(tmp_dictset_value, 132, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_9bea9a3b2145a4e23828693d060f2287);
            PyList_SET_ITEM(tmp_dictset_value, 133, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_005c30125e8a38a6502d60ede62c7abb);
            PyList_SET_ITEM(tmp_dictset_value, 134, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_bb67b1f334927b1a46c88dc2eb85a8e8);
            PyList_SET_ITEM(tmp_dictset_value, 135, tmp_list_element_1);
            tmp_dict_key_75 = const_str_plain_url;
            tmp_dict_value_75 = const_str_digest_aef3fb0bc082634b4f30f315f7ee5e10;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_75, tmp_dict_value_75);
            assert(!(tmp_res != 0));
            tmp_dict_key_76 = const_str_plain_info_dict;
            tmp_dict_value_76 = PyDict_Copy(const_dict_ccf59e832d8e20a337d688736af13867);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_76, tmp_dict_value_76);
            Py_DECREF(tmp_dict_value_76);
            assert(!(tmp_res != 0));
            tmp_dict_key_77 = const_str_plain_params;
            tmp_dict_value_77 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_77, tmp_dict_value_77);
            Py_DECREF(tmp_dict_value_77);
            assert(!(tmp_res != 0));
            tmp_dict_key_78 = const_str_plain_add_ie;
            tmp_called_instance_13 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_SpringboardPlatformIE);

            if (tmp_called_instance_13 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_16 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_SpringboardPlatformIE);

                    if (unlikely(tmp_mvar_value_16 == NULL)) {
                        tmp_mvar_value_16 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_SpringboardPlatformIE);
                    }

                    if (tmp_mvar_value_16 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 42099 ], 43, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1983;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_13 = tmp_mvar_value_16;
                    Py_INCREF(tmp_called_instance_13);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1983;
            tmp_list_element_14 = CALL_METHOD_NO_ARGS(tmp_called_instance_13, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_13);
            if (tmp_list_element_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1983;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_78 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_78, 0, tmp_list_element_14);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_78, tmp_dict_value_78);
            Py_DECREF(tmp_dict_value_78);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 136, tmp_list_element_1);
            tmp_dict_key_79 = const_str_plain_url;
            tmp_dict_value_79 = const_str_digest_5276f0f6f31d9150609eb3d935cc501f;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_79, tmp_dict_value_79);
            assert(!(tmp_res != 0));
            tmp_dict_key_80 = const_str_plain_info_dict;
            tmp_dict_value_80 = PyDict_Copy(const_dict_30c00b7d5776426067ac91b773d09d66);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_80, tmp_dict_value_80);
            Py_DECREF(tmp_dict_value_80);
            assert(!(tmp_res != 0));
            tmp_dict_key_81 = const_str_plain_add_ie;
            tmp_called_instance_14 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_YoutubeIE);

            if (tmp_called_instance_14 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_17 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YoutubeIE);

                    if (unlikely(tmp_mvar_value_17 == NULL)) {
                        tmp_mvar_value_17 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_YoutubeIE);
                    }

                    if (tmp_mvar_value_17 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 33686 ], 31, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 1996;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_14 = tmp_mvar_value_17;
                    Py_INCREF(tmp_called_instance_14);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 1996;
            tmp_list_element_15 = CALL_METHOD_NO_ARGS(tmp_called_instance_14, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_14);
            if (tmp_list_element_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 1996;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_81 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_81, 0, tmp_list_element_15);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_81, tmp_dict_value_81);
            Py_DECREF(tmp_dict_value_81);
            assert(!(tmp_res != 0));
            tmp_dict_key_82 = const_str_plain_params;
            tmp_dict_value_82 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_82, tmp_dict_value_82);
            Py_DECREF(tmp_dict_value_82);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 137, tmp_list_element_1);
            tmp_dict_key_83 = const_str_plain_url;
            tmp_dict_value_83 = const_str_digest_462d7fb7109912b879e6ebddb200e3ae;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_83, tmp_dict_value_83);
            assert(!(tmp_res != 0));
            tmp_dict_key_84 = const_str_plain_info_dict;
            tmp_dict_value_84 = PyDict_Copy(const_dict_c4727d1b37562a12e3bc7c7116f5997d);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_84, tmp_dict_value_84);
            Py_DECREF(tmp_dict_value_84);
            assert(!(tmp_res != 0));
            tmp_dict_key_85 = const_str_plain_add_ie;
            tmp_called_instance_15 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_YapFilesIE);

            if (tmp_called_instance_15 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_18 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_YapFilesIE);

                    if (unlikely(tmp_mvar_value_18 == NULL)) {
                        tmp_mvar_value_18 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_YapFilesIE);
                    }

                    if (tmp_mvar_value_18 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 42142 ], 32, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 2008;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_15 = tmp_mvar_value_18;
                    Py_INCREF(tmp_called_instance_15);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 2008;
            tmp_list_element_16 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_15);
            if (tmp_list_element_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 2008;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_85 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_85, 0, tmp_list_element_16);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_85, tmp_dict_value_85);
            Py_DECREF(tmp_dict_value_85);
            assert(!(tmp_res != 0));
            tmp_dict_key_86 = const_str_plain_params;
            tmp_dict_value_86 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_86, tmp_dict_value_86);
            Py_DECREF(tmp_dict_value_86);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 138, tmp_list_element_1);
            tmp_dict_key_87 = const_str_plain_url;
            tmp_dict_value_87 = const_str_digest_43a59acb3111c87b0f852afd459d9150;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_87, tmp_dict_value_87);
            assert(!(tmp_res != 0));
            tmp_dict_key_88 = const_str_plain_info_dict;
            tmp_dict_value_88 = PyDict_Copy(const_dict_e99f4b2dbc7ffeb936cdad99e826bd5b);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_88, tmp_dict_value_88);
            Py_DECREF(tmp_dict_value_88);
            assert(!(tmp_res != 0));
            tmp_dict_key_89 = const_str_plain_add_ie;
            tmp_called_instance_16 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_CloudflareStreamIE);

            if (tmp_called_instance_16 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_19 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_CloudflareStreamIE);

                    if (unlikely(tmp_mvar_value_19 == NULL)) {
                        tmp_mvar_value_19 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_CloudflareStreamIE);
                    }

                    if (tmp_mvar_value_19 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 37781 ], 40, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 2021;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_16 = tmp_mvar_value_19;
                    Py_INCREF(tmp_called_instance_16);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 2021;
            tmp_list_element_17 = CALL_METHOD_NO_ARGS(tmp_called_instance_16, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_16);
            if (tmp_list_element_17 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 2021;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_89 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_89, 0, tmp_list_element_17);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_89, tmp_dict_value_89);
            Py_DECREF(tmp_dict_value_89);
            assert(!(tmp_res != 0));
            tmp_dict_key_90 = const_str_plain_params;
            tmp_dict_value_90 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_90, tmp_dict_value_90);
            Py_DECREF(tmp_dict_value_90);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 139, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_3c161d66ffe02888084fe50e004c5b88);
            PyList_SET_ITEM(tmp_dictset_value, 140, tmp_list_element_1);
            tmp_dict_key_91 = const_str_plain_url;
            tmp_dict_value_91 = const_str_digest_f876970bac726ed574f0c96d3053998c;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_91, tmp_dict_value_91);
            assert(!(tmp_res != 0));
            tmp_dict_key_92 = const_str_plain_info_dict;
            tmp_dict_value_92 = PyDict_Copy(const_dict_32d9dec00a802b8702519f1dbe268cee);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_92, tmp_dict_value_92);
            Py_DECREF(tmp_dict_value_92);
            assert(!(tmp_res != 0));
            tmp_dict_key_93 = const_str_plain_add_ie;
            tmp_called_instance_17 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_IndavideoEmbedIE);

            if (tmp_called_instance_17 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_20 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_IndavideoEmbedIE);

                    if (unlikely(tmp_mvar_value_20 == NULL)) {
                        tmp_mvar_value_20 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_IndavideoEmbedIE);
                    }

                    if (tmp_mvar_value_20 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 42268 ], 38, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 2048;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_17 = tmp_mvar_value_20;
                    Py_INCREF(tmp_called_instance_17);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 2048;
            tmp_list_element_18 = CALL_METHOD_NO_ARGS(tmp_called_instance_17, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_17);
            if (tmp_list_element_18 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 2048;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_93 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_93, 0, tmp_list_element_18);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_93, tmp_dict_value_93);
            Py_DECREF(tmp_dict_value_93);
            assert(!(tmp_res != 0));
            tmp_dict_key_94 = const_str_plain_params;
            tmp_dict_value_94 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_94, tmp_dict_value_94);
            Py_DECREF(tmp_dict_value_94);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 141, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_4563d5a3b181fa5f839d58c6b168f899);
            PyList_SET_ITEM(tmp_dictset_value, 142, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_0ea5f75e75e10e7b9648682aedd616c1);
            PyList_SET_ITEM(tmp_dictset_value, 143, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_e0502ef49b973b3354e226f366a11e97);
            PyList_SET_ITEM(tmp_dictset_value, 144, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_b28ab674c28220303d06a21f26fee41c);
            PyList_SET_ITEM(tmp_dictset_value, 145, tmp_list_element_1);
            tmp_dict_key_95 = const_str_plain_url;
            tmp_dict_value_95 = const_str_digest_1a4bdd5a263046bdb3d714c6c5696a43;
            tmp_list_element_1 = _PyDict_NewPresized( 4 );
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_95, tmp_dict_value_95);
            assert(!(tmp_res != 0));
            tmp_dict_key_96 = const_str_plain_info_dict;
            tmp_dict_value_96 = PyDict_Copy(const_dict_83a0f6699a28066ac8d63e53b392da56);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_96, tmp_dict_value_96);
            Py_DECREF(tmp_dict_value_96);
            assert(!(tmp_res != 0));
            tmp_dict_key_97 = const_str_plain_add_ie;
            tmp_called_instance_18 = PyObject_GetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_ZypeIE);

            if (tmp_called_instance_18 == NULL) {
                if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                    tmp_mvar_value_21 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_ZypeIE);

                    if (unlikely(tmp_mvar_value_21 == NULL)) {
                        tmp_mvar_value_21 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_ZypeIE);
                    }

                    if (tmp_mvar_value_21 == NULL) {
                        Py_DECREF(tmp_dictset_value);
                        Py_DECREF(tmp_list_element_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 42395 ], 28, 0);
                        exception_tb = NULL;
                        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        CHAIN_EXCEPTION(exception_value);

                        exception_lineno = 2117;
                        type_description_2 = "o";
                        goto frame_exception_exit_2;
                    }

                    tmp_called_instance_18 = tmp_mvar_value_21;
                    Py_INCREF(tmp_called_instance_18);
                }
            }

            frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame.f_lineno = 2117;
            tmp_list_element_19 = CALL_METHOD_NO_ARGS(tmp_called_instance_18, const_str_plain_ie_key);
            Py_DECREF(tmp_called_instance_18);
            if (tmp_list_element_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dictset_value);
                Py_DECREF(tmp_list_element_1);

                exception_lineno = 2117;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
            tmp_dict_value_97 = PyList_New(1);
            PyList_SET_ITEM(tmp_dict_value_97, 0, tmp_list_element_19);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_97, tmp_dict_value_97);
            Py_DECREF(tmp_dict_value_97);
            assert(!(tmp_res != 0));
            tmp_dict_key_98 = const_str_plain_params;
            tmp_dict_value_98 = PyDict_Copy(const_dict_103060a01178013f42f2e88af81fc8c9);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_98, tmp_dict_value_98);
            Py_DECREF(tmp_dict_value_98);
            assert(!(tmp_res != 0));
            PyList_SET_ITEM(tmp_dictset_value, 146, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_2c72d15872a83757552ca44de097f52a);
            PyList_SET_ITEM(tmp_dictset_value, 147, tmp_list_element_1);
            tmp_list_element_1 = DEEP_COPY(const_dict_c32ce3171e2ef2db3b1ad7fbf51f7916);
            PyList_SET_ITEM(tmp_dictset_value, 148, tmp_list_element_1);
            tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic_124, const_str_plain__TESTS, tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 128;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
        }
        tmp_dictset_value = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_1_report_following_redirect();



        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic_124, const_str_plain_report_following_redirect, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2173;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }
        tmp_dictset_value = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_2__extract_rss();



        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic_124, const_str_plain__extract_rss, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2177;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }
        tmp_dictset_value = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_3__extract_camtasia();



        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic_124, const_str_plain__extract_camtasia, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2211;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }
        tmp_dictset_value = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function_4__real_extract();



        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic_124, const_str_plain__real_extract, tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2248;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_336043124f5c4cc3ccd5b77a6f1df793_2);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_1;

        frame_exception_exit_2:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_336043124f5c4cc3ccd5b77a6f1df793_2);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_336043124f5c4cc3ccd5b77a6f1df793_2, exception_lineno);
        } else if (exception_tb->tb_frame != &frame_336043124f5c4cc3ccd5b77a6f1df793_2->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_336043124f5c4cc3ccd5b77a6f1df793_2, exception_lineno);
        }

        // Attachs locals to frame if any.
        Nuitka_Frame_AttachLocals(
            frame_336043124f5c4cc3ccd5b77a6f1df793_2,
            type_description_2,
            outline_0_var___class__
        );


        // Release cached frame.
        if (frame_336043124f5c4cc3ccd5b77a6f1df793_2 == cache_frame_336043124f5c4cc3ccd5b77a6f1df793_2) {
#if _DEBUG_REFCOUNTS
            count_active_frame_cache_instances -= 1;
            count_released_frame_cache_instances += 1;
#endif

            Py_DECREF(frame_336043124f5c4cc3ccd5b77a6f1df793_2);
        }
        cache_frame_336043124f5c4cc3ccd5b77a6f1df793_2 = NULL;

        assertFrameObject(frame_336043124f5c4cc3ccd5b77a6f1df793_2);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_1;

        frame_no_exception_1:;
        goto skip_nested_handling_1;
        nested_frame_exit_1:;

        goto try_except_handler_7;
        skip_nested_handling_1:;
        {
            nuitka_bool tmp_condition_result_6;
            PyObject *tmp_compexpr_left_1;
            PyObject *tmp_compexpr_right_1;
            CHECK_OBJECT(tmp_class_creation_1__bases);
            tmp_compexpr_left_1 = tmp_class_creation_1__bases;
            CHECK_OBJECT(tmp_class_creation_1__bases_orig);
            tmp_compexpr_right_1 = tmp_class_creation_1__bases_orig;
            tmp_condition_result_6 = RICH_COMPARE_NE_NBOOL_OBJECT_TUPLE(tmp_compexpr_left_1, tmp_compexpr_right_1);
            if (tmp_condition_result_6 == NUITKA_BOOL_EXCEPTION) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 124;

                goto try_except_handler_7;
            }
            if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                goto branch_yes_4;
            } else {
                goto branch_no_4;
            }
        }
        branch_yes_4:;
        CHECK_OBJECT(tmp_class_creation_1__bases_orig);
        tmp_dictset_value = tmp_class_creation_1__bases_orig;
        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic_124, const_str_plain___orig_bases__, tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto try_except_handler_7;
        }
        branch_no_4:;
        {
            PyObject *tmp_assign_source_124;
            PyObject *tmp_called_name_2;
            PyObject *tmp_args_name_2;
            PyObject *tmp_tuple_element_4;
            PyObject *tmp_kw_name_2;
            CHECK_OBJECT(tmp_class_creation_1__metaclass);
            tmp_called_name_2 = tmp_class_creation_1__metaclass;
            tmp_tuple_element_4 = const_str_plain_GenericIE;
            tmp_args_name_2 = PyTuple_New(3);
            Py_INCREF(tmp_tuple_element_4);
            PyTuple_SET_ITEM(tmp_args_name_2, 0, tmp_tuple_element_4);
            CHECK_OBJECT(tmp_class_creation_1__bases);
            tmp_tuple_element_4 = tmp_class_creation_1__bases;
            Py_INCREF(tmp_tuple_element_4);
            PyTuple_SET_ITEM(tmp_args_name_2, 1, tmp_tuple_element_4);
            tmp_tuple_element_4 = locals_youtube_dl$extractor$generic_124;
            Py_INCREF(tmp_tuple_element_4);
            PyTuple_SET_ITEM(tmp_args_name_2, 2, tmp_tuple_element_4);
            CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
            tmp_kw_name_2 = tmp_class_creation_1__class_decl_dict;
            frame_0aeec350a7dfbe2e690d0521ad144459->m_frame.f_lineno = 124;
            tmp_assign_source_124 = CALL_FUNCTION(tmp_called_name_2, tmp_args_name_2, tmp_kw_name_2);
            Py_DECREF(tmp_args_name_2);
            if (tmp_assign_source_124 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 124;

                goto try_except_handler_7;
            }
            assert(outline_0_var___class__ == NULL);
            outline_0_var___class__ = tmp_assign_source_124;
        }
        CHECK_OBJECT(outline_0_var___class__);
        tmp_assign_source_123 = outline_0_var___class__;
        Py_INCREF(tmp_assign_source_123);
        goto try_return_handler_7;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_7:;
        Py_DECREF(locals_youtube_dl$extractor$generic_124);
        locals_youtube_dl$extractor$generic_124 = NULL;
        goto try_return_handler_6;
        // Exception handler code:
        try_except_handler_7:;
        exception_keeper_type_5 = exception_type;
        exception_keeper_value_5 = exception_value;
        exception_keeper_tb_5 = exception_tb;
        exception_keeper_lineno_5 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_youtube_dl$extractor$generic_124);
        locals_youtube_dl$extractor$generic_124 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_5;
        exception_value = exception_keeper_value_5;
        exception_tb = exception_keeper_tb_5;
        exception_lineno = exception_keeper_lineno_5;

        goto try_except_handler_6;
        // End of try:
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_6:;
        CHECK_OBJECT(outline_0_var___class__);
        Py_DECREF(outline_0_var___class__);
        outline_0_var___class__ = NULL;

        goto outline_result_1;
        // Exception handler code:
        try_except_handler_6:;
        exception_keeper_type_6 = exception_type;
        exception_keeper_value_6 = exception_value;
        exception_keeper_tb_6 = exception_tb;
        exception_keeper_lineno_6 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_6;
        exception_value = exception_keeper_value_6;
        exception_tb = exception_keeper_tb_6;
        exception_lineno = exception_keeper_lineno_6;

        goto outline_exception_1;
        // End of try:
        NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
        return NULL;
        outline_exception_1:;
        exception_lineno = 124;
        goto try_except_handler_5;
        outline_result_1:;
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain_GenericIE, tmp_assign_source_123);
    }
    goto try_end_5;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_7 = exception_type;
    exception_keeper_value_7 = exception_value;
    exception_keeper_tb_7 = exception_tb;
    exception_keeper_lineno_7 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_class_creation_1__bases_orig);
    tmp_class_creation_1__bases_orig = NULL;

    Py_XDECREF(tmp_class_creation_1__bases);
    tmp_class_creation_1__bases = NULL;

    Py_XDECREF(tmp_class_creation_1__class_decl_dict);
    tmp_class_creation_1__class_decl_dict = NULL;

    Py_XDECREF(tmp_class_creation_1__metaclass);
    tmp_class_creation_1__metaclass = NULL;

    Py_XDECREF(tmp_class_creation_1__prepared);
    tmp_class_creation_1__prepared = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_7;
    exception_value = exception_keeper_value_7;
    exception_tb = exception_keeper_tb_7;
    exception_lineno = exception_keeper_lineno_7;

    goto frame_exception_exit_1;
    // End of try:
    try_end_5:;

    // Restore frame exception if necessary.
#if 0
    RESTORE_FRAME_EXCEPTION(frame_0aeec350a7dfbe2e690d0521ad144459);
#endif
    popFrameStack();

    assertFrameObject(frame_0aeec350a7dfbe2e690d0521ad144459);

    goto frame_no_exception_2;

    frame_exception_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_0aeec350a7dfbe2e690d0521ad144459);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_0aeec350a7dfbe2e690d0521ad144459, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_0aeec350a7dfbe2e690d0521ad144459->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_0aeec350a7dfbe2e690d0521ad144459, exception_lineno);
    }

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto module_exception_exit;

    frame_no_exception_2:;
    CHECK_OBJECT(tmp_class_creation_1__bases_orig);
    Py_DECREF(tmp_class_creation_1__bases_orig);
    tmp_class_creation_1__bases_orig = NULL;

    CHECK_OBJECT(tmp_class_creation_1__bases);
    Py_DECREF(tmp_class_creation_1__bases);
    tmp_class_creation_1__bases = NULL;

    CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
    Py_DECREF(tmp_class_creation_1__class_decl_dict);
    tmp_class_creation_1__class_decl_dict = NULL;

    CHECK_OBJECT(tmp_class_creation_1__metaclass);
    Py_DECREF(tmp_class_creation_1__metaclass);
    tmp_class_creation_1__metaclass = NULL;

    CHECK_OBJECT(tmp_class_creation_1__prepared);
    Py_DECREF(tmp_class_creation_1__prepared);
    tmp_class_creation_1__prepared = NULL;


    return module_youtube_dl$extractor$generic;
    module_exception_exit:
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);
    return NULL;
}
